

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 24 18:33:01 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    16                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    26                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    27                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1
   166                           	psect	text134,global,reloc=2,class=CODE,delta=1
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1
   177                           	psect	text145,global,reloc=2,class=CODE,delta=1
   178                           	psect	text146,global,reloc=2,class=CODE,delta=1
   179                           	psect	text147,global,reloc=2,class=CODE,delta=1
   180                           	psect	text148,global,reloc=2,class=CODE,delta=1
   181                           	psect	text149,global,reloc=2,class=CODE,delta=1
   182                           	psect	text150,global,reloc=2,class=CODE,delta=1
   183                           	psect	text151,global,reloc=2,class=CODE,delta=1
   184                           	psect	text152,global,reloc=2,class=CODE,delta=1
   185                           	psect	text153,global,reloc=2,class=CODE,delta=1
   186                           	psect	text154,global,reloc=2,class=CODE,delta=1
   187                           	psect	text155,global,reloc=2,class=CODE,delta=1
   188                           	psect	text156,global,reloc=2,class=CODE,delta=1
   189                           	psect	text157,global,reloc=2,class=CODE,delta=1
   190                           	psect	text158,global,reloc=2,class=CODE,delta=1
   191                           	psect	text159,global,reloc=2,class=CODE,delta=1
   192                           	psect	text160,global,reloc=2,class=CODE,delta=1
   193                           	psect	text161,global,reloc=2,class=CODE,delta=1
   194                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text163,global,reloc=2,class=CODE,delta=1
   196                           	psect	text164,global,reloc=2,class=CODE,delta=1
   197                           	psect	text165,global,reloc=2,class=CODE,delta=1
   198                           	psect	text166,global,reloc=2,class=CODE,delta=1
   199                           	psect	text167,global,reloc=2,class=CODE,delta=1
   200                           	psect	text168,global,reloc=2,class=CODE,delta=1
   201                           	psect	text169,global,reloc=2,class=CODE,delta=1
   202                           	psect	text170,global,reloc=2,class=CODE,delta=1
   203                           	psect	text171,global,reloc=2,class=CODE,delta=1
   204                           	psect	text172,global,reloc=2,class=CODE,delta=1
   205                           	psect	text173,global,reloc=2,class=CODE,delta=1
   206                           	psect	text174,global,reloc=2,class=CODE,delta=1
   207                           	psect	text175,global,reloc=2,class=CODE,delta=1
   208                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   209                           	psect	text177,global,reloc=2,class=CODE,delta=1
   210                           	psect	text178,global,reloc=2,class=CODE,delta=1
   211                           	psect	text179,global,reloc=2,class=CODE,delta=1
   212                           	psect	text180,global,reloc=2,class=CODE,delta=1
   213                           	psect	text181,global,reloc=2,class=CODE,delta=1
   214                           	psect	text182,global,reloc=2,class=CODE,delta=1
   215                           	psect	text183,global,reloc=2,class=CODE,delta=1
   216                           	psect	text184,global,reloc=2,class=CODE,delta=1
   217                           	psect	text185,global,reloc=2,class=CODE,delta=1
   218                           	psect	text186,global,reloc=2,class=CODE,delta=1
   219                           	psect	text187,global,reloc=2,class=CODE,delta=1
   220                           	psect	text188,global,reloc=2,class=CODE,delta=1
   221                           	psect	text189,global,reloc=2,class=CODE,delta=1
   222                           	psect	text190,global,reloc=2,class=CODE,delta=1
   223                           	psect	text191,global,reloc=2,class=CODE,delta=1
   224                           	psect	text192,global,reloc=2,class=CODE,delta=1
   225                           	psect	text193,global,reloc=2,class=CODE,delta=1
   226                           	psect	text194,global,reloc=2,class=CODE,delta=1
   227                           	psect	text195,global,reloc=2,class=CODE,delta=1
   228                           	psect	text196,global,reloc=2,class=CODE,delta=1
   229                           	psect	text197,global,reloc=2,class=CODE,delta=1
   230                           	psect	text198,global,reloc=2,class=CODE,delta=1
   231                           	psect	text199,global,reloc=2,class=CODE,delta=1
   232                           	psect	text200,global,reloc=2,class=CODE,delta=1
   233                           	psect	text201,global,reloc=2,class=CODE,delta=1
   234                           	psect	text202,global,reloc=2,class=CODE,delta=1
   235                           	psect	text203,global,reloc=2,class=CODE,delta=1
   236                           	psect	text204,global,reloc=2,class=CODE,delta=1
   237                           	psect	text205,global,reloc=2,class=CODE,delta=1
   238                           	psect	text206,global,reloc=2,class=CODE,delta=1
   239                           	psect	text207,global,reloc=2,class=CODE,delta=1
   240                           	psect	text208,global,reloc=2,class=CODE,delta=1,group=1
   241                           	psect	text209,global,reloc=2,class=CODE,delta=1
   242                           	psect	text210,global,reloc=2,class=CODE,delta=1
   243                           	psect	text211,global,reloc=2,class=CODE,delta=1
   244                           	psect	text212,global,reloc=2,class=CODE,delta=1
   245                           	psect	text213,global,reloc=2,class=CODE,delta=1
   246                           	psect	text214,global,reloc=2,class=CODE,delta=1
   247                           	psect	text215,global,reloc=2,class=CODE,delta=1
   248                           	psect	text216,global,reloc=2,class=CODE,delta=1
   249                           	psect	text217,global,reloc=2,class=CODE,delta=1
   250                           	psect	text218,global,reloc=2,class=CODE,delta=1
   251                           	psect	text219,global,reloc=2,class=CODE,delta=1
   252                           	psect	text220,global,reloc=2,class=CODE,delta=1
   253                           	psect	text221,global,reloc=2,class=CODE,delta=1
   254                           	psect	text222,global,reloc=2,class=CODE,delta=1
   255                           	psect	text223,global,reloc=2,class=CODE,delta=1
   256                           	psect	text224,global,reloc=2,class=CODE,delta=1
   257                           	psect	text225,global,reloc=2,class=CODE,delta=1
   258                           	psect	text226,global,reloc=2,class=CODE,delta=1
   259                           	psect	text227,global,reloc=2,class=CODE,delta=1
   260                           	psect	text228,global,reloc=2,class=CODE,delta=1
   261                           	psect	text229,global,reloc=2,class=CODE,delta=1
   262                           	psect	text230,global,reloc=2,class=CODE,delta=1
   263                           	psect	text231,global,reloc=2,class=CODE,delta=1
   264                           	psect	text232,global,reloc=2,class=CODE,delta=1
   265                           	psect	text233,global,reloc=2,class=CODE,delta=1
   266                           	psect	text234,global,reloc=2,class=CODE,delta=1
   267                           	psect	text235,global,reloc=2,class=CODE,delta=1
   268                           	psect	text236,global,reloc=2,class=CODE,delta=1
   269                           	psect	text237,global,reloc=2,class=CODE,delta=1
   270                           	psect	text238,global,reloc=2,class=CODE,delta=1
   271                           	psect	text239,global,reloc=2,class=CODE,delta=1
   272                           	psect	text240,global,reloc=2,class=CODE,delta=1
   273                           	psect	text241,global,reloc=2,class=CODE,delta=1
   274                           	psect	text242,global,reloc=2,class=CODE,delta=1
   275                           	psect	text243,global,reloc=2,class=CODE,delta=1
   276                           	psect	text244,global,reloc=2,class=CODE,delta=1
   277                           	psect	text245,global,reloc=2,class=CODE,delta=1
   278                           	psect	text246,global,reloc=2,class=CODE,delta=1
   279                           	psect	text247,global,reloc=2,class=CODE,delta=1
   280                           	psect	text248,global,reloc=2,class=CODE,delta=1
   281                           	psect	text249,global,reloc=2,class=CODE,delta=1
   282                           	psect	text250,global,reloc=2,class=CODE,delta=1
   283                           	psect	text251,global,reloc=2,class=CODE,delta=1
   284                           	psect	text252,global,reloc=2,class=CODE,delta=1,group=1
   285                           	psect	text253,global,reloc=2,class=CODE,delta=1,group=1
   286                           	psect	text254,global,reloc=2,class=CODE,delta=1
   287                           	psect	text255,global,reloc=2,class=CODE,delta=1
   288                           	psect	text256,global,reloc=2,class=CODE,delta=1
   289                           	psect	text257,global,reloc=2,class=CODE,delta=1
   290                           	psect	text258,global,reloc=2,class=CODE,delta=1
   291                           	psect	text259,global,reloc=2,class=CODE,delta=1
   292                           	psect	text260,global,reloc=2,class=CODE,delta=1
   293                           	psect	text261,global,reloc=2,class=CODE,delta=1
   294                           	psect	text262,global,reloc=2,class=CODE,delta=1
   295                           	psect	text263,global,reloc=2,class=CODE,delta=1,group=1
   296                           	psect	text264,global,reloc=2,class=CODE,delta=1
   297                           	psect	text265,global,reloc=2,class=CODE,delta=1
   298                           	psect	text266,global,reloc=2,class=CODE,delta=1
   299                           	psect	text267,global,reloc=2,class=CODE,delta=1
   300                           	psect	text268,global,reloc=2,class=CODE,delta=1
   301                           	psect	text269,global,reloc=2,class=CODE,delta=1
   302                           	psect	text270,global,reloc=2,class=CODE,delta=1
   303                           	psect	text271,global,reloc=2,class=CODE,delta=1
   304                           	psect	text272,global,reloc=2,class=CODE,delta=1
   305                           	psect	text273,global,reloc=2,class=CODE,delta=1
   306                           	psect	text274,global,reloc=2,class=CODE,delta=1
   307                           	psect	text275,global,reloc=2,class=CODE,delta=1
   308                           	psect	text276,global,reloc=2,class=CODE,delta=1,group=1
   309                           	psect	text277,global,reloc=2,class=CODE,delta=1
   310                           	psect	text278,global,reloc=2,class=CODE,delta=1
   311                           	psect	text279,global,reloc=2,class=CODE,delta=1
   312                           	psect	text280,global,reloc=2,class=CODE,delta=1
   313                           	psect	text281,global,reloc=2,class=CODE,delta=1
   314                           	psect	text282,global,reloc=2,class=CODE,delta=1
   315                           	psect	text283,global,reloc=2,class=CODE,delta=1
   316                           	psect	text284,global,reloc=2,class=CODE,delta=1
   317                           	psect	text285,global,reloc=2,class=CODE,delta=1
   318                           	psect	text286,global,reloc=2,class=CODE,delta=1
   319                           	psect	text287,global,reloc=2,class=CODE,delta=1
   320                           	psect	text288,global,reloc=2,class=CODE,delta=1,group=1
   321                           	psect	text289,global,reloc=2,class=CODE,delta=1,group=1
   322                           	psect	text290,global,reloc=2,class=CODE,delta=1
   323                           	psect	text291,global,reloc=2,class=CODE,delta=1
   324                           	psect	text292,global,reloc=2,class=CODE,delta=1
   325                           	psect	text293,global,reloc=2,class=CODE,delta=1
   326                           	psect	text294,global,reloc=2,class=CODE,delta=1
   327                           	psect	text295,global,reloc=2,class=CODE,delta=1
   328                           	psect	text296,global,reloc=2,class=CODE,delta=1
   329                           	psect	text297,global,reloc=2,class=CODE,delta=1
   330                           	psect	text298,global,reloc=2,class=CODE,delta=1
   331                           	psect	text299,global,reloc=2,class=CODE,delta=1
   332                           	psect	text300,global,reloc=2,class=CODE,delta=1
   333                           	psect	text301,global,reloc=2,class=CODE,delta=1,group=1
   334                           	psect	text302,global,reloc=2,class=CODE,delta=1,group=1
   335                           	psect	text303,global,reloc=2,class=CODE,delta=1
   336                           	psect	text304,global,reloc=2,class=CODE,delta=1
   337                           	psect	text305,global,reloc=2,class=CODE,delta=1
   338                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   339                           	psect	text307,global,reloc=2,class=CODE,delta=1
   340                           	psect	text308,global,reloc=2,class=CODE,delta=1
   341                           	psect	text309,global,reloc=2,class=CODE,delta=1
   342                           	psect	text310,global,reloc=2,class=CODE,delta=1
   343                           	psect	text311,global,reloc=2,class=CODE,delta=1
   344                           	psect	text312,global,reloc=2,class=CODE,delta=1
   345                           	psect	text313,global,reloc=2,class=CODE,delta=1
   346                           	psect	text314,global,reloc=2,class=CODE,delta=1
   347                           	psect	text315,global,reloc=2,class=CODE,delta=1
   348                           	psect	text316,global,reloc=2,class=CODE,delta=1
   349                           	psect	text317,global,reloc=2,class=CODE,delta=1
   350                           	psect	text318,global,reloc=2,class=CODE,delta=1
   351                           	psect	text319,global,reloc=2,class=CODE,delta=1
   352                           	psect	text320,global,reloc=2,class=CODE,delta=1
   353                           	psect	text321,global,reloc=2,class=CODE,delta=1
   354                           	psect	text322,global,reloc=2,class=CODE,delta=1
   355                           	psect	text323,global,reloc=2,class=CODE,delta=1
   356                           	psect	text324,global,reloc=2,class=CODE,delta=1
   357                           	psect	text325,global,reloc=2,class=CODE,delta=1
   358                           	psect	text326,global,reloc=2,class=CODE,delta=1
   359                           	psect	text327,global,reloc=2,class=CODE,delta=1
   360                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   361                           	psect	text328,global,reloc=2,class=CODE,delta=1
   362                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   363                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   364  0000                     
   365                           ; Version 1.45
   366                           ; Generated 16/11/2017 GMT
   367                           ; 
   368                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   369                           ; All rights reserved.
   370                           ; 
   371                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   372                           ; 
   373                           ; Redistribution and use in source and binary forms, with or without modification, are
   374                           ; permitted provided that the following conditions are met:
   375                           ; 
   376                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   377                           ;        conditions and the following disclaimer.
   378                           ; 
   379                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   380                           ;        of conditions and the following disclaimer in the documentation and/or other
   381                           ;        materials provided with the distribution.
   382                           ; 
   383                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   384                           ;        software without specific prior written permission.
   385                           ; 
   386                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   387                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   388                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   389                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   390                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   391                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   392                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   393                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   394                           ; 
   395                           ; 
   396                           ; Code-generator required, PIC18LF46K22 Definitions
   397                           ; 
   398                           ; SFR Addresses
   399  0000                     
   400 ;; Function _i2c_busCollisionISR is unused but had its address taken
   401  0000                     
   402 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   403  0000                     
   404 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   405  0000                     
   406 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   407  0000                     
   408 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   409 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   410 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   411 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   412 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   413 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   414 ;;_LORAWAN_LinkCheckCallback$2906	offset	0
   415 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   416 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   417 ;;_DutyCycleCallback$2252	offset	0
   418 ;;DutyCycleCallback@minim	offset	4
   419 ;;DutyCycleCallback@i	offset	8
   420 ;;DutyCycleCallback@found	offset	9
   421 ;;DutyCycleCallback@param	offset=-1 (param)
   422 ;;AutomaticReplyCallback@param	offset=-1 (param)
   423 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   424 ;;AckRetransmissionCallback@param	offset=-1 (param)
   425 ;;_param	offset=-1 (param)
   426 ;;_UpdateJoinSuccessState$2923	offset	0
   427 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   428                           
   429                           	psect	idataCOMRAM
   430  00C68C                     __pidataCOMRAM:
   431                           	opt stack 0
   432                           
   433                           ;initializer for _ticksToScheduledInterrupt
   434  00C68C  FFFF               	dw	65535
   435  00C68E  FFFF               	dw	65535
   436                           
   437                           	psect	idataBANK1
   438  00C690                     __pidataBANK1:
   439                           	opt stack 0
   440                           
   441                           ;initializer for _randx
   442  00C690  0001               	dw	1
   443  00C692  0000               	dw	0
   444                           
   445                           	psect	idataBANK2
   446  00C694                     __pidataBANK2:
   447                           	opt stack 0
   448                           
   449                           ;initializer for _deviceAddr
   450  00C694  198B               	dw	6539
   451  00C696  2601               	dw	9729
   452                           
   453                           	psect	idataBANK3
   454  00C3DC                     __pidataBANK3:
   455                           	opt stack 0
   456                           
   457                           ;initializer for _applicationEUI
   458  00C3DC  70                 	db	112
   459  00C3DD  B3                 	db	179
   460  00C3DE  D5                 	db	213
   461  00C3DF  7E                 	db	126
   462  00C3E0  D0                 	db	208
   463  00C3E1  00                 	db	0
   464  00C3E2  B6                 	db	182
   465  00C3E3  92                 	db	146
   466                           
   467                           ;initializer for _deviceEUI
   468  00C3E4  00                 	db	0
   469  00C3E5  09                 	db	9
   470  00C3E6  50                 	db	80
   471  00C3E7  DF                 	db	223
   472  00C3E8  9B                 	db	155
   473  00C3E9  E2                 	db	226
   474  00C3EA  73                 	db	115
   475  00C3EB  3B                 	db	59
   476                           
   477                           	psect	idataBANK4
   478  00BED6                     __pidataBANK4:
   479                           	opt stack 0
   480                           
   481                           ;initializer for GenerateSubkey@F7103
   482  00BED6  00                 	db	0
   483  00BED7  00                 	db	0
   484  00BED8  00                 	db	0
   485  00BED9  00                 	db	0
   486  00BEDA  00                 	db	0
   487  00BEDB  00                 	db	0
   488  00BEDC  00                 	db	0
   489  00BEDD  00                 	db	0
   490  00BEDE  00                 	db	0
   491  00BEDF  00                 	db	0
   492  00BEE0  00                 	db	0
   493  00BEE1  00                 	db	0
   494  00BEE2  00                 	db	0
   495  00BEE3  00                 	db	0
   496  00BEE4  00                 	db	0
   497  00BEE5  87                 	db	135
   498                           
   499                           ;initializer for _applicationKey
   500  00BEE6  60                 	db	96
   501  00BEE7  86                 	db	134
   502  00BEE8  59                 	db	89
   503  00BEE9  FB                 	db	251
   504  00BEEA  FD                 	db	253
   505  00BEEB  B0                 	db	176
   506  00BEEC  D7                 	db	215
   507  00BEED  3E                 	db	62
   508  00BEEE  0C                 	db	12
   509  00BEEF  71                 	db	113
   510  00BEF0  85                 	db	133
   511  00BEF1  31                 	db	49
   512  00BEF2  70                 	db	112
   513  00BEF3  8E                 	db	142
   514  00BEF4  7A                 	db	122
   515  00BEF5  8D                 	db	141
   516                           
   517                           	psect	idataBANK5
   518  00BEF6                     __pidataBANK5:
   519                           	opt stack 0
   520                           
   521                           ;initializer for _appSessionKey
   522  00BEF6  77                 	db	119
   523  00BEF7  D1                 	db	209
   524  00BEF8  17                 	db	23
   525  00BEF9  66                 	db	102
   526  00BEFA  E8                 	db	232
   527  00BEFB  BD                 	db	189
   528  00BEFC  E5                 	db	229
   529  00BEFD  D4                 	db	212
   530  00BEFE  E0                 	db	224
   531  00BEFF  A7                 	db	167
   532  00BF00  E8                 	db	232
   533  00BF01  71                 	db	113
   534  00BF02  B5                 	db	181
   535  00BF03  6E                 	db	110
   536  00BF04  57                 	db	87
   537  00BF05  9C                 	db	156
   538                           
   539                           ;initializer for _nwkSessionKey
   540  00BF06  1A                 	db	26
   541  00BF07  BB                 	db	187
   542  00BF08  89                 	db	137
   543  00BF09  EB                 	db	235
   544  00BF0A  2A                 	db	42
   545  00BF0B  B0                 	db	176
   546  00BF0C  24                 	db	36
   547  00BF0D  E4                 	db	228
   548  00BF0E  1D                 	db	29
   549  00BF0F  CD                 	db	205
   550  00BF10  53                 	db	83
   551  00BF11  2D                 	db	45
   552  00BF12  74                 	db	116
   553  00BF13  01                 	db	1
   554  00BF14  37                 	db	55
   555  00BF15  E2                 	db	226
   556                           
   557                           	psect	mediumconst
   558  00FD3E                     __pmediumconst:
   559                           	opt stack 0
   560  00FD3E  00                 	db	0
   561  00FD3F                     _STable:
   562                           	opt stack 0
   563  00FD3F  63                 	db	99
   564  00FD40  7C                 	db	124
   565  00FD41  77                 	db	119
   566  00FD42  7B                 	db	123
   567  00FD43  F2                 	db	242
   568  00FD44  6B                 	db	107
   569  00FD45  6F                 	db	111
   570  00FD46  C5                 	db	197
   571  00FD47  30                 	db	48
   572  00FD48  01                 	db	1
   573  00FD49  67                 	db	103
   574  00FD4A  2B                 	db	43
   575  00FD4B  FE                 	db	254
   576  00FD4C  D7                 	db	215
   577  00FD4D  AB                 	db	171
   578  00FD4E  76                 	db	118
   579  00FD4F  CA                 	db	202
   580  00FD50  82                 	db	130
   581  00FD51  C9                 	db	201
   582  00FD52  7D                 	db	125
   583  00FD53  FA                 	db	250
   584  00FD54  59                 	db	89
   585  00FD55  47                 	db	71
   586  00FD56  F0                 	db	240
   587  00FD57  AD                 	db	173
   588  00FD58  D4                 	db	212
   589  00FD59  A2                 	db	162
   590  00FD5A  AF                 	db	175
   591  00FD5B  9C                 	db	156
   592  00FD5C  A4                 	db	164
   593  00FD5D  72                 	db	114
   594  00FD5E  C0                 	db	192
   595  00FD5F  B7                 	db	183
   596  00FD60  FD                 	db	253
   597  00FD61  93                 	db	147
   598  00FD62  26                 	db	38
   599  00FD63  36                 	db	54
   600  00FD64  3F                 	db	63
   601  00FD65  F7                 	db	247
   602  00FD66  CC                 	db	204
   603  00FD67  34                 	db	52
   604  00FD68  A5                 	db	165
   605  00FD69  E5                 	db	229
   606  00FD6A  F1                 	db	241
   607  00FD6B  71                 	db	113
   608  00FD6C  D8                 	db	216
   609  00FD6D  31                 	db	49
   610  00FD6E  15                 	db	21
   611  00FD6F  04                 	db	4
   612  00FD70  C7                 	db	199
   613  00FD71  23                 	db	35
   614  00FD72  C3                 	db	195
   615  00FD73  18                 	db	24
   616  00FD74  96                 	db	150
   617  00FD75  05                 	db	5
   618  00FD76  9A                 	db	154
   619  00FD77  07                 	db	7
   620  00FD78  12                 	db	18
   621  00FD79  80                 	db	128
   622  00FD7A  E2                 	db	226
   623  00FD7B  EB                 	db	235
   624  00FD7C  27                 	db	39
   625  00FD7D  B2                 	db	178
   626  00FD7E  75                 	db	117
   627  00FD7F  09                 	db	9
   628  00FD80  83                 	db	131
   629  00FD81  2C                 	db	44
   630  00FD82  1A                 	db	26
   631  00FD83  1B                 	db	27
   632  00FD84  6E                 	db	110
   633  00FD85  5A                 	db	90
   634  00FD86  A0                 	db	160
   635  00FD87  52                 	db	82
   636  00FD88  3B                 	db	59
   637  00FD89  D6                 	db	214
   638  00FD8A  B3                 	db	179
   639  00FD8B  29                 	db	41
   640  00FD8C  E3                 	db	227
   641  00FD8D  2F                 	db	47
   642  00FD8E  84                 	db	132
   643  00FD8F  53                 	db	83
   644  00FD90  D1                 	db	209
   645  00FD91  00                 	db	0
   646  00FD92  ED                 	db	237
   647  00FD93  20                 	db	32
   648  00FD94  FC                 	db	252
   649  00FD95  B1                 	db	177
   650  00FD96  5B                 	db	91
   651  00FD97  6A                 	db	106
   652  00FD98  CB                 	db	203
   653  00FD99  BE                 	db	190
   654  00FD9A  39                 	db	57
   655  00FD9B  4A                 	db	74
   656  00FD9C  4C                 	db	76
   657  00FD9D  58                 	db	88
   658  00FD9E  CF                 	db	207
   659  00FD9F  D0                 	db	208
   660  00FDA0  EF                 	db	239
   661  00FDA1  AA                 	db	170
   662  00FDA2  FB                 	db	251
   663  00FDA3  43                 	db	67
   664  00FDA4  4D                 	db	77
   665  00FDA5  33                 	db	51
   666  00FDA6  85                 	db	133
   667  00FDA7  45                 	db	69
   668  00FDA8  F9                 	db	249
   669  00FDA9  02                 	db	2
   670  00FDAA  7F                 	db	127
   671  00FDAB  50                 	db	80
   672  00FDAC  3C                 	db	60
   673  00FDAD  9F                 	db	159
   674  00FDAE  A8                 	db	168
   675  00FDAF  51                 	db	81
   676  00FDB0  A3                 	db	163
   677  00FDB1  40                 	db	64
   678  00FDB2  8F                 	db	143
   679  00FDB3  92                 	db	146
   680  00FDB4  9D                 	db	157
   681  00FDB5  38                 	db	56
   682  00FDB6  F5                 	db	245
   683  00FDB7  BC                 	db	188
   684  00FDB8  B6                 	db	182
   685  00FDB9  DA                 	db	218
   686  00FDBA  21                 	db	33
   687  00FDBB  10                 	db	16
   688  00FDBC  FF                 	db	255
   689  00FDBD  F3                 	db	243
   690  00FDBE  D2                 	db	210
   691  00FDBF  CD                 	db	205
   692  00FDC0  0C                 	db	12
   693  00FDC1  13                 	db	19
   694  00FDC2  EC                 	db	236
   695  00FDC3  5F                 	db	95
   696  00FDC4  97                 	db	151
   697  00FDC5  44                 	db	68
   698  00FDC6  17                 	db	23
   699  00FDC7  C4                 	db	196
   700  00FDC8  A7                 	db	167
   701  00FDC9  7E                 	db	126
   702  00FDCA  3D                 	db	61
   703  00FDCB  64                 	db	100
   704  00FDCC  5D                 	db	93
   705  00FDCD  19                 	db	25
   706  00FDCE  73                 	db	115
   707  00FDCF  60                 	db	96
   708  00FDD0  81                 	db	129
   709  00FDD1  4F                 	db	79
   710  00FDD2  DC                 	db	220
   711  00FDD3  22                 	db	34
   712  00FDD4  2A                 	db	42
   713  00FDD5  90                 	db	144
   714  00FDD6  88                 	db	136
   715  00FDD7  46                 	db	70
   716  00FDD8  EE                 	db	238
   717  00FDD9  B8                 	db	184
   718  00FDDA  14                 	db	20
   719  00FDDB  DE                 	db	222
   720  00FDDC  5E                 	db	94
   721  00FDDD  0B                 	db	11
   722  00FDDE  DB                 	db	219
   723  00FDDF  E0                 	db	224
   724  00FDE0  32                 	db	50
   725  00FDE1  3A                 	db	58
   726  00FDE2  0A                 	db	10
   727  00FDE3  49                 	db	73
   728  00FDE4  06                 	db	6
   729  00FDE5  24                 	db	36
   730  00FDE6  5C                 	db	92
   731  00FDE7  C2                 	db	194
   732  00FDE8  D3                 	db	211
   733  00FDE9  AC                 	db	172
   734  00FDEA  62                 	db	98
   735  00FDEB  91                 	db	145
   736  00FDEC  95                 	db	149
   737  00FDED  E4                 	db	228
   738  00FDEE  79                 	db	121
   739  00FDEF  E7                 	db	231
   740  00FDF0  C8                 	db	200
   741  00FDF1  37                 	db	55
   742  00FDF2  6D                 	db	109
   743  00FDF3  8D                 	db	141
   744  00FDF4  D5                 	db	213
   745  00FDF5  4E                 	db	78
   746  00FDF6  A9                 	db	169
   747  00FDF7  6C                 	db	108
   748  00FDF8  56                 	db	86
   749  00FDF9  F4                 	db	244
   750  00FDFA  EA                 	db	234
   751  00FDFB  65                 	db	101
   752  00FDFC  7A                 	db	122
   753  00FDFD  AE                 	db	174
   754  00FDFE  08                 	db	8
   755  00FDFF  BA                 	db	186
   756  00FE00  78                 	db	120
   757  00FE01  25                 	db	37
   758  00FE02  2E                 	db	46
   759  00FE03  1C                 	db	28
   760  00FE04  A6                 	db	166
   761  00FE05  B4                 	db	180
   762  00FE06  C6                 	db	198
   763  00FE07  E8                 	db	232
   764  00FE08  DD                 	db	221
   765  00FE09  74                 	db	116
   766  00FE0A  1F                 	db	31
   767  00FE0B  4B                 	db	75
   768  00FE0C  BD                 	db	189
   769  00FE0D  8B                 	db	139
   770  00FE0E  8A                 	db	138
   771  00FE0F  70                 	db	112
   772  00FE10  3E                 	db	62
   773  00FE11  B5                 	db	181
   774  00FE12  66                 	db	102
   775  00FE13  48                 	db	72
   776  00FE14  03                 	db	3
   777  00FE15  F6                 	db	246
   778  00FE16  0E                 	db	14
   779  00FE17  61                 	db	97
   780  00FE18  35                 	db	53
   781  00FE19  57                 	db	87
   782  00FE1A  B9                 	db	185
   783  00FE1B  86                 	db	134
   784  00FE1C  C1                 	db	193
   785  00FE1D  1D                 	db	29
   786  00FE1E  9E                 	db	158
   787  00FE1F  E1                 	db	225
   788  00FE20  F8                 	db	248
   789  00FE21  98                 	db	152
   790  00FE22  11                 	db	17
   791  00FE23  69                 	db	105
   792  00FE24  D9                 	db	217
   793  00FE25  8E                 	db	142
   794  00FE26  94                 	db	148
   795  00FE27  9B                 	db	155
   796  00FE28  1E                 	db	30
   797  00FE29  87                 	db	135
   798  00FE2A  E9                 	db	233
   799  00FE2B  CE                 	db	206
   800  00FE2C  55                 	db	85
   801  00FE2D  28                 	db	40
   802  00FE2E  DF                 	db	223
   803  00FE2F  8C                 	db	140
   804  00FE30  A1                 	db	161
   805  00FE31  89                 	db	137
   806  00FE32  0D                 	db	13
   807  00FE33  BF                 	db	191
   808  00FE34  E6                 	db	230
   809  00FE35  42                 	db	66
   810  00FE36  68                 	db	104
   811  00FE37  41                 	db	65
   812  00FE38  99                 	db	153
   813  00FE39  2D                 	db	45
   814  00FE3A  0F                 	db	15
   815  00FE3B  B0                 	db	176
   816  00FE3C  54                 	db	84
   817  00FE3D  BB                 	db	187
   818  00FE3E  16                 	db	22
   819  00FE3F                     __end_of_STable:
   820                           	opt stack 0
   821  00FE3F                     _dpowers:
   822                           	opt stack 0
   823  00FE3F  0001               	dw	1
   824  00FE41  0000               	dw	0
   825  00FE43  000A               	dw	10
   826  00FE45  0000               	dw	0
   827  00FE47  0064               	dw	100
   828  00FE49  0000               	dw	0
   829  00FE4B  03E8               	dw	1000
   830  00FE4D  0000               	dw	0
   831  00FE4F  2710               	dw	10000
   832  00FE51  0000               	dw	0
   833  00FE53  86A0               	dw	34464
   834  00FE55  0001               	dw	1
   835  00FE57  4240               	dw	16960
   836  00FE59  000F               	dw	15
   837  00FE5B  9680               	dw	38528
   838  00FE5D  0098               	dw	152
   839  00FE5F  E100               	dw	57600
   840  00FE61  05F5               	dw	1525
   841  00FE63  CA00               	dw	51712
   842  00FE65  3B9A               	dw	15258
   843  00FE67                     __end_of_dpowers:
   844                           	opt stack 0
   845  00FE67                     __powers_:
   846                           	opt stack 0
   847  00FE67  00                 	db	0
   848  00FE68  80                 	db	128
   849  00FE69  3F                 	db	63
   850  00FE6A  00                 	db	0
   851  00FE6B  20                 	db	32
   852  00FE6C  41                 	db	65
   853  00FE6D  00                 	db	0
   854  00FE6E  C8                 	db	200
   855  00FE6F  42                 	db	66
   856  00FE70  00                 	db	0
   857  00FE71  7A                 	db	122
   858  00FE72  44                 	db	68
   859  00FE73  40                 	db	64
   860  00FE74  1C                 	db	28
   861  00FE75  46                 	db	70
   862  00FE76  50                 	db	80
   863  00FE77  C3                 	db	195
   864  00FE78  47                 	db	71
   865  00FE79  24                 	db	36
   866  00FE7A  74                 	db	116
   867  00FE7B  49                 	db	73
   868  00FE7C  97                 	db	151
   869  00FE7D  18                 	db	24
   870  00FE7E  4B                 	db	75
   871  00FE7F  BC                 	db	188
   872  00FE80  BE                 	db	190
   873  00FE81  4C                 	db	76
   874  00FE82  6B                 	db	107
   875  00FE83  6E                 	db	110
   876  00FE84  4E                 	db	78
   877  00FE85  03                 	db	3
   878  00FE86  15                 	db	21
   879  00FE87  50                 	db	80
   880  00FE88  79                 	db	121
   881  00FE89  AD                 	db	173
   882  00FE8A  60                 	db	96
   883  00FE8B  F3                 	db	243
   884  00FE8C  49                 	db	73
   885  00FE8D  71                 	db	113
   886  00FE8E                     __end_of__powers_:
   887                           	opt stack 0
   888  00FE8E                     __npowers_:
   889                           	opt stack 0
   890  00FE8E  00                 	db	0
   891  00FE8F  80                 	db	128
   892  00FE90  3F                 	db	63
   893  00FE91  CD                 	db	205
   894  00FE92  CC                 	db	204
   895  00FE93  3D                 	db	61
   896  00FE94  D7                 	db	215
   897  00FE95  23                 	db	35
   898  00FE96  3C                 	db	60
   899  00FE97  12                 	db	18
   900  00FE98  83                 	db	131
   901  00FE99  3A                 	db	58
   902  00FE9A  B7                 	db	183
   903  00FE9B  D1                 	db	209
   904  00FE9C  38                 	db	56
   905  00FE9D  C6                 	db	198
   906  00FE9E  27                 	db	39
   907  00FE9F  37                 	db	55
   908  00FEA0  38                 	db	56
   909  00FEA1  86                 	db	134
   910  00FEA2  35                 	db	53
   911  00FEA3  C0                 	db	192
   912  00FEA4  D6                 	db	214
   913  00FEA5  33                 	db	51
   914  00FEA6  CC                 	db	204
   915  00FEA7  2B                 	db	43
   916  00FEA8  32                 	db	50
   917  00FEA9  70                 	db	112
   918  00FEAA  89                 	db	137
   919  00FEAB  30                 	db	48
   920  00FEAC  E7                 	db	231
   921  00FEAD  DB                 	db	219
   922  00FEAE  2E                 	db	46
   923  00FEAF  E5                 	db	229
   924  00FEB0  3C                 	db	60
   925  00FEB1  1E                 	db	30
   926  00FEB2  42                 	db	66
   927  00FEB3  A2                 	db	162
   928  00FEB4  0D                 	db	13
   929  00FEB5                     __end_of__npowers_:
   930                           	opt stack 0
   931  00FEB5                     _fsmStateTable:
   932                           	opt stack 0
   933  00FEB5  FA                 	db	low _do_I2C_IDLE
   934  00FEB6  C4                 	db	high _do_I2C_IDLE
   935  00FEB7  0C                 	db	low _do_I2C_SEND_ADR_READ
   936  00FEB8  C4                 	db	high _do_I2C_SEND_ADR_READ
   937  00FEB9  FC                 	db	low _do_I2C_SEND_ADR_WRITE
   938  00FEBA  C3                 	db	high _do_I2C_SEND_ADR_WRITE
   939  00FEBB  06                 	db	low _do_I2C_TX
   940  00FEBC  9D                 	db	high _do_I2C_TX
   941  00FEBD  1A                 	db	low _do_I2C_RX
   942  00FEBE  A6                 	db	high _do_I2C_RX
   943  00FEBF  EE                 	db	low _do_I2C_RCEN
   944  00FEC0  C4                 	db	high _do_I2C_RCEN
   945  00FEC1  3A                 	db	low _do_I2C_TX_EMPTY
   946  00FEC2  AF                 	db	high _do_I2C_TX_EMPTY
   947  00FEC3  3C                 	db	low _do_I2C_SEND_RESTART_READ
   948  00FEC4  C6                 	db	high _do_I2C_SEND_RESTART_READ
   949  00FEC5  34                 	db	low _do_I2C_SEND_RESTART_WRITE
   950  00FEC6  C6                 	db	high _do_I2C_SEND_RESTART_WRITE
   951  00FEC7  2C                 	db	low _do_I2C_SEND_RESTART
   952  00FEC8  C6                 	db	high _do_I2C_SEND_RESTART
   953  00FEC9  24                 	db	low _do_I2C_SEND_STOP
   954  00FECA  C6                 	db	high _do_I2C_SEND_STOP
   955  00FECB  1C                 	db	low _do_I2C_DO_ACK
   956  00FECC  C6                 	db	high _do_I2C_DO_ACK
   957  00FECD  14                 	db	low _do_I2C_DO_NACK_STOP
   958  00FECE  C6                 	db	high _do_I2C_DO_NACK_STOP
   959  00FECF  0C                 	db	low _do_I2C_DO_NACK_RESTART
   960  00FED0  C6                 	db	high _do_I2C_DO_NACK_RESTART
   961  00FED1  1C                 	db	low _do_I2C_RESET
   962  00FED2  C4                 	db	high _do_I2C_RESET
   963  00FED3  12                 	db	low _do_I2C_DO_ADDRESS_NACK
   964  00FED4  B4                 	db	high _do_I2C_DO_ADDRESS_NACK
   965  00FED5                     __end_of_fsmStateTable:
   966                           	opt stack 0
   967  00FED5                     _modulation:
   968                           	opt stack 0
   969  00FED5  01                 	db	1
   970  00FED6  01                 	db	1
   971  00FED7  01                 	db	1
   972  00FED8  01                 	db	1
   973  00FED9  01                 	db	1
   974  00FEDA  01                 	db	1
   975  00FEDB  01                 	db	1
   976  00FEDC  00                 	db	0
   977  00FEDD                     __end_of_modulation:
   978                           	opt stack 0
   979  00FEDD                     _rxWindowOffset:
   980                           	opt stack 0
   981  00FEDD  DF                 	db	223
   982  00FEDE  CE                 	db	206
   983  00FEDF  C6                 	db	198
   984  00FEE0  C2                 	db	194
   985  00FEE1  BE                 	db	190
   986  00FEE2  BC                 	db	188
   987  00FEE3  F1                 	db	241
   988  00FEE4  FE                 	db	254
   989  00FEE5                     __end_of_rxWindowOffset:
   990                           	opt stack 0
   991  00FEE5                     _maxPayloadSize:
   992                           	opt stack 0
   993  00FEE5  33                 	db	51
   994  00FEE6  33                 	db	51
   995  00FEE7  33                 	db	51
   996  00FEE8  73                 	db	115
   997  00FEE9  F2                 	db	242
   998  00FEEA  F2                 	db	242
   999  00FEEB  F2                 	db	242
  1000  00FEEC  38                 	db	56
  1001  00FEED                     __end_of_maxPayloadSize:
  1002                           	opt stack 0
  1003  00FEED                     _rxWindowSize:
  1004                           	opt stack 0
  1005  00FEED  08                 	db	8
  1006  00FEEE  0A                 	db	10
  1007  00FEEF  0E                 	db	14
  1008  00FEF0  1A                 	db	26
  1009  00FEF1  31                 	db	49
  1010  00FEF2  58                 	db	88
  1011  00FEF3  3C                 	db	60
  1012  00FEF4  08                 	db	8
  1013  00FEF5                     __end_of_rxWindowSize:
  1014                           	opt stack 0
  1015  00FEF5                     _macEndDevCmdReplyLen:
  1016                           	opt stack 0
  1017  00FEF5  01                 	db	1
  1018  00FEF6  02                 	db	2
  1019  00FEF7  01                 	db	1
  1020  00FEF8  02                 	db	2
  1021  00FEF9  03                 	db	3
  1022  00FEFA  02                 	db	2
  1023  00FEFB  01                 	db	1
  1024  00FEFC                     __end_of_macEndDevCmdReplyLen:
  1025                           	opt stack 0
  1026  00FEFC                     _bandwidth:
  1027                           	opt stack 0
  1028  00FEFC  07                 	db	7
  1029  00FEFD  07                 	db	7
  1030  00FEFE  07                 	db	7
  1031  00FEFF  07                 	db	7
  1032  00FF00  07                 	db	7
  1033  00FF01  07                 	db	7
  1034  00FF02  08                 	db	8
  1035  00FF03                     __end_of_bandwidth:
  1036                           	opt stack 0
  1037  00FF03                     _spreadingFactor:
  1038                           	opt stack 0
  1039  00FF03  0C                 	db	12
  1040  00FF04  0B                 	db	11
  1041  00FF05  0A                 	db	10
  1042  00FF06  09                 	db	9
  1043  00FF07  08                 	db	8
  1044  00FF08  07                 	db	7
  1045  00FF09  07                 	db	7
  1046  00FF0A                     __end_of_spreadingFactor:
  1047                           	opt stack 0
  1048  00FF0A  0A                 	db	10
  1049  00FF0B  07                 	db	7
  1050  00FF0C  04                 	db	4
  1051  00FF0D  01                 	db	1
  1052  00FF0E  FE                 	db	254
  1053  00FF0F  FB                 	db	251
  1054  00FF10                     __end_of_txPower433:
  1055                           	opt stack 0
  1056  00FF10                     _txPower868:
  1057                           	opt stack 0
  1058  00FF10  14                 	db	20
  1059  00FF11  0E                 	db	14
  1060  00FF12  0B                 	db	11
  1061  00FF13  08                 	db	8
  1062  00FF14  05                 	db	5
  1063  00FF15  02                 	db	2
  1064  00FF16                     __end_of_txPower868:
  1065                           	opt stack 0
  1066  00FF16                     _DefaultChannels433:
  1067                           	opt stack 0
  1068  00FF16  B9D8               	dw	47576
  1069  00FF18  19D1               	dw	6609
  1070  00FF1A  01                 	db	1
  1071  00FF1B  50                 	db	80
  1072  00FF1C  012E               	dw	302
  1073  00FF1E  0000               	dw	0
  1074  00FF20  0000               	dw	0
  1075  00FF22  01                 	db	1
  1076  00FF23  FF                 	db	255
  1077  00FF24  C718               	dw	50968
  1078  00FF26  19D4               	dw	6612
  1079  00FF28  01                 	db	1
  1080  00FF29  50                 	db	80
  1081  00FF2A  012E               	dw	302
  1082  00FF2C  0000               	dw	0
  1083  00FF2E  0000               	dw	0
  1084  00FF30  01                 	db	1
  1085  00FF31  FF                 	db	255
  1086  00FF32  D458               	dw	54360
  1087  00FF34  19D7               	dw	6615
  1088  00FF36  01                 	db	1
  1089  00FF37  50                 	db	80
  1090  00FF38  012E               	dw	302
  1091  00FF3A  0000               	dw	0
  1092  00FF3C  0000               	dw	0
  1093  00FF3E  01                 	db	1
  1094  00FF3F  FF                 	db	255
  1095  00FF40                     __end_of_DefaultChannels433:
  1096                           	opt stack 0
  1097  00FF40                     _DefaultChannels868:
  1098                           	opt stack 0
  1099  00FF40  27A0               	dw	10144
  1100  00FF42  33BE               	dw	13246
  1101  00FF44  01                 	db	1
  1102  00FF45  50                 	db	80
  1103  00FF46  012E               	dw	302
  1104  00FF48  0000               	dw	0
  1105  00FF4A  0000               	dw	0
  1106  00FF4C  01                 	db	1
  1107  00FF4D  FF                 	db	255
  1108  00FF4E  34E0               	dw	13536
  1109  00FF50  33C1               	dw	13249
  1110  00FF52  01                 	db	1
  1111  00FF53  50                 	db	80
  1112  00FF54  012E               	dw	302
  1113  00FF56  0000               	dw	0
  1114  00FF58  0000               	dw	0
  1115  00FF5A  01                 	db	1
  1116  00FF5B  FF                 	db	255
  1117  00FF5C  4220               	dw	16928
  1118  00FF5E  33C4               	dw	13252
  1119  00FF60  01                 	db	1
  1120  00FF61  50                 	db	80
  1121  00FF62  012E               	dw	302
  1122  00FF64  0000               	dw	0
  1123  00FF66  0000               	dw	0
  1124  00FF68  01                 	db	1
  1125  00FF69  FF                 	db	255
  1126  00FF6A                     __end_of_DefaultChannels868:
  1127                           	opt stack 0
  1128  00FF6A                     _FskSyncWordBuff:
  1129                           	opt stack 0
  1130  00FF6A  C1                 	db	193
  1131  00FF6B  94                 	db	148
  1132  00FF6C  C1                 	db	193
  1133  00FF6D                     __end_of_FskSyncWordBuff:
  1134                           	opt stack 0
  1135  00FF6D                     STR_2:
  1136                           
  1137                           ; BSR set to: 1
  1138  00FF6D  54                 	db	84	;'T'
  1139  00FF6E  65                 	db	101	;'e'
  1140  00FF6F  6D                 	db	109	;'m'
  1141  00FF70  70                 	db	112	;'p'
  1142  00FF71  65                 	db	101	;'e'
  1143  00FF72  72                 	db	114	;'r'
  1144  00FF73  61                 	db	97	;'a'
  1145  00FF74  74                 	db	116	;'t'
  1146  00FF75  75                 	db	117	;'u'
  1147  00FF76  72                 	db	114	;'r'
  1148  00FF77  65                 	db	101	;'e'
  1149  00FF78  20                 	db	32
  1150  00FF79  3D                 	db	61	;'='
  1151  00FF7A  20                 	db	32
  1152  00FF7B  25                 	db	37
  1153  00FF7C  33                 	db	51	;'3'
  1154  00FF7D  2E                 	db	46
  1155  00FF7E  32                 	db	50	;'2'
  1156  00FF7F  66                 	db	102	;'f'
  1157  00FF80  20                 	db	32
  1158  00FF81  43                 	db	67	;'C'
  1159  00FF82  20                 	db	32
  1160  00FF83  7C                 	db	124
  1161  00FF84  7C                 	db	124
  1162  00FF85  20                 	db	32
  1163  00FF86  50                 	db	80	;'P'
  1164  00FF87  72                 	db	114	;'r'
  1165  00FF88  65                 	db	101	;'e'
  1166  00FF89  73                 	db	115	;'s'
  1167  00FF8A  73                 	db	115	;'s'
  1168  00FF8B  75                 	db	117	;'u'
  1169  00FF8C  72                 	db	114	;'r'
  1170  00FF8D  65                 	db	101	;'e'
  1171  00FF8E  20                 	db	32
  1172  00FF8F  3D                 	db	61	;'='
  1173  00FF90  20                 	db	32
  1174  00FF91  25                 	db	37
  1175  00FF92  33                 	db	51	;'3'
  1176  00FF93  2E                 	db	46
  1177  00FF94  32                 	db	50	;'2'
  1178  00FF95  66                 	db	102	;'f'
  1179  00FF96  20                 	db	32
  1180  00FF97  6B                 	db	107	;'k'
  1181  00FF98  50                 	db	80	;'P'
  1182  00FF99  61                 	db	97	;'a'
  1183  00FF9A  20                 	db	32
  1184  00FF9B  7C                 	db	124
  1185  00FF9C  7C                 	db	124
  1186  00FF9D  20                 	db	32
  1187  00FF9E  48                 	db	72	;'H'
  1188  00FF9F  75                 	db	117	;'u'
  1189  00FFA0  6D                 	db	109	;'m'
  1190  00FFA1  69                 	db	105	;'i'
  1191  00FFA2  64                 	db	100	;'d'
  1192  00FFA3  69                 	db	105	;'i'
  1193  00FFA4  74                 	db	116	;'t'
  1194  00FFA5  79                 	db	121	;'y'
  1195  00FFA6  20                 	db	32
  1196  00FFA7  3D                 	db	61	;'='
  1197  00FFA8  20                 	db	32
  1198  00FFA9  25                 	db	37
  1199  00FFAA  33                 	db	51	;'3'
  1200  00FFAB  2E                 	db	46
  1201  00FFAC  32                 	db	50	;'2'
  1202  00FFAD  66                 	db	102	;'f'
  1203  00FFAE  20                 	db	32
  1204  00FFAF  25                 	db	37
  1205  00FFB0  25                 	db	37
  1206  00FFB1  52                 	db	82	;'R'
  1207  00FFB2  48                 	db	72	;'H'
  1208  00FFB3  20                 	db	32
  1209  00FFB4  7C                 	db	124
  1210  00FFB5  7C                 	db	124
  1211  00FFB6  20                 	db	32
  1212  00FFB7  56                 	db	86	;'V'
  1213  00FFB8  6F                 	db	111	;'o'
  1214  00FFB9  6C                 	db	108	;'l'
  1215  00FFBA  74                 	db	116	;'t'
  1216  00FFBB  61                 	db	97	;'a'
  1217  00FFBC  67                 	db	103	;'g'
  1218  00FFBD  65                 	db	101	;'e'
  1219  00FFBE  20                 	db	32
  1220  00FFBF  3D                 	db	61	;'='
  1221  00FFC0  20                 	db	32
  1222  00FFC1  25                 	db	37
  1223  00FFC2  33                 	db	51	;'3'
  1224  00FFC3  2E                 	db	46
  1225  00FFC4  32                 	db	50	;'2'
  1226  00FFC5  66                 	db	102	;'f'
  1227  00FFC6  20                 	db	32
  1228  00FFC7  56                 	db	86	;'V'
  1229  00FFC8  20                 	db	32
  1230  00FFC9  0D                 	db	13
  1231  00FFCA  00                 	db	0
  1232  00FFCB                     STR_4:
  1233                           
  1234                           ; BSR set to: 1
  1235  00FFCB  4F                 	db	79	;'O'
  1236  00FFCC  54                 	db	84	;'T'
  1237  00FFCD  41                 	db	65	;'A'
  1238  00FFCE  41                 	db	65	;'A'
  1239  00FFCF  20                 	db	32
  1240  00FFD0  4A                 	db	74	;'J'
  1241  00FFD1  6F                 	db	111	;'o'
  1242  00FFD2  69                 	db	105	;'i'
  1243  00FFD3  6E                 	db	110	;'n'
  1244  00FFD4  65                 	db	101	;'e'
  1245  00FFD5  64                 	db	100	;'d'
  1246  00FFD6  21                 	db	33
  1247  00FFD7  0D                 	db	13
  1248  00FFD8  00                 	db	0
  1249  00FFD9                     STR_5:
  1250                           
  1251                           ; BSR set to: 1
  1252  00FFD9  41                 	db	65	;'A'
  1253  00FFDA  42                 	db	66	;'B'
  1254  00FFDB  50                 	db	80	;'P'
  1255  00FFDC  20                 	db	32
  1256  00FFDD  4A                 	db	74	;'J'
  1257  00FFDE  6F                 	db	111	;'o'
  1258  00FFDF  69                 	db	105	;'i'
  1259  00FFE0  6E                 	db	110	;'n'
  1260  00FFE1  65                 	db	101	;'e'
  1261  00FFE2  64                 	db	100	;'d'
  1262  00FFE3  21                 	db	33
  1263  00FFE4  0D                 	db	13
  1264  00FFE5  00                 	db	0
  1265  00FFE6                     STR_3:
  1266                           
  1267                           ; BSR set to: 1
  1268  00FFE6  4C                 	db	76	;'L'
  1269  00FFE7  6F                 	db	111	;'o'
  1270  00FFE8  52                 	db	82	;'R'
  1271  00FFE9  41                 	db	65	;'A'
  1272  00FFEA  20                 	db	32
  1273  00FFEB  53                 	db	83	;'S'
  1274  00FFEC  74                 	db	116	;'t'
  1275  00FFED  61                 	db	97	;'a'
  1276  00FFEE  72                 	db	114	;'r'
  1277  00FFEF  74                 	db	116	;'t'
  1278  00FFF0  21                 	db	33
  1279  00FFF1  0D                 	db	13
  1280  00FFF2  00                 	db	0
  1281  00FFF3                     STR_1:
  1282                           
  1283                           ; BSR set to: 1
  1284  00FFF3  49                 	db	73	;'I'
  1285  00FFF4  4E                 	db	78	;'N'
  1286  00FFF5  49                 	db	73	;'I'
  1287  00FFF6  54                 	db	84	;'T'
  1288  00FFF7  20                 	db	32
  1289  00FFF8  44                 	db	68	;'D'
  1290  00FFF9  6F                 	db	111	;'o'
  1291  00FFFA  6E                 	db	110	;'n'
  1292  00FFFB  65                 	db	101	;'e'
  1293  00FFFC  21                 	db	33
  1294  00FFFD  0D                 	db	13
  1295  00FFFE  00                 	db	0
  1296                           
  1297                           ; #config settings
  1298  00FFFF  00                 	db	0	; dummy byte at the end
  1299  0000                     
  1300                           	psect	nvBANK1
  1301  0001F5                     __pnvBANK1:
  1302                           	opt stack 0
  1303  0001F5                     _timer1ReloadVal:
  1304                           	opt stack 0
  1305  0001F5                     	ds	2
  1306  0001F7                     _INT1_InterruptHandler:
  1307                           	opt stack 0
  1308  0001F7                     	ds	2
  1309                           
  1310                           	psect	nvBANK2
  1311  0002FD                     __pnvBANK2:
  1312                           	opt stack 0
  1313  0002FD                     _INT2_InterruptHandler:
  1314                           	opt stack 0
  1315  0002FD                     	ds	2
  1316                           
  1317                           	psect	nvBANK3
  1318  0003F0                     __pnvBANK3:
  1319                           	opt stack 0
  1320  0003F0                     _timer5ReloadVal:
  1321                           	opt stack 0
  1322  0003F0                     	ds	2
  1323  0003F2                     _EUSART1_ErrorHandler:
  1324                           	opt stack 0
  1325  0003F2                     	ds	2
  1326  0003F4                     _EUSART1_OverrunErrorHandler:
  1327                           	opt stack 0
  1328  0003F4                     	ds	2
  1329  0003F6                     _EUSART1_FramingErrorHandler:
  1330                           	opt stack 0
  1331  0003F6                     	ds	2
  1332  0003F8                     _TMR1_InterruptHandler:
  1333                           	opt stack 0
  1334  0003F8                     	ds	2
  1335  0003FA                     _IOCB4_InterruptHandler:
  1336                           	opt stack 0
  1337  0003FA                     	ds	2
  1338  0000                     _TMR5	set	3919
  1339  0000                     _T5GCONbits	set	3917
  1340  0000                     _T5CONbits	set	3918
  1341  0000                     _T5CON	set	3918
  1342  0000                     _TMR5L	set	3919
  1343  0000                     _TMR5H	set	3920
  1344  0000                     _T5GCON	set	3917
  1345  0000                     _CCPR5H	set	3926
  1346  0000                     _CCPR5L	set	3925
  1347  0000                     _CCP5CON	set	3924
  1348  0000                     _ANSELA	set	3896
  1349  0000                     _ANSELE	set	3900
  1350  0000                     _ANSELB	set	3897
  1351  0000                     _ANSELC	set	3898
  1352  0000                     _ANSELD	set	3899
  1353  0000                     _TMR1	set	4046
  1354  0000                     _PIR2bits	set	4001
  1355  0000                     _SSP1STATbits	set	4039
  1356  0000                     _SSP1MSK	set	4042
  1357  0000                     _SSP1BUF	set	4041
  1358  0000                     _SSP1CON2bits	set	4037
  1359  0000                     _SSP1ADD	set	4040
  1360  0000                     _SSP1CON2	set	4037
  1361  0000                     _SSP1CON1	set	4038
  1362  0000                     _SSP1STAT	set	4039
  1363  0000                     _SSP1CON1bits	set	4038
  1364  0000                     _PIR5bits	set	3966
  1365  0000                     _TXREG1	set	4013
  1366  0000                     _RCREG1	set	4014
  1367  0000                     _RCSTA1bits	set	4011
  1368  0000                     _TXSTA1bits	set	4012
  1369  0000                     _SPBRGH1	set	4016
  1370  0000                     _SPBRG1	set	4015
  1371  0000                     _TXSTA1	set	4012
  1372  0000                     _RCSTA1	set	4011
  1373  0000                     _BAUDCON1	set	4024
  1374  0000                     _ADCON0bits	set	4034
  1375  0000                     _ADRESH	set	4036
  1376  0000                     _ADRESL	set	4035
  1377  0000                     _ADCON2	set	4032
  1378  0000                     _ADCON1	set	4033
  1379  0000                     _ADCON0	set	4034
  1380  0000                     _T1GCONbits	set	4044
  1381  0000                     _T1CONbits	set	4045
  1382  0000                     _T1CON	set	4045
  1383  0000                     _TMR1L	set	4046
  1384  0000                     _TMR1H	set	4047
  1385  0000                     _T1GCON	set	4044
  1386  0000                     _IOCBbits	set	3938
  1387  0000                     _WPUB	set	3937
  1388  0000                     _TRISD	set	3989
  1389  0000                     _TRISC	set	3988
  1390  0000                     _TRISB	set	3987
  1391  0000                     _TRISA	set	3986
  1392  0000                     _TRISE	set	3990
  1393  0000                     _LATC	set	3979
  1394  0000                     _LATB	set	3978
  1395  0000                     _LATA	set	3977
  1396  0000                     _LATD	set	3980
  1397  0000                     _LATE	set	3981
  1398  0000                     _OSCTUNE	set	3995
  1399  0000                     _OSCCON2	set	4050
  1400  0000                     _OSCCON	set	4051
  1401  0000                     _PIR1bits	set	3998
  1402  0000                     _PIE1bits	set	3997
  1403  0000                     _RCONbits	set	4048
  1404  0000                     _INTCON2bits	set	4081
  1405  0000                     _INTCON3bits	set	4080
  1406  0000                     _SSP2STATbits	set	3949
  1407  0000                     _SSP2BUF	set	3951
  1408  0000                     _SSP2CON1bits	set	3948
  1409  0000                     _SSP2ADD	set	3950
  1410  0000                     _SSP2CON1	set	3948
  1411  0000                     _SSP2STAT	set	3949
  1412  0000                     _PORTBbits	set	3969
  1413  0000                     _INTCONbits	set	4082
  1414  0000                     _TMR5IF	set	31729
  1415  0000                     _LATD3	set	31843
  1416  0000                     _LATC2	set	31834
  1417  0000                     _TRISC2	set	31906
  1418                           
  1419                           	psect	cinit
  1420  00849C                     __pcinit:
  1421                           	opt stack 0
  1422  00849C                     start_initialization:
  1423                           	opt stack 0
  1424  00849C                     __initialization:
  1425                           	opt stack 0
  1426                           
  1427                           ; Initialize objects allocated to BANK5 (32 bytes)
  1428                           ; load TBLPTR registers with __pidataBANK5
  1429  00849C  0EF6               	movlw	low __pidataBANK5
  1430  00849E  6EF6               	movwf	tblptrl,c
  1431  0084A0  0EBE               	movlw	high __pidataBANK5
  1432  0084A2  6EF7               	movwf	tblptrh,c
  1433  0084A4  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1434  0084A6  6EF8               	movwf	tblptru,c
  1435  0084A8  EE05  F000         	lfsr	0,__pdataBANK5
  1436  0084AC  EE20 F020          	lfsr	2,32
  1437  0084B0                     copy_data0:
  1438  0084B0  0009               	tblrd		*+
  1439  0084B2  CFF5 FFEE          	movff	tablat,postinc0
  1440  0084B6  50DD               	movf	postdec2,w,c
  1441  0084B8  50D9               	movf	fsr2l,w,c
  1442  0084BA  E1FA               	bnz	copy_data0
  1443                           
  1444                           ; Initialize objects allocated to BANK4 (32 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK4
  1446  0084BC  0ED6               	movlw	low __pidataBANK4
  1447  0084BE  6EF6               	movwf	tblptrl,c
  1448  0084C0  0EBE               	movlw	high __pidataBANK4
  1449  0084C2  6EF7               	movwf	tblptrh,c
  1450  0084C4  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1451  0084C6  6EF8               	movwf	tblptru,c
  1452  0084C8  EE04  F0E0         	lfsr	0,__pdataBANK4
  1453  0084CC  EE20 F020          	lfsr	2,32
  1454  0084D0                     copy_data1:
  1455  0084D0  0009               	tblrd		*+
  1456  0084D2  CFF5 FFEE          	movff	tablat,postinc0
  1457  0084D6  50DD               	movf	postdec2,w,c
  1458  0084D8  50D9               	movf	fsr2l,w,c
  1459  0084DA  E1FA               	bnz	copy_data1
  1460                           
  1461                           ; Initialize objects allocated to BANK3 (16 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK3
  1463  0084DC  0EDC               	movlw	low __pidataBANK3
  1464  0084DE  6EF6               	movwf	tblptrl,c
  1465  0084E0  0EC3               	movlw	high __pidataBANK3
  1466  0084E2  6EF7               	movwf	tblptrh,c
  1467  0084E4  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1468  0084E6  6EF8               	movwf	tblptru,c
  1469  0084E8  EE03  F0E0         	lfsr	0,__pdataBANK3
  1470  0084EC  EE20 F010          	lfsr	2,16
  1471  0084F0                     copy_data2:
  1472  0084F0  0009               	tblrd		*+
  1473  0084F2  CFF5 FFEE          	movff	tablat,postinc0
  1474  0084F6  50DD               	movf	postdec2,w,c
  1475  0084F8  50D9               	movf	fsr2l,w,c
  1476  0084FA  E1FA               	bnz	copy_data2
  1477                           
  1478                           ; Initialize objects allocated to BANK2 (4 bytes)
  1479                           ; load TBLPTR registers with __pidataBANK2
  1480  0084FC  0E94               	movlw	low __pidataBANK2
  1481  0084FE  6EF6               	movwf	tblptrl,c
  1482  008500  0EC6               	movlw	high __pidataBANK2
  1483  008502  6EF7               	movwf	tblptrh,c
  1484  008504  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1485  008506  6EF8               	movwf	tblptru,c
  1486  008508  EE02  F0F9         	lfsr	0,__pdataBANK2
  1487  00850C  EE20 F004          	lfsr	2,4
  1488  008510                     copy_data3:
  1489  008510  0009               	tblrd		*+
  1490  008512  CFF5 FFEE          	movff	tablat,postinc0
  1491  008516  50DD               	movf	postdec2,w,c
  1492  008518  50D9               	movf	fsr2l,w,c
  1493  00851A  E1FA               	bnz	copy_data3
  1494                           
  1495                           ; Initialize objects allocated to BANK1 (4 bytes)
  1496                           ; load TBLPTR registers with __pidataBANK1
  1497  00851C  0E90               	movlw	low __pidataBANK1
  1498  00851E  6EF6               	movwf	tblptrl,c
  1499  008520  0EC6               	movlw	high __pidataBANK1
  1500  008522  6EF7               	movwf	tblptrh,c
  1501  008524  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1502  008526  6EF8               	movwf	tblptru,c
  1503  008528  EE01  F0F9         	lfsr	0,__pdataBANK1
  1504  00852C  EE20 F004          	lfsr	2,4
  1505  008530                     copy_data4:
  1506  008530  0009               	tblrd		*+
  1507  008532  CFF5 FFEE          	movff	tablat,postinc0
  1508  008536  50DD               	movf	postdec2,w,c
  1509  008538  50D9               	movf	fsr2l,w,c
  1510  00853A  E1FA               	bnz	copy_data4
  1511                           
  1512                           ; Initialize objects allocated to COMRAM (4 bytes)
  1513                           ; load TBLPTR registers with __pidataCOMRAM
  1514  00853C  0E8C               	movlw	low __pidataCOMRAM
  1515  00853E  6EF6               	movwf	tblptrl,c
  1516  008540  0EC6               	movlw	high __pidataCOMRAM
  1517  008542  6EF7               	movwf	tblptrh,c
  1518  008544  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1519  008546  6EF8               	movwf	tblptru,c
  1520  008548  EE00  F054         	lfsr	0,__pdataCOMRAM
  1521  00854C  EE20 F004          	lfsr	2,4
  1522  008550                     copy_data5:
  1523  008550  0009               	tblrd		*+
  1524  008552  CFF5 FFEE          	movff	tablat,postinc0
  1525  008556  50DD               	movf	postdec2,w,c
  1526  008558  50D9               	movf	fsr2l,w,c
  1527  00855A  E1FA               	bnz	copy_data5
  1528                           
  1529                           ; Clear objects allocated to BIGRAM (542 bytes)
  1530  00855C  EE05  F020         	lfsr	0,__pbssBIGRAM
  1531  008560  EE22 F01E          	lfsr	2,542
  1532  008564                     clear_0:
  1533  008564  6AEE               	clrf	postinc0,c
  1534  008566  50DD               	movf	postdec2,w,c
  1535  008568  50D9               	movf	fsr2l,w,c
  1536  00856A  E1FC               	bnz	clear_0
  1537  00856C  50DA               	movf	fsr2h,w,c
  1538  00856E  E1FA               	bnz	clear_0
  1539                           
  1540                           ; Clear objects allocated to BANK4 (224 bytes)
  1541  008570  EE04  F000         	lfsr	0,__pbssBANK4
  1542  008574  0EE0               	movlw	224
  1543  008576                     clear_1:
  1544  008576  6AEE               	clrf	postinc0,c
  1545  008578  06E8               	decf	wreg,f,c
  1546  00857A  E1FD               	bnz	clear_1
  1547                           
  1548                           ; Clear objects allocated to BANK3 (224 bytes)
  1549  00857C  EE03  F000         	lfsr	0,__pbssBANK3
  1550  008580  0EE0               	movlw	224
  1551  008582                     clear_2:
  1552  008582  6AEE               	clrf	postinc0,c
  1553  008584  06E8               	decf	wreg,f,c
  1554  008586  E1FD               	bnz	clear_2
  1555                           
  1556                           ; Clear objects allocated to BANK2 (249 bytes)
  1557  008588  EE02  F000         	lfsr	0,__pbssBANK2
  1558  00858C  0EF9               	movlw	249
  1559  00858E                     clear_3:
  1560  00858E  6AEE               	clrf	postinc0,c
  1561  008590  06E8               	decf	wreg,f,c
  1562  008592  E1FD               	bnz	clear_3
  1563                           
  1564                           ; Clear objects allocated to BANK1 (140 bytes)
  1565  008594  EE01  F000         	lfsr	0,__pbssBANK1
  1566  008598  0E8C               	movlw	140
  1567  00859A                     clear_4:
  1568  00859A  6AEE               	clrf	postinc0,c
  1569  00859C  06E8               	decf	wreg,f,c
  1570  00859E  E1FD               	bnz	clear_4
  1571                           
  1572                           ; Clear objects allocated to BANK0 (1 bytes)
  1573  0085A0  0100               	movlb	0
  1574  0085A2  6BFF               	clrf	__pbssBANK0& (0+255),b
  1575                           
  1576                           ; Clear objects allocated to COMRAM (12 bytes)
  1577  0085A4  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1578  0085A8  0E0C               	movlw	12
  1579  0085AA                     clear_5:
  1580  0085AA  6AEE               	clrf	postinc0,c
  1581  0085AC  06E8               	decf	wreg,f,c
  1582  0085AE  E1FD               	bnz	clear_5
  1583  0085B0                     end_of_initialization:
  1584                           	opt stack 0
  1585  0085B0                     __end_of__initialization:
  1586                           	opt stack 0
  1587  0085B0  0100               	movlb	0
  1588  0085B2  EF07  F021         	goto	_main	;jump to C main() function
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           postdec2	equ	0xFDD
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           
  1599                           	psect	bssCOMRAM
  1600  00003C                     __pbssCOMRAM:
  1601                           	opt stack 0
  1602  00003C                     _ticksAccounted:
  1603                           	opt stack 0
  1604  00003C                     	ds	4
  1605  000040                     _ticksAdded:
  1606                           	opt stack 0
  1607  000040                     	ds	4
  1608  000044                     _reloadVal:
  1609                           	opt stack 0
  1610  000044                     	ds	2
  1611  000046                     __rcon:
  1612                           	opt stack 0
  1613  000046                     	ds	1
  1614  000047                     _timerOverflow:
  1615                           	opt stack 0
  1616  000047                     	ds	1
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           postdec2	equ	0xFDD
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           
  1627                           	psect	dataCOMRAM
  1628  000054                     __pdataCOMRAM:
  1629                           	opt stack 0
  1630  000054                     _ticksToScheduledInterrupt:
  1631                           	opt stack 0
  1632  000054                     	ds	4
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec2	equ	0xFDD
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           
  1643                           	psect	bssBANK0
  1644  0000FF                     __pbssBANK0:
  1645                           	opt stack 0
  1646  0000FF                     _allocatedTimers:
  1647                           	opt stack 0
  1648  0000FF                     	ds	1
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           
  1659                           	psect	bssBANK1
  1660  000100                     __pbssBANK1:
  1661                           	opt stack 0
  1662  000100                     _t_fine:
  1663                           	opt stack 0
  1664  000100                     	ds	4
  1665  000104                     _adc_H:
  1666                           	opt stack 0
  1667  000104                     	ds	4
  1668  000108                     _adc_T:
  1669                           	opt stack 0
  1670  000108                     	ds	4
  1671  00010C                     _rxPayload:
  1672                           	opt stack 0
  1673  00010C                     	ds	4
  1674  000110                     TMR_GetDeltaTime@retVal:
  1675                           	opt stack 0
  1676  000110                     	ds	4
  1677  000114                     _humidity:
  1678                           	opt stack 0
  1679  000114                     	ds	3
  1680  000117                     _pressure:
  1681                           	opt stack 0
  1682  000117                     	ds	3
  1683  00011A                     _temperature:
  1684                           	opt stack 0
  1685  00011A                     	ds	3
  1686  00011D                     _adcVoltage:
  1687                           	opt stack 0
  1688  00011D                     	ds	3
  1689  000120                     TMR_SwapTimer@retVal:
  1690                           	opt stack 0
  1691  000120                     	ds	2
  1692  000122                     TMR_SwapTimer@oldVal:
  1693                           	opt stack 0
  1694  000122                     	ds	2
  1695  000124                     TMR_GetDeltaTime@tmrVal:
  1696                           	opt stack 0
  1697  000124                     	ds	2
  1698  000126                     _i2c1_driver_i2cISR:
  1699                           	opt stack 0
  1700  000126                     	ds	2
  1701  000128                     _i2c1_driver_busCollisionISR:
  1702                           	opt stack 0
  1703  000128                     	ds	2
  1704  00012A                     _counter:
  1705                           	opt stack 0
  1706  00012A                     	ds	1
  1707  00012B                     _activationMethod:
  1708                           	opt stack 0
  1709  00012B                     	ds	1
  1710  00012C                     _weather_initialized:
  1711                           	opt stack 0
  1712  00012C                     	ds	1
  1713  00012D                     _bme280_status:
  1714                           	opt stack 0
  1715  00012D                     	ds	1
  1716  00012E                     _bme280_ctrl_meas:
  1717                           	opt stack 0
  1718  00012E                     	ds	1
  1719  00012F                     _bme280_ctrl_hum:
  1720                           	opt stack 0
  1721  00012F                     	ds	1
  1722  000130                     _bme280_config:
  1723                           	opt stack 0
  1724  000130                     	ds	1
  1725  000131                     _eusart1RxLastError:
  1726                           	opt stack 0
  1727  000131                     	ds	1
  1728  000132                     _localDioStatus:
  1729                           	opt stack 0
  1730  000132                     	ds	1
  1731  000133                     __roundCounter:
  1732                           	opt stack 0
  1733  000133                     	ds	1
  1734  000134                     _dioStatus:
  1735                           	opt stack 0
  1736  000134                     	ds	1
  1737  000135                     _RadioConfiguration:
  1738                           	opt stack 0
  1739  000135                     	ds	54
  1740  00016B                     _calibParam:
  1741                           	opt stack 0
  1742  00016B                     	ds	33
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           
  1753                           	psect	dataBANK1
  1754  0001F9                     __pdataBANK1:
  1755                           	opt stack 0
  1756  0001F9                     _randx:
  1757                           	opt stack 0
  1758  0001F9                     	ds	4
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec2	equ	0xFDD
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           
  1769                           	psect	bssBANK2
  1770  000200                     __pbssBANK2:
  1771                           	opt stack 0
  1772  000200                     _adc_P:
  1773                           	opt stack 0
  1774  000200                     	ds	4
  1775  000204                     _loRa:
  1776                           	opt stack 0
  1777  000204                     	ds	245
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec2	equ	0xFDD
  1785                           fsr2h	equ	0xFDA
  1786                           fsr2l	equ	0xFD9
  1787                           
  1788                           	psect	dataBANK2
  1789  0002F9                     __pdataBANK2:
  1790                           	opt stack 0
  1791  0002F9                     _deviceAddr:
  1792                           	opt stack 0
  1793  0002F9                     	ds	4
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec2	equ	0xFDD
  1801                           fsr2h	equ	0xFDA
  1802                           fsr2l	equ	0xFD9
  1803                           
  1804                           	psect	bssBANK3
  1805  000300                     __pbssBANK3:
  1806                           	opt stack 0
  1807  000300                     _swTimers:
  1808                           	opt stack 0
  1809  000300                     	ds	160
  1810  0003A0                     _i2c_status:
  1811                           	opt stack 0
  1812  0003A0                     	ds	36
  1813  0003C4                     _adcResult:
  1814                           	opt stack 0
  1815  0003C4                     	ds	4
  1816  0003C8                     _aesBuffer:
  1817                           	opt stack 0
  1818  0003C8                     	ds	16
  1819  0003D8                     _data:
  1820                           	opt stack 0
  1821  0003D8                     	ds	8
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           postdec2	equ	0xFDD
  1829                           fsr2h	equ	0xFDA
  1830                           fsr2l	equ	0xFD9
  1831                           
  1832                           	psect	dataBANK3
  1833  0003E0                     __pdataBANK3:
  1834                           	opt stack 0
  1835  0003E0                     _applicationEUI:
  1836                           	opt stack 0
  1837  0003E0                     	ds	8
  1838  0003E8                     _deviceEUI:
  1839                           	opt stack 0
  1840  0003E8                     	ds	8
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec2	equ	0xFDD
  1848                           fsr2h	equ	0xFDA
  1849                           fsr2l	equ	0xFD9
  1850                           
  1851                           	psect	bssBANK4
  1852  000400                     __pbssBANK4:
  1853                           	opt stack 0
  1854  000400                     _Channels:
  1855                           	opt stack 0
  1856  000400                     	ds	224
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           
  1867                           	psect	dataBANK4
  1868  0004E0                     __pdataBANK4:
  1869                           	opt stack 0
  1870  0004E0                     GenerateSubkey@F7103:
  1871                           	opt stack 0
  1872  0004E0                     	ds	16
  1873  0004F0                     _applicationKey:
  1874                           	opt stack 0
  1875  0004F0                     	ds	16
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           postdec2	equ	0xFDD
  1883                           fsr2h	equ	0xFDA
  1884                           fsr2l	equ	0xFD9
  1885                           
  1886                           	psect	dataBANK5
  1887  000500                     __pdataBANK5:
  1888                           	opt stack 0
  1889  000500                     _appSessionKey:
  1890                           	opt stack 0
  1891  000500                     	ds	16
  1892  000510                     _nwkSessionKey:
  1893                           	opt stack 0
  1894  000510                     	ds	16
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           
  1905                           	psect	bssBIGRAM
  1906  000520                     __pbssBIGRAM:
  1907                           	opt stack 0
  1908  000520                     _macBuffer:
  1909                           	opt stack 0
  1910  000520                     	ds	271
  1911  00062F                     _radioBuffer:
  1912                           	opt stack 0
  1913  00062F                     	ds	271
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec2	equ	0xFDD
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           
  1924                           	psect	cstackBANK1
  1925  00018C                     __pcstackBANK1:
  1926                           	opt stack 0
  1927  00018C                     ?_Weather_getTemperatureDegC:
  1928                           	opt stack 0
  1929  00018C                     ?_Weather_getPressureKPa:
  1930                           	opt stack 0
  1931  00018C                     ?_Weather_getHumidityRH:
  1932                           	opt stack 0
  1933  00018C                     AESCmac@k2:
  1934                           	opt stack 0
  1935                           
  1936                           ; 16 bytes @ 0x0
  1937  00018C                     	ds	3
  1938  00018F                     ?_printf:
  1939                           	opt stack 0
  1940  00018F                     printf@f:
  1941                           	opt stack 0
  1942                           
  1943                           ; 2 bytes @ 0x3
  1944  00018F                     	ds	13
  1945  00019C                     AESCmac@k1:
  1946                           	opt stack 0
  1947                           
  1948                           ; 16 bytes @ 0x10
  1949  00019C                     	ds	1
  1950  00019D                     _printf$7034:
  1951                           	opt stack 0
  1952                           
  1953                           ; 3 bytes @ 0x11
  1954  00019D                     	ds	3
  1955  0001A0                     printf@ap:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x14
  1959  0001A0                     	ds	2
  1960  0001A2                     printf@cp:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x16
  1964  0001A2                     	ds	2
  1965  0001A4                     printf@len:
  1966                           	opt stack 0
  1967                           
  1968                           ; 2 bytes @ 0x18
  1969  0001A4                     	ds	2
  1970  0001A6                     printf@val:
  1971                           	opt stack 0
  1972                           
  1973                           ; 4 bytes @ 0x1A
  1974  0001A6                     	ds	4
  1975  0001AA                     printf@flag:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0x1E
  1979  0001AA                     	ds	2
  1980  0001AC                     printf@tmpval:
  1981                           	opt stack 0
  1982  0001AC                     AESCmac@mLast:
  1983                           	opt stack 0
  1984                           
  1985                           ; 16 bytes @ 0x20
  1986  0001AC                     	ds	4
  1987  0001B0                     printf@exp:
  1988                           	opt stack 0
  1989                           
  1990                           ; 2 bytes @ 0x24
  1991  0001B0                     	ds	2
  1992  0001B2                     printf@width:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x26
  1996  0001B2                     	ds	2
  1997  0001B4                     printf@fval:
  1998                           	opt stack 0
  1999                           
  2000                           ; 3 bytes @ 0x28
  2001  0001B4                     	ds	3
  2002  0001B7                     printf@prec:
  2003                           	opt stack 0
  2004                           
  2005                           ; 2 bytes @ 0x2B
  2006  0001B7                     	ds	2
  2007  0001B9                     printf@c:
  2008                           	opt stack 0
  2009                           
  2010                           ; 1 bytes @ 0x2D
  2011  0001B9                     	ds	3
  2012  0001BC                     AESCmac@padded:
  2013                           	opt stack 0
  2014                           
  2015                           ; 16 bytes @ 0x30
  2016  0001BC                     	ds	16
  2017  0001CC                     AESCmac@y:
  2018                           	opt stack 0
  2019                           
  2020                           ; 16 bytes @ 0x40
  2021  0001CC                     	ds	16
  2022  0001DC                     AESCmac@x:
  2023                           	opt stack 0
  2024                           
  2025                           ; 16 bytes @ 0x50
  2026  0001DC                     	ds	16
  2027  0001EC                     AESCmac@ptr:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x60
  2031  0001EC                     	ds	2
  2032  0001EE                     AESCmac@flag:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0x62
  2036  0001EE                     	ds	1
  2037  0001EF                     AESCmac@n:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x63
  2041  0001EF                     	ds	1
  2042  0001F0                     AESCmac@j:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0x64
  2046  0001F0                     	ds	1
  2047  0001F1                     AESCmac@i:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x65
  2051  0001F1                     	ds	1
  2052  0001F2                     LORAWAN_RxDone@buffer:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x66
  2056  0001F2                     	ds	2
  2057  0001F4                     LORAWAN_RxDone@bufferLength:
  2058                           	opt stack 0
  2059                           
  2060                           ; 1 bytes @ 0x68
  2061  0001F4                     	ds	1
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           postdec2	equ	0xFDD
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           
  2072                           	psect	cstackBANK0
  2073  000060                     __pcstackBANK0:
  2074                           	opt stack 0
  2075  000060                     ??_mssp1_IRQisEnabled:
  2076  000060                     ??_i2c1_driver_isNACK:
  2077  000060                     ??_UpdateMinMaxChDataRate:
  2078  000060                     ??_FindSmallestDataRate:
  2079  000060                     ??_CountfOptsLength:
  2080  000060                     ??_isdigit:
  2081  000060                     ??_BME280_setStandbyTime:
  2082  000060                     ??_BME280_setFilterCoefficient:
  2083  000060                     ??_BME280_setOversamplingTemperature:
  2084  000060                     ??_BME280_setOversamplingPressure:
  2085  000060                     ?_TMR1_ReadTimer:
  2086                           	opt stack 0
  2087  000060                     ?_ExecuteDutyCycle:
  2088                           	opt stack 0
  2089  000060                     ?_ExecuteDevStatus:
  2090                           	opt stack 0
  2091  000060                     ?_ExecuteLinkCheck:
  2092                           	opt stack 0
  2093  000060                     ?_ADC_GetConversion:
  2094                           	opt stack 0
  2095  000060                     ?___awmod:
  2096                           	opt stack 0
  2097  000060                     ?___ftpack:
  2098                           	opt stack 0
  2099  000060                     ?___ftneg:
  2100                           	opt stack 0
  2101  000060                     ?__tdiv_to_l_:
  2102                           	opt stack 0
  2103  000060                     ?__div_to_l_:
  2104                           	opt stack 0
  2105  000060                     ?_GetRx1Freq:
  2106                           	opt stack 0
  2107  000060                     ?___lldiv:
  2108                           	opt stack 0
  2109  000060                     ?___llmod:
  2110                           	opt stack 0
  2111  000060                     i2c_close@ret:
  2112                           	opt stack 0
  2113  000060                     INTERRUPT_GetDioStatus@a:
  2114                           	opt stack 0
  2115  000060                     HALResetPinOutputValue@value:
  2116                           	opt stack 0
  2117  000060                     SwTimerCreate@retVal:
  2118                           	opt stack 0
  2119  000060                     SwTimerIsRunning@timerId:
  2120                           	opt stack 0
  2121  000060                     SwTimerStop@timerId:
  2122                           	opt stack 0
  2123  000060                     RADIO_SetLoRaSyncWord@syncWord:
  2124                           	opt stack 0
  2125  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  2126                           	opt stack 0
  2127  000060                     RADIO_SetOutputPower@power:
  2128                           	opt stack 0
  2129  000060                     RADIO_SetCRC@crc:
  2130                           	opt stack 0
  2131  000060                     RADIO_SetIQInverted@iqInverted:
  2132                           	opt stack 0
  2133  000060                     RADIO_SetBandwidth@bandwidth:
  2134                           	opt stack 0
  2135  000060                     RADIO_SetModulation@modulation:
  2136                           	opt stack 0
  2137  000060                     ValidateDataRate@dataRate:
  2138                           	opt stack 0
  2139  000060                     ValidateTxPower@result:
  2140                           	opt stack 0
  2141  000060                     UpdateDLSettings@dlRx1DrOffset:
  2142                           	opt stack 0
  2143  000060                     UpdateDataRange@dataRangeNew:
  2144                           	opt stack 0
  2145  000060                     UpdateChannelIdStatus@statusNew:
  2146                           	opt stack 0
  2147  000060                     ValidateRxOffset@rxOffset:
  2148                           	opt stack 0
  2149  000060                     ValidateChannelId@allowedForDefaultChannels:
  2150                           	opt stack 0
  2151  000060                     ValidateChannelMaskCntl@result:
  2152                           	opt stack 0
  2153  000060                     UpdateCurrentDataRate@valueNew:
  2154                           	opt stack 0
  2155  000060                     UpdateTxPower@txPowerNew:
  2156                           	opt stack 0
  2157  000060                     UpdateJoinInProgress@state:
  2158                           	opt stack 0
  2159  000060                     SPI2_Exchange8bit@data:
  2160                           	opt stack 0
  2161  000060                     EUSART1_Write@txData:
  2162                           	opt stack 0
  2163  000060                     BME280_setOversamplingHumidity@osrs_h:
  2164                           	opt stack 0
  2165  000060                     BME280_setSensorMode@mode:
  2166                           	opt stack 0
  2167  000060                     i2c1_driver_TXData@d:
  2168                           	opt stack 0
  2169  000060                     ___abdiv@divisor:
  2170                           	opt stack 0
  2171  000060                     i2c_setBuffer@buffer:
  2172                           	opt stack 0
  2173  000060                     setCallBack@cb:
  2174                           	opt stack 0
  2175  000060                     FillSubKey@source:
  2176                           	opt stack 0
  2177  000060                     SwTimerSetCallback@callback:
  2178                           	opt stack 0
  2179  000060                     EncKeySchedule@key:
  2180                           	opt stack 0
  2181  000060                     EncodeShiftRow@stateTable:
  2182                           	opt stack 0
  2183  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  2184                           	opt stack 0
  2185  000060                     ExecuteDutyCycle@ptr:
  2186                           	opt stack 0
  2187  000060                     ExecuteDevStatus@ptr:
  2188                           	opt stack 0
  2189  000060                     UpdateDutyCycle@dutyCycleNew:
  2190                           	opt stack 0
  2191  000060                     ValidateChannelMask@channelMask:
  2192                           	opt stack 0
  2193  000060                     ExecuteLinkCheck@ptr:
  2194                           	opt stack 0
  2195  000060                     IncludeMacCommandsResponse@macBuffer:
  2196                           	opt stack 0
  2197  000060                     CheckFlags@hdr:
  2198                           	opt stack 0
  2199  000060                     CheckMcastFlags@hdr:
  2200                           	opt stack 0
  2201  000060                     INT1_SetInterruptHandler@InterruptHandler:
  2202                           	opt stack 0
  2203  000060                     INT2_SetInterruptHandler@InterruptHandler:
  2204                           	opt stack 0
  2205  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  2206                           	opt stack 0
  2207  000060                     TMR1_WriteTimer@timerVal:
  2208                           	opt stack 0
  2209  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  2210                           	opt stack 0
  2211  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2212                           	opt stack 0
  2213  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2214                           	opt stack 0
  2215  000060                     EUSART1_SetErrorHandler@interruptHandler:
  2216                           	opt stack 0
  2217  000060                     mssp1_waitForEvent@timeout:
  2218                           	opt stack 0
  2219  000060                     i2c1_driver_setBusCollisionISR@handler:
  2220                           	opt stack 0
  2221  000060                     i2c1_driver_setI2cISR@handler:
  2222                           	opt stack 0
  2223  000060                     DELAY_milliseconds@milliseconds:
  2224                           	opt stack 0
  2225  000060                     RxData@pData:
  2226                           	opt stack 0
  2227  000060                     ___awmod@dividend:
  2228                           	opt stack 0
  2229  000060                     memcpy@d1:
  2230                           	opt stack 0
  2231  000060                     memset@p1:
  2232                           	opt stack 0
  2233  000060                     __div_to_l_@f1:
  2234                           	opt stack 0
  2235  000060                     ___ftpack@arg:
  2236                           	opt stack 0
  2237  000060                     __tdiv_to_l_@f1:
  2238                           	opt stack 0
  2239  000060                     ___ftge@ff1:
  2240                           	opt stack 0
  2241  000060                     ___ftneg@f1:
  2242                           	opt stack 0
  2243  000060                     SystemBlockingWaitMs@ms:
  2244                           	opt stack 0
  2245  000060                     RADIO_SetChannelFrequency@frequency:
  2246                           	opt stack 0
  2247  000060                     ValidateFrequency@frequencyNew:
  2248                           	opt stack 0
  2249  000060                     UpdateFrequency@frequencyNew:
  2250                           	opt stack 0
  2251  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  2252                           	opt stack 0
  2253  000060                     UpdateReceiveWindow2Parameters@frequency:
  2254                           	opt stack 0
  2255  000060                     ___lldiv@dividend:
  2256                           	opt stack 0
  2257  000060                     ___llmod@dividend:
  2258                           	opt stack 0
  2259                           
  2260                           ; 4 bytes @ 0x0
  2261  000060                     	ds	1
  2262  000061                     ??_UpdateDataRange:
  2263  000061                     ??_UpdateChannelIdStatus:
  2264  000061                     ??___abdiv:
  2265  000061                     HALSPISend@data:
  2266                           	opt stack 0
  2267  000061                     SwTimerIsRunning@isRunning:
  2268                           	opt stack 0
  2269  000061                     ValidateDataRate@result:
  2270                           	opt stack 0
  2271  000061                     ValidateTxPower@txPowerNew:
  2272                           	opt stack 0
  2273  000061                     UpdateDLSettings@dlRx2Dr:
  2274                           	opt stack 0
  2275  000061                     ValidateRxOffset@result:
  2276                           	opt stack 0
  2277  000061                     ValidateChannelId@result:
  2278                           	opt stack 0
  2279  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  2280                           	opt stack 0
  2281  000061                     UpdateMinMaxChDataRate@i:
  2282                           	opt stack 0
  2283  000061                     FindSmallestDataRate@found:
  2284                           	opt stack 0
  2285  000061                     putch@txData:
  2286                           	opt stack 0
  2287  000061                     BME280_setStandbyTime@sbtime:
  2288                           	opt stack 0
  2289  000061                     BME280_setFilterCoefficient@coeff:
  2290                           	opt stack 0
  2291  000061                     BME280_setOversamplingTemperature@osrs_t:
  2292                           	opt stack 0
  2293  000061                     BME280_setOversamplingPressure@osrs_p:
  2294                           	opt stack 0
  2295  000061                     _isdigit$5835:
  2296                           	opt stack 0
  2297                           
  2298                           ; 1 bytes @ 0x1
  2299  000061                     	ds	1
  2300  000062                     ??_TMR1_ReadTimer:
  2301  000062                     ??_EncKeySchedule:
  2302  000062                     ??_ValidateChannelMask:
  2303  000062                     ??_ExecuteDutyCycle:
  2304  000062                     ??_DELAY_milliseconds:
  2305  000062                     ??_ADC_GetConversion:
  2306  000062                     i2c_open@address:
  2307                           	opt stack 0
  2308  000062                     SwTimerSetCallback@callbackParameter:
  2309                           	opt stack 0
  2310  000062                     EncodeShiftRow@temp:
  2311                           	opt stack 0
  2312  000062                     RADIO_RegisterWrite@value:
  2313                           	opt stack 0
  2314  000062                     RADIO_RegisterRead@reg:
  2315                           	opt stack 0
  2316  000062                     UpdateDataRange@channelId:
  2317                           	opt stack 0
  2318  000062                     UpdateChannelIdStatus@channelId:
  2319                           	opt stack 0
  2320  000062                     ValidateDataRange@result:
  2321                           	opt stack 0
  2322  000062                     ValidateChannelId@channelId:
  2323                           	opt stack 0
  2324  000062                     UpdateDutyCycle@channelId:
  2325                           	opt stack 0
  2326  000062                     FindSmallestDataRate@i:
  2327                           	opt stack 0
  2328  000062                     RxData@dataLength:
  2329                           	opt stack 0
  2330  000062                     isdigit@c:
  2331                           	opt stack 0
  2332  000062                     i2c_setBuffer@bufferSize:
  2333                           	opt stack 0
  2334  000062                     setCallBack@p:
  2335                           	opt stack 0
  2336  000062                     FillSubKey@key:
  2337                           	opt stack 0
  2338  000062                     IncludeMacCommandsResponse@pBufferIndex:
  2339                           	opt stack 0
  2340  000062                     ___awmod@divisor:
  2341                           	opt stack 0
  2342  000062                     memcpy@s1:
  2343                           	opt stack 0
  2344  000062                     memset@c:
  2345                           	opt stack 0
  2346                           
  2347                           ; 2 bytes @ 0x2
  2348  000062                     	ds	1
  2349  000063                     i2c_open@ret:
  2350                           	opt stack 0
  2351  000063                     SwTimerSetCallback@timerId:
  2352                           	opt stack 0
  2353  000063                     RADIO_RegisterWrite@reg:
  2354                           	opt stack 0
  2355  000063                     RADIO_RegisterRead@readValue:
  2356                           	opt stack 0
  2357  000063                     UpdateDataRange@i:
  2358                           	opt stack 0
  2359  000063                     UpdateChannelIdStatus@i:
  2360                           	opt stack 0
  2361  000063                     ValidateDataRange@dataRangeNew:
  2362                           	opt stack 0
  2363  000063                     FindSmallestDataRate@dataRate:
  2364                           	opt stack 0
  2365  000063                     RxData@status:
  2366                           	opt stack 0
  2367  000063                     ___abdiv@counter:
  2368                           	opt stack 0
  2369  000063                     ___ftpack@exp:
  2370                           	opt stack 0
  2371  000063                     __div_to_l_@f2:
  2372                           	opt stack 0
  2373  000063                     __tdiv_to_l_@f2:
  2374                           	opt stack 0
  2375  000063                     ___ftge@ff2:
  2376                           	opt stack 0
  2377                           
  2378                           ; 3 bytes @ 0x3
  2379  000063                     	ds	1
  2380  000064                     ??_SystemBlockingWaitMs:
  2381  000064                     setCallBack@idx:
  2382                           	opt stack 0
  2383  000064                     FillSubKey@size:
  2384                           	opt stack 0
  2385  000064                     RADIO_WritePower@ocp:
  2386                           	opt stack 0
  2387  000064                     RADIO_UnhandledInterrupt@modulation:
  2388                           	opt stack 0
  2389  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  2390                           	opt stack 0
  2391  000064                     ValidateFrequency@result:
  2392                           	opt stack 0
  2393  000064                     ValidateDataRange@dataRateMax:
  2394                           	opt stack 0
  2395  000064                     UpdateFrequency@channelId:
  2396                           	opt stack 0
  2397  000064                     ValidateChannelMask@i:
  2398                           	opt stack 0
  2399  000064                     UpdateReceiveWindow2Parameters@dataRate:
  2400                           	opt stack 0
  2401  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  2402                           	opt stack 0
  2403  000064                     ADC_GetConversion@channel:
  2404                           	opt stack 0
  2405  000064                     ___abdiv@sign:
  2406                           	opt stack 0
  2407  000064                     ___awmod@counter:
  2408                           	opt stack 0
  2409  000064                     ___ftpack@sign:
  2410                           	opt stack 0
  2411  000064                     _EncKeySchedule$914:
  2412                           	opt stack 0
  2413  000064                     EnableChannels1@channelMask:
  2414                           	opt stack 0
  2415  000064                     TMR1_ReadTimer@readVal:
  2416                           	opt stack 0
  2417  000064                     memcpy@n:
  2418                           	opt stack 0
  2419  000064                     memset@n:
  2420                           	opt stack 0
  2421  000064                     ___lldiv@divisor:
  2422                           	opt stack 0
  2423  000064                     ___llmod@divisor:
  2424                           	opt stack 0
  2425                           
  2426                           ; 4 bytes @ 0x4
  2427  000064                     	ds	1
  2428  000065                     ??_FillSubKey:
  2429  000065                     ??_IncludeMacCommandsResponse:
  2430  000065                     ??___ftpack:
  2431  000065                     ??_RADIO_DIO3:
  2432  000065                     ??_RADIO_DIO4:
  2433  000065                     ??_RADIO_DIO5:
  2434  000065                     RADIO_WriteMode@newModulation:
  2435                           	opt stack 0
  2436  000065                     RADIO_WritePower@paDac:
  2437                           	opt stack 0
  2438  000065                     LORAWAN_SetChannelIdStatus@result:
  2439                           	opt stack 0
  2440  000065                     ExecuteDutyCycle@maxDCycle:
  2441                           	opt stack 0
  2442  000065                     ValidateDataRange@dataRateMin:
  2443                           	opt stack 0
  2444  000065                     ___abdiv@quotient:
  2445                           	opt stack 0
  2446  000065                     ___awmod@sign:
  2447                           	opt stack 0
  2448  000065                     i2c_setDataCompleteCallback@cb:
  2449                           	opt stack 0
  2450  000065                     i2c_setAddressNACKCallback@cb:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x5
  2454  000065                     	ds	1
  2455  000066                     ??__tdiv_to_l_:
  2456  000066                     ??___ftge:
  2457  000066                     ?___awdiv:
  2458                           	opt stack 0
  2459  000066                     FillSubKey@carry:
  2460                           	opt stack 0
  2461  000066                     RADIO_WriteMode@blocking:
  2462                           	opt stack 0
  2463  000066                     RADIO_WritePower@power:
  2464                           	opt stack 0
  2465  000066                     RADIO_DIO3@dioMapping:
  2466                           	opt stack 0
  2467  000066                     RADIO_DIO5@dioMapping:
  2468                           	opt stack 0
  2469  000066                     LORAWAN_SetChannelIdStatus@channelId:
  2470                           	opt stack 0
  2471  000066                     EnableChannels1@channelMaskCntl:
  2472                           	opt stack 0
  2473  000066                     CountfOptsLength@macCommandLength:
  2474                           	opt stack 0
  2475  000066                     TMR1_ReadTimer@readValHigh:
  2476                           	opt stack 0
  2477  000066                     ___abdiv@dividend:
  2478                           	opt stack 0
  2479  000066                     memcpy@tmp:
  2480                           	opt stack 0
  2481  000066                     AESEncode@block:
  2482                           	opt stack 0
  2483  000066                     ___awdiv@dividend:
  2484                           	opt stack 0
  2485  000066                     memset@p:
  2486                           	opt stack 0
  2487  000066                     __div_to_l_@quot:
  2488                           	opt stack 0
  2489                           
  2490                           ; 4 bytes @ 0x6
  2491  000066                     	ds	1
  2492  000067                     FillSubKey@i:
  2493                           	opt stack 0
  2494  000067                     RADIO_WriteMode@currentModulation:
  2495                           	opt stack 0
  2496  000067                     RADIO_DIO4@dioMapping:
  2497                           	opt stack 0
  2498  000067                     EnableChannels1@channelIndexMin:
  2499                           	opt stack 0
  2500  000067                     CountfOptsLength@i:
  2501                           	opt stack 0
  2502  000067                     TMR1_ReadTimer@readValLow:
  2503                           	opt stack 0
  2504  000067                     i2c_setDataCompleteCallback@p:
  2505                           	opt stack 0
  2506  000067                     i2c_setAddressNACKCallback@p:
  2507                           	opt stack 0
  2508  000067                     memcpy@d:
  2509                           	opt stack 0
  2510                           
  2511                           ; 2 bytes @ 0x7
  2512  000067                     	ds	1
  2513  000068                     ??_LORAWAN_GetMaxPayloadSize:
  2514  000068                     ?_TMR_SwapTimer:
  2515                           	opt stack 0
  2516  000068                     ?___lwtoft:
  2517                           	opt stack 0
  2518  000068                     ?_TMR_GetDeltaTime:
  2519                           	opt stack 0
  2520  000068                     RADIO_WriteMode@dioMapping:
  2521                           	opt stack 0
  2522  000068                     EnableChannels1@channelIndexMax:
  2523                           	opt stack 0
  2524  000068                     ___llmod@counter:
  2525                           	opt stack 0
  2526  000068                     TMR_SwapTimer@timerVal:
  2527                           	opt stack 0
  2528  000068                     AESEncode@key:
  2529                           	opt stack 0
  2530  000068                     ___awdiv@divisor:
  2531                           	opt stack 0
  2532  000068                     ___lwtoft@c:
  2533                           	opt stack 0
  2534  000068                     ___lldiv@quotient:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x8
  2538  000068                     	ds	1
  2539  000069                     ??_EnableChannels1:
  2540  000069                     RADIO_WriteMode@currentMode:
  2541                           	opt stack 0
  2542  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  2543                           	opt stack 0
  2544  000069                     wr1RegCompleteHandler@p:
  2545                           	opt stack 0
  2546  000069                     rd1RegCompleteHandler@p:
  2547                           	opt stack 0
  2548  000069                     rd2RegCompleteHandler@p:
  2549                           	opt stack 0
  2550  000069                     wr2RegCompleteHandler@p:
  2551                           	opt stack 0
  2552  000069                     rdBlkRegCompleteHandler@p:
  2553                           	opt stack 0
  2554  000069                     memcpy@s:
  2555                           	opt stack 0
  2556  000069                     __tdiv_to_l_@quot:
  2557                           	opt stack 0
  2558                           
  2559                           ; 4 bytes @ 0x9
  2560  000069                     	ds	1
  2561  00006A                     ??_AESEncode:
  2562  00006A                     RADIO_WriteMode@newMode:
  2563                           	opt stack 0
  2564  00006A                     LORAWAN_GetMaxPayloadSize@result:
  2565                           	opt stack 0
  2566  00006A                     ___awdiv@counter:
  2567                           	opt stack 0
  2568  00006A                     __div_to_l_@cntr:
  2569                           	opt stack 0
  2570  00006A                     TMR_OverrideRemaining@ticksRemaining:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xA
  2574  00006A                     	ds	1
  2575  00006B                     ?_ExtractMic:
  2576                           	opt stack 0
  2577  00006B                     RADIO_WriteMode@opMode:
  2578                           	opt stack 0
  2579  00006B                     InitDefault868Channels@i:
  2580                           	opt stack 0
  2581  00006B                     InitDefault433Channels@i:
  2582                           	opt stack 0
  2583  00006B                     EnableChannels1@i:
  2584                           	opt stack 0
  2585  00006B                     ___awdiv@sign:
  2586                           	opt stack 0
  2587  00006B                     __div_to_l_@exp1:
  2588                           	opt stack 0
  2589  00006B                     _do_I2C_TX$317:
  2590                           	opt stack 0
  2591  00006B                     RADIO_SetFSKSyncWord@syncWord:
  2592                           	opt stack 0
  2593  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  2594                           	opt stack 0
  2595  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  2596                           	opt stack 0
  2597  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  2598                           	opt stack 0
  2599  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  2600                           	opt stack 0
  2601  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  2602                           	opt stack 0
  2603  00006B                     PrepareSessionKeys@sessionKey:
  2604                           	opt stack 0
  2605  00006B                     ExtractMic@buffer:
  2606                           	opt stack 0
  2607  00006B                     AssembleEncryptionBlock@frameCounter:
  2608                           	opt stack 0
  2609                           
  2610                           ; 4 bytes @ 0xB
  2611  00006B                     	ds	1
  2612  00006C                     ??_TMR_GetDeltaTime:
  2613  00006C                     ?_RADIO_ReadRandom:
  2614                           	opt stack 0
  2615  00006C                     ___lldiv@counter:
  2616                           	opt stack 0
  2617  00006C                     EnableChannels@channelMask:
  2618                           	opt stack 0
  2619  00006C                     ___awdiv@quotient:
  2620                           	opt stack 0
  2621                           
  2622                           ; 2 bytes @ 0xC
  2623  00006C                     	ds	1
  2624  00006D                     ??_i2c_ISR:
  2625  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  2626                           	opt stack 0
  2627  00006D                     IncludeMacCommandsResponse@i:
  2628                           	opt stack 0
  2629  00006D                     ExtractMic@bufferLength:
  2630                           	opt stack 0
  2631  00006D                     __tdiv_to_l_@cntr:
  2632                           	opt stack 0
  2633  00006D                     PrepareSessionKeys@appNonce:
  2634                           	opt stack 0
  2635  00006D                     SwTimerSetTimeout@timeout:
  2636                           	opt stack 0
  2637  00006D                     RADIO_WriteFrequency@frequency:
  2638                           	opt stack 0
  2639  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2640                           	opt stack 0
  2641  00006D                     RADIO_WriteFSKBitRate@bitRate:
  2642                           	opt stack 0
  2643                           
  2644                           ; 4 bytes @ 0xD
  2645  00006D                     	ds	1
  2646  00006E                     ??_TMR_OverrideRemaining:
  2647  00006E                     ??_RADIO_ReadRandom:
  2648  00006E                     ?___wmul:
  2649                           	opt stack 0
  2650  00006E                     EnableChannels@channelMaskCntl:
  2651                           	opt stack 0
  2652  00006E                     IncludeMacCommandsResponse@bufferIndex:
  2653                           	opt stack 0
  2654  00006E                     __tdiv_to_l_@exp1:
  2655                           	opt stack 0
  2656  00006E                     ___wmul@multiplier:
  2657                           	opt stack 0
  2658  00006E                     ConfigureRadio@freq:
  2659                           	opt stack 0
  2660                           
  2661                           ; 4 bytes @ 0xE
  2662  00006E                     	ds	1
  2663  00006F                     ??_ExtractMic:
  2664  00006F                     ?_ExecuteLinkAdr:
  2665                           	opt stack 0
  2666  00006F                     i2c_masterOperation@read:
  2667                           	opt stack 0
  2668  00006F                     AssembleEncryptionBlock@blockId:
  2669                           	opt stack 0
  2670  00006F                     RADIO_ReadRandom@retVal:
  2671                           	opt stack 0
  2672  00006F                     ExecuteLinkAdr@ptr:
  2673                           	opt stack 0
  2674  00006F                     PrepareSessionKeys@networkId:
  2675                           	opt stack 0
  2676                           
  2677                           ; 2 bytes @ 0xF
  2678  00006F                     	ds	1
  2679  000070                     i2c_masterOperation@ret:
  2680                           	opt stack 0
  2681  000070                     AssembleEncryptionBlock@firstByte:
  2682                           	opt stack 0
  2683  000070                     TMR_OverrideRemaining@tmrVal:
  2684                           	opt stack 0
  2685  000070                     ___wmul@multiplicand:
  2686                           	opt stack 0
  2687                           
  2688                           ; 2 bytes @ 0x10
  2689  000070                     	ds	1
  2690  000071                     ??_ExecuteLinkAdr:
  2691  000071                     ??_SwTimerSetTimeout:
  2692  000071                     i2c_write1ByteRegister@reg:
  2693                           	opt stack 0
  2694  000071                     i2c_read1ByteRegister@reg:
  2695                           	opt stack 0
  2696  000071                     i2c_readDataBlock@reg:
  2697                           	opt stack 0
  2698  000071                     RADIO_ReadRandom@i:
  2699                           	opt stack 0
  2700  000071                     PrepareSessionKeys@index:
  2701                           	opt stack 0
  2702  000071                     AssembleEncryptionBlock@multicastStatus:
  2703                           	opt stack 0
  2704  000071                     RADIO_WriteFrequency@num_mod:
  2705                           	opt stack 0
  2706  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2707                           	opt stack 0
  2708  000071                     RADIO_WriteFSKBitRate@num:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x11
  2712  000071                     	ds	1
  2713  000072                     i2c_write1ByteRegister@data:
  2714                           	opt stack 0
  2715  000072                     i2c_read1ByteRegister@address:
  2716                           	opt stack 0
  2717  000072                     ConfigureRadio@dataRate:
  2718                           	opt stack 0
  2719  000072                     AssembleEncryptionBlock@dir:
  2720                           	opt stack 0
  2721  000072                     i2c_readDataBlock@data:
  2722                           	opt stack 0
  2723  000072                     TMR_OverrideRemaining@oldReloadVal:
  2724                           	opt stack 0
  2725  000072                     _AESEncode$909:
  2726                           	opt stack 0
  2727  000072                     ___wmul@product:
  2728                           	opt stack 0
  2729  000072                     srand@x:
  2730                           	opt stack 0
  2731                           
  2732                           ; 2 bytes @ 0x12
  2733  000072                     	ds	1
  2734  000073                     i2c_write1ByteRegister@address:
  2735                           	opt stack 0
  2736  000073                     i2c_read1ByteRegister@e:
  2737                           	opt stack 0
  2738  000073                     AssembleEncryptionBlock@bufferIndex:
  2739                           	opt stack 0
  2740  000073                     ExecuteLinkAdr@channelMask:
  2741                           	opt stack 0
  2742  000073                     ConfigureRadioTx@freq:
  2743                           	opt stack 0
  2744  000073                     ConfigureRadioRx@freq:
  2745                           	opt stack 0
  2746  000073                     ExtractMic@mic:
  2747                           	opt stack 0
  2748                           
  2749                           ; 4 bytes @ 0x13
  2750  000073                     	ds	1
  2751  000074                     ?___ftmul:
  2752                           	opt stack 0
  2753  000074                     UpdateReceiveDelays@delay:
  2754                           	opt stack 0
  2755  000074                     BME280_writeByte@data:
  2756                           	opt stack 0
  2757  000074                     i2c_read1ByteRegister@x:
  2758                           	opt stack 0
  2759  000074                     i2c_readDataBlock@len:
  2760                           	opt stack 0
  2761  000074                     _AESEncode$910:
  2762                           	opt stack 0
  2763  000074                     ___ftmul@f1:
  2764                           	opt stack 0
  2765                           
  2766                           ; 3 bytes @ 0x14
  2767  000074                     	ds	1
  2768  000075                     ?_ExecuteRxTimingSetup:
  2769                           	opt stack 0
  2770  000075                     SwTimerSetTimeout@timerId:
  2771                           	opt stack 0
  2772  000075                     ExecuteLinkAdr@txPower:
  2773                           	opt stack 0
  2774  000075                     BME280_writeByte@reg_addr:
  2775                           	opt stack 0
  2776  000075                     ExecuteRxTimingSetup@ptr:
  2777                           	opt stack 0
  2778  000075                     RADIO_WriteFrequency@num:
  2779                           	opt stack 0
  2780                           
  2781                           ; 4 bytes @ 0x15
  2782  000075                     	ds	1
  2783  000076                     i2c_read1ByteRegister@d2:
  2784                           	opt stack 0
  2785  000076                     i2c_readDataBlock@address:
  2786                           	opt stack 0
  2787  000076                     _AESEncode$911:
  2788                           	opt stack 0
  2789  000076                     ExecuteLinkAdr@redundancy:
  2790                           	opt stack 0
  2791                           
  2792                           ; 2 bytes @ 0x16
  2793  000076                     	ds	1
  2794  000077                     ConfigureRadioTx@dataRate:
  2795                           	opt stack 0
  2796  000077                     ExecuteRxTimingSetup@delay:
  2797                           	opt stack 0
  2798  000077                     ConfigureRadioRx@dataRate:
  2799                           	opt stack 0
  2800  000077                     BME280_readByte@reg_addr:
  2801                           	opt stack 0
  2802  000077                     ___ftmul@f2:
  2803                           	opt stack 0
  2804  000077                     i2c_readDataBlock@d:
  2805                           	opt stack 0
  2806                           
  2807                           ; 4 bytes @ 0x17
  2808  000077                     	ds	1
  2809  000078                     AESEncode@aux:
  2810                           	opt stack 0
  2811  000078                     ExecuteLinkAdr@dataRate:
  2812                           	opt stack 0
  2813  000078                     ConfigureRadioTx@txPower:
  2814                           	opt stack 0
  2815                           
  2816                           ; 1 bytes @ 0x18
  2817  000078                     	ds	1
  2818  000079                     AESEncode@aux2:
  2819                           	opt stack 0
  2820  000079                     RADIO_FHSSChangeChannel@irqFlags:
  2821                           	opt stack 0
  2822  000079                     RADIO_Init@radioBuffer:
  2823                           	opt stack 0
  2824                           
  2825                           ; 2 bytes @ 0x19
  2826  000079                     	ds	1
  2827  00007A                     ??___ftmul:
  2828  00007A                     ??_RADIO_DIO2:
  2829  00007A                     AESEncode@aux1:
  2830                           	opt stack 0
  2831                           
  2832                           ; 1 bytes @ 0x1A
  2833  00007A                     	ds	1
  2834  00007B                     AESEncode@aux3:
  2835                           	opt stack 0
  2836  00007B                     RADIO_DIO2@opMode:
  2837                           	opt stack 0
  2838  00007B                     BME280_readBlock@read_buff:
  2839                           	opt stack 0
  2840  00007B                     RADIO_Init@frequency:
  2841                           	opt stack 0
  2842                           
  2843                           ; 4 bytes @ 0x1B
  2844  00007B                     	ds	1
  2845  00007C                     AESEncode@i:
  2846                           	opt stack 0
  2847  00007C                     RADIO_DIO2@dioMapping:
  2848                           	opt stack 0
  2849                           
  2850                           ; 1 bytes @ 0x1C
  2851  00007C                     	ds	1
  2852  00007D                     BME280_readBlock@length:
  2853                           	opt stack 0
  2854  00007D                     ___ftmul@exp:
  2855                           	opt stack 0
  2856  00007D                     AESEncodeLoRa@block:
  2857                           	opt stack 0
  2858                           
  2859                           ; 2 bytes @ 0x1D
  2860  00007D                     	ds	1
  2861  00007E                     BME280_readBlock@reg_addr:
  2862                           	opt stack 0
  2863  00007E                     ___ftmul@f3_as_product:
  2864                           	opt stack 0
  2865                           
  2866                           ; 3 bytes @ 0x1E
  2867  00007E                     	ds	1
  2868  00007F                     ??_RADIO_Init:
  2869  00007F                     ??_BME280_readFactoryCalibrationParams:
  2870  00007F                     ??_BME280_readMeasurements:
  2871  00007F                     AESEncodeLoRa@key:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x1F
  2875  00007F                     	ds	1
  2876  000080                     ?_SwTimersInterrupt:
  2877                           	opt stack 0
  2878                           
  2879                           ; 4 bytes @ 0x20
  2880  000080                     	ds	1
  2881  000081                     ___ftmul@cntr:
  2882                           	opt stack 0
  2883  000081                     AESEncodeLoRa@useKey:
  2884                           	opt stack 0
  2885                           
  2886                           ; 16 bytes @ 0x21
  2887  000081                     	ds	1
  2888  000082                     ___ftmul@sign:
  2889                           	opt stack 0
  2890  000082                     BME280_readFactoryCalibrationParams@paramBuff:
  2891                           	opt stack 0
  2892                           
  2893                           ; 24 bytes @ 0x22
  2894  000082                     	ds	1
  2895  000083                     ?_fround:
  2896                           	opt stack 0
  2897  000083                     ?_scale:
  2898                           	opt stack 0
  2899  000083                     ?___fttol:
  2900                           	opt stack 0
  2901  000083                     ___fttol@f1:
  2902                           	opt stack 0
  2903                           
  2904                           ; 3 bytes @ 0x23
  2905  000083                     	ds	1
  2906  000084                     
  2907                           ; 1 bytes @ 0x24
  2908  000084                     	ds	2
  2909  000086                     _fround$7032:
  2910                           	opt stack 0
  2911  000086                     _scale$7033:
  2912                           	opt stack 0
  2913                           
  2914                           ; 3 bytes @ 0x26
  2915  000086                     	ds	1
  2916  000087                     ??___fttol:
  2917                           
  2918                           ; 1 bytes @ 0x27
  2919  000087                     	ds	1
  2920  000088                     SwTimersInterrupt@timeElapsed:
  2921                           	opt stack 0
  2922                           
  2923                           ; 4 bytes @ 0x28
  2924  000088                     	ds	1
  2925  000089                     scale@scl:
  2926                           	opt stack 0
  2927  000089                     _fround$7031:
  2928                           	opt stack 0
  2929                           
  2930                           ; 3 bytes @ 0x29
  2931  000089                     	ds	3
  2932  00008C                     fround@prec:
  2933                           	opt stack 0
  2934  00008C                     ___fttol@sign1:
  2935                           	opt stack 0
  2936  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  2937                           	opt stack 0
  2938  00008C                     BME280_readMeasurements@sensorData:
  2939                           	opt stack 0
  2940                           
  2941                           ; 8 bytes @ 0x2C
  2942  00008C                     	ds	1
  2943  00008D                     ?___ftadd:
  2944                           	opt stack 0
  2945  00008D                     ___ftadd@f1:
  2946                           	opt stack 0
  2947  00008D                     ___fttol@lval:
  2948                           	opt stack 0
  2949                           
  2950                           ; 4 bytes @ 0x2D
  2951  00008D                     	ds	3
  2952  000090                     SwTimersInterrupt@i:
  2953                           	opt stack 0
  2954  000090                     ___ftadd@f2:
  2955                           	opt stack 0
  2956                           
  2957                           ; 3 bytes @ 0x30
  2958  000090                     	ds	1
  2959  000091                     ?_SwTimerReadValue:
  2960                           	opt stack 0
  2961  000091                     ___fttol@exp1:
  2962                           	opt stack 0
  2963  000091                     GenerateSubkey@key:
  2964                           	opt stack 0
  2965  000091                     ComputeSessionKeys@joinAcceptBuffer:
  2966                           	opt stack 0
  2967  000091                     EncryptFRMPayload@buffer:
  2968                           	opt stack 0
  2969                           
  2970                           ; 2 bytes @ 0x31
  2971  000091                     	ds	2
  2972  000093                     ??___ftadd:
  2973  000093                     EncryptFRMPayload@bufferLength:
  2974                           	opt stack 0
  2975  000093                     GenerateSubkey@k1:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x33
  2979  000093                     	ds	1
  2980  000094                     EncryptFRMPayload@dir:
  2981                           	opt stack 0
  2982                           
  2983                           ; 1 bytes @ 0x34
  2984  000094                     	ds	1
  2985  000095                     GenerateSubkey@k2:
  2986                           	opt stack 0
  2987  000095                     SwTimerReadValue@ticksCount:
  2988                           	opt stack 0
  2989  000095                     SwTimerStart@ticksRemaining:
  2990                           	opt stack 0
  2991  000095                     EncryptFRMPayload@frameCounter:
  2992                           	opt stack 0
  2993                           
  2994                           ; 4 bytes @ 0x35
  2995  000095                     	ds	1
  2996  000096                     ___ftadd@sign:
  2997                           	opt stack 0
  2998                           
  2999                           ; 1 bytes @ 0x36
  3000  000096                     	ds	1
  3001  000097                     ??_GenerateSubkey:
  3002  000097                     ___ftadd@exp2:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x37
  3006  000097                     	ds	1
  3007  000098                     ___ftadd@exp1:
  3008                           	opt stack 0
  3009  000098                     GenerateSubkey@const_Rb:
  3010                           	opt stack 0
  3011                           
  3012                           ; 16 bytes @ 0x38
  3013  000098                     	ds	1
  3014  000099                     SwTimerReadValue@timerId:
  3015                           	opt stack 0
  3016  000099                     SwTimerStart@timerId:
  3017                           	opt stack 0
  3018  000099                     EncryptFRMPayload@key:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x39
  3022  000099                     	ds	1
  3023  00009A                     ??_UpdateRetransmissionAckTimeoutState:
  3024  00009A                     ??_StartReTxTimer:
  3025  00009A                     ?___lmul:
  3026                           	opt stack 0
  3027  00009A                     ___lmul@multiplier:
  3028                           	opt stack 0
  3029                           
  3030                           ; 4 bytes @ 0x3A
  3031  00009A                     	ds	1
  3032  00009B                     EncryptFRMPayload@macBufferIndex:
  3033                           	opt stack 0
  3034                           
  3035                           ; 1 bytes @ 0x3B
  3036  00009B                     	ds	1
  3037  00009C                     EncryptFRMPayload@bufferToBeEncrypted:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x3C
  3041  00009C                     	ds	2
  3042  00009E                     EncryptFRMPayload@multicastStatus:
  3043                           	opt stack 0
  3044  00009E                     StartReTxTimer@minim:
  3045                           	opt stack 0
  3046  00009E                     ___lmul@multiplicand:
  3047                           	opt stack 0
  3048                           
  3049                           ; 4 bytes @ 0x3E
  3050  00009E                     	ds	1
  3051  00009F                     ??_EncryptFRMPayload:
  3052                           
  3053                           ; 1 bytes @ 0x3F
  3054  00009F                     	ds	3
  3055  0000A2                     StartReTxTimer@i:
  3056                           	opt stack 0
  3057  0000A2                     ___lmul@product:
  3058                           	opt stack 0
  3059                           
  3060                           ; 4 bytes @ 0x42
  3061  0000A2                     	ds	2
  3062  0000A4                     EncryptFRMPayload@k:
  3063                           	opt stack 0
  3064                           
  3065                           ; 1 bytes @ 0x44
  3066  0000A4                     	ds	1
  3067  0000A5                     EncryptFRMPayload@i:
  3068                           	opt stack 0
  3069                           
  3070                           ; 1 bytes @ 0x45
  3071  0000A5                     	ds	1
  3072  0000A6                     ?_ExecuteNewChannel:
  3073                           	opt stack 0
  3074  0000A6                     ?_ExecuteRxParamSetupReq:
  3075                           	opt stack 0
  3076  0000A6                     ?_rand:
  3077                           	opt stack 0
  3078  0000A6                     ?_BME280_compensateTemperature:
  3079                           	opt stack 0
  3080  0000A6                     ?_BME280_compensatePressure:
  3081                           	opt stack 0
  3082  0000A6                     ?_BME280_compensateHumidity:
  3083                           	opt stack 0
  3084  0000A6                     EncryptFRMPayload@j:
  3085                           	opt stack 0
  3086  0000A6                     RADIO_WriteConfiguration@symbolTimeout:
  3087                           	opt stack 0
  3088  0000A6                     ExecuteNewChannel@ptr:
  3089                           	opt stack 0
  3090  0000A6                     ExecuteRxParamSetupReq@ptr:
  3091                           	opt stack 0
  3092  0000A6                     UpdateCfList@joinAccept:
  3093                           	opt stack 0
  3094  0000A6                     LORAWAN_LinkCheckConfigure@period:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x46
  3098  0000A6                     	ds	2
  3099  0000A8                     ??_LORAWAN_LinkCheckConfigure:
  3100  0000A8                     ??_ExecuteNewChannel:
  3101  0000A8                     ??_ExecuteRxParamSetupReq:
  3102  0000A8                     ??_RADIO_WriteConfiguration:
  3103  0000A8                     ?___lwmod:
  3104                           	opt stack 0
  3105  0000A8                     UpdateCfList@bufferLength:
  3106                           	opt stack 0
  3107  0000A8                     ___lwmod@dividend:
  3108                           	opt stack 0
  3109  0000A8                     GenerateSubkey@l:
  3110                           	opt stack 0
  3111                           
  3112                           ; 16 bytes @ 0x48
  3113  0000A8                     	ds	1
  3114  0000A9                     UpdateCfList@frequency:
  3115                           	opt stack 0
  3116                           
  3117                           ; 4 bytes @ 0x49
  3118  0000A9                     	ds	1
  3119  0000AA                     ??_BME280_compensateTemperature:
  3120  0000AA                     ??_BME280_compensatePressure:
  3121  0000AA                     ??_BME280_compensateHumidity:
  3122  0000AA                     ExecuteNewChannel@drRange:
  3123                           	opt stack 0
  3124  0000AA                     ___lwmod@divisor:
  3125                           	opt stack 0
  3126  0000AA                     ExecuteRxParamSetupReq@frequency:
  3127                           	opt stack 0
  3128                           
  3129                           ; 4 bytes @ 0x4A
  3130  0000AA                     	ds	1
  3131  0000AB                     RADIO_WriteConfiguration@i:
  3132                           	opt stack 0
  3133  0000AB                     ExecuteNewChannel@frequency:
  3134                           	opt stack 0
  3135                           
  3136                           ; 4 bytes @ 0x4B
  3137  0000AB                     	ds	1
  3138  0000AC                     ___lwmod@counter:
  3139                           	opt stack 0
  3140  0000AC                     RADIO_WriteConfiguration@tempValue:
  3141                           	opt stack 0
  3142  0000AC                     _LORAWAN_LinkCheckConfigure$2892:
  3143                           	opt stack 0
  3144                           
  3145                           ; 4 bytes @ 0x4C
  3146  0000AC                     	ds	1
  3147  0000AD                     ?_Random:
  3148                           	opt stack 0
  3149  0000AD                     UpdateCfList@channelIndex:
  3150                           	opt stack 0
  3151  0000AD                     Random@max:
  3152                           	opt stack 0
  3153                           
  3154                           ; 2 bytes @ 0x4D
  3155  0000AD                     	ds	1
  3156  0000AE                     ExecuteRxParamSetupReq@dlSettings:
  3157                           	opt stack 0
  3158  0000AE                     UpdateCfList@i:
  3159                           	opt stack 0
  3160                           
  3161                           ; 1 bytes @ 0x4E
  3162  0000AE                     	ds	1
  3163  0000AF                     ExecuteNewChannel@channelIndex:
  3164                           	opt stack 0
  3165  0000AF                     SearchAvailableChannel@transmissionType:
  3166                           	opt stack 0
  3167                           
  3168                           ; 1 bytes @ 0x4F
  3169  0000AF                     	ds	1
  3170  0000B0                     ?_MacExecuteCommands:
  3171                           	opt stack 0
  3172  0000B0                     RADIO_WriteConfiguration@regValue:
  3173                           	opt stack 0
  3174  0000B0                     LORAWAN_LinkCheckConfigure@iCtr:
  3175                           	opt stack 0
  3176  0000B0                     SearchAvailableChannel@channelIndex:
  3177                           	opt stack 0
  3178  0000B0                     MacExecuteCommands@buffer:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x50
  3182  0000B0                     	ds	1
  3183  0000B1                     ?_RADIO_Transmit:
  3184                           	opt stack 0
  3185  0000B1                     ?_RADIO_ReceiveStart:
  3186                           	opt stack 0
  3187  0000B1                     LORAWAN_Reset@ismBandNew:
  3188                           	opt stack 0
  3189  0000B1                     RADIO_Transmit@buffer:
  3190                           	opt stack 0
  3191  0000B1                     RADIO_ReceiveStart@rxWindowSize:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x51
  3195  0000B1                     	ds	1
  3196  0000B2                     ??_SearchAvailableChannel:
  3197  0000B2                     MacExecuteCommands@fOptsLen:
  3198                           	opt stack 0
  3199  0000B2                     LORAWAN_Init@RxPayload:
  3200                           	opt stack 0
  3201                           
  3202                           ; 2 bytes @ 0x52
  3203  0000B2                     	ds	1
  3204  0000B3                     ??_MacExecuteCommands:
  3205  0000B3                     ??_RADIO_ReceiveStart:
  3206  0000B3                     RADIO_Transmit@bufferLen:
  3207                           	opt stack 0
  3208                           
  3209                           ; 1 bytes @ 0x53
  3210  0000B3                     	ds	1
  3211  0000B4                     ??_RADIO_Transmit:
  3212  0000B4                     LORAWAN_Init@RxJoinResponse:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x54
  3216  0000B4                     	ds	1
  3217  0000B5                     MacExecuteCommands@done:
  3218                           	opt stack 0
  3219                           
  3220                           ; 1 bytes @ 0x55
  3221  0000B5                     	ds	1
  3222  0000B6                     SearchAvailableChannel@randomNumberCopy:
  3223                           	opt stack 0
  3224  0000B6                     MacExecuteCommands@ptr:
  3225                           	opt stack 0
  3226                           
  3227                           ; 2 bytes @ 0x56
  3228  0000B6                     	ds	1
  3229  0000B7                     SearchAvailableChannel@result:
  3230                           	opt stack 0
  3231  0000B7                     _RADIO_ReceiveStart$1177:
  3232                           	opt stack 0
  3233  0000B7                     _BME280_compensatePressure$7025:
  3234                           	opt stack 0
  3235                           
  3236                           ; 4 bytes @ 0x57
  3237  0000B7                     	ds	1
  3238  0000B8                     GenerateSubkey@i:
  3239                           	opt stack 0
  3240  0000B8                     SearchAvailableChannel@maxChannels:
  3241                           	opt stack 0
  3242  0000B8                     _RADIO_Transmit$1172:
  3243                           	opt stack 0
  3244                           
  3245                           ; 4 bytes @ 0x58
  3246  0000B8                     	ds	1
  3247  0000B9                     SearchAvailableChannel@randomNumber:
  3248                           	opt stack 0
  3249  0000B9                     AESCmac@key:
  3250                           	opt stack 0
  3251                           
  3252                           ; 2 bytes @ 0x59
  3253  0000B9                     	ds	1
  3254  0000BA                     SearchAvailableChannel@i:
  3255                           	opt stack 0
  3256                           
  3257                           ; 1 bytes @ 0x5A
  3258  0000BA                     	ds	1
  3259  0000BB                     SelectChannelForTransmission@transmissionType:
  3260                           	opt stack 0
  3261  0000BB                     AESCmac@output:
  3262                           	opt stack 0
  3263  0000BB                     LORAWAN_TxDone@timeOnAir:
  3264                           	opt stack 0
  3265  0000BB                     BME280_compensatePressure@pressV2:
  3266                           	opt stack 0
  3267                           
  3268                           ; 4 bytes @ 0x5B
  3269  0000BB                     	ds	1
  3270  0000BC                     SelectChannelForTransmission@result:
  3271                           	opt stack 0
  3272  0000BC                     _RADIO_Transmit$1174:
  3273                           	opt stack 0
  3274                           
  3275                           ; 4 bytes @ 0x5C
  3276  0000BC                     	ds	1
  3277  0000BD                     ??_LORAWAN_TxDone:
  3278  0000BD                     SelectChannelForTransmission@channelIndex:
  3279                           	opt stack 0
  3280  0000BD                     AESCmac@input:
  3281                           	opt stack 0
  3282  0000BD                     BME280_compensateTemperature@tempV1:
  3283                           	opt stack 0
  3284                           
  3285                           ; 4 bytes @ 0x5D
  3286  0000BD                     	ds	2
  3287  0000BF                     AESCmac@size:
  3288                           	opt stack 0
  3289  0000BF                     BME280_compensatePressure@p:
  3290                           	opt stack 0
  3291  0000BF                     BME280_compensateHumidity@h:
  3292                           	opt stack 0
  3293                           
  3294                           ; 4 bytes @ 0x5F
  3295  0000BF                     	ds	1
  3296  0000C0                     ??_AESCmac:
  3297  0000C0                     RADIO_Transmit@regValue:
  3298                           	opt stack 0
  3299                           
  3300                           ; 1 bytes @ 0x60
  3301  0000C0                     	ds	1
  3302  0000C1                     RADIO_Transmit@i:
  3303                           	opt stack 0
  3304  0000C1                     BME280_compensateTemperature@tempV2:
  3305                           	opt stack 0
  3306                           
  3307                           ; 4 bytes @ 0x61
  3308  0000C1                     	ds	1
  3309  0000C2                     ??_LORAWAN_RxTimeout:
  3310                           
  3311                           ; 1 bytes @ 0x62
  3312  0000C2                     	ds	1
  3313  0000C3                     BME280_compensatePressure@pressV1:
  3314                           	opt stack 0
  3315  0000C3                     _BME280_compensateHumidity$7027:
  3316                           	opt stack 0
  3317                           
  3318                           ; 4 bytes @ 0x63
  3319  0000C3                     	ds	2
  3320  0000C5                     BME280_compensateTemperature@t:
  3321                           	opt stack 0
  3322                           
  3323                           ; 4 bytes @ 0x65
  3324  0000C5                     	ds	1
  3325  0000C6                     LORAWAN_RxTimeout@minim:
  3326                           	opt stack 0
  3327                           
  3328                           ; 4 bytes @ 0x66
  3329  0000C6                     	ds	1
  3330  0000C7                     ?_ComputeMic:
  3331                           	opt stack 0
  3332  0000C7                     AssemblePacket@port:
  3333                           	opt stack 0
  3334  0000C7                     ComputeMic@key:
  3335                           	opt stack 0
  3336  0000C7                     _BME280_compensateHumidity$7028:
  3337                           	opt stack 0
  3338                           
  3339                           ; 4 bytes @ 0x67
  3340  0000C7                     	ds	1
  3341  0000C8                     AssemblePacket@buffer:
  3342                           	opt stack 0
  3343                           
  3344                           ; 2 bytes @ 0x68
  3345  0000C8                     	ds	1
  3346  0000C9                     ComputeMic@buffer:
  3347                           	opt stack 0
  3348  0000C9                     _LORAWAN_TxDone$2066:
  3349                           	opt stack 0
  3350  0000C9                     _BME280_compensateTemperature$7024:
  3351                           	opt stack 0
  3352                           
  3353                           ; 4 bytes @ 0x69
  3354  0000C9                     	ds	1
  3355  0000CA                     LORAWAN_RxTimeout@i:
  3356                           	opt stack 0
  3357  0000CA                     AssemblePacket@bufferLength:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x6A
  3361  0000CA                     	ds	1
  3362  0000CB                     ??_RADIO_DIO1:
  3363  0000CB                     ComputeMic@bufferLength:
  3364                           	opt stack 0
  3365  0000CB                     _BME280_compensateHumidity$7029:
  3366                           	opt stack 0
  3367                           
  3368                           ; 4 bytes @ 0x6B
  3369  0000CB                     	ds	1
  3370  0000CC                     ??_AssemblePacket:
  3371  0000CC                     RADIO_DIO1@dioMapping:
  3372                           	opt stack 0
  3373  0000CC                     ComputeMic@mic:
  3374                           	opt stack 0
  3375                           
  3376                           ; 4 bytes @ 0x6C
  3377  0000CC                     	ds	1
  3378  0000CD                     ?___altoft:
  3379                           	opt stack 0
  3380  0000CD                     _LORAWAN_TxDone$2067:
  3381                           	opt stack 0
  3382  0000CD                     ___altoft@c:
  3383                           	opt stack 0
  3384                           
  3385                           ; 4 bytes @ 0x6D
  3386  0000CD                     	ds	1
  3387  0000CE                     AssemblePacket@confirmed:
  3388                           	opt stack 0
  3389                           
  3390                           ; 1 bytes @ 0x6E
  3391  0000CE                     	ds	1
  3392  0000CF                     AssemblePacket@mhdr:
  3393                           	opt stack 0
  3394  0000CF                     _BME280_compensateHumidity$7030:
  3395                           	opt stack 0
  3396                           
  3397                           ; 4 bytes @ 0x6F
  3398  0000CF                     	ds	1
  3399  0000D0                     ??_PrepareJoinRequestFrame:
  3400  0000D0                     AssemblePacket@fCtrl:
  3401                           	opt stack 0
  3402                           
  3403                           ; 1 bytes @ 0x70
  3404  0000D0                     	ds	1
  3405  0000D1                     ??___altoft:
  3406  0000D1                     LORAWAN_TxDone@found:
  3407                           	opt stack 0
  3408  0000D1                     AssemblePacket@macCmdIdx:
  3409                           	opt stack 0
  3410                           
  3411                           ; 1 bytes @ 0x71
  3412  0000D1                     	ds	1
  3413  0000D2                     AssemblePacket@bufferIndex:
  3414                           	opt stack 0
  3415  0000D2                     LORAWAN_TxDone@delta:
  3416                           	opt stack 0
  3417                           
  3418                           ; 4 bytes @ 0x72
  3419  0000D2                     	ds	1
  3420  0000D3                     LORAWAN_Send@port:
  3421                           	opt stack 0
  3422  0000D3                     _BME280_compensateHumidity$7026:
  3423                           	opt stack 0
  3424                           
  3425                           ; 4 bytes @ 0x73
  3426  0000D3                     	ds	1
  3427  0000D4                     LORAWAN_Send@buffer:
  3428                           	opt stack 0
  3429  0000D4                     PrepareJoinRequestFrame@mic:
  3430                           	opt stack 0
  3431                           
  3432                           ; 4 bytes @ 0x74
  3433  0000D4                     	ds	1
  3434  0000D5                     ___altoft@exp:
  3435                           	opt stack 0
  3436                           
  3437                           ; 1 bytes @ 0x75
  3438  0000D5                     	ds	1
  3439  0000D6                     LORAWAN_Send@bufferLength:
  3440                           	opt stack 0
  3441  0000D6                     ___altoft@sign:
  3442                           	opt stack 0
  3443  0000D6                     _LORAWAN_TxDone$7023:
  3444                           	opt stack 0
  3445                           
  3446                           ; 4 bytes @ 0x76
  3447  0000D6                     	ds	1
  3448  0000D7                     ??_LORAWAN_Send:
  3449  0000D7                     BME280_compensateHumidity@humV:
  3450                           	opt stack 0
  3451                           
  3452                           ; 4 bytes @ 0x77
  3453  0000D7                     	ds	1
  3454  0000D8                     LORAWAN_Send@result:
  3455                           	opt stack 0
  3456  0000D8                     PrepareJoinRequestFrame@mhdr:
  3457                           	opt stack 0
  3458                           
  3459                           ; 1 bytes @ 0x78
  3460  0000D8                     	ds	1
  3461  0000D9                     LORAWAN_Send@confirmed:
  3462                           	opt stack 0
  3463  0000D9                     PrepareJoinRequestFrame@iCtr:
  3464                           	opt stack 0
  3465                           
  3466                           ; 1 bytes @ 0x79
  3467  0000D9                     	ds	1
  3468  0000DA                     ??_LORAWAN_RxDone:
  3469  0000DA                     ??_SwTimersExecute:
  3470  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  3471                           	opt stack 0
  3472  0000DA                     LORAWAN_TxDone@ticks:
  3473                           	opt stack 0
  3474                           
  3475                           ; 4 bytes @ 0x7A
  3476  0000DA                     	ds	1
  3477  0000DB                     ?___lltoft:
  3478                           	opt stack 0
  3479  0000DB                     LORAWAN_Join@bufferIndex:
  3480                           	opt stack 0
  3481  0000DB                     ___lltoft@c:
  3482                           	opt stack 0
  3483                           
  3484                           ; 4 bytes @ 0x7B
  3485  0000DB                     	ds	1
  3486  0000DC                     LORAWAN_Join@result:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x7C
  3490  0000DC                     	ds	1
  3491  0000DD                     LORAWAN_Join@activationTypeNew:
  3492                           	opt stack 0
  3493                           
  3494                           ; 1 bytes @ 0x7D
  3495  0000DD                     	ds	1
  3496  0000DE                     SwTimersExecute@i:
  3497                           	opt stack 0
  3498  0000DE                     LORAWAN_TxDone@minim:
  3499                           	opt stack 0
  3500                           
  3501                           ; 4 bytes @ 0x7E
  3502  0000DE                     	ds	1
  3503  0000DF                     ??___lltoft:
  3504  0000DF                     LORAWAN_RxDone@fPort:
  3505                           	opt stack 0
  3506                           
  3507                           ; 1 bytes @ 0x7F
  3508  0000DF                     	ds	1
  3509  0000E0                     LORAWAN_RxDone@channelIndex:
  3510                           	opt stack 0
  3511                           
  3512                           ; 1 bytes @ 0x80
  3513  0000E0                     	ds	1
  3514  0000E1                     LORAWAN_RxDone@mhdr:
  3515                           	opt stack 0
  3516                           
  3517                           ; 1 bytes @ 0x81
  3518  0000E1                     	ds	1
  3519  0000E2                     LORAWAN_TxDone@i:
  3520                           	opt stack 0
  3521  0000E2                     LORAWAN_RxDone@extractedMic:
  3522                           	opt stack 0
  3523                           
  3524                           ; 4 bytes @ 0x82
  3525  0000E2                     	ds	1
  3526  0000E3                     ??_RADIO_TxDone:
  3527  0000E3                     ??_RADIO_FSKPacketSent:
  3528  0000E3                     ___lltoft@exp:
  3529                           	opt stack 0
  3530                           
  3531                           ; 1 bytes @ 0x83
  3532  0000E3                     	ds	1
  3533  0000E4                     ?___ftdiv:
  3534                           	opt stack 0
  3535  0000E4                     ?___ftsub:
  3536                           	opt stack 0
  3537  0000E4                     ___ftdiv@f1:
  3538                           	opt stack 0
  3539  0000E4                     ___ftsub@f1:
  3540                           	opt stack 0
  3541                           
  3542                           ; 3 bytes @ 0x84
  3543  0000E4                     	ds	2
  3544  0000E6                     LORAWAN_RxDone@bufferIndex:
  3545                           	opt stack 0
  3546                           
  3547                           ; 1 bytes @ 0x86
  3548  0000E6                     	ds	1
  3549  0000E7                     LORAWAN_RxDone@temp:
  3550                           	opt stack 0
  3551  0000E7                     ___ftdiv@f2:
  3552                           	opt stack 0
  3553  0000E7                     ___ftsub@f2:
  3554                           	opt stack 0
  3555  0000E7                     RADIO_TxDone@timeOnAir:
  3556                           	opt stack 0
  3557  0000E7                     RADIO_FSKPacketSent@timeOnAir:
  3558                           	opt stack 0
  3559                           
  3560                           ; 4 bytes @ 0x87
  3561  0000E7                     	ds	1
  3562  0000E8                     LORAWAN_RxDone@packet:
  3563                           	opt stack 0
  3564                           
  3565                           ; 2 bytes @ 0x88
  3566  0000E8                     	ds	2
  3567  0000EA                     ??___ftdiv:
  3568  0000EA                     LORAWAN_RxDone@computedMic:
  3569                           	opt stack 0
  3570                           
  3571                           ; 4 bytes @ 0x8A
  3572  0000EA                     	ds	1
  3573  0000EB                     _RADIO_TxDone$1189:
  3574                           	opt stack 0
  3575  0000EB                     _RADIO_FSKPacketSent$1193:
  3576                           	opt stack 0
  3577                           
  3578                           ; 4 bytes @ 0x8B
  3579  0000EB                     	ds	2
  3580  0000ED                     ___ftdiv@cntr:
  3581                           	opt stack 0
  3582                           
  3583                           ; 1 bytes @ 0x8D
  3584  0000ED                     	ds	1
  3585  0000EE                     LORAWAN_RxDone@joinAccept:
  3586                           	opt stack 0
  3587  0000EE                     ___ftdiv@f3:
  3588                           	opt stack 0
  3589                           
  3590                           ; 3 bytes @ 0x8E
  3591  0000EE                     	ds	1
  3592  0000EF                     RADIO_FSKPacketSent@irqFlags:
  3593                           	opt stack 0
  3594                           
  3595                           ; 1 bytes @ 0x8F
  3596  0000EF                     	ds	1
  3597  0000F0                     LORAWAN_RxDone@frmPayloadLength:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x90
  3601  0000F0                     	ds	1
  3602  0000F1                     ___ftdiv@exp:
  3603                           	opt stack 0
  3604  0000F1                     LORAWAN_RxDone@hdr:
  3605                           	opt stack 0
  3606                           
  3607                           ; 2 bytes @ 0x91
  3608  0000F1                     	ds	1
  3609  0000F2                     ___ftdiv@sign:
  3610                           	opt stack 0
  3611                           
  3612                           ; 1 bytes @ 0x92
  3613  0000F2                     	ds	1
  3614  0000F3                     ?_BME280_getTemperature:
  3615                           	opt stack 0
  3616  0000F3                     ?_BME280_getPressure:
  3617                           	opt stack 0
  3618  0000F3                     ?_BME280_getHumidity:
  3619                           	opt stack 0
  3620  0000F3                     RADIO_RxDone@irqFlags:
  3621                           	opt stack 0
  3622  0000F3                     RADIO_FSKPayloadReady@irqFlags:
  3623                           	opt stack 0
  3624                           
  3625                           ; 1 bytes @ 0x93
  3626  0000F3                     	ds	1
  3627  0000F4                     RADIO_RxDone@i:
  3628                           	opt stack 0
  3629  0000F4                     RADIO_FSKPayloadReady@i:
  3630                           	opt stack 0
  3631                           
  3632                           ; 1 bytes @ 0x94
  3633  0000F4                     	ds	1
  3634  0000F5                     ??_RADIO_DIO0:
  3635                           
  3636                           ; 1 bytes @ 0x95
  3637  0000F5                     	ds	1
  3638  0000F6                     BME280_getTemperature@temperature:
  3639                           	opt stack 0
  3640  0000F6                     BME280_getPressure@pressure:
  3641                           	opt stack 0
  3642  0000F6                     BME280_getHumidity@humidity:
  3643                           	opt stack 0
  3644                           
  3645                           ; 3 bytes @ 0x96
  3646  0000F6                     	ds	1
  3647  0000F7                     RADIO_DIO0@dioMapping:
  3648                           	opt stack 0
  3649                           
  3650                           ; 1 bytes @ 0x97
  3651  0000F7                     	ds	1
  3652  0000F8                     RADIO_DIO0@opMode:
  3653                           	opt stack 0
  3654                           
  3655                           ; 1 bytes @ 0x98
  3656  0000F8                     	ds	1
  3657  0000F9                     ??_printf:
  3658  0000F9                     
  3659                           ; 1 bytes @ 0x99
  3660  0000F9                     	ds	6
  3661  0000FF                     tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           postinc0	equ	0xFEE
  3666                           wreg	equ	0xFE8
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           
  3671                           ; 1 bytes @ 0x9F
  3672                           
  3673                           	psect	cstackCOMRAM
  3674  000001                     __pcstackCOMRAM:
  3675                           	opt stack 0
  3676  000001                     ?i2_TMR1_ReadTimer:
  3677                           	opt stack 0
  3678  000001                     i2TMR1_WriteTimer@timerVal:
  3679                           	opt stack 0
  3680                           
  3681                           ; 2 bytes @ 0x0
  3682  000001                     	ds	2
  3683  000003                     ??i2_TMR1_ReadTimer:
  3684  000003                     
  3685                           ; 1 bytes @ 0x2
  3686  000003                     	ds	2
  3687  000005                     i2TMR1_ReadTimer@readVal:
  3688                           	opt stack 0
  3689                           
  3690                           ; 2 bytes @ 0x4
  3691  000005                     	ds	2
  3692  000007                     i2TMR1_ReadTimer@readValHigh:
  3693                           	opt stack 0
  3694                           
  3695                           ; 1 bytes @ 0x6
  3696  000007                     	ds	1
  3697  000008                     i2TMR1_ReadTimer@readValLow:
  3698                           	opt stack 0
  3699                           
  3700                           ; 1 bytes @ 0x7
  3701  000008                     	ds	1
  3702  000009                     ?i2_TMR_SwapTimer:
  3703                           	opt stack 0
  3704  000009                     ?i2_TMR_GetDeltaTime:
  3705                           	opt stack 0
  3706  000009                     i2TMR_SwapTimer@timerVal:
  3707                           	opt stack 0
  3708                           
  3709                           ; 2 bytes @ 0x8
  3710  000009                     	ds	2
  3711  00000B                     
  3712                           ; 1 bytes @ 0xA
  3713  00000B                     	ds	2
  3714  00000D                     ??i2_TMR_GetDeltaTime:
  3715                           
  3716                           ; 1 bytes @ 0xC
  3717  00000D                     	ds	20
  3718  000021                     ?i2_SwTimersInterrupt:
  3719                           	opt stack 0
  3720                           
  3721                           ; 4 bytes @ 0x20
  3722  000021                     	ds	4
  3723  000025                     
  3724                           ; 1 bytes @ 0x24
  3725  000025                     	ds	4
  3726  000029                     i2SwTimersInterrupt@timeElapsed:
  3727                           	opt stack 0
  3728                           
  3729                           ; 4 bytes @ 0x28
  3730  000029                     	ds	4
  3731  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  3732                           	opt stack 0
  3733                           
  3734                           ; 4 bytes @ 0x2C
  3735  00002D                     	ds	4
  3736  000031                     i2SwTimersInterrupt@i:
  3737                           	opt stack 0
  3738                           
  3739                           ; 1 bytes @ 0x30
  3740  000031                     	ds	1
  3741  000032                     ??_TMR_ISR_lora:
  3742                           
  3743                           ; 1 bytes @ 0x31
  3744  000032                     	ds	2
  3745  000034                     ??_INTERRUPT_InterruptManager:
  3746                           
  3747                           ; 1 bytes @ 0x33
  3748  000034                     	ds	8
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           postdec2	equ	0xFDD
  3756                           fsr2h	equ	0xFDA
  3757                           fsr2l	equ	0xFD9
  3758                           
  3759 ;;
  3760 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3761 ;;
  3762 ;; *************** function _main *****************
  3763 ;; Defined at:
  3764 ;;		line 82 in file "main.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels required when called:   20
  3784 ;; This function calls:
  3785 ;;		_ADC_GetConversion
  3786 ;;		_LORAWAN_Init
  3787 ;;		_LORAWAN_Join
  3788 ;;		_LORAWAN_Mainloop
  3789 ;;		_LORAWAN_Send
  3790 ;;		_LORAWAN_SetApplicationEui
  3791 ;;		_LORAWAN_SetApplicationKey
  3792 ;;		_LORAWAN_SetApplicationSessionKey
  3793 ;;		_LORAWAN_SetDeviceAddress
  3794 ;;		_LORAWAN_SetDeviceEui
  3795 ;;		_LORAWAN_SetNetworkSessionKey
  3796 ;;		_SYSTEM_Initialize
  3797 ;;		_TMR5_HasOverflowOccured
  3798 ;;		_Weather_getHumidityRH
  3799 ;;		_Weather_getPressureKPa
  3800 ;;		_Weather_getTemperatureDegC
  3801 ;;		_Weather_readSensors
  3802 ;;		___ftmul
  3803 ;;		___fttol
  3804 ;;		___lwtoft
  3805 ;;		_printf
  3806 ;; This function is called by:
  3807 ;;		Startup code after reset
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text0
  3812  00420E                     __ptext0:
  3813                           	opt stack 0
  3814  00420E                     _main:
  3815                           	opt stack 11
  3816                           
  3817                           ;main.c: 85: SYSTEM_Initialize();
  3818                           
  3819                           ;incstack = 0
  3820  00420E  EC37  F05D         	call	_SYSTEM_Initialize	;wreg free
  3821                           
  3822                           ;main.c: 92: (INTCONbits.GIE = 1);
  3823  004212  8EF2               	bsf	intcon,7,c	;volatile
  3824                           
  3825                           ;main.c: 98: (INTCONbits.PEIE = 1);
  3826  004214  8CF2               	bsf	intcon,6,c	;volatile
  3827                           
  3828                           ;main.c: 103: printf("INIT Done!\r");
  3829  004216  0EF3               	movlw	low STR_1
  3830  004218  0101               	movlb	1	; () banked
  3831  00421A  6F8F               	movwf	printf@f& (0+255),b
  3832  00421C  0EFF               	movlw	high STR_1
  3833  00421E  6F90               	movwf	(printf@f+1)& (0+255),b
  3834  004220  EC96  F006         	call	_printf	;wreg free
  3835                           
  3836                           ;main.c: 106: Weather_readSensors();
  3837  004224  EC5B  F060         	call	_Weather_readSensors	;wreg free
  3838                           
  3839                           ;main.c: 107: adcVoltage = 3.267*ADC_GetConversion(channel_AN0);
  3840  004228  0E00               	movlw	0
  3841  00422A  EC11  F05C         	call	_ADC_GetConversion
  3842  00422E  C060  F068         	movff	?_ADC_GetConversion,___lwtoft@c
  3843  004232  C061  F069         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  3844  004236  ECCD  F05E         	call	___lwtoft	;wreg free
  3845  00423A  C068  F074         	movff	?___lwtoft,___ftmul@f1
  3846  00423E  C069  F075         	movff	?___lwtoft+1,___ftmul@f1+1
  3847  004242  C06A  F076         	movff	?___lwtoft+2,___ftmul@f1+2
  3848  004246  0E17               	movlw	23
  3849  004248  0100               	movlb	0	; () banked
  3850  00424A  6F77               	movwf	___ftmul@f2& (0+255),b
  3851  00424C  0E51               	movlw	81
  3852  00424E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  3853  004250  0E40               	movlw	64
  3854  004252  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  3855  004254  EC54  F045         	call	___ftmul	;wreg free
  3856  004258  C074  F11D         	movff	?___ftmul,_adcVoltage
  3857  00425C  C075  F11E         	movff	?___ftmul+1,_adcVoltage+1
  3858  004260  C076  F11F         	movff	?___ftmul+2,_adcVoltage+2
  3859                           
  3860                           ;main.c: 108: printf("Temperature = %3.2f C || Pressure = %3.2f kPa || Humidity = %3.2f 
      +                          %%RH || Voltage = %3.2f V \r",
  3861                           ;main.c: 109: Weather_getTemperatureDegC(), Weather_getPressureKPa(), Weather_getHumidit
      +                          yRH(), adcVoltage);
  3862  004264  0E6D               	movlw	low STR_2
  3863  004266  0101               	movlb	1	; () banked
  3864  004268  6F8F               	movwf	printf@f& (0+255),b
  3865  00426A  0EFF               	movlw	high STR_2
  3866  00426C  6F90               	movwf	(printf@f+1)& (0+255),b
  3867  00426E  ECB8  F061         	call	_Weather_getTemperatureDegC	;wreg free
  3868  004272  C18C  F191         	movff	?_Weather_getTemperatureDegC,?_printf+2
  3869  004276  C18D  F192         	movff	?_Weather_getTemperatureDegC+1,?_printf+3
  3870  00427A  C18E  F193         	movff	?_Weather_getTemperatureDegC+2,?_printf+4
  3871  00427E  ECC1  F061         	call	_Weather_getPressureKPa	;wreg free
  3872  004282  C18C  F194         	movff	?_Weather_getPressureKPa,?_printf+5
  3873  004286  C18D  F195         	movff	?_Weather_getPressureKPa+1,?_printf+6
  3874  00428A  C18E  F196         	movff	?_Weather_getPressureKPa+2,?_printf+7
  3875  00428E  ECCA  F061         	call	_Weather_getHumidityRH	;wreg free
  3876  004292  C18C  F197         	movff	?_Weather_getHumidityRH,?_printf+8
  3877  004296  C18D  F198         	movff	?_Weather_getHumidityRH+1,?_printf+9
  3878  00429A  C18E  F199         	movff	?_Weather_getHumidityRH+2,?_printf+10
  3879  00429E  C11D  F19A         	movff	_adcVoltage,?_printf+11
  3880  0042A2  C11E  F19B         	movff	_adcVoltage+1,?_printf+12
  3881  0042A6  C11F  F19C         	movff	_adcVoltage+2,?_printf+13
  3882  0042AA  EC96  F006         	call	_printf	;wreg free
  3883                           
  3884                           ;main.c: 111: printf("LoRA Start!\r");
  3885  0042AE  0EE6               	movlw	low STR_3
  3886  0042B0  0101               	movlb	1	; () banked
  3887  0042B2  6F8F               	movwf	printf@f& (0+255),b
  3888  0042B4  0EFF               	movlw	high STR_3
  3889  0042B6  6F90               	movwf	(printf@f+1)& (0+255),b
  3890  0042B8  EC96  F006         	call	_printf	;wreg free
  3891                           
  3892                           ;main.c: 114: LORAWAN_Init(RxData, RxJoinResponse);
  3893  0042BC  0EE2               	movlw	low _RxData
  3894  0042BE  0100               	movlb	0	; () banked
  3895  0042C0  6FB2               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3896  0042C2  0EC6               	movlw	high _RxData
  3897  0042C4  6FB3               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3898  0042C6  0EE0               	movlw	low _RxJoinResponse
  3899  0042C8  6FB4               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3900  0042CA  0EC6               	movlw	high _RxJoinResponse
  3901  0042CC  6FB5               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3902  0042CE  EC48  F055         	call	_LORAWAN_Init	;wreg free
  3903                           
  3904                           ;main.c: 116: if(activationMethod == 0){
  3905  0042D2  0101               	movlb	1	; () banked
  3906  0042D4  512B               	movf	_activationMethod& (0+255),w,b
  3907  0042D6  A4D8               	btfss	status,2,c
  3908  0042D8  D020               	goto	l3416
  3909                           
  3910                           ; BSR set to: 1
  3911                           ;main.c: 118: LORAWAN_SetApplicationEui(applicationEUI);
  3912  0042DA  0EE0               	movlw	low _applicationEUI
  3913  0042DC  0100               	movlb	0	; () banked
  3914  0042DE  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3915  0042E0  0E03               	movlw	high _applicationEUI
  3916  0042E2  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3917  0042E4  ECAA  F05D         	call	_LORAWAN_SetApplicationEui	;wreg free
  3918                           
  3919                           ;main.c: 119: LORAWAN_SetDeviceEui(deviceEUI);
  3920  0042E8  0EE8               	movlw	low _deviceEUI
  3921  0042EA  0100               	movlb	0	; () banked
  3922  0042EC  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3923  0042EE  0E03               	movlw	high _deviceEUI
  3924  0042F0  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3925  0042F2  EC65  F05D         	call	_LORAWAN_SetDeviceEui	;wreg free
  3926                           
  3927                           ;main.c: 120: LORAWAN_SetApplicationKey(applicationKey);
  3928  0042F6  0EF0               	movlw	low _applicationKey
  3929  0042F8  0100               	movlb	0	; () banked
  3930  0042FA  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3931  0042FC  0E04               	movlw	high _applicationKey
  3932  0042FE  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3933  004300  EC93  F05D         	call	_LORAWAN_SetApplicationKey	;wreg free
  3934                           
  3935                           ;main.c: 122: LORAWAN_Join(OTAA);
  3936  004304  0E00               	movlw	0
  3937  004306  ECB6  F04C         	call	_LORAWAN_Join
  3938                           
  3939                           ;main.c: 123: printf("OTAA Joined!\r");
  3940  00430A  0ECB               	movlw	low STR_4
  3941  00430C  0101               	movlb	1	; () banked
  3942  00430E  6F8F               	movwf	printf@f& (0+255),b
  3943  004310  0EFF               	movlw	high STR_4
  3944  004312  6F90               	movwf	(printf@f+1)& (0+255),b
  3945  004314  EC96  F006         	call	_printf	;wreg free
  3946                           
  3947                           ;main.c: 124: }
  3948  004318  D022               	goto	l3417
  3949  00431A                     l3416:
  3950                           
  3951                           ;main.c: 125: else{
  3952                           ;main.c: 127: LORAWAN_SetNetworkSessionKey(nwkSessionKey);
  3953  00431A  0E10               	movlw	low _nwkSessionKey
  3954  00431C  0100               	movlb	0	; () banked
  3955  00431E  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  3956  004320  0E05               	movlw	high _nwkSessionKey
  3957  004322  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  3958  004324  EC4E  F05D         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  3959                           
  3960                           ;main.c: 128: LORAWAN_SetApplicationSessionKey(appSessionKey);
  3961  004328  0E00               	movlw	low _appSessionKey
  3962  00432A  0100               	movlb	0	; () banked
  3963  00432C  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  3964  00432E  0E05               	movlw	high _appSessionKey
  3965  004330  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  3966  004332  EC7C  F05D         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  3967                           
  3968                           ;main.c: 129: LORAWAN_SetDeviceAddress(deviceAddr);
  3969  004336  C2F9  F060         	movff	_deviceAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  3970  00433A  C2FA  F061         	movff	_deviceAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  3971  00433E  C2FB  F062         	movff	_deviceAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  3972  004342  C2FC  F063         	movff	_deviceAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  3973  004346  EC0E  F061         	call	_LORAWAN_SetDeviceAddress	;wreg free
  3974                           
  3975                           ;main.c: 131: LORAWAN_Join(ABP);
  3976  00434A  0E01               	movlw	1
  3977  00434C  ECB6  F04C         	call	_LORAWAN_Join
  3978                           
  3979                           ;main.c: 132: printf("ABP Joined!\r");
  3980  004350  0ED9               	movlw	low STR_5
  3981  004352  0101               	movlb	1	; () banked
  3982  004354  6F8F               	movwf	printf@f& (0+255),b
  3983  004356  0EFF               	movlw	high STR_5
  3984  004358  6F90               	movwf	(printf@f+1)& (0+255),b
  3985  00435A  EC96  F006         	call	_printf	;wreg free
  3986  00435E                     l3417:
  3987                           
  3988                           ;main.c: 136: {
  3989                           ;main.c: 138: LORAWAN_Mainloop();
  3990                           
  3991                           ;main.c: 133: }
  3992                           ;main.c: 135: while (1)
  3993  00435E  EC9B  F05B         	call	_LORAWAN_Mainloop	;wreg free
  3994                           
  3995                           ;main.c: 143: if (TMR5_HasOverflowOccured())
  3996  004362  EC83  F062         	call	_TMR5_HasOverflowOccured	;wreg free
  3997  004366  0900               	iorlw	0
  3998  004368  B4D8               	btfsc	status,2,c
  3999  00436A  D03B               	goto	l3419
  4000                           
  4001                           ;main.c: 144: {
  4002                           ;main.c: 145: counter ++;
  4003  00436C  0101               	movlb	1	; () banked
  4004  00436E  2B2A               	incf	_counter& (0+255),f,b
  4005                           
  4006                           ; BSR set to: 1
  4007                           ;main.c: 147: adcVoltage = 3.267*ADC_GetConversion(channel_AN0);
  4008  004370  0E00               	movlw	0
  4009  004372  EC11  F05C         	call	_ADC_GetConversion
  4010  004376  C060  F068         	movff	?_ADC_GetConversion,___lwtoft@c
  4011  00437A  C061  F069         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  4012  00437E  ECCD  F05E         	call	___lwtoft	;wreg free
  4013  004382  C068  F074         	movff	?___lwtoft,___ftmul@f1
  4014  004386  C069  F075         	movff	?___lwtoft+1,___ftmul@f1+1
  4015  00438A  C06A  F076         	movff	?___lwtoft+2,___ftmul@f1+2
  4016  00438E  0E17               	movlw	23
  4017  004390  0100               	movlb	0	; () banked
  4018  004392  6F77               	movwf	___ftmul@f2& (0+255),b
  4019  004394  0E51               	movlw	81
  4020  004396  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4021  004398  0E40               	movlw	64
  4022  00439A  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4023  00439C  EC54  F045         	call	___ftmul	;wreg free
  4024  0043A0  C074  F11D         	movff	?___ftmul,_adcVoltage
  4025  0043A4  C075  F11E         	movff	?___ftmul+1,_adcVoltage+1
  4026  0043A8  C076  F11F         	movff	?___ftmul+2,_adcVoltage+2
  4027                           
  4028                           ;main.c: 149: Weather_readSensors();
  4029  0043AC  EC5B  F060         	call	_Weather_readSensors	;wreg free
  4030                           
  4031                           ;main.c: 150: temperature = Weather_getTemperatureDegC();
  4032  0043B0  ECB8  F061         	call	_Weather_getTemperatureDegC	;wreg free
  4033  0043B4  C18C  F11A         	movff	?_Weather_getTemperatureDegC,_temperature
  4034  0043B8  C18D  F11B         	movff	?_Weather_getTemperatureDegC+1,_temperature+1
  4035  0043BC  C18E  F11C         	movff	?_Weather_getTemperatureDegC+2,_temperature+2
  4036                           
  4037                           ;main.c: 151: pressure = Weather_getPressureKPa();
  4038  0043C0  ECC1  F061         	call	_Weather_getPressureKPa	;wreg free
  4039  0043C4  C18C  F117         	movff	?_Weather_getPressureKPa,_pressure
  4040  0043C8  C18D  F118         	movff	?_Weather_getPressureKPa+1,_pressure+1
  4041  0043CC  C18E  F119         	movff	?_Weather_getPressureKPa+2,_pressure+2
  4042                           
  4043                           ;main.c: 152: humidity = Weather_getHumidityRH();
  4044  0043D0  ECCA  F061         	call	_Weather_getHumidityRH	;wreg free
  4045  0043D4  C18C  F114         	movff	?_Weather_getHumidityRH,_humidity
  4046  0043D8  C18D  F115         	movff	?_Weather_getHumidityRH+1,_humidity+1
  4047  0043DC  C18E  F116         	movff	?_Weather_getHumidityRH+2,_humidity+2
  4048                           
  4049                           ;main.c: 154: TMR5IF = 0;
  4050  0043E0  927E               	bcf	3966,1,c	;volatile
  4051  0043E2                     l3419:
  4052                           
  4053                           ;main.c: 155: }
  4054                           ;main.c: 157: if (counter == 20)
  4055  0043E2  0E14               	movlw	20
  4056  0043E4  0101               	movlb	1	; () banked
  4057  0043E6  192A               	xorwf	_counter& (0+255),w,b
  4058  0043E8  A4D8               	btfss	status,2,c
  4059  0043EA  D7B9               	goto	l3417
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;main.c: 158: {
  4063                           ;main.c: 160: data[0] = (uint16_t)(temperature * 100) >> 8;
  4064  0043EC  0E00               	movlw	0
  4065  0043EE  0100               	movlb	0	; () banked
  4066  0043F0  6F77               	movwf	___ftmul@f2& (0+255),b
  4067  0043F2  0EC8               	movlw	200
  4068  0043F4  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4069  0043F6  0E42               	movlw	66
  4070  0043F8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4071  0043FA  C11A  F074         	movff	_temperature,___ftmul@f1
  4072  0043FE  C11B  F075         	movff	_temperature+1,___ftmul@f1+1
  4073  004402  C11C  F076         	movff	_temperature+2,___ftmul@f1+2
  4074  004406  EC54  F045         	call	___ftmul	;wreg free
  4075  00440A  C074  F083         	movff	?___ftmul,___fttol@f1
  4076  00440E  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4077  004412  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4078  004416  ECD8  F044         	call	___fttol	;wreg free
  4079  00441A  0100               	movlb	0	; () banked
  4080  00441C  C084  F083         	movff	?___fttol+1,?___fttol
  4081  004420  6B84               	clrf	(?___fttol+1)& (0+255),b
  4082  004422  5183               	movf	?___fttol& (0+255),w,b
  4083  004424  0103               	movlb	3	; () banked
  4084  004426  6FD8               	movwf	_data& (0+255),b
  4085                           
  4086                           ;main.c: 161: data[1] = (uint16_t)(temperature * 100) & 0xFF;
  4087  004428  0E00               	movlw	0
  4088  00442A  0100               	movlb	0	; () banked
  4089  00442C  6F77               	movwf	___ftmul@f2& (0+255),b
  4090  00442E  0EC8               	movlw	200
  4091  004430  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4092  004432  0E42               	movlw	66
  4093  004434  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4094  004436  C11A  F074         	movff	_temperature,___ftmul@f1
  4095  00443A  C11B  F075         	movff	_temperature+1,___ftmul@f1+1
  4096  00443E  C11C  F076         	movff	_temperature+2,___ftmul@f1+2
  4097  004442  EC54  F045         	call	___ftmul	;wreg free
  4098  004446  C074  F083         	movff	?___ftmul,___fttol@f1
  4099  00444A  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4100  00444E  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4101  004452  ECD8  F044         	call	___fttol	;wreg free
  4102  004456  0100               	movlb	0	; () banked
  4103  004458  5183               	movf	?___fttol& (0+255),w,b
  4104  00445A  0103               	movlb	3	; () banked
  4105  00445C  6FD9               	movwf	(_data+1)& (0+255),b
  4106                           
  4107                           ;main.c: 162: data[2] = (uint16_t) pressure >>8;
  4108  00445E  C117  F083         	movff	_pressure,___fttol@f1
  4109  004462  C118  F084         	movff	_pressure+1,___fttol@f1+1
  4110  004466  C119  F085         	movff	_pressure+2,___fttol@f1+2
  4111  00446A  ECD8  F044         	call	___fttol	;wreg free
  4112  00446E  0100               	movlb	0	; () banked
  4113  004470  C084  F083         	movff	?___fttol+1,?___fttol
  4114  004474  6B84               	clrf	(?___fttol+1)& (0+255),b
  4115  004476  5183               	movf	?___fttol& (0+255),w,b
  4116  004478  0103               	movlb	3	; () banked
  4117  00447A  6FDA               	movwf	(_data+2)& (0+255),b
  4118                           
  4119                           ;main.c: 163: data[3] = (uint16_t) pressure & 0xFF;
  4120  00447C  C117  F083         	movff	_pressure,___fttol@f1
  4121  004480  C118  F084         	movff	_pressure+1,___fttol@f1+1
  4122  004484  C119  F085         	movff	_pressure+2,___fttol@f1+2
  4123  004488  ECD8  F044         	call	___fttol	;wreg free
  4124  00448C  0100               	movlb	0	; () banked
  4125  00448E  5183               	movf	?___fttol& (0+255),w,b
  4126  004490  0103               	movlb	3	; () banked
  4127  004492  6FDB               	movwf	(_data+3)& (0+255),b
  4128                           
  4129                           ;main.c: 164: data[4] = (uint16_t)(humidity * 100) >> 8;
  4130  004494  0E00               	movlw	0
  4131  004496  0100               	movlb	0	; () banked
  4132  004498  6F77               	movwf	___ftmul@f2& (0+255),b
  4133  00449A  0EC8               	movlw	200
  4134  00449C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4135  00449E  0E42               	movlw	66
  4136  0044A0  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4137  0044A2  C114  F074         	movff	_humidity,___ftmul@f1
  4138  0044A6  C115  F075         	movff	_humidity+1,___ftmul@f1+1
  4139  0044AA  C116  F076         	movff	_humidity+2,___ftmul@f1+2
  4140  0044AE  EC54  F045         	call	___ftmul	;wreg free
  4141  0044B2  C074  F083         	movff	?___ftmul,___fttol@f1
  4142  0044B6  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4143  0044BA  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4144  0044BE  ECD8  F044         	call	___fttol	;wreg free
  4145  0044C2  0100               	movlb	0	; () banked
  4146  0044C4  C084  F083         	movff	?___fttol+1,?___fttol
  4147  0044C8  6B84               	clrf	(?___fttol+1)& (0+255),b
  4148  0044CA  5183               	movf	?___fttol& (0+255),w,b
  4149  0044CC  0103               	movlb	3	; () banked
  4150  0044CE  6FDC               	movwf	(_data+4)& (0+255),b
  4151                           
  4152                           ;main.c: 165: data[5] = (uint16_t)(humidity * 100) & 0xFF;
  4153  0044D0  0E00               	movlw	0
  4154  0044D2  0100               	movlb	0	; () banked
  4155  0044D4  6F77               	movwf	___ftmul@f2& (0+255),b
  4156  0044D6  0EC8               	movlw	200
  4157  0044D8  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4158  0044DA  0E42               	movlw	66
  4159  0044DC  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4160  0044DE  C114  F074         	movff	_humidity,___ftmul@f1
  4161  0044E2  C115  F075         	movff	_humidity+1,___ftmul@f1+1
  4162  0044E6  C116  F076         	movff	_humidity+2,___ftmul@f1+2
  4163  0044EA  EC54  F045         	call	___ftmul	;wreg free
  4164  0044EE  C074  F083         	movff	?___ftmul,___fttol@f1
  4165  0044F2  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  4166  0044F6  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  4167  0044FA  ECD8  F044         	call	___fttol	;wreg free
  4168  0044FE  0100               	movlb	0	; () banked
  4169  004500  5183               	movf	?___fttol& (0+255),w,b
  4170  004502  0103               	movlb	3	; () banked
  4171  004504  6FDD               	movwf	(_data+5)& (0+255),b
  4172                           
  4173                           ;main.c: 166: data[6] = (uint16_t) adcVoltage >> 8;
  4174  004506  C11D  F083         	movff	_adcVoltage,___fttol@f1
  4175  00450A  C11E  F084         	movff	_adcVoltage+1,___fttol@f1+1
  4176  00450E  C11F  F085         	movff	_adcVoltage+2,___fttol@f1+2
  4177  004512  ECD8  F044         	call	___fttol	;wreg free
  4178  004516  0100               	movlb	0	; () banked
  4179  004518  C084  F083         	movff	?___fttol+1,?___fttol
  4180  00451C  6B84               	clrf	(?___fttol+1)& (0+255),b
  4181  00451E  5183               	movf	?___fttol& (0+255),w,b
  4182  004520  0103               	movlb	3	; () banked
  4183  004522  6FDE               	movwf	(_data+6)& (0+255),b
  4184                           
  4185                           ;main.c: 167: data[7] = (uint16_t) adcVoltage & 0xFF;
  4186  004524  C11D  F083         	movff	_adcVoltage,___fttol@f1
  4187  004528  C11E  F084         	movff	_adcVoltage+1,___fttol@f1+1
  4188  00452C  C11F  F085         	movff	_adcVoltage+2,___fttol@f1+2
  4189  004530  ECD8  F044         	call	___fttol	;wreg free
  4190  004534  0100               	movlb	0	; () banked
  4191  004536  5183               	movf	?___fttol& (0+255),w,b
  4192  004538  0103               	movlb	3	; () banked
  4193  00453A  6FDF               	movwf	(_data+7)& (0+255),b
  4194                           
  4195                           ; BSR set to: 3
  4196                           ;main.c: 169: LORAWAN_Send(UNCNF, 2, data, 8);
  4197  00453C  0E02               	movlw	2
  4198  00453E  0100               	movlb	0	; () banked
  4199  004540  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
  4200  004542  0ED8               	movlw	low _data
  4201  004544  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
  4202  004546  0E03               	movlw	high _data
  4203  004548  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  4204  00454A  0E08               	movlw	8
  4205  00454C  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  4206  00454E  0E00               	movlw	0
  4207  004550  ECDC  F049         	call	_LORAWAN_Send
  4208                           
  4209                           ;main.c: 171: counter = 0;
  4210  004554  0E00               	movlw	0
  4211  004556  0101               	movlb	1	; () banked
  4212  004558  6F2A               	movwf	_counter& (0+255),b
  4213                           
  4214                           ; BSR set to: 1
  4215                           
  4216                           ; BSR set to: 1
  4217  00455A  D701               	goto	l3417
  4218  00455C                     __end_of_main:
  4219                           	opt stack 0
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           intcon	equ	0xFF2
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           postdec2	equ	0xFDD
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _printf *****************
  4233 ;; Defined at:
  4234 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  f               2    3[BANK1 ] PTR const unsigned char 
  4237 ;;		 -> STR_5(13), STR_4(14), STR_3(13), STR_2(94), 
  4238 ;;		 -> STR_1(12), 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  tmpval          4   32[BANK1 ] struct .
  4241 ;;  val             4   26[BANK1 ] unsigned long 
  4242 ;;  fval            3   40[BANK1 ] unsigned long 
  4243 ;;  prec            2   43[BANK1 ] int 
  4244 ;;  width           2   38[BANK1 ] int 
  4245 ;;  exp             2   36[BANK1 ] int 
  4246 ;;  flag            2   30[BANK1 ] unsigned short 
  4247 ;;  len             2   24[BANK1 ] unsigned int 
  4248 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  4249 ;;		 -> printf@c(1), 
  4250 ;;  ap              2   20[BANK1 ] PTR void [1]
  4251 ;;		 -> ?_printf(2), 
  4252 ;;  c               1   45[BANK1 ] char 
  4253 ;;  d               1    0        unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    3[BANK1 ] int 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:         0       6      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:       49 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:   10
  4270 ;; This function calls:
  4271 ;;		___awdiv
  4272 ;;		___ftadd
  4273 ;;		___ftge
  4274 ;;		___ftmul
  4275 ;;		___ftneg
  4276 ;;		___ftsub
  4277 ;;		___fttol
  4278 ;;		___lldiv
  4279 ;;		___llmod
  4280 ;;		___lltoft
  4281 ;;		___wmul
  4282 ;;		__div_to_l_
  4283 ;;		__tdiv_to_l_
  4284 ;;		_fround
  4285 ;;		_isdigit
  4286 ;;		_putch
  4287 ;;		_scale
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text1
  4294  000D2C                     __ptext1:
  4295                           	opt stack 0
  4296  000D2C                     _printf:
  4297                           	opt stack 20
  4298                           
  4299                           ;doprnt.c: 466: va_list ap;
  4300                           ;doprnt.c: 499: signed char c;
  4301                           ;doprnt.c: 501: int width;
  4302                           ;doprnt.c: 504: int prec;
  4303                           ;doprnt.c: 508: unsigned short flag;
  4304                           ;doprnt.c: 515: char d;
  4305                           ;doprnt.c: 516: double fval;
  4306                           ;doprnt.c: 517: int exp;
  4307                           ;doprnt.c: 523: union {
  4308                           ;doprnt.c: 524: unsigned long vd;
  4309                           ;doprnt.c: 525: double integ;
  4310                           ;doprnt.c: 526: } tmpval;
  4311                           ;doprnt.c: 528: unsigned long val;
  4312                           ;doprnt.c: 529: unsigned len;
  4313                           ;doprnt.c: 530: const char * cp;
  4314                           ;doprnt.c: 533: *ap = __va_start();
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;incstack = 0
  4318  000D2C  0E91               	movlw	low (?_printf+2)
  4319  000D2E  0101               	movlb	1	; () banked
  4320  000D30  6FA0               	movwf	printf@ap& (0+255),b
  4321  000D32  0E01               	movlw	high (?_printf+2)
  4322  000D34  6FA1               	movwf	(printf@ap+1)& (0+255),b
  4323                           
  4324                           ;doprnt.c: 536: while(c = *f++) {
  4325  000D36  EF4B  F00B         	goto	l3543
  4326  000D3A                     
  4327                           ; BSR set to: 1
  4328                           ;doprnt.c: 538: if(c != '%')
  4329                           
  4330                           ; BSR set to: 1
  4331  000D3A  0E25               	movlw	37
  4332  000D3C  19B9               	xorwf	printf@c& (0+255),w,b
  4333  000D3E  B4D8               	btfsc	status,2,c
  4334  000D40  D005               	goto	l3462
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;doprnt.c: 540: {
  4338                           ;doprnt.c: 541: (putch(c) );
  4339  000D42  51B9               	movf	printf@c& (0+255),w,b
  4340  000D44  EC46  F062         	call	_putch
  4341                           
  4342                           ;doprnt.c: 542: continue;
  4343  000D48  EF4B  F00B         	goto	l3543
  4344  000D4C                     l3462:
  4345                           
  4346                           ;doprnt.c: 543: }
  4347                           ;doprnt.c: 546: width = 0;
  4348  000D4C  0E00               	movlw	0
  4349  000D4E  0101               	movlb	1	; () banked
  4350  000D50  6FB3               	movwf	(printf@width+1)& (0+255),b
  4351  000D52  0E00               	movlw	0
  4352  000D54  6FB2               	movwf	printf@width& (0+255),b
  4353                           
  4354                           ;doprnt.c: 548: flag = 0;
  4355  000D56  0E00               	movlw	0
  4356  000D58  6FAB               	movwf	(printf@flag+1)& (0+255),b
  4357  000D5A  0E00               	movlw	0
  4358  000D5C  6FAA               	movwf	printf@flag& (0+255),b
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4362  000D5E  C18F  FFF6         	movff	printf@f,tblptrl
  4363  000D62  C190  FFF7         	movff	printf@f+1,tblptrh
  4364  000D66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4365  000D66  6AF8               	clrf	tblptru,c
  4366  000D68                     	endif
  4367  000D68                     	if	0	;tblptru may be non-zero
  4368  000D68                     	endif
  4369  000D68  0008               	tblrd		*
  4370  000D6A  50F5               	movf	tablat,w,c
  4371  000D6C  EC05  F05F         	call	_isdigit
  4372  000D70  A0D8               	btfss	status,0,c
  4373  000D72  D03A               	goto	u25860
  4374                           
  4375                           ;doprnt.c: 598: width = 0;
  4376  000D74  0E00               	movlw	0
  4377  000D76  0101               	movlb	1	; () banked
  4378  000D78  6FB3               	movwf	(printf@width+1)& (0+255),b
  4379  000D7A  0E00               	movlw	0
  4380  000D7C  6FB2               	movwf	printf@width& (0+255),b
  4381  000D7E                     
  4382                           ;doprnt.c: 600: width *= 10;
  4383                           
  4384                           ; BSR set to: 1
  4385  000D7E  C1B2  F06E         	movff	printf@width,___wmul@multiplier
  4386  000D82  C1B3  F06F         	movff	printf@width+1,___wmul@multiplier+1
  4387  000D86  0E00               	movlw	0
  4388  000D88  0100               	movlb	0	; () banked
  4389  000D8A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4390  000D8C  0E0A               	movlw	10
  4391  000D8E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4392  000D90  EC7E  F05E         	call	___wmul	;wreg free
  4393  000D94  C06E  F1B2         	movff	?___wmul,printf@width
  4394  000D98  C06F  F1B3         	movff	?___wmul+1,printf@width+1
  4395                           
  4396                           ;doprnt.c: 601: width += *f++ - '0';
  4397  000D9C  0ED0               	movlw	208
  4398  000D9E  0100               	movlb	0	; () banked
  4399  000DA0  6FF9               	movwf	??_printf& (0+255),b
  4400  000DA2  0EFF               	movlw	255
  4401  000DA4  6FFA               	movwf	(??_printf+1)& (0+255),b
  4402  000DA6  C18F  FFF6         	movff	printf@f,tblptrl
  4403  000DAA  C190  FFF7         	movff	printf@f+1,tblptrh
  4404  000DAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4405  000DAE  6AF8               	clrf	tblptru,c
  4406  000DB0                     	endif
  4407  000DB0                     	if	0	;tblptru may be non-zero
  4408  000DB0                     	endif
  4409  000DB0  0008               	tblrd		*
  4410  000DB2  50F5               	movf	tablat,w,c
  4411  000DB4  6FFB               	movwf	(??_printf+2)& (0+255),b
  4412  000DB6  6BFC               	clrf	(??_printf+3)& (0+255),b
  4413  000DB8  51F9               	movf	??_printf& (0+255),w,b
  4414  000DBA  27FB               	addwf	(??_printf+2)& (0+255),f,b
  4415  000DBC  51FA               	movf	(??_printf+1)& (0+255),w,b
  4416  000DBE  23FC               	addwfc	(??_printf+3)& (0+255),f,b
  4417  000DC0  51FB               	movf	(??_printf+2)& (0+255),w,b
  4418  000DC2  0101               	movlb	1	; () banked
  4419  000DC4  27B2               	addwf	printf@width& (0+255),f,b
  4420  000DC6  0100               	movlb	0	; () banked
  4421  000DC8  51FC               	movf	(??_printf+3)& (0+255),w,b
  4422  000DCA  0101               	movlb	1	; () banked
  4423  000DCC  23B3               	addwfc	(printf@width+1)& (0+255),f,b
  4424                           
  4425                           ; BSR set to: 1
  4426  000DCE  4B8F               	infsnz	printf@f& (0+255),f,b
  4427  000DD0  2B90               	incf	(printf@f+1)& (0+255),f,b
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4431  000DD2  C18F  FFF6         	movff	printf@f,tblptrl
  4432  000DD6  C190  FFF7         	movff	printf@f+1,tblptrh
  4433  000DDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4434  000DDA  6AF8               	clrf	tblptru,c
  4435  000DDC                     	endif
  4436  000DDC                     	if	0	;tblptru may be non-zero
  4437  000DDC                     	endif
  4438  000DDC  0008               	tblrd		*
  4439  000DDE  50F5               	movf	tablat,w,c
  4440  000DE0  EC05  F05F         	call	_isdigit
  4441  000DE4  B0D8               	btfsc	status,0,c
  4442  000DE6  D7CB               	goto	l3464
  4443  000DE8                     u25860:
  4444                           
  4445                           ;doprnt.c: 608: }
  4446                           ;doprnt.c: 611: if(*f == '.') {
  4447  000DE8  C18F  FFF6         	movff	printf@f,tblptrl
  4448  000DEC  C190  FFF7         	movff	printf@f+1,tblptrh
  4449  000DF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4450  000DF0  6AF8               	clrf	tblptru,c
  4451  000DF2                     	endif
  4452  000DF2                     	if	0	;tblptru may be non-zero
  4453  000DF2                     	endif
  4454  000DF2  0008               	tblrd		*
  4455  000DF4  50F5               	movf	tablat,w,c
  4456  000DF6  0A2E               	xorlw	46
  4457  000DF8  A4D8               	btfss	status,2,c
  4458  000DFA  D036               	goto	l3466
  4459                           
  4460                           ;doprnt.c: 612: flag |= 0x4000;
  4461  000DFC  0101               	movlb	1	; () banked
  4462  000DFE  8DAB               	bsf	(printf@flag+1)& (0+255),6,b
  4463                           
  4464                           ;doprnt.c: 613: f++;
  4465  000E00  4B8F               	infsnz	printf@f& (0+255),f,b
  4466  000E02  2B90               	incf	(printf@f+1)& (0+255),f,b
  4467                           
  4468                           ; BSR set to: 1
  4469                           ;doprnt.c: 620: {
  4470                           ;doprnt.c: 621: prec = 0;
  4471  000E04  0E00               	movlw	0
  4472  000E06  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4473  000E08  0E00               	movlw	0
  4474  000E0A  6FB7               	movwf	printf@prec& (0+255),b
  4475                           
  4476                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4477  000E0C  D021               	goto	l3467
  4478  000E0E                     
  4479                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4480                           
  4481                           ; BSR set to: 1
  4482  000E0E  C1B7  F06E         	movff	printf@prec,___wmul@multiplier
  4483  000E12  C1B8  F06F         	movff	printf@prec+1,___wmul@multiplier+1
  4484  000E16  0E00               	movlw	0
  4485  000E18  0100               	movlb	0	; () banked
  4486  000E1A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4487  000E1C  0E0A               	movlw	10
  4488  000E1E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4489  000E20  EC7E  F05E         	call	___wmul	;wreg free
  4490  000E24  C18F  FFF6         	movff	printf@f,tblptrl
  4491  000E28  C190  FFF7         	movff	printf@f+1,tblptrh
  4492  000E2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4493  000E2C  6AF8               	clrf	tblptru,c
  4494  000E2E                     	endif
  4495  000E2E                     	if	0	;tblptru may be non-zero
  4496  000E2E                     	endif
  4497  000E2E  0008               	tblrd		*
  4498  000E30  50F5               	movf	tablat,w,c
  4499  000E32  0100               	movlb	0	; () banked
  4500  000E34  276E               	addwf	?___wmul& (0+255),f,b
  4501  000E36  0E00               	movlw	0
  4502  000E38  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  4503  000E3A  0ED0               	movlw	208
  4504  000E3C  256E               	addwf	?___wmul& (0+255),w,b
  4505  000E3E  0101               	movlb	1	; () banked
  4506  000E40  6FB7               	movwf	printf@prec& (0+255),b
  4507  000E42  0EFF               	movlw	255
  4508  000E44  0100               	movlb	0	; () banked
  4509  000E46  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4510  000E48  0101               	movlb	1	; () banked
  4511  000E4A  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4512                           
  4513                           ; BSR set to: 1
  4514  000E4C  4B8F               	infsnz	printf@f& (0+255),f,b
  4515  000E4E  2B90               	incf	(printf@f+1)& (0+255),f,b
  4516  000E50                     l3467:
  4517                           
  4518                           ; BSR set to: 1
  4519                           
  4520                           ; BSR set to: 1
  4521  000E50  C18F  FFF6         	movff	printf@f,tblptrl
  4522  000E54  C190  FFF7         	movff	printf@f+1,tblptrh
  4523  000E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4524  000E58  6AF8               	clrf	tblptru,c
  4525  000E5A                     	endif
  4526  000E5A                     	if	0	;tblptru may be non-zero
  4527  000E5A                     	endif
  4528  000E5A  0008               	tblrd		*
  4529  000E5C  50F5               	movf	tablat,w,c
  4530  000E5E  EC05  F05F         	call	_isdigit
  4531  000E62  A0D8               	btfss	status,0,c
  4532  000E64  D051               	goto	l3471
  4533  000E66  D7D3               	goto	l3468
  4534  000E68                     l3466:
  4535                           
  4536                           ;doprnt.c: 626: prec = 0;
  4537  000E68  0E00               	movlw	0
  4538  000E6A  0101               	movlb	1	; () banked
  4539  000E6C  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4540  000E6E  0E00               	movlw	0
  4541  000E70  6FB7               	movwf	printf@prec& (0+255),b
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;doprnt.c: 628: flag |= 0x1000;
  4545  000E72  89AB               	bsf	(printf@flag+1)& (0+255),4,b
  4546                           
  4547                           ; BSR set to: 1
  4548                           ;doprnt.c: 630: }
  4549                           ;doprnt.c: 635: switch(c = *f++) {
  4550  000E74  D049               	goto	l3471
  4551  000E76                     
  4552                           ; BSR set to: 1
  4553                           ;doprnt.c: 663: flag |= 0x400;
  4554                           
  4555                           ; BSR set to: 1
  4556  000E76  85AB               	bsf	(printf@flag+1)& (0+255),2,b
  4557                           
  4558                           ;doprnt.c: 664: break;
  4559  000E78  D05A               	goto	l3475
  4560  000E7A                     
  4561                           ; BSR set to: 1
  4562                           ;doprnt.c: 753: if(prec && prec < len)
  4563                           
  4564                           ; BSR set to: 1
  4565  000E7A  51B7               	movf	printf@prec& (0+255),w,b
  4566  000E7C  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  4567  000E7E  B4D8               	btfsc	status,2,c
  4568  000E80  D00A               	goto	l3477
  4569                           
  4570                           ; BSR set to: 1
  4571  000E82  51A4               	movf	printf@len& (0+255),w,b
  4572  000E84  5DB7               	subwf	printf@prec& (0+255),w,b
  4573  000E86  51A5               	movf	(printf@len+1)& (0+255),w,b
  4574  000E88  59B8               	subwfb	(printf@prec+1)& (0+255),w,b
  4575  000E8A  B0D8               	btfsc	status,0,c
  4576  000E8C  D004               	goto	l3477
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;doprnt.c: 754: len = prec;
  4580  000E8E  C1B7  F1A4         	movff	printf@prec,printf@len
  4581  000E92  C1B8  F1A5         	movff	printf@prec+1,printf@len+1
  4582  000E96                     l3477:
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;doprnt.c: 757: if(width > len)
  4586                           
  4587                           ; BSR set to: 1
  4588  000E96  51B2               	movf	printf@width& (0+255),w,b
  4589  000E98  5DA4               	subwf	printf@len& (0+255),w,b
  4590  000E9A  51B3               	movf	(printf@width+1)& (0+255),w,b
  4591  000E9C  59A5               	subwfb	(printf@len+1)& (0+255),w,b
  4592  000E9E  B0D8               	btfsc	status,0,c
  4593  000EA0  D005               	goto	l3478
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;doprnt.c: 758: width -= len;
  4597  000EA2  51A4               	movf	printf@len& (0+255),w,b
  4598  000EA4  5FB2               	subwf	printf@width& (0+255),f,b
  4599  000EA6  51A5               	movf	(printf@len+1)& (0+255),w,b
  4600  000EA8  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  4601  000EAA  D008               	goto	l3480
  4602  000EAC                     l3478:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;doprnt.c: 759: else
  4606                           ;doprnt.c: 760: width = 0;
  4607                           
  4608                           ; BSR set to: 1
  4609  000EAC  0E00               	movlw	0
  4610  000EAE  6FB3               	movwf	(printf@width+1)& (0+255),b
  4611  000EB0  0E00               	movlw	0
  4612  000EB2  6FB2               	movwf	printf@width& (0+255),b
  4613                           
  4614                           ; BSR set to: 1
  4615                           ;doprnt.c: 764: while(width--)
  4616  000EB4  D003               	goto	l3480
  4617  000EB6                     l21656:
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;doprnt.c: 765: (putch(' ') );
  4621  000EB6  0E20               	movlw	32
  4622  000EB8  EC46  F062         	call	_putch
  4623  000EBC                     l3480:
  4624  000EBC  0101               	movlb	1	; () banked
  4625  000EBE  07B2               	decf	printf@width& (0+255),f,b
  4626  000EC0  A0D8               	btfss	status,0,c
  4627  000EC2  07B3               	decf	(printf@width+1)& (0+255),f,b
  4628  000EC4  29B2               	incf	printf@width& (0+255),w,b
  4629  000EC6  E1F7               	bnz	l21656
  4630  000EC8  29B3               	incf	(printf@width+1)& (0+255),w,b
  4631  000ECA  B4D8               	btfsc	status,2,c
  4632  000ECC  D00B               	goto	l3483
  4633  000ECE  D7F3               	goto	l3481
  4634  000ED0                     l21660:
  4635                           
  4636                           ; BSR set to: 1
  4637                           ;doprnt.c: 768: (putch(*cp++) );
  4638  000ED0  C1A2  FFD9         	movff	printf@cp,fsr2l
  4639  000ED4  C1A3  FFDA         	movff	printf@cp+1,fsr2h
  4640  000ED8  50DF               	movf	indf2,w,c
  4641  000EDA  EC46  F062         	call	_putch
  4642  000EDE  0101               	movlb	1	; () banked
  4643  000EE0  4BA2               	infsnz	printf@cp& (0+255),f,b
  4644  000EE2  2BA3               	incf	(printf@cp+1)& (0+255),f,b
  4645  000EE4                     l3483:
  4646                           
  4647                           ; BSR set to: 1
  4648                           
  4649                           ; BSR set to: 1
  4650  000EE4  07A4               	decf	printf@len& (0+255),f,b
  4651  000EE6  A0D8               	btfss	status,0,c
  4652  000EE8  07A5               	decf	(printf@len+1)& (0+255),f,b
  4653  000EEA  29A4               	incf	printf@len& (0+255),w,b
  4654  000EEC  E1F1               	bnz	l21660
  4655  000EEE  29A5               	incf	(printf@len+1)& (0+255),w,b
  4656  000EF0  B4D8               	btfsc	status,2,c
  4657  000EF2  D3D1               	goto	l3543
  4658  000EF4  D7ED               	goto	l3484
  4659  000EF6                     
  4660                           ; BSR set to: 1
  4661                           ;doprnt.c: 805: cp = (char *)&c;
  4662                           
  4663                           ; BSR set to: 1
  4664  000EF6  0EB9               	movlw	low printf@c
  4665  000EF8  6FA2               	movwf	printf@cp& (0+255),b
  4666  000EFA  0E01               	movlw	high printf@c
  4667  000EFC  6FA3               	movwf	(printf@cp+1)& (0+255),b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;doprnt.c: 806: len = 1;
  4671  000EFE  0E00               	movlw	0
  4672  000F00  6FA5               	movwf	(printf@len+1)& (0+255),b
  4673  000F02  0E01               	movlw	1
  4674  000F04  6FA4               	movwf	printf@len& (0+255),b
  4675                           
  4676                           ;doprnt.c: 807: goto dostring;
  4677  000F06  D7B9               	goto	l3476
  4678  000F08                     l3471:
  4679                           
  4680                           ; BSR set to: 1
  4681  000F08  C18F  FFF6         	movff	printf@f,tblptrl
  4682  000F0C  C190  FFF7         	movff	printf@f+1,tblptrh
  4683  000F10  0101               	movlb	1	; () banked
  4684  000F12  4B8F               	infsnz	printf@f& (0+255),f,b
  4685  000F14  2B90               	incf	(printf@f+1)& (0+255),f,b
  4686  000F16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4687  000F16  6AF8               	clrf	tblptru,c
  4688  000F18                     	endif
  4689  000F18                     	if	0	;tblptru may be non-zero
  4690  000F18                     	endif
  4691  000F18  0008               	tblrd		*
  4692  000F1A  CFF5 F1B9          	movff	tablat,printf@c
  4693  000F1E  51B9               	movf	printf@c& (0+255),w,b
  4694                           
  4695                           ; Switch size 1, requested type "space"
  4696                           ; Number of cases is 2, Range of values is 0 to 102
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte            7     4 (average)
  4700                           ;	Chosen strategy is simple_byte
  4701  000F20  0A00               	xorlw	0	; case 0
  4702  000F22  B4D8               	btfsc	status,2,c
  4703  000F24  0012               	return	
  4704  000F26  0A66               	xorlw	102	; case 102
  4705  000F28  B4D8               	btfsc	status,2,c
  4706  000F2A  D7A5               	goto	l3474
  4707  000F2C  D7E4               	goto	l3486
  4708  000F2E                     l3475:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;doprnt.c: 825: if(flag & (0x700)) {
  4712                           
  4713                           ; BSR set to: 1
  4714  000F2E  0E07               	movlw	7
  4715  000F30  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  4716  000F32  B4D8               	btfsc	status,2,c
  4717  000F34  D313               	goto	l3487
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;doprnt.c: 827: if(flag & 0x1000)
  4721  000F36  A9AB               	btfss	(printf@flag+1)& (0+255),4,b
  4722  000F38  D004               	goto	l3488
  4723                           
  4724                           ; BSR set to: 1
  4725                           ;doprnt.c: 829: prec = 6;
  4726  000F3A  0E00               	movlw	0
  4727  000F3C  6FB8               	movwf	(printf@prec+1)& (0+255),b
  4728  000F3E  0E06               	movlw	6
  4729  000F40  6FB7               	movwf	printf@prec& (0+255),b
  4730  000F42                     l3488:
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4734                           
  4735                           ; BSR set to: 1
  4736  000F42  C1A0  FFD9         	movff	printf@ap,fsr2l
  4737  000F46  C1A1  FFDA         	movff	printf@ap+1,fsr2h
  4738  000F4A  CFDE F1B4          	movff	postinc2,printf@fval
  4739  000F4E  CFDE F1B5          	movff	postinc2,printf@fval+1
  4740  000F52  CFDD F1B6          	movff	postdec2,printf@fval+2
  4741                           
  4742                           ; BSR set to: 1
  4743  000F56  0E03               	movlw	3
  4744  000F58  27A0               	addwf	printf@ap& (0+255),f,b
  4745  000F5A  0E00               	movlw	0
  4746  000F5C  23A1               	addwfc	(printf@ap+1)& (0+255),f,b
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;doprnt.c: 831: if(fval < 0.0) {
  4750  000F5E  AFB6               	btfss	(printf@fval+2)& (0+255),7,b
  4751  000F60  D011               	goto	l3489
  4752                           
  4753                           ; BSR set to: 1
  4754                           ;doprnt.c: 832: fval = -fval;
  4755  000F62  C1B4  F060         	movff	printf@fval,___ftneg@f1
  4756  000F66  C1B5  F061         	movff	printf@fval+1,___ftneg@f1+1
  4757  000F6A  C1B6  F062         	movff	printf@fval+2,___ftneg@f1+2
  4758  000F6E  ECBA  F05E         	call	___ftneg	;wreg free
  4759  000F72  C060  F1B4         	movff	?___ftneg,printf@fval
  4760  000F76  C061  F1B5         	movff	?___ftneg+1,printf@fval+1
  4761  000F7A  C062  F1B6         	movff	?___ftneg+2,printf@fval+2
  4762                           
  4763                           ;doprnt.c: 833: flag |= 0x03;
  4764  000F7E  0E03               	movlw	3
  4765  000F80  0101               	movlb	1	; () banked
  4766  000F82  13AA               	iorwf	printf@flag& (0+255),f,b
  4767  000F84                     l3489:
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;doprnt.c: 834: }
  4771                           ;doprnt.c: 835: exp = 0;
  4772                           
  4773                           ; BSR set to: 1
  4774  000F84  0E00               	movlw	0
  4775  000F86  6FB1               	movwf	(printf@exp+1)& (0+255),b
  4776  000F88  0E00               	movlw	0
  4777  000F8A  6FB0               	movwf	printf@exp& (0+255),b
  4778                           
  4779                           ; BSR set to: 1
  4780                           ;doprnt.c: 836: if( fval!=0) {
  4781  000F8C  51B4               	movf	printf@fval& (0+255),w,b
  4782  000F8E  11B5               	iorwf	(printf@fval+1)& (0+255),w,b
  4783  000F90  11B6               	iorwf	(printf@fval+2)& (0+255),w,b
  4784  000F92  B4D8               	btfsc	status,2,c
  4785  000F94  D090               	goto	l3494
  4786                           
  4787                           ; BSR set to: 1
  4788                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4789  000F96  0E82               	movlw	130
  4790  000F98  0100               	movlb	0	; () banked
  4791  000F9A  6FF9               	movwf	??_printf& (0+255),b
  4792  000F9C  0EFF               	movlw	255
  4793  000F9E  6FFA               	movwf	(??_printf+1)& (0+255),b
  4794  000FA0  C1B4  F0FB         	movff	printf@fval,??_printf+2
  4795  000FA4  C1B5  F0FC         	movff	printf@fval+1,??_printf+3
  4796  000FA8  C1B6  F0FD         	movff	printf@fval+2,??_printf+4
  4797  000FAC  C1B7  F0FE         	movff	printf@fval+3,??_printf+5
  4798  000FB0  0E10               	movlw	16
  4799  000FB2  D005               	goto	u25980
  4800  000FB4                     u25985:
  4801  000FB4  90D8               	bcf	status,0,c
  4802  000FB6  33FE               	rrcf	(??_printf+5)& (0+255),f,b
  4803  000FB8  33FD               	rrcf	(??_printf+4)& (0+255),f,b
  4804  000FBA  33FC               	rrcf	(??_printf+3)& (0+255),f,b
  4805  000FBC  33FB               	rrcf	(??_printf+2)& (0+255),f,b
  4806  000FBE                     u25980:
  4807  000FBE  2EE8               	decfsz	wreg,f,c
  4808  000FC0  D7F9               	goto	u25985
  4809  000FC2  51FB               	movf	(??_printf+2)& (0+255),w,b
  4810  000FC4  25F9               	addwf	??_printf& (0+255),w,b
  4811  000FC6  0101               	movlb	1	; () banked
  4812  000FC8  6FB0               	movwf	printf@exp& (0+255),b
  4813  000FCA  0E00               	movlw	0
  4814  000FCC  0100               	movlb	0	; () banked
  4815  000FCE  21FA               	addwfc	(??_printf+1)& (0+255),w,b
  4816  000FD0  0101               	movlb	1	; () banked
  4817  000FD2  6FB1               	movwf	(printf@exp+1)& (0+255),b
  4818                           
  4819                           ; BSR set to: 1
  4820                           ;doprnt.c: 838: exp--;
  4821  000FD4  07B0               	decf	printf@exp& (0+255),f,b
  4822  000FD6  A0D8               	btfss	status,0,c
  4823  000FD8  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;doprnt.c: 839: exp *= 3;
  4827  000FDA  C1B0  F06E         	movff	printf@exp,___wmul@multiplier
  4828  000FDE  C1B1  F06F         	movff	printf@exp+1,___wmul@multiplier+1
  4829  000FE2  0E00               	movlw	0
  4830  000FE4  0100               	movlb	0	; () banked
  4831  000FE6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4832  000FE8  0E03               	movlw	3
  4833  000FEA  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4834  000FEC  EC7E  F05E         	call	___wmul	;wreg free
  4835  000FF0  C06E  F1B0         	movff	?___wmul,printf@exp
  4836  000FF4  C06F  F1B1         	movff	?___wmul+1,printf@exp+1
  4837                           
  4838                           ;doprnt.c: 840: exp /= 10;
  4839  000FF8  C1B0  F066         	movff	printf@exp,___awdiv@dividend
  4840  000FFC  C1B1  F067         	movff	printf@exp+1,___awdiv@dividend+1
  4841  001000  0E00               	movlw	0
  4842  001002  0100               	movlb	0	; () banked
  4843  001004  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4844  001006  0E0A               	movlw	10
  4845  001008  6F68               	movwf	___awdiv@divisor& (0+255),b
  4846  00100A  EC28  F050         	call	___awdiv	;wreg free
  4847  00100E  C066  F1B0         	movff	?___awdiv,printf@exp
  4848  001012  C067  F1B1         	movff	?___awdiv+1,printf@exp+1
  4849                           
  4850                           ;doprnt.c: 841: if(exp < 0)
  4851  001016  0101               	movlb	1	; () banked
  4852  001018  AFB1               	btfss	(printf@exp+1)& (0+255),7,b
  4853  00101A  D003               	goto	l3491
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;doprnt.c: 842: exp--;
  4857  00101C  07B0               	decf	printf@exp& (0+255),f,b
  4858  00101E  A0D8               	btfss	status,0,c
  4859  001020  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4860  001022                     l3491:
  4861                           
  4862                           ; BSR set to: 1
  4863                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4864                           
  4865                           ; BSR set to: 1
  4866  001022  51B0               	movf	printf@exp& (0+255),w,b
  4867  001024  0800               	sublw	0
  4868  001026  EC07  F015         	call	_scale
  4869  00102A  C083  F1AC         	movff	?_scale,printf@tmpval
  4870  00102E  C084  F1AD         	movff	?_scale+1,printf@tmpval+1
  4871  001032  C085  F1AE         	movff	?_scale+2,printf@tmpval+2
  4872                           
  4873                           ;doprnt.c: 847: tmpval.integ *= fval;
  4874  001036  C1AC  F074         	movff	printf@tmpval,___ftmul@f1
  4875  00103A  C1AD  F075         	movff	printf@tmpval+1,___ftmul@f1+1
  4876  00103E  C1AE  F076         	movff	printf@tmpval+2,___ftmul@f1+2
  4877  001042  C1B4  F077         	movff	printf@fval,___ftmul@f2
  4878  001046  C1B5  F078         	movff	printf@fval+1,___ftmul@f2+1
  4879  00104A  C1B6  F079         	movff	printf@fval+2,___ftmul@f2+2
  4880  00104E  EC54  F045         	call	___ftmul	;wreg free
  4881  001052  C074  F1AC         	movff	?___ftmul,printf@tmpval
  4882  001056  C075  F1AD         	movff	?___ftmul+1,printf@tmpval+1
  4883  00105A  C076  F1AE         	movff	?___ftmul+2,printf@tmpval+2
  4884                           
  4885                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4886  00105E  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  4887  001062  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  4888  001066  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  4889  00106A  0E00               	movlw	0
  4890  00106C  0100               	movlb	0	; () banked
  4891  00106E  6F63               	movwf	___ftge@ff2& (0+255),b
  4892  001070  0E80               	movlw	128
  4893  001072  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4894  001074  0E3F               	movlw	63
  4895  001076  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4896  001078  EC3A  F04E         	call	___ftge	;wreg free
  4897  00107C  0100               	movlb	0	; () banked
  4898  00107E  B0D8               	btfsc	status,0,c
  4899  001080  D005               	goto	l3492
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;doprnt.c: 849: exp--;
  4903  001082  0101               	movlb	1	; () banked
  4904  001084  07B0               	decf	printf@exp& (0+255),f,b
  4905  001086  A0D8               	btfss	status,0,c
  4906  001088  07B1               	decf	(printf@exp+1)& (0+255),f,b
  4907  00108A  D015               	goto	l3494
  4908  00108C                     l3492:
  4909                           
  4910                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4911                           
  4912                           ; BSR set to: 1
  4913  00108C  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  4914  001090  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  4915  001094  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  4916  001098  0E00               	movlw	0
  4917  00109A  0100               	movlb	0	; () banked
  4918  00109C  6F63               	movwf	___ftge@ff2& (0+255),b
  4919  00109E  0E20               	movlw	32
  4920  0010A0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4921  0010A2  0E41               	movlw	65
  4922  0010A4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4923  0010A6  EC3A  F04E         	call	___ftge	;wreg free
  4924  0010AA  0100               	movlb	0	; () banked
  4925  0010AC  A0D8               	btfss	status,0,c
  4926  0010AE  D003               	goto	l3494
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;doprnt.c: 851: exp++;
  4930  0010B0  0101               	movlb	1	; () banked
  4931  0010B2  4BB0               	infsnz	printf@exp& (0+255),f,b
  4932  0010B4  2BB1               	incf	(printf@exp+1)& (0+255),f,b
  4933  0010B6                     l3494:
  4934                           
  4935                           ;doprnt.c: 852: }
  4936                           ;doprnt.c: 1112: if(prec <= 12)
  4937                           
  4938                           ; BSR set to: 1
  4939                           
  4940                           ; BSR set to: 1
  4941                           
  4942                           ; BSR set to: 1
  4943  0010B6  0101               	movlb	1	; () banked
  4944  0010B8  BFB8               	btfsc	(printf@prec+1)& (0+255),7,b
  4945  0010BA  D006               	goto	u26020
  4946  0010BC  51B8               	movf	(printf@prec+1)& (0+255),w,b
  4947  0010BE  E11B               	bnz	l21722
  4948  0010C0  0E0D               	movlw	13
  4949  0010C2  5DB7               	subwf	printf@prec& (0+255),w,b
  4950  0010C4  B0D8               	btfsc	status,0,c
  4951  0010C6  D017               	goto	l3495
  4952  0010C8                     u26020:
  4953                           
  4954                           ; BSR set to: 1
  4955                           ;doprnt.c: 1113: fval += fround(prec);
  4956  0010C8  C1B4  F08D         	movff	printf@fval,___ftadd@f1
  4957  0010CC  C1B5  F08E         	movff	printf@fval+1,___ftadd@f1+1
  4958  0010D0  C1B6  F08F         	movff	printf@fval+2,___ftadd@f1+2
  4959  0010D4  51B7               	movf	printf@prec& (0+255),w,b
  4960  0010D6  EC60  F02B         	call	_fround
  4961  0010DA  C083  F090         	movff	?_fround,___ftadd@f2
  4962  0010DE  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  4963  0010E2  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  4964  0010E6  ECD3  F034         	call	___ftadd	;wreg free
  4965  0010EA  C08D  F1B4         	movff	?___ftadd,printf@fval
  4966  0010EE  C08E  F1B5         	movff	?___ftadd+1,printf@fval+1
  4967  0010F2  C08F  F1B6         	movff	?___ftadd+2,printf@fval+2
  4968  0010F6                     l3495:
  4969  0010F6                     l21722:
  4970                           
  4971                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4972  0010F6  0101               	movlb	1	; () banked
  4973  0010F8  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  4974  0010FA  D006               	goto	u26030
  4975  0010FC  51B1               	movf	(printf@exp+1)& (0+255),w,b
  4976  0010FE  E121               	bnz	l21730
  4977  001100  0E0A               	movlw	10
  4978  001102  5DB0               	subwf	printf@exp& (0+255),w,b
  4979  001104  B0D8               	btfsc	status,0,c
  4980  001106  D01D               	goto	u26060
  4981  001108                     u26030:
  4982                           
  4983                           ; BSR set to: 1
  4984  001108  51B4               	movf	printf@fval& (0+255),w,b
  4985  00110A  11B5               	iorwf	(printf@fval+1)& (0+255),w,b
  4986  00110C  11B6               	iorwf	(printf@fval+2)& (0+255),w,b
  4987  00110E  B4D8               	btfsc	status,2,c
  4988  001110  D059               	goto	l3496
  4989                           
  4990                           ; BSR set to: 1
  4991  001112  C1B4  F083         	movff	printf@fval,___fttol@f1
  4992  001116  C1B5  F084         	movff	printf@fval+1,___fttol@f1+1
  4993  00111A  C1B6  F085         	movff	printf@fval+2,___fttol@f1+2
  4994  00111E  ECD8  F044         	call	___fttol	;wreg free
  4995  001122  0100               	movlb	0	; () banked
  4996  001124  5183               	movf	?___fttol& (0+255),w,b
  4997  001126  1184               	iorwf	(?___fttol+1)& (0+255),w,b
  4998  001128  1185               	iorwf	(?___fttol+2)& (0+255),w,b
  4999  00112A  1186               	iorwf	(?___fttol+3)& (0+255),w,b
  5000  00112C  A4D8               	btfss	status,2,c
  5001  00112E  D04A               	goto	l3496
  5002                           
  5003                           ; BSR set to: 0
  5004  001130  0101               	movlb	1	; () banked
  5005  001132  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  5006  001134  D047               	goto	l3496
  5007  001136  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5008  001138  E104               	bnz	l21730
  5009  00113A  0E02               	movlw	2
  5010  00113C  5DB0               	subwf	printf@exp& (0+255),w,b
  5011  00113E  A0D8               	btfss	status,0,c
  5012  001140  D041               	goto	l3496
  5013  001142                     u26060:
  5014  001142                     l21730:
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5018  001142  C1AC  F060         	movff	printf@tmpval,___ftge@ff1
  5019  001146  C1AD  F061         	movff	printf@tmpval+1,___ftge@ff1+1
  5020  00114A  C1AE  F062         	movff	printf@tmpval+2,___ftge@ff1+2
  5021  00114E  0E70               	movlw	112
  5022  001150  0100               	movlb	0	; () banked
  5023  001152  6F63               	movwf	___ftge@ff2& (0+255),b
  5024  001154  0E89               	movlw	137
  5025  001156  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5026  001158  0E40               	movlw	64
  5027  00115A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5028  00115C  EC3A  F04E         	call	___ftge	;wreg free
  5029  001160  0100               	movlb	0	; () banked
  5030  001162  B0D8               	btfsc	status,0,c
  5031  001164  D003               	goto	l3499
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5035  001166  0101               	movlb	1	; () banked
  5036  001168  0EF7               	movlw	247
  5037  00116A  D002               	goto	L1
  5038  00116C                     l3499:
  5039                           
  5040                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5041                           
  5042                           ; BSR set to: 1
  5043  00116C  0101               	movlb	1	; () banked
  5044  00116E  0EF8               	movlw	248
  5045  001170                     L1:
  5046  001170  27B0               	addwf	printf@exp& (0+255),f,b
  5047  001172  0EFF               	movlw	255
  5048  001174  23B1               	addwfc	(printf@exp+1)& (0+255),f,b
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;doprnt.c: 1124: }
  5052                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  5053                           
  5054                           ; BSR set to: 1
  5055  001176  51B0               	movf	printf@exp& (0+255),w,b
  5056  001178  EC07  F015         	call	_scale
  5057  00117C  C083  F1AC         	movff	?_scale,printf@tmpval
  5058  001180  C084  F1AD         	movff	?_scale+1,printf@tmpval+1
  5059  001184  C085  F1AE         	movff	?_scale+2,printf@tmpval+2
  5060                           
  5061                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5062  001188  C1B4  F060         	movff	printf@fval,__tdiv_to_l_@f1
  5063  00118C  C1B5  F061         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  5064  001190  C1B6  F062         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  5065  001194  C1AC  F063         	movff	printf@tmpval,__tdiv_to_l_@f2
  5066  001198  C1AD  F064         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  5067  00119C  C1AE  F065         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  5068  0011A0  ECD1  F03E         	call	__tdiv_to_l_	;wreg free
  5069  0011A4  C060  F1A6         	movff	?__tdiv_to_l_,printf@val
  5070  0011A8  C061  F1A7         	movff	?__tdiv_to_l_+1,printf@val+1
  5071  0011AC  C062  F1A8         	movff	?__tdiv_to_l_+2,printf@val+2
  5072  0011B0  C063  F1A9         	movff	?__tdiv_to_l_+3,printf@val+3
  5073                           
  5074                           ;doprnt.c: 1129: fval = 0.0;
  5075  0011B4  0E00               	movlw	0
  5076  0011B6  0101               	movlb	1	; () banked
  5077  0011B8  6FB4               	movwf	printf@fval& (0+255),b
  5078  0011BA  0E00               	movlw	0
  5079  0011BC  6FB5               	movwf	(printf@fval+1)& (0+255),b
  5080  0011BE  0E00               	movlw	0
  5081  0011C0  6FB6               	movwf	(printf@fval+2)& (0+255),b
  5082                           
  5083                           ;doprnt.c: 1130: } else {
  5084  0011C2  D033               	goto	l3505
  5085  0011C4                     l3496:
  5086                           
  5087                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5088                           
  5089                           ; BSR set to: 1
  5090  0011C4  C1B4  F083         	movff	printf@fval,___fttol@f1
  5091  0011C8  C1B5  F084         	movff	printf@fval+1,___fttol@f1+1
  5092  0011CC  C1B6  F085         	movff	printf@fval+2,___fttol@f1+2
  5093  0011D0  ECD8  F044         	call	___fttol	;wreg free
  5094  0011D4  C083  F1A6         	movff	?___fttol,printf@val
  5095  0011D8  C084  F1A7         	movff	?___fttol+1,printf@val+1
  5096  0011DC  C085  F1A8         	movff	?___fttol+2,printf@val+2
  5097  0011E0  C086  F1A9         	movff	?___fttol+3,printf@val+3
  5098                           
  5099                           ;doprnt.c: 1132: fval -= (double)val;
  5100  0011E4  C1B4  F0E4         	movff	printf@fval,___ftsub@f1
  5101  0011E8  C1B5  F0E5         	movff	printf@fval+1,___ftsub@f1+1
  5102  0011EC  C1B6  F0E6         	movff	printf@fval+2,___ftsub@f1+2
  5103  0011F0  C1A6  F0DB         	movff	printf@val,___lltoft@c
  5104  0011F4  C1A7  F0DC         	movff	printf@val+1,___lltoft@c+1
  5105  0011F8  C1A8  F0DD         	movff	printf@val+2,___lltoft@c+2
  5106  0011FC  C1A9  F0DE         	movff	printf@val+3,___lltoft@c+3
  5107  001200  ECD9  F055         	call	___lltoft	;wreg free
  5108  001204  C0DB  F0E7         	movff	?___lltoft,___ftsub@f2
  5109  001208  C0DC  F0E8         	movff	?___lltoft+1,___ftsub@f2+1
  5110  00120C  C0DD  F0E9         	movff	?___lltoft+2,___ftsub@f2+2
  5111  001210  EC19  F05B         	call	___ftsub	;wreg free
  5112  001214  C0E4  F1B4         	movff	?___ftsub,printf@fval
  5113  001218  C0E5  F1B5         	movff	?___ftsub+1,printf@fval+1
  5114  00121C  C0E6  F1B6         	movff	?___ftsub+2,printf@fval+2
  5115                           
  5116                           ;doprnt.c: 1133: exp = 0;
  5117  001220  0E00               	movlw	0
  5118  001222  0101               	movlb	1	; () banked
  5119  001224  6FB1               	movwf	(printf@exp+1)& (0+255),b
  5120  001226  0E00               	movlw	0
  5121  001228  6FB0               	movwf	printf@exp& (0+255),b
  5122  00122A                     l3505:
  5123                           
  5124                           ; BSR set to: 1
  5125                           ;doprnt.c: 1134: }
  5126                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5127                           
  5128                           ; BSR set to: 1
  5129  00122A  0E01               	movlw	1
  5130  00122C  6FB9               	movwf	printf@c& (0+255),b
  5131  00122E                     l21750:
  5132                           
  5133                           ; BSR set to: 1
  5134  00122E  0E0A               	movlw	10
  5135  001230  19B9               	xorwf	printf@c& (0+255),w,b
  5136  001232  B4D8               	btfsc	status,2,c
  5137  001234  D01B               	goto	u26100
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;doprnt.c: 1137: if(val < dpowers[c])
  5141                           
  5142                           ; BSR set to: 1
  5143                           
  5144                           ; BSR set to: 1
  5145  001236  51B9               	movf	printf@c& (0+255),w,b
  5146  001238  0D04               	mullw	4
  5147  00123A  0E3F               	movlw	low _dpowers
  5148  00123C  24F3               	addwf	prodl,w,c
  5149  00123E  6EF6               	movwf	tblptrl,c
  5150  001240  0EFE               	movlw	high _dpowers
  5151  001242  20F4               	addwfc	prodh,w,c
  5152  001244  6EF7               	movwf	tblptrh,c
  5153  001246                     	if	1	;There are 3 active tblptr bytes
  5154  001246  6AF8               	clrf	tblptru,c
  5155  001248  0E00               	movlw	low (__mediumconst shr (0+16))
  5156  00124A  22F8               	addwfc	tblptru,f,c
  5157  00124C                     	endif
  5158  00124C  0009               	tblrd		*+
  5159  00124E  50F5               	movf	tablat,w,c
  5160  001250  5DA6               	subwf	printf@val& (0+255),w,b
  5161  001252  0009               	tblrd		*+
  5162  001254  50F5               	movf	tablat,w,c
  5163  001256  59A7               	subwfb	(printf@val+1)& (0+255),w,b
  5164  001258  0009               	tblrd		*+
  5165  00125A  50F5               	movf	tablat,w,c
  5166  00125C  59A8               	subwfb	(printf@val+2)& (0+255),w,b
  5167  00125E  0009               	tblrd		*+
  5168  001260  50F5               	movf	tablat,w,c
  5169  001262  59A9               	subwfb	(printf@val+3)& (0+255),w,b
  5170  001264  A0D8               	btfss	status,0,c
  5171  001266  D002               	goto	u26100
  5172                           
  5173                           ; BSR set to: 1
  5174                           
  5175                           ; BSR set to: 1
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;doprnt.c: 1138: break;
  5179  001268  2BB9               	incf	printf@c& (0+255),f,b
  5180  00126A  D7E1               	goto	l21750
  5181  00126C                     u26100:
  5182                           
  5183                           ; BSR set to: 1
  5184                           ;doprnt.c: 1142: width -= prec + c + exp;
  5185                           
  5186                           ; BSR set to: 1
  5187  00126C  C1B9  F0F9         	movff	printf@c,??_printf
  5188  001270  0100               	movlb	0	; () banked
  5189  001272  6BFA               	clrf	(??_printf+1)& (0+255),b
  5190  001274  BFF9               	btfsc	??_printf& (0+255),7,b
  5191  001276  07FA               	decf	(??_printf+1)& (0+255),f,b
  5192  001278  0101               	movlb	1	; () banked
  5193  00127A  51B7               	movf	printf@prec& (0+255),w,b
  5194  00127C  0100               	movlb	0	; () banked
  5195  00127E  27F9               	addwf	??_printf& (0+255),f,b
  5196  001280  0101               	movlb	1	; () banked
  5197  001282  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5198  001284  0100               	movlb	0	; () banked
  5199  001286  23FA               	addwfc	(??_printf+1)& (0+255),f,b
  5200  001288  0101               	movlb	1	; () banked
  5201  00128A  51B0               	movf	printf@exp& (0+255),w,b
  5202  00128C  0100               	movlb	0	; () banked
  5203  00128E  27F9               	addwf	??_printf& (0+255),f,b
  5204  001290  0101               	movlb	1	; () banked
  5205  001292  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5206  001294  0100               	movlb	0	; () banked
  5207  001296  23FA               	addwfc	(??_printf+1)& (0+255),f,b
  5208  001298  51F9               	movf	??_printf& (0+255),w,b
  5209  00129A  0101               	movlb	1	; () banked
  5210  00129C  5FB2               	subwf	printf@width& (0+255),f,b
  5211  00129E  0100               	movlb	0	; () banked
  5212  0012A0  51FA               	movf	(??_printf+1)& (0+255),w,b
  5213  0012A2  0101               	movlb	1	; () banked
  5214  0012A4  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5215                           
  5216                           ;doprnt.c: 1143: if(
  5217                           ;doprnt.c: 1147: prec)
  5218  0012A6  51B7               	movf	printf@prec& (0+255),w,b
  5219  0012A8  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5220  0012AA  B4D8               	btfsc	status,2,c
  5221  0012AC  D003               	goto	l3509
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;doprnt.c: 1148: width--;
  5225  0012AE  07B2               	decf	printf@width& (0+255),f,b
  5226  0012B0  A0D8               	btfss	status,0,c
  5227  0012B2  07B3               	decf	(printf@width+1)& (0+255),f,b
  5228  0012B4                     l3509:
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;doprnt.c: 1149: if(flag & 0x03)
  5232                           
  5233                           ; BSR set to: 1
  5234  0012B4  0E03               	movlw	3
  5235  0012B6  15AA               	andwf	printf@flag& (0+255),w,b
  5236  0012B8  0100               	movlb	0	; () banked
  5237  0012BA  6FF9               	movwf	??_printf& (0+255),b
  5238  0012BC  0E00               	movlw	0
  5239  0012BE  0101               	movlb	1	; () banked
  5240  0012C0  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5241  0012C2  0100               	movlb	0	; () banked
  5242  0012C4  6FFA               	movwf	(??_printf+1)& (0+255),b
  5243  0012C6  51F9               	movf	??_printf& (0+255),w,b
  5244  0012C8  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5245  0012CA  B4D8               	btfsc	status,2,c
  5246  0012CC  D008               	goto	l3511
  5247  0012CE  D003               	goto	l21772
  5248  0012D0                     l21770:
  5249                           
  5250                           ; BSR set to: 1
  5251                           ;doprnt.c: 1181: (putch(' ') );
  5252  0012D0  0E20               	movlw	32
  5253  0012D2  EC46  F062         	call	_putch
  5254  0012D6                     l21772:
  5255                           
  5256                           ;doprnt.c: 1182: width--;
  5257  0012D6  0101               	movlb	1	; () banked
  5258  0012D8  07B2               	decf	printf@width& (0+255),f,b
  5259  0012DA  A0D8               	btfss	status,0,c
  5260  0012DC  07B3               	decf	(printf@width+1)& (0+255),f,b
  5261  0012DE                     l3511:
  5262                           
  5263                           ; BSR set to: 1
  5264  0012DE  0101               	movlb	1	; () banked
  5265  0012E0  BFB3               	btfsc	(printf@width+1)& (0+255),7,b
  5266  0012E2  D005               	goto	u26130
  5267  0012E4  51B3               	movf	(printf@width+1)& (0+255),w,b
  5268  0012E6  E1F4               	bnz	l21770
  5269  0012E8  05B2               	decf	printf@width& (0+255),w,b
  5270  0012EA  B0D8               	btfsc	status,0,c
  5271  0012EC  D7F1               	goto	l3512
  5272  0012EE                     u26130:
  5273                           
  5274                           ; BSR set to: 1
  5275                           ;doprnt.c: 1183: }
  5276                           ;doprnt.c: 1188: if(flag & 0x03)
  5277                           
  5278                           ; BSR set to: 1
  5279  0012EE  0E03               	movlw	3
  5280  0012F0  15AA               	andwf	printf@flag& (0+255),w,b
  5281  0012F2  0100               	movlb	0	; () banked
  5282  0012F4  6FF9               	movwf	??_printf& (0+255),b
  5283  0012F6  0E00               	movlw	0
  5284  0012F8  0101               	movlb	1	; () banked
  5285  0012FA  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5286  0012FC  0100               	movlb	0	; () banked
  5287  0012FE  6FFA               	movwf	(??_printf+1)& (0+255),b
  5288  001300  51F9               	movf	??_printf& (0+255),w,b
  5289  001302  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5290  001304  B4D8               	btfsc	status,2,c
  5291  001306  D04E               	goto	l3515
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;doprnt.c: 1190: (putch('-') );
  5295  001308  0E2D               	movlw	45
  5296  00130A  EC46  F062         	call	_putch
  5297                           
  5298                           ;doprnt.c: 1195: }
  5299                           ;doprnt.c: 1196: while(c--) {
  5300  00130E  D04A               	goto	l3515
  5301  001310                     
  5302                           ;doprnt.c: 1200: {
  5303                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5304  001310  C1A6  F060         	movff	printf@val,___lldiv@dividend
  5305  001314  C1A7  F061         	movff	printf@val+1,___lldiv@dividend+1
  5306  001318  C1A8  F062         	movff	printf@val+2,___lldiv@dividend+2
  5307  00131C  C1A9  F063         	movff	printf@val+3,___lldiv@dividend+3
  5308  001320  0101               	movlb	1	; () banked
  5309  001322  51B9               	movf	printf@c& (0+255),w,b
  5310  001324  0D04               	mullw	4
  5311  001326  0E3F               	movlw	low _dpowers
  5312  001328  24F3               	addwf	prodl,w,c
  5313  00132A  6EF6               	movwf	tblptrl,c
  5314  00132C  0EFE               	movlw	high _dpowers
  5315  00132E  20F4               	addwfc	prodh,w,c
  5316  001330  6EF7               	movwf	tblptrh,c
  5317  001332                     	if	1	;There are 3 active tblptr bytes
  5318  001332  6AF8               	clrf	tblptru,c
  5319  001334  0E00               	movlw	low (__mediumconst shr (0+16))
  5320  001336  22F8               	addwfc	tblptru,f,c
  5321  001338                     	endif
  5322  001338  0009               	tblrd		*+
  5323  00133A  CFF5 F064          	movff	tablat,___lldiv@divisor
  5324  00133E  0009               	tblrd		*+
  5325  001340  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  5326  001344  0009               	tblrd		*+
  5327  001346  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  5328  00134A  000A               	tblrd		*-
  5329  00134C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  5330  001350  ECAE  F050         	call	___lldiv	;wreg free
  5331  001354  C060  F1AC         	movff	?___lldiv,printf@tmpval
  5332  001358  C061  F1AD         	movff	?___lldiv+1,printf@tmpval+1
  5333  00135C  C062  F1AE         	movff	?___lldiv+2,printf@tmpval+2
  5334  001360  C063  F1AF         	movff	?___lldiv+3,printf@tmpval+3
  5335                           
  5336                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5337  001364  C1AC  F060         	movff	printf@tmpval,___llmod@dividend
  5338  001368  C1AD  F061         	movff	printf@tmpval+1,___llmod@dividend+1
  5339  00136C  C1AE  F062         	movff	printf@tmpval+2,___llmod@dividend+2
  5340  001370  C1AF  F063         	movff	printf@tmpval+3,___llmod@dividend+3
  5341  001374  0E0A               	movlw	10
  5342  001376  0100               	movlb	0	; () banked
  5343  001378  6F64               	movwf	___llmod@divisor& (0+255),b
  5344  00137A  0E00               	movlw	0
  5345  00137C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5346  00137E  0E00               	movlw	0
  5347  001380  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5348  001382  0E00               	movlw	0
  5349  001384  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5350  001386  EC1A  F054         	call	___llmod	;wreg free
  5351  00138A  C060  F1AC         	movff	?___llmod,printf@tmpval
  5352  00138E  C061  F1AD         	movff	?___llmod+1,printf@tmpval+1
  5353  001392  C062  F1AE         	movff	?___llmod+2,printf@tmpval+2
  5354  001396  C063  F1AF         	movff	?___llmod+3,printf@tmpval+3
  5355                           
  5356                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5357  00139A  0101               	movlb	1	; () banked
  5358  00139C  51AC               	movf	printf@tmpval& (0+255),w,b
  5359  00139E  0F30               	addlw	48
  5360  0013A0  EC46  F062         	call	_putch
  5361  0013A4                     l3515:
  5362  0013A4  0101               	movlb	1	; () banked
  5363  0013A6  07B9               	decf	printf@c& (0+255),f,b
  5364  0013A8  29B9               	incf	printf@c& (0+255),w,b
  5365  0013AA  B4D8               	btfsc	status,2,c
  5366  0013AC  D008               	goto	l3518
  5367  0013AE  D7B0               	goto	l3516
  5368  0013B0                     l21788:
  5369                           
  5370                           ; BSR set to: 1
  5371                           ;doprnt.c: 1208: (putch('0') );
  5372  0013B0  0E30               	movlw	48
  5373  0013B2  EC46  F062         	call	_putch
  5374                           
  5375                           ;doprnt.c: 1209: exp--;
  5376  0013B6  0101               	movlb	1	; () banked
  5377  0013B8  07B0               	decf	printf@exp& (0+255),f,b
  5378  0013BA  A0D8               	btfss	status,0,c
  5379  0013BC  07B1               	decf	(printf@exp+1)& (0+255),f,b
  5380  0013BE                     l3518:
  5381                           
  5382                           ; BSR set to: 1
  5383                           
  5384                           ; BSR set to: 1
  5385  0013BE  BFB1               	btfsc	(printf@exp+1)& (0+255),7,b
  5386  0013C0  D005               	goto	u26160
  5387  0013C2  51B1               	movf	(printf@exp+1)& (0+255),w,b
  5388  0013C4  E1F5               	bnz	l21788
  5389  0013C6  05B0               	decf	printf@exp& (0+255),w,b
  5390  0013C8  B0D8               	btfsc	status,0,c
  5391  0013CA  D7F2               	goto	l3519
  5392  0013CC                     u26160:
  5393                           
  5394                           ; BSR set to: 1
  5395                           ;doprnt.c: 1210: }
  5396                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5397                           
  5398                           ; BSR set to: 1
  5399  0013CC  BFB8               	btfsc	(printf@prec+1)& (0+255),7,b
  5400  0013CE  D009               	goto	l3521
  5401  0013D0  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5402  0013D2  E104               	bnz	u26170
  5403  0013D4  0E09               	movlw	9
  5404  0013D6  5DB7               	subwf	printf@prec& (0+255),w,b
  5405  0013D8  A0D8               	btfss	status,0,c
  5406  0013DA  D003               	goto	l3521
  5407  0013DC                     u26170:
  5408                           
  5409                           ; BSR set to: 1
  5410                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5411  0013DC  0E08               	movlw	8
  5412  0013DE  6FB9               	movwf	printf@c& (0+255),b
  5413  0013E0  D002               	goto	l3522
  5414  0013E2                     l3521:
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;doprnt.c: 1213: else
  5418                           ;doprnt.c: 1214: c = prec;
  5419  0013E2  C1B7  F1B9         	movff	printf@prec,printf@c
  5420  0013E6                     l3522:
  5421                           
  5422                           ; BSR set to: 1
  5423                           ;doprnt.c: 1215: prec -= c;
  5424                           
  5425                           ; BSR set to: 1
  5426  0013E6  51B9               	movf	printf@c& (0+255),w,b
  5427  0013E8  5FB7               	subwf	printf@prec& (0+255),f,b
  5428  0013EA  0E00               	movlw	0
  5429  0013EC  BFB9               	btfsc	printf@c& (0+255),7,b
  5430  0013EE  0EFF               	movlw	255
  5431  0013F0  5BB8               	subwfb	(printf@prec+1)& (0+255),f,b
  5432                           
  5433                           ; BSR set to: 1
  5434                           ;doprnt.c: 1219: if(c)
  5435  0013F2  51B9               	movf	printf@c& (0+255),w,b
  5436  0013F4  B4D8               	btfsc	status,2,c
  5437  0013F6  D003               	goto	l3523
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;doprnt.c: 1221: (putch('.') );
  5441  0013F8  0E2E               	movlw	46
  5442  0013FA  EC46  F062         	call	_putch
  5443  0013FE                     l3523:
  5444                           
  5445                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5446  0013FE  0101               	movlb	1	; () banked
  5447  001400  51B9               	movf	printf@c& (0+255),w,b
  5448  001402  EC07  F015         	call	_scale
  5449  001406  C083  F19D         	movff	?_scale,_printf$7034
  5450  00140A  C084  F19E         	movff	?_scale+1,_printf$7034+1
  5451  00140E  C085  F19F         	movff	?_scale+2,_printf$7034+2
  5452                           
  5453                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5454  001412  C1B4  F077         	movff	printf@fval,___ftmul@f2
  5455  001416  C1B5  F078         	movff	printf@fval+1,___ftmul@f2+1
  5456  00141A  C1B6  F079         	movff	printf@fval+2,___ftmul@f2+2
  5457  00141E  C19D  F074         	movff	_printf$7034,___ftmul@f1
  5458  001422  C19E  F075         	movff	_printf$7034+1,___ftmul@f1+1
  5459  001426  C19F  F076         	movff	_printf$7034+2,___ftmul@f1+2
  5460  00142A  EC54  F045         	call	___ftmul	;wreg free
  5461  00142E  C074  F083         	movff	?___ftmul,___fttol@f1
  5462  001432  C075  F084         	movff	?___ftmul+1,___fttol@f1+1
  5463  001436  C076  F085         	movff	?___ftmul+2,___fttol@f1+2
  5464  00143A  ECD8  F044         	call	___fttol	;wreg free
  5465  00143E  C083  F1A6         	movff	?___fttol,printf@val
  5466  001442  C084  F1A7         	movff	?___fttol+1,printf@val+1
  5467  001446  C085  F1A8         	movff	?___fttol+2,printf@val+2
  5468  00144A  C086  F1A9         	movff	?___fttol+3,printf@val+3
  5469                           
  5470                           ;doprnt.c: 1228: while(c--) {
  5471  00144E  D074               	goto	l3524
  5472  001450                     
  5473                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5474  001450  C1A6  F060         	movff	printf@val,___lldiv@dividend
  5475  001454  C1A7  F061         	movff	printf@val+1,___lldiv@dividend+1
  5476  001458  C1A8  F062         	movff	printf@val+2,___lldiv@dividend+2
  5477  00145C  C1A9  F063         	movff	printf@val+3,___lldiv@dividend+3
  5478  001460  0101               	movlb	1	; () banked
  5479  001462  51B9               	movf	printf@c& (0+255),w,b
  5480  001464  0D04               	mullw	4
  5481  001466  0E3F               	movlw	low _dpowers
  5482  001468  24F3               	addwf	prodl,w,c
  5483  00146A  6EF6               	movwf	tblptrl,c
  5484  00146C  0EFE               	movlw	high _dpowers
  5485  00146E  20F4               	addwfc	prodh,w,c
  5486  001470  6EF7               	movwf	tblptrh,c
  5487  001472                     	if	1	;There are 3 active tblptr bytes
  5488  001472  6AF8               	clrf	tblptru,c
  5489  001474  0E00               	movlw	low (__mediumconst shr (0+16))
  5490  001476  22F8               	addwfc	tblptru,f,c
  5491  001478                     	endif
  5492  001478  0009               	tblrd		*+
  5493  00147A  CFF5 F064          	movff	tablat,___lldiv@divisor
  5494  00147E  0009               	tblrd		*+
  5495  001480  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  5496  001484  0009               	tblrd		*+
  5497  001486  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  5498  00148A  000A               	tblrd		*-
  5499  00148C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  5500  001490  ECAE  F050         	call	___lldiv	;wreg free
  5501  001494  C060  F1AC         	movff	?___lldiv,printf@tmpval
  5502  001498  C061  F1AD         	movff	?___lldiv+1,printf@tmpval+1
  5503  00149C  C062  F1AE         	movff	?___lldiv+2,printf@tmpval+2
  5504  0014A0  C063  F1AF         	movff	?___lldiv+3,printf@tmpval+3
  5505                           
  5506                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5507  0014A4  C1AC  F060         	movff	printf@tmpval,___llmod@dividend
  5508  0014A8  C1AD  F061         	movff	printf@tmpval+1,___llmod@dividend+1
  5509  0014AC  C1AE  F062         	movff	printf@tmpval+2,___llmod@dividend+2
  5510  0014B0  C1AF  F063         	movff	printf@tmpval+3,___llmod@dividend+3
  5511  0014B4  0E0A               	movlw	10
  5512  0014B6  0100               	movlb	0	; () banked
  5513  0014B8  6F64               	movwf	___llmod@divisor& (0+255),b
  5514  0014BA  0E00               	movlw	0
  5515  0014BC  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  5516  0014BE  0E00               	movlw	0
  5517  0014C0  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  5518  0014C2  0E00               	movlw	0
  5519  0014C4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  5520  0014C6  EC1A  F054         	call	___llmod	;wreg free
  5521  0014CA  C060  F1AC         	movff	?___llmod,printf@tmpval
  5522  0014CE  C061  F1AD         	movff	?___llmod+1,printf@tmpval+1
  5523  0014D2  C062  F1AE         	movff	?___llmod+2,printf@tmpval+2
  5524  0014D6  C063  F1AF         	movff	?___llmod+3,printf@tmpval+3
  5525                           
  5526                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5527  0014DA  0101               	movlb	1	; () banked
  5528  0014DC  51AC               	movf	printf@tmpval& (0+255),w,b
  5529  0014DE  0F30               	addlw	48
  5530  0014E0  EC46  F062         	call	_putch
  5531                           
  5532                           ;doprnt.c: 1232: val %= dpowers[c];
  5533  0014E4  C1A6  F060         	movff	printf@val,___llmod@dividend
  5534  0014E8  C1A7  F061         	movff	printf@val+1,___llmod@dividend+1
  5535  0014EC  C1A8  F062         	movff	printf@val+2,___llmod@dividend+2
  5536  0014F0  C1A9  F063         	movff	printf@val+3,___llmod@dividend+3
  5537  0014F4  0101               	movlb	1	; () banked
  5538  0014F6  51B9               	movf	printf@c& (0+255),w,b
  5539  0014F8  0D04               	mullw	4
  5540  0014FA  0E3F               	movlw	low _dpowers
  5541  0014FC  24F3               	addwf	prodl,w,c
  5542  0014FE  6EF6               	movwf	tblptrl,c
  5543  001500  0EFE               	movlw	high _dpowers
  5544  001502  20F4               	addwfc	prodh,w,c
  5545  001504  6EF7               	movwf	tblptrh,c
  5546  001506                     	if	1	;There are 3 active tblptr bytes
  5547  001506  6AF8               	clrf	tblptru,c
  5548  001508  0E00               	movlw	low (__mediumconst shr (0+16))
  5549  00150A  22F8               	addwfc	tblptru,f,c
  5550  00150C                     	endif
  5551  00150C  0009               	tblrd		*+
  5552  00150E  CFF5 F064          	movff	tablat,___llmod@divisor
  5553  001512  0009               	tblrd		*+
  5554  001514  CFF5 F065          	movff	tablat,___llmod@divisor+1
  5555  001518  0009               	tblrd		*+
  5556  00151A  CFF5 F066          	movff	tablat,___llmod@divisor+2
  5557  00151E  000A               	tblrd		*-
  5558  001520  CFF5 F067          	movff	tablat,___llmod@divisor+3
  5559  001524  EC1A  F054         	call	___llmod	;wreg free
  5560  001528  C060  F1A6         	movff	?___llmod,printf@val
  5561  00152C  C061  F1A7         	movff	?___llmod+1,printf@val+1
  5562  001530  C062  F1A8         	movff	?___llmod+2,printf@val+2
  5563  001534  C063  F1A9         	movff	?___llmod+3,printf@val+3
  5564  001538                     l3524:
  5565  001538  0101               	movlb	1	; () banked
  5566  00153A  07B9               	decf	printf@c& (0+255),f,b
  5567  00153C  29B9               	incf	printf@c& (0+255),w,b
  5568  00153E  B4D8               	btfsc	status,2,c
  5569  001540  D008               	goto	l3527
  5570  001542  D786               	goto	l3525
  5571  001544                     
  5572                           ; BSR set to: 1
  5573                           ;doprnt.c: 1236: (putch('0') );
  5574                           
  5575                           ; BSR set to: 1
  5576  001544  0E30               	movlw	48
  5577  001546  EC46  F062         	call	_putch
  5578                           
  5579                           ;doprnt.c: 1237: prec--;
  5580  00154A  0101               	movlb	1	; () banked
  5581  00154C  07B7               	decf	printf@prec& (0+255),f,b
  5582  00154E  A0D8               	btfss	status,0,c
  5583  001550  07B8               	decf	(printf@prec+1)& (0+255),f,b
  5584  001552                     l3527:
  5585                           
  5586                           ; BSR set to: 1
  5587                           
  5588                           ; BSR set to: 1
  5589  001552  51B7               	movf	printf@prec& (0+255),w,b
  5590  001554  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5591  001556  B4D8               	btfsc	status,2,c
  5592  001558  D09E               	goto	l3543
  5593  00155A  D7F4               	goto	l3528
  5594  00155C                     l3487:
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;doprnt.c: 1246: }
  5598                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5599                           
  5600                           ; BSR set to: 1
  5601  00155C  51B7               	movf	printf@prec& (0+255),w,b
  5602  00155E  11B8               	iorwf	(printf@prec+1)& (0+255),w,b
  5603  001560  A4D8               	btfss	status,2,c
  5604  001562  D008               	goto	l3530
  5605                           
  5606                           ; BSR set to: 1
  5607  001564  51A6               	movf	printf@val& (0+255),w,b
  5608  001566  11A7               	iorwf	(printf@val+1)& (0+255),w,b
  5609  001568  11A8               	iorwf	(printf@val+2)& (0+255),w,b
  5610  00156A  11A9               	iorwf	(printf@val+3)& (0+255),w,b
  5611  00156C  A4D8               	btfss	status,2,c
  5612  00156E  D002               	goto	l3530
  5613                           
  5614                           ; BSR set to: 1
  5615                           ;doprnt.c: 1291: prec++;
  5616  001570  4BB7               	infsnz	printf@prec& (0+255),f,b
  5617  001572  2BB8               	incf	(printf@prec+1)& (0+255),f,b
  5618  001574                     l3530:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;doprnt.c: 1339: if(c < prec)
  5622                           
  5623                           ; BSR set to: 1
  5624  001574  0E80               	movlw	128
  5625  001576  BFB9               	btfsc	printf@c& (0+255),7,b
  5626  001578  0E7F               	movlw	127
  5627  00157A  0100               	movlb	0	; () banked
  5628  00157C  6FF9               	movwf	??_printf& (0+255),b
  5629  00157E  0101               	movlb	1	; () banked
  5630  001580  51B7               	movf	printf@prec& (0+255),w,b
  5631  001582  5DB9               	subwf	printf@c& (0+255),w,b
  5632  001584  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5633  001586  0A80               	xorlw	128
  5634  001588  0100               	movlb	0	; () banked
  5635  00158A  59F9               	subwfb	??_printf& (0+255),w,b
  5636  00158C  B0D8               	btfsc	status,0,c
  5637  00158E  D003               	goto	l3531
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;doprnt.c: 1340: c = prec;
  5641  001590  C1B7  F1B9         	movff	printf@prec,printf@c
  5642  001594  D015               	goto	l3533
  5643  001596                     l3531:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;doprnt.c: 1341: else if(prec < c)
  5647                           
  5648                           ; BSR set to: 0
  5649  001596  0101               	movlb	1	; () banked
  5650  001598  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5651  00159A  0A80               	xorlw	128
  5652  00159C  0100               	movlb	0	; () banked
  5653  00159E  6FF9               	movwf	??_printf& (0+255),b
  5654  0015A0  0101               	movlb	1	; () banked
  5655  0015A2  51B9               	movf	printf@c& (0+255),w,b
  5656  0015A4  5DB7               	subwf	printf@prec& (0+255),w,b
  5657  0015A6  0E80               	movlw	128
  5658  0015A8  BFB9               	btfsc	printf@c& (0+255),7,b
  5659  0015AA  0E7F               	movlw	127
  5660  0015AC  0100               	movlb	0	; () banked
  5661  0015AE  59F9               	subwfb	??_printf& (0+255),w,b
  5662  0015B0  B0D8               	btfsc	status,0,c
  5663  0015B2  D006               	goto	l3533
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;doprnt.c: 1342: prec = c;
  5667  0015B4  0101               	movlb	1	; () banked
  5668  0015B6  51B9               	movf	printf@c& (0+255),w,b
  5669  0015B8  6FB7               	movwf	printf@prec& (0+255),b
  5670  0015BA  6BB8               	clrf	(printf@prec+1)& (0+255),b
  5671  0015BC  BFB7               	btfsc	printf@prec& (0+255),7,b
  5672  0015BE  07B8               	decf	(printf@prec+1)& (0+255),f,b
  5673  0015C0                     l3533:
  5674                           
  5675                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5676                           
  5677                           ; BSR set to: 1
  5678                           
  5679                           ; BSR set to: 1
  5680  0015C0  0101               	movlb	1	; () banked
  5681  0015C2  51B2               	movf	printf@width& (0+255),w,b
  5682  0015C4  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5683  0015C6  B4D8               	btfsc	status,2,c
  5684  0015C8  D011               	goto	l3534
  5685                           
  5686                           ; BSR set to: 1
  5687  0015CA  0E03               	movlw	3
  5688  0015CC  15AA               	andwf	printf@flag& (0+255),w,b
  5689  0015CE  0100               	movlb	0	; () banked
  5690  0015D0  6FF9               	movwf	??_printf& (0+255),b
  5691  0015D2  0E00               	movlw	0
  5692  0015D4  0101               	movlb	1	; () banked
  5693  0015D6  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5694  0015D8  0100               	movlb	0	; () banked
  5695  0015DA  6FFA               	movwf	(??_printf+1)& (0+255),b
  5696  0015DC  51F9               	movf	??_printf& (0+255),w,b
  5697  0015DE  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5698  0015E0  B4D8               	btfsc	status,2,c
  5699  0015E2  D004               	goto	l3534
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;doprnt.c: 1346: width--;
  5703  0015E4  0101               	movlb	1	; () banked
  5704  0015E6  07B2               	decf	printf@width& (0+255),f,b
  5705  0015E8  A0D8               	btfss	status,0,c
  5706  0015EA  07B3               	decf	(printf@width+1)& (0+255),f,b
  5707  0015EC                     l3534:
  5708                           
  5709                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5710                           
  5711                           ; BSR set to: 1
  5712  0015EC  0101               	movlb	1	; () banked
  5713  0015EE  ADAB               	btfss	(printf@flag+1)& (0+255),6,b
  5714  0015F0  D018               	goto	l3537
  5715                           
  5716                           ; BSR set to: 1
  5717                           ;doprnt.c: 1349: if(width > prec)
  5718  0015F2  51B2               	movf	printf@width& (0+255),w,b
  5719  0015F4  5DB7               	subwf	printf@prec& (0+255),w,b
  5720  0015F6  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5721  0015F8  0A80               	xorlw	128
  5722  0015FA  0100               	movlb	0	; () banked
  5723  0015FC  6FF9               	movwf	??_printf& (0+255),b
  5724  0015FE  0101               	movlb	1	; () banked
  5725  001600  51B3               	movf	(printf@width+1)& (0+255),w,b
  5726  001602  0A80               	xorlw	128
  5727  001604  0100               	movlb	0	; () banked
  5728  001606  59F9               	subwfb	??_printf& (0+255),w,b
  5729  001608  B0D8               	btfsc	status,0,c
  5730  00160A  D006               	goto	l3536
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;doprnt.c: 1350: width -= prec;
  5734  00160C  0101               	movlb	1	; () banked
  5735  00160E  51B7               	movf	printf@prec& (0+255),w,b
  5736  001610  5FB2               	subwf	printf@width& (0+255),f,b
  5737  001612  51B8               	movf	(printf@prec+1)& (0+255),w,b
  5738  001614  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5739  001616  D005               	goto	l3537
  5740  001618                     l3536:
  5741                           
  5742                           ;doprnt.c: 1351: else
  5743                           ;doprnt.c: 1352: width = 0;
  5744                           
  5745                           ; BSR set to: 1
  5746  001618  0E00               	movlw	0
  5747  00161A  0101               	movlb	1	; () banked
  5748  00161C  6FB3               	movwf	(printf@width+1)& (0+255),b
  5749  00161E  0E00               	movlw	0
  5750  001620  6FB2               	movwf	printf@width& (0+255),b
  5751  001622                     l3537:
  5752                           
  5753                           ; BSR set to: 1
  5754                           ;doprnt.c: 1353: }
  5755                           ;doprnt.c: 1381: if(width > c)
  5756                           
  5757                           ; BSR set to: 1
  5758                           
  5759                           ; BSR set to: 1
  5760  001622  0E80               	movlw	128
  5761  001624  BFB9               	btfsc	printf@c& (0+255),7,b
  5762  001626  0E7F               	movlw	127
  5763  001628  0100               	movlb	0	; () banked
  5764  00162A  6FF9               	movwf	??_printf& (0+255),b
  5765  00162C  0101               	movlb	1	; () banked
  5766  00162E  51B2               	movf	printf@width& (0+255),w,b
  5767  001630  5DB9               	subwf	printf@c& (0+255),w,b
  5768  001632  51B3               	movf	(printf@width+1)& (0+255),w,b
  5769  001634  0A80               	xorlw	128
  5770  001636  0100               	movlb	0	; () banked
  5771  001638  59F9               	subwfb	??_printf& (0+255),w,b
  5772  00163A  B0D8               	btfsc	status,0,c
  5773  00163C  D008               	goto	l3538
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;doprnt.c: 1382: width -= c;
  5777  00163E  0101               	movlb	1	; () banked
  5778  001640  51B9               	movf	printf@c& (0+255),w,b
  5779  001642  5FB2               	subwf	printf@width& (0+255),f,b
  5780  001644  0E00               	movlw	0
  5781  001646  BFB9               	btfsc	printf@c& (0+255),7,b
  5782  001648  0EFF               	movlw	255
  5783  00164A  5BB3               	subwfb	(printf@width+1)& (0+255),f,b
  5784  00164C  D005               	goto	l3539
  5785  00164E                     l3538:
  5786                           
  5787                           ;doprnt.c: 1383: else
  5788                           ;doprnt.c: 1384: width = 0;
  5789                           
  5790                           ; BSR set to: 1
  5791  00164E  0E00               	movlw	0
  5792  001650  0101               	movlb	1	; () banked
  5793  001652  6FB3               	movwf	(printf@width+1)& (0+255),b
  5794  001654  0E00               	movlw	0
  5795  001656  6FB2               	movwf	printf@width& (0+255),b
  5796  001658                     l3539:
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;doprnt.c: 1422: {
  5800                           ;doprnt.c: 1424: if(width
  5801                           ;doprnt.c: 1428: )
  5802                           
  5803                           ; BSR set to: 1
  5804  001658  51B2               	movf	printf@width& (0+255),w,b
  5805  00165A  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5806  00165C  B4D8               	btfsc	status,2,c
  5807  00165E  D00B               	goto	u26310
  5808  001660                     u26300:
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;doprnt.c: 1430: (putch(' ') );
  5812                           
  5813                           ; BSR set to: 1
  5814                           
  5815                           ;doprnt.c: 1429: do
  5816  001660  0E20               	movlw	32
  5817  001662  EC46  F062         	call	_putch
  5818                           
  5819                           ;doprnt.c: 1431: while(--width);
  5820  001666  0101               	movlb	1	; () banked
  5821  001668  07B2               	decf	printf@width& (0+255),f,b
  5822  00166A  A0D8               	btfss	status,0,c
  5823  00166C  07B3               	decf	(printf@width+1)& (0+255),f,b
  5824  00166E  51B2               	movf	printf@width& (0+255),w,b
  5825  001670  11B3               	iorwf	(printf@width+1)& (0+255),w,b
  5826  001672  A4D8               	btfss	status,2,c
  5827  001674  D7F5               	goto	u26300
  5828  001676                     u26310:
  5829                           
  5830                           ; BSR set to: 1
  5831                           ;doprnt.c: 1438: if(flag & 0x03)
  5832                           
  5833                           ; BSR set to: 1
  5834                           
  5835                           ; BSR set to: 1
  5836  001676  0E03               	movlw	3
  5837  001678  15AA               	andwf	printf@flag& (0+255),w,b
  5838  00167A  0100               	movlb	0	; () banked
  5839  00167C  6FF9               	movwf	??_printf& (0+255),b
  5840  00167E  0E00               	movlw	0
  5841  001680  0101               	movlb	1	; () banked
  5842  001682  15AB               	andwf	(printf@flag+1)& (0+255),w,b
  5843  001684  0100               	movlb	0	; () banked
  5844  001686  6FFA               	movwf	(??_printf+1)& (0+255),b
  5845  001688  51F9               	movf	??_printf& (0+255),w,b
  5846  00168A  11FA               	iorwf	(??_printf+1)& (0+255),w,b
  5847  00168C  B4D8               	btfsc	status,2,c
  5848  00168E  D003               	goto	l3543
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;doprnt.c: 1439: (putch('-') );
  5852  001690  0E2D               	movlw	45
  5853  001692  EC46  F062         	call	_putch
  5854  001696                     l3543:
  5855  001696  C18F  FFF6         	movff	printf@f,tblptrl
  5856  00169A  C190  FFF7         	movff	printf@f+1,tblptrh
  5857  00169E  0101               	movlb	1	; () banked
  5858  0016A0  4B8F               	infsnz	printf@f& (0+255),f,b
  5859  0016A2  2B90               	incf	(printf@f+1)& (0+255),f,b
  5860  0016A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5861  0016A4  6AF8               	clrf	tblptru,c
  5862  0016A6                     	endif
  5863  0016A6                     	if	0	;tblptru may be non-zero
  5864  0016A6                     	endif
  5865  0016A6  0008               	tblrd		*
  5866  0016A8  CFF5 F1B9          	movff	tablat,printf@c
  5867  0016AC  51B9               	movf	printf@c& (0+255),w,b
  5868  0016AE  B4D8               	btfsc	status,2,c
  5869  0016B0  0012               	return	
  5870  0016B2  EF9D  F006         	goto	l3461
  5871  0016B6                     __end_of_printf:
  5872                           	opt stack 0
  5873                           tblptru	equ	0xFF8
  5874                           tblptrh	equ	0xFF7
  5875                           tblptrl	equ	0xFF6
  5876                           tablat	equ	0xFF5
  5877                           prodh	equ	0xFF4
  5878                           prodl	equ	0xFF3
  5879                           intcon	equ	0xFF2
  5880                           postinc0	equ	0xFEE
  5881                           wreg	equ	0xFE8
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           fsr2h	equ	0xFDA
  5886                           fsr2l	equ	0xFD9
  5887                           status	equ	0xFD8
  5888                           
  5889 ;; *************** function _scale *****************
  5890 ;; Defined at:
  5891 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  scl             1    wreg     char 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  scl             1   41[BANK0 ] char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  3   35[BANK0 ] char 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5905 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;Total ram usage:        7 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    9
  5912 ;; This function calls:
  5913 ;;		___awdiv
  5914 ;;		___awmod
  5915 ;;		___ftmul
  5916 ;;		___wmul
  5917 ;; This function is called by:
  5918 ;;		_printf
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text2
  5923  002A0E                     __ptext2:
  5924                           	opt stack 0
  5925  002A0E                     _scale:
  5926                           	opt stack 20
  5927                           
  5928                           ; BSR set to: 1
  5929                           ;incstack = 0
  5930                           ;scale@scl stored from wreg
  5931  002A0E  0100               	movlb	0	; () banked
  5932  002A10  6F89               	movwf	scale@scl& (0+255),b
  5933                           
  5934                           ;doprnt.c: 428: if(scl < 0) {
  5935  002A12  0100               	movlb	0	; () banked
  5936  002A14  AF89               	btfss	scale@scl& (0+255),7,b
  5937  002A16  D11E               	goto	l3450
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;doprnt.c: 429: scl = -scl;
  5941  002A18  6D89               	negf	scale@scl& (0+255),b
  5942                           
  5943                           ;doprnt.c: 430: if(scl>=110)
  5944  002A1A  5189               	movf	scale@scl& (0+255),w,b
  5945  002A1C  0A80               	xorlw	128
  5946  002A1E  0F12               	addlw	-238
  5947  002A20  A0D8               	btfss	status,0,c
  5948  002A22  D0A0               	goto	l3451
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5952  002A24  0E00               	movlw	0
  5953  002A26  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5954  002A28  0E03               	movlw	3
  5955  002A2A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  5956  002A2C  0E00               	movlw	0
  5957  002A2E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5958  002A30  0E0A               	movlw	10
  5959  002A32  6F68               	movwf	___awdiv@divisor& (0+255),b
  5960  002A34  0E00               	movlw	0
  5961  002A36  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  5962  002A38  0E64               	movlw	100
  5963  002A3A  6F62               	movwf	___awmod@divisor& (0+255),b
  5964  002A3C  5189               	movf	scale@scl& (0+255),w,b
  5965  002A3E  6F60               	movwf	___awmod@dividend& (0+255),b
  5966  002A40  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  5967  002A42  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  5968  002A44  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  5969  002A46  EC62  F052         	call	___awmod	;wreg free
  5970  002A4A  C060  F066         	movff	?___awmod,___awdiv@dividend
  5971  002A4E  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  5972  002A52  EC28  F050         	call	___awdiv	;wreg free
  5973  002A56  0E09               	movlw	9
  5974  002A58  0100               	movlb	0	; () banked
  5975  002A5A  2566               	addwf	?___awdiv& (0+255),w,b
  5976  002A5C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  5977  002A5E  0E00               	movlw	0
  5978  002A60  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  5979  002A62  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5980  002A64  EC7E  F05E         	call	___wmul	;wreg free
  5981  002A68  0E8E               	movlw	low __npowers_
  5982  002A6A  0100               	movlb	0	; () banked
  5983  002A6C  256E               	addwf	?___wmul& (0+255),w,b
  5984  002A6E  6EF6               	movwf	tblptrl,c
  5985  002A70  0EFE               	movlw	high __npowers_
  5986  002A72  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  5987  002A74  6EF7               	movwf	tblptrh,c
  5988  002A76                     	if	1	;There are 3 active tblptr bytes
  5989  002A76  6AF8               	clrf	tblptru,c
  5990  002A78  0E00               	movlw	low (__mediumconst shr (0+16))
  5991  002A7A  22F8               	addwfc	tblptru,f,c
  5992  002A7C                     	endif
  5993  002A7C  0009               	tblrd		*+
  5994  002A7E  CFF5 F077          	movff	tablat,___ftmul@f2
  5995  002A82  0009               	tblrd		*+
  5996  002A84  CFF5 F078          	movff	tablat,___ftmul@f2+1
  5997  002A88  000A               	tblrd		*-
  5998  002A8A  CFF5 F079          	movff	tablat,___ftmul@f2+2
  5999  002A8E  0E00               	movlw	0
  6000  002A90  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6001  002A92  0E64               	movlw	100
  6002  002A94  6F68               	movwf	___awdiv@divisor& (0+255),b
  6003  002A96  5189               	movf	scale@scl& (0+255),w,b
  6004  002A98  6F66               	movwf	___awdiv@dividend& (0+255),b
  6005  002A9A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6006  002A9C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6007  002A9E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6008  002AA0  EC28  F050         	call	___awdiv	;wreg free
  6009  002AA4  0E12               	movlw	18
  6010  002AA6  0100               	movlb	0	; () banked
  6011  002AA8  2566               	addwf	?___awdiv& (0+255),w,b
  6012  002AAA  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6013  002AAC  0E00               	movlw	0
  6014  002AAE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6015  002AB0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6016  002AB2  0E00               	movlw	0
  6017  002AB4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6018  002AB6  0E03               	movlw	3
  6019  002AB8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6020  002ABA  EC7E  F05E         	call	___wmul	;wreg free
  6021  002ABE  0E8E               	movlw	low __npowers_
  6022  002AC0  0100               	movlb	0	; () banked
  6023  002AC2  256E               	addwf	?___wmul& (0+255),w,b
  6024  002AC4  6EF6               	movwf	tblptrl,c
  6025  002AC6  0EFE               	movlw	high __npowers_
  6026  002AC8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6027  002ACA  6EF7               	movwf	tblptrh,c
  6028  002ACC                     	if	1	;There are 3 active tblptr bytes
  6029  002ACC  6AF8               	clrf	tblptru,c
  6030  002ACE  0E00               	movlw	low (__mediumconst shr (0+16))
  6031  002AD0  22F8               	addwfc	tblptru,f,c
  6032  002AD2                     	endif
  6033  002AD2  0009               	tblrd		*+
  6034  002AD4  CFF5 F074          	movff	tablat,___ftmul@f1
  6035  002AD8  0009               	tblrd		*+
  6036  002ADA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6037  002ADE  000A               	tblrd		*-
  6038  002AE0  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6039  002AE4  EC54  F045         	call	___ftmul	;wreg free
  6040  002AE8  C074  F086         	movff	?___ftmul,_scale$7033
  6041  002AEC  C075  F087         	movff	?___ftmul+1,_scale$7033+1
  6042  002AF0  C076  F088         	movff	?___ftmul+2,_scale$7033+2
  6043                           
  6044                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6045  002AF4  C086  F074         	movff	_scale$7033,___ftmul@f1
  6046  002AF8  C087  F075         	movff	_scale$7033+1,___ftmul@f1+1
  6047  002AFC  C088  F076         	movff	_scale$7033+2,___ftmul@f1+2
  6048  002B00  0E00               	movlw	0
  6049  002B02  0100               	movlb	0	; () banked
  6050  002B04  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6051  002B06  0E03               	movlw	3
  6052  002B08  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6053  002B0A  0E00               	movlw	0
  6054  002B0C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6055  002B0E  0E0A               	movlw	10
  6056  002B10  6F62               	movwf	___awmod@divisor& (0+255),b
  6057  002B12  5189               	movf	scale@scl& (0+255),w,b
  6058  002B14  6F60               	movwf	___awmod@dividend& (0+255),b
  6059  002B16  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6060  002B18  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6061  002B1A  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6062  002B1C  EC62  F052         	call	___awmod	;wreg free
  6063  002B20  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6064  002B24  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6065  002B28  EC7E  F05E         	call	___wmul	;wreg free
  6066  002B2C  0E8E               	movlw	low __npowers_
  6067  002B2E  0100               	movlb	0	; () banked
  6068  002B30  256E               	addwf	?___wmul& (0+255),w,b
  6069  002B32  6EF6               	movwf	tblptrl,c
  6070  002B34  0EFE               	movlw	high __npowers_
  6071  002B36  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6072  002B38  6EF7               	movwf	tblptrh,c
  6073  002B3A                     	if	1	;There are 3 active tblptr bytes
  6074  002B3A  6AF8               	clrf	tblptru,c
  6075  002B3C  0E00               	movlw	low (__mediumconst shr (0+16))
  6076  002B3E  22F8               	addwfc	tblptru,f,c
  6077  002B40                     	endif
  6078  002B40  0009               	tblrd		*+
  6079  002B42  CFF5 F077          	movff	tablat,___ftmul@f2
  6080  002B46  0009               	tblrd		*+
  6081  002B48  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6082  002B4C  000A               	tblrd		*-
  6083  002B4E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6084  002B52  EC54  F045         	call	___ftmul	;wreg free
  6085  002B56  C074  F083         	movff	?___ftmul,?_scale
  6086  002B5A  C075  F084         	movff	?___ftmul+1,?_scale+1
  6087  002B5E  C076  F085         	movff	?___ftmul+2,?_scale+2
  6088  002B62  0012               	return	
  6089  002B64                     l3451:
  6090                           
  6091                           ;doprnt.c: 432: else if(scl > 10)
  6092  002B64  0100               	movlb	0	; () banked
  6093  002B66  5189               	movf	scale@scl& (0+255),w,b
  6094  002B68  0A80               	xorlw	128
  6095  002B6A  0F75               	addlw	-139
  6096  002B6C  A0D8               	btfss	status,0,c
  6097  002B6E  D05C               	goto	l3454
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6101  002B70  0E00               	movlw	0
  6102  002B72  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6103  002B74  0E0A               	movlw	10
  6104  002B76  6F68               	movwf	___awdiv@divisor& (0+255),b
  6105  002B78  5189               	movf	scale@scl& (0+255),w,b
  6106  002B7A  6F66               	movwf	___awdiv@dividend& (0+255),b
  6107  002B7C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6108  002B7E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6109  002B80  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6110  002B82  EC28  F050         	call	___awdiv	;wreg free
  6111  002B86  0E09               	movlw	9
  6112  002B88  0100               	movlb	0	; () banked
  6113  002B8A  2566               	addwf	?___awdiv& (0+255),w,b
  6114  002B8C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6115  002B8E  0E00               	movlw	0
  6116  002B90  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6117  002B92  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6118  002B94  0E00               	movlw	0
  6119  002B96  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6120  002B98  0E03               	movlw	3
  6121  002B9A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6122  002B9C  EC7E  F05E         	call	___wmul	;wreg free
  6123  002BA0  0E8E               	movlw	low __npowers_
  6124  002BA2  0100               	movlb	0	; () banked
  6125  002BA4  256E               	addwf	?___wmul& (0+255),w,b
  6126  002BA6  6EF6               	movwf	tblptrl,c
  6127  002BA8  0EFE               	movlw	high __npowers_
  6128  002BAA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6129  002BAC  6EF7               	movwf	tblptrh,c
  6130  002BAE                     	if	1	;There are 3 active tblptr bytes
  6131  002BAE  6AF8               	clrf	tblptru,c
  6132  002BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  6133  002BB2  22F8               	addwfc	tblptru,f,c
  6134  002BB4                     	endif
  6135  002BB4  0009               	tblrd		*+
  6136  002BB6  CFF5 F074          	movff	tablat,___ftmul@f1
  6137  002BBA  0009               	tblrd		*+
  6138  002BBC  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6139  002BC0  000A               	tblrd		*-
  6140  002BC2  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6141  002BC6  0E00               	movlw	0
  6142  002BC8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6143  002BCA  0E03               	movlw	3
  6144  002BCC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6145  002BCE  0E00               	movlw	0
  6146  002BD0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6147  002BD2  0E0A               	movlw	10
  6148  002BD4  6F62               	movwf	___awmod@divisor& (0+255),b
  6149  002BD6  5189               	movf	scale@scl& (0+255),w,b
  6150  002BD8  6F60               	movwf	___awmod@dividend& (0+255),b
  6151  002BDA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6152  002BDC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6153  002BDE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6154  002BE0  EC62  F052         	call	___awmod	;wreg free
  6155  002BE4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6156  002BE8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6157  002BEC  EC7E  F05E         	call	___wmul	;wreg free
  6158  002BF0  0E8E               	movlw	low __npowers_
  6159  002BF2  0100               	movlb	0	; () banked
  6160  002BF4  256E               	addwf	?___wmul& (0+255),w,b
  6161  002BF6  6EF6               	movwf	tblptrl,c
  6162  002BF8  0EFE               	movlw	high __npowers_
  6163  002BFA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6164  002BFC  6EF7               	movwf	tblptrh,c
  6165  002BFE                     	if	1	;There are 3 active tblptr bytes
  6166  002BFE  6AF8               	clrf	tblptru,c
  6167  002C00  0E00               	movlw	low (__mediumconst shr (0+16))
  6168  002C02  22F8               	addwfc	tblptru,f,c
  6169  002C04                     	endif
  6170  002C04  0009               	tblrd		*+
  6171  002C06  CFF5 F077          	movff	tablat,___ftmul@f2
  6172  002C0A  0009               	tblrd		*+
  6173  002C0C  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6174  002C10  000A               	tblrd		*-
  6175  002C12  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6176  002C16  EC54  F045         	call	___ftmul	;wreg free
  6177  002C1A  C074  F083         	movff	?___ftmul,?_scale
  6178  002C1E  C075  F084         	movff	?___ftmul+1,?_scale+1
  6179  002C22  C076  F085         	movff	?___ftmul+2,?_scale+2
  6180  002C26  0012               	return	
  6181  002C28                     l3454:
  6182                           
  6183                           ;doprnt.c: 434: return _npowers_[scl];
  6184  002C28  0100               	movlb	0	; () banked
  6185  002C2A  5189               	movf	scale@scl& (0+255),w,b
  6186  002C2C  0D03               	mullw	3
  6187  002C2E  0E8E               	movlw	low __npowers_
  6188  002C30  24F3               	addwf	prodl,w,c
  6189  002C32  6EF6               	movwf	tblptrl,c
  6190  002C34  0EFE               	movlw	high __npowers_
  6191  002C36  20F4               	addwfc	prodh,w,c
  6192  002C38  6EF7               	movwf	tblptrh,c
  6193  002C3A                     	if	1	;There are 3 active tblptr bytes
  6194  002C3A  6AF8               	clrf	tblptru,c
  6195  002C3C  0E00               	movlw	low (__mediumconst shr (0+16))
  6196  002C3E  22F8               	addwfc	tblptru,f,c
  6197  002C40                     	endif
  6198  002C40  0009               	tblrd		*+
  6199  002C42  CFF5 F083          	movff	tablat,?_scale
  6200  002C46  0009               	tblrd		*+
  6201  002C48  CFF5 F084          	movff	tablat,?_scale+1
  6202  002C4C  000A               	tblrd		*-
  6203  002C4E  CFF5 F085          	movff	tablat,?_scale+2
  6204                           
  6205                           ; BSR set to: 0
  6206  002C52  0012               	return	
  6207  002C54                     l3450:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;doprnt.c: 435: }
  6211                           ;doprnt.c: 436: if(scl>=110)
  6212                           
  6213                           ; BSR set to: 0
  6214  002C54  5189               	movf	scale@scl& (0+255),w,b
  6215  002C56  0A80               	xorlw	128
  6216  002C58  0F12               	addlw	-238
  6217  002C5A  A0D8               	btfss	status,0,c
  6218  002C5C  D0A0               	goto	l3455
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6222  002C5E  0E00               	movlw	0
  6223  002C60  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6224  002C62  0E03               	movlw	3
  6225  002C64  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6226  002C66  0E00               	movlw	0
  6227  002C68  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6228  002C6A  0E0A               	movlw	10
  6229  002C6C  6F68               	movwf	___awdiv@divisor& (0+255),b
  6230  002C6E  0E00               	movlw	0
  6231  002C70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6232  002C72  0E64               	movlw	100
  6233  002C74  6F62               	movwf	___awmod@divisor& (0+255),b
  6234  002C76  5189               	movf	scale@scl& (0+255),w,b
  6235  002C78  6F60               	movwf	___awmod@dividend& (0+255),b
  6236  002C7A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6237  002C7C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6238  002C7E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6239  002C80  EC62  F052         	call	___awmod	;wreg free
  6240  002C84  C060  F066         	movff	?___awmod,___awdiv@dividend
  6241  002C88  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6242  002C8C  EC28  F050         	call	___awdiv	;wreg free
  6243  002C90  0E09               	movlw	9
  6244  002C92  0100               	movlb	0	; () banked
  6245  002C94  2566               	addwf	?___awdiv& (0+255),w,b
  6246  002C96  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6247  002C98  0E00               	movlw	0
  6248  002C9A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6249  002C9C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6250  002C9E  EC7E  F05E         	call	___wmul	;wreg free
  6251  002CA2  0E67               	movlw	low __powers_
  6252  002CA4  0100               	movlb	0	; () banked
  6253  002CA6  256E               	addwf	?___wmul& (0+255),w,b
  6254  002CA8  6EF6               	movwf	tblptrl,c
  6255  002CAA  0EFE               	movlw	high __powers_
  6256  002CAC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6257  002CAE  6EF7               	movwf	tblptrh,c
  6258  002CB0                     	if	1	;There are 3 active tblptr bytes
  6259  002CB0  6AF8               	clrf	tblptru,c
  6260  002CB2  0E00               	movlw	low (__mediumconst shr (0+16))
  6261  002CB4  22F8               	addwfc	tblptru,f,c
  6262  002CB6                     	endif
  6263  002CB6  0009               	tblrd		*+
  6264  002CB8  CFF5 F077          	movff	tablat,___ftmul@f2
  6265  002CBC  0009               	tblrd		*+
  6266  002CBE  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6267  002CC2  000A               	tblrd		*-
  6268  002CC4  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6269  002CC8  0E00               	movlw	0
  6270  002CCA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6271  002CCC  0E64               	movlw	100
  6272  002CCE  6F68               	movwf	___awdiv@divisor& (0+255),b
  6273  002CD0  5189               	movf	scale@scl& (0+255),w,b
  6274  002CD2  6F66               	movwf	___awdiv@dividend& (0+255),b
  6275  002CD4  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6276  002CD6  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6277  002CD8  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6278  002CDA  EC28  F050         	call	___awdiv	;wreg free
  6279  002CDE  0E12               	movlw	18
  6280  002CE0  0100               	movlb	0	; () banked
  6281  002CE2  2566               	addwf	?___awdiv& (0+255),w,b
  6282  002CE4  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6283  002CE6  0E00               	movlw	0
  6284  002CE8  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6285  002CEA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6286  002CEC  0E00               	movlw	0
  6287  002CEE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6288  002CF0  0E03               	movlw	3
  6289  002CF2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6290  002CF4  EC7E  F05E         	call	___wmul	;wreg free
  6291  002CF8  0E67               	movlw	low __powers_
  6292  002CFA  0100               	movlb	0	; () banked
  6293  002CFC  256E               	addwf	?___wmul& (0+255),w,b
  6294  002CFE  6EF6               	movwf	tblptrl,c
  6295  002D00  0EFE               	movlw	high __powers_
  6296  002D02  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6297  002D04  6EF7               	movwf	tblptrh,c
  6298  002D06                     	if	1	;There are 3 active tblptr bytes
  6299  002D06  6AF8               	clrf	tblptru,c
  6300  002D08  0E00               	movlw	low (__mediumconst shr (0+16))
  6301  002D0A  22F8               	addwfc	tblptru,f,c
  6302  002D0C                     	endif
  6303  002D0C  0009               	tblrd		*+
  6304  002D0E  CFF5 F074          	movff	tablat,___ftmul@f1
  6305  002D12  0009               	tblrd		*+
  6306  002D14  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6307  002D18  000A               	tblrd		*-
  6308  002D1A  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6309  002D1E  EC54  F045         	call	___ftmul	;wreg free
  6310  002D22  C074  F086         	movff	?___ftmul,_scale$7033
  6311  002D26  C075  F087         	movff	?___ftmul+1,_scale$7033+1
  6312  002D2A  C076  F088         	movff	?___ftmul+2,_scale$7033+2
  6313                           
  6314                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6315  002D2E  C086  F074         	movff	_scale$7033,___ftmul@f1
  6316  002D32  C087  F075         	movff	_scale$7033+1,___ftmul@f1+1
  6317  002D36  C088  F076         	movff	_scale$7033+2,___ftmul@f1+2
  6318  002D3A  0E00               	movlw	0
  6319  002D3C  0100               	movlb	0	; () banked
  6320  002D3E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6321  002D40  0E03               	movlw	3
  6322  002D42  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6323  002D44  0E00               	movlw	0
  6324  002D46  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6325  002D48  0E0A               	movlw	10
  6326  002D4A  6F62               	movwf	___awmod@divisor& (0+255),b
  6327  002D4C  5189               	movf	scale@scl& (0+255),w,b
  6328  002D4E  6F60               	movwf	___awmod@dividend& (0+255),b
  6329  002D50  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6330  002D52  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6331  002D54  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6332  002D56  EC62  F052         	call	___awmod	;wreg free
  6333  002D5A  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6334  002D5E  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6335  002D62  EC7E  F05E         	call	___wmul	;wreg free
  6336  002D66  0E67               	movlw	low __powers_
  6337  002D68  0100               	movlb	0	; () banked
  6338  002D6A  256E               	addwf	?___wmul& (0+255),w,b
  6339  002D6C  6EF6               	movwf	tblptrl,c
  6340  002D6E  0EFE               	movlw	high __powers_
  6341  002D70  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6342  002D72  6EF7               	movwf	tblptrh,c
  6343  002D74                     	if	1	;There are 3 active tblptr bytes
  6344  002D74  6AF8               	clrf	tblptru,c
  6345  002D76  0E00               	movlw	low (__mediumconst shr (0+16))
  6346  002D78  22F8               	addwfc	tblptru,f,c
  6347  002D7A                     	endif
  6348  002D7A  0009               	tblrd		*+
  6349  002D7C  CFF5 F077          	movff	tablat,___ftmul@f2
  6350  002D80  0009               	tblrd		*+
  6351  002D82  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6352  002D86  000A               	tblrd		*-
  6353  002D88  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6354  002D8C  EC54  F045         	call	___ftmul	;wreg free
  6355  002D90  C074  F083         	movff	?___ftmul,?_scale
  6356  002D94  C075  F084         	movff	?___ftmul+1,?_scale+1
  6357  002D98  C076  F085         	movff	?___ftmul+2,?_scale+2
  6358  002D9C  0012               	return	
  6359  002D9E                     l3455:
  6360                           
  6361                           ;doprnt.c: 438: else if(scl > 10)
  6362  002D9E  0100               	movlb	0	; () banked
  6363  002DA0  5189               	movf	scale@scl& (0+255),w,b
  6364  002DA2  0A80               	xorlw	128
  6365  002DA4  0F75               	addlw	-139
  6366  002DA6  A0D8               	btfss	status,0,c
  6367  002DA8  D05C               	goto	l3457
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6371  002DAA  0E00               	movlw	0
  6372  002DAC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6373  002DAE  0E0A               	movlw	10
  6374  002DB0  6F68               	movwf	___awdiv@divisor& (0+255),b
  6375  002DB2  5189               	movf	scale@scl& (0+255),w,b
  6376  002DB4  6F66               	movwf	___awdiv@dividend& (0+255),b
  6377  002DB6  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6378  002DB8  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6379  002DBA  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6380  002DBC  EC28  F050         	call	___awdiv	;wreg free
  6381  002DC0  0E09               	movlw	9
  6382  002DC2  0100               	movlb	0	; () banked
  6383  002DC4  2566               	addwf	?___awdiv& (0+255),w,b
  6384  002DC6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6385  002DC8  0E00               	movlw	0
  6386  002DCA  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6387  002DCC  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6388  002DCE  0E00               	movlw	0
  6389  002DD0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6390  002DD2  0E03               	movlw	3
  6391  002DD4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6392  002DD6  EC7E  F05E         	call	___wmul	;wreg free
  6393  002DDA  0E67               	movlw	low __powers_
  6394  002DDC  0100               	movlb	0	; () banked
  6395  002DDE  256E               	addwf	?___wmul& (0+255),w,b
  6396  002DE0  6EF6               	movwf	tblptrl,c
  6397  002DE2  0EFE               	movlw	high __powers_
  6398  002DE4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6399  002DE6  6EF7               	movwf	tblptrh,c
  6400  002DE8                     	if	1	;There are 3 active tblptr bytes
  6401  002DE8  6AF8               	clrf	tblptru,c
  6402  002DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  6403  002DEC  22F8               	addwfc	tblptru,f,c
  6404  002DEE                     	endif
  6405  002DEE  0009               	tblrd		*+
  6406  002DF0  CFF5 F074          	movff	tablat,___ftmul@f1
  6407  002DF4  0009               	tblrd		*+
  6408  002DF6  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6409  002DFA  000A               	tblrd		*-
  6410  002DFC  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6411  002E00  0E00               	movlw	0
  6412  002E02  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6413  002E04  0E03               	movlw	3
  6414  002E06  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6415  002E08  0E00               	movlw	0
  6416  002E0A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6417  002E0C  0E0A               	movlw	10
  6418  002E0E  6F62               	movwf	___awmod@divisor& (0+255),b
  6419  002E10  5189               	movf	scale@scl& (0+255),w,b
  6420  002E12  6F60               	movwf	___awmod@dividend& (0+255),b
  6421  002E14  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6422  002E16  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6423  002E18  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6424  002E1A  EC62  F052         	call	___awmod	;wreg free
  6425  002E1E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6426  002E22  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6427  002E26  EC7E  F05E         	call	___wmul	;wreg free
  6428  002E2A  0E67               	movlw	low __powers_
  6429  002E2C  0100               	movlb	0	; () banked
  6430  002E2E  256E               	addwf	?___wmul& (0+255),w,b
  6431  002E30  6EF6               	movwf	tblptrl,c
  6432  002E32  0EFE               	movlw	high __powers_
  6433  002E34  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6434  002E36  6EF7               	movwf	tblptrh,c
  6435  002E38                     	if	1	;There are 3 active tblptr bytes
  6436  002E38  6AF8               	clrf	tblptru,c
  6437  002E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  6438  002E3C  22F8               	addwfc	tblptru,f,c
  6439  002E3E                     	endif
  6440  002E3E  0009               	tblrd		*+
  6441  002E40  CFF5 F077          	movff	tablat,___ftmul@f2
  6442  002E44  0009               	tblrd		*+
  6443  002E46  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6444  002E4A  000A               	tblrd		*-
  6445  002E4C  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6446  002E50  EC54  F045         	call	___ftmul	;wreg free
  6447  002E54  C074  F083         	movff	?___ftmul,?_scale
  6448  002E58  C075  F084         	movff	?___ftmul+1,?_scale+1
  6449  002E5C  C076  F085         	movff	?___ftmul+2,?_scale+2
  6450  002E60  0012               	return	
  6451  002E62                     l3457:
  6452                           
  6453                           ;doprnt.c: 440: return _powers_[scl];
  6454  002E62  0100               	movlb	0	; () banked
  6455  002E64  5189               	movf	scale@scl& (0+255),w,b
  6456  002E66  0D03               	mullw	3
  6457  002E68  0E67               	movlw	low __powers_
  6458  002E6A  24F3               	addwf	prodl,w,c
  6459  002E6C  6EF6               	movwf	tblptrl,c
  6460  002E6E  0EFE               	movlw	high __powers_
  6461  002E70  20F4               	addwfc	prodh,w,c
  6462  002E72  6EF7               	movwf	tblptrh,c
  6463  002E74                     	if	1	;There are 3 active tblptr bytes
  6464  002E74  6AF8               	clrf	tblptru,c
  6465  002E76  0E00               	movlw	low (__mediumconst shr (0+16))
  6466  002E78  22F8               	addwfc	tblptru,f,c
  6467  002E7A                     	endif
  6468  002E7A  0009               	tblrd		*+
  6469  002E7C  CFF5 F083          	movff	tablat,?_scale
  6470  002E80  0009               	tblrd		*+
  6471  002E82  CFF5 F084          	movff	tablat,?_scale+1
  6472  002E86  000A               	tblrd		*-
  6473  002E88  CFF5 F085          	movff	tablat,?_scale+2
  6474  002E8C  0012               	return	
  6475  002E8E                     __end_of_scale:
  6476                           	opt stack 0
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           wreg	equ	0xFE8
  6486                           indf2	equ	0xFDF
  6487                           postinc2	equ	0xFDE
  6488                           postdec2	equ	0xFDD
  6489                           fsr2h	equ	0xFDA
  6490                           fsr2l	equ	0xFD9
  6491                           status	equ	0xFD8
  6492                           
  6493 ;; *************** function _putch *****************
  6494 ;; Defined at:
  6495 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  txData          1    wreg     unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;  txData          1    1[BANK0 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;Total ram usage:        1 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    8
  6516 ;; This function calls:
  6517 ;;		_EUSART1_Write
  6518 ;; This function is called by:
  6519 ;;		_printf
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text3
  6524  00C48C                     __ptext3:
  6525                           	opt stack 0
  6526  00C48C                     _putch:
  6527                           	opt stack 21
  6528                           
  6529                           ;incstack = 0
  6530                           ;putch@txData stored from wreg
  6531  00C48C  0100               	movlb	0	; () banked
  6532  00C48E  6F61               	movwf	putch@txData& (0+255),b
  6533                           
  6534                           ;eusart1.c: 148: EUSART1_Write(txData);
  6535  00C490  0100               	movlb	0	; () banked
  6536  00C492  5161               	movf	putch@txData& (0+255),w,b
  6537  00C494  EC4D  F062         	call	_EUSART1_Write
  6538  00C498  0012               	return		;funcret
  6539  00C49A                     __end_of_putch:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           wreg	equ	0xFE8
  6550                           indf2	equ	0xFDF
  6551                           postinc2	equ	0xFDE
  6552                           postdec2	equ	0xFDD
  6553                           fsr2h	equ	0xFDA
  6554                           fsr2l	equ	0xFD9
  6555                           status	equ	0xFD8
  6556                           
  6557 ;; *************** function _EUSART1_Write *****************
  6558 ;; Defined at:
  6559 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  txData          1    wreg     unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  txData          1    0[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        1 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    7
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_putch
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text4
  6588  00C49A                     __ptext4:
  6589                           	opt stack 0
  6590  00C49A                     _EUSART1_Write:
  6591                           	opt stack 21
  6592                           
  6593                           ;incstack = 0
  6594                           ;EUSART1_Write@txData stored from wreg
  6595  00C49A  0100               	movlb	0	; () banked
  6596  00C49C  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  6597  00C49E                     
  6598                           ;eusart1.c: 135: {
  6599                           
  6600                           ;eusart1.c: 134: while(0 == PIR1bits.TX1IF)
  6601  00C49E  A89E               	btfss	3998,4,c	;volatile
  6602  00C4A0  D7FE               	goto	l15014
  6603                           
  6604                           ;eusart1.c: 136: }
  6605                           ;eusart1.c: 138: TXREG1 = txData;
  6606  00C4A2  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6607  00C4A6  0012               	return		;funcret
  6608  00C4A8                     __end_of_EUSART1_Write:
  6609                           	opt stack 0
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           postinc0	equ	0xFEE
  6618                           wreg	equ	0xFE8
  6619                           indf2	equ	0xFDF
  6620                           postinc2	equ	0xFDE
  6621                           postdec2	equ	0xFDD
  6622                           fsr2h	equ	0xFDA
  6623                           fsr2l	equ	0xFD9
  6624                           status	equ	0xFD8
  6625                           
  6626 ;; *************** function _isdigit *****************
  6627 ;; Defined at:
  6628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  c               1    wreg     unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  c               1    2[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;		None               void
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;Total ram usage:        3 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    7
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_printf
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text5
  6657  00BE0A                     __ptext5:
  6658                           	opt stack 0
  6659  00BE0A                     _isdigit:
  6660                           	opt stack 22
  6661                           
  6662                           ;incstack = 0
  6663                           ;isdigit@c stored from wreg
  6664  00BE0A  0100               	movlb	0	; () banked
  6665  00BE0C  6F62               	movwf	isdigit@c& (0+255),b
  6666  00BE0E  0E00               	movlw	0
  6667  00BE10  0100               	movlb	0	; () banked
  6668  00BE12  6F61               	movwf	_isdigit$5835& (0+255),b
  6669                           
  6670                           ; BSR set to: 0
  6671  00BE14  0E3A               	movlw	58
  6672  00BE16  6162               	cpfslt	isdigit@c& (0+255),b
  6673  00BE18  D005               	goto	l3909
  6674                           
  6675                           ; BSR set to: 0
  6676  00BE1A  0E2F               	movlw	47
  6677  00BE1C  6562               	cpfsgt	isdigit@c& (0+255),b
  6678  00BE1E  D002               	goto	l3909
  6679                           
  6680                           ; BSR set to: 0
  6681  00BE20  0E01               	movlw	1
  6682  00BE22  6F61               	movwf	_isdigit$5835& (0+255),b
  6683  00BE24                     l3909:
  6684                           
  6685                           ; BSR set to: 0
  6686                           
  6687                           ; BSR set to: 0
  6688  00BE24  C061  F060         	movff	_isdigit$5835,??_isdigit
  6689  00BE28  3160               	rrcf	??_isdigit& (0+255),w,b
  6690  00BE2A  0012               	return	
  6691  00BE2C                     __end_of_isdigit:
  6692                           	opt stack 0
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           postinc0	equ	0xFEE
  6701                           wreg	equ	0xFE8
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           postdec2	equ	0xFDD
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function _fround *****************
  6710 ;; Defined at:
  6711 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  prec            1    wreg     unsigned char 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  prec            1   44[BANK0 ] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  3   35[BANK0 ] unsigned char 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6725 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;Total ram usage:       10 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    9
  6732 ;; This function calls:
  6733 ;;		___awdiv
  6734 ;;		___awmod
  6735 ;;		___ftmul
  6736 ;;		___wmul
  6737 ;; This function is called by:
  6738 ;;		_printf
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text6
  6743  0056C0                     __ptext6:
  6744                           	opt stack 0
  6745  0056C0                     _fround:
  6746                           	opt stack 20
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;incstack = 0
  6750                           ;fround@prec stored from wreg
  6751  0056C0  0100               	movlb	0	; () banked
  6752  0056C2  6F8C               	movwf	fround@prec& (0+255),b
  6753                           
  6754                           ;doprnt.c: 413: if(prec>=110)
  6755  0056C4  0E6D               	movlw	109
  6756  0056C6  0100               	movlb	0	; () banked
  6757  0056C8  658C               	cpfsgt	fround@prec& (0+255),b
  6758  0056CA  D0AF               	goto	l3444
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6762  0056CC  0E00               	movlw	0
  6763  0056CE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6764  0056D0  0E03               	movlw	3
  6765  0056D2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6766  0056D4  0E00               	movlw	0
  6767  0056D6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6768  0056D8  0E0A               	movlw	10
  6769  0056DA  6F68               	movwf	___awdiv@divisor& (0+255),b
  6770  0056DC  0E00               	movlw	0
  6771  0056DE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6772  0056E0  0E64               	movlw	100
  6773  0056E2  6F62               	movwf	___awmod@divisor& (0+255),b
  6774  0056E4  C08C  F060         	movff	fround@prec,___awmod@dividend
  6775  0056E8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6776  0056EA  EC62  F052         	call	___awmod	;wreg free
  6777  0056EE  C060  F066         	movff	?___awmod,___awdiv@dividend
  6778  0056F2  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6779  0056F6  EC28  F050         	call	___awdiv	;wreg free
  6780  0056FA  0E09               	movlw	9
  6781  0056FC  0100               	movlb	0	; () banked
  6782  0056FE  2566               	addwf	?___awdiv& (0+255),w,b
  6783  005700  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6784  005702  0E00               	movlw	0
  6785  005704  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6786  005706  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6787  005708  EC7E  F05E         	call	___wmul	;wreg free
  6788  00570C  0E8E               	movlw	low __npowers_
  6789  00570E  0100               	movlb	0	; () banked
  6790  005710  256E               	addwf	?___wmul& (0+255),w,b
  6791  005712  6EF6               	movwf	tblptrl,c
  6792  005714  0EFE               	movlw	high __npowers_
  6793  005716  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6794  005718  6EF7               	movwf	tblptrh,c
  6795  00571A                     	if	1	;There are 3 active tblptr bytes
  6796  00571A  6AF8               	clrf	tblptru,c
  6797  00571C  0E00               	movlw	low (__mediumconst shr (0+16))
  6798  00571E  22F8               	addwfc	tblptru,f,c
  6799  005720                     	endif
  6800  005720  0009               	tblrd		*+
  6801  005722  CFF5 F077          	movff	tablat,___ftmul@f2
  6802  005726  0009               	tblrd		*+
  6803  005728  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6804  00572C  000A               	tblrd		*-
  6805  00572E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6806  005732  0E00               	movlw	0
  6807  005734  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6808  005736  0E64               	movlw	100
  6809  005738  6F68               	movwf	___awdiv@divisor& (0+255),b
  6810  00573A  C08C  F066         	movff	fround@prec,___awdiv@dividend
  6811  00573E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6812  005740  EC28  F050         	call	___awdiv	;wreg free
  6813  005744  0E12               	movlw	18
  6814  005746  0100               	movlb	0	; () banked
  6815  005748  2566               	addwf	?___awdiv& (0+255),w,b
  6816  00574A  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6817  00574C  0E00               	movlw	0
  6818  00574E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6819  005750  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6820  005752  0E00               	movlw	0
  6821  005754  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6822  005756  0E03               	movlw	3
  6823  005758  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6824  00575A  EC7E  F05E         	call	___wmul	;wreg free
  6825  00575E  0E8E               	movlw	low __npowers_
  6826  005760  0100               	movlb	0	; () banked
  6827  005762  256E               	addwf	?___wmul& (0+255),w,b
  6828  005764  6EF6               	movwf	tblptrl,c
  6829  005766  0EFE               	movlw	high __npowers_
  6830  005768  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6831  00576A  6EF7               	movwf	tblptrh,c
  6832  00576C                     	if	1	;There are 3 active tblptr bytes
  6833  00576C  6AF8               	clrf	tblptru,c
  6834  00576E  0E00               	movlw	low (__mediumconst shr (0+16))
  6835  005770  22F8               	addwfc	tblptru,f,c
  6836  005772                     	endif
  6837  005772  0009               	tblrd		*+
  6838  005774  CFF5 F074          	movff	tablat,___ftmul@f1
  6839  005778  0009               	tblrd		*+
  6840  00577A  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6841  00577E  000A               	tblrd		*-
  6842  005780  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6843  005784  EC54  F045         	call	___ftmul	;wreg free
  6844  005788  C074  F089         	movff	?___ftmul,_fround$7031
  6845  00578C  C075  F08A         	movff	?___ftmul+1,_fround$7031+1
  6846  005790  C076  F08B         	movff	?___ftmul+2,_fround$7031+2
  6847                           
  6848                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6849  005794  0E00               	movlw	0
  6850  005796  0100               	movlb	0	; () banked
  6851  005798  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6852  00579A  0E03               	movlw	3
  6853  00579C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6854  00579E  0E00               	movlw	0
  6855  0057A0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6856  0057A2  0E0A               	movlw	10
  6857  0057A4  6F62               	movwf	___awmod@divisor& (0+255),b
  6858  0057A6  C08C  F060         	movff	fround@prec,___awmod@dividend
  6859  0057AA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6860  0057AC  EC62  F052         	call	___awmod	;wreg free
  6861  0057B0  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6862  0057B4  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6863  0057B8  EC7E  F05E         	call	___wmul	;wreg free
  6864  0057BC  0E8E               	movlw	low __npowers_
  6865  0057BE  0100               	movlb	0	; () banked
  6866  0057C0  256E               	addwf	?___wmul& (0+255),w,b
  6867  0057C2  6EF6               	movwf	tblptrl,c
  6868  0057C4  0EFE               	movlw	high __npowers_
  6869  0057C6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6870  0057C8  6EF7               	movwf	tblptrh,c
  6871  0057CA                     	if	1	;There are 3 active tblptr bytes
  6872  0057CA  6AF8               	clrf	tblptru,c
  6873  0057CC  0E00               	movlw	low (__mediumconst shr (0+16))
  6874  0057CE  22F8               	addwfc	tblptru,f,c
  6875  0057D0                     	endif
  6876  0057D0  0009               	tblrd		*+
  6877  0057D2  CFF5 F077          	movff	tablat,___ftmul@f2
  6878  0057D6  0009               	tblrd		*+
  6879  0057D8  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6880  0057DC  000A               	tblrd		*-
  6881  0057DE  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6882  0057E2  C089  F074         	movff	_fround$7031,___ftmul@f1
  6883  0057E6  C08A  F075         	movff	_fround$7031+1,___ftmul@f1+1
  6884  0057EA  C08B  F076         	movff	_fround$7031+2,___ftmul@f1+2
  6885  0057EE  EC54  F045         	call	___ftmul	;wreg free
  6886  0057F2  C074  F086         	movff	?___ftmul,_fround$7032
  6887  0057F6  C075  F087         	movff	?___ftmul+1,_fround$7032+1
  6888  0057FA  C076  F088         	movff	?___ftmul+2,_fround$7032+2
  6889                           
  6890                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6891  0057FE  C086  F074         	movff	_fround$7032,___ftmul@f1
  6892  005802  C087  F075         	movff	_fround$7032+1,___ftmul@f1+1
  6893  005806  C088  F076         	movff	_fround$7032+2,___ftmul@f1+2
  6894  00580A  0E00               	movlw	0
  6895  00580C  0100               	movlb	0	; () banked
  6896  00580E  6F77               	movwf	___ftmul@f2& (0+255),b
  6897  005810  0E00               	movlw	0
  6898  005812  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  6899  005814  0E3F               	movlw	63
  6900  005816  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  6901  005818  EC54  F045         	call	___ftmul	;wreg free
  6902  00581C  C074  F083         	movff	?___ftmul,?_fround
  6903  005820  C075  F084         	movff	?___ftmul+1,?_fround+1
  6904  005824  C076  F085         	movff	?___ftmul+2,?_fround+2
  6905  005828  0012               	return	
  6906  00582A                     l3444:
  6907                           
  6908                           ;doprnt.c: 415: else if(prec > 10)
  6909  00582A  0E0A               	movlw	10
  6910  00582C  0100               	movlb	0	; () banked
  6911  00582E  658C               	cpfsgt	fround@prec& (0+255),b
  6912  005830  D06D               	goto	l3447
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6916  005832  0E00               	movlw	0
  6917  005834  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6918  005836  0E03               	movlw	3
  6919  005838  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6920  00583A  0E00               	movlw	0
  6921  00583C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6922  00583E  0E0A               	movlw	10
  6923  005840  6F62               	movwf	___awmod@divisor& (0+255),b
  6924  005842  C08C  F060         	movff	fround@prec,___awmod@dividend
  6925  005846  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6926  005848  EC62  F052         	call	___awmod	;wreg free
  6927  00584C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6928  005850  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6929  005854  EC7E  F05E         	call	___wmul	;wreg free
  6930  005858  0E8E               	movlw	low __npowers_
  6931  00585A  0100               	movlb	0	; () banked
  6932  00585C  256E               	addwf	?___wmul& (0+255),w,b
  6933  00585E  6EF6               	movwf	tblptrl,c
  6934  005860  0EFE               	movlw	high __npowers_
  6935  005862  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6936  005864  6EF7               	movwf	tblptrh,c
  6937  005866                     	if	1	;There are 3 active tblptr bytes
  6938  005866  6AF8               	clrf	tblptru,c
  6939  005868  0E00               	movlw	low (__mediumconst shr (0+16))
  6940  00586A  22F8               	addwfc	tblptru,f,c
  6941  00586C                     	endif
  6942  00586C  0009               	tblrd		*+
  6943  00586E  CFF5 F077          	movff	tablat,___ftmul@f2
  6944  005872  0009               	tblrd		*+
  6945  005874  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6946  005878  000A               	tblrd		*-
  6947  00587A  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6948  00587E  0E00               	movlw	0
  6949  005880  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6950  005882  0E0A               	movlw	10
  6951  005884  6F68               	movwf	___awdiv@divisor& (0+255),b
  6952  005886  C08C  F066         	movff	fround@prec,___awdiv@dividend
  6953  00588A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6954  00588C  EC28  F050         	call	___awdiv	;wreg free
  6955  005890  0E09               	movlw	9
  6956  005892  0100               	movlb	0	; () banked
  6957  005894  2566               	addwf	?___awdiv& (0+255),w,b
  6958  005896  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6959  005898  0E00               	movlw	0
  6960  00589A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6961  00589C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6962  00589E  0E00               	movlw	0
  6963  0058A0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6964  0058A2  0E03               	movlw	3
  6965  0058A4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6966  0058A6  EC7E  F05E         	call	___wmul	;wreg free
  6967  0058AA  0E8E               	movlw	low __npowers_
  6968  0058AC  0100               	movlb	0	; () banked
  6969  0058AE  256E               	addwf	?___wmul& (0+255),w,b
  6970  0058B0  6EF6               	movwf	tblptrl,c
  6971  0058B2  0EFE               	movlw	high __npowers_
  6972  0058B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6973  0058B6  6EF7               	movwf	tblptrh,c
  6974  0058B8                     	if	1	;There are 3 active tblptr bytes
  6975  0058B8  6AF8               	clrf	tblptru,c
  6976  0058BA  0E00               	movlw	low (__mediumconst shr (0+16))
  6977  0058BC  22F8               	addwfc	tblptru,f,c
  6978  0058BE                     	endif
  6979  0058BE  0009               	tblrd		*+
  6980  0058C0  CFF5 F074          	movff	tablat,___ftmul@f1
  6981  0058C4  0009               	tblrd		*+
  6982  0058C6  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6983  0058CA  000A               	tblrd		*-
  6984  0058CC  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6985  0058D0  EC54  F045         	call	___ftmul	;wreg free
  6986  0058D4  C074  F089         	movff	?___ftmul,_fround$7031
  6987  0058D8  C075  F08A         	movff	?___ftmul+1,_fround$7031+1
  6988  0058DC  C076  F08B         	movff	?___ftmul+2,_fround$7031+2
  6989                           
  6990                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6991  0058E0  C089  F074         	movff	_fround$7031,___ftmul@f1
  6992  0058E4  C08A  F075         	movff	_fround$7031+1,___ftmul@f1+1
  6993  0058E8  C08B  F076         	movff	_fround$7031+2,___ftmul@f1+2
  6994  0058EC  0E00               	movlw	0
  6995  0058EE  0100               	movlb	0	; () banked
  6996  0058F0  6F77               	movwf	___ftmul@f2& (0+255),b
  6997  0058F2  0E00               	movlw	0
  6998  0058F4  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  6999  0058F6  0E3F               	movlw	63
  7000  0058F8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7001  0058FA  EC54  F045         	call	___ftmul	;wreg free
  7002  0058FE  C074  F083         	movff	?___ftmul,?_fround
  7003  005902  C075  F084         	movff	?___ftmul+1,?_fround+1
  7004  005906  C076  F085         	movff	?___ftmul+2,?_fround+2
  7005  00590A  0012               	return	
  7006  00590C                     l3447:
  7007                           
  7008                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7009  00590C  0100               	movlb	0	; () banked
  7010  00590E  518C               	movf	fround@prec& (0+255),w,b
  7011  005910  0D03               	mullw	3
  7012  005912  0E8E               	movlw	low __npowers_
  7013  005914  24F3               	addwf	prodl,w,c
  7014  005916  6EF6               	movwf	tblptrl,c
  7015  005918  0EFE               	movlw	high __npowers_
  7016  00591A  20F4               	addwfc	prodh,w,c
  7017  00591C  6EF7               	movwf	tblptrh,c
  7018  00591E                     	if	1	;There are 3 active tblptr bytes
  7019  00591E  6AF8               	clrf	tblptru,c
  7020  005920  0E00               	movlw	low (__mediumconst shr (0+16))
  7021  005922  22F8               	addwfc	tblptru,f,c
  7022  005924                     	endif
  7023  005924  0009               	tblrd		*+
  7024  005926  CFF5 F074          	movff	tablat,___ftmul@f1
  7025  00592A  0009               	tblrd		*+
  7026  00592C  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7027  005930  000A               	tblrd		*-
  7028  005932  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7029  005936  0E00               	movlw	0
  7030  005938  6F77               	movwf	___ftmul@f2& (0+255),b
  7031  00593A  0E00               	movlw	0
  7032  00593C  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7033  00593E  0E3F               	movlw	63
  7034  005940  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7035  005942  EC54  F045         	call	___ftmul	;wreg free
  7036  005946  C074  F083         	movff	?___ftmul,?_fround
  7037  00594A  C075  F084         	movff	?___ftmul+1,?_fround+1
  7038  00594E  C076  F085         	movff	?___ftmul+2,?_fround+2
  7039  005952  0012               	return	
  7040  005954                     __end_of_fround:
  7041                           	opt stack 0
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           postinc0	equ	0xFEE
  7050                           wreg	equ	0xFE8
  7051                           indf2	equ	0xFDF
  7052                           postinc2	equ	0xFDE
  7053                           postdec2	equ	0xFDD
  7054                           fsr2h	equ	0xFDA
  7055                           fsr2l	equ	0xFD9
  7056                           status	equ	0xFD8
  7057                           
  7058 ;; *************** function ___ftmul *****************
  7059 ;; Defined at:
  7060 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  f1              3   20[BANK0 ] float 
  7063 ;;  f2              3   23[BANK0 ] float 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  7066 ;;  sign            1   34[BANK0 ] unsigned char 
  7067 ;;  cntr            1   33[BANK0 ] unsigned char 
  7068 ;;  exp             1   29[BANK0 ] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  3   20[BANK0 ] float 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:       15 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    8
  7085 ;; This function calls:
  7086 ;;		___ftpack
  7087 ;; This function is called by:
  7088 ;;		_main
  7089 ;;		_fround
  7090 ;;		_scale
  7091 ;;		_printf
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text7
  7096  008AA8                     __ptext7:
  7097                           	opt stack 0
  7098  008AA8                     ___ftmul:
  7099                           	opt stack 20
  7100                           
  7101                           ;incstack = 0
  7102  008AA8  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  7103  008AAC  0100               	movlb	0	; () banked
  7104  008AAE  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7105  008AB0  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7106  008AB2  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7107  008AB4  377A               	rlcf	??___ftmul& (0+255),f,b
  7108  008AB6  E301               	bnc	u16371
  7109  008AB8  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7110  008ABA                     u16371:
  7111  008ABA  517A               	movf	??___ftmul& (0+255),w,b
  7112  008ABC  6F7D               	movwf	___ftmul@exp& (0+255),b
  7113  008ABE  517D               	movf	___ftmul@exp& (0+255),w,b
  7114  008AC0  A4D8               	btfss	status,2,c
  7115  008AC2  D007               	goto	l3873
  7116                           
  7117                           ; BSR set to: 0
  7118  008AC4  0E00               	movlw	0
  7119  008AC6  6F74               	movwf	?___ftmul& (0+255),b
  7120  008AC8  0E00               	movlw	0
  7121  008ACA  6F75               	movwf	(?___ftmul+1)& (0+255),b
  7122  008ACC  0E00               	movlw	0
  7123  008ACE  6F76               	movwf	(?___ftmul+2)& (0+255),b
  7124                           
  7125                           ; BSR set to: 0
  7126  008AD0  0012               	return	
  7127  008AD2                     l3873:
  7128                           
  7129                           ; BSR set to: 0
  7130                           
  7131                           ; BSR set to: 0
  7132  008AD2  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  7133  008AD6  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7134  008AD8  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7135  008ADA  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7136  008ADC  377A               	rlcf	??___ftmul& (0+255),f,b
  7137  008ADE  E301               	bnc	u16391
  7138  008AE0  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7139  008AE2                     u16391:
  7140  008AE2  517A               	movf	??___ftmul& (0+255),w,b
  7141  008AE4  6F82               	movwf	___ftmul@sign& (0+255),b
  7142  008AE6  5182               	movf	___ftmul@sign& (0+255),w,b
  7143  008AE8  A4D8               	btfss	status,2,c
  7144  008AEA  D007               	goto	l3875
  7145                           
  7146                           ; BSR set to: 0
  7147  008AEC  0E00               	movlw	0
  7148  008AEE  6F74               	movwf	?___ftmul& (0+255),b
  7149  008AF0  0E00               	movlw	0
  7150  008AF2  6F75               	movwf	(?___ftmul+1)& (0+255),b
  7151  008AF4  0E00               	movlw	0
  7152  008AF6  6F76               	movwf	(?___ftmul+2)& (0+255),b
  7153                           
  7154                           ; BSR set to: 0
  7155  008AF8  0012               	return	
  7156  008AFA                     l3875:
  7157                           
  7158                           ; BSR set to: 0
  7159                           
  7160                           ; BSR set to: 0
  7161  008AFA  5182               	movf	___ftmul@sign& (0+255),w,b
  7162  008AFC  0F7B               	addlw	123
  7163  008AFE  277D               	addwf	___ftmul@exp& (0+255),f,b
  7164                           
  7165                           ; BSR set to: 0
  7166  008B00  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  7167  008B04  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7168  008B06  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  7169  008B08  0E80               	movlw	128
  7170  008B0A  1782               	andwf	___ftmul@sign& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173  008B0C  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7174                           
  7175                           ; BSR set to: 0
  7176  008B0E  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7177                           
  7178                           ; BSR set to: 0
  7179  008B10  0EFF               	movlw	255
  7180  008B12  1777               	andwf	___ftmul@f2& (0+255),f,b
  7181  008B14  0EFF               	movlw	255
  7182  008B16  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7183  008B18  0E00               	movlw	0
  7184  008B1A  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7185                           
  7186                           ; BSR set to: 0
  7187  008B1C  0E00               	movlw	0
  7188  008B1E  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  7189  008B20  0E00               	movlw	0
  7190  008B22  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7191  008B24  0E00               	movlw	0
  7192  008B26  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7193                           
  7194                           ; BSR set to: 0
  7195  008B28  0E07               	movlw	7
  7196  008B2A  6F81               	movwf	___ftmul@cntr& (0+255),b
  7197  008B2C                     
  7198                           ; BSR set to: 0
  7199                           
  7200                           ; BSR set to: 0
  7201  008B2C  A174               	btfss	___ftmul@f1& (0+255),0,b
  7202  008B2E  D006               	goto	l3877
  7203                           
  7204                           ; BSR set to: 0
  7205  008B30  5177               	movf	___ftmul@f2& (0+255),w,b
  7206  008B32  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7207  008B34  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  7208  008B36  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7209  008B38  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7210  008B3A  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7211  008B3C                     l3877:
  7212                           
  7213                           ; BSR set to: 0
  7214                           
  7215                           ; BSR set to: 0
  7216  008B3C  90D8               	bcf	status,0,c
  7217  008B3E  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7218  008B40  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7219  008B42  3374               	rrcf	___ftmul@f1& (0+255),f,b
  7220  008B44  90D8               	bcf	status,0,c
  7221  008B46  3777               	rlcf	___ftmul@f2& (0+255),f,b
  7222  008B48  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7223  008B4A  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7224                           
  7225                           ; BSR set to: 0
  7226  008B4C  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  7227  008B4E  D7EE               	goto	l3876
  7228                           
  7229                           ; BSR set to: 0
  7230                           
  7231                           ; BSR set to: 0
  7232  008B50  0E09               	movlw	9
  7233  008B52  6F81               	movwf	___ftmul@cntr& (0+255),b
  7234  008B54                     
  7235                           ; BSR set to: 0
  7236                           
  7237                           ; BSR set to: 0
  7238  008B54  A174               	btfss	___ftmul@f1& (0+255),0,b
  7239  008B56  D006               	goto	l3880
  7240                           
  7241                           ; BSR set to: 0
  7242  008B58  5177               	movf	___ftmul@f2& (0+255),w,b
  7243  008B5A  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7244  008B5C  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  7245  008B5E  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7246  008B60  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  7247  008B62  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7248  008B64                     l3880:
  7249                           
  7250                           ; BSR set to: 0
  7251                           
  7252                           ; BSR set to: 0
  7253  008B64  90D8               	bcf	status,0,c
  7254  008B66  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7255  008B68  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7256  008B6A  3374               	rrcf	___ftmul@f1& (0+255),f,b
  7257  008B6C  90D8               	bcf	status,0,c
  7258  008B6E  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7259  008B70  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7260  008B72  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7261                           
  7262                           ; BSR set to: 0
  7263  008B74  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  7264  008B76  D7EE               	goto	l3879
  7265                           
  7266                           ; BSR set to: 0
  7267                           
  7268                           ; BSR set to: 0
  7269  008B78  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7270  008B7C  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7271  008B80  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7272  008B84  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  7273  008B88  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  7274  008B8C  EC60  F04B         	call	___ftpack	;wreg free
  7275  008B90  C060  F074         	movff	?___ftpack,?___ftmul
  7276  008B94  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  7277  008B98  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  7278  008B9C  0012               	return	
  7279  008B9E                     __end_of___ftmul:
  7280                           	opt stack 0
  7281                           tblptru	equ	0xFF8
  7282                           tblptrh	equ	0xFF7
  7283                           tblptrl	equ	0xFF6
  7284                           tablat	equ	0xFF5
  7285                           prodh	equ	0xFF4
  7286                           prodl	equ	0xFF3
  7287                           intcon	equ	0xFF2
  7288                           postinc0	equ	0xFEE
  7289                           wreg	equ	0xFE8
  7290                           indf2	equ	0xFDF
  7291                           postinc2	equ	0xFDE
  7292                           postdec2	equ	0xFDD
  7293                           fsr2h	equ	0xFDA
  7294                           fsr2l	equ	0xFD9
  7295                           status	equ	0xFD8
  7296                           
  7297 ;; *************** function ___awmod *****************
  7298 ;; Defined at:
  7299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  dividend        2    0[BANK0 ] int 
  7302 ;;  divisor         2    2[BANK0 ] int 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  sign            1    5[BANK0 ] unsigned char 
  7305 ;;  counter         1    4[BANK0 ] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  2    0[BANK0 ] int 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7315 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;Total ram usage:        6 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    7
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_fround
  7326 ;;		_scale
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text8
  7331  00A4C4                     __ptext8:
  7332                           	opt stack 0
  7333  00A4C4                     ___awmod:
  7334                           	opt stack 21
  7335                           
  7336                           ;incstack = 0
  7337  00A4C4  0E00               	movlw	0
  7338  00A4C6  0100               	movlb	0	; () banked
  7339  00A4C8  6F65               	movwf	___awmod@sign& (0+255),b
  7340                           
  7341                           ; BSR set to: 0
  7342  00A4CA  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7343  00A4CC  D006               	goto	l3726
  7344                           
  7345                           ; BSR set to: 0
  7346  00A4CE  6D60               	negf	___awmod@dividend& (0+255),b
  7347  00A4D0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7348  00A4D2  B0D8               	btfsc	status,0,c
  7349  00A4D4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7350                           
  7351                           ; BSR set to: 0
  7352  00A4D6  0E01               	movlw	1
  7353  00A4D8  6F65               	movwf	___awmod@sign& (0+255),b
  7354  00A4DA                     l3726:
  7355                           
  7356                           ; BSR set to: 0
  7357                           
  7358                           ; BSR set to: 0
  7359  00A4DA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7360  00A4DC  D004               	goto	l3727
  7361                           
  7362                           ; BSR set to: 0
  7363  00A4DE  6D62               	negf	___awmod@divisor& (0+255),b
  7364  00A4E0  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7365  00A4E2  B0D8               	btfsc	status,0,c
  7366  00A4E4  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7367  00A4E6                     l3727:
  7368                           
  7369                           ; BSR set to: 0
  7370                           
  7371                           ; BSR set to: 0
  7372  00A4E6  5162               	movf	___awmod@divisor& (0+255),w,b
  7373  00A4E8  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7374  00A4EA  B4D8               	btfsc	status,2,c
  7375  00A4EC  D018               	goto	l3734
  7376                           
  7377                           ; BSR set to: 0
  7378  00A4EE  0E01               	movlw	1
  7379  00A4F0  6F64               	movwf	___awmod@counter& (0+255),b
  7380  00A4F2  D004               	goto	l3729
  7381  00A4F4                     
  7382                           ; BSR set to: 0
  7383                           
  7384                           ; BSR set to: 0
  7385  00A4F4  90D8               	bcf	status,0,c
  7386  00A4F6  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7387  00A4F8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7388  00A4FA  2B64               	incf	___awmod@counter& (0+255),f,b
  7389  00A4FC                     l3729:
  7390                           
  7391                           ; BSR set to: 0
  7392                           
  7393                           ; BSR set to: 0
  7394  00A4FC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7395  00A4FE  D7FA               	goto	l3730
  7396  00A500                     u16460:
  7397                           
  7398                           ; BSR set to: 0
  7399                           
  7400                           ; BSR set to: 0
  7401                           
  7402                           ; BSR set to: 0
  7403  00A500  5162               	movf	___awmod@divisor& (0+255),w,b
  7404  00A502  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7405  00A504  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7406  00A506  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7407  00A508  A0D8               	btfss	status,0,c
  7408  00A50A  D004               	goto	l3733
  7409                           
  7410                           ; BSR set to: 0
  7411  00A50C  5162               	movf	___awmod@divisor& (0+255),w,b
  7412  00A50E  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7413  00A510  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7414  00A512  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7415  00A514                     l3733:
  7416                           
  7417                           ; BSR set to: 0
  7418                           
  7419                           ; BSR set to: 0
  7420  00A514  90D8               	bcf	status,0,c
  7421  00A516  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7422  00A518  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7423                           
  7424                           ; BSR set to: 0
  7425  00A51A  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7426  00A51C  D7F1               	goto	u16460
  7427  00A51E                     l3734:
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ; BSR set to: 0
  7432                           
  7433                           ; BSR set to: 0
  7434  00A51E  5165               	movf	___awmod@sign& (0+255),w,b
  7435  00A520  B4D8               	btfsc	status,2,c
  7436  00A522  D004               	goto	l3735
  7437                           
  7438                           ; BSR set to: 0
  7439  00A524  6D60               	negf	___awmod@dividend& (0+255),b
  7440  00A526  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7441  00A528  B0D8               	btfsc	status,0,c
  7442  00A52A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7443  00A52C                     l3735:
  7444                           
  7445                           ; BSR set to: 0
  7446                           
  7447                           ; BSR set to: 0
  7448  00A52C  C060  F060         	movff	___awmod@dividend,?___awmod
  7449  00A530  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7450  00A534  0012               	return	
  7451  00A536                     __end_of___awmod:
  7452                           	opt stack 0
  7453                           tblptru	equ	0xFF8
  7454                           tblptrh	equ	0xFF7
  7455                           tblptrl	equ	0xFF6
  7456                           tablat	equ	0xFF5
  7457                           prodh	equ	0xFF4
  7458                           prodl	equ	0xFF3
  7459                           intcon	equ	0xFF2
  7460                           postinc0	equ	0xFEE
  7461                           wreg	equ	0xFE8
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function __tdiv_to_l_ *****************
  7470 ;; Defined at:
  7471 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  f1              3    0[BANK0 ] float 
  7474 ;;  f2              3    3[BANK0 ] float 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  quot            4    9[BANK0 ] unsigned long 
  7477 ;;  exp1            1   14[BANK0 ] unsigned char 
  7478 ;;  cntr            1   13[BANK0 ] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  4    0[BANK0 ] unsigned long 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7488 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;Total ram usage:       15 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    7
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_printf
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text9
  7503  007DA2                     __ptext9:
  7504                           	opt stack 0
  7505  007DA2                     __tdiv_to_l_:
  7506                           	opt stack 22
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;incstack = 0
  7510  007DA2  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7511  007DA6  0100               	movlb	0	; () banked
  7512  007DA8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7513  007DAA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7514  007DAC  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7515  007DAE  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7516  007DB0  E301               	bnc	u16951
  7517  007DB2  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7518  007DB4                     u16951:
  7519  007DB4  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  7520  007DB6  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7521  007DB8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7522  007DBA  A4D8               	btfss	status,2,c
  7523  007DBC  D009               	goto	l3849
  7524                           
  7525                           ; BSR set to: 0
  7526  007DBE  0E00               	movlw	0
  7527  007DC0  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7528  007DC2  0E00               	movlw	0
  7529  007DC4  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7530  007DC6  0E00               	movlw	0
  7531  007DC8  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7532  007DCA  0E00               	movlw	0
  7533  007DCC  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7534                           
  7535                           ; BSR set to: 0
  7536  007DCE  0012               	return	
  7537  007DD0                     l3849:
  7538                           
  7539                           ; BSR set to: 0
  7540                           
  7541                           ; BSR set to: 0
  7542  007DD0  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7543  007DD4  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7544  007DD6  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7545  007DD8  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7546  007DDA  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7547  007DDC  E301               	bnc	u16971
  7548  007DDE  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7549  007DE0                     u16971:
  7550  007DE0  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  7551  007DE2  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7552  007DE4  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7553  007DE6  A4D8               	btfss	status,2,c
  7554  007DE8  D009               	goto	l3851
  7555                           
  7556                           ; BSR set to: 0
  7557  007DEA  0E00               	movlw	0
  7558  007DEC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7559  007DEE  0E00               	movlw	0
  7560  007DF0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7561  007DF2  0E00               	movlw	0
  7562  007DF4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7563  007DF6  0E00               	movlw	0
  7564  007DF8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7565                           
  7566                           ; BSR set to: 0
  7567  007DFA  0012               	return	
  7568  007DFC                     l3851:
  7569                           
  7570                           ; BSR set to: 0
  7571                           
  7572                           ; BSR set to: 0
  7573  007DFC  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7574                           
  7575                           ; BSR set to: 0
  7576  007DFE  0EFF               	movlw	255
  7577  007E00  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7578  007E02  0EFF               	movlw	255
  7579  007E04  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7580  007E06  0E00               	movlw	0
  7581  007E08  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7582  007E0A  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7583                           
  7584                           ; BSR set to: 0
  7585  007E0C  0EFF               	movlw	255
  7586  007E0E  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7587  007E10  0EFF               	movlw	255
  7588  007E12  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7589  007E14  0E00               	movlw	0
  7590  007E16  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593  007E18  0E00               	movlw	0
  7594  007E1A  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
  7595  007E1C  0E00               	movlw	0
  7596  007E1E  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7597  007E20  0E00               	movlw	0
  7598  007E22  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7599  007E24  0E00               	movlw	0
  7600  007E26  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603  007E28  0E7F               	movlw	127
  7604  007E2A  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7605                           
  7606                           ; BSR set to: 0
  7607  007E2C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7608  007E2E  0F98               	addlw	152
  7609  007E30  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7610                           
  7611                           ; BSR set to: 0
  7612  007E32  0E18               	movlw	24
  7613  007E34  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7614  007E36                     l3852:
  7615                           
  7616                           ; BSR set to: 0
  7617  007E36  90D8               	bcf	status,0,c
  7618  007E38  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7619  007E3A  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7620  007E3C  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7621  007E3E  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7622                           
  7623                           ; BSR set to: 0
  7624  007E40  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7625  007E42  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7626  007E44  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7627  007E46  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7628  007E48  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7629  007E4A  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7630  007E4C  A0D8               	btfss	status,0,c
  7631  007E4E  D007               	goto	l3853
  7632                           
  7633                           ; BSR set to: 0
  7634  007E50  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7635  007E52  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7636  007E54  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7637  007E56  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7638  007E58  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7639  007E5A  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7640                           
  7641                           ; BSR set to: 0
  7642  007E5C  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7643  007E5E                     l3853:
  7644                           
  7645                           ; BSR set to: 0
  7646  007E5E  90D8               	bcf	status,0,c
  7647  007E60  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7648  007E62  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7649  007E64  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7650                           
  7651                           ; BSR set to: 0
  7652  007E66  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7653  007E68  D7E6               	goto	l3852
  7654                           
  7655                           ; BSR set to: 0
  7656                           
  7657                           ; BSR set to: 0
  7658  007E6A  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7659  007E6C  D016               	goto	l3855
  7660                           
  7661                           ; BSR set to: 0
  7662  007E6E  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7663  007E70  0A80               	xorlw	128
  7664  007E72  0F97               	addlw	151
  7665  007E74  B0D8               	btfsc	status,0,c
  7666  007E76  D009               	goto	l3856
  7667                           
  7668                           ; BSR set to: 0
  7669  007E78  0E00               	movlw	0
  7670  007E7A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7671  007E7C  0E00               	movlw	0
  7672  007E7E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7673  007E80  0E00               	movlw	0
  7674  007E82  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7675  007E84  0E00               	movlw	0
  7676  007E86  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7677                           
  7678                           ; BSR set to: 0
  7679  007E88  0012               	return	
  7680  007E8A                     l3856:
  7681                           
  7682                           ; BSR set to: 0
  7683                           
  7684                           ; BSR set to: 0
  7685                           
  7686                           ; BSR set to: 0
  7687  007E8A  90D8               	bcf	status,0,c
  7688  007E8C  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7689  007E8E  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7690  007E90  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7691  007E92  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  007E94  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7695  007E96  D7F9               	goto	l3856
  7696                           
  7697                           ; BSR set to: 0
  7698  007E98  D015               	goto	u17030
  7699  007E9A                     l3855:
  7700                           
  7701                           ; BSR set to: 0
  7702                           
  7703                           ; BSR set to: 0
  7704  007E9A  0E17               	movlw	23
  7705  007E9C  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7706  007E9E  D00F               	goto	l3861
  7707                           
  7708                           ; BSR set to: 0
  7709  007EA0  0E00               	movlw	0
  7710  007EA2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  7711  007EA4  0E00               	movlw	0
  7712  007EA6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7713  007EA8  0E00               	movlw	0
  7714  007EAA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7715  007EAC  0E00               	movlw	0
  7716  007EAE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7717                           
  7718                           ; BSR set to: 0
  7719  007EB0  0012               	return	
  7720  007EB2                     
  7721                           ; BSR set to: 0
  7722                           
  7723                           ; BSR set to: 0
  7724  007EB2  90D8               	bcf	status,0,c
  7725  007EB4  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7726  007EB6  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7727  007EB8  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7728  007EBA  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7729  007EBC  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7730  007EBE                     l3861:
  7731                           
  7732                           ; BSR set to: 0
  7733                           
  7734                           ; BSR set to: 0
  7735  007EBE  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7736  007EC0  A4D8               	btfss	status,2,c
  7737  007EC2  D7F7               	goto	l3862
  7738  007EC4                     u17030:
  7739                           
  7740                           ; BSR set to: 0
  7741                           
  7742                           ; BSR set to: 0
  7743  007EC4  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7744  007EC8  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7745  007ECC  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7746  007ED0  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7747                           
  7748                           ; BSR set to: 0
  7749  007ED4  0012               	return		;funcret
  7750  007ED6                     __end_of__tdiv_to_l_:
  7751                           	opt stack 0
  7752                           tblptru	equ	0xFF8
  7753                           tblptrh	equ	0xFF7
  7754                           tblptrl	equ	0xFF6
  7755                           tablat	equ	0xFF5
  7756                           prodh	equ	0xFF4
  7757                           prodl	equ	0xFF3
  7758                           intcon	equ	0xFF2
  7759                           postinc0	equ	0xFEE
  7760                           wreg	equ	0xFE8
  7761                           indf2	equ	0xFDF
  7762                           postinc2	equ	0xFDE
  7763                           postdec2	equ	0xFDD
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768 ;; *************** function __div_to_l_ *****************
  7769 ;; Defined at:
  7770 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  f1              3    0[BANK0 ] unsigned long 
  7773 ;;  f2              3    3[BANK0 ] unsigned long 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  quot            4    6[BANK0 ] unsigned long 
  7776 ;;  exp1            1   11[BANK0 ] unsigned char 
  7777 ;;  cntr            1   10[BANK0 ] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  4    0[BANK0 ] unsigned long 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7787 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;Total ram usage:       12 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    7
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_printf
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text10
  7802  008004                     __ptext10:
  7803                           	opt stack 0
  7804  008004                     __div_to_l_:
  7805                           	opt stack 22
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;incstack = 0
  7809  008004  0100               	movlb	0	; () banked
  7810  008006  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7811  008008  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7812  00800A  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
  7813  00800C  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  7814  00800E  A4D8               	btfss	status,2,c
  7815  008010  D009               	goto	l3745
  7816                           
  7817                           ; BSR set to: 0
  7818  008012  0E00               	movlw	0
  7819  008014  6F60               	movwf	?__div_to_l_& (0+255),b
  7820  008016  0E00               	movlw	0
  7821  008018  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7822  00801A  0E00               	movlw	0
  7823  00801C  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7824  00801E  0E00               	movlw	0
  7825  008020  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7826                           
  7827                           ; BSR set to: 0
  7828  008022  0012               	return	
  7829  008024                     l3745:
  7830                           
  7831                           ; BSR set to: 0
  7832                           
  7833                           ; BSR set to: 0
  7834  008024  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7835  008026  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7836  008028  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  7837  00802A  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  7838  00802C  A4D8               	btfss	status,2,c
  7839  00802E  D009               	goto	l3747
  7840                           
  7841                           ; BSR set to: 0
  7842  008030  0E00               	movlw	0
  7843  008032  6F60               	movwf	?__div_to_l_& (0+255),b
  7844  008034  0E00               	movlw	0
  7845  008036  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7846  008038  0E00               	movlw	0
  7847  00803A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7848  00803C  0E00               	movlw	0
  7849  00803E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7850                           
  7851                           ; BSR set to: 0
  7852  008040  0012               	return	
  7853  008042                     l3747:
  7854                           
  7855                           ; BSR set to: 0
  7856                           
  7857                           ; BSR set to: 0
  7858  008042  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7859                           
  7860                           ; BSR set to: 0
  7861  008044  0EFF               	movlw	255
  7862  008046  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  7863  008048  0EFF               	movlw	255
  7864  00804A  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7865  00804C  0EFF               	movlw	255
  7866  00804E  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7867  008050  0E00               	movlw	0
  7868  008052  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7869                           
  7870                           ; BSR set to: 0
  7871  008054  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7872  008056  0EFF               	movlw	255
  7873  008058  1763               	andwf	__div_to_l_@f2& (0+255),f,b
  7874  00805A  0EFF               	movlw	255
  7875  00805C  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7876  00805E  0EFF               	movlw	255
  7877  008060  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7878  008062  0E00               	movlw	0
  7879  008064  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7880                           
  7881                           ; BSR set to: 0
  7882  008066  0E00               	movlw	0
  7883  008068  6F66               	movwf	__div_to_l_@quot& (0+255),b
  7884  00806A  0E00               	movlw	0
  7885  00806C  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7886  00806E  0E00               	movlw	0
  7887  008070  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7888  008072  0E00               	movlw	0
  7889  008074  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7890                           
  7891                           ; BSR set to: 0
  7892  008076  0E7F               	movlw	127
  7893  008078  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7894                           
  7895                           ; BSR set to: 0
  7896  00807A  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  7897  00807C  0FA0               	addlw	160
  7898  00807E  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7899                           
  7900                           ; BSR set to: 0
  7901  008080  0E20               	movlw	32
  7902  008082  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  7903  008084                     
  7904                           ; BSR set to: 0
  7905                           
  7906                           ; BSR set to: 0
  7907  008084  90D8               	bcf	status,0,c
  7908  008086  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  7909  008088  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7910  00808A  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7911  00808C  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7912                           
  7913                           ; BSR set to: 0
  7914  00808E  5163               	movf	__div_to_l_@f2& (0+255),w,b
  7915  008090  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  7916  008092  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7917  008094  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7918  008096  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7919  008098  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7920  00809A  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7921  00809C  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7922  00809E  A0D8               	btfss	status,0,c
  7923  0080A0  D009               	goto	l3749
  7924                           
  7925                           ; BSR set to: 0
  7926  0080A2  5163               	movf	__div_to_l_@f2& (0+255),w,b
  7927  0080A4  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  7928  0080A6  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7929  0080A8  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7930  0080AA  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7931  0080AC  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7932  0080AE  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7933  0080B0  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7934                           
  7935                           ; BSR set to: 0
  7936  0080B2  8166               	bsf	__div_to_l_@quot& (0+255),0,b
  7937  0080B4                     l3749:
  7938                           
  7939                           ; BSR set to: 0
  7940                           
  7941                           ; BSR set to: 0
  7942  0080B4  90D8               	bcf	status,0,c
  7943  0080B6  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  7944  0080B8  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7945  0080BA  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7946  0080BC  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7947                           
  7948                           ; BSR set to: 0
  7949  0080BE  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7950  0080C0  D7E1               	goto	l3748
  7951                           
  7952                           ; BSR set to: 0
  7953                           
  7954                           ; BSR set to: 0
  7955  0080C2  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
  7956  0080C4  D016               	goto	l3751
  7957                           
  7958                           ; BSR set to: 0
  7959  0080C6  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  7960  0080C8  0A80               	xorlw	128
  7961  0080CA  0F9F               	addlw	159
  7962  0080CC  B0D8               	btfsc	status,0,c
  7963  0080CE  D009               	goto	l3752
  7964                           
  7965                           ; BSR set to: 0
  7966  0080D0  0E00               	movlw	0
  7967  0080D2  6F60               	movwf	?__div_to_l_& (0+255),b
  7968  0080D4  0E00               	movlw	0
  7969  0080D6  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  7970  0080D8  0E00               	movlw	0
  7971  0080DA  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  7972  0080DC  0E00               	movlw	0
  7973  0080DE  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976  0080E0  0012               	return	
  7977  0080E2                     l3752:
  7978                           
  7979                           ; BSR set to: 0
  7980                           
  7981                           ; BSR set to: 0
  7982                           
  7983                           ; BSR set to: 0
  7984  0080E2  90D8               	bcf	status,0,c
  7985  0080E4  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7986  0080E6  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7987  0080E8  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7988  0080EA  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
  7989                           
  7990                           ; BSR set to: 0
  7991  0080EC  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7992  0080EE  D7F9               	goto	l3752
  7993                           
  7994                           ; BSR set to: 0
  7995  0080F0  D015               	goto	u17100
  7996  0080F2                     l3751:
  7997                           
  7998                           ; BSR set to: 0
  7999                           
  8000                           ; BSR set to: 0
  8001  0080F2  0E1F               	movlw	31
  8002  0080F4  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  8003  0080F6  D00F               	goto	l3757
  8004                           
  8005                           ; BSR set to: 0
  8006  0080F8  0E00               	movlw	0
  8007  0080FA  6F60               	movwf	?__div_to_l_& (0+255),b
  8008  0080FC  0E00               	movlw	0
  8009  0080FE  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  8010  008100  0E00               	movlw	0
  8011  008102  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  8012  008104  0E00               	movlw	0
  8013  008106  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  8014                           
  8015                           ; BSR set to: 0
  8016  008108  0012               	return	
  8017  00810A                     
  8018                           ; BSR set to: 0
  8019                           
  8020                           ; BSR set to: 0
  8021  00810A  90D8               	bcf	status,0,c
  8022  00810C  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  8023  00810E  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8024  008110  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  8025  008112  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  8026  008114  076B               	decf	__div_to_l_@exp1& (0+255),f,b
  8027  008116                     l3757:
  8028                           
  8029                           ; BSR set to: 0
  8030                           
  8031                           ; BSR set to: 0
  8032  008116  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  8033  008118  A4D8               	btfss	status,2,c
  8034  00811A  D7F7               	goto	l3758
  8035  00811C                     u17100:
  8036                           
  8037                           ; BSR set to: 0
  8038                           
  8039                           ; BSR set to: 0
  8040  00811C  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
  8041  008120  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8042  008124  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8043  008128  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8044                           
  8045                           ; BSR set to: 0
  8046  00812C  0012               	return		;funcret
  8047  00812E                     __end_of__div_to_l_:
  8048                           	opt stack 0
  8049                           tblptru	equ	0xFF8
  8050                           tblptrh	equ	0xFF7
  8051                           tblptrl	equ	0xFF6
  8052                           tablat	equ	0xFF5
  8053                           prodh	equ	0xFF4
  8054                           prodl	equ	0xFF3
  8055                           intcon	equ	0xFF2
  8056                           postinc0	equ	0xFEE
  8057                           wreg	equ	0xFE8
  8058                           indf2	equ	0xFDF
  8059                           postinc2	equ	0xFDE
  8060                           postdec2	equ	0xFDD
  8061                           fsr2h	equ	0xFDA
  8062                           fsr2l	equ	0xFD9
  8063                           status	equ	0xFD8
  8064                           
  8065 ;; *************** function ___fttol *****************
  8066 ;; Defined at:
  8067 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  f1              3   35[BANK0 ] float 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  lval            4   45[BANK0 ] unsigned long 
  8072 ;;  exp1            1   49[BANK0 ] unsigned char 
  8073 ;;  sign1           1   44[BANK0 ] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  4   35[BANK0 ] long 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2, status,0
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;Total ram usage:       15 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    7
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_main
  8094 ;;		_printf
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text11
  8099  0089B0                     __ptext11:
  8100                           	opt stack 0
  8101  0089B0                     ___fttol:
  8102                           	opt stack 22
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;incstack = 0
  8106  0089B0  C085  F087         	movff	___fttol@f1+2,??___fttol
  8107  0089B4  0100               	movlb	0	; () banked
  8108  0089B6  6B88               	clrf	(??___fttol+1)& (0+255),b
  8109  0089B8  6B89               	clrf	(??___fttol+2)& (0+255),b
  8110  0089BA  3584               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8111  0089BC  3787               	rlcf	??___fttol& (0+255),f,b
  8112  0089BE  E301               	bnc	u17161
  8113  0089C0  8188               	bsf	(??___fttol+1)& (0+255),0,b
  8114  0089C2                     u17161:
  8115  0089C2  5187               	movf	??___fttol& (0+255),w,b
  8116  0089C4  6F91               	movwf	___fttol@exp1& (0+255),b
  8117  0089C6  5191               	movf	___fttol@exp1& (0+255),w,b
  8118  0089C8  A4D8               	btfss	status,2,c
  8119  0089CA  D009               	goto	l3894
  8120                           
  8121                           ; BSR set to: 0
  8122  0089CC  0E00               	movlw	0
  8123  0089CE  6F83               	movwf	?___fttol& (0+255),b
  8124  0089D0  0E00               	movlw	0
  8125  0089D2  6F84               	movwf	(?___fttol+1)& (0+255),b
  8126  0089D4  0E00               	movlw	0
  8127  0089D6  6F85               	movwf	(?___fttol+2)& (0+255),b
  8128  0089D8  0E00               	movlw	0
  8129  0089DA  6F86               	movwf	(?___fttol+3)& (0+255),b
  8130                           
  8131                           ; BSR set to: 0
  8132  0089DC  0012               	return	
  8133  0089DE                     l3894:
  8134                           
  8135                           ; BSR set to: 0
  8136                           
  8137                           ; BSR set to: 0
  8138  0089DE  0E17               	movlw	23
  8139  0089E0  6F87               	movwf	??___fttol& (0+255),b
  8140  0089E2  C083  F088         	movff	___fttol@f1,??___fttol+1
  8141  0089E6  C084  F089         	movff	___fttol@f1+1,??___fttol+2
  8142  0089EA  C085  F08A         	movff	___fttol@f1+2,??___fttol+3
  8143  0089EE  2987               	incf	??___fttol& (0+255),w,b
  8144  0089F0  6F8B               	movwf	(??___fttol+4)& (0+255),b
  8145  0089F2  D004               	goto	u17180
  8146  0089F4                     u17185:
  8147  0089F4  90D8               	bcf	status,0,c
  8148  0089F6  338A               	rrcf	(??___fttol+3)& (0+255),f,b
  8149  0089F8  3389               	rrcf	(??___fttol+2)& (0+255),f,b
  8150  0089FA  3388               	rrcf	(??___fttol+1)& (0+255),f,b
  8151  0089FC                     u17180:
  8152  0089FC  2F8B               	decfsz	(??___fttol+4)& (0+255),f,b
  8153  0089FE  D7FA               	goto	u17185
  8154  008A00  0100               	movlb	0	; () banked
  8155  008A02  5188               	movf	(??___fttol+1)& (0+255),w,b
  8156  008A04  6F8C               	movwf	___fttol@sign1& (0+255),b
  8157                           
  8158                           ; BSR set to: 0
  8159  008A06  8F84               	bsf	(___fttol@f1+1)& (0+255),7,b
  8160                           
  8161                           ; BSR set to: 0
  8162  008A08  0EFF               	movlw	255
  8163  008A0A  1783               	andwf	___fttol@f1& (0+255),f,b
  8164  008A0C  0EFF               	movlw	255
  8165  008A0E  1784               	andwf	(___fttol@f1+1)& (0+255),f,b
  8166  008A10  0E00               	movlw	0
  8167  008A12  1785               	andwf	(___fttol@f1+2)& (0+255),f,b
  8168                           
  8169                           ; BSR set to: 0
  8170  008A14  5183               	movf	___fttol@f1& (0+255),w,b
  8171  008A16  6F8D               	movwf	___fttol@lval& (0+255),b
  8172  008A18  5184               	movf	(___fttol@f1+1)& (0+255),w,b
  8173  008A1A  6F8E               	movwf	(___fttol@lval+1)& (0+255),b
  8174  008A1C  5185               	movf	(___fttol@f1+2)& (0+255),w,b
  8175  008A1E  6F8F               	movwf	(___fttol@lval+2)& (0+255),b
  8176  008A20  6B90               	clrf	(___fttol@lval+3)& (0+255),b
  8177                           
  8178                           ; BSR set to: 0
  8179  008A22  0E8E               	movlw	142
  8180  008A24  5F91               	subwf	___fttol@exp1& (0+255),f,b
  8181                           
  8182                           ; BSR set to: 0
  8183  008A26  AF91               	btfss	___fttol@exp1& (0+255),7,b
  8184  008A28  D016               	goto	l3896
  8185                           
  8186                           ; BSR set to: 0
  8187  008A2A  5191               	movf	___fttol@exp1& (0+255),w,b
  8188  008A2C  0A80               	xorlw	128
  8189  008A2E  0F8F               	addlw	143
  8190  008A30  B0D8               	btfsc	status,0,c
  8191  008A32  D009               	goto	l3897
  8192                           
  8193                           ; BSR set to: 0
  8194  008A34  0E00               	movlw	0
  8195  008A36  6F83               	movwf	?___fttol& (0+255),b
  8196  008A38  0E00               	movlw	0
  8197  008A3A  6F84               	movwf	(?___fttol+1)& (0+255),b
  8198  008A3C  0E00               	movlw	0
  8199  008A3E  6F85               	movwf	(?___fttol+2)& (0+255),b
  8200  008A40  0E00               	movlw	0
  8201  008A42  6F86               	movwf	(?___fttol+3)& (0+255),b
  8202                           
  8203                           ; BSR set to: 0
  8204  008A44  0012               	return	
  8205  008A46                     l3897:
  8206                           
  8207                           ; BSR set to: 0
  8208                           
  8209                           ; BSR set to: 0
  8210                           
  8211                           ; BSR set to: 0
  8212  008A46  90D8               	bcf	status,0,c
  8213  008A48  3390               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8214  008A4A  338F               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8215  008A4C  338E               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8216  008A4E  338D               	rrcf	___fttol@lval& (0+255),f,b
  8217                           
  8218                           ; BSR set to: 0
  8219  008A50  3F91               	incfsz	___fttol@exp1& (0+255),f,b
  8220  008A52  D7F9               	goto	l3897
  8221                           
  8222                           ; BSR set to: 0
  8223  008A54  D015               	goto	u17220
  8224  008A56                     l3896:
  8225                           
  8226                           ; BSR set to: 0
  8227                           
  8228                           ; BSR set to: 0
  8229  008A56  0E17               	movlw	23
  8230  008A58  6591               	cpfsgt	___fttol@exp1& (0+255),b
  8231  008A5A  D00F               	goto	l3902
  8232                           
  8233                           ; BSR set to: 0
  8234  008A5C  0E00               	movlw	0
  8235  008A5E  6F83               	movwf	?___fttol& (0+255),b
  8236  008A60  0E00               	movlw	0
  8237  008A62  6F84               	movwf	(?___fttol+1)& (0+255),b
  8238  008A64  0E00               	movlw	0
  8239  008A66  6F85               	movwf	(?___fttol+2)& (0+255),b
  8240  008A68  0E00               	movlw	0
  8241  008A6A  6F86               	movwf	(?___fttol+3)& (0+255),b
  8242                           
  8243                           ; BSR set to: 0
  8244  008A6C  0012               	return	
  8245  008A6E                     
  8246                           ; BSR set to: 0
  8247                           
  8248                           ; BSR set to: 0
  8249  008A6E  90D8               	bcf	status,0,c
  8250  008A70  378D               	rlcf	___fttol@lval& (0+255),f,b
  8251  008A72  378E               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8252  008A74  378F               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8253  008A76  3790               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8254  008A78  0791               	decf	___fttol@exp1& (0+255),f,b
  8255  008A7A                     l3902:
  8256                           
  8257                           ; BSR set to: 0
  8258                           
  8259                           ; BSR set to: 0
  8260  008A7A  5191               	movf	___fttol@exp1& (0+255),w,b
  8261  008A7C  A4D8               	btfss	status,2,c
  8262  008A7E  D7F7               	goto	l3903
  8263  008A80                     u17220:
  8264                           
  8265                           ; BSR set to: 0
  8266                           
  8267                           ; BSR set to: 0
  8268                           
  8269                           ; BSR set to: 0
  8270  008A80  518C               	movf	___fttol@sign1& (0+255),w,b
  8271  008A82  B4D8               	btfsc	status,2,c
  8272  008A84  D008               	goto	l3905
  8273                           
  8274                           ; BSR set to: 0
  8275  008A86  1F90               	comf	(___fttol@lval+3)& (0+255),f,b
  8276  008A88  1F8F               	comf	(___fttol@lval+2)& (0+255),f,b
  8277  008A8A  1F8E               	comf	(___fttol@lval+1)& (0+255),f,b
  8278  008A8C  6D8D               	negf	___fttol@lval& (0+255),b
  8279  008A8E  0E00               	movlw	0
  8280  008A90  238E               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8281  008A92  238F               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8282  008A94  2390               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8283  008A96                     l3905:
  8284                           
  8285                           ; BSR set to: 0
  8286                           
  8287                           ; BSR set to: 0
  8288  008A96  C08D  F083         	movff	___fttol@lval,?___fttol
  8289  008A9A  C08E  F084         	movff	___fttol@lval+1,?___fttol+1
  8290  008A9E  C08F  F085         	movff	___fttol@lval+2,?___fttol+2
  8291  008AA2  C090  F086         	movff	___fttol@lval+3,?___fttol+3
  8292  008AA6  0012               	return	
  8293  008AA8                     __end_of___fttol:
  8294                           	opt stack 0
  8295                           tblptru	equ	0xFF8
  8296                           tblptrh	equ	0xFF7
  8297                           tblptrl	equ	0xFF6
  8298                           tablat	equ	0xFF5
  8299                           prodh	equ	0xFF4
  8300                           prodl	equ	0xFF3
  8301                           intcon	equ	0xFF2
  8302                           postinc0	equ	0xFEE
  8303                           wreg	equ	0xFE8
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function ___ftsub *****************
  8312 ;; Defined at:
  8313 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  f1              3  132[BANK0 ] float 
  8316 ;;  f2              3  135[BANK0 ] float 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;		None
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  3  132[BANK0 ] float 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8328 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;Total ram usage:        6 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    9
  8335 ;; This function calls:
  8336 ;;		___ftadd
  8337 ;; This function is called by:
  8338 ;;		_printf
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text12
  8343  00B632                     __ptext12:
  8344                           	opt stack 0
  8345  00B632                     ___ftsub:
  8346                           	opt stack 20
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;incstack = 0
  8350  00B632  0100               	movlb	0	; () banked
  8351  00B634  51E7               	movf	___ftsub@f2& (0+255),w,b
  8352  00B636  11E8               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8353  00B638  11E9               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8354  00B63A  B4D8               	btfsc	status,2,c
  8355  00B63C  D006               	goto	l3890
  8356                           
  8357                           ; BSR set to: 0
  8358  00B63E  0E00               	movlw	0
  8359  00B640  1BE7               	xorwf	___ftsub@f2& (0+255),f,b
  8360  00B642  0E00               	movlw	0
  8361  00B644  1BE8               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8362  00B646  0E80               	movlw	128
  8363  00B648  1BE9               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8364  00B64A                     l3890:
  8365                           
  8366                           ; BSR set to: 0
  8367                           
  8368                           ; BSR set to: 0
  8369  00B64A  C0E4  F08D         	movff	___ftsub@f1,___ftadd@f1
  8370  00B64E  C0E5  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
  8371  00B652  C0E6  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
  8372  00B656  C0E7  F090         	movff	___ftsub@f2,___ftadd@f2
  8373  00B65A  C0E8  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
  8374  00B65E  C0E9  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
  8375  00B662  ECD3  F034         	call	___ftadd	;wreg free
  8376  00B666  C08D  F0E4         	movff	?___ftadd,?___ftsub
  8377  00B66A  C08E  F0E5         	movff	?___ftadd+1,?___ftsub+1
  8378  00B66E  C08F  F0E6         	movff	?___ftadd+2,?___ftsub+2
  8379  00B672  0012               	return	
  8380  00B674                     __end_of___ftsub:
  8381                           	opt stack 0
  8382                           tblptru	equ	0xFF8
  8383                           tblptrh	equ	0xFF7
  8384                           tblptrl	equ	0xFF6
  8385                           tablat	equ	0xFF5
  8386                           prodh	equ	0xFF4
  8387                           prodl	equ	0xFF3
  8388                           intcon	equ	0xFF2
  8389                           postinc0	equ	0xFEE
  8390                           wreg	equ	0xFE8
  8391                           indf2	equ	0xFDF
  8392                           postinc2	equ	0xFDE
  8393                           postdec2	equ	0xFDD
  8394                           fsr2h	equ	0xFDA
  8395                           fsr2l	equ	0xFD9
  8396                           status	equ	0xFD8
  8397                           
  8398 ;; *************** function ___ftadd *****************
  8399 ;; Defined at:
  8400 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  f1              3   45[BANK0 ] float 
  8403 ;;  f2              3   48[BANK0 ] float 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  exp1            1   56[BANK0 ] unsigned char 
  8406 ;;  exp2            1   55[BANK0 ] unsigned char 
  8407 ;;  sign            1   54[BANK0 ] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  3   45[BANK0 ] float 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8417 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;Total ram usage:       12 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    8
  8424 ;; This function calls:
  8425 ;;		___ftpack
  8426 ;; This function is called by:
  8427 ;;		_printf
  8428 ;;		___ftsub
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text13
  8433  0069A6                     __ptext13:
  8434                           	opt stack 0
  8435  0069A6                     ___ftadd:
  8436                           	opt stack 20
  8437                           
  8438                           ;incstack = 0
  8439  0069A6  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
  8440  0069AA  0100               	movlb	0	; () banked
  8441  0069AC  6B94               	clrf	(??___ftadd+1)& (0+255),b
  8442  0069AE  6B95               	clrf	(??___ftadd+2)& (0+255),b
  8443  0069B0  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8444  0069B2  3793               	rlcf	??___ftadd& (0+255),f,b
  8445  0069B4  E301               	bnc	u16111
  8446  0069B6  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  8447  0069B8                     u16111:
  8448  0069B8  5193               	movf	??___ftadd& (0+255),w,b
  8449  0069BA  6F98               	movwf	___ftadd@exp1& (0+255),b
  8450  0069BC  C092  F093         	movff	___ftadd@f2+2,??___ftadd
  8451  0069C0  6B94               	clrf	(??___ftadd+1)& (0+255),b
  8452  0069C2  6B95               	clrf	(??___ftadd+2)& (0+255),b
  8453  0069C4  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8454  0069C6  3793               	rlcf	??___ftadd& (0+255),f,b
  8455  0069C8  E301               	bnc	u16121
  8456  0069CA  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  8457  0069CC                     u16121:
  8458  0069CC  5193               	movf	??___ftadd& (0+255),w,b
  8459  0069CE  6F97               	movwf	___ftadd@exp2& (0+255),b
  8460                           
  8461                           ; BSR set to: 0
  8462  0069D0  5198               	movf	___ftadd@exp1& (0+255),w,b
  8463  0069D2  B4D8               	btfsc	status,2,c
  8464  0069D4  D00B               	goto	u16150
  8465                           
  8466                           ; BSR set to: 0
  8467  0069D6  5197               	movf	___ftadd@exp2& (0+255),w,b
  8468  0069D8  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  8469  0069DA  B0D8               	btfsc	status,0,c
  8470  0069DC  D00E               	goto	l3808
  8471                           
  8472                           ; BSR set to: 0
  8473  0069DE  5198               	movf	___ftadd@exp1& (0+255),w,b
  8474  0069E0  0800               	sublw	0
  8475  0069E2  2597               	addwf	___ftadd@exp2& (0+255),w,b
  8476  0069E4  6F93               	movwf	??___ftadd& (0+255),b
  8477  0069E6  0E18               	movlw	24
  8478  0069E8  6593               	cpfsgt	??___ftadd& (0+255),b
  8479  0069EA  D007               	goto	l3808
  8480  0069EC                     u16150:
  8481                           
  8482                           ; BSR set to: 0
  8483  0069EC  C090  F08D         	movff	___ftadd@f2,?___ftadd
  8484  0069F0  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
  8485  0069F4  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
  8486  0069F8  0012               	return	
  8487  0069FA                     l3808:
  8488                           
  8489                           ; BSR set to: 0
  8490                           
  8491                           ; BSR set to: 0
  8492  0069FA  5197               	movf	___ftadd@exp2& (0+255),w,b
  8493  0069FC  B4D8               	btfsc	status,2,c
  8494  0069FE  D00B               	goto	u16180
  8495                           
  8496                           ; BSR set to: 0
  8497  006A00  5198               	movf	___ftadd@exp1& (0+255),w,b
  8498  006A02  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  8499  006A04  B0D8               	btfsc	status,0,c
  8500  006A06  D00E               	goto	l3812
  8501                           
  8502                           ; BSR set to: 0
  8503  006A08  5197               	movf	___ftadd@exp2& (0+255),w,b
  8504  006A0A  0800               	sublw	0
  8505  006A0C  2598               	addwf	___ftadd@exp1& (0+255),w,b
  8506  006A0E  6F93               	movwf	??___ftadd& (0+255),b
  8507  006A10  0E18               	movlw	24
  8508  006A12  6593               	cpfsgt	??___ftadd& (0+255),b
  8509  006A14  D007               	goto	l3812
  8510  006A16                     u16180:
  8511                           
  8512                           ; BSR set to: 0
  8513  006A16  C08D  F08D         	movff	___ftadd@f1,?___ftadd
  8514  006A1A  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
  8515  006A1E  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
  8516  006A22  0012               	return	
  8517  006A24                     l3812:
  8518                           
  8519                           ; BSR set to: 0
  8520                           
  8521                           ; BSR set to: 0
  8522  006A24  0E06               	movlw	6
  8523  006A26  6F96               	movwf	___ftadd@sign& (0+255),b
  8524                           
  8525                           ; BSR set to: 0
  8526  006A28  BF8F               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8527                           
  8528                           ; BSR set to: 0
  8529  006A2A  8F96               	bsf	___ftadd@sign& (0+255),7,b
  8530                           
  8531                           ; BSR set to: 0
  8532                           
  8533                           ; BSR set to: 0
  8534  006A2C  BF92               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8535                           
  8536                           ; BSR set to: 0
  8537  006A2E  8D96               	bsf	___ftadd@sign& (0+255),6,b
  8538                           
  8539                           ; BSR set to: 0
  8540  006A30  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8541                           
  8542                           ; BSR set to: 0
  8543  006A32  0EFF               	movlw	255
  8544  006A34  178D               	andwf	___ftadd@f1& (0+255),f,b
  8545  006A36  0EFF               	movlw	255
  8546  006A38  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8547  006A3A  0E00               	movlw	0
  8548  006A3C  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8549  006A3E  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8550                           
  8551                           ; BSR set to: 0
  8552  006A40  0EFF               	movlw	255
  8553  006A42  1790               	andwf	___ftadd@f2& (0+255),f,b
  8554  006A44  0EFF               	movlw	255
  8555  006A46  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8556  006A48  0E00               	movlw	0
  8557  006A4A  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8558                           
  8559                           ; BSR set to: 0
  8560  006A4C  5197               	movf	___ftadd@exp2& (0+255),w,b
  8561  006A4E  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  8562  006A50  B0D8               	btfsc	status,0,c
  8563  006A52  D01B               	goto	l3817
  8564  006A54                     u16210:
  8565                           
  8566                           ; BSR set to: 0
  8567                           
  8568                           ; BSR set to: 0
  8569  006A54  90D8               	bcf	status,0,c
  8570  006A56  3790               	rlcf	___ftadd@f2& (0+255),f,b
  8571  006A58  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8572  006A5A  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8573  006A5C  0797               	decf	___ftadd@exp2& (0+255),f,b
  8574                           
  8575                           ; BSR set to: 0
  8576  006A5E  5198               	movf	___ftadd@exp1& (0+255),w,b
  8577  006A60  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  8578  006A62  B4D8               	btfsc	status,2,c
  8579  006A64  D00D               	goto	l3822
  8580                           
  8581                           ; BSR set to: 0
  8582  006A66  0796               	decf	___ftadd@sign& (0+255),f,b
  8583  006A68  C096  F093         	movff	___ftadd@sign,??___ftadd
  8584  006A6C  0E07               	movlw	7
  8585  006A6E  1793               	andwf	??___ftadd& (0+255),f,b
  8586  006A70  B4D8               	btfsc	status,2,c
  8587  006A72  D006               	goto	l3822
  8588  006A74  D7EF               	goto	u16210
  8589  006A76                     
  8590                           ; BSR set to: 0
  8591                           
  8592                           ; BSR set to: 0
  8593  006A76  90D8               	bcf	status,0,c
  8594  006A78  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8595  006A7A  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8596  006A7C  338D               	rrcf	___ftadd@f1& (0+255),f,b
  8597  006A7E  2B98               	incf	___ftadd@exp1& (0+255),f,b
  8598  006A80                     l3822:
  8599                           
  8600                           ; BSR set to: 0
  8601                           
  8602                           ; BSR set to: 0
  8603  006A80  5197               	movf	___ftadd@exp2& (0+255),w,b
  8604  006A82  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  8605  006A84  B4D8               	btfsc	status,2,c
  8606  006A86  D01F               	goto	u16280
  8607  006A88  D7F6               	goto	l3823
  8608  006A8A                     l3817:
  8609                           
  8610                           ; BSR set to: 0
  8611                           
  8612                           ; BSR set to: 0
  8613  006A8A  5198               	movf	___ftadd@exp1& (0+255),w,b
  8614  006A8C  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  8615  006A8E  B0D8               	btfsc	status,0,c
  8616  006A90  D01A               	goto	u16280
  8617  006A92                     u16250:
  8618                           
  8619                           ; BSR set to: 0
  8620                           
  8621                           ; BSR set to: 0
  8622  006A92  90D8               	bcf	status,0,c
  8623  006A94  378D               	rlcf	___ftadd@f1& (0+255),f,b
  8624  006A96  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8625  006A98  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8626  006A9A  0798               	decf	___ftadd@exp1& (0+255),f,b
  8627                           
  8628                           ; BSR set to: 0
  8629  006A9C  5198               	movf	___ftadd@exp1& (0+255),w,b
  8630  006A9E  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  8631  006AA0  B4D8               	btfsc	status,2,c
  8632  006AA2  D00D               	goto	l3831
  8633                           
  8634                           ; BSR set to: 0
  8635  006AA4  0796               	decf	___ftadd@sign& (0+255),f,b
  8636  006AA6  C096  F093         	movff	___ftadd@sign,??___ftadd
  8637  006AAA  0E07               	movlw	7
  8638  006AAC  1793               	andwf	??___ftadd& (0+255),f,b
  8639  006AAE  B4D8               	btfsc	status,2,c
  8640  006AB0  D006               	goto	l3831
  8641  006AB2  D7EF               	goto	u16250
  8642  006AB4                     
  8643                           ; BSR set to: 0
  8644                           
  8645                           ; BSR set to: 0
  8646  006AB4  90D8               	bcf	status,0,c
  8647  006AB6  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8648  006AB8  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8649  006ABA  3390               	rrcf	___ftadd@f2& (0+255),f,b
  8650  006ABC  2B97               	incf	___ftadd@exp2& (0+255),f,b
  8651  006ABE                     l3831:
  8652                           
  8653                           ; BSR set to: 0
  8654                           
  8655                           ; BSR set to: 0
  8656  006ABE  5197               	movf	___ftadd@exp2& (0+255),w,b
  8657  006AC0  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  8658  006AC2  A4D8               	btfss	status,2,c
  8659  006AC4  D7F7               	goto	l3832
  8660  006AC6                     u16280:
  8661                           
  8662                           ; BSR set to: 0
  8663                           
  8664                           ; BSR set to: 0
  8665                           
  8666                           ; BSR set to: 0
  8667  006AC6  AF96               	btfss	___ftadd@sign& (0+255),7,b
  8668  006AC8  D00C               	goto	l3834
  8669                           
  8670                           ; BSR set to: 0
  8671  006ACA  0EFF               	movlw	255
  8672  006ACC  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
  8673  006ACE  0EFF               	movlw	255
  8674  006AD0  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8675  006AD2  0EFF               	movlw	255
  8676  006AD4  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8677  006AD6  0E01               	movlw	1
  8678  006AD8  278D               	addwf	___ftadd@f1& (0+255),f,b
  8679  006ADA  0E00               	movlw	0
  8680  006ADC  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8681  006ADE  0E00               	movlw	0
  8682  006AE0  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8683  006AE2                     l3834:
  8684                           
  8685                           ; BSR set to: 0
  8686  006AE2  AD96               	btfss	___ftadd@sign& (0+255),6,b
  8687  006AE4  D00C               	goto	l3835
  8688                           
  8689                           ; BSR set to: 0
  8690  006AE6  0EFF               	movlw	255
  8691  006AE8  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  8692  006AEA  0EFF               	movlw	255
  8693  006AEC  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8694  006AEE  0EFF               	movlw	255
  8695  006AF0  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8696  006AF2  0E01               	movlw	1
  8697  006AF4  2790               	addwf	___ftadd@f2& (0+255),f,b
  8698  006AF6  0E00               	movlw	0
  8699  006AF8  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8700  006AFA  0E00               	movlw	0
  8701  006AFC  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8702  006AFE                     l3835:
  8703                           
  8704                           ; BSR set to: 0
  8705                           
  8706                           ; BSR set to: 0
  8707  006AFE  0E00               	movlw	0
  8708  006B00  6F96               	movwf	___ftadd@sign& (0+255),b
  8709                           
  8710                           ; BSR set to: 0
  8711  006B02  518D               	movf	___ftadd@f1& (0+255),w,b
  8712  006B04  2790               	addwf	___ftadd@f2& (0+255),f,b
  8713  006B06  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
  8714  006B08  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8715  006B0A  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
  8716  006B0C  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  006B0E  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8720  006B10  D00E               	goto	l3836
  8721                           
  8722                           ; BSR set to: 0
  8723  006B12  0EFF               	movlw	255
  8724  006B14  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  8725  006B16  0EFF               	movlw	255
  8726  006B18  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8727  006B1A  0EFF               	movlw	255
  8728  006B1C  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8729  006B1E  0E01               	movlw	1
  8730  006B20  2790               	addwf	___ftadd@f2& (0+255),f,b
  8731  006B22  0E00               	movlw	0
  8732  006B24  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8733  006B26  0E00               	movlw	0
  8734  006B28  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8735                           
  8736                           ; BSR set to: 0
  8737  006B2A  0E01               	movlw	1
  8738  006B2C  6F96               	movwf	___ftadd@sign& (0+255),b
  8739  006B2E                     l3836:
  8740                           
  8741                           ; BSR set to: 0
  8742                           
  8743                           ; BSR set to: 0
  8744  006B2E  C090  F060         	movff	___ftadd@f2,___ftpack@arg
  8745  006B32  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  8746  006B36  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  8747  006B3A  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
  8748  006B3E  C096  F064         	movff	___ftadd@sign,___ftpack@sign
  8749  006B42  EC60  F04B         	call	___ftpack	;wreg free
  8750  006B46  C060  F08D         	movff	?___ftpack,?___ftadd
  8751  006B4A  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
  8752  006B4E  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
  8753  006B52  0012               	return	
  8754  006B54                     __end_of___ftadd:
  8755                           	opt stack 0
  8756                           tblptru	equ	0xFF8
  8757                           tblptrh	equ	0xFF7
  8758                           tblptrl	equ	0xFF6
  8759                           tablat	equ	0xFF5
  8760                           prodh	equ	0xFF4
  8761                           prodl	equ	0xFF3
  8762                           intcon	equ	0xFF2
  8763                           postinc0	equ	0xFEE
  8764                           wreg	equ	0xFE8
  8765                           indf2	equ	0xFDF
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function ___ftneg *****************
  8773 ;; Defined at:
  8774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  f1              3    0[BANK0 ] float 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;		None
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  3    0[BANK0 ] float 
  8781 ;; Registers used:
  8782 ;;		wreg, status,2, status,0
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8788 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;Total ram usage:        3 bytes
  8793 ;; Hardware stack levels used:    1
  8794 ;; Hardware stack levels required when called:    7
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_printf
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text14
  8803  00BD74                     __ptext14:
  8804                           	opt stack 0
  8805  00BD74                     ___ftneg:
  8806                           	opt stack 22
  8807                           
  8808                           ;incstack = 0
  8809  00BD74  0100               	movlb	0	; () banked
  8810  00BD76  5160               	movf	___ftneg@f1& (0+255),w,b
  8811  00BD78  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8812  00BD7A  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8813  00BD7C  B4D8               	btfsc	status,2,c
  8814  00BD7E  D006               	goto	l3884
  8815                           
  8816                           ; BSR set to: 0
  8817  00BD80  0E00               	movlw	0
  8818  00BD82  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  8819  00BD84  0E00               	movlw	0
  8820  00BD86  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8821  00BD88  0E80               	movlw	128
  8822  00BD8A  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8823  00BD8C                     l3884:
  8824                           
  8825                           ; BSR set to: 0
  8826  00BD8C  C060  F060         	movff	___ftneg@f1,?___ftneg
  8827  00BD90  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  8828  00BD94  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  8829                           
  8830                           ; BSR set to: 0
  8831  00BD98  0012               	return		;funcret
  8832  00BD9A                     __end_of___ftneg:
  8833                           	opt stack 0
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           intcon	equ	0xFF2
  8841                           postinc0	equ	0xFEE
  8842                           wreg	equ	0xFE8
  8843                           indf2	equ	0xFDF
  8844                           postinc2	equ	0xFDE
  8845                           postdec2	equ	0xFDD
  8846                           fsr2h	equ	0xFDA
  8847                           fsr2l	equ	0xFD9
  8848                           status	equ	0xFD8
  8849                           
  8850 ;; *************** function ___ftge *****************
  8851 ;; Defined at:
  8852 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  ff1             3    0[BANK0 ] float 
  8855 ;;  ff2             3    3[BANK0 ] float 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;		None               void
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;Total ram usage:        9 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    7
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_printf
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text15
  8882  009C74                     __ptext15:
  8883                           	opt stack 0
  8884  009C74                     ___ftge:
  8885                           	opt stack 22
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;incstack = 0
  8889  009C74  0100               	movlb	0	; () banked
  8890  009C76  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8891  009C78  D016               	goto	l3866
  8892                           
  8893                           ; BSR set to: 0
  8894  009C7A  C060  F066         	movff	___ftge@ff1,??___ftge
  8895  009C7E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  8896  009C82  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  8897  009C86  1F66               	comf	??___ftge& (0+255),f,b
  8898  009C88  1F67               	comf	(??___ftge+1)& (0+255),f,b
  8899  009C8A  1F68               	comf	(??___ftge+2)& (0+255),f,b
  8900  009C8C  2B66               	incf	??___ftge& (0+255),f,b
  8901  009C8E  0E00               	movlw	0
  8902  009C90  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  8903  009C92  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  8904  009C94  0E00               	movlw	0
  8905  009C96  2566               	addwf	??___ftge& (0+255),w,b
  8906  009C98  6F60               	movwf	___ftge@ff1& (0+255),b
  8907  009C9A  0E00               	movlw	0
  8908  009C9C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  8909  009C9E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  8910  009CA0  0E80               	movlw	128
  8911  009CA2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  8912  009CA4  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  8913  009CA6                     l3866:
  8914                           
  8915                           ; BSR set to: 0
  8916                           
  8917                           ; BSR set to: 0
  8918  009CA6  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8919  009CA8  D016               	goto	l3867
  8920                           
  8921                           ; BSR set to: 0
  8922  009CAA  C063  F066         	movff	___ftge@ff2,??___ftge
  8923  009CAE  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  8924  009CB2  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  8925  009CB6  1F66               	comf	??___ftge& (0+255),f,b
  8926  009CB8  1F67               	comf	(??___ftge+1)& (0+255),f,b
  8927  009CBA  1F68               	comf	(??___ftge+2)& (0+255),f,b
  8928  009CBC  2B66               	incf	??___ftge& (0+255),f,b
  8929  009CBE  0E00               	movlw	0
  8930  009CC0  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  8931  009CC2  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  8932  009CC4  0E00               	movlw	0
  8933  009CC6  2566               	addwf	??___ftge& (0+255),w,b
  8934  009CC8  6F63               	movwf	___ftge@ff2& (0+255),b
  8935  009CCA  0E00               	movlw	0
  8936  009CCC  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  8937  009CCE  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  8938  009CD0  0E80               	movlw	128
  8939  009CD2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  8940  009CD4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  8941  009CD6                     l3867:
  8942                           
  8943                           ; BSR set to: 0
  8944                           
  8945                           ; BSR set to: 0
  8946  009CD6  0E00               	movlw	0
  8947  009CD8  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  8948  009CDA  0E00               	movlw	0
  8949  009CDC  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8950  009CDE  0E80               	movlw	128
  8951  009CE0  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8952                           
  8953                           ; BSR set to: 0
  8954  009CE2  0E00               	movlw	0
  8955  009CE4  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  8956  009CE6  0E00               	movlw	0
  8957  009CE8  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8958  009CEA  0E80               	movlw	128
  8959  009CEC  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8960  009CEE  5163               	movf	___ftge@ff2& (0+255),w,b
  8961  009CF0  5D60               	subwf	___ftge@ff1& (0+255),w,b
  8962  009CF2  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  8963  009CF4  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8964  009CF6  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  8965  009CF8  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8966  009CFA  B0D8               	btfsc	status,0,c
  8967  009CFC  D002               	goto	l10878
  8968                           
  8969                           ; BSR set to: 0
  8970  009CFE  90D8               	bcf	status,0,c
  8971  009D00  0012               	return	
  8972  009D02                     l10878:
  8973                           
  8974                           ; BSR set to: 0
  8975                           
  8976                           ; BSR set to: 0
  8977  009D02  80D8               	bsf	status,0,c
  8978                           
  8979                           ; BSR set to: 0
  8980  009D04  0012               	return	
  8981  009D06                     __end_of___ftge:
  8982                           	opt stack 0
  8983                           tblptru	equ	0xFF8
  8984                           tblptrh	equ	0xFF7
  8985                           tblptrl	equ	0xFF6
  8986                           tablat	equ	0xFF5
  8987                           prodh	equ	0xFF4
  8988                           prodl	equ	0xFF3
  8989                           intcon	equ	0xFF2
  8990                           postinc0	equ	0xFEE
  8991                           wreg	equ	0xFE8
  8992                           indf2	equ	0xFDF
  8993                           postinc2	equ	0xFDE
  8994                           postdec2	equ	0xFDD
  8995                           fsr2h	equ	0xFDA
  8996                           fsr2l	equ	0xFD9
  8997                           status	equ	0xFD8
  8998                           
  8999 ;; *************** function ___lwtoft *****************
  9000 ;; Defined at:
  9001 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  c               2    8[BANK0 ] unsigned int 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  3    8[BANK0 ] float 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9015 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;Total ram usage:        3 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    8
  9022 ;; This function calls:
  9023 ;;		___ftpack
  9024 ;; This function is called by:
  9025 ;;		_main
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text16
  9030  00BD9A                     __ptext16:
  9031                           	opt stack 0
  9032  00BD9A                     ___lwtoft:
  9033                           	opt stack 22
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;incstack = 0
  9037  00BD9A  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  9038  00BD9E  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  9039  00BDA2  0100               	movlb	0	; () banked
  9040  00BDA4  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  9041  00BDA6  0E8E               	movlw	142
  9042  00BDA8  6F63               	movwf	___ftpack@exp& (0+255),b
  9043  00BDAA  0E00               	movlw	0
  9044  00BDAC  6F64               	movwf	___ftpack@sign& (0+255),b
  9045  00BDAE  EC60  F04B         	call	___ftpack	;wreg free
  9046  00BDB2  C060  F068         	movff	?___ftpack,?___lwtoft
  9047  00BDB6  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  9048  00BDBA  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  9049  00BDBE  0012               	return	
  9050  00BDC0                     __end_of___lwtoft:
  9051                           	opt stack 0
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           postinc0	equ	0xFEE
  9060                           wreg	equ	0xFE8
  9061                           indf2	equ	0xFDF
  9062                           postinc2	equ	0xFDE
  9063                           postdec2	equ	0xFDD
  9064                           fsr2h	equ	0xFDA
  9065                           fsr2l	equ	0xFD9
  9066                           status	equ	0xFD8
  9067                           
  9068 ;; *************** function _Weather_readSensors *****************
  9069 ;; Defined at:
  9070 ;;		line 77 in file "mcc_generated_files/weather.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;		None
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;		None
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      void 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:   19
  9091 ;; This function calls:
  9092 ;;		_BME280_isMeasuring
  9093 ;;		_BME280_readMeasurements
  9094 ;;		_BME280_startForcedSensing
  9095 ;;		_Weather_initializeClick
  9096 ;; This function is called by:
  9097 ;;		_main
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text17
  9102  00C0B6                     __ptext17:
  9103                           	opt stack 0
  9104  00C0B6                     _Weather_readSensors:
  9105                           	opt stack 11
  9106                           
  9107                           ;weather.c: 79: if (!weather_initialized)
  9108                           
  9109                           ;incstack = 0
  9110  00C0B6  0101               	movlb	1	; () banked
  9111  00C0B8  512C               	movf	_weather_initialized& (0+255),w,b
  9112  00C0BA  B4D8               	btfsc	status,2,c
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;weather.c: 80: {
  9116                           ;weather.c: 81: Weather_initializeClick();
  9117  00C0BC  EC5A  F059         	call	_Weather_initializeClick	;wreg free
  9118                           
  9119                           ;weather.c: 85: {
  9120                           ;weather.c: 86: BME280_startForcedSensing();
  9121                           
  9122                           ;weather.c: 82: }
  9123                           ;weather.c: 84: if (0x01 == 0x01)
  9124  00C0C0  EC3D  F061         	call	_BME280_startForcedSensing	;wreg free
  9125  00C0C4                     
  9126                           ;weather.c: 90: {
  9127                           
  9128                           ;weather.c: 87: }
  9129                           ;weather.c: 89: while(BME280_isMeasuring())
  9130  00C0C4  EC73  F061         	call	_BME280_isMeasuring	;wreg free
  9131  00C0C8  0900               	iorlw	0
  9132  00C0CA  A4D8               	btfss	status,2,c
  9133  00C0CC  D7FB               	goto	l3155
  9134                           
  9135                           ;weather.c: 92: }
  9136                           ;weather.c: 93: BME280_readMeasurements();
  9137  00C0CE  EC92  F03D         	call	_BME280_readMeasurements	;wreg free
  9138  00C0D2  0012               	return		;funcret
  9139  00C0D4                     __end_of_Weather_readSensors:
  9140                           	opt stack 0
  9141                           tblptru	equ	0xFF8
  9142                           tblptrh	equ	0xFF7
  9143                           tblptrl	equ	0xFF6
  9144                           tablat	equ	0xFF5
  9145                           prodh	equ	0xFF4
  9146                           prodl	equ	0xFF3
  9147                           intcon	equ	0xFF2
  9148                           postinc0	equ	0xFEE
  9149                           wreg	equ	0xFE8
  9150                           indf2	equ	0xFDF
  9151                           postinc2	equ	0xFDE
  9152                           postdec2	equ	0xFDD
  9153                           fsr2h	equ	0xFDA
  9154                           fsr2l	equ	0xFD9
  9155                           status	equ	0xFD8
  9156                           
  9157 ;; *************** function _Weather_initializeClick *****************
  9158 ;; Defined at:
  9159 ;;		line 54 in file "mcc_generated_files/weather.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:   18
  9180 ;; This function calls:
  9181 ;;		_BME280_initializeSensor
  9182 ;;		_BME280_readFactoryCalibrationParams
  9183 ;;		_BME280_reset
  9184 ;;		_BME280_setFilterCoefficient
  9185 ;;		_BME280_setOversamplingHumidity
  9186 ;;		_BME280_setOversamplingPressure
  9187 ;;		_BME280_setOversamplingTemperature
  9188 ;;		_BME280_setSensorMode
  9189 ;;		_BME280_setStandbyTime
  9190 ;;		_DELAY_milliseconds
  9191 ;; This function is called by:
  9192 ;;		_Weather_readSensors
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text18
  9197  00B2B4                     __ptext18:
  9198                           	opt stack 0
  9199  00B2B4                     _Weather_initializeClick:
  9200                           	opt stack 11
  9201                           
  9202                           ;weather.c: 56: BME280_reset();
  9203                           
  9204                           ;incstack = 0
  9205  00B2B4  EC54  F062         	call	_BME280_reset	;wreg free
  9206                           
  9207                           ;weather.c: 58: DELAY_milliseconds(5);
  9208  00B2B8  0E00               	movlw	0
  9209  00B2BA  0100               	movlb	0	; () banked
  9210  00B2BC  6F61               	movwf	(DELAY_milliseconds@milliseconds+1)& (0+255),b
  9211  00B2BE  0E05               	movlw	5
  9212  00B2C0  6F60               	movwf	DELAY_milliseconds@milliseconds& (0+255),b
  9213  00B2C2  EC42  F05E         	call	_DELAY_milliseconds	;wreg free
  9214                           
  9215                           ;weather.c: 60: BME280_readFactoryCalibrationParams();
  9216  00B2C6  EC17  F032         	call	_BME280_readFactoryCalibrationParams	;wreg free
  9217                           
  9218                           ;weather.c: 62: BME280_setStandbyTime(0x00);
  9219  00B2CA  0E00               	movlw	0
  9220  00B2CC  EC6A  F060         	call	_BME280_setStandbyTime
  9221                           
  9222                           ;weather.c: 63: BME280_setFilterCoefficient(0x00);
  9223  00B2D0  0E00               	movlw	0
  9224  00B2D2  EC79  F060         	call	_BME280_setFilterCoefficient
  9225                           
  9226                           ;weather.c: 64: BME280_setOversamplingTemperature(0x01);
  9227  00B2D6  0E01               	movlw	1
  9228  00B2D8  EC8B  F05F         	call	_BME280_setOversamplingTemperature
  9229                           
  9230                           ;weather.c: 65: BME280_setOversamplingPressure(0x01);
  9231  00B2DC  0E01               	movlw	1
  9232  00B2DE  EC9B  F05F         	call	_BME280_setOversamplingPressure
  9233                           
  9234                           ;weather.c: 66: BME280_setOversamplingHumidity(0x01);
  9235  00B2E2  0E01               	movlw	1
  9236  00B2E4  EC8F  F062         	call	_BME280_setOversamplingHumidity
  9237                           
  9238                           ;weather.c: 67: BME280_setSensorMode(0x01);
  9239  00B2E8  0E01               	movlw	1
  9240  00B2EA  EC32  F061         	call	_BME280_setSensorMode
  9241                           
  9242                           ;weather.c: 68: BME280_initializeSensor();
  9243  00B2EE  ECAB  F05F         	call	_BME280_initializeSensor	;wreg free
  9244                           
  9245                           ;weather.c: 70: weather_initialized = 1;
  9246  00B2F2  0E01               	movlw	1
  9247  00B2F4  0101               	movlb	1	; () banked
  9248  00B2F6  6F2C               	movwf	_weather_initialized& (0+255),b
  9249                           
  9250                           ; BSR set to: 1
  9251  00B2F8  0012               	return		;funcret
  9252  00B2FA                     __end_of_Weather_initializeClick:
  9253                           	opt stack 0
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           postdec2	equ	0xFDD
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8
  9269                           
  9270 ;; *************** function _DELAY_milliseconds *****************
  9271 ;; Defined at:
  9272 ;;		line 27 in file "mcc_generated_files/delay.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  milliseconds    2    0[BANK0 ] unsigned int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;Total ram usage:        3 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    7
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_Weather_initializeClick
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text19
  9301  00BC84                     __ptext19:
  9302                           	opt stack 0
  9303  00BC84                     _DELAY_milliseconds:
  9304                           	opt stack 21
  9305                           
  9306                           ;delay.c: 28: while(milliseconds--){
  9307                           
  9308                           ; BSR set to: 1
  9309                           ;incstack = 0
  9310  00BC84  D009               	goto	l3319
  9311  00BC86                     l15164:
  9312                           
  9313                           ;delay.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  9314  00BC86  0E06               	movlw	6
  9315  00BC88  0100               	movlb	0	; () banked
  9316  00BC8A  6F62               	movwf	??_DELAY_milliseconds& (0+255),b
  9317  00BC8C  0E30               	movlw	48
  9318  00BC8E                     u29117:
  9319  00BC8E  2EE8               	decfsz	wreg,f,c
  9320  00BC90  D7FE               	bra	u29117
  9321  00BC92  2F62               	decfsz	??_DELAY_milliseconds& (0+255),f,b
  9322  00BC94  D7FC               	bra	u29117
  9323  00BC96  F000               	nop	
  9324  00BC98                     l3319:
  9325  00BC98  0100               	movlb	0	; () banked
  9326  00BC9A  0760               	decf	DELAY_milliseconds@milliseconds& (0+255),f,b
  9327  00BC9C  A0D8               	btfss	status,0,c
  9328  00BC9E  0761               	decf	(DELAY_milliseconds@milliseconds+1)& (0+255),f,b
  9329  00BCA0  2960               	incf	DELAY_milliseconds@milliseconds& (0+255),w,b
  9330  00BCA2  E1F1               	bnz	l15164
  9331  00BCA4  2961               	incf	(DELAY_milliseconds@milliseconds+1)& (0+255),w,b
  9332  00BCA6  B4D8               	btfsc	status,2,c
  9333  00BCA8  0012               	return	
  9334  00BCAA  D7ED               	goto	l3320
  9335  00BCAC                     __end_of_DELAY_milliseconds:
  9336                           	opt stack 0
  9337                           tblptru	equ	0xFF8
  9338                           tblptrh	equ	0xFF7
  9339                           tblptrl	equ	0xFF6
  9340                           tablat	equ	0xFF5
  9341                           prodh	equ	0xFF4
  9342                           prodl	equ	0xFF3
  9343                           intcon	equ	0xFF2
  9344                           postinc0	equ	0xFEE
  9345                           wreg	equ	0xFE8
  9346                           indf2	equ	0xFDF
  9347                           postinc2	equ	0xFDE
  9348                           postdec2	equ	0xFDD
  9349                           fsr2h	equ	0xFDA
  9350                           fsr2l	equ	0xFD9
  9351                           status	equ	0xFD8
  9352                           
  9353 ;; *************** function _BME280_setStandbyTime *****************
  9354 ;; Defined at:
  9355 ;;		line 228 in file "mcc_generated_files/bme280.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  sbtime          1    wreg     unsigned char 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  sbtime          1    1[BANK0 ] unsigned char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;Total ram usage:        2 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    7
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_Weather_initializeClick
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text20
  9384  00C0D4                     __ptext20:
  9385                           	opt stack 0
  9386  00C0D4                     _BME280_setStandbyTime:
  9387                           	opt stack 21
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;incstack = 0
  9391                           ;BME280_setStandbyTime@sbtime stored from wreg
  9392  00C0D4  0100               	movlb	0	; () banked
  9393  00C0D6  6F61               	movwf	BME280_setStandbyTime@sbtime& (0+255),b
  9394                           
  9395                           ;bme280.c: 230: bme280_config.t_sb = sbtime;
  9396  00C0D8  C061  F060         	movff	BME280_setStandbyTime@sbtime,??_BME280_setStandbyTime
  9397  00C0DC  0100               	movlb	0	; () banked
  9398  00C0DE  3B60               	swapf	??_BME280_setStandbyTime& (0+255),f,b
  9399  00C0E0  0101               	movlb	1	; () banked
  9400  00C0E2  5130               	movf	_bme280_config& (0+255),w,b
  9401  00C0E4  0100               	movlb	0	; () banked
  9402  00C0E6  1960               	xorwf	??_BME280_setStandbyTime& (0+255),w,b
  9403  00C0E8  0B8F               	andlw	-113
  9404  00C0EA  1960               	xorwf	??_BME280_setStandbyTime& (0+255),w,b
  9405  00C0EC  0101               	movlb	1	; () banked
  9406  00C0EE  6F30               	movwf	_bme280_config& (0+255),b
  9407                           
  9408                           ; BSR set to: 1
  9409  00C0F0  0012               	return		;funcret
  9410  00C0F2                     __end_of_BME280_setStandbyTime:
  9411                           	opt stack 0
  9412                           tblptru	equ	0xFF8
  9413                           tblptrh	equ	0xFF7
  9414                           tblptrl	equ	0xFF6
  9415                           tablat	equ	0xFF5
  9416                           prodh	equ	0xFF4
  9417                           prodl	equ	0xFF3
  9418                           intcon	equ	0xFF2
  9419                           postinc0	equ	0xFEE
  9420                           wreg	equ	0xFE8
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           fsr2h	equ	0xFDA
  9425                           fsr2l	equ	0xFD9
  9426                           status	equ	0xFD8
  9427                           
  9428 ;; *************** function _BME280_setSensorMode *****************
  9429 ;; Defined at:
  9430 ;;		line 253 in file "mcc_generated_files/bme280.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  mode            1    wreg     unsigned char 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  mode            1    0[BANK0 ] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;Total ram usage:        1 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    7
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_Weather_initializeClick
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text21
  9459  00C264                     __ptext21:
  9460                           	opt stack 0
  9461  00C264                     _BME280_setSensorMode:
  9462                           	opt stack 21
  9463                           
  9464                           ; BSR set to: 1
  9465                           ;incstack = 0
  9466                           ;BME280_setSensorMode@mode stored from wreg
  9467  00C264  0100               	movlb	0	; () banked
  9468  00C266  6F60               	movwf	BME280_setSensorMode@mode& (0+255),b
  9469                           
  9470                           ;bme280.c: 255: bme280_ctrl_meas.mode = mode;
  9471  00C268  0101               	movlb	1	; () banked
  9472  00C26A  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9473  00C26C  0100               	movlb	0	; () banked
  9474  00C26E  1960               	xorwf	BME280_setSensorMode@mode& (0+255),w,b
  9475  00C270  0BFC               	andlw	-4
  9476  00C272  1960               	xorwf	BME280_setSensorMode@mode& (0+255),w,b
  9477  00C274  0101               	movlb	1	; () banked
  9478  00C276  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9479                           
  9480                           ; BSR set to: 1
  9481  00C278  0012               	return		;funcret
  9482  00C27A                     __end_of_BME280_setSensorMode:
  9483                           	opt stack 0
  9484                           tblptru	equ	0xFF8
  9485                           tblptrh	equ	0xFF7
  9486                           tblptrl	equ	0xFF6
  9487                           tablat	equ	0xFF5
  9488                           prodh	equ	0xFF4
  9489                           prodl	equ	0xFF3
  9490                           intcon	equ	0xFF2
  9491                           postinc0	equ	0xFEE
  9492                           wreg	equ	0xFE8
  9493                           indf2	equ	0xFDF
  9494                           postinc2	equ	0xFDE
  9495                           postdec2	equ	0xFDD
  9496                           fsr2h	equ	0xFDA
  9497                           fsr2l	equ	0xFD9
  9498                           status	equ	0xFD8
  9499                           
  9500 ;; *************** function _BME280_setOversamplingTemperature *****************
  9501 ;; Defined at:
  9502 ;;		line 238 in file "mcc_generated_files/bme280.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  osrs_t          1    wreg     unsigned char 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  osrs_t          1    1[BANK0 ] unsigned char 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;Total ram usage:        2 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    7
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_Weather_initializeClick
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text22
  9531  00BF16                     __ptext22:
  9532                           	opt stack 0
  9533  00BF16                     _BME280_setOversamplingTemperature:
  9534                           	opt stack 21
  9535                           
  9536                           ; BSR set to: 1
  9537                           ;incstack = 0
  9538                           ;BME280_setOversamplingTemperature@osrs_t stored from wreg
  9539  00BF16  0100               	movlb	0	; () banked
  9540  00BF18  6F61               	movwf	BME280_setOversamplingTemperature@osrs_t& (0+255),b
  9541                           
  9542                           ;bme280.c: 240: bme280_ctrl_meas.osrs_T = osrs_t;
  9543  00BF1A  C061  F060         	movff	BME280_setOversamplingTemperature@osrs_t,??_BME280_setOversamplingTemperature
  9544  00BF1E  0100               	movlb	0	; () banked
  9545  00BF20  3B60               	swapf	??_BME280_setOversamplingTemperature& (0+255),f,b
  9546  00BF22  4760               	rlncf	??_BME280_setOversamplingTemperature& (0+255),f,b
  9547  00BF24  0101               	movlb	1	; () banked
  9548  00BF26  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9549  00BF28  0100               	movlb	0	; () banked
  9550  00BF2A  1960               	xorwf	??_BME280_setOversamplingTemperature& (0+255),w,b
  9551  00BF2C  0B1F               	andlw	-225
  9552  00BF2E  1960               	xorwf	??_BME280_setOversamplingTemperature& (0+255),w,b
  9553  00BF30  0101               	movlb	1	; () banked
  9554  00BF32  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9555                           
  9556                           ; BSR set to: 1
  9557  00BF34  0012               	return		;funcret
  9558  00BF36                     __end_of_BME280_setOversamplingTemperature:
  9559                           	opt stack 0
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           postinc0	equ	0xFEE
  9568                           wreg	equ	0xFE8
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           postdec2	equ	0xFDD
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           
  9576 ;; *************** function _BME280_setOversamplingPressure *****************
  9577 ;; Defined at:
  9578 ;;		line 243 in file "mcc_generated_files/bme280.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  osrs_p          1    wreg     unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  osrs_p          1    1[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;Total ram usage:        2 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    7
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_Weather_initializeClick
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           	psect	text23
  9607  00BF36                     __ptext23:
  9608                           	opt stack 0
  9609  00BF36                     _BME280_setOversamplingPressure:
  9610                           	opt stack 21
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;incstack = 0
  9614                           ;BME280_setOversamplingPressure@osrs_p stored from wreg
  9615  00BF36  0100               	movlb	0	; () banked
  9616  00BF38  6F61               	movwf	BME280_setOversamplingPressure@osrs_p& (0+255),b
  9617                           
  9618                           ;bme280.c: 245: bme280_ctrl_meas.osrs_P = osrs_p;
  9619  00BF3A  C061  F060         	movff	BME280_setOversamplingPressure@osrs_p,??_BME280_setOversamplingPressure
  9620  00BF3E  0100               	movlb	0	; () banked
  9621  00BF40  4760               	rlncf	??_BME280_setOversamplingPressure& (0+255),f,b
  9622  00BF42  4760               	rlncf	??_BME280_setOversamplingPressure& (0+255),f,b
  9623  00BF44  0101               	movlb	1	; () banked
  9624  00BF46  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
  9625  00BF48  0100               	movlb	0	; () banked
  9626  00BF4A  1960               	xorwf	??_BME280_setOversamplingPressure& (0+255),w,b
  9627  00BF4C  0BE3               	andlw	-29
  9628  00BF4E  1960               	xorwf	??_BME280_setOversamplingPressure& (0+255),w,b
  9629  00BF50  0101               	movlb	1	; () banked
  9630  00BF52  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
  9631                           
  9632                           ; BSR set to: 1
  9633  00BF54  0012               	return		;funcret
  9634  00BF56                     __end_of_BME280_setOversamplingPressure:
  9635                           	opt stack 0
  9636                           tblptru	equ	0xFF8
  9637                           tblptrh	equ	0xFF7
  9638                           tblptrl	equ	0xFF6
  9639                           tablat	equ	0xFF5
  9640                           prodh	equ	0xFF4
  9641                           prodl	equ	0xFF3
  9642                           intcon	equ	0xFF2
  9643                           postinc0	equ	0xFEE
  9644                           wreg	equ	0xFE8
  9645                           indf2	equ	0xFDF
  9646                           postinc2	equ	0xFDE
  9647                           postdec2	equ	0xFDD
  9648                           fsr2h	equ	0xFDA
  9649                           fsr2l	equ	0xFD9
  9650                           status	equ	0xFD8
  9651                           
  9652 ;; *************** function _BME280_setOversamplingHumidity *****************
  9653 ;; Defined at:
  9654 ;;		line 248 in file "mcc_generated_files/bme280.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  osrs_h          1    wreg     unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  osrs_h          1    0[BANK0 ] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;Total ram usage:        1 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    7
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_Weather_initializeClick
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text24
  9683  00C51E                     __ptext24:
  9684                           	opt stack 0
  9685  00C51E                     _BME280_setOversamplingHumidity:
  9686                           	opt stack 21
  9687                           
  9688                           ; BSR set to: 1
  9689                           ;incstack = 0
  9690                           ;BME280_setOversamplingHumidity@osrs_h stored from wreg
  9691  00C51E  0100               	movlb	0	; () banked
  9692  00C520  6F60               	movwf	BME280_setOversamplingHumidity@osrs_h& (0+255),b
  9693                           
  9694                           ;bme280.c: 250: bme280_ctrl_hum = osrs_h;
  9695  00C522  C060  F12F         	movff	BME280_setOversamplingHumidity@osrs_h,_bme280_ctrl_hum
  9696  00C526  0012               	return		;funcret
  9697  00C528                     __end_of_BME280_setOversamplingHumidity:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           postinc0	equ	0xFEE
  9707                           wreg	equ	0xFE8
  9708                           indf2	equ	0xFDF
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           fsr2h	equ	0xFDA
  9712                           fsr2l	equ	0xFD9
  9713                           status	equ	0xFD8
  9714                           
  9715 ;; *************** function _BME280_setFilterCoefficient *****************
  9716 ;; Defined at:
  9717 ;;		line 233 in file "mcc_generated_files/bme280.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  coeff           1    wreg     unsigned char 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;  coeff           1    1[BANK0 ] unsigned char 
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      void 
  9724 ;; Registers used:
  9725 ;;		wreg, status,2, status,0
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;Total ram usage:        2 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:    7
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_Weather_initializeClick
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           	psect	text25
  9746  00C0F2                     __ptext25:
  9747                           	opt stack 0
  9748  00C0F2                     _BME280_setFilterCoefficient:
  9749                           	opt stack 21
  9750                           
  9751                           ;incstack = 0
  9752                           ;BME280_setFilterCoefficient@coeff stored from wreg
  9753  00C0F2  0100               	movlb	0	; () banked
  9754  00C0F4  6F61               	movwf	BME280_setFilterCoefficient@coeff& (0+255),b
  9755                           
  9756                           ;bme280.c: 235: bme280_config.filter = coeff;
  9757  00C0F6  C061  F060         	movff	BME280_setFilterCoefficient@coeff,??_BME280_setFilterCoefficient
  9758  00C0FA  0100               	movlb	0	; () banked
  9759  00C0FC  4760               	rlncf	??_BME280_setFilterCoefficient& (0+255),f,b
  9760  00C0FE  0101               	movlb	1	; () banked
  9761  00C100  5130               	movf	_bme280_config& (0+255),w,b
  9762  00C102  0100               	movlb	0	; () banked
  9763  00C104  1960               	xorwf	??_BME280_setFilterCoefficient& (0+255),w,b
  9764  00C106  0BF1               	andlw	-15
  9765  00C108  1960               	xorwf	??_BME280_setFilterCoefficient& (0+255),w,b
  9766  00C10A  0101               	movlb	1	; () banked
  9767  00C10C  6F30               	movwf	_bme280_config& (0+255),b
  9768                           
  9769                           ; BSR set to: 1
  9770  00C10E  0012               	return		;funcret
  9771  00C110                     __end_of_BME280_setFilterCoefficient:
  9772                           	opt stack 0
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           intcon	equ	0xFF2
  9780                           postinc0	equ	0xFEE
  9781                           wreg	equ	0xFE8
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           postdec2	equ	0xFDD
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function _BME280_reset *****************
  9790 ;; Defined at:
  9791 ;;		line 189 in file "mcc_generated_files/bme280.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;Total ram usage:        0 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:   17
  9812 ;; This function calls:
  9813 ;;		_BME280_writeByte
  9814 ;; This function is called by:
  9815 ;;		_Weather_initializeClick
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text26
  9820  00C4A8                     __ptext26:
  9821                           	opt stack 0
  9822  00C4A8                     _BME280_reset:
  9823                           	opt stack 11
  9824                           
  9825                           ;bme280.c: 191: BME280_writeByte(0xE0, 0xB6);
  9826                           
  9827                           ; BSR set to: 1
  9828                           ;incstack = 0
  9829  00C4A8  0EB6               	movlw	182
  9830  00C4AA  0100               	movlb	0	; () banked
  9831  00C4AC  6F74               	movwf	BME280_writeByte@data& (0+255),b
  9832  00C4AE  0EE0               	movlw	224
  9833  00C4B0  EC69  F061         	call	_BME280_writeByte
  9834  00C4B4  0012               	return		;funcret
  9835  00C4B6                     __end_of_BME280_reset:
  9836                           	opt stack 0
  9837                           tblptru	equ	0xFF8
  9838                           tblptrh	equ	0xFF7
  9839                           tblptrl	equ	0xFF6
  9840                           tablat	equ	0xFF5
  9841                           prodh	equ	0xFF4
  9842                           prodl	equ	0xFF3
  9843                           intcon	equ	0xFF2
  9844                           postinc0	equ	0xFEE
  9845                           wreg	equ	0xFE8
  9846                           indf2	equ	0xFDF
  9847                           postinc2	equ	0xFDE
  9848                           postdec2	equ	0xFDD
  9849                           fsr2h	equ	0xFDA
  9850                           fsr2l	equ	0xFD9
  9851                           status	equ	0xFD8
  9852                           
  9853 ;; *************** function _BME280_readFactoryCalibrationParams *****************
  9854 ;; Defined at:
  9855 ;;		line 200 in file "mcc_generated_files/bme280.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;		None
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  paramBuff      24   34[BANK0 ] unsigned char [24]
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9871 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;Total ram usage:       27 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:   17
  9876 ;; This function calls:
  9877 ;;		_BME280_readBlock
  9878 ;;		_BME280_readByte
  9879 ;; This function is called by:
  9880 ;;		_Weather_initializeClick
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text27
  9885  00642E                     __ptext27:
  9886                           	opt stack 0
  9887  00642E                     _BME280_readFactoryCalibrationParams:
  9888                           	opt stack 11
  9889                           
  9890                           ;bme280.c: 202: uint8_t paramBuff[24];
  9891                           ;bme280.c: 204: BME280_readBlock(0x88, paramBuff, 24);
  9892                           
  9893                           ;incstack = 0
  9894  00642E  0E82               	movlw	low BME280_readFactoryCalibrationParams@paramBuff
  9895  006430  0100               	movlb	0	; () banked
  9896  006432  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
  9897  006434  0E00               	movlw	high BME280_readFactoryCalibrationParams@paramBuff
  9898  006436  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
  9899  006438  0E18               	movlw	24
  9900  00643A  6F7D               	movwf	BME280_readBlock@length& (0+255),b
  9901  00643C  0E88               	movlw	136
  9902  00643E  ECBB  F05F         	call	_BME280_readBlock
  9903                           
  9904                           ;bme280.c: 205: calibParam.dig_T1 = (((uint16_t) paramBuff[1]) << 8) + paramBuff[0];
  9905  006442  0100               	movlb	0	; () banked
  9906  006444  5183               	movf	(BME280_readFactoryCalibrationParams@paramBuff+1)& (0+255),w,b
  9907  006446  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9908  006448  5182               	movf	BME280_readFactoryCalibrationParams@paramBuff& (0+255),w,b
  9909  00644A  0101               	movlb	1	; () banked
  9910  00644C  6F6B               	movwf	_calibParam& (0+255),b
  9911  00644E  C07F  F16C         	movff	??_BME280_readFactoryCalibrationParams,_calibParam+1
  9912                           
  9913                           ; BSR set to: 1
  9914                           ;bme280.c: 206: calibParam.dig_T2 = (((int) paramBuff[3]) << 8) + paramBuff[2];
  9915  006452  0100               	movlb	0	; () banked
  9916  006454  5185               	movf	(BME280_readFactoryCalibrationParams@paramBuff+3)& (0+255),w,b
  9917  006456  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9918  006458  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9919  00645A  5184               	movf	(BME280_readFactoryCalibrationParams@paramBuff+2)& (0+255),w,b
  9920  00645C  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
  9921  00645E  0101               	movlb	1	; () banked
  9922  006460  6F6D               	movwf	(_calibParam+2)& (0+255),b
  9923  006462  0100               	movlb	0	; () banked
  9924  006464  0E00               	movlw	0
  9925  006466  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
  9926  006468  0101               	movlb	1	; () banked
  9927  00646A  6F6E               	movwf	(_calibParam+3)& (0+255),b
  9928                           
  9929                           ; BSR set to: 1
  9930                           ;bme280.c: 207: calibParam.dig_T3 = (((int) paramBuff[5]) << 8) + paramBuff[4];
  9931  00646C  0100               	movlb	0	; () banked
  9932  00646E  5187               	movf	(BME280_readFactoryCalibrationParams@paramBuff+5)& (0+255),w,b
  9933  006470  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9934  006472  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9935  006474  5186               	movf	(BME280_readFactoryCalibrationParams@paramBuff+4)& (0+255),w,b
  9936  006476  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
  9937  006478  0101               	movlb	1	; () banked
  9938  00647A  6F6F               	movwf	(_calibParam+4)& (0+255),b
  9939  00647C  0100               	movlb	0	; () banked
  9940  00647E  0E00               	movlw	0
  9941  006480  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
  9942  006482  0101               	movlb	1	; () banked
  9943  006484  6F70               	movwf	(_calibParam+5)& (0+255),b
  9944                           
  9945                           ; BSR set to: 1
  9946                           ;bme280.c: 208: calibParam.dig_P1 = (((uint16_t) paramBuff[7]) << 8) + paramBuff[6];
  9947  006486  0100               	movlb	0	; () banked
  9948  006488  5189               	movf	(BME280_readFactoryCalibrationParams@paramBuff+7)& (0+255),w,b
  9949  00648A  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9950  00648C  5188               	movf	(BME280_readFactoryCalibrationParams@paramBuff+6)& (0+255),w,b
  9951  00648E  0101               	movlb	1	; () banked
  9952  006490  6F71               	movwf	(_calibParam+6)& (0+255),b
  9953  006492  C07F  F172         	movff	??_BME280_readFactoryCalibrationParams,_calibParam+7
  9954                           
  9955                           ; BSR set to: 1
  9956                           ;bme280.c: 209: calibParam.dig_P2 = (((int) paramBuff[9]) << 8) + paramBuff[8];
  9957  006496  0100               	movlb	0	; () banked
  9958  006498  518B               	movf	(BME280_readFactoryCalibrationParams@paramBuff+9)& (0+255),w,b
  9959  00649A  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9960  00649C  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9961  00649E  518A               	movf	(BME280_readFactoryCalibrationParams@paramBuff+8)& (0+255),w,b
  9962  0064A0  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
  9963  0064A2  0101               	movlb	1	; () banked
  9964  0064A4  6F73               	movwf	(_calibParam+8)& (0+255),b
  9965  0064A6  0100               	movlb	0	; () banked
  9966  0064A8  0E00               	movlw	0
  9967  0064AA  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
  9968  0064AC  0101               	movlb	1	; () banked
  9969  0064AE  6F74               	movwf	(_calibParam+9)& (0+255),b
  9970                           
  9971                           ; BSR set to: 1
  9972                           ;bme280.c: 210: calibParam.dig_P3 = (((int) paramBuff[11]) << 8) + paramBuff[10];
  9973  0064B0  0100               	movlb	0	; () banked
  9974  0064B2  518D               	movf	(BME280_readFactoryCalibrationParams@paramBuff+11)& (0+255),w,b
  9975  0064B4  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9976  0064B6  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9977  0064B8  518C               	movf	(BME280_readFactoryCalibrationParams@paramBuff+10)& (0+255),w,b
  9978  0064BA  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
  9979  0064BC  0101               	movlb	1	; () banked
  9980  0064BE  6F75               	movwf	(_calibParam+10)& (0+255),b
  9981  0064C0  0100               	movlb	0	; () banked
  9982  0064C2  0E00               	movlw	0
  9983  0064C4  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
  9984  0064C6  0101               	movlb	1	; () banked
  9985  0064C8  6F76               	movwf	(_calibParam+11)& (0+255),b
  9986                           
  9987                           ; BSR set to: 1
  9988                           ;bme280.c: 211: calibParam.dig_P4 = (((int) paramBuff[13]) << 8) + paramBuff[12];
  9989  0064CA  0100               	movlb	0	; () banked
  9990  0064CC  518F               	movf	(BME280_readFactoryCalibrationParams@paramBuff+13)& (0+255),w,b
  9991  0064CE  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
  9992  0064D0  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
  9993  0064D2  518E               	movf	(BME280_readFactoryCalibrationParams@paramBuff+12)& (0+255),w,b
  9994  0064D4  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
  9995  0064D6  0101               	movlb	1	; () banked
  9996  0064D8  6F77               	movwf	(_calibParam+12)& (0+255),b
  9997  0064DA  0100               	movlb	0	; () banked
  9998  0064DC  0E00               	movlw	0
  9999  0064DE  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10000  0064E0  0101               	movlb	1	; () banked
 10001  0064E2  6F78               	movwf	(_calibParam+13)& (0+255),b
 10002                           
 10003                           ; BSR set to: 1
 10004                           ;bme280.c: 212: calibParam.dig_P5 = (((int) paramBuff[15]) << 8) + paramBuff[14];
 10005  0064E4  0100               	movlb	0	; () banked
 10006  0064E6  5191               	movf	(BME280_readFactoryCalibrationParams@paramBuff+15)& (0+255),w,b
 10007  0064E8  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10008  0064EA  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10009  0064EC  5190               	movf	(BME280_readFactoryCalibrationParams@paramBuff+14)& (0+255),w,b
 10010  0064EE  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10011  0064F0  0101               	movlb	1	; () banked
 10012  0064F2  6F79               	movwf	(_calibParam+14)& (0+255),b
 10013  0064F4  0100               	movlb	0	; () banked
 10014  0064F6  0E00               	movlw	0
 10015  0064F8  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10016  0064FA  0101               	movlb	1	; () banked
 10017  0064FC  6F7A               	movwf	(_calibParam+15)& (0+255),b
 10018                           
 10019                           ; BSR set to: 1
 10020                           ;bme280.c: 213: calibParam.dig_P6 = (((int) paramBuff[17]) << 8) + paramBuff[16];
 10021  0064FE  0100               	movlb	0	; () banked
 10022  006500  5193               	movf	(BME280_readFactoryCalibrationParams@paramBuff+17)& (0+255),w,b
 10023  006502  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10024  006504  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10025  006506  5192               	movf	(BME280_readFactoryCalibrationParams@paramBuff+16)& (0+255),w,b
 10026  006508  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10027  00650A  0101               	movlb	1	; () banked
 10028  00650C  6F7B               	movwf	(_calibParam+16)& (0+255),b
 10029  00650E  0100               	movlb	0	; () banked
 10030  006510  0E00               	movlw	0
 10031  006512  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10032  006514  0101               	movlb	1	; () banked
 10033  006516  6F7C               	movwf	(_calibParam+17)& (0+255),b
 10034                           
 10035                           ; BSR set to: 1
 10036                           ;bme280.c: 214: calibParam.dig_P7 = (((int) paramBuff[19]) << 8) + paramBuff[18];
 10037  006518  0100               	movlb	0	; () banked
 10038  00651A  5195               	movf	(BME280_readFactoryCalibrationParams@paramBuff+19)& (0+255),w,b
 10039  00651C  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10040  00651E  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10041  006520  5194               	movf	(BME280_readFactoryCalibrationParams@paramBuff+18)& (0+255),w,b
 10042  006522  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10043  006524  0101               	movlb	1	; () banked
 10044  006526  6F7D               	movwf	(_calibParam+18)& (0+255),b
 10045  006528  0100               	movlb	0	; () banked
 10046  00652A  0E00               	movlw	0
 10047  00652C  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10048  00652E  0101               	movlb	1	; () banked
 10049  006530  6F7E               	movwf	(_calibParam+19)& (0+255),b
 10050                           
 10051                           ; BSR set to: 1
 10052                           ;bme280.c: 215: calibParam.dig_P8 = (((int) paramBuff[21]) << 8) + paramBuff[20];
 10053  006532  0100               	movlb	0	; () banked
 10054  006534  5197               	movf	(BME280_readFactoryCalibrationParams@paramBuff+21)& (0+255),w,b
 10055  006536  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10056  006538  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10057  00653A  5196               	movf	(BME280_readFactoryCalibrationParams@paramBuff+20)& (0+255),w,b
 10058  00653C  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10059  00653E  0101               	movlb	1	; () banked
 10060  006540  6F7F               	movwf	(_calibParam+20)& (0+255),b
 10061  006542  0100               	movlb	0	; () banked
 10062  006544  0E00               	movlw	0
 10063  006546  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10064  006548  0101               	movlb	1	; () banked
 10065  00654A  6F80               	movwf	(_calibParam+21)& (0+255),b
 10066                           
 10067                           ; BSR set to: 1
 10068                           ;bme280.c: 216: calibParam.dig_P9 = (((int) paramBuff[23]) << 8) + paramBuff[22];
 10069  00654C  0100               	movlb	0	; () banked
 10070  00654E  5199               	movf	(BME280_readFactoryCalibrationParams@paramBuff+23)& (0+255),w,b
 10071  006550  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10072  006552  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10073  006554  5198               	movf	(BME280_readFactoryCalibrationParams@paramBuff+22)& (0+255),w,b
 10074  006556  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10075  006558  0101               	movlb	1	; () banked
 10076  00655A  6F81               	movwf	(_calibParam+22)& (0+255),b
 10077  00655C  0100               	movlb	0	; () banked
 10078  00655E  0E00               	movlw	0
 10079  006560  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10080  006562  0101               	movlb	1	; () banked
 10081  006564  6F82               	movwf	(_calibParam+23)& (0+255),b
 10082                           
 10083                           ;bme280.c: 218: calibParam.dig_H1 = (uint8_t) BME280_readByte(0xA1);
 10084  006566  0EA1               	movlw	161
 10085  006568  ECF6  F061         	call	_BME280_readByte
 10086  00656C  0101               	movlb	1	; () banked
 10087  00656E  6F83               	movwf	(_calibParam+24)& (0+255),b
 10088                           
 10089                           ;bme280.c: 220: BME280_readBlock(0xE1, paramBuff, 7);
 10090  006570  0E82               	movlw	low BME280_readFactoryCalibrationParams@paramBuff
 10091  006572  0100               	movlb	0	; () banked
 10092  006574  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
 10093  006576  0E00               	movlw	high BME280_readFactoryCalibrationParams@paramBuff
 10094  006578  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
 10095  00657A  0E07               	movlw	7
 10096  00657C  6F7D               	movwf	BME280_readBlock@length& (0+255),b
 10097  00657E  0EE1               	movlw	225
 10098  006580  ECBB  F05F         	call	_BME280_readBlock
 10099                           
 10100                           ;bme280.c: 221: calibParam.dig_H2 = (((int) paramBuff[1]) << 8) + paramBuff[0];
 10101  006584  0100               	movlb	0	; () banked
 10102  006586  5183               	movf	(BME280_readFactoryCalibrationParams@paramBuff+1)& (0+255),w,b
 10103  006588  6F80               	movwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10104  00658A  6B7F               	clrf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10105  00658C  5182               	movf	BME280_readFactoryCalibrationParams@paramBuff& (0+255),w,b
 10106  00658E  257F               	addwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10107  006590  0101               	movlb	1	; () banked
 10108  006592  6F84               	movwf	(_calibParam+25)& (0+255),b
 10109  006594  0100               	movlb	0	; () banked
 10110  006596  0E00               	movlw	0
 10111  006598  2180               	addwfc	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10112  00659A  0101               	movlb	1	; () banked
 10113  00659C  6F85               	movwf	(_calibParam+26)& (0+255),b
 10114                           
 10115                           ; BSR set to: 1
 10116                           ;bme280.c: 222: calibParam.dig_H3 = (uint8_t) paramBuff[2];
 10117  00659E  C084  F186         	movff	BME280_readFactoryCalibrationParams@paramBuff+2,_calibParam+27
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;bme280.c: 223: calibParam.dig_H4 = (((int) paramBuff[3]) << 4) | (paramBuff[4] & 0xF);
 10121  0065A2  0100               	movlb	0	; () banked
 10122  0065A4  5185               	movf	(BME280_readFactoryCalibrationParams@paramBuff+3)& (0+255),w,b
 10123  0065A6  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10124  0065A8  6B80               	clrf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10125  0065AA  3B7F               	swapf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10126  0065AC  3B80               	swapf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10127  0065AE  0EF0               	movlw	240
 10128  0065B0  1780               	andwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10129  0065B2  517F               	movf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10130  0065B4  0B0F               	andlw	15
 10131  0065B6  1380               	iorwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10132  0065B8  0EF0               	movlw	240
 10133  0065BA  177F               	andwf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10134  0065BC  C086  F081         	movff	BME280_readFactoryCalibrationParams@paramBuff+4,??_BME280_readFactoryCalibrationP
      +                          arams+2
 10135  0065C0  0E0F               	movlw	15
 10136  0065C2  1781               	andwf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10137  0065C4  5181               	movf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),w,b
 10138  0065C6  117F               	iorwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10139  0065C8  0101               	movlb	1	; () banked
 10140  0065CA  6F87               	movwf	(_calibParam+28)& (0+255),b
 10141  0065CC  0100               	movlb	0	; () banked
 10142  0065CE  5180               	movf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10143  0065D0  0101               	movlb	1	; () banked
 10144  0065D2  6F88               	movwf	(_calibParam+29)& (0+255),b
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;bme280.c: 224: calibParam.dig_H5 = (((int) paramBuff[5]) << 4) | (paramBuff[4] >> 4);
 10148  0065D4  0100               	movlb	0	; () banked
 10149  0065D6  5187               	movf	(BME280_readFactoryCalibrationParams@paramBuff+5)& (0+255),w,b
 10150  0065D8  6F7F               	movwf	??_BME280_readFactoryCalibrationParams& (0+255),b
 10151  0065DA  6B80               	clrf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),b
 10152  0065DC  3B7F               	swapf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10153  0065DE  3B80               	swapf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10154  0065E0  0EF0               	movlw	240
 10155  0065E2  1780               	andwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10156  0065E4  517F               	movf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10157  0065E6  0B0F               	andlw	15
 10158  0065E8  1380               	iorwf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),f,b
 10159  0065EA  0EF0               	movlw	240
 10160  0065EC  177F               	andwf	??_BME280_readFactoryCalibrationParams& (0+255),f,b
 10161  0065EE  C086  F081         	movff	BME280_readFactoryCalibrationParams@paramBuff+4,??_BME280_readFactoryCalibrationP
      +                          arams+2
 10162  0065F2  3B81               	swapf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10163  0065F4  0E0F               	movlw	15
 10164  0065F6  1781               	andwf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),f,b
 10165  0065F8  5181               	movf	(??_BME280_readFactoryCalibrationParams+2)& (0+255),w,b
 10166  0065FA  117F               	iorwf	??_BME280_readFactoryCalibrationParams& (0+255),w,b
 10167  0065FC  0101               	movlb	1	; () banked
 10168  0065FE  6F89               	movwf	(_calibParam+30)& (0+255),b
 10169  006600  0100               	movlb	0	; () banked
 10170  006602  5180               	movf	(??_BME280_readFactoryCalibrationParams+1)& (0+255),w,b
 10171  006604  0101               	movlb	1	; () banked
 10172  006606  6F8A               	movwf	(_calibParam+31)& (0+255),b
 10173                           
 10174                           ; BSR set to: 1
 10175                           ;bme280.c: 225: calibParam.dig_H6 = (short) paramBuff[6];
 10176  006608  C088  F18B         	movff	BME280_readFactoryCalibrationParams@paramBuff+6,_calibParam+32
 10177                           
 10178                           ; BSR set to: 1
 10179  00660C  0012               	return		;funcret
 10180  00660E                     __end_of_BME280_readFactoryCalibrationParams:
 10181                           	opt stack 0
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodh	equ	0xFF4
 10187                           prodl	equ	0xFF3
 10188                           intcon	equ	0xFF2
 10189                           postinc0	equ	0xFEE
 10190                           wreg	equ	0xFE8
 10191                           indf2	equ	0xFDF
 10192                           postinc2	equ	0xFDE
 10193                           postdec2	equ	0xFDD
 10194                           fsr2h	equ	0xFDA
 10195                           fsr2l	equ	0xFD9
 10196                           status	equ	0xFD8
 10197                           
 10198 ;; *************** function _BME280_initializeSensor *****************
 10199 ;; Defined at:
 10200 ;;		line 258 in file "mcc_generated_files/bme280.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:   17
 10221 ;; This function calls:
 10222 ;;		_BME280_writeByte
 10223 ;; This function is called by:
 10224 ;;		_Weather_initializeClick
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text28
 10229  00BF56                     __ptext28:
 10230                           	opt stack 0
 10231  00BF56                     _BME280_initializeSensor:
 10232                           	opt stack 11
 10233                           
 10234                           ;bme280.c: 260: BME280_writeByte(0xF5, bme280_config.configReg);
 10235                           
 10236                           ; BSR set to: 1
 10237                           ;incstack = 0
 10238  00BF56  C130  F074         	movff	_bme280_config,BME280_writeByte@data
 10239  00BF5A  0EF5               	movlw	245
 10240  00BF5C  EC69  F061         	call	_BME280_writeByte
 10241                           
 10242                           ;bme280.c: 261: BME280_writeByte(0xF2, bme280_ctrl_hum);
 10243  00BF60  C12F  F074         	movff	_bme280_ctrl_hum,BME280_writeByte@data
 10244  00BF64  0EF2               	movlw	242
 10245  00BF66  EC69  F061         	call	_BME280_writeByte
 10246                           
 10247                           ;bme280.c: 262: BME280_writeByte(0xF4, bme280_ctrl_meas.ctrlMeasReg);
 10248  00BF6A  C12E  F074         	movff	_bme280_ctrl_meas,BME280_writeByte@data
 10249  00BF6E  0EF4               	movlw	244
 10250  00BF70  EC69  F061         	call	_BME280_writeByte
 10251  00BF74  0012               	return		;funcret
 10252  00BF76                     __end_of_BME280_initializeSensor:
 10253                           	opt stack 0
 10254                           tblptru	equ	0xFF8
 10255                           tblptrh	equ	0xFF7
 10256                           tblptrl	equ	0xFF6
 10257                           tablat	equ	0xFF5
 10258                           prodh	equ	0xFF4
 10259                           prodl	equ	0xFF3
 10260                           intcon	equ	0xFF2
 10261                           postinc0	equ	0xFEE
 10262                           wreg	equ	0xFE8
 10263                           indf2	equ	0xFDF
 10264                           postinc2	equ	0xFDE
 10265                           postdec2	equ	0xFDD
 10266                           fsr2h	equ	0xFDA
 10267                           fsr2l	equ	0xFD9
 10268                           status	equ	0xFD8
 10269                           
 10270 ;; *************** function _BME280_startForcedSensing *****************
 10271 ;; Defined at:
 10272 ;;		line 265 in file "mcc_generated_files/bme280.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;		None
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;Total ram usage:        0 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:   17
 10293 ;; This function calls:
 10294 ;;		_BME280_writeByte
 10295 ;; This function is called by:
 10296 ;;		_Weather_readSensors
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text29
 10301  00C27A                     __ptext29:
 10302                           	opt stack 0
 10303  00C27A                     _BME280_startForcedSensing:
 10304                           	opt stack 12
 10305                           
 10306                           ;bme280.c: 267: bme280_ctrl_meas.mode = 0x01;
 10307                           
 10308                           ;incstack = 0
 10309  00C27A  0101               	movlb	1	; () banked
 10310  00C27C  512E               	movf	_bme280_ctrl_meas& (0+255),w,b
 10311  00C27E  0BFC               	andlw	-4
 10312  00C280  0901               	iorlw	1
 10313  00C282  6F2E               	movwf	_bme280_ctrl_meas& (0+255),b
 10314                           
 10315                           ; BSR set to: 1
 10316                           ;bme280.c: 268: BME280_writeByte(0xF4, bme280_ctrl_meas.ctrlMeasReg);
 10317  00C284  C12E  F074         	movff	_bme280_ctrl_meas,BME280_writeByte@data
 10318  00C288  0EF4               	movlw	244
 10319  00C28A  EC69  F061         	call	_BME280_writeByte
 10320  00C28E  0012               	return		;funcret
 10321  00C290                     __end_of_BME280_startForcedSensing:
 10322                           	opt stack 0
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           prodh	equ	0xFF4
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           postinc0	equ	0xFEE
 10331                           wreg	equ	0xFE8
 10332                           indf2	equ	0xFDF
 10333                           postinc2	equ	0xFDE
 10334                           postdec2	equ	0xFDD
 10335                           fsr2h	equ	0xFDA
 10336                           fsr2l	equ	0xFD9
 10337                           status	equ	0xFD8
 10338                           
 10339 ;; *************** function _BME280_writeByte *****************
 10340 ;; Defined at:
 10341 ;;		line 398 in file "mcc_generated_files/bme280.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  reg_addr        1    wreg     unsigned char 
 10344 ;;  data            1   20[BANK0 ] unsigned char 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  reg_addr        1   21[BANK0 ] unsigned char 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  1    wreg      void 
 10349 ;; Registers used:
 10350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10356 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;Total ram usage:        2 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:   16
 10363 ;; This function calls:
 10364 ;;		_i2c_write1ByteRegister
 10365 ;; This function is called by:
 10366 ;;		_BME280_reset
 10367 ;;		_BME280_initializeSensor
 10368 ;;		_BME280_startForcedSensing
 10369 ;;		_BME280_sleep
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text30
 10374  00C2D2                     __ptext30:
 10375                           	opt stack 0
 10376  00C2D2                     _BME280_writeByte:
 10377                           	opt stack 11
 10378                           
 10379                           ;incstack = 0
 10380                           ;BME280_writeByte@reg_addr stored from wreg
 10381  00C2D2  0100               	movlb	0	; () banked
 10382  00C2D4  6F75               	movwf	BME280_writeByte@reg_addr& (0+255),b
 10383                           
 10384                           ;bme280.c: 400: i2c_write1ByteRegister(0x76, reg_addr, data);
 10385  00C2D6  C075  F071         	movff	BME280_writeByte@reg_addr,i2c_write1ByteRegister@reg
 10386  00C2DA  C074  F072         	movff	BME280_writeByte@data,i2c_write1ByteRegister@data
 10387  00C2DE  0E76               	movlw	118
 10388  00C2E0  ECB4  F054         	call	_i2c_write1ByteRegister
 10389  00C2E4  0012               	return		;funcret
 10390  00C2E6                     __end_of_BME280_writeByte:
 10391                           	opt stack 0
 10392                           tblptru	equ	0xFF8
 10393                           tblptrh	equ	0xFF7
 10394                           tblptrl	equ	0xFF6
 10395                           tablat	equ	0xFF5
 10396                           prodh	equ	0xFF4
 10397                           prodl	equ	0xFF3
 10398                           intcon	equ	0xFF2
 10399                           postinc0	equ	0xFEE
 10400                           wreg	equ	0xFE8
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           fsr2h	equ	0xFDA
 10405                           fsr2l	equ	0xFD9
 10406                           status	equ	0xFD8
 10407                           
 10408 ;; *************** function _i2c_write1ByteRegister *****************
 10409 ;; Defined at:
 10410 ;;		line 38 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  address         1    wreg     unsigned char 
 10413 ;;  reg             1   17[BANK0 ] unsigned char 
 10414 ;;  data            1   18[BANK0 ] unsigned char 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  address         1   19[BANK0 ] unsigned char 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10430 ;;Total ram usage:        3 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:   15
 10433 ;; This function calls:
 10434 ;;		_i2c_close
 10435 ;;		_i2c_masterWrite
 10436 ;;		_i2c_open
 10437 ;;		_i2c_setAddressNACKCallback
 10438 ;;		_i2c_setBuffer
 10439 ;;		_i2c_setDataCompleteCallback
 10440 ;; This function is called by:
 10441 ;;		_BME280_writeByte
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text31
 10446  00A968                     __ptext31:
 10447                           	opt stack 0
 10448  00A968                     _i2c_write1ByteRegister:
 10449                           	opt stack 11
 10450                           
 10451                           ;incstack = 0
 10452                           ;i2c_write1ByteRegister@address stored from wreg
 10453  00A968  0100               	movlb	0	; () banked
 10454  00A96A  6F73               	movwf	i2c_write1ByteRegister@address& (0+255),b
 10455  00A96C                     
 10456                           ;i2c_simple_master.c: 40: while(!i2c_open(address));
 10457  00A96C  0100               	movlb	0	; () banked
 10458  00A96E  5173               	movf	i2c_write1ByteRegister@address& (0+255),w,b
 10459  00A970  EC0E  F04C         	call	_i2c_open
 10460  00A974  0900               	iorlw	0
 10461  00A976  B4D8               	btfsc	status,2,c
 10462  00A978  D7F9               	goto	l23596
 10463                           
 10464                           ;i2c_simple_master.c: 41: i2c_setDataCompleteCallback(wr1RegCompleteHandler,&data);
 10465  00A97A  0E4E               	movlw	low _wr1RegCompleteHandler
 10466  00A97C  0100               	movlb	0	; () banked
 10467  00A97E  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 10468  00A980  0EB9               	movlw	high _wr1RegCompleteHandler
 10469  00A982  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 10470  00A984  0E72               	movlw	low i2c_write1ByteRegister@data
 10471  00A986  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 10472  00A988  0E00               	movlw	high i2c_write1ByteRegister@data
 10473  00A98A  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 10474  00A98C  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 10475                           
 10476                           ;i2c_simple_master.c: 42: i2c_setBuffer(&reg,1);
 10477  00A990  0E71               	movlw	low i2c_write1ByteRegister@reg
 10478  00A992  0100               	movlb	0	; () banked
 10479  00A994  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 10480  00A996  0E00               	movlw	high i2c_write1ByteRegister@reg
 10481  00A998  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 10482  00A99A  0E00               	movlw	0
 10483  00A99C  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 10484  00A99E  0E01               	movlw	1
 10485  00A9A0  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 10486  00A9A2  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 10487                           
 10488                           ;i2c_simple_master.c: 43: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 10489  00A9A6  0EAC               	movlw	low _i2c_restartWrite
 10490  00A9A8  0100               	movlb	0	; () banked
 10491  00A9AA  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 10492  00A9AC  0EC6               	movlw	high _i2c_restartWrite
 10493  00A9AE  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 10494  00A9B0  0E00               	movlw	0
 10495  00A9B2  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 10496  00A9B4  0E00               	movlw	0
 10497  00A9B6  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 10498  00A9B8  ECF6  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 10499                           
 10500                           ;i2c_simple_master.c: 44: i2c_masterWrite();
 10501  00A9BC  EC02  F063         	call	_i2c_masterWrite	;wreg free
 10502  00A9C0  EC16  F05F         	call	_i2c_close	;wreg free
 10503  00A9C4  06E8               	decf	wreg,f,c
 10504  00A9C6  A4D8               	btfss	status,2,c
 10505  00A9C8  0012               	return	
 10506  00A9CA  D7FA               	goto	l250
 10507  00A9CC                     __end_of_i2c_write1ByteRegister:
 10508                           	opt stack 0
 10509                           tblptru	equ	0xFF8
 10510                           tblptrh	equ	0xFF7
 10511                           tblptrl	equ	0xFF6
 10512                           tablat	equ	0xFF5
 10513                           prodh	equ	0xFF4
 10514                           prodl	equ	0xFF3
 10515                           intcon	equ	0xFF2
 10516                           postinc0	equ	0xFEE
 10517                           wreg	equ	0xFE8
 10518                           indf2	equ	0xFDF
 10519                           postinc2	equ	0xFDE
 10520                           postdec2	equ	0xFDD
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _BME280_readMeasurements *****************
 10526 ;; Defined at:
 10527 ;;		line 277 in file "mcc_generated_files/bme280.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  sensorData      8   44[BANK0 ] unsigned char [8]
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10542 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10543 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10544 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10545 ;;Total ram usage:       21 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:   17
 10548 ;; This function calls:
 10549 ;;		_BME280_readBlock
 10550 ;; This function is called by:
 10551 ;;		_Weather_readSensors
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text32
 10556  007B24                     __ptext32:
 10557                           	opt stack 0
 10558  007B24                     _BME280_readMeasurements:
 10559                           	opt stack 12
 10560                           
 10561                           ;bme280.c: 279: uint8_t sensorData[8];
 10562                           ;bme280.c: 281: BME280_readBlock(0xF7, sensorData, 8);
 10563                           
 10564                           ;incstack = 0
 10565  007B24  0E8C               	movlw	low BME280_readMeasurements@sensorData
 10566  007B26  0100               	movlb	0	; () banked
 10567  007B28  6F7B               	movwf	BME280_readBlock@read_buff& (0+255),b
 10568  007B2A  0E00               	movlw	high BME280_readMeasurements@sensorData
 10569  007B2C  6F7C               	movwf	(BME280_readBlock@read_buff+1)& (0+255),b
 10570  007B2E  0E08               	movlw	8
 10571  007B30  6F7D               	movwf	BME280_readBlock@length& (0+255),b
 10572  007B32  0EF7               	movlw	247
 10573  007B34  ECBB  F05F         	call	_BME280_readBlock
 10574                           
 10575                           ;bme280.c: 283: adc_H = ((uint32_t) sensorData[6] << 8) |
 10576                           ;bme280.c: 284: sensorData[7];
 10577  007B38  0100               	movlb	0	; () banked
 10578  007B3A  5193               	movf	(BME280_readMeasurements@sensorData+7)& (0+255),w,b
 10579  007B3C  C092  F07F         	movff	BME280_readMeasurements@sensorData+6,??_BME280_readMeasurements
 10580  007B40  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10581  007B42  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10582  007B44  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10583  007B46  C081  F082         	movff	??_BME280_readMeasurements+2,??_BME280_readMeasurements+3
 10584  007B4A  C080  F081         	movff	??_BME280_readMeasurements+1,??_BME280_readMeasurements+2
 10585  007B4E  C07F  F080         	movff	??_BME280_readMeasurements,??_BME280_readMeasurements+1
 10586  007B52  6B7F               	clrf	??_BME280_readMeasurements& (0+255),b
 10587  007B54  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10588  007B56  0101               	movlb	1	; () banked
 10589  007B58  6F04               	movwf	_adc_H& (0+255),b
 10590  007B5A  0100               	movlb	0	; () banked
 10591  007B5C  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10592  007B5E  0101               	movlb	1	; () banked
 10593  007B60  6F05               	movwf	(_adc_H+1)& (0+255),b
 10594  007B62  0100               	movlb	0	; () banked
 10595  007B64  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10596  007B66  0101               	movlb	1	; () banked
 10597  007B68  6F06               	movwf	(_adc_H+2)& (0+255),b
 10598  007B6A  0100               	movlb	0	; () banked
 10599  007B6C  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10600  007B6E  0101               	movlb	1	; () banked
 10601  007B70  6F07               	movwf	(_adc_H+3)& (0+255),b
 10602                           
 10603                           ; BSR set to: 1
 10604                           ;bme280.c: 286: adc_T = ((uint32_t) sensorData[3] << 12) |
 10605                           ;bme280.c: 287: (((uint32_t) sensorData[4] << 4) |
 10606                           ;bme280.c: 288: ((uint32_t) sensorData[5] >> 4));
 10607  007B72  C090  F07F         	movff	BME280_readMeasurements@sensorData+4,??_BME280_readMeasurements
 10608  007B76  0100               	movlb	0	; () banked
 10609  007B78  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10610  007B7A  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10611  007B7C  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10612  007B7E  0E04               	movlw	4
 10613  007B80                     u28785:
 10614  007B80  90D8               	bcf	status,0,c
 10615  007B82  377F               	rlcf	??_BME280_readMeasurements& (0+255),f,b
 10616  007B84  3780               	rlcf	(??_BME280_readMeasurements+1)& (0+255),f,b
 10617  007B86  3781               	rlcf	(??_BME280_readMeasurements+2)& (0+255),f,b
 10618  007B88  3782               	rlcf	(??_BME280_readMeasurements+3)& (0+255),f,b
 10619  007B8A  2EE8               	decfsz	wreg,f,c
 10620  007B8C  D7F9               	goto	u28785
 10621  007B8E  C091  F083         	movff	BME280_readMeasurements@sensorData+5,??_BME280_readMeasurements+4
 10622  007B92  3B83               	swapf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10623  007B94  0E0F               	movlw	15
 10624  007B96  1783               	andwf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10625  007B98  5183               	movf	(??_BME280_readMeasurements+4)& (0+255),w,b
 10626  007B9A  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10627  007B9C  6F84               	movwf	(??_BME280_readMeasurements+5)& (0+255),b
 10628  007B9E  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10629  007BA0  6F85               	movwf	(??_BME280_readMeasurements+6)& (0+255),b
 10630  007BA2  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10631  007BA4  6F86               	movwf	(??_BME280_readMeasurements+7)& (0+255),b
 10632  007BA6  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10633  007BA8  6F87               	movwf	(??_BME280_readMeasurements+8)& (0+255),b
 10634  007BAA  C08F  F088         	movff	BME280_readMeasurements@sensorData+3,??_BME280_readMeasurements+9
 10635  007BAE  6B89               	clrf	(??_BME280_readMeasurements+10)& (0+255),b
 10636  007BB0  6B8A               	clrf	(??_BME280_readMeasurements+11)& (0+255),b
 10637  007BB2  6B8B               	clrf	(??_BME280_readMeasurements+12)& (0+255),b
 10638  007BB4  0E0C               	movlw	12
 10639  007BB6                     u28795:
 10640  007BB6  90D8               	bcf	status,0,c
 10641  007BB8  3788               	rlcf	(??_BME280_readMeasurements+9)& (0+255),f,b
 10642  007BBA  3789               	rlcf	(??_BME280_readMeasurements+10)& (0+255),f,b
 10643  007BBC  378A               	rlcf	(??_BME280_readMeasurements+11)& (0+255),f,b
 10644  007BBE  378B               	rlcf	(??_BME280_readMeasurements+12)& (0+255),f,b
 10645  007BC0  2EE8               	decfsz	wreg,f,c
 10646  007BC2  D7F9               	goto	u28795
 10647  007BC4  5184               	movf	(??_BME280_readMeasurements+5)& (0+255),w,b
 10648  007BC6  1188               	iorwf	(??_BME280_readMeasurements+9)& (0+255),w,b
 10649  007BC8  0101               	movlb	1	; () banked
 10650  007BCA  6F08               	movwf	_adc_T& (0+255),b
 10651  007BCC  0100               	movlb	0	; () banked
 10652  007BCE  5185               	movf	(??_BME280_readMeasurements+6)& (0+255),w,b
 10653  007BD0  1189               	iorwf	(??_BME280_readMeasurements+10)& (0+255),w,b
 10654  007BD2  0101               	movlb	1	; () banked
 10655  007BD4  6F09               	movwf	(_adc_T+1)& (0+255),b
 10656  007BD6  0100               	movlb	0	; () banked
 10657  007BD8  5186               	movf	(??_BME280_readMeasurements+7)& (0+255),w,b
 10658  007BDA  118A               	iorwf	(??_BME280_readMeasurements+11)& (0+255),w,b
 10659  007BDC  0101               	movlb	1	; () banked
 10660  007BDE  6F0A               	movwf	(_adc_T+2)& (0+255),b
 10661  007BE0  0100               	movlb	0	; () banked
 10662  007BE2  5187               	movf	(??_BME280_readMeasurements+8)& (0+255),w,b
 10663  007BE4  118B               	iorwf	(??_BME280_readMeasurements+12)& (0+255),w,b
 10664  007BE6  0101               	movlb	1	; () banked
 10665  007BE8  6F0B               	movwf	(_adc_T+3)& (0+255),b
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;bme280.c: 290: adc_P = ((uint32_t) sensorData[0] << 12) |
 10669                           ;bme280.c: 291: (((uint32_t) sensorData[1] << 4) |
 10670                           ;bme280.c: 292: ((uint32_t) sensorData[2] >> 4));
 10671  007BEA  C08D  F07F         	movff	BME280_readMeasurements@sensorData+1,??_BME280_readMeasurements
 10672  007BEE  0100               	movlb	0	; () banked
 10673  007BF0  6B80               	clrf	(??_BME280_readMeasurements+1)& (0+255),b
 10674  007BF2  6B81               	clrf	(??_BME280_readMeasurements+2)& (0+255),b
 10675  007BF4  6B82               	clrf	(??_BME280_readMeasurements+3)& (0+255),b
 10676  007BF6  0E04               	movlw	4
 10677  007BF8                     u28805:
 10678  007BF8  90D8               	bcf	status,0,c
 10679  007BFA  377F               	rlcf	??_BME280_readMeasurements& (0+255),f,b
 10680  007BFC  3780               	rlcf	(??_BME280_readMeasurements+1)& (0+255),f,b
 10681  007BFE  3781               	rlcf	(??_BME280_readMeasurements+2)& (0+255),f,b
 10682  007C00  3782               	rlcf	(??_BME280_readMeasurements+3)& (0+255),f,b
 10683  007C02  2EE8               	decfsz	wreg,f,c
 10684  007C04  D7F9               	goto	u28805
 10685  007C06  C08E  F083         	movff	BME280_readMeasurements@sensorData+2,??_BME280_readMeasurements+4
 10686  007C0A  3B83               	swapf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10687  007C0C  0E0F               	movlw	15
 10688  007C0E  1783               	andwf	(??_BME280_readMeasurements+4)& (0+255),f,b
 10689  007C10  5183               	movf	(??_BME280_readMeasurements+4)& (0+255),w,b
 10690  007C12  117F               	iorwf	??_BME280_readMeasurements& (0+255),w,b
 10691  007C14  6F84               	movwf	(??_BME280_readMeasurements+5)& (0+255),b
 10692  007C16  5180               	movf	(??_BME280_readMeasurements+1)& (0+255),w,b
 10693  007C18  6F85               	movwf	(??_BME280_readMeasurements+6)& (0+255),b
 10694  007C1A  5181               	movf	(??_BME280_readMeasurements+2)& (0+255),w,b
 10695  007C1C  6F86               	movwf	(??_BME280_readMeasurements+7)& (0+255),b
 10696  007C1E  5182               	movf	(??_BME280_readMeasurements+3)& (0+255),w,b
 10697  007C20  6F87               	movwf	(??_BME280_readMeasurements+8)& (0+255),b
 10698  007C22  C08C  F088         	movff	BME280_readMeasurements@sensorData,??_BME280_readMeasurements+9
 10699  007C26  6B89               	clrf	(??_BME280_readMeasurements+10)& (0+255),b
 10700  007C28  6B8A               	clrf	(??_BME280_readMeasurements+11)& (0+255),b
 10701  007C2A  6B8B               	clrf	(??_BME280_readMeasurements+12)& (0+255),b
 10702  007C2C  0E0C               	movlw	12
 10703  007C2E                     u28815:
 10704  007C2E  90D8               	bcf	status,0,c
 10705  007C30  3788               	rlcf	(??_BME280_readMeasurements+9)& (0+255),f,b
 10706  007C32  3789               	rlcf	(??_BME280_readMeasurements+10)& (0+255),f,b
 10707  007C34  378A               	rlcf	(??_BME280_readMeasurements+11)& (0+255),f,b
 10708  007C36  378B               	rlcf	(??_BME280_readMeasurements+12)& (0+255),f,b
 10709  007C38  2EE8               	decfsz	wreg,f,c
 10710  007C3A  D7F9               	goto	u28815
 10711  007C3C  5184               	movf	(??_BME280_readMeasurements+5)& (0+255),w,b
 10712  007C3E  1188               	iorwf	(??_BME280_readMeasurements+9)& (0+255),w,b
 10713  007C40  0102               	movlb	2	; () banked
 10714  007C42  6F00               	movwf	_adc_P& (0+255),b
 10715  007C44  0100               	movlb	0	; () banked
 10716  007C46  5185               	movf	(??_BME280_readMeasurements+6)& (0+255),w,b
 10717  007C48  1189               	iorwf	(??_BME280_readMeasurements+10)& (0+255),w,b
 10718  007C4A  0102               	movlb	2	; () banked
 10719  007C4C  6F01               	movwf	(_adc_P+1)& (0+255),b
 10720  007C4E  0100               	movlb	0	; () banked
 10721  007C50  5186               	movf	(??_BME280_readMeasurements+7)& (0+255),w,b
 10722  007C52  118A               	iorwf	(??_BME280_readMeasurements+11)& (0+255),w,b
 10723  007C54  0102               	movlb	2	; () banked
 10724  007C56  6F02               	movwf	(_adc_P+2)& (0+255),b
 10725  007C58  0100               	movlb	0	; () banked
 10726  007C5A  5187               	movf	(??_BME280_readMeasurements+8)& (0+255),w,b
 10727  007C5C  118B               	iorwf	(??_BME280_readMeasurements+12)& (0+255),w,b
 10728  007C5E  0102               	movlb	2	; () banked
 10729  007C60  6F03               	movwf	(_adc_P+3)& (0+255),b
 10730                           
 10731                           ; BSR set to: 2
 10732  007C62  0012               	return		;funcret
 10733  007C64                     __end_of_BME280_readMeasurements:
 10734                           	opt stack 0
 10735                           tblptru	equ	0xFF8
 10736                           tblptrh	equ	0xFF7
 10737                           tblptrl	equ	0xFF6
 10738                           tablat	equ	0xFF5
 10739                           prodh	equ	0xFF4
 10740                           prodl	equ	0xFF3
 10741                           intcon	equ	0xFF2
 10742                           postinc0	equ	0xFEE
 10743                           wreg	equ	0xFE8
 10744                           indf2	equ	0xFDF
 10745                           postinc2	equ	0xFDE
 10746                           postdec2	equ	0xFDD
 10747                           fsr2h	equ	0xFDA
 10748                           fsr2l	equ	0xFD9
 10749                           status	equ	0xFD8
 10750                           
 10751 ;; *************** function _BME280_readBlock *****************
 10752 ;; Defined at:
 10753 ;;		line 413 in file "mcc_generated_files/bme280.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  reg_addr        1    wreg     unsigned char 
 10756 ;;  read_buff       2   27[BANK0 ] PTR unsigned char 
 10757 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), 
 10758 ;;  length          1   29[BANK0 ] unsigned char 
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      void 
 10763 ;; Registers used:
 10764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10770 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;Total ram usage:        4 bytes
 10775 ;; Hardware stack levels used:    1
 10776 ;; Hardware stack levels required when called:   16
 10777 ;; This function calls:
 10778 ;;		_i2c_readDataBlock
 10779 ;; This function is called by:
 10780 ;;		_BME280_readFactoryCalibrationParams
 10781 ;;		_BME280_readMeasurements
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text33
 10786  00BF76                     __ptext33:
 10787                           	opt stack 0
 10788  00BF76                     _BME280_readBlock:
 10789                           	opt stack 11
 10790                           
 10791                           ; BSR set to: 2
 10792                           ;incstack = 0
 10793                           ;BME280_readBlock@reg_addr stored from wreg
 10794  00BF76  0100               	movlb	0	; () banked
 10795  00BF78  6F7E               	movwf	BME280_readBlock@reg_addr& (0+255),b
 10796                           
 10797                           ;bme280.c: 415: i2c_readDataBlock(0x76, reg_addr, read_buff, length);
 10798  00BF7A  C07E  F071         	movff	BME280_readBlock@reg_addr,i2c_readDataBlock@reg
 10799  00BF7E  C07B  F072         	movff	BME280_readBlock@read_buff,i2c_readDataBlock@data
 10800  00BF82  C07C  F073         	movff	BME280_readBlock@read_buff+1,i2c_readDataBlock@data+1
 10801  00BF86  C07D  F074         	movff	BME280_readBlock@length,i2c_readDataBlock@len
 10802  00BF8A  0100               	movlb	0	; () banked
 10803  00BF8C  6B75               	clrf	(i2c_readDataBlock@len+1)& (0+255),b
 10804  00BF8E  0E76               	movlw	118
 10805  00BF90  EC28  F052         	call	_i2c_readDataBlock
 10806  00BF94  0012               	return		;funcret
 10807  00BF96                     __end_of_BME280_readBlock:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           postinc0	equ	0xFEE
 10817                           wreg	equ	0xFE8
 10818                           indf2	equ	0xFDF
 10819                           postinc2	equ	0xFDE
 10820                           postdec2	equ	0xFDD
 10821                           fsr2h	equ	0xFDA
 10822                           fsr2l	equ	0xFD9
 10823                           status	equ	0xFD8
 10824                           
 10825 ;; *************** function _i2c_readDataBlock *****************
 10826 ;; Defined at:
 10827 ;;		line 141 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  address         1    wreg     unsigned char 
 10830 ;;  reg             1   17[BANK0 ] unsigned char 
 10831 ;;  data            2   18[BANK0 ] PTR void 
 10832 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), 
 10833 ;;  len             2   20[BANK0 ] unsigned int 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  address         1   22[BANK0 ] unsigned char 
 10836 ;;  d               4   23[BANK0 ] struct .
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10846 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;Total ram usage:       10 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:   15
 10853 ;; This function calls:
 10854 ;;		_i2c_close
 10855 ;;		_i2c_masterWrite
 10856 ;;		_i2c_open
 10857 ;;		_i2c_setAddressNACKCallback
 10858 ;;		_i2c_setBuffer
 10859 ;;		_i2c_setDataCompleteCallback
 10860 ;; This function is called by:
 10861 ;;		_BME280_readBlock
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           	psect	text34
 10866  00A450                     __ptext34:
 10867                           	opt stack 0
 10868  00A450                     _i2c_readDataBlock:
 10869                           	opt stack 11
 10870                           
 10871                           ;incstack = 0
 10872                           ;i2c_readDataBlock@address stored from wreg
 10873  00A450  0100               	movlb	0	; () banked
 10874  00A452  6F76               	movwf	i2c_readDataBlock@address& (0+255),b
 10875                           
 10876                           ;i2c_simple_master.c: 144: buf_t d;
 10877                           ;i2c_simple_master.c: 145: d.data = data;
 10878  00A454  C072  F079         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 10879  00A458  C073  F07A         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 10880                           
 10881                           ;i2c_simple_master.c: 146: d.len = len;
 10882  00A45C  C074  F077         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 10883  00A460  C075  F078         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 10884  00A464  0100               	movlb	0	; () banked
 10885  00A466  5176               	movf	i2c_readDataBlock@address& (0+255),w,b
 10886  00A468  EC0E  F04C         	call	_i2c_open
 10887  00A46C  0900               	iorlw	0
 10888  00A46E  B4D8               	btfsc	status,2,c
 10889  00A470  D7F9               	goto	l307
 10890                           
 10891                           ;i2c_simple_master.c: 149: i2c_setDataCompleteCallback(rdBlkRegCompleteHandler,&d);
 10892  00A472  0E56               	movlw	low _rdBlkRegCompleteHandler
 10893  00A474  0100               	movlb	0	; () banked
 10894  00A476  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 10895  00A478  0EB4               	movlw	high _rdBlkRegCompleteHandler
 10896  00A47A  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 10897  00A47C  0E77               	movlw	low i2c_readDataBlock@d
 10898  00A47E  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 10899  00A480  0E00               	movlw	high i2c_readDataBlock@d
 10900  00A482  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 10901  00A484  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 10902                           
 10903                           ;i2c_simple_master.c: 150: i2c_setBuffer(&reg,1);
 10904  00A488  0E71               	movlw	low i2c_readDataBlock@reg
 10905  00A48A  0100               	movlb	0	; () banked
 10906  00A48C  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 10907  00A48E  0E00               	movlw	high i2c_readDataBlock@reg
 10908  00A490  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 10909  00A492  0E00               	movlw	0
 10910  00A494  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 10911  00A496  0E01               	movlw	1
 10912  00A498  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 10913  00A49A  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 10914                           
 10915                           ;i2c_simple_master.c: 151: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 10916  00A49E  0EAC               	movlw	low _i2c_restartWrite
 10917  00A4A0  0100               	movlb	0	; () banked
 10918  00A4A2  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 10919  00A4A4  0EC6               	movlw	high _i2c_restartWrite
 10920  00A4A6  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 10921  00A4A8  0E00               	movlw	0
 10922  00A4AA  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 10923  00A4AC  0E00               	movlw	0
 10924  00A4AE  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 10925  00A4B0  ECF6  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 10926                           
 10927                           ;i2c_simple_master.c: 152: i2c_masterWrite();
 10928  00A4B4  EC02  F063         	call	_i2c_masterWrite	;wreg free
 10929  00A4B8  EC16  F05F         	call	_i2c_close	;wreg free
 10930  00A4BC  06E8               	decf	wreg,f,c
 10931  00A4BE  A4D8               	btfss	status,2,c
 10932  00A4C0  0012               	return	
 10933  00A4C2  D7FA               	goto	l310
 10934  00A4C4                     __end_of_i2c_readDataBlock:
 10935                           	opt stack 0
 10936                           tblptru	equ	0xFF8
 10937                           tblptrh	equ	0xFF7
 10938                           tblptrl	equ	0xFF6
 10939                           tablat	equ	0xFF5
 10940                           prodh	equ	0xFF4
 10941                           prodl	equ	0xFF3
 10942                           intcon	equ	0xFF2
 10943                           postinc0	equ	0xFEE
 10944                           wreg	equ	0xFE8
 10945                           indf2	equ	0xFDF
 10946                           postinc2	equ	0xFDE
 10947                           postdec2	equ	0xFDD
 10948                           fsr2h	equ	0xFDA
 10949                           fsr2l	equ	0xFD9
 10950                           status	equ	0xFD8
 10951                           
 10952 ;; *************** function _BME280_isMeasuring *****************
 10953 ;; Defined at:
 10954 ;;		line 271 in file "mcc_generated_files/bme280.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;		None
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;		None
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      unsigned char 
 10961 ;; Registers used:
 10962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;Total ram usage:        0 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:   18
 10975 ;; This function calls:
 10976 ;;		_BME280_getStatus
 10977 ;; This function is called by:
 10978 ;;		_Weather_readSensors
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text35
 10983  00C2E6                     __ptext35:
 10984                           	opt stack 0
 10985  00C2E6                     _BME280_isMeasuring:
 10986                           	opt stack 11
 10987                           
 10988                           ;bme280.c: 273: bme280_status.statusReg = BME280_getStatus();
 10989                           
 10990                           ;incstack = 0
 10991  00C2E6  EC5B  F062         	call	_BME280_getStatus	;wreg free
 10992  00C2EA  0101               	movlb	1	; () banked
 10993  00C2EC  6F2D               	movwf	_bme280_status& (0+255),b
 10994                           
 10995                           ; BSR set to: 1
 10996                           ;bme280.c: 274: return (bme280_status.measuring);
 10997  00C2EE  A72D               	btfss	_bme280_status& (0+255),3,b
 10998  00C2F0  D002               	goto	u28770
 10999  00C2F2  0E01               	movlw	1
 11000  00C2F4  0012               	return	
 11001  00C2F6                     u28770:
 11002  00C2F6  0E00               	movlw	0
 11003  00C2F8  0012               	return	
 11004  00C2FA                     __end_of_BME280_isMeasuring:
 11005                           	opt stack 0
 11006                           tblptru	equ	0xFF8
 11007                           tblptrh	equ	0xFF7
 11008                           tblptrl	equ	0xFF6
 11009                           tablat	equ	0xFF5
 11010                           prodh	equ	0xFF4
 11011                           prodl	equ	0xFF3
 11012                           intcon	equ	0xFF2
 11013                           postinc0	equ	0xFEE
 11014                           wreg	equ	0xFE8
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           postdec2	equ	0xFDD
 11018                           fsr2h	equ	0xFDA
 11019                           fsr2l	equ	0xFD9
 11020                           status	equ	0xFD8
 11021                           
 11022 ;; *************** function _BME280_getStatus *****************
 11023 ;; Defined at:
 11024 ;;		line 313 in file "mcc_generated_files/bme280.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;		None
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      unsigned char 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;Total ram usage:        0 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:   17
 11045 ;; This function calls:
 11046 ;;		_BME280_readByte
 11047 ;; This function is called by:
 11048 ;;		_BME280_isMeasuring
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text36
 11053  00C4B6                     __ptext36:
 11054                           	opt stack 0
 11055  00C4B6                     _BME280_getStatus:
 11056                           	opt stack 11
 11057                           
 11058                           ;bme280.c: 315: bme280_status.statusReg = BME280_readByte(0xF3);
 11059                           
 11060                           ; BSR set to: 1
 11061                           ;incstack = 0
 11062  00C4B6  0EF3               	movlw	243
 11063  00C4B8  ECF6  F061         	call	_BME280_readByte
 11064  00C4BC  0101               	movlb	1	; () banked
 11065  00C4BE  6F2D               	movwf	_bme280_status& (0+255),b
 11066                           
 11067                           ; BSR set to: 1
 11068                           ;bme280.c: 316: return bme280_status.statusReg;
 11069  00C4C0  512D               	movf	_bme280_status& (0+255),w,b
 11070  00C4C2  0012               	return	
 11071  00C4C4                     __end_of_BME280_getStatus:
 11072                           	opt stack 0
 11073                           tblptru	equ	0xFF8
 11074                           tblptrh	equ	0xFF7
 11075                           tblptrl	equ	0xFF6
 11076                           tablat	equ	0xFF5
 11077                           prodh	equ	0xFF4
 11078                           prodl	equ	0xFF3
 11079                           intcon	equ	0xFF2
 11080                           postinc0	equ	0xFEE
 11081                           wreg	equ	0xFE8
 11082                           indf2	equ	0xFDF
 11083                           postinc2	equ	0xFDE
 11084                           postdec2	equ	0xFDD
 11085                           fsr2h	equ	0xFDA
 11086                           fsr2l	equ	0xFD9
 11087                           status	equ	0xFD8
 11088                           
 11089 ;; *************** function _BME280_readByte *****************
 11090 ;; Defined at:
 11091 ;;		line 408 in file "mcc_generated_files/bme280.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;  reg_addr        1    wreg     unsigned char 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  reg_addr        1   23[BANK0 ] unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1    wreg      unsigned char 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11109 ;;Total ram usage:        1 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   16
 11112 ;; This function calls:
 11113 ;;		_i2c_read1ByteRegister
 11114 ;; This function is called by:
 11115 ;;		_BME280_readFactoryCalibrationParams
 11116 ;;		_BME280_getStatus
 11117 ;;		_BME280_getID
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text37
 11122  00C3EC                     __ptext37:
 11123                           	opt stack 0
 11124  00C3EC                     _BME280_readByte:
 11125                           	opt stack 11
 11126                           
 11127                           ; BSR set to: 1
 11128                           ;incstack = 0
 11129                           ;BME280_readByte@reg_addr stored from wreg
 11130  00C3EC  0100               	movlb	0	; () banked
 11131  00C3EE  6F77               	movwf	BME280_readByte@reg_addr& (0+255),b
 11132                           
 11133                           ;bme280.c: 410: return i2c_read1ByteRegister(0x76, reg_addr);
 11134  00C3F0  C077  F071         	movff	BME280_readByte@reg_addr,i2c_read1ByteRegister@reg
 11135  00C3F4  0E76               	movlw	118
 11136  00C3F6  ECF0  F04D         	call	_i2c_read1ByteRegister
 11137  00C3FA  0012               	return	
 11138  00C3FC                     __end_of_BME280_readByte:
 11139                           	opt stack 0
 11140                           tblptru	equ	0xFF8
 11141                           tblptrh	equ	0xFF7
 11142                           tblptrl	equ	0xFF6
 11143                           tablat	equ	0xFF5
 11144                           prodh	equ	0xFF4
 11145                           prodl	equ	0xFF3
 11146                           intcon	equ	0xFF2
 11147                           postinc0	equ	0xFEE
 11148                           wreg	equ	0xFE8
 11149                           indf2	equ	0xFDF
 11150                           postinc2	equ	0xFDE
 11151                           postdec2	equ	0xFDD
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _i2c_read1ByteRegister *****************
 11157 ;; Defined at:
 11158 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  address         1    wreg     unsigned char 
 11161 ;;  reg             1   17[BANK0 ] unsigned char 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  address         1   18[BANK0 ] unsigned char 
 11164 ;;  x               2   20[BANK0 ] int 
 11165 ;;  d2              1   22[BANK0 ] unsigned char 
 11166 ;;  e               1   19[BANK0 ] enum E92
 11167 ;; Return value:  Size  Location     Type
 11168 ;;                  1    wreg      unsigned char 
 11169 ;; Registers used:
 11170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11176 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11180 ;;Total ram usage:        6 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:   15
 11183 ;; This function calls:
 11184 ;;		_i2c_close
 11185 ;;		_i2c_masterWrite
 11186 ;;		_i2c_open
 11187 ;;		_i2c_setAddressNACKCallback
 11188 ;;		_i2c_setBuffer
 11189 ;;		_i2c_setDataCompleteCallback
 11190 ;; This function is called by:
 11191 ;;		_BME280_readByte
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text38
 11196  009BE0                     __ptext38:
 11197                           	opt stack 0
 11198  009BE0                     _i2c_read1ByteRegister:
 11199                           	opt stack 11
 11200                           
 11201                           ;incstack = 0
 11202                           ;i2c_read1ByteRegister@address stored from wreg
 11203  009BE0  0100               	movlb	0	; () banked
 11204  009BE2  6F72               	movwf	i2c_read1ByteRegister@address& (0+255),b
 11205                           
 11206                           ;i2c_simple_master.c: 67: uint8_t d2=42;
 11207  009BE4  0E2A               	movlw	42
 11208  009BE6  0100               	movlb	0	; () banked
 11209  009BE8  6F76               	movwf	i2c_read1ByteRegister@d2& (0+255),b
 11210                           
 11211                           ;i2c_simple_master.c: 68: i2c_error_t e;
 11212                           ;i2c_simple_master.c: 69: int x;
 11213                           ;i2c_simple_master.c: 71: for(x = 2; x != 0; x--)
 11214  009BEA  0E00               	movlw	0
 11215  009BEC  6F75               	movwf	(i2c_read1ByteRegister@x+1)& (0+255),b
 11216  009BEE  0E02               	movlw	2
 11217  009BF0  6F74               	movwf	i2c_read1ByteRegister@x& (0+255),b
 11218                           
 11219                           ; BSR set to: 0
 11220  009BF2  5174               	movf	i2c_read1ByteRegister@x& (0+255),w,b
 11221  009BF4  1175               	iorwf	(i2c_read1ByteRegister@x+1)& (0+255),w,b
 11222  009BF6  B4D8               	btfsc	status,2,c
 11223  009BF8  D03B               	goto	u28610
 11224  009BFA                     
 11225                           ; BSR set to: 0
 11226                           
 11227                           ; BSR set to: 0
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;i2c_simple_master.c: 72: {
 11231                           ;i2c_simple_master.c: 73: while(!i2c_open(address));
 11232  009BFA  0100               	movlb	0	; () banked
 11233  009BFC  5172               	movf	i2c_read1ByteRegister@address& (0+255),w,b
 11234  009BFE  EC0E  F04C         	call	_i2c_open
 11235  009C02  0900               	iorlw	0
 11236  009C04  B4D8               	btfsc	status,2,c
 11237  009C06  D7F9               	goto	l267
 11238                           
 11239                           ;i2c_simple_master.c: 74: i2c_setDataCompleteCallback(rd1RegCompleteHandler,&d2);
 11240  009C08  0E1E               	movlw	low _rd1RegCompleteHandler
 11241  009C0A  0100               	movlb	0	; () banked
 11242  009C0C  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 11243  009C0E  0EB9               	movlw	high _rd1RegCompleteHandler
 11244  009C10  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 11245  009C12  0E76               	movlw	low i2c_read1ByteRegister@d2
 11246  009C14  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 11247  009C16  0E00               	movlw	high i2c_read1ByteRegister@d2
 11248  009C18  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 11249  009C1A  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 11250                           
 11251                           ;i2c_simple_master.c: 75: i2c_setBuffer(&reg,1);
 11252  009C1E  0E71               	movlw	low i2c_read1ByteRegister@reg
 11253  009C20  0100               	movlb	0	; () banked
 11254  009C22  6F60               	movwf	i2c_setBuffer@buffer& (0+255),b
 11255  009C24  0E00               	movlw	high i2c_read1ByteRegister@reg
 11256  009C26  6F61               	movwf	(i2c_setBuffer@buffer+1)& (0+255),b
 11257  009C28  0E00               	movlw	0
 11258  009C2A  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 11259  009C2C  0E01               	movlw	1
 11260  009C2E  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 11261  009C30  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 11262                           
 11263                           ;i2c_simple_master.c: 76: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
 11264  009C34  0EAC               	movlw	low _i2c_restartWrite
 11265  009C36  0100               	movlb	0	; () banked
 11266  009C38  6F65               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
 11267  009C3A  0EC6               	movlw	high _i2c_restartWrite
 11268  009C3C  6F66               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
 11269  009C3E  0E00               	movlw	0
 11270  009C40  6F67               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
 11271  009C42  0E00               	movlw	0
 11272  009C44  6F68               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
 11273  009C46  ECF6  F060         	call	_i2c_setAddressNACKCallback	;wreg free
 11274                           
 11275                           ;i2c_simple_master.c: 77: i2c_masterWrite();
 11276  009C4A  EC02  F063         	call	_i2c_masterWrite	;wreg free
 11277  009C4E  EC16  F05F         	call	_i2c_close	;wreg free
 11278  009C52  0100               	movlb	0	; () banked
 11279  009C54  6F73               	movwf	i2c_read1ByteRegister@e& (0+255),b
 11280  009C56  0573               	decf	i2c_read1ByteRegister@e& (0+255),w,b
 11281  009C58  B4D8               	btfsc	status,2,c
 11282  009C5A  D7F9               	goto	l273
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;i2c_simple_master.c: 79: if(e==I2C_NOERR) break;
 11286                           
 11287                           ; BSR set to: 0
 11288  009C5C  5173               	movf	i2c_read1ByteRegister@e& (0+255),w,b
 11289  009C5E  B4D8               	btfsc	status,2,c
 11290  009C60  D007               	goto	u28610
 11291                           
 11292                           ; BSR set to: 0
 11293                           
 11294                           ; BSR set to: 0
 11295                           
 11296                           ; BSR set to: 0
 11297  009C62  0774               	decf	i2c_read1ByteRegister@x& (0+255),f,b
 11298  009C64  A0D8               	btfss	status,0,c
 11299  009C66  0775               	decf	(i2c_read1ByteRegister@x+1)& (0+255),f,b
 11300                           
 11301                           ; BSR set to: 0
 11302  009C68  5174               	movf	i2c_read1ByteRegister@x& (0+255),w,b
 11303  009C6A  1175               	iorwf	(i2c_read1ByteRegister@x+1)& (0+255),w,b
 11304  009C6C  A4D8               	btfss	status,2,c
 11305  009C6E  D7C5               	goto	l267
 11306  009C70                     u28610:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;i2c_simple_master.c: 80: }
 11310                           ;i2c_simple_master.c: 83: return d2;
 11311                           
 11312                           ; BSR set to: 0
 11313  009C70  5176               	movf	i2c_read1ByteRegister@d2& (0+255),w,b
 11314  009C72  0012               	return	
 11315  009C74                     __end_of_i2c_read1ByteRegister:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           postinc0	equ	0xFEE
 11325                           wreg	equ	0xFE8
 11326                           indf2	equ	0xFDF
 11327                           postinc2	equ	0xFDE
 11328                           postdec2	equ	0xFDD
 11329                           fsr2h	equ	0xFDA
 11330                           fsr2l	equ	0xFD9
 11331                           status	equ	0xFD8
 11332                           
 11333 ;; *************** function _i2c_setAddressNACKCallback *****************
 11334 ;; Defined at:
 11335 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 11338 ;;		 -> i2c_restartWrite(1), 
 11339 ;;  p               2    7[BANK0 ] PTR void 
 11340 ;;		 -> NULL(0), 
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;		None
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      void 
 11345 ;; Registers used:
 11346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;Total ram usage:        4 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    8
 11359 ;; This function calls:
 11360 ;;		_setCallBack
 11361 ;; This function is called by:
 11362 ;;		_i2c_write1ByteRegister
 11363 ;;		_i2c_read1ByteRegister
 11364 ;;		_i2c_readDataBlock
 11365 ;;		_i2c_writeNBytes
 11366 ;;		_i2c_read2ByteRegister
 11367 ;;		_i2c_write2ByteRegister
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text39
 11372  00C1EC                     __ptext39:
 11373                           	opt stack 0
 11374  00C1EC                     _i2c_setAddressNACKCallback:
 11375                           	opt stack 17
 11376                           
 11377                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;incstack = 0
 11381  00C1EC  C065  F060         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
 11382  00C1F0  C066  F061         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
 11383  00C1F4  C067  F062         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
 11384  00C1F8  C068  F063         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
 11385  00C1FC  0E02               	movlw	2
 11386  00C1FE  EC9B  F052         	call	_setCallBack
 11387  00C202  0012               	return		;funcret
 11388  00C204                     __end_of_i2c_setAddressNACKCallback:
 11389                           	opt stack 0
 11390                           tblptru	equ	0xFF8
 11391                           tblptrh	equ	0xFF7
 11392                           tblptrl	equ	0xFF6
 11393                           tablat	equ	0xFF5
 11394                           prodh	equ	0xFF4
 11395                           prodl	equ	0xFF3
 11396                           intcon	equ	0xFF2
 11397                           postinc0	equ	0xFEE
 11398                           wreg	equ	0xFE8
 11399                           indf2	equ	0xFDF
 11400                           postinc2	equ	0xFDE
 11401                           postdec2	equ	0xFDD
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406 ;; *************** function _i2c_open *****************
 11407 ;; Defined at:
 11408 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  address         1    wreg     unsigned char 
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;  address         1    2[BANK0 ] unsigned char 
 11413 ;;  ret             1    3[BANK0 ] enum E7166
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      enum E7166
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;Total ram usage:        2 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    8
 11430 ;; This function calls:
 11431 ;;		_i2c1_driver_open
 11432 ;;		_i2c1_driver_setBusCollisionISR
 11433 ;;		_i2c1_driver_setI2cISR
 11434 ;;		_mssp1_clearIRQ
 11435 ;; This function is called by:
 11436 ;;		_i2c_write1ByteRegister
 11437 ;;		_i2c_read1ByteRegister
 11438 ;;		_i2c_readDataBlock
 11439 ;;		_i2c_writeNBytes
 11440 ;;		_i2c_read2ByteRegister
 11441 ;;		_i2c_write2ByteRegister
 11442 ;;		_i2c_readNBytes
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text40
 11447  00981C                     __ptext40:
 11448                           	opt stack 0
 11449  00981C                     _i2c_open:
 11450                           	opt stack 17
 11451                           
 11452                           ;incstack = 0
 11453                           ;i2c_open@address stored from wreg
 11454  00981C  0100               	movlb	0	; () banked
 11455  00981E  6F62               	movwf	i2c_open@address& (0+255),b
 11456                           
 11457                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
 11458  009820  0E01               	movlw	1
 11459  009822  0100               	movlb	0	; () banked
 11460  009824  6F63               	movwf	i2c_open@ret& (0+255),b
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;i2c_master.c: 120: if(!i2c_status.inUse)
 11464  009826  0103               	movlb	3	; () banked
 11465  009828  B3A0               	btfsc	_i2c_status& (0+255),1,b
 11466  00982A  D049               	goto	l88
 11467                           
 11468                           ; BSR set to: 3
 11469                           ;i2c_master.c: 121: {
 11470                           ;i2c_master.c: 122: i2c_status.address = address;
 11471  00982C  C062  F3A1         	movff	i2c_open@address,_i2c_status+1
 11472                           
 11473                           ; BSR set to: 3
 11474                           ;i2c_master.c: 123: i2c_status.busy = 0;
 11475  009830  91A0               	bcf	_i2c_status& (0+255),0,b
 11476                           
 11477                           ; BSR set to: 3
 11478                           ;i2c_master.c: 124: i2c_status.inUse = 1;
 11479  009832  83A0               	bsf	_i2c_status& (0+255),1,b
 11480                           
 11481                           ; BSR set to: 3
 11482                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
 11483  009834  97A0               	bcf	_i2c_status& (0+255),3,b
 11484                           
 11485                           ; BSR set to: 3
 11486                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
 11487  009836  0E0E               	movlw	14
 11488  009838  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 11489                           
 11490                           ; BSR set to: 3
 11491                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
 11492  00983A  0E01               	movlw	1
 11493  00983C  6FA9               	movwf	(_i2c_status+9)& (0+255),b
 11494  00983E  0EF4               	movlw	244
 11495  009840  6FA8               	movwf	(_i2c_status+8)& (0+255),b
 11496                           
 11497                           ; BSR set to: 3
 11498                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
 11499  009842  85A0               	bsf	_i2c_status& (0+255),2,b
 11500                           
 11501                           ; BSR set to: 3
 11502                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
 11503  009844  0EA8               	movlw	low _returnStop
 11504  009846  6FAC               	movwf	(_i2c_status+12)& (0+255),b
 11505  009848  0EC6               	movlw	high _returnStop
 11506  00984A  6FAD               	movwf	(_i2c_status+13)& (0+255),b
 11507                           
 11508                           ; BSR set to: 3
 11509                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
 11510  00984C  0E00               	movlw	0
 11511  00984E  6FB8               	movwf	(_i2c_status+24)& (0+255),b
 11512  009850  0E00               	movlw	0
 11513  009852  6FB9               	movwf	(_i2c_status+25)& (0+255),b
 11514                           
 11515                           ; BSR set to: 3
 11516                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
 11517  009854  0EA8               	movlw	low _returnStop
 11518  009856  6FAE               	movwf	(_i2c_status+14)& (0+255),b
 11519  009858  0EC6               	movlw	high _returnStop
 11520  00985A  6FAF               	movwf	(_i2c_status+15)& (0+255),b
 11521                           
 11522                           ; BSR set to: 3
 11523                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
 11524  00985C  0E00               	movlw	0
 11525  00985E  6FBA               	movwf	(_i2c_status+26)& (0+255),b
 11526  009860  0E00               	movlw	0
 11527  009862  6FBB               	movwf	(_i2c_status+27)& (0+255),b
 11528                           
 11529                           ; BSR set to: 3
 11530                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
 11531  009864  0EA8               	movlw	low _returnStop
 11532  009866  6FB0               	movwf	(_i2c_status+16)& (0+255),b
 11533  009868  0EC6               	movlw	high _returnStop
 11534  00986A  6FB1               	movwf	(_i2c_status+17)& (0+255),b
 11535                           
 11536                           ; BSR set to: 3
 11537                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
 11538  00986C  0E00               	movlw	0
 11539  00986E  6FBC               	movwf	(_i2c_status+28)& (0+255),b
 11540  009870  0E00               	movlw	0
 11541  009872  6FBD               	movwf	(_i2c_status+29)& (0+255),b
 11542                           
 11543                           ; BSR set to: 3
 11544                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
 11545  009874  0EA8               	movlw	low _returnStop
 11546  009876  6FB2               	movwf	(_i2c_status+18)& (0+255),b
 11547  009878  0EC6               	movlw	high _returnStop
 11548  00987A  6FB3               	movwf	(_i2c_status+19)& (0+255),b
 11549                           
 11550                           ; BSR set to: 3
 11551                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
 11552  00987C  0E00               	movlw	0
 11553  00987E  6FBE               	movwf	(_i2c_status+30)& (0+255),b
 11554  009880  0E00               	movlw	0
 11555  009882  6FBF               	movwf	(_i2c_status+31)& (0+255),b
 11556                           
 11557                           ; BSR set to: 3
 11558                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
 11559  009884  0EA4               	movlw	low _returnReset
 11560  009886  6FB4               	movwf	(_i2c_status+20)& (0+255),b
 11561  009888  0EC6               	movlw	high _returnReset
 11562  00988A  6FB5               	movwf	(_i2c_status+21)& (0+255),b
 11563                           
 11564                           ; BSR set to: 3
 11565                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
 11566  00988C  0E00               	movlw	0
 11567  00988E  6FC0               	movwf	(_i2c_status+32)& (0+255),b
 11568  009890  0E00               	movlw	0
 11569  009892  6FC1               	movwf	(_i2c_status+33)& (0+255),b
 11570                           
 11571                           ; BSR set to: 3
 11572                           ;i2c_master.c: 142: i2c1_driver_open();
 11573  009894  EC48  F061         	call	_i2c1_driver_open	;wreg free
 11574                           
 11575                           ;i2c_master.c: 143: mssp1_clearIRQ();
 11576  009898  EC60  F063         	call	_mssp1_clearIRQ	;wreg free
 11577                           
 11578                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
 11579  00989C  0E00               	movlw	0
 11580  00989E  0100               	movlb	0	; () banked
 11581  0098A0  6F60               	movwf	i2c1_driver_setBusCollisionISR@handler& (0+255),b
 11582  0098A2  0E00               	movlw	0
 11583  0098A4  6F61               	movwf	(i2c1_driver_setBusCollisionISR@handler+1)& (0+255),b
 11584  0098A6  EC99  F062         	call	_i2c1_driver_setBusCollisionISR	;wreg free
 11585                           
 11586                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
 11587  0098AA  0E28               	movlw	low _i2c_ISR
 11588  0098AC  0100               	movlb	0	; () banked
 11589  0098AE  6F60               	movwf	i2c1_driver_setI2cISR@handler& (0+255),b
 11590  0098B0  0EAD               	movlw	high _i2c_ISR
 11591  0098B2  6F61               	movwf	(i2c1_driver_setI2cISR@handler+1)& (0+255),b
 11592  0098B4  EC94  F062         	call	_i2c1_driver_setI2cISR	;wreg free
 11593                           
 11594                           ;i2c_master.c: 151: ret = I2C_NOERR;
 11595  0098B8  0E00               	movlw	0
 11596  0098BA  0100               	movlb	0	; () banked
 11597  0098BC  6F63               	movwf	i2c_open@ret& (0+255),b
 11598  0098BE                     l88:
 11599                           
 11600                           ;i2c_master.c: 152: }
 11601                           ;i2c_master.c: 153: return ret;
 11602                           
 11603                           ; BSR set to: 0
 11604  0098BE  0100               	movlb	0	; () banked
 11605  0098C0  5163               	movf	i2c_open@ret& (0+255),w,b
 11606  0098C2  0012               	return	
 11607  0098C4                     __end_of_i2c_open:
 11608                           	opt stack 0
 11609                           tblptru	equ	0xFF8
 11610                           tblptrh	equ	0xFF7
 11611                           tblptrl	equ	0xFF6
 11612                           tablat	equ	0xFF5
 11613                           prodh	equ	0xFF4
 11614                           prodl	equ	0xFF3
 11615                           intcon	equ	0xFF2
 11616                           postinc0	equ	0xFEE
 11617                           wreg	equ	0xFE8
 11618                           indf2	equ	0xFDF
 11619                           postinc2	equ	0xFDE
 11620                           postdec2	equ	0xFDD
 11621                           fsr2h	equ	0xFDA
 11622                           fsr2l	equ	0xFD9
 11623                           status	equ	0xFD8
 11624                           
 11625 ;; *************** function _i2c1_driver_setI2cISR *****************
 11626 ;; Defined at:
 11627 ;;		line 263 in file "mcc_generated_files/i2c1_driver.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11630 ;;		 -> i2c_ISR(1), 
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      void 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;Total ram usage:        2 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:    7
 11649 ;; This function calls:
 11650 ;;		Nothing
 11651 ;; This function is called by:
 11652 ;;		_i2c_open
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text41
 11657  00C528                     __ptext41:
 11658                           	opt stack 0
 11659  00C528                     _i2c1_driver_setI2cISR:
 11660                           	opt stack 17
 11661                           
 11662                           ;i2c1_driver.c: 264: i2c1_driver_i2cISR = handler;
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;incstack = 0
 11666  00C528  C060  F126         	movff	i2c1_driver_setI2cISR@handler,_i2c1_driver_i2cISR
 11667  00C52C  C061  F127         	movff	i2c1_driver_setI2cISR@handler+1,_i2c1_driver_i2cISR+1
 11668  00C530  0012               	return		;funcret
 11669  00C532                     __end_of_i2c1_driver_setI2cISR:
 11670                           	opt stack 0
 11671                           tblptru	equ	0xFF8
 11672                           tblptrh	equ	0xFF7
 11673                           tblptrl	equ	0xFF6
 11674                           tablat	equ	0xFF5
 11675                           prodh	equ	0xFF4
 11676                           prodl	equ	0xFF3
 11677                           intcon	equ	0xFF2
 11678                           postinc0	equ	0xFEE
 11679                           wreg	equ	0xFE8
 11680                           indf2	equ	0xFDF
 11681                           postinc2	equ	0xFDE
 11682                           postdec2	equ	0xFDD
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8
 11686                           
 11687 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
 11688 ;; Defined at:
 11689 ;;		line 259 in file "mcc_generated_files/i2c1_driver.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  handler         2    0[BANK0 ] PTR FTN()void 
 11692 ;;		 -> i2c_busCollisionISR(1), 
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        2 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:    7
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_i2c_open
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text42
 11719  00C532                     __ptext42:
 11720                           	opt stack 0
 11721  00C532                     _i2c1_driver_setBusCollisionISR:
 11722                           	opt stack 17
 11723                           
 11724                           ;i2c1_driver.c: 260: i2c1_driver_busCollisionISR = handler;
 11725                           
 11726                           ;incstack = 0
 11727  00C532  C060  F128         	movff	i2c1_driver_setBusCollisionISR@handler,_i2c1_driver_busCollisionISR
 11728  00C536  C061  F129         	movff	i2c1_driver_setBusCollisionISR@handler+1,_i2c1_driver_busCollisionISR+1
 11729  00C53A  0012               	return		;funcret
 11730  00C53C                     __end_of_i2c1_driver_setBusCollisionISR:
 11731                           	opt stack 0
 11732                           tblptru	equ	0xFF8
 11733                           tblptrh	equ	0xFF7
 11734                           tblptrl	equ	0xFF6
 11735                           tablat	equ	0xFF5
 11736                           prodh	equ	0xFF4
 11737                           prodl	equ	0xFF3
 11738                           intcon	equ	0xFF2
 11739                           postinc0	equ	0xFEE
 11740                           wreg	equ	0xFE8
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function _i2c1_driver_open *****************
 11749 ;; Defined at:
 11750 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;		None               void
 11757 ;; Registers used:
 11758 ;;		wreg, status,2
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    7
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_i2c_open
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           	psect	text43
 11779  00C290                     __ptext43:
 11780                           	opt stack 0
 11781  00C290                     _i2c1_driver_open:
 11782                           	opt stack 17
 11783                           
 11784                           ;i2c1_driver.c: 86: if(!SSP1CON1bits.SSPEN)
 11785                           
 11786                           ;incstack = 0
 11787  00C290  BAC6               	btfsc	4038,5,c	;volatile
 11788  00C292  0012               	return	
 11789                           
 11790                           ;i2c1_driver.c: 87: {
 11791                           ;i2c1_driver.c: 88: SSP1STAT = 0x00;
 11792  00C294  0E00               	movlw	0
 11793  00C296  6EC7               	movwf	4039,c	;volatile
 11794                           
 11795                           ;i2c1_driver.c: 89: SSP1CON1 = 0x28;
 11796  00C298  0E28               	movlw	40
 11797  00C29A  6EC6               	movwf	4038,c	;volatile
 11798                           
 11799                           ;i2c1_driver.c: 90: SSP1CON2 = 0x00;
 11800  00C29C  0E00               	movlw	0
 11801  00C29E  6EC5               	movwf	4037,c	;volatile
 11802                           
 11803                           ;i2c1_driver.c: 91: SSP1ADD = 0x27;
 11804  00C2A0  0E27               	movlw	39
 11805  00C2A2  6EC8               	movwf	4040,c	;volatile
 11806                           
 11807                           ;i2c1_driver.c: 94: else
 11808                           ;i2c1_driver.c: 95: return 0;
 11809                           ;	Return value of _i2c1_driver_open is never used
 11810                           
 11811                           ;i2c1_driver.c: 93: }
 11812                           
 11813                           ;i2c1_driver.c: 92: return 1;
 11814                           ;	Return value of _i2c1_driver_open is never used
 11815  00C2A4  0012               	return	
 11816  00C2A6                     __end_of_i2c1_driver_open:
 11817                           	opt stack 0
 11818                           tblptru	equ	0xFF8
 11819                           tblptrh	equ	0xFF7
 11820                           tblptrl	equ	0xFF6
 11821                           tablat	equ	0xFF5
 11822                           prodh	equ	0xFF4
 11823                           prodl	equ	0xFF3
 11824                           intcon	equ	0xFF2
 11825                           postinc0	equ	0xFEE
 11826                           wreg	equ	0xFE8
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           postdec2	equ	0xFDD
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function _i2c_masterWrite *****************
 11835 ;; Defined at:
 11836 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;		None
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;		None
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      enum E7166
 11843 ;; Registers used:
 11844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;Total ram usage:        0 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:   14
 11857 ;; This function calls:
 11858 ;;		_i2c_masterOperation
 11859 ;; This function is called by:
 11860 ;;		_i2c_write1ByteRegister
 11861 ;;		_i2c_read1ByteRegister
 11862 ;;		_i2c_readDataBlock
 11863 ;;		_i2c_writeNBytes
 11864 ;;		_i2c_read2ByteRegister
 11865 ;;		_i2c_write2ByteRegister
 11866 ;; This function uses a non-reentrant model
 11867 ;;
 11868                           
 11869                           	psect	text44
 11870  00C604                     __ptext44:
 11871                           	opt stack 0
 11872  00C604                     _i2c_masterWrite:
 11873                           	opt stack 11
 11874                           
 11875                           ;i2c_master.c: 224: return i2c_masterOperation(0);
 11876                           ;	Return value of _i2c_masterWrite is never used
 11877                           
 11878                           ;incstack = 0
 11879  00C604  0E00               	movlw	0
 11880  00C606  ECBA  F05B         	call	_i2c_masterOperation
 11881  00C60A  0012               	return	
 11882  00C60C                     __end_of_i2c_masterWrite:
 11883                           	opt stack 0
 11884                           tblptru	equ	0xFF8
 11885                           tblptrh	equ	0xFF7
 11886                           tblptrl	equ	0xFF6
 11887                           tablat	equ	0xFF5
 11888                           prodh	equ	0xFF4
 11889                           prodl	equ	0xFF3
 11890                           intcon	equ	0xFF2
 11891                           postinc0	equ	0xFEE
 11892                           wreg	equ	0xFE8
 11893                           indf2	equ	0xFDF
 11894                           postinc2	equ	0xFDE
 11895                           postdec2	equ	0xFDD
 11896                           fsr2h	equ	0xFDA
 11897                           fsr2l	equ	0xFD9
 11898                           status	equ	0xFD8
 11899                           
 11900 ;; *************** function _i2c_masterOperation *****************
 11901 ;; Defined at:
 11902 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  read            1    wreg     unsigned char 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  read            1   15[BANK0 ] unsigned char 
 11907 ;;  ret             1   16[BANK0 ] enum E7166
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      enum E7166
 11910 ;; Registers used:
 11911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11921 ;;Total ram usage:        2 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:   13
 11924 ;; This function calls:
 11925 ;;		_i2c1_driver_start
 11926 ;;		_i2c_poller
 11927 ;;		_mssp1_IRQisEnabled
 11928 ;; This function is called by:
 11929 ;;		_i2c_masterWrite
 11930 ;;		_i2c_masterRead
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           	psect	text45
 11935  00B774                     __ptext45:
 11936                           	opt stack 0
 11937  00B774                     _i2c_masterOperation:
 11938                           	opt stack 11
 11939                           
 11940                           ;incstack = 0
 11941                           ;i2c_masterOperation@read stored from wreg
 11942  00B774  0100               	movlb	0	; () banked
 11943  00B776  6F6F               	movwf	i2c_masterOperation@read& (0+255),b
 11944                           
 11945                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
 11946  00B778  0E01               	movlw	1
 11947  00B77A  0100               	movlb	0	; () banked
 11948  00B77C  6F70               	movwf	i2c_masterOperation@ret& (0+255),b
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;i2c_master.c: 196: if(!i2c_status.busy)
 11952  00B77E  0103               	movlb	3	; () banked
 11953  00B780  B1A0               	btfsc	_i2c_status& (0+255),0,b
 11954  00B782  D013               	goto	l109
 11955                           
 11956                           ; BSR set to: 3
 11957                           ;i2c_master.c: 197: {
 11958                           ;i2c_master.c: 198: i2c_status.busy = 1;
 11959  00B784  81A0               	bsf	_i2c_status& (0+255),0,b
 11960                           
 11961                           ; BSR set to: 3
 11962                           ;i2c_master.c: 199: ret = I2C_NOERR;
 11963  00B786  0E00               	movlw	0
 11964  00B788  0100               	movlb	0	; () banked
 11965  00B78A  6F70               	movwf	i2c_masterOperation@ret& (0+255),b
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;i2c_master.c: 201: if(read)
 11969  00B78C  516F               	movf	i2c_masterOperation@read& (0+255),w,b
 11970  00B78E  B4D8               	btfsc	status,2,c
 11971  00B790  D002               	goto	l107
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;i2c_master.c: 202: {
 11975                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
 11976  00B792  0E01               	movlw	1
 11977  00B794  D001               	goto	L2
 11978  00B796                     l107:
 11979                           
 11980                           ;i2c_master.c: 205: else
 11981                           ;i2c_master.c: 206: {
 11982                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
 11983                           
 11984                           ; BSR set to: 3
 11985  00B796  0E02               	movlw	2
 11986  00B798                     L2:
 11987  00B798  0103               	movlb	3	; () banked
 11988  00B79A  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 11989                           
 11990                           ; BSR set to: 3
 11991                           ;i2c_master.c: 208: }
 11992                           ;i2c_master.c: 209: i2c1_driver_start();
 11993                           
 11994                           ; BSR set to: 3
 11995  00B79C  EC5C  F063         	call	_i2c1_driver_start	;wreg free
 11996                           
 11997                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
 11998  00B7A0  EC7D  F061         	call	_mssp1_IRQisEnabled	;wreg free
 11999  00B7A4  A0D8               	btfss	status,0,c
 12000                           
 12001                           ;i2c_master.c: 212: i2c_poller();
 12002  00B7A6  EC97  F060         	call	_i2c_poller	;wreg free
 12003  00B7AA                     l109:
 12004                           
 12005                           ;i2c_master.c: 213: }
 12006                           ;i2c_master.c: 214: return ret;
 12007  00B7AA  0100               	movlb	0	; () banked
 12008  00B7AC  5170               	movf	i2c_masterOperation@ret& (0+255),w,b
 12009  00B7AE  0012               	return	
 12010  00B7B0                     __end_of_i2c_masterOperation:
 12011                           	opt stack 0
 12012                           tblptru	equ	0xFF8
 12013                           tblptrh	equ	0xFF7
 12014                           tblptrl	equ	0xFF6
 12015                           tablat	equ	0xFF5
 12016                           prodh	equ	0xFF4
 12017                           prodl	equ	0xFF3
 12018                           intcon	equ	0xFF2
 12019                           postinc0	equ	0xFEE
 12020                           wreg	equ	0xFE8
 12021                           indf2	equ	0xFDF
 12022                           postinc2	equ	0xFDE
 12023                           postdec2	equ	0xFDD
 12024                           fsr2h	equ	0xFDA
 12025                           fsr2l	equ	0xFD9
 12026                           status	equ	0xFD8
 12027                           
 12028 ;; *************** function _mssp1_IRQisEnabled *****************
 12029 ;; Defined at:
 12030 ;;		line 44 in file "mcc_generated_files/i2c1_driver.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;		None
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;		None               void
 12037 ;; Registers used:
 12038 ;;		wreg, status,0
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;Total ram usage:        1 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    7
 12051 ;; This function calls:
 12052 ;;		Nothing
 12053 ;; This function is called by:
 12054 ;;		_i2c_masterOperation
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text46
 12059  00C2FA                     __ptext46:
 12060                           	opt stack 0
 12061  00C2FA                     _mssp1_IRQisEnabled:
 12062                           	opt stack 16
 12063                           
 12064                           ;i2c1_driver.c: 46: return PIE1bits.SSP1IE;
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;incstack = 0
 12068  00C2FA  A69D               	btfss	3997,3,c	;volatile
 12069  00C2FC  D004               	goto	u10380
 12070  00C2FE  0100               	movlb	0	; () banked
 12071  00C300  6B60               	clrf	??_mssp1_IRQisEnabled& (0+255),b
 12072  00C302  2B60               	incf	??_mssp1_IRQisEnabled& (0+255),f,b
 12073  00C304  D002               	goto	u10388
 12074  00C306                     u10380:
 12075  00C306  0100               	movlb	0	; () banked
 12076  00C308  6B60               	clrf	??_mssp1_IRQisEnabled& (0+255),b
 12077  00C30A                     u10388:
 12078  00C30A  3160               	rrcf	??_mssp1_IRQisEnabled& (0+255),w,b
 12079  00C30C  0012               	return	
 12080  00C30E                     __end_of_mssp1_IRQisEnabled:
 12081                           	opt stack 0
 12082                           tblptru	equ	0xFF8
 12083                           tblptrh	equ	0xFF7
 12084                           tblptrl	equ	0xFF6
 12085                           tablat	equ	0xFF5
 12086                           prodh	equ	0xFF4
 12087                           prodl	equ	0xFF3
 12088                           intcon	equ	0xFF2
 12089                           postinc0	equ	0xFEE
 12090                           wreg	equ	0xFE8
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           postdec2	equ	0xFDD
 12094                           fsr2h	equ	0xFDA
 12095                           fsr2l	equ	0xFD9
 12096                           status	equ	0xFD8
 12097                           
 12098 ;; *************** function _i2c_poller *****************
 12099 ;; Defined at:
 12100 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:   12
 12121 ;; This function calls:
 12122 ;;		_i2c_ISR
 12123 ;;		_mssp1_waitForEvent
 12124 ;; This function is called by:
 12125 ;;		_i2c_masterOperation
 12126 ;; This function uses a non-reentrant model
 12127 ;;
 12128                           
 12129                           	psect	text47
 12130  00C12E                     __ptext47:
 12131                           	opt stack 0
 12132  00C12E                     _i2c_poller:
 12133                           	opt stack 11
 12134                           
 12135                           ;i2c_master.c: 232: while(i2c_status.busy)
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;incstack = 0
 12139  00C12E  D009               	goto	l119
 12140  00C130                     
 12141                           ;i2c_master.c: 233: {
 12142                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
 12143  00C130  0E00               	movlw	0
 12144  00C132  0100               	movlb	0	; () banked
 12145  00C134  6F60               	movwf	mssp1_waitForEvent@timeout& (0+255),b
 12146  00C136  0E00               	movlw	0
 12147  00C138  6F61               	movwf	(mssp1_waitForEvent@timeout+1)& (0+255),b
 12148  00C13A  ECAF  F061         	call	_mssp1_waitForEvent	;wreg free
 12149                           
 12150                           ;i2c_master.c: 235: i2c_ISR();
 12151  00C13E  EC94  F056         	call	_i2c_ISR	;wreg free
 12152  00C142                     l119:
 12153  00C142  0103               	movlb	3	; () banked
 12154  00C144  A1A0               	btfss	_i2c_status& (0+255),0,b
 12155  00C146  0012               	return	
 12156  00C148  D7F3               	goto	l120
 12157  00C14A                     __end_of_i2c_poller:
 12158                           	opt stack 0
 12159                           tblptru	equ	0xFF8
 12160                           tblptrh	equ	0xFF7
 12161                           tblptrl	equ	0xFF6
 12162                           tablat	equ	0xFF5
 12163                           prodh	equ	0xFF4
 12164                           prodl	equ	0xFF3
 12165                           intcon	equ	0xFF2
 12166                           postinc0	equ	0xFEE
 12167                           wreg	equ	0xFE8
 12168                           indf2	equ	0xFDF
 12169                           postinc2	equ	0xFDE
 12170                           postdec2	equ	0xFDD
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function _mssp1_waitForEvent *****************
 12176 ;; Defined at:
 12177 ;;		line 69 in file "mcc_generated_files/i2c1_driver.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  timeout         2    0[BANK0 ] PTR unsigned int 
 12180 ;;		 -> NULL(0), 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;		None
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;Total ram usage:        2 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:    7
 12199 ;; This function calls:
 12200 ;;		Nothing
 12201 ;; This function is called by:
 12202 ;;		_i2c_poller
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text48
 12207  00C35E                     __ptext48:
 12208                           	opt stack 0
 12209  00C35E                     _mssp1_waitForEvent:
 12210                           	opt stack 15
 12211                           
 12212                           ;i2c1_driver.c: 74: if(PIR1bits.SSP1IF == 0)
 12213                           
 12214                           ; BSR set to: 3
 12215                           ;incstack = 0
 12216  00C35E  B69E               	btfsc	3998,3,c	;volatile
 12217  00C360  0012               	return	
 12218  00C362                     u9830:
 12219                           
 12220                           ;i2c1_driver.c: 77: {
 12221                           ;i2c1_driver.c: 78: if(PIR1bits.SSP1IF) break;
 12222                           
 12223                           ;i2c1_driver.c: 75: {
 12224                           ;i2c1_driver.c: 76: while(1)
 12225  00C362  B69E               	btfsc	3998,3,c	;volatile
 12226  00C364  0012               	return	
 12227                           
 12228                           ;i2c1_driver.c: 79: _delay((unsigned long)((100)*(16000000/4000000.0)));
 12229  00C366  0E85               	movlw	133
 12230  00C368                     u29127:
 12231  00C368  2EE8               	decfsz	wreg,f,c
 12232  00C36A  D7FE               	bra	u29127
 12233  00C36C  F000               	nop	
 12234  00C36E  D7F9               	goto	u9830
 12235  00C370                     __end_of_mssp1_waitForEvent:
 12236                           	opt stack 0
 12237                           tblptru	equ	0xFF8
 12238                           tblptrh	equ	0xFF7
 12239                           tblptrl	equ	0xFF6
 12240                           tablat	equ	0xFF5
 12241                           prodh	equ	0xFF4
 12242                           prodl	equ	0xFF3
 12243                           intcon	equ	0xFF2
 12244                           postinc0	equ	0xFEE
 12245                           wreg	equ	0xFE8
 12246                           indf2	equ	0xFDF
 12247                           postinc2	equ	0xFDE
 12248                           postdec2	equ	0xFDD
 12249                           fsr2h	equ	0xFDA
 12250                           fsr2l	equ	0xFD9
 12251                           status	equ	0xFD8
 12252                           
 12253 ;; *************** function _i2c_ISR *****************
 12254 ;; Defined at:
 12255 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;		None
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;		None
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;Total ram usage:        2 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:   11
 12276 ;; This function calls:
 12277 ;;		_do_I2C_DO_ACK
 12278 ;;		_do_I2C_DO_ADDRESS_NACK
 12279 ;;		_do_I2C_DO_NACK_RESTART
 12280 ;;		_do_I2C_DO_NACK_STOP
 12281 ;;		_do_I2C_IDLE
 12282 ;;		_do_I2C_RCEN
 12283 ;;		_do_I2C_RESET
 12284 ;;		_do_I2C_RX
 12285 ;;		_do_I2C_SEND_ADR_READ
 12286 ;;		_do_I2C_SEND_ADR_WRITE
 12287 ;;		_do_I2C_SEND_RESTART
 12288 ;;		_do_I2C_SEND_RESTART_READ
 12289 ;;		_do_I2C_SEND_RESTART_WRITE
 12290 ;;		_do_I2C_SEND_STOP
 12291 ;;		_do_I2C_TX
 12292 ;;		_do_I2C_TX_EMPTY
 12293 ;;		_i2c1_driver_isNACK
 12294 ;;		_mssp1_clearIRQ
 12295 ;; This function is called by:
 12296 ;;		_i2c_open
 12297 ;;		_i2c_poller
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text49
 12302  00AD28                     __ptext49:
 12303                           	opt stack 0
 12304  00AD28                     _i2c_ISR:
 12305                           	opt stack 11
 12306                           
 12307                           ;i2c_master.c: 421: mssp1_clearIRQ();
 12308                           
 12309                           ;incstack = 0
 12310  00AD28  EC60  F063         	call	_mssp1_clearIRQ	;wreg free
 12311                           
 12312                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
 12313  00AD2C  0103               	movlb	3	; () banked
 12314  00AD2E  A7A0               	btfss	_i2c_status& (0+255),3,b
 12315  00AD30  D007               	goto	l209
 12316                           
 12317                           ; BSR set to: 3
 12318  00AD32  EC87  F061         	call	_i2c1_driver_isNACK	;wreg free
 12319  00AD36  A0D8               	btfss	status,0,c
 12320  00AD38  D003               	goto	l209
 12321                           
 12322                           ;i2c_master.c: 428: {
 12323                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 12324  00AD3A  0E0F               	movlw	15
 12325  00AD3C  0103               	movlb	3	; () banked
 12326  00AD3E  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 12327  00AD40                     l209:
 12328                           
 12329                           ;i2c_master.c: 430: }
 12330                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 12331                           
 12332                           ; BSR set to: 3
 12333  00AD40  0103               	movlb	3	; () banked
 12334  00AD42  51AA               	movf	(_i2c_status+10)& (0+255),w,b
 12335  00AD44  0D02               	mullw	2
 12336  00AD46  0EB5               	movlw	low _fsmStateTable
 12337  00AD48  24F3               	addwf	prodl,w,c
 12338  00AD4A  6EF6               	movwf	tblptrl,c
 12339  00AD4C  0EFE               	movlw	high _fsmStateTable
 12340  00AD4E  20F4               	addwfc	prodh,w,c
 12341  00AD50  6EF7               	movwf	tblptrh,c
 12342  00AD52                     	if	1	;There are 3 active tblptr bytes
 12343  00AD52  6AF8               	clrf	tblptru,c
 12344  00AD54  0E00               	movlw	low (__mediumconst shr (0+16))
 12345  00AD56  22F8               	addwfc	tblptru,f,c
 12346  00AD58                     	endif
 12347  00AD58  0009               	tblrd		*+
 12348  00AD5A  CFF5 F06D          	movff	tablat,??_i2c_ISR
 12349  00AD5E  0009               	tblrd		*+
 12350  00AD60  CFF5 F06E          	movff	tablat,??_i2c_ISR+1
 12351  00AD64  D801               	call	u28498
 12352  00AD66  D00A               	goto	u28499
 12353  00AD68                     u28498:
 12354  00AD68  0005               	push	
 12355  00AD6A  6EFA               	movwf	pclath,c
 12356  00AD6C  0100               	movlb	0	; () banked
 12357  00AD6E  516D               	movf	??_i2c_ISR& (0+255),w,b
 12358  00AD70  6EFD               	movwf	tosl,c
 12359  00AD72  516E               	movf	(??_i2c_ISR+1)& (0+255),w,b
 12360  00AD74  6EFE               	movwf	tosh,c
 12361  00AD76  6AFF               	clrf	tosu,c
 12362  00AD78  50FA               	movf	pclath,w,c
 12363  00AD7A  0012               	return		;indir
 12364  00AD7C                     u28499:
 12365  00AD7C  0103               	movlb	3	; () banked
 12366  00AD7E  6FAA               	movwf	(_i2c_status+10)& (0+255),b
 12367                           
 12368                           ; BSR set to: 3
 12369  00AD80  0012               	return		;funcret
 12370  00AD82                     __end_of_i2c_ISR:
 12371                           	opt stack 0
 12372                           tosu	equ	0xFFF
 12373                           tosh	equ	0xFFE
 12374                           tosl	equ	0xFFD
 12375                           pclath	equ	0xFFA
 12376                           tblptru	equ	0xFF8
 12377                           tblptrh	equ	0xFF7
 12378                           tblptrl	equ	0xFF6
 12379                           tablat	equ	0xFF5
 12380                           prodh	equ	0xFF4
 12381                           prodl	equ	0xFF3
 12382                           intcon	equ	0xFF2
 12383                           postinc0	equ	0xFEE
 12384                           wreg	equ	0xFE8
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           postdec2	equ	0xFDD
 12388                           fsr2h	equ	0xFDA
 12389                           fsr2l	equ	0xFD9
 12390                           status	equ	0xFD8
 12391                           
 12392 ;; *************** function _do_I2C_RX *****************
 12393 ;; Defined at:
 12394 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;		None
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      enum E7338
 12401 ;; Registers used:
 12402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:   10
 12415 ;; This function calls:
 12416 ;;		Absolute function
 12417 ;;		_do_I2C_DO_NACK_RESTART
 12418 ;;		_do_I2C_DO_NACK_STOP
 12419 ;;		_i2c1_driver_getRXData
 12420 ;;		_i2c1_driver_sendACK
 12421 ;;		_i2c_restartWrite
 12422 ;;		_rd1RegCompleteHandler
 12423 ;;		_rd2RegCompleteHandler
 12424 ;;		_rdBlkRegCompleteHandler
 12425 ;;		_returnReset
 12426 ;;		_returnStop
 12427 ;;		_wr1RegCompleteHandler
 12428 ;;		_wr2RegCompleteHandler
 12429 ;; This function is called by:
 12430 ;;		_i2c_ISR
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           	psect	text50
 12435  00A61A                     __ptext50:
 12436                           	opt stack 0
 12437  00A61A                     _do_I2C_RX:
 12438                           	opt stack 11
 12439                           
 12440                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
 12441                           
 12442                           ; BSR set to: 3
 12443                           ;incstack = 0
 12444  00A61A  EC4E  F063         	call	_i2c1_driver_getRXData	;wreg free
 12445  00A61E  C3A2  FFD9         	movff	_i2c_status+2,fsr2l
 12446  00A622  C3A3  FFDA         	movff	_i2c_status+3,fsr2h
 12447  00A626  6EDF               	movwf	indf2,c
 12448  00A628  0103               	movlb	3	; () banked
 12449  00A62A  4BA2               	infsnz	(_i2c_status+2)& (0+255),f,b
 12450  00A62C  2BA3               	incf	(_i2c_status+3)& (0+255),f,b
 12451                           
 12452                           ; BSR set to: 3
 12453                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 12454  00A62E  07A4               	decf	(_i2c_status+4)& (0+255),f,b
 12455  00A630  A0D8               	btfss	status,0,c
 12456  00A632  07A5               	decf	(_i2c_status+5)& (0+255),f,b
 12457  00A634  51A4               	movf	(_i2c_status+4)& (0+255),w,b
 12458  00A636  11A5               	iorwf	(_i2c_status+5)& (0+255),w,b
 12459  00A638  B4D8               	btfsc	status,2,c
 12460  00A63A  D004               	goto	l185
 12461                           
 12462                           ; BSR set to: 3
 12463                           ;i2c_master.c: 361: {
 12464                           ;i2c_master.c: 362: i2c1_driver_sendACK();
 12465  00A63C  EC31  F063         	call	_i2c1_driver_sendACK	;wreg free
 12466                           
 12467                           ;i2c_master.c: 363: return I2C_RCEN;
 12468  00A640  0E05               	movlw	5
 12469                           
 12470                           ;i2c_master.c: 364: }
 12471  00A642  0012               	return	
 12472  00A644                     l185:
 12473                           
 12474                           ; BSR set to: 3
 12475                           ;i2c_master.c: 365: else
 12476                           ;i2c_master.c: 366: {
 12477                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 12478  00A644  85A0               	bsf	_i2c_status& (0+255),2,b
 12479                           
 12480                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 12481  00A646  D006               	goto	l188
 12482  00A648                     
 12483                           ;i2c_master.c: 371: case i2c_restart_read:
 12484                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 12485                           
 12486                           ; BSR set to: 3
 12487                           
 12488                           ; BSR set to: 3
 12489  00A648  EC06  F063         	call	_do_I2C_DO_NACK_RESTART	;wreg free
 12490  00A64C  0012               	return	
 12491  00A64E                     
 12492                           ;i2c_master.c: 375: case i2c_stop:
 12493                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 12494                           
 12495                           ;i2c_master.c: 374: case i2c_continue:
 12496  00A64E  EC0A  F063         	call	_do_I2C_DO_NACK_STOP	;wreg free
 12497                           
 12498                           ;i2c_master.c: 377: }
 12499  00A652  0012               	return	
 12500  00A654                     l188:
 12501  00A654  C3B8  F069         	movff	_i2c_status+24,rdBlkRegCompleteHandler@p
 12502  00A658  C3B9  F06A         	movff	_i2c_status+25,rdBlkRegCompleteHandler@p+1
 12503  00A65C  D801               	call	u28458
 12504  00A65E  D00A               	goto	u28459
 12505  00A660                     u28458:
 12506  00A660  0005               	push	
 12507  00A662  6EFA               	movwf	pclath,c
 12508  00A664  0103               	movlb	3	; () banked
 12509  00A666  51AC               	movf	(_i2c_status+12)& (0+255),w,b
 12510  00A668  6EFD               	movwf	tosl,c
 12511  00A66A  51AD               	movf	(_i2c_status+13)& (0+255),w,b
 12512  00A66C  6EFE               	movwf	tosh,c
 12513  00A66E  6AFF               	clrf	tosu,c
 12514  00A670  50FA               	movf	pclath,w,c
 12515  00A672  0012               	return		;indir
 12516  00A674                     u28459:
 12517                           
 12518                           ; Switch size 1, requested type "space"
 12519                           ; Number of cases is 4, Range of values is 1 to 4
 12520                           ; switch strategies available:
 12521                           ; Name         Instructions Cycles
 12522                           ; simple_byte           13     7 (average)
 12523                           ;	Chosen strategy is simple_byte
 12524  00A674  0A01               	xorlw	1	; case 1
 12525  00A676  B4D8               	btfsc	status,2,c
 12526  00A678  D7EA               	goto	l191
 12527  00A67A  0A03               	xorlw	3	; case 2
 12528  00A67C  B4D8               	btfsc	status,2,c
 12529  00A67E  D7E4               	goto	l189
 12530  00A680  0A01               	xorlw	1	; case 3
 12531  00A682  B4D8               	btfsc	status,2,c
 12532  00A684  D7E1               	goto	l189
 12533  00A686  0A07               	xorlw	7	; case 4
 12534  00A688  D7E2               	goto	l191
 12535  00A68A                     __end_of_do_I2C_RX:
 12536                           	opt stack 0
 12537                           tosu	equ	0xFFF
 12538                           tosh	equ	0xFFE
 12539                           tosl	equ	0xFFD
 12540                           pclath	equ	0xFFA
 12541                           tblptru	equ	0xFF8
 12542                           tblptrh	equ	0xFF7
 12543                           tblptrl	equ	0xFF6
 12544                           tablat	equ	0xFF5
 12545                           prodh	equ	0xFF4
 12546                           prodl	equ	0xFF3
 12547                           intcon	equ	0xFF2
 12548                           postinc0	equ	0xFEE
 12549                           wreg	equ	0xFE8
 12550                           indf2	equ	0xFDF
 12551                           postinc2	equ	0xFDE
 12552                           postdec2	equ	0xFDD
 12553                           fsr2h	equ	0xFDA
 12554                           fsr2l	equ	0xFD9
 12555                           status	equ	0xFD8
 12556                           
 12557 ;; *************** function _do_I2C_TX *****************
 12558 ;; Defined at:
 12559 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      enum E7338
 12566 ;; Registers used:
 12567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;Total ram usage:        2 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:   10
 12580 ;; This function calls:
 12581 ;;		Absolute function
 12582 ;;		_do_I2C_SEND_RESTART_READ
 12583 ;;		_do_I2C_SEND_RESTART_WRITE
 12584 ;;		_do_I2C_SEND_STOP
 12585 ;;		_i2c1_driver_TXData
 12586 ;;		_i2c1_driver_isNACK
 12587 ;;		_i2c_restartWrite
 12588 ;;		_rd1RegCompleteHandler
 12589 ;;		_rd2RegCompleteHandler
 12590 ;;		_rdBlkRegCompleteHandler
 12591 ;;		_returnReset
 12592 ;;		_returnStop
 12593 ;;		_wr1RegCompleteHandler
 12594 ;;		_wr2RegCompleteHandler
 12595 ;; This function is called by:
 12596 ;;		_i2c_ISR
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text51
 12601  009D06                     __ptext51:
 12602                           	opt stack 0
 12603  009D06                     _do_I2C_TX:
 12604                           	opt stack 11
 12605                           
 12606                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
 12607                           
 12608                           ;incstack = 0
 12609  009D06  EC87  F061         	call	_i2c1_driver_isNACK	;wreg free
 12610  009D0A  B0D8               	btfsc	status,0,c
 12611  009D0C  D00A               	goto	l170
 12612  009D0E  D024               	goto	l169
 12613  009D10                     
 12614                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 12615  009D10  EC1E  F063         	call	_do_I2C_SEND_RESTART_READ	;wreg free
 12616  009D14  0012               	return	
 12617  009D16                     
 12618                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 12619  009D16  EC1A  F063         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
 12620  009D1A  0012               	return	
 12621  009D1C                     
 12622                           ;i2c_master.c: 345: case i2c_stop:
 12623                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 12624                           
 12625                           ;i2c_master.c: 344: case i2c_continue:
 12626  009D1C  EC12  F063         	call	_do_I2C_SEND_STOP	;wreg free
 12627                           
 12628                           ;i2c_master.c: 347: }
 12629  009D20  0012               	return	
 12630  009D22                     l170:
 12631  009D22  C3BE  F069         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
 12632  009D26  C3BF  F06A         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
 12633  009D2A  D801               	call	u28428
 12634  009D2C  D00A               	goto	u28429
 12635  009D2E                     u28428:
 12636  009D2E  0005               	push	
 12637  009D30  6EFA               	movwf	pclath,c
 12638  009D32  0103               	movlb	3	; () banked
 12639  009D34  51B2               	movf	(_i2c_status+18)& (0+255),w,b
 12640  009D36  6EFD               	movwf	tosl,c
 12641  009D38  51B3               	movf	(_i2c_status+19)& (0+255),w,b
 12642  009D3A  6EFE               	movwf	tosh,c
 12643  009D3C  6AFF               	clrf	tosu,c
 12644  009D3E  50FA               	movf	pclath,w,c
 12645  009D40  0012               	return		;indir
 12646  009D42                     u28429:
 12647                           
 12648                           ; Switch size 1, requested type "space"
 12649                           ; Number of cases is 4, Range of values is 1 to 4
 12650                           ; switch strategies available:
 12651                           ; Name         Instructions Cycles
 12652                           ; simple_byte           13     7 (average)
 12653                           ;	Chosen strategy is simple_byte
 12654  009D42  0A01               	xorlw	1	; case 1
 12655  009D44  B4D8               	btfsc	status,2,c
 12656  009D46  D7EA               	goto	l174
 12657  009D48  0A03               	xorlw	3	; case 2
 12658  009D4A  B4D8               	btfsc	status,2,c
 12659  009D4C  D7E1               	goto	l171
 12660  009D4E  0A01               	xorlw	1	; case 3
 12661  009D50  B4D8               	btfsc	status,2,c
 12662  009D52  D7E1               	goto	l173
 12663  009D54  0A07               	xorlw	7	; case 4
 12664  009D56  D7E2               	goto	l174
 12665  009D58                     l169:
 12666                           
 12667                           ;i2c_master.c: 349: else
 12668                           ;i2c_master.c: 350: {
 12669                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 12670  009D58  0103               	movlb	3	; () banked
 12671  009D5A  97A0               	bcf	_i2c_status& (0+255),3,b
 12672                           
 12673                           ; BSR set to: 3
 12674                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
 12675  009D5C  C3A2  FFD9         	movff	_i2c_status+2,fsr2l
 12676  009D60  C3A3  FFDA         	movff	_i2c_status+3,fsr2h
 12677  009D64  4BA2               	infsnz	(_i2c_status+2)& (0+255),f,b
 12678  009D66  2BA3               	incf	(_i2c_status+3)& (0+255),f,b
 12679  009D68  50DF               	movf	indf2,w,c
 12680  009D6A  EC9E  F062         	call	_i2c1_driver_TXData
 12681                           
 12682                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 12683  009D6E  0103               	movlb	3	; () banked
 12684  009D70  07A4               	decf	(_i2c_status+4)& (0+255),f,b
 12685  009D72  A0D8               	btfss	status,0,c
 12686  009D74  07A5               	decf	(_i2c_status+5)& (0+255),f,b
 12687  009D76  51A4               	movf	(_i2c_status+4)& (0+255),w,b
 12688  009D78  11A5               	iorwf	(_i2c_status+5)& (0+255),w,b
 12689  009D7A  A4D8               	btfss	status,2,c
 12690  009D7C  D005               	goto	l180
 12691                           
 12692                           ; BSR set to: 3
 12693  009D7E  0E00               	movlw	0
 12694  009D80  0100               	movlb	0	; () banked
 12695  009D82  6F6C               	movwf	(_do_I2C_TX$317+1)& (0+255),b
 12696  009D84  0E06               	movlw	6
 12697  009D86  D004               	goto	L3
 12698  009D88                     l180:
 12699                           
 12700                           ; BSR set to: 0
 12701  009D88  0E00               	movlw	0
 12702  009D8A  0100               	movlb	0	; () banked
 12703  009D8C  6F6C               	movwf	(_do_I2C_TX$317+1)& (0+255),b
 12704  009D8E  0E03               	movlw	3
 12705  009D90                     L3:
 12706  009D90  6F6B               	movwf	_do_I2C_TX$317& (0+255),b
 12707                           
 12708                           ; BSR set to: 0
 12709  009D92  516B               	movf	_do_I2C_TX$317& (0+255),w,b
 12710                           
 12711                           ; BSR set to: 0
 12712  009D94  0012               	return	
 12713  009D96                     __end_of_do_I2C_TX:
 12714                           	opt stack 0
 12715                           tosu	equ	0xFFF
 12716                           tosh	equ	0xFFE
 12717                           tosl	equ	0xFFD
 12718                           pclath	equ	0xFFA
 12719                           tblptru	equ	0xFF8
 12720                           tblptrh	equ	0xFF7
 12721                           tblptrl	equ	0xFF6
 12722                           tablat	equ	0xFF5
 12723                           prodh	equ	0xFF4
 12724                           prodl	equ	0xFF3
 12725                           intcon	equ	0xFF2
 12726                           postinc0	equ	0xFEE
 12727                           wreg	equ	0xFE8
 12728                           indf2	equ	0xFDF
 12729                           postinc2	equ	0xFDE
 12730                           postdec2	equ	0xFDD
 12731                           fsr2h	equ	0xFDA
 12732                           fsr2l	equ	0xFD9
 12733                           status	equ	0xFD8
 12734                           
 12735 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 12736 ;; Defined at:
 12737 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;		None
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;		None
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  1    wreg      enum E7338
 12744 ;; Registers used:
 12745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;Total ram usage:        0 bytes
 12756 ;; Hardware stack levels used:    1
 12757 ;; Hardware stack levels required when called:   10
 12758 ;; This function calls:
 12759 ;;		Absolute function
 12760 ;;		_do_I2C_SEND_RESTART
 12761 ;;		_do_I2C_SEND_STOP
 12762 ;;		_i2c_restartWrite
 12763 ;;		_rd1RegCompleteHandler
 12764 ;;		_rd2RegCompleteHandler
 12765 ;;		_rdBlkRegCompleteHandler
 12766 ;;		_returnReset
 12767 ;;		_returnStop
 12768 ;;		_wr1RegCompleteHandler
 12769 ;;		_wr2RegCompleteHandler
 12770 ;; This function is called by:
 12771 ;;		_i2c_ISR
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text52
 12776  00B412                     __ptext52:
 12777                           	opt stack 0
 12778  00B412                     _do_I2C_DO_ADDRESS_NACK:
 12779                           	opt stack 11
 12780                           
 12781                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 12782                           
 12783                           ;incstack = 0
 12784  00B412  0103               	movlb	3	; () banked
 12785  00B414  97A0               	bcf	_i2c_status& (0+255),3,b
 12786                           
 12787                           ; BSR set to: 3
 12788                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 12789  00B416  0E02               	movlw	2
 12790  00B418  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 12791                           
 12792                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 12793  00B41A  D006               	goto	l161
 12794  00B41C                     
 12795                           ;i2c_master.c: 326: case i2c_restart_write:
 12796                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 12797                           
 12798                           ; BSR set to: 3
 12799                           
 12800                           ; BSR set to: 3
 12801  00B41C  EC16  F063         	call	_do_I2C_SEND_RESTART	;wreg free
 12802  00B420  0012               	return	
 12803  00B422                     
 12804                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 12805  00B422  EC12  F063         	call	_do_I2C_SEND_STOP	;wreg free
 12806                           
 12807                           ;i2c_master.c: 330: }
 12808  00B426  0012               	return	
 12809  00B428                     l161:
 12810  00B428  C3BC  F069         	movff	_i2c_status+28,rdBlkRegCompleteHandler@p
 12811  00B42C  C3BD  F06A         	movff	_i2c_status+29,rdBlkRegCompleteHandler@p+1
 12812  00B430  D801               	call	u28408
 12813  00B432  D00A               	goto	u28409
 12814  00B434                     u28408:
 12815  00B434  0005               	push	
 12816  00B436  6EFA               	movwf	pclath,c
 12817  00B438  0103               	movlb	3	; () banked
 12818  00B43A  51B0               	movf	(_i2c_status+16)& (0+255),w,b
 12819  00B43C  6EFD               	movwf	tosl,c
 12820  00B43E  51B1               	movf	(_i2c_status+17)& (0+255),w,b
 12821  00B440  6EFE               	movwf	tosh,c
 12822  00B442  6AFF               	clrf	tosu,c
 12823  00B444  50FA               	movf	pclath,w,c
 12824  00B446  0012               	return		;indir
 12825  00B448                     u28409:
 12826                           
 12827                           ; Switch size 1, requested type "space"
 12828                           ; Number of cases is 2, Range of values is 2 to 3
 12829                           ; switch strategies available:
 12830                           ; Name         Instructions Cycles
 12831                           ; simple_byte            7     4 (average)
 12832                           ;	Chosen strategy is simple_byte
 12833  00B448  0A02               	xorlw	2	; case 2
 12834  00B44A  B4D8               	btfsc	status,2,c
 12835  00B44C  D7E7               	goto	l162
 12836  00B44E  0A01               	xorlw	1	; case 3
 12837  00B450  B4D8               	btfsc	status,2,c
 12838  00B452  D7E4               	goto	l162
 12839  00B454  D7E6               	goto	l165
 12840  00B456                     __end_of_do_I2C_DO_ADDRESS_NACK:
 12841                           	opt stack 0
 12842                           tosu	equ	0xFFF
 12843                           tosh	equ	0xFFE
 12844                           tosl	equ	0xFFD
 12845                           pclath	equ	0xFFA
 12846                           tblptru	equ	0xFF8
 12847                           tblptrh	equ	0xFF7
 12848                           tblptrl	equ	0xFF6
 12849                           tablat	equ	0xFF5
 12850                           prodh	equ	0xFF4
 12851                           prodl	equ	0xFF3
 12852                           intcon	equ	0xFF2
 12853                           postinc0	equ	0xFEE
 12854                           wreg	equ	0xFE8
 12855                           indf2	equ	0xFDF
 12856                           postinc2	equ	0xFDE
 12857                           postdec2	equ	0xFDD
 12858                           fsr2h	equ	0xFDA
 12859                           fsr2l	equ	0xFD9
 12860                           status	equ	0xFD8
 12861                           
 12862 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 12863 ;; Defined at:
 12864 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;		None
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;		None
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  1    wreg      enum E7338
 12871 ;; Registers used:
 12872 ;;		wreg, cstack
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12882 ;;Total ram usage:        0 bytes
 12883 ;; Hardware stack levels used:    1
 12884 ;; Hardware stack levels required when called:    8
 12885 ;; This function calls:
 12886 ;;		_i2c1_driver_sendNACK
 12887 ;; This function is called by:
 12888 ;;		_do_I2C_RX
 12889 ;;		_i2c_ISR
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893                           	psect	text53
 12894  00C60C                     __ptext53:
 12895                           	opt stack 0
 12896  00C60C                     _do_I2C_DO_NACK_RESTART:
 12897                           	opt stack 12
 12898                           
 12899                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
 12900                           
 12901                           ;incstack = 0
 12902  00C60C  EC2E  F063         	call	_i2c1_driver_sendNACK	;wreg free
 12903                           
 12904                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 12905  00C610  0E09               	movlw	9
 12906  00C612  0012               	return	
 12907  00C614                     __end_of_do_I2C_DO_NACK_RESTART:
 12908                           	opt stack 0
 12909                           tosu	equ	0xFFF
 12910                           tosh	equ	0xFFE
 12911                           tosl	equ	0xFFD
 12912                           pclath	equ	0xFFA
 12913                           tblptru	equ	0xFF8
 12914                           tblptrh	equ	0xFF7
 12915                           tblptrl	equ	0xFF6
 12916                           tablat	equ	0xFF5
 12917                           prodh	equ	0xFF4
 12918                           prodl	equ	0xFF3
 12919                           intcon	equ	0xFF2
 12920                           postinc0	equ	0xFEE
 12921                           wreg	equ	0xFE8
 12922                           indf2	equ	0xFDF
 12923                           postinc2	equ	0xFDE
 12924                           postdec2	equ	0xFDD
 12925                           fsr2h	equ	0xFDA
 12926                           fsr2l	equ	0xFD9
 12927                           status	equ	0xFD8
 12928                           
 12929 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 12930 ;; Defined at:
 12931 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      enum E7338
 12938 ;; Registers used:
 12939 ;;		wreg, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;Total ram usage:        0 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:    8
 12952 ;; This function calls:
 12953 ;;		_i2c1_driver_sendNACK
 12954 ;; This function is called by:
 12955 ;;		_do_I2C_RX
 12956 ;;		_i2c_ISR
 12957 ;; This function uses a non-reentrant model
 12958 ;;
 12959                           
 12960                           	psect	text54
 12961  00C614                     __ptext54:
 12962                           	opt stack 0
 12963  00C614                     _do_I2C_DO_NACK_STOP:
 12964                           	opt stack 12
 12965                           
 12966                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
 12967                           
 12968                           ;incstack = 0
 12969  00C614  EC2E  F063         	call	_i2c1_driver_sendNACK	;wreg free
 12970                           
 12971                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 12972  00C618  0E0A               	movlw	10
 12973  00C61A  0012               	return	
 12974  00C61C                     __end_of_do_I2C_DO_NACK_STOP:
 12975                           	opt stack 0
 12976                           tosu	equ	0xFFF
 12977                           tosh	equ	0xFFE
 12978                           tosl	equ	0xFFD
 12979                           pclath	equ	0xFFA
 12980                           tblptru	equ	0xFF8
 12981                           tblptrh	equ	0xFF7
 12982                           tblptrl	equ	0xFF6
 12983                           tablat	equ	0xFF5
 12984                           prodh	equ	0xFF4
 12985                           prodl	equ	0xFF3
 12986                           intcon	equ	0xFF2
 12987                           postinc0	equ	0xFEE
 12988                           wreg	equ	0xFE8
 12989                           indf2	equ	0xFDF
 12990                           postinc2	equ	0xFDE
 12991                           postdec2	equ	0xFDD
 12992                           fsr2h	equ	0xFDA
 12993                           fsr2l	equ	0xFD9
 12994                           status	equ	0xFD8
 12995                           
 12996 ;; *************** function _do_I2C_DO_ACK *****************
 12997 ;; Defined at:
 12998 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;		None
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;		None
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      enum E7338
 13005 ;; Registers used:
 13006 ;;		wreg, cstack
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;Total ram usage:        0 bytes
 13017 ;; Hardware stack levels used:    1
 13018 ;; Hardware stack levels required when called:    8
 13019 ;; This function calls:
 13020 ;;		_i2c1_driver_sendACK
 13021 ;; This function is called by:
 13022 ;;		_i2c_ISR
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           	psect	text55
 13027  00C61C                     __ptext55:
 13028                           	opt stack 0
 13029  00C61C                     _do_I2C_DO_ACK:
 13030                           	opt stack 13
 13031                           
 13032                           ;i2c_master.c: 301: i2c1_driver_sendACK();
 13033                           
 13034                           ;incstack = 0
 13035  00C61C  EC31  F063         	call	_i2c1_driver_sendACK	;wreg free
 13036                           
 13037                           ;i2c_master.c: 302: return I2C_RCEN;
 13038  00C620  0E05               	movlw	5
 13039  00C622  0012               	return	
 13040  00C624                     __end_of_do_I2C_DO_ACK:
 13041                           	opt stack 0
 13042                           tosu	equ	0xFFF
 13043                           tosh	equ	0xFFE
 13044                           tosl	equ	0xFFD
 13045                           pclath	equ	0xFFA
 13046                           tblptru	equ	0xFF8
 13047                           tblptrh	equ	0xFF7
 13048                           tblptrl	equ	0xFF6
 13049                           tablat	equ	0xFF5
 13050                           prodh	equ	0xFF4
 13051                           prodl	equ	0xFF3
 13052                           intcon	equ	0xFF2
 13053                           postinc0	equ	0xFEE
 13054                           wreg	equ	0xFE8
 13055                           indf2	equ	0xFDF
 13056                           postinc2	equ	0xFDE
 13057                           postdec2	equ	0xFDD
 13058                           fsr2h	equ	0xFDA
 13059                           fsr2l	equ	0xFD9
 13060                           status	equ	0xFD8
 13061                           
 13062 ;; *************** function _do_I2C_RCEN *****************
 13063 ;; Defined at:
 13064 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;		None
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      enum E7338
 13071 ;; Registers used:
 13072 ;;		wreg, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13082 ;;Total ram usage:        0 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    8
 13085 ;; This function calls:
 13086 ;;		_i2c1_driver_startRX
 13087 ;; This function is called by:
 13088 ;;		_i2c_ISR
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text56
 13093  00C4EE                     __ptext56:
 13094                           	opt stack 0
 13095  00C4EE                     _do_I2C_RCEN:
 13096                           	opt stack 13
 13097                           
 13098                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 13099                           
 13100                           ;incstack = 0
 13101  00C4EE  0103               	movlb	3	; () banked
 13102  00C4F0  97A0               	bcf	_i2c_status& (0+255),3,b
 13103                           
 13104                           ; BSR set to: 3
 13105                           ;i2c_master.c: 295: i2c1_driver_startRX();
 13106  00C4F2  EC50  F063         	call	_i2c1_driver_startRX	;wreg free
 13107                           
 13108                           ;i2c_master.c: 296: return I2C_RX;
 13109  00C4F6  0E04               	movlw	4
 13110  00C4F8  0012               	return	
 13111  00C4FA                     __end_of_do_I2C_RCEN:
 13112                           	opt stack 0
 13113                           tosu	equ	0xFFF
 13114                           tosh	equ	0xFFE
 13115                           tosl	equ	0xFFD
 13116                           pclath	equ	0xFFA
 13117                           tblptru	equ	0xFF8
 13118                           tblptrh	equ	0xFF7
 13119                           tblptrl	equ	0xFF6
 13120                           tablat	equ	0xFF5
 13121                           prodh	equ	0xFF4
 13122                           prodl	equ	0xFF3
 13123                           intcon	equ	0xFF2
 13124                           postinc0	equ	0xFEE
 13125                           wreg	equ	0xFE8
 13126                           indf2	equ	0xFDF
 13127                           postinc2	equ	0xFDE
 13128                           postdec2	equ	0xFDD
 13129                           fsr2h	equ	0xFDA
 13130                           fsr2l	equ	0xFD9
 13131                           status	equ	0xFD8
 13132                           
 13133 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 13134 ;; Defined at:
 13135 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 13136 ;; Parameters:    Size  Location     Type
 13137 ;;		None
 13138 ;; Auto vars:     Size  Location     Type
 13139 ;;		None
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      enum E7338
 13142 ;; Registers used:
 13143 ;;		wreg, status,2, status,0, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;Total ram usage:        0 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; Hardware stack levels required when called:    8
 13156 ;; This function calls:
 13157 ;;		_i2c1_driver_TXData
 13158 ;; This function is called by:
 13159 ;;		_i2c_ISR
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           	psect	text57
 13164  00C3FC                     __ptext57:
 13165                           	opt stack 0
 13166  00C3FC                     _do_I2C_SEND_ADR_WRITE:
 13167                           	opt stack 13
 13168                           
 13169                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 13170                           
 13171                           ;incstack = 0
 13172  00C3FC  0103               	movlb	3	; () banked
 13173  00C3FE  87A0               	bsf	_i2c_status& (0+255),3,b
 13174                           
 13175                           ; BSR set to: 3
 13176                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
 13177  00C400  51A1               	movf	(_i2c_status+1)& (0+255),w,b
 13178  00C402  25A1               	addwf	(_i2c_status+1)& (0+255),w,b
 13179  00C404  EC9E  F062         	call	_i2c1_driver_TXData
 13180                           
 13181                           ;i2c_master.c: 289: return I2C_TX;
 13182  00C408  0E03               	movlw	3
 13183  00C40A  0012               	return	
 13184  00C40C                     __end_of_do_I2C_SEND_ADR_WRITE:
 13185                           	opt stack 0
 13186                           tosu	equ	0xFFF
 13187                           tosh	equ	0xFFE
 13188                           tosl	equ	0xFFD
 13189                           pclath	equ	0xFFA
 13190                           tblptru	equ	0xFF8
 13191                           tblptrh	equ	0xFF7
 13192                           tblptrl	equ	0xFF6
 13193                           tablat	equ	0xFF5
 13194                           prodh	equ	0xFF4
 13195                           prodl	equ	0xFF3
 13196                           intcon	equ	0xFF2
 13197                           postinc0	equ	0xFEE
 13198                           wreg	equ	0xFE8
 13199                           indf2	equ	0xFDF
 13200                           postinc2	equ	0xFDE
 13201                           postdec2	equ	0xFDD
 13202                           fsr2h	equ	0xFDA
 13203                           fsr2l	equ	0xFD9
 13204                           status	equ	0xFD8
 13205                           
 13206 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 13207 ;; Defined at:
 13208 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      enum E7338
 13215 ;; Registers used:
 13216 ;;		wreg, status,0, cstack
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    8
 13229 ;; This function calls:
 13230 ;;		_i2c1_driver_TXData
 13231 ;; This function is called by:
 13232 ;;		_i2c_ISR
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text58
 13237  00C40C                     __ptext58:
 13238                           	opt stack 0
 13239  00C40C                     _do_I2C_SEND_ADR_READ:
 13240                           	opt stack 13
 13241                           
 13242                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 13243                           
 13244                           ;incstack = 0
 13245  00C40C  0103               	movlb	3	; () banked
 13246  00C40E  87A0               	bsf	_i2c_status& (0+255),3,b
 13247                           
 13248                           ; BSR set to: 3
 13249                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
 13250  00C410  80D8               	bsf	status,0,c
 13251  00C412  35A1               	rlcf	(_i2c_status+1)& (0+255),w,b
 13252  00C414  EC9E  F062         	call	_i2c1_driver_TXData
 13253                           
 13254                           ;i2c_master.c: 282: return I2C_RCEN;
 13255  00C418  0E05               	movlw	5
 13256  00C41A  0012               	return	
 13257  00C41C                     __end_of_do_I2C_SEND_ADR_READ:
 13258                           	opt stack 0
 13259                           tosu	equ	0xFFF
 13260                           tosh	equ	0xFFE
 13261                           tosl	equ	0xFFD
 13262                           pclath	equ	0xFFA
 13263                           tblptru	equ	0xFF8
 13264                           tblptrh	equ	0xFF7
 13265                           tblptrl	equ	0xFF6
 13266                           tablat	equ	0xFF5
 13267                           prodh	equ	0xFF4
 13268                           prodl	equ	0xFF3
 13269                           intcon	equ	0xFF2
 13270                           postinc0	equ	0xFEE
 13271                           wreg	equ	0xFE8
 13272                           indf2	equ	0xFDF
 13273                           postinc2	equ	0xFDE
 13274                           postdec2	equ	0xFDD
 13275                           fsr2h	equ	0xFDA
 13276                           fsr2l	equ	0xFD9
 13277                           status	equ	0xFD8
 13278                           
 13279 ;; *************** function _do_I2C_SEND_STOP *****************
 13280 ;; Defined at:
 13281 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;		None
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;		None
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      enum E7338
 13288 ;; Registers used:
 13289 ;;		wreg, cstack
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;Total ram usage:        0 bytes
 13300 ;; Hardware stack levels used:    1
 13301 ;; Hardware stack levels required when called:    8
 13302 ;; This function calls:
 13303 ;;		_i2c1_driver_stop
 13304 ;; This function is called by:
 13305 ;;		_do_I2C_DO_ADDRESS_NACK
 13306 ;;		_do_I2C_TX
 13307 ;;		_do_I2C_TX_EMPTY
 13308 ;;		_i2c_ISR
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text59
 13313  00C624                     __ptext59:
 13314                           	opt stack 0
 13315  00C624                     _do_I2C_SEND_STOP:
 13316                           	opt stack 12
 13317                           
 13318                           ;i2c_master.c: 274: i2c1_driver_stop();
 13319                           
 13320                           ;incstack = 0
 13321  00C624  EC58  F063         	call	_i2c1_driver_stop	;wreg free
 13322                           
 13323                           ;i2c_master.c: 275: return I2C_IDLE;
 13324  00C628  0E00               	movlw	0
 13325  00C62A  0012               	return	
 13326  00C62C                     __end_of_do_I2C_SEND_STOP:
 13327                           	opt stack 0
 13328                           tosu	equ	0xFFF
 13329                           tosh	equ	0xFFE
 13330                           tosl	equ	0xFFD
 13331                           pclath	equ	0xFFA
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           postinc0	equ	0xFEE
 13340                           wreg	equ	0xFE8
 13341                           indf2	equ	0xFDF
 13342                           postinc2	equ	0xFDE
 13343                           postdec2	equ	0xFDD
 13344                           fsr2h	equ	0xFDA
 13345                           fsr2l	equ	0xFD9
 13346                           status	equ	0xFD8
 13347                           
 13348 ;; *************** function _do_I2C_SEND_RESTART *****************
 13349 ;; Defined at:
 13350 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;		None
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      enum E7338
 13357 ;; Registers used:
 13358 ;;		wreg, cstack
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 0/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;Total ram usage:        0 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:    8
 13371 ;; This function calls:
 13372 ;;		_i2c1_driver_restart
 13373 ;; This function is called by:
 13374 ;;		_do_I2C_DO_ADDRESS_NACK
 13375 ;;		_do_I2C_TX_EMPTY
 13376 ;;		_i2c_ISR
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text60
 13381  00C62C                     __ptext60:
 13382                           	opt stack 0
 13383  00C62C                     _do_I2C_SEND_RESTART:
 13384                           	opt stack 12
 13385                           
 13386                           ;i2c_master.c: 268: i2c1_driver_restart();
 13387                           
 13388                           ;incstack = 0
 13389  00C62C  EC5A  F063         	call	_i2c1_driver_restart	;wreg free
 13390                           
 13391                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 13392  00C630  0E01               	movlw	1
 13393  00C632  0012               	return	
 13394  00C634                     __end_of_do_I2C_SEND_RESTART:
 13395                           	opt stack 0
 13396                           tosu	equ	0xFFF
 13397                           tosh	equ	0xFFE
 13398                           tosl	equ	0xFFD
 13399                           pclath	equ	0xFFA
 13400                           tblptru	equ	0xFF8
 13401                           tblptrh	equ	0xFF7
 13402                           tblptrl	equ	0xFF6
 13403                           tablat	equ	0xFF5
 13404                           prodh	equ	0xFF4
 13405                           prodl	equ	0xFF3
 13406                           intcon	equ	0xFF2
 13407                           postinc0	equ	0xFEE
 13408                           wreg	equ	0xFE8
 13409                           indf2	equ	0xFDF
 13410                           postinc2	equ	0xFDE
 13411                           postdec2	equ	0xFDD
 13412                           fsr2h	equ	0xFDA
 13413                           fsr2l	equ	0xFD9
 13414                           status	equ	0xFD8
 13415                           
 13416 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 13417 ;; Defined at:
 13418 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;		None
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  1    wreg      enum E7338
 13425 ;; Registers used:
 13426 ;;		wreg, cstack
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;Total ram usage:        0 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; Hardware stack levels required when called:    8
 13439 ;; This function calls:
 13440 ;;		_i2c1_driver_restart
 13441 ;; This function is called by:
 13442 ;;		_do_I2C_TX
 13443 ;;		_i2c_ISR
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text61
 13448  00C634                     __ptext61:
 13449                           	opt stack 0
 13450  00C634                     _do_I2C_SEND_RESTART_WRITE:
 13451                           	opt stack 12
 13452                           
 13453                           ;i2c_master.c: 262: i2c1_driver_restart();
 13454                           
 13455                           ;incstack = 0
 13456  00C634  EC5A  F063         	call	_i2c1_driver_restart	;wreg free
 13457                           
 13458                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 13459  00C638  0E02               	movlw	2
 13460  00C63A  0012               	return	
 13461  00C63C                     __end_of_do_I2C_SEND_RESTART_WRITE:
 13462                           	opt stack 0
 13463                           tosu	equ	0xFFF
 13464                           tosh	equ	0xFFE
 13465                           tosl	equ	0xFFD
 13466                           pclath	equ	0xFFA
 13467                           tblptru	equ	0xFF8
 13468                           tblptrh	equ	0xFF7
 13469                           tblptrl	equ	0xFF6
 13470                           tablat	equ	0xFF5
 13471                           prodh	equ	0xFF4
 13472                           prodl	equ	0xFF3
 13473                           intcon	equ	0xFF2
 13474                           postinc0	equ	0xFEE
 13475                           wreg	equ	0xFE8
 13476                           indf2	equ	0xFDF
 13477                           postinc2	equ	0xFDE
 13478                           postdec2	equ	0xFDD
 13479                           fsr2h	equ	0xFDA
 13480                           fsr2l	equ	0xFD9
 13481                           status	equ	0xFD8
 13482                           
 13483 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 13484 ;; Defined at:
 13485 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;		None
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      enum E7338
 13492 ;; Registers used:
 13493 ;;		wreg, cstack
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 0/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;Total ram usage:        0 bytes
 13504 ;; Hardware stack levels used:    1
 13505 ;; Hardware stack levels required when called:    8
 13506 ;; This function calls:
 13507 ;;		_i2c1_driver_restart
 13508 ;; This function is called by:
 13509 ;;		_do_I2C_TX
 13510 ;;		_i2c_ISR
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text62
 13515  00C63C                     __ptext62:
 13516                           	opt stack 0
 13517  00C63C                     _do_I2C_SEND_RESTART_READ:
 13518                           	opt stack 12
 13519                           
 13520                           ;i2c_master.c: 256: i2c1_driver_restart();
 13521                           
 13522                           ;incstack = 0
 13523  00C63C  EC5A  F063         	call	_i2c1_driver_restart	;wreg free
 13524                           
 13525                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 13526  00C640  0E01               	movlw	1
 13527  00C642  0012               	return	
 13528  00C644                     __end_of_do_I2C_SEND_RESTART_READ:
 13529                           	opt stack 0
 13530                           tosu	equ	0xFFF
 13531                           tosh	equ	0xFFE
 13532                           tosl	equ	0xFFD
 13533                           pclath	equ	0xFFA
 13534                           tblptru	equ	0xFF8
 13535                           tblptrh	equ	0xFF7
 13536                           tblptrl	equ	0xFF6
 13537                           tablat	equ	0xFF5
 13538                           prodh	equ	0xFF4
 13539                           prodl	equ	0xFF3
 13540                           intcon	equ	0xFF2
 13541                           postinc0	equ	0xFEE
 13542                           wreg	equ	0xFE8
 13543                           indf2	equ	0xFDF
 13544                           postinc2	equ	0xFDE
 13545                           postdec2	equ	0xFDD
 13546                           fsr2h	equ	0xFDA
 13547                           fsr2l	equ	0xFD9
 13548                           status	equ	0xFD8
 13549                           
 13550 ;; *************** function _do_I2C_IDLE *****************
 13551 ;; Defined at:
 13552 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;		None
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      enum E7338
 13559 ;; Registers used:
 13560 ;;		wreg, status,2
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;Total ram usage:        0 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:    7
 13573 ;; This function calls:
 13574 ;;		Nothing
 13575 ;; This function is called by:
 13576 ;;		_i2c_ISR
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           	psect	text63
 13581  00C4FA                     __ptext63:
 13582                           	opt stack 0
 13583  00C4FA                     _do_I2C_IDLE:
 13584                           	opt stack 14
 13585                           
 13586                           ;i2c_master.c: 249: i2c_status.busy = 0;
 13587                           
 13588                           ;incstack = 0
 13589  00C4FA  0103               	movlb	3	; () banked
 13590  00C4FC  91A0               	bcf	_i2c_status& (0+255),0,b
 13591                           
 13592                           ; BSR set to: 3
 13593                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 13594  00C4FE  0E00               	movlw	0
 13595  00C500  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 13596                           
 13597                           ; BSR set to: 3
 13598                           ;i2c_master.c: 251: return I2C_RESET;
 13599  00C502  0E0E               	movlw	14
 13600  00C504  0012               	return	
 13601  00C506                     __end_of_do_I2C_IDLE:
 13602                           	opt stack 0
 13603                           tosu	equ	0xFFF
 13604                           tosh	equ	0xFFE
 13605                           tosl	equ	0xFFD
 13606                           pclath	equ	0xFFA
 13607                           tblptru	equ	0xFF8
 13608                           tblptrh	equ	0xFF7
 13609                           tblptrl	equ	0xFF6
 13610                           tablat	equ	0xFF5
 13611                           prodh	equ	0xFF4
 13612                           prodl	equ	0xFF3
 13613                           intcon	equ	0xFF2
 13614                           postinc0	equ	0xFEE
 13615                           wreg	equ	0xFE8
 13616                           indf2	equ	0xFDF
 13617                           postinc2	equ	0xFDE
 13618                           postdec2	equ	0xFDD
 13619                           fsr2h	equ	0xFDA
 13620                           fsr2l	equ	0xFD9
 13621                           status	equ	0xFD8
 13622                           
 13623 ;; *************** function _do_I2C_RESET *****************
 13624 ;; Defined at:
 13625 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;		None
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      enum E7338
 13632 ;; Registers used:
 13633 ;;		wreg, status,2, cstack
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;Total ram usage:        0 bytes
 13644 ;; Hardware stack levels used:    1
 13645 ;; Hardware stack levels required when called:    8
 13646 ;; This function calls:
 13647 ;;		_i2c1_driver_resetBus
 13648 ;; This function is called by:
 13649 ;;		_i2c_ISR
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text64
 13654  00C41C                     __ptext64:
 13655                           	opt stack 0
 13656  00C41C                     _do_I2C_RESET:
 13657                           	opt stack 13
 13658                           
 13659                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 13660                           
 13661                           ; BSR set to: 3
 13662                           ;incstack = 0
 13663  00C41C  EC6C  F063         	call	_i2c1_driver_resetBus	;wreg free
 13664                           
 13665                           ;i2c_master.c: 242: i2c_status.busy = 0;
 13666  00C420  0103               	movlb	3	; () banked
 13667  00C422  91A0               	bcf	_i2c_status& (0+255),0,b
 13668                           
 13669                           ; BSR set to: 3
 13670                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 13671  00C424  0E00               	movlw	0
 13672  00C426  6FAB               	movwf	(_i2c_status+11)& (0+255),b
 13673                           
 13674                           ; BSR set to: 3
 13675                           ;i2c_master.c: 244: return I2C_RESET;
 13676  00C428  0E0E               	movlw	14
 13677  00C42A  0012               	return	
 13678  00C42C                     __end_of_do_I2C_RESET:
 13679                           	opt stack 0
 13680                           tosu	equ	0xFFF
 13681                           tosh	equ	0xFFE
 13682                           tosl	equ	0xFFD
 13683                           pclath	equ	0xFFA
 13684                           tblptru	equ	0xFF8
 13685                           tblptrh	equ	0xFF7
 13686                           tblptrl	equ	0xFF6
 13687                           tablat	equ	0xFF5
 13688                           prodh	equ	0xFF4
 13689                           prodl	equ	0xFF3
 13690                           intcon	equ	0xFF2
 13691                           postinc0	equ	0xFEE
 13692                           wreg	equ	0xFE8
 13693                           indf2	equ	0xFDF
 13694                           postinc2	equ	0xFDE
 13695                           postdec2	equ	0xFDD
 13696                           fsr2h	equ	0xFDA
 13697                           fsr2l	equ	0xFD9
 13698                           status	equ	0xFD8
 13699                           
 13700 ;; *************** function _do_I2C_TX_EMPTY *****************
 13701 ;; Defined at:
 13702 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;		None
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      enum E7338
 13709 ;; Registers used:
 13710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;Total ram usage:        0 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:   10
 13723 ;; This function calls:
 13724 ;;		Absolute function
 13725 ;;		_do_I2C_SEND_RESTART
 13726 ;;		_do_I2C_SEND_STOP
 13727 ;;		_i2c_restartWrite
 13728 ;;		_mssp1_setIRQ
 13729 ;;		_rd1RegCompleteHandler
 13730 ;;		_rd2RegCompleteHandler
 13731 ;;		_rdBlkRegCompleteHandler
 13732 ;;		_returnReset
 13733 ;;		_returnStop
 13734 ;;		_wr1RegCompleteHandler
 13735 ;;		_wr2RegCompleteHandler
 13736 ;; This function is called by:
 13737 ;;		_i2c_ISR
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           	psect	text65
 13742  00AF3A                     __ptext65:
 13743                           	opt stack 0
 13744  00AF3A                     _do_I2C_TX_EMPTY:
 13745                           	opt stack 11
 13746                           
 13747                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 13748                           
 13749                           ; BSR set to: 3
 13750                           ;incstack = 0
 13751  00AF3A  0103               	movlb	3	; () banked
 13752  00AF3C  85A0               	bsf	_i2c_status& (0+255),2,b
 13753                           
 13754                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 13755  00AF3E  D00A               	goto	l197
 13756  00AF40                     
 13757                           ;i2c_master.c: 388: case i2c_restart_write:
 13758                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 13759                           
 13760                           ; BSR set to: 3
 13761                           
 13762                           ; BSR set to: 3
 13763  00AF40  EC16  F063         	call	_do_I2C_SEND_RESTART	;wreg free
 13764  00AF44  0012               	return	
 13765  00AF46                     
 13766                           ;i2c_master.c: 391: mssp1_setIRQ();
 13767  00AF46  EC4C  F063         	call	_mssp1_setIRQ	;wreg free
 13768                           
 13769                           ;i2c_master.c: 392: return I2C_TX;
 13770  00AF4A  0E03               	movlw	3
 13771  00AF4C  0012               	return	
 13772  00AF4E                     
 13773                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 13774                           
 13775                           ;i2c_master.c: 394: case i2c_stop:
 13776  00AF4E  EC12  F063         	call	_do_I2C_SEND_STOP	;wreg free
 13777                           
 13778                           ;i2c_master.c: 396: }
 13779  00AF52  0012               	return	
 13780  00AF54                     l197:
 13781  00AF54  C3B8  F069         	movff	_i2c_status+24,rdBlkRegCompleteHandler@p
 13782  00AF58  C3B9  F06A         	movff	_i2c_status+25,rdBlkRegCompleteHandler@p+1
 13783  00AF5C  D801               	call	u28468
 13784  00AF5E  D00A               	goto	u28469
 13785  00AF60                     u28468:
 13786  00AF60  0005               	push	
 13787  00AF62  6EFA               	movwf	pclath,c
 13788  00AF64  0103               	movlb	3	; () banked
 13789  00AF66  51AC               	movf	(_i2c_status+12)& (0+255),w,b
 13790  00AF68  6EFD               	movwf	tosl,c
 13791  00AF6A  51AD               	movf	(_i2c_status+13)& (0+255),w,b
 13792  00AF6C  6EFE               	movwf	tosh,c
 13793  00AF6E  6AFF               	clrf	tosu,c
 13794  00AF70  50FA               	movf	pclath,w,c
 13795  00AF72  0012               	return		;indir
 13796  00AF74                     u28469:
 13797                           
 13798                           ; Switch size 1, requested type "space"
 13799                           ; Number of cases is 4, Range of values is 1 to 4
 13800                           ; switch strategies available:
 13801                           ; Name         Instructions Cycles
 13802                           ; simple_byte           13     7 (average)
 13803                           ;	Chosen strategy is simple_byte
 13804  00AF74  0A01               	xorlw	1	; case 1
 13805  00AF76  B4D8               	btfsc	status,2,c
 13806  00AF78  D7EA               	goto	l202
 13807  00AF7A  0A03               	xorlw	3	; case 2
 13808  00AF7C  B4D8               	btfsc	status,2,c
 13809  00AF7E  D7E0               	goto	l198
 13810  00AF80  0A01               	xorlw	1	; case 3
 13811  00AF82  B4D8               	btfsc	status,2,c
 13812  00AF84  D7DD               	goto	l198
 13813  00AF86  0A07               	xorlw	7	; case 4
 13814  00AF88  B4D8               	btfsc	status,2,c
 13815  00AF8A  D7DD               	goto	l201
 13816  00AF8C  D7E0               	goto	l202
 13817  00AF8E                     __end_of_do_I2C_TX_EMPTY:
 13818                           	opt stack 0
 13819                           tosu	equ	0xFFF
 13820                           tosh	equ	0xFFE
 13821                           tosl	equ	0xFFD
 13822                           pclath	equ	0xFFA
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           postinc0	equ	0xFEE
 13831                           wreg	equ	0xFE8
 13832                           indf2	equ	0xFDF
 13833                           postinc2	equ	0xFDE
 13834                           postdec2	equ	0xFDD
 13835                           fsr2h	equ	0xFDA
 13836                           fsr2l	equ	0xFD9
 13837                           status	equ	0xFD8
 13838                           
 13839 ;; *************** function _mssp1_setIRQ *****************
 13840 ;; Defined at:
 13841 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		None
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    7
 13862 ;; This function calls:
 13863 ;;		Nothing
 13864 ;; This function is called by:
 13865 ;;		_do_I2C_TX_EMPTY
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text66
 13870  00C698                     __ptext66:
 13871                           	opt stack 0
 13872  00C698                     _mssp1_setIRQ:
 13873                           	opt stack 13
 13874                           
 13875                           ;i2c1_driver.c: 61: PIR1bits.SSP1IF = 1;
 13876                           
 13877                           ;incstack = 0
 13878  00C698  869E               	bsf	3998,3,c	;volatile
 13879  00C69A  0012               	return		;funcret
 13880  00C69C                     __end_of_mssp1_setIRQ:
 13881                           	opt stack 0
 13882                           tosu	equ	0xFFF
 13883                           tosh	equ	0xFFE
 13884                           tosl	equ	0xFFD
 13885                           pclath	equ	0xFFA
 13886                           tblptru	equ	0xFF8
 13887                           tblptrh	equ	0xFF7
 13888                           tblptrl	equ	0xFF6
 13889                           tablat	equ	0xFF5
 13890                           prodh	equ	0xFF4
 13891                           prodl	equ	0xFF3
 13892                           intcon	equ	0xFF2
 13893                           postinc0	equ	0xFEE
 13894                           wreg	equ	0xFE8
 13895                           indf2	equ	0xFDF
 13896                           postinc2	equ	0xFDE
 13897                           postdec2	equ	0xFDD
 13898                           fsr2h	equ	0xFDA
 13899                           fsr2l	equ	0xFD9
 13900                           status	equ	0xFD8
 13901                           
 13902 ;; *************** function _i2c1_driver_isNACK *****************
 13903 ;; Defined at:
 13904 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;		None
 13907 ;; Auto vars:     Size  Location     Type
 13908 ;;		None
 13909 ;; Return value:  Size  Location     Type
 13910 ;;		None               void
 13911 ;; Registers used:
 13912 ;;		wreg, status,0
 13913 ;; Tracked objects:
 13914 ;;		On entry : 0/0
 13915 ;;		On exit  : 0/0
 13916 ;;		Unchanged: 0/0
 13917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13920 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;Total ram usage:        1 bytes
 13923 ;; Hardware stack levels used:    1
 13924 ;; Hardware stack levels required when called:    7
 13925 ;; This function calls:
 13926 ;;		Nothing
 13927 ;; This function is called by:
 13928 ;;		_do_I2C_TX
 13929 ;;		_i2c_ISR
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text67
 13934  00C30E                     __ptext67:
 13935                           	opt stack 0
 13936  00C30E                     _i2c1_driver_isNACK:
 13937                           	opt stack 14
 13938                           
 13939                           ;i2c1_driver.c: 164: return SSP1CON2bits.ACKSTAT;
 13940                           
 13941                           ;incstack = 0
 13942  00C30E  ACC5               	btfss	4037,6,c	;volatile
 13943  00C310  D004               	goto	u9460
 13944  00C312  0100               	movlb	0	; () banked
 13945  00C314  6B60               	clrf	??_i2c1_driver_isNACK& (0+255),b
 13946  00C316  2B60               	incf	??_i2c1_driver_isNACK& (0+255),f,b
 13947  00C318  D002               	goto	u9468
 13948  00C31A                     u9460:
 13949  00C31A  0100               	movlb	0	; () banked
 13950  00C31C  6B60               	clrf	??_i2c1_driver_isNACK& (0+255),b
 13951  00C31E                     u9468:
 13952  00C31E  3160               	rrcf	??_i2c1_driver_isNACK& (0+255),w,b
 13953  00C320  0012               	return	
 13954  00C322                     __end_of_i2c1_driver_isNACK:
 13955                           	opt stack 0
 13956                           tosu	equ	0xFFF
 13957                           tosh	equ	0xFFE
 13958                           tosl	equ	0xFFD
 13959                           pclath	equ	0xFFA
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           intcon	equ	0xFF2
 13967                           postinc0	equ	0xFEE
 13968                           wreg	equ	0xFE8
 13969                           indf2	equ	0xFDF
 13970                           postinc2	equ	0xFDE
 13971                           postdec2	equ	0xFDD
 13972                           fsr2h	equ	0xFDA
 13973                           fsr2l	equ	0xFD9
 13974                           status	equ	0xFD8
 13975                           
 13976 ;; *************** function _i2c1_driver_TXData *****************
 13977 ;; Defined at:
 13978 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;  d               1    wreg     unsigned char 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  d               1    0[BANK0 ] unsigned char 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      void 
 13985 ;; Registers used:
 13986 ;;		wreg
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;Total ram usage:        1 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    7
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_do_I2C_SEND_ADR_READ
 14003 ;;		_do_I2C_SEND_ADR_WRITE
 14004 ;;		_do_I2C_TX
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text68
 14009  00C53C                     __ptext68:
 14010                           	opt stack 0
 14011  00C53C                     _i2c1_driver_TXData:
 14012                           	opt stack 13
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;incstack = 0
 14016                           ;i2c1_driver_TXData@d stored from wreg
 14017  00C53C  0100               	movlb	0	; () banked
 14018  00C53E  6F60               	movwf	i2c1_driver_TXData@d& (0+255),b
 14019                           
 14020                           ;i2c1_driver.c: 189: SSP1BUF = d;
 14021  00C540  C060  FFC9         	movff	i2c1_driver_TXData@d,4041	;volatile
 14022  00C544  0012               	return		;funcret
 14023  00C546                     __end_of_i2c1_driver_TXData:
 14024                           	opt stack 0
 14025                           tosu	equ	0xFFF
 14026                           tosh	equ	0xFFE
 14027                           tosl	equ	0xFFD
 14028                           pclath	equ	0xFFA
 14029                           tblptru	equ	0xFF8
 14030                           tblptrh	equ	0xFF7
 14031                           tblptrl	equ	0xFF6
 14032                           tablat	equ	0xFF5
 14033                           prodh	equ	0xFF4
 14034                           prodl	equ	0xFF3
 14035                           intcon	equ	0xFF2
 14036                           postinc0	equ	0xFEE
 14037                           wreg	equ	0xFE8
 14038                           indf2	equ	0xFDF
 14039                           postinc2	equ	0xFDE
 14040                           postdec2	equ	0xFDD
 14041                           fsr2h	equ	0xFDA
 14042                           fsr2l	equ	0xFD9
 14043                           status	equ	0xFD8
 14044                           
 14045 ;; *************** function _i2c1_driver_getRXData *****************
 14046 ;; Defined at:
 14047 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;		None
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;		None
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      unsigned char 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;Total ram usage:        0 bytes
 14066 ;; Hardware stack levels used:    1
 14067 ;; Hardware stack levels required when called:    7
 14068 ;; This function calls:
 14069 ;;		Nothing
 14070 ;; This function is called by:
 14071 ;;		_do_I2C_RX
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text69
 14076  00C69C                     __ptext69:
 14077                           	opt stack 0
 14078  00C69C                     _i2c1_driver_getRXData:
 14079                           	opt stack 13
 14080                           
 14081                           ;i2c1_driver.c: 174: return SSP1BUF;
 14082                           
 14083                           ;incstack = 0
 14084  00C69C  50C9               	movf	4041,w,c	;volatile
 14085  00C69E  0012               	return	
 14086  00C6A0                     __end_of_i2c1_driver_getRXData:
 14087                           	opt stack 0
 14088                           tosu	equ	0xFFF
 14089                           tosh	equ	0xFFE
 14090                           tosl	equ	0xFFD
 14091                           pclath	equ	0xFFA
 14092                           tblptru	equ	0xFF8
 14093                           tblptrh	equ	0xFF7
 14094                           tblptrl	equ	0xFF6
 14095                           tablat	equ	0xFF5
 14096                           prodh	equ	0xFF4
 14097                           prodl	equ	0xFF3
 14098                           intcon	equ	0xFF2
 14099                           postinc0	equ	0xFEE
 14100                           wreg	equ	0xFE8
 14101                           indf2	equ	0xFDF
 14102                           postinc2	equ	0xFDE
 14103                           postdec2	equ	0xFDD
 14104                           fsr2h	equ	0xFDA
 14105                           fsr2l	equ	0xFD9
 14106                           status	equ	0xFD8
 14107                           
 14108 ;; *************** function _i2c1_driver_sendNACK *****************
 14109 ;; Defined at:
 14110 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;		None
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;		None
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      void 
 14117 ;; Registers used:
 14118 ;;		None
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;Total ram usage:        0 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:    7
 14131 ;; This function calls:
 14132 ;;		Nothing
 14133 ;; This function is called by:
 14134 ;;		_do_I2C_DO_NACK_STOP
 14135 ;;		_do_I2C_DO_NACK_RESTART
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text70
 14140  00C65C                     __ptext70:
 14141                           	opt stack 0
 14142  00C65C                     _i2c1_driver_sendNACK:
 14143                           	opt stack 12
 14144                           
 14145                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKDT = 1;
 14146                           
 14147                           ;incstack = 0
 14148  00C65C  8AC5               	bsf	4037,5,c	;volatile
 14149                           
 14150                           ;i2c1_driver.c: 206: SSP1CON2bits.ACKEN = 1;
 14151  00C65E  88C5               	bsf	4037,4,c	;volatile
 14152  00C660  0012               	return		;funcret
 14153  00C662                     __end_of_i2c1_driver_sendNACK:
 14154                           	opt stack 0
 14155                           tosu	equ	0xFFF
 14156                           tosh	equ	0xFFE
 14157                           tosl	equ	0xFFD
 14158                           pclath	equ	0xFFA
 14159                           tblptru	equ	0xFF8
 14160                           tblptrh	equ	0xFF7
 14161                           tblptrl	equ	0xFF6
 14162                           tablat	equ	0xFF5
 14163                           prodh	equ	0xFF4
 14164                           prodl	equ	0xFF3
 14165                           intcon	equ	0xFF2
 14166                           postinc0	equ	0xFEE
 14167                           wreg	equ	0xFE8
 14168                           indf2	equ	0xFDF
 14169                           postinc2	equ	0xFDE
 14170                           postdec2	equ	0xFDD
 14171                           fsr2h	equ	0xFDA
 14172                           fsr2l	equ	0xFD9
 14173                           status	equ	0xFD8
 14174                           
 14175 ;; *************** function _i2c1_driver_resetBus *****************
 14176 ;; Defined at:
 14177 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;		None
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;		None
 14182 ;; Return value:  Size  Location     Type
 14183 ;;                  1    wreg      void 
 14184 ;; Registers used:
 14185 ;;		None
 14186 ;; Tracked objects:
 14187 ;;		On entry : 0/0
 14188 ;;		On exit  : 0/0
 14189 ;;		Unchanged: 0/0
 14190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;Total ram usage:        0 bytes
 14196 ;; Hardware stack levels used:    1
 14197 ;; Hardware stack levels required when called:    7
 14198 ;; This function calls:
 14199 ;;		Nothing
 14200 ;; This function is called by:
 14201 ;;		_do_I2C_RESET
 14202 ;; This function uses a non-reentrant model
 14203 ;;
 14204                           
 14205                           	psect	text71
 14206  00C6D8                     __ptext71:
 14207                           	opt stack 0
 14208  00C6D8                     _i2c1_driver_resetBus:
 14209                           	opt stack 13
 14210                           
 14211                           ;incstack = 0
 14212  00C6D8  0012               	return		;funcret
 14213  00C6DA                     __end_of_i2c1_driver_resetBus:
 14214                           	opt stack 0
 14215                           tosu	equ	0xFFF
 14216                           tosh	equ	0xFFE
 14217                           tosl	equ	0xFFD
 14218                           pclath	equ	0xFFA
 14219                           tblptru	equ	0xFF8
 14220                           tblptrh	equ	0xFF7
 14221                           tblptrl	equ	0xFF6
 14222                           tablat	equ	0xFF5
 14223                           prodh	equ	0xFF4
 14224                           prodl	equ	0xFF3
 14225                           intcon	equ	0xFF2
 14226                           postinc0	equ	0xFEE
 14227                           wreg	equ	0xFE8
 14228                           indf2	equ	0xFDF
 14229                           postinc2	equ	0xFDE
 14230                           postdec2	equ	0xFDD
 14231                           fsr2h	equ	0xFDA
 14232                           fsr2l	equ	0xFD9
 14233                           status	equ	0xFD8
 14234                           
 14235 ;; *************** function _i2c1_driver_startRX *****************
 14236 ;; Defined at:
 14237 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;		None
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;		None
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  1    wreg      void 
 14244 ;; Registers used:
 14245 ;;		None
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;Total ram usage:        0 bytes
 14256 ;; Hardware stack levels used:    1
 14257 ;; Hardware stack levels required when called:    7
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_do_I2C_RCEN
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text72
 14266  00C6A0                     __ptext72:
 14267                           	opt stack 0
 14268  00C6A0                     _i2c1_driver_startRX:
 14269                           	opt stack 13
 14270                           
 14271                           ;i2c1_driver.c: 169: SSP1CON2bits.RCEN = 1;
 14272                           
 14273                           ;incstack = 0
 14274  00C6A0  86C5               	bsf	4037,3,c	;volatile
 14275  00C6A2  0012               	return		;funcret
 14276  00C6A4                     __end_of_i2c1_driver_startRX:
 14277                           	opt stack 0
 14278                           tosu	equ	0xFFF
 14279                           tosh	equ	0xFFE
 14280                           tosl	equ	0xFFD
 14281                           pclath	equ	0xFFA
 14282                           tblptru	equ	0xFF8
 14283                           tblptrh	equ	0xFF7
 14284                           tblptrl	equ	0xFF6
 14285                           tablat	equ	0xFF5
 14286                           prodh	equ	0xFF4
 14287                           prodl	equ	0xFF3
 14288                           intcon	equ	0xFF2
 14289                           postinc0	equ	0xFEE
 14290                           wreg	equ	0xFE8
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           fsr2h	equ	0xFDA
 14295                           fsr2l	equ	0xFD9
 14296                           status	equ	0xFD8
 14297                           
 14298 ;; *************** function _rdBlkRegCompleteHandler *****************
 14299 ;; Defined at:
 14300 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  p               2    9[BANK0 ] PTR void 
 14303 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14304 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;		None
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      enum E97
 14309 ;; Registers used:
 14310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14320 ;;Total ram usage:        2 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    9
 14323 ;; This function calls:
 14324 ;;		_i2c_setBuffer
 14325 ;;		_i2c_setDataCompleteCallback
 14326 ;; This function is called by:
 14327 ;;		_i2c_readDataBlock
 14328 ;;		_do_I2C_DO_ADDRESS_NACK
 14329 ;;		_do_I2C_TX
 14330 ;;		_do_I2C_RX
 14331 ;;		_do_I2C_TX_EMPTY
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text73
 14336  00B456                     __ptext73:
 14337                           	opt stack 0
 14338  00B456                     _rdBlkRegCompleteHandler:
 14339                           	opt stack 11
 14340                           
 14341                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 14342                           
 14343                           ;incstack = 0
 14344  00B456  0100               	movlb	0	; () banked
 14345  00B458  EE20 F002          	lfsr	2,2
 14346  00B45C  5169               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
 14347  00B45E  26D9               	addwf	fsr2l,f,c
 14348  00B460  516A               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
 14349  00B462  22DA               	addwfc	fsr2h,f,c
 14350  00B464  CFDE F060          	movff	postinc2,i2c_setBuffer@buffer
 14351  00B468  CFDD F061          	movff	postdec2,i2c_setBuffer@buffer+1
 14352  00B46C  C069  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 14353  00B470  C06A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 14354  00B474  CFDE F062          	movff	postinc2,i2c_setBuffer@bufferSize
 14355  00B478  CFDD F063          	movff	postdec2,i2c_setBuffer@bufferSize+1
 14356  00B47C  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 14357                           
 14358                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 14359  00B480  0E00               	movlw	0
 14360  00B482  0100               	movlb	0	; () banked
 14361  00B484  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14362  00B486  0E00               	movlw	0
 14363  00B488  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14364  00B48A  0E00               	movlw	0
 14365  00B48C  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14366  00B48E  0E00               	movlw	0
 14367  00B490  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14368  00B492  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14369                           
 14370                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 14371  00B496  0E02               	movlw	2
 14372  00B498  0012               	return	
 14373  00B49A                     __end_of_rdBlkRegCompleteHandler:
 14374                           	opt stack 0
 14375                           tosu	equ	0xFFF
 14376                           tosh	equ	0xFFE
 14377                           tosl	equ	0xFFD
 14378                           pclath	equ	0xFFA
 14379                           tblptru	equ	0xFF8
 14380                           tblptrh	equ	0xFF7
 14381                           tblptrl	equ	0xFF6
 14382                           tablat	equ	0xFF5
 14383                           prodh	equ	0xFF4
 14384                           prodl	equ	0xFF3
 14385                           intcon	equ	0xFF2
 14386                           postinc0	equ	0xFEE
 14387                           wreg	equ	0xFE8
 14388                           indf2	equ	0xFDF
 14389                           postinc2	equ	0xFDE
 14390                           postdec2	equ	0xFDD
 14391                           fsr2h	equ	0xFDA
 14392                           fsr2l	equ	0xFD9
 14393                           status	equ	0xFD8
 14394                           
 14395 ;; *************** function _rd2RegCompleteHandler *****************
 14396 ;; Defined at:
 14397 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  p               2    9[BANK0 ] PTR void 
 14400 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14401 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      enum E97
 14406 ;; Registers used:
 14407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14408 ;; Tracked objects:
 14409 ;;		On entry : 0/0
 14410 ;;		On exit  : 0/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;Total ram usage:        2 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; Hardware stack levels required when called:    9
 14420 ;; This function calls:
 14421 ;;		_i2c_setBuffer
 14422 ;;		_i2c_setDataCompleteCallback
 14423 ;; This function is called by:
 14424 ;;		_i2c_read2ByteRegister
 14425 ;;		_do_I2C_DO_ADDRESS_NACK
 14426 ;;		_do_I2C_TX
 14427 ;;		_do_I2C_RX
 14428 ;;		_do_I2C_TX_EMPTY
 14429 ;; This function uses a non-reentrant model
 14430 ;;
 14431                           
 14432                           	psect	text74
 14433  00B8EE                     __ptext74:
 14434                           	opt stack 0
 14435  00B8EE                     _rd2RegCompleteHandler:
 14436                           	opt stack 11
 14437                           
 14438                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 14439                           
 14440                           ;incstack = 0
 14441  00B8EE  C069  F060         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
 14442  00B8F2  C06A  F061         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14443  00B8F6  0E00               	movlw	0
 14444  00B8F8  0100               	movlb	0	; () banked
 14445  00B8FA  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14446  00B8FC  0E02               	movlw	2
 14447  00B8FE  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14448  00B900  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 14449                           
 14450                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 14451  00B904  0E00               	movlw	0
 14452  00B906  0100               	movlb	0	; () banked
 14453  00B908  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14454  00B90A  0E00               	movlw	0
 14455  00B90C  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14456  00B90E  0E00               	movlw	0
 14457  00B910  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14458  00B912  0E00               	movlw	0
 14459  00B914  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14460  00B916  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14461                           
 14462                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 14463  00B91A  0E02               	movlw	2
 14464  00B91C  0012               	return	
 14465  00B91E                     __end_of_rd2RegCompleteHandler:
 14466                           	opt stack 0
 14467                           tosu	equ	0xFFF
 14468                           tosh	equ	0xFFE
 14469                           tosl	equ	0xFFD
 14470                           pclath	equ	0xFFA
 14471                           tblptru	equ	0xFF8
 14472                           tblptrh	equ	0xFF7
 14473                           tblptrl	equ	0xFF6
 14474                           tablat	equ	0xFF5
 14475                           prodh	equ	0xFF4
 14476                           prodl	equ	0xFF3
 14477                           intcon	equ	0xFF2
 14478                           postinc0	equ	0xFEE
 14479                           wreg	equ	0xFE8
 14480                           indf2	equ	0xFDF
 14481                           postinc2	equ	0xFDE
 14482                           postdec2	equ	0xFDD
 14483                           fsr2h	equ	0xFDA
 14484                           fsr2l	equ	0xFD9
 14485                           status	equ	0xFD8
 14486                           
 14487 ;; *************** function _rd1RegCompleteHandler *****************
 14488 ;; Defined at:
 14489 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  p               2    9[BANK0 ] PTR void 
 14492 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14493 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;		None
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  1    wreg      enum E97
 14498 ;; Registers used:
 14499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14509 ;;Total ram usage:        2 bytes
 14510 ;; Hardware stack levels used:    1
 14511 ;; Hardware stack levels required when called:    9
 14512 ;; This function calls:
 14513 ;;		_i2c_setBuffer
 14514 ;;		_i2c_setDataCompleteCallback
 14515 ;; This function is called by:
 14516 ;;		_i2c_read1ByteRegister
 14517 ;;		_do_I2C_DO_ADDRESS_NACK
 14518 ;;		_do_I2C_TX
 14519 ;;		_do_I2C_RX
 14520 ;;		_do_I2C_TX_EMPTY
 14521 ;; This function uses a non-reentrant model
 14522 ;;
 14523                           
 14524                           	psect	text75
 14525  00B91E                     __ptext75:
 14526                           	opt stack 0
 14527  00B91E                     _rd1RegCompleteHandler:
 14528                           	opt stack 11
 14529                           
 14530                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 14531                           
 14532                           ;incstack = 0
 14533  00B91E  C069  F060         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
 14534  00B922  C06A  F061         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14535  00B926  0E00               	movlw	0
 14536  00B928  0100               	movlb	0	; () banked
 14537  00B92A  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14538  00B92C  0E01               	movlw	1
 14539  00B92E  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14540  00B930  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 14541                           
 14542                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 14543  00B934  0E00               	movlw	0
 14544  00B936  0100               	movlb	0	; () banked
 14545  00B938  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14546  00B93A  0E00               	movlw	0
 14547  00B93C  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14548  00B93E  0E00               	movlw	0
 14549  00B940  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14550  00B942  0E00               	movlw	0
 14551  00B944  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14552  00B946  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14553                           
 14554                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 14555  00B94A  0E02               	movlw	2
 14556  00B94C  0012               	return	
 14557  00B94E                     __end_of_rd1RegCompleteHandler:
 14558                           	opt stack 0
 14559                           tosu	equ	0xFFF
 14560                           tosh	equ	0xFFE
 14561                           tosl	equ	0xFFD
 14562                           pclath	equ	0xFFA
 14563                           tblptru	equ	0xFF8
 14564                           tblptrh	equ	0xFF7
 14565                           tblptrl	equ	0xFF6
 14566                           tablat	equ	0xFF5
 14567                           prodh	equ	0xFF4
 14568                           prodl	equ	0xFF3
 14569                           intcon	equ	0xFF2
 14570                           postinc0	equ	0xFEE
 14571                           wreg	equ	0xFE8
 14572                           indf2	equ	0xFDF
 14573                           postinc2	equ	0xFDE
 14574                           postdec2	equ	0xFDD
 14575                           fsr2h	equ	0xFDA
 14576                           fsr2l	equ	0xFD9
 14577                           status	equ	0xFD8
 14578                           
 14579 ;; *************** function _wr1RegCompleteHandler *****************
 14580 ;; Defined at:
 14581 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14582 ;; Parameters:    Size  Location     Type
 14583 ;;  p               2    9[BANK0 ] PTR void 
 14584 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14585 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;		None
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  1    wreg      enum E97
 14590 ;; Registers used:
 14591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/0
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;Total ram usage:        2 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    9
 14604 ;; This function calls:
 14605 ;;		_i2c_setBuffer
 14606 ;;		_i2c_setDataCompleteCallback
 14607 ;; This function is called by:
 14608 ;;		_i2c_write1ByteRegister
 14609 ;;		_do_I2C_DO_ADDRESS_NACK
 14610 ;;		_do_I2C_TX
 14611 ;;		_do_I2C_RX
 14612 ;;		_do_I2C_TX_EMPTY
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           
 14616                           	psect	text76
 14617  00B94E                     __ptext76:
 14618                           	opt stack 0
 14619  00B94E                     _wr1RegCompleteHandler:
 14620                           	opt stack 11
 14621                           
 14622                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 14623                           
 14624                           ;incstack = 0
 14625  00B94E  C069  F060         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
 14626  00B952  C06A  F061         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14627  00B956  0E00               	movlw	0
 14628  00B958  0100               	movlb	0	; () banked
 14629  00B95A  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14630  00B95C  0E01               	movlw	1
 14631  00B95E  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14632  00B960  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 14633                           
 14634                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 14635  00B964  0E00               	movlw	0
 14636  00B966  0100               	movlb	0	; () banked
 14637  00B968  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14638  00B96A  0E00               	movlw	0
 14639  00B96C  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14640  00B96E  0E00               	movlw	0
 14641  00B970  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14642  00B972  0E00               	movlw	0
 14643  00B974  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14644  00B976  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14645                           
 14646                           ;i2c_simple_master.c: 35: return i2c_continue;
 14647  00B97A  0E04               	movlw	4
 14648  00B97C  0012               	return	
 14649  00B97E                     __end_of_wr1RegCompleteHandler:
 14650                           	opt stack 0
 14651                           tosu	equ	0xFFF
 14652                           tosh	equ	0xFFE
 14653                           tosl	equ	0xFFD
 14654                           pclath	equ	0xFFA
 14655                           tblptru	equ	0xFF8
 14656                           tblptrh	equ	0xFF7
 14657                           tblptrl	equ	0xFF6
 14658                           tablat	equ	0xFF5
 14659                           prodh	equ	0xFF4
 14660                           prodl	equ	0xFF3
 14661                           intcon	equ	0xFF2
 14662                           postinc0	equ	0xFEE
 14663                           wreg	equ	0xFE8
 14664                           indf2	equ	0xFDF
 14665                           postinc2	equ	0xFDE
 14666                           postdec2	equ	0xFDD
 14667                           fsr2h	equ	0xFDA
 14668                           fsr2l	equ	0xFD9
 14669                           status	equ	0xFD8
 14670                           
 14671 ;; *************** function _returnReset *****************
 14672 ;; Defined at:
 14673 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;  p               2    9[BANK0 ] PTR void 
 14676 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14677 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  1    wreg      enum E7171
 14682 ;; Registers used:
 14683 ;;		wreg
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14693 ;;Total ram usage:        2 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    7
 14696 ;; This function calls:
 14697 ;;		Nothing
 14698 ;; This function is called by:
 14699 ;;		_i2c_open
 14700 ;;		_do_I2C_DO_ADDRESS_NACK
 14701 ;;		_do_I2C_TX
 14702 ;;		_do_I2C_RX
 14703 ;;		_do_I2C_TX_EMPTY
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text77
 14708  00C6A4                     __ptext77:
 14709                           	opt stack 0
 14710  00C6A4                     _returnReset:
 14711                           	opt stack 13
 14712                           
 14713                           ;i2c_master.c: 450: return i2c_reset_link;
 14714                           
 14715                           ;incstack = 0
 14716  00C6A4  0E05               	movlw	5
 14717  00C6A6  0012               	return	
 14718  00C6A8                     __end_of_returnReset:
 14719                           	opt stack 0
 14720                           tosu	equ	0xFFF
 14721                           tosh	equ	0xFFE
 14722                           tosl	equ	0xFFD
 14723                           pclath	equ	0xFFA
 14724                           tblptru	equ	0xFF8
 14725                           tblptrh	equ	0xFF7
 14726                           tblptrl	equ	0xFF6
 14727                           tablat	equ	0xFF5
 14728                           prodh	equ	0xFF4
 14729                           prodl	equ	0xFF3
 14730                           intcon	equ	0xFF2
 14731                           postinc0	equ	0xFEE
 14732                           wreg	equ	0xFE8
 14733                           indf2	equ	0xFDF
 14734                           postinc2	equ	0xFDE
 14735                           postdec2	equ	0xFDD
 14736                           fsr2h	equ	0xFDA
 14737                           fsr2l	equ	0xFD9
 14738                           status	equ	0xFD8
 14739                           
 14740 ;; *************** function _returnStop *****************
 14741 ;; Defined at:
 14742 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;  p               2    9[BANK0 ] PTR void 
 14745 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14746 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      enum E7171
 14751 ;; Registers used:
 14752 ;;		wreg
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;Total ram usage:        2 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:    7
 14765 ;; This function calls:
 14766 ;;		Nothing
 14767 ;; This function is called by:
 14768 ;;		_i2c_open
 14769 ;;		_setCallBack
 14770 ;;		_do_I2C_DO_ADDRESS_NACK
 14771 ;;		_do_I2C_TX
 14772 ;;		_do_I2C_RX
 14773 ;;		_do_I2C_TX_EMPTY
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text78
 14778  00C6A8                     __ptext78:
 14779                           	opt stack 0
 14780  00C6A8                     _returnStop:
 14781                           	opt stack 13
 14782                           
 14783                           ;i2c_master.c: 445: return i2c_stop;
 14784                           
 14785                           ;incstack = 0
 14786  00C6A8  0E01               	movlw	1
 14787  00C6AA  0012               	return	
 14788  00C6AC                     __end_of_returnStop:
 14789                           	opt stack 0
 14790                           tosu	equ	0xFFF
 14791                           tosh	equ	0xFFE
 14792                           tosl	equ	0xFFD
 14793                           pclath	equ	0xFFA
 14794                           tblptru	equ	0xFF8
 14795                           tblptrh	equ	0xFF7
 14796                           tblptrl	equ	0xFF6
 14797                           tablat	equ	0xFF5
 14798                           prodh	equ	0xFF4
 14799                           prodl	equ	0xFF3
 14800                           intcon	equ	0xFF2
 14801                           postinc0	equ	0xFEE
 14802                           wreg	equ	0xFE8
 14803                           indf2	equ	0xFDF
 14804                           postinc2	equ	0xFDE
 14805                           postdec2	equ	0xFDD
 14806                           fsr2h	equ	0xFDA
 14807                           fsr2l	equ	0xFD9
 14808                           status	equ	0xFD8
 14809                           
 14810 ;; *************** function _i2c_restartWrite *****************
 14811 ;; Defined at:
 14812 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;  p               2    9[BANK0 ] PTR void 
 14815 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14816 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;		None
 14819 ;; Return value:  Size  Location     Type
 14820 ;;                  1    wreg      enum E96
 14821 ;; Registers used:
 14822 ;;		wreg
 14823 ;; Tracked objects:
 14824 ;;		On entry : 0/0
 14825 ;;		On exit  : 0/0
 14826 ;;		Unchanged: 0/0
 14827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;Total ram usage:        2 bytes
 14833 ;; Hardware stack levels used:    1
 14834 ;; Hardware stack levels required when called:    7
 14835 ;; This function calls:
 14836 ;;		Nothing
 14837 ;; This function is called by:
 14838 ;;		_i2c_write1ByteRegister
 14839 ;;		_i2c_read1ByteRegister
 14840 ;;		_i2c_readDataBlock
 14841 ;;		_i2c_writeNBytes
 14842 ;;		_i2c_read2ByteRegister
 14843 ;;		_i2c_write2ByteRegister
 14844 ;;		_do_I2C_DO_ADDRESS_NACK
 14845 ;;		_do_I2C_TX
 14846 ;;		_do_I2C_RX
 14847 ;;		_do_I2C_TX_EMPTY
 14848 ;; This function uses a non-reentrant model
 14849 ;;
 14850                           
 14851                           	psect	text79
 14852  00C6AC                     __ptext79:
 14853                           	opt stack 0
 14854  00C6AC                     _i2c_restartWrite:
 14855                           	opt stack 13
 14856                           
 14857                           ;i2c_types.c: 37: return i2c_restart_write;
 14858                           
 14859                           ;incstack = 0
 14860  00C6AC  0E03               	movlw	3
 14861  00C6AE  0012               	return	
 14862  00C6B0                     __end_of_i2c_restartWrite:
 14863                           	opt stack 0
 14864                           tosu	equ	0xFFF
 14865                           tosh	equ	0xFFE
 14866                           tosl	equ	0xFFD
 14867                           pclath	equ	0xFFA
 14868                           tblptru	equ	0xFF8
 14869                           tblptrh	equ	0xFF7
 14870                           tblptrl	equ	0xFF6
 14871                           tablat	equ	0xFF5
 14872                           prodh	equ	0xFF4
 14873                           prodl	equ	0xFF3
 14874                           intcon	equ	0xFF2
 14875                           postinc0	equ	0xFEE
 14876                           wreg	equ	0xFE8
 14877                           indf2	equ	0xFDF
 14878                           postinc2	equ	0xFDE
 14879                           postdec2	equ	0xFDD
 14880                           fsr2h	equ	0xFDA
 14881                           fsr2l	equ	0xFD9
 14882                           status	equ	0xFD8
 14883                           
 14884 ;; *************** function _wr2RegCompleteHandler *****************
 14885 ;; Defined at:
 14886 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;  p               2    9[BANK0 ] PTR void 
 14889 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14890 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;		None
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1    wreg      enum E97
 14895 ;; Registers used:
 14896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;Total ram usage:        2 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:    9
 14909 ;; This function calls:
 14910 ;;		_i2c_setBuffer
 14911 ;;		_i2c_setDataCompleteCallback
 14912 ;; This function is called by:
 14913 ;;		_i2c_write2ByteRegister
 14914 ;;		_do_I2C_DO_ADDRESS_NACK
 14915 ;;		_do_I2C_TX
 14916 ;;		_do_I2C_RX
 14917 ;;		_do_I2C_TX_EMPTY
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text80
 14922  00B97E                     __ptext80:
 14923                           	opt stack 0
 14924  00B97E                     _wr2RegCompleteHandler:
 14925                           	opt stack 11
 14926                           
 14927                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 14928                           
 14929                           ;incstack = 0
 14930  00B97E  C069  F060         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
 14931  00B982  C06A  F061         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
 14932  00B986  0E00               	movlw	0
 14933  00B988  0100               	movlb	0	; () banked
 14934  00B98A  6F63               	movwf	(i2c_setBuffer@bufferSize+1)& (0+255),b
 14935  00B98C  0E02               	movlw	2
 14936  00B98E  6F62               	movwf	i2c_setBuffer@bufferSize& (0+255),b
 14937  00B990  ECCF  F060         	call	_i2c_setBuffer	;wreg free
 14938                           
 14939                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 14940  00B994  0E00               	movlw	0
 14941  00B996  0100               	movlb	0	; () banked
 14942  00B998  6F65               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
 14943  00B99A  0E00               	movlw	0
 14944  00B99C  6F66               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
 14945  00B99E  0E00               	movlw	0
 14946  00B9A0  6F67               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
 14947  00B9A2  0E00               	movlw	0
 14948  00B9A4  6F68               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
 14949  00B9A6  EC02  F061         	call	_i2c_setDataCompleteCallback	;wreg free
 14950                           
 14951                           ;i2c_simple_master.c: 114: return i2c_continue;
 14952  00B9AA  0E04               	movlw	4
 14953  00B9AC  0012               	return	
 14954  00B9AE                     __end_of_wr2RegCompleteHandler:
 14955                           	opt stack 0
 14956                           tosu	equ	0xFFF
 14957                           tosh	equ	0xFFE
 14958                           tosl	equ	0xFFD
 14959                           pclath	equ	0xFFA
 14960                           tblptru	equ	0xFF8
 14961                           tblptrh	equ	0xFF7
 14962                           tblptrl	equ	0xFF6
 14963                           tablat	equ	0xFF5
 14964                           prodh	equ	0xFF4
 14965                           prodl	equ	0xFF3
 14966                           intcon	equ	0xFF2
 14967                           postinc0	equ	0xFEE
 14968                           wreg	equ	0xFE8
 14969                           indf2	equ	0xFDF
 14970                           postinc2	equ	0xFDE
 14971                           postdec2	equ	0xFDD
 14972                           fsr2h	equ	0xFDA
 14973                           fsr2l	equ	0xFD9
 14974                           status	equ	0xFD8
 14975                           
 14976 ;; *************** function _i2c_setDataCompleteCallback *****************
 14977 ;; Defined at:
 14978 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
 14981 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14982 ;;		 -> wr1RegCompleteHandler(1), Absolute function(4), 
 14983 ;;  p               2    7[BANK0 ] PTR void 
 14984 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 14985 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 14986 ;; Auto vars:     Size  Location     Type
 14987 ;;		None
 14988 ;; Return value:  Size  Location     Type
 14989 ;;                  1    wreg      void 
 14990 ;; Registers used:
 14991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14992 ;; Tracked objects:
 14993 ;;		On entry : 0/0
 14994 ;;		On exit  : 0/0
 14995 ;;		Unchanged: 0/0
 14996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15000 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15001 ;;Total ram usage:        4 bytes
 15002 ;; Hardware stack levels used:    1
 15003 ;; Hardware stack levels required when called:    8
 15004 ;; This function calls:
 15005 ;;		_setCallBack
 15006 ;; This function is called by:
 15007 ;;		_wr1RegCompleteHandler
 15008 ;;		_i2c_write1ByteRegister
 15009 ;;		_rd1RegCompleteHandler
 15010 ;;		_i2c_read1ByteRegister
 15011 ;;		_rd2RegCompleteHandler
 15012 ;;		_wr2RegCompleteHandler
 15013 ;;		_rdBlkRegCompleteHandler
 15014 ;;		_i2c_readDataBlock
 15015 ;;		_i2c_read2ByteRegister
 15016 ;;		_i2c_write2ByteRegister
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text81
 15021  00C204                     __ptext81:
 15022                           	opt stack 0
 15023  00C204                     _i2c_setDataCompleteCallback:
 15024                           	opt stack 17
 15025                           
 15026                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 15027                           
 15028                           ;incstack = 0
 15029  00C204  C065  F060         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
 15030  00C208  C066  F061         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
 15031  00C20C  C067  F062         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
 15032  00C210  C068  F063         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
 15033  00C214  0E00               	movlw	0
 15034  00C216  EC9B  F052         	call	_setCallBack
 15035  00C21A  0012               	return		;funcret
 15036  00C21C                     __end_of_i2c_setDataCompleteCallback:
 15037                           	opt stack 0
 15038                           tosu	equ	0xFFF
 15039                           tosh	equ	0xFFE
 15040                           tosl	equ	0xFFD
 15041                           pclath	equ	0xFFA
 15042                           tblptru	equ	0xFF8
 15043                           tblptrh	equ	0xFF7
 15044                           tblptrl	equ	0xFF6
 15045                           tablat	equ	0xFF5
 15046                           prodh	equ	0xFF4
 15047                           prodl	equ	0xFF3
 15048                           intcon	equ	0xFF2
 15049                           postinc0	equ	0xFEE
 15050                           wreg	equ	0xFE8
 15051                           indf2	equ	0xFDF
 15052                           postinc2	equ	0xFDE
 15053                           postdec2	equ	0xFDD
 15054                           fsr2h	equ	0xFDA
 15055                           fsr2l	equ	0xFD9
 15056                           status	equ	0xFD8
 15057                           
 15058 ;; *************** function _setCallBack *****************
 15059 ;; Defined at:
 15060 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 15061 ;; Parameters:    Size  Location     Type
 15062 ;;  idx             1    wreg     enum E7356
 15063 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 15064 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15065 ;;		 -> wr1RegCompleteHandler(1), Absolute function(4), i2c_restartWrite(1), 
 15066 ;;  p               2    2[BANK0 ] PTR void 
 15067 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15068 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;  idx             1    4[BANK0 ] enum E7356
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  1    wreg      void 
 15073 ;; Registers used:
 15074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15075 ;; Tracked objects:
 15076 ;;		On entry : 0/0
 15077 ;;		On exit  : 0/0
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15083 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15084 ;;Total ram usage:        5 bytes
 15085 ;; Hardware stack levels used:    1
 15086 ;; Hardware stack levels required when called:    7
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_i2c_setDataCompleteCallback
 15091 ;;		_i2c_setAddressNACKCallback
 15092 ;;		_i2c_setWriteCollisionCallback
 15093 ;;		_i2c_setDataNACKCallback
 15094 ;;		_i2c_setTimeOutCallback
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text82
 15099  00A536                     __ptext82:
 15100                           	opt stack 0
 15101  00A536                     _setCallBack:
 15102                           	opt stack 17
 15103                           
 15104                           ;incstack = 0
 15105                           ;setCallBack@idx stored from wreg
 15106  00A536  0100               	movlb	0	; () banked
 15107  00A538  6F64               	movwf	setCallBack@idx& (0+255),b
 15108                           
 15109                           ;i2c_master.c: 455: if(cb)
 15110  00A53A  0100               	movlb	0	; () banked
 15111  00A53C  5160               	movf	setCallBack@cb& (0+255),w,b
 15112  00A53E  1161               	iorwf	(setCallBack@cb+1)& (0+255),w,b
 15113  00A540  B4D8               	btfsc	status,2,c
 15114  00A542  D019               	goto	l222
 15115                           
 15116                           ; BSR set to: 0
 15117                           ;i2c_master.c: 456: {
 15118                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 15119  00A544  5164               	movf	setCallBack@idx& (0+255),w,b
 15120  00A546  0D02               	mullw	2
 15121  00A548  0EAC               	movlw	low (_i2c_status+12)
 15122  00A54A  24F3               	addwf	prodl,w,c
 15123  00A54C  6ED9               	movwf	fsr2l,c
 15124  00A54E  0E03               	movlw	high (_i2c_status+12)
 15125  00A550  20F4               	addwfc	prodh,w,c
 15126  00A552  6EDA               	movwf	fsr2h,c
 15127  00A554  C060  FFDE         	movff	setCallBack@cb,postinc2
 15128  00A558  C061  FFDD         	movff	setCallBack@cb+1,postdec2
 15129                           
 15130                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 15131  00A55C  5164               	movf	setCallBack@idx& (0+255),w,b
 15132  00A55E  0D02               	mullw	2
 15133  00A560  0EB8               	movlw	low (_i2c_status+24)
 15134  00A562  24F3               	addwf	prodl,w,c
 15135  00A564  6ED9               	movwf	fsr2l,c
 15136  00A566  0E03               	movlw	high (_i2c_status+24)
 15137  00A568  20F4               	addwfc	prodh,w,c
 15138  00A56A  6EDA               	movwf	fsr2h,c
 15139  00A56C  C062  FFDE         	movff	setCallBack@p,postinc2
 15140  00A570  C063  FFDD         	movff	setCallBack@p+1,postdec2
 15141                           
 15142                           ;i2c_master.c: 459: }
 15143  00A574  0012               	return	
 15144  00A576                     l222:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;i2c_master.c: 460: else
 15148                           ;i2c_master.c: 461: {
 15149                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 15150                           
 15151                           ; BSR set to: 0
 15152  00A576  5164               	movf	setCallBack@idx& (0+255),w,b
 15153  00A578  0D02               	mullw	2
 15154  00A57A  0EAC               	movlw	low (_i2c_status+12)
 15155  00A57C  24F3               	addwf	prodl,w,c
 15156  00A57E  6ED9               	movwf	fsr2l,c
 15157  00A580  0E03               	movlw	high (_i2c_status+12)
 15158  00A582  20F4               	addwfc	prodh,w,c
 15159  00A584  6EDA               	movwf	fsr2h,c
 15160  00A586  0EA8               	movlw	low _returnStop
 15161  00A588  6EDE               	movwf	postinc2,c
 15162  00A58A  0EC6               	movlw	high _returnStop
 15163  00A58C  6EDD               	movwf	postdec2,c
 15164                           
 15165                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 15166  00A58E  5164               	movf	setCallBack@idx& (0+255),w,b
 15167  00A590  0D02               	mullw	2
 15168  00A592  0EB8               	movlw	low (_i2c_status+24)
 15169  00A594  24F3               	addwf	prodl,w,c
 15170  00A596  6ED9               	movwf	fsr2l,c
 15171  00A598  0E03               	movlw	high (_i2c_status+24)
 15172  00A59A  20F4               	addwfc	prodh,w,c
 15173  00A59C  6EDA               	movwf	fsr2h,c
 15174  00A59E  0E00               	movlw	0
 15175  00A5A0  6EDE               	movwf	postinc2,c
 15176  00A5A2  0E00               	movlw	0
 15177  00A5A4  6EDD               	movwf	postdec2,c
 15178  00A5A6  0012               	return	
 15179  00A5A8                     __end_of_setCallBack:
 15180                           	opt stack 0
 15181                           tosu	equ	0xFFF
 15182                           tosh	equ	0xFFE
 15183                           tosl	equ	0xFFD
 15184                           pclath	equ	0xFFA
 15185                           tblptru	equ	0xFF8
 15186                           tblptrh	equ	0xFF7
 15187                           tblptrl	equ	0xFF6
 15188                           tablat	equ	0xFF5
 15189                           prodh	equ	0xFF4
 15190                           prodl	equ	0xFF3
 15191                           intcon	equ	0xFF2
 15192                           postinc0	equ	0xFEE
 15193                           wreg	equ	0xFE8
 15194                           indf2	equ	0xFDF
 15195                           postinc2	equ	0xFDE
 15196                           postdec2	equ	0xFDD
 15197                           fsr2h	equ	0xFDA
 15198                           fsr2l	equ	0xFD9
 15199                           status	equ	0xFD8
 15200                           
 15201 ;; *************** function _i2c_setBuffer *****************
 15202 ;; Defined at:
 15203 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 15204 ;; Parameters:    Size  Location     Type
 15205 ;;  buffer          2    0[BANK0 ] PTR void 
 15206 ;;		 -> BME280_readMeasurements@sensorData(8), BME280_readFactoryCalibrationParams@paramBuff(24), i2c_readDataBlock@reg(
      +1), i2c_readDataBlock@d(4), 
 15207 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 15208 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 15209 ;;		 -> NULL(0), 
 15210 ;;  bufferSize      2    2[BANK0 ] unsigned int 
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1    wreg      void 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2, status,0
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15225 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15226 ;;Total ram usage:        4 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:    7
 15229 ;; This function calls:
 15230 ;;		Nothing
 15231 ;; This function is called by:
 15232 ;;		_wr1RegCompleteHandler
 15233 ;;		_i2c_write1ByteRegister
 15234 ;;		_rd1RegCompleteHandler
 15235 ;;		_i2c_read1ByteRegister
 15236 ;;		_rd2RegCompleteHandler
 15237 ;;		_wr2RegCompleteHandler
 15238 ;;		_rdBlkRegCompleteHandler
 15239 ;;		_i2c_readDataBlock
 15240 ;;		_i2c_writeNBytes
 15241 ;;		_i2c_read2ByteRegister
 15242 ;;		_i2c_write2ByteRegister
 15243 ;;		_i2c_readNBytes
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text83
 15248  00C19E                     __ptext83:
 15249                           	opt stack 0
 15250  00C19E                     _i2c_setBuffer:
 15251                           	opt stack 18
 15252                           
 15253                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 15254                           
 15255                           ; BSR set to: 0
 15256                           ;incstack = 0
 15257  00C19E  0103               	movlb	3	; () banked
 15258  00C1A0  A5A0               	btfss	_i2c_status& (0+255),2,b
 15259  00C1A2  0012               	return	
 15260                           
 15261                           ; BSR set to: 3
 15262                           ;i2c_master.c: 187: {
 15263                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 15264  00C1A4  C060  F3A2         	movff	i2c_setBuffer@buffer,_i2c_status+2
 15265  00C1A8  C061  F3A3         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
 15266                           
 15267                           ; BSR set to: 3
 15268                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 15269  00C1AC  C062  F3A4         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
 15270  00C1B0  C063  F3A5         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
 15271                           
 15272                           ; BSR set to: 3
 15273                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 15274  00C1B4  95A0               	bcf	_i2c_status& (0+255),2,b
 15275  00C1B6  0012               	return	
 15276  00C1B8                     __end_of_i2c_setBuffer:
 15277                           	opt stack 0
 15278                           tosu	equ	0xFFF
 15279                           tosh	equ	0xFFE
 15280                           tosl	equ	0xFFD
 15281                           pclath	equ	0xFFA
 15282                           tblptru	equ	0xFF8
 15283                           tblptrh	equ	0xFF7
 15284                           tblptrl	equ	0xFF6
 15285                           tablat	equ	0xFF5
 15286                           prodh	equ	0xFF4
 15287                           prodl	equ	0xFF3
 15288                           intcon	equ	0xFF2
 15289                           postinc0	equ	0xFEE
 15290                           wreg	equ	0xFE8
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           fsr2h	equ	0xFDA
 15295                           fsr2l	equ	0xFD9
 15296                           status	equ	0xFD8
 15297                           
 15298 ;; *************** function _i2c1_driver_stop *****************
 15299 ;; Defined at:
 15300 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		None
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;Total ram usage:        0 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; Hardware stack levels required when called:    7
 15321 ;; This function calls:
 15322 ;;		Nothing
 15323 ;; This function is called by:
 15324 ;;		_do_I2C_SEND_STOP
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text84
 15329  00C6B0                     __ptext84:
 15330                           	opt stack 0
 15331  00C6B0                     _i2c1_driver_stop:
 15332                           	opt stack 12
 15333                           
 15334                           ;i2c1_driver.c: 159: SSP1CON2bits.PEN = 1;
 15335                           
 15336                           ; BSR set to: 3
 15337                           ;incstack = 0
 15338  00C6B0  84C5               	bsf	4037,2,c	;volatile
 15339  00C6B2  0012               	return		;funcret
 15340  00C6B4                     __end_of_i2c1_driver_stop:
 15341                           	opt stack 0
 15342                           tosu	equ	0xFFF
 15343                           tosh	equ	0xFFE
 15344                           tosl	equ	0xFFD
 15345                           pclath	equ	0xFFA
 15346                           tblptru	equ	0xFF8
 15347                           tblptrh	equ	0xFF7
 15348                           tblptrl	equ	0xFF6
 15349                           tablat	equ	0xFF5
 15350                           prodh	equ	0xFF4
 15351                           prodl	equ	0xFF3
 15352                           intcon	equ	0xFF2
 15353                           postinc0	equ	0xFEE
 15354                           wreg	equ	0xFE8
 15355                           indf2	equ	0xFDF
 15356                           postinc2	equ	0xFDE
 15357                           postdec2	equ	0xFDD
 15358                           fsr2h	equ	0xFDA
 15359                           fsr2l	equ	0xFD9
 15360                           status	equ	0xFD8
 15361                           
 15362 ;; *************** function _i2c1_driver_restart *****************
 15363 ;; Defined at:
 15364 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;		None
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;		None
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  1    wreg      void 
 15371 ;; Registers used:
 15372 ;;		None
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15382 ;;Total ram usage:        0 bytes
 15383 ;; Hardware stack levels used:    1
 15384 ;; Hardware stack levels required when called:    7
 15385 ;; This function calls:
 15386 ;;		Nothing
 15387 ;; This function is called by:
 15388 ;;		_do_I2C_SEND_RESTART_READ
 15389 ;;		_do_I2C_SEND_RESTART_WRITE
 15390 ;;		_do_I2C_SEND_RESTART
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text85
 15395  00C6B4                     __ptext85:
 15396                           	opt stack 0
 15397  00C6B4                     _i2c1_driver_restart:
 15398                           	opt stack 12
 15399                           
 15400                           ;i2c1_driver.c: 154: SSP1CON2bits.RSEN = 1;
 15401                           
 15402                           ;incstack = 0
 15403  00C6B4  82C5               	bsf	4037,1,c	;volatile
 15404  00C6B6  0012               	return		;funcret
 15405  00C6B8                     __end_of_i2c1_driver_restart:
 15406                           	opt stack 0
 15407                           tosu	equ	0xFFF
 15408                           tosh	equ	0xFFE
 15409                           tosl	equ	0xFFD
 15410                           pclath	equ	0xFFA
 15411                           tblptru	equ	0xFF8
 15412                           tblptrh	equ	0xFF7
 15413                           tblptrl	equ	0xFF6
 15414                           tablat	equ	0xFF5
 15415                           prodh	equ	0xFF4
 15416                           prodl	equ	0xFF3
 15417                           intcon	equ	0xFF2
 15418                           postinc0	equ	0xFEE
 15419                           wreg	equ	0xFE8
 15420                           indf2	equ	0xFDF
 15421                           postinc2	equ	0xFDE
 15422                           postdec2	equ	0xFDD
 15423                           fsr2h	equ	0xFDA
 15424                           fsr2l	equ	0xFD9
 15425                           status	equ	0xFD8
 15426                           
 15427 ;; *************** function _i2c1_driver_sendACK *****************
 15428 ;; Defined at:
 15429 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;		None
 15432 ;; Auto vars:     Size  Location     Type
 15433 ;;		None
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		None
 15438 ;; Tracked objects:
 15439 ;;		On entry : 0/0
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;Total ram usage:        0 bytes
 15448 ;; Hardware stack levels used:    1
 15449 ;; Hardware stack levels required when called:    7
 15450 ;; This function calls:
 15451 ;;		Nothing
 15452 ;; This function is called by:
 15453 ;;		_do_I2C_DO_ACK
 15454 ;;		_do_I2C_RX
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458                           	psect	text86
 15459  00C662                     __ptext86:
 15460                           	opt stack 0
 15461  00C662                     _i2c1_driver_sendACK:
 15462                           	opt stack 13
 15463                           
 15464                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKDT = 0;
 15465                           
 15466                           ;incstack = 0
 15467  00C662  9AC5               	bcf	4037,5,c	;volatile
 15468                           
 15469                           ;i2c1_driver.c: 200: SSP1CON2bits.ACKEN = 1;
 15470  00C664  88C5               	bsf	4037,4,c	;volatile
 15471  00C666  0012               	return		;funcret
 15472  00C668                     __end_of_i2c1_driver_sendACK:
 15473                           	opt stack 0
 15474                           tosu	equ	0xFFF
 15475                           tosh	equ	0xFFE
 15476                           tosl	equ	0xFFD
 15477                           pclath	equ	0xFFA
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           prodh	equ	0xFF4
 15483                           prodl	equ	0xFF3
 15484                           intcon	equ	0xFF2
 15485                           postinc0	equ	0xFEE
 15486                           wreg	equ	0xFE8
 15487                           indf2	equ	0xFDF
 15488                           postinc2	equ	0xFDE
 15489                           postdec2	equ	0xFDD
 15490                           fsr2h	equ	0xFDA
 15491                           fsr2l	equ	0xFD9
 15492                           status	equ	0xFD8
 15493                           
 15494 ;; *************** function _i2c1_driver_start *****************
 15495 ;; Defined at:
 15496 ;;		line 147 in file "mcc_generated_files/i2c1_driver.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		None
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15514 ;;Total ram usage:        0 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:    7
 15517 ;; This function calls:
 15518 ;;		Nothing
 15519 ;; This function is called by:
 15520 ;;		_i2c_masterOperation
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text87
 15525  00C6B8                     __ptext87:
 15526                           	opt stack 0
 15527  00C6B8                     _i2c1_driver_start:
 15528                           	opt stack 16
 15529                           
 15530                           ;i2c1_driver.c: 149: SSP1CON2bits.SEN = 1;
 15531                           
 15532                           ;incstack = 0
 15533  00C6B8  80C5               	bsf	4037,0,c	;volatile
 15534  00C6BA  0012               	return		;funcret
 15535  00C6BC                     __end_of_i2c1_driver_start:
 15536                           	opt stack 0
 15537                           tosu	equ	0xFFF
 15538                           tosh	equ	0xFFE
 15539                           tosl	equ	0xFFD
 15540                           pclath	equ	0xFFA
 15541                           tblptru	equ	0xFF8
 15542                           tblptrh	equ	0xFF7
 15543                           tblptrl	equ	0xFF6
 15544                           tablat	equ	0xFF5
 15545                           prodh	equ	0xFF4
 15546                           prodl	equ	0xFF3
 15547                           intcon	equ	0xFF2
 15548                           postinc0	equ	0xFEE
 15549                           wreg	equ	0xFE8
 15550                           indf2	equ	0xFDF
 15551                           postinc2	equ	0xFDE
 15552                           postdec2	equ	0xFDD
 15553                           fsr2h	equ	0xFDA
 15554                           fsr2l	equ	0xFD9
 15555                           status	equ	0xFD8
 15556                           
 15557 ;; *************** function _i2c_close *****************
 15558 ;; Defined at:
 15559 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;		None
 15562 ;; Auto vars:     Size  Location     Type
 15563 ;;  ret             1    0[BANK0 ] enum E7166
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  1    wreg      enum E7166
 15566 ;; Registers used:
 15567 ;;		wreg, status,2, cstack
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15577 ;;Total ram usage:        1 bytes
 15578 ;; Hardware stack levels used:    1
 15579 ;; Hardware stack levels required when called:    8
 15580 ;; This function calls:
 15581 ;;		_mssp1_clearIRQ
 15582 ;;		_mssp1_disableIRQ
 15583 ;; This function is called by:
 15584 ;;		_i2c_write1ByteRegister
 15585 ;;		_i2c_read1ByteRegister
 15586 ;;		_i2c_readDataBlock
 15587 ;;		_i2c_writeNBytes
 15588 ;;		_i2c_read2ByteRegister
 15589 ;;		_i2c_write2ByteRegister
 15590 ;;		_i2c_readNBytes
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           
 15594                           	psect	text88
 15595  00BE2C                     __ptext88:
 15596                           	opt stack 0
 15597  00BE2C                     _i2c_close:
 15598                           	opt stack 17
 15599                           
 15600                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
 15601                           
 15602                           ;incstack = 0
 15603  00BE2C  0E01               	movlw	1
 15604  00BE2E  0100               	movlb	0	; () banked
 15605  00BE30  6F60               	movwf	i2c_close@ret& (0+255),b
 15606                           
 15607                           ; BSR set to: 0
 15608                           ;i2c_master.c: 165: if(!i2c_status.busy)
 15609  00BE32  0103               	movlb	3	; () banked
 15610  00BE34  B1A0               	btfsc	_i2c_status& (0+255),0,b
 15611  00BE36  D008               	goto	l95
 15612                           
 15613                           ; BSR set to: 3
 15614                           ;i2c_master.c: 166: {
 15615                           ;i2c_master.c: 167: i2c_status.inUse = 0;
 15616  00BE38  93A0               	bcf	_i2c_status& (0+255),1,b
 15617                           
 15618                           ;i2c_master.c: 169: i2c_status.address = 0xff;
 15619  00BE3A  69A1               	setf	(_i2c_status+1)& (0+255),b
 15620                           
 15621                           ; BSR set to: 3
 15622                           ;i2c_master.c: 170: mssp1_clearIRQ();
 15623  00BE3C  EC60  F063         	call	_mssp1_clearIRQ	;wreg free
 15624                           
 15625                           ;i2c_master.c: 171: mssp1_disableIRQ();
 15626  00BE40  EC5E  F063         	call	_mssp1_disableIRQ	;wreg free
 15627                           
 15628                           ;i2c_master.c: 172: ret = i2c_status.error;
 15629  00BE44  C3AB  F060         	movff	_i2c_status+11,i2c_close@ret
 15630  00BE48                     l95:
 15631                           
 15632                           ;i2c_master.c: 173: }
 15633                           ;i2c_master.c: 174: return ret;
 15634  00BE48  0100               	movlb	0	; () banked
 15635  00BE4A  5160               	movf	i2c_close@ret& (0+255),w,b
 15636  00BE4C  0012               	return	
 15637  00BE4E                     __end_of_i2c_close:
 15638                           	opt stack 0
 15639                           tosu	equ	0xFFF
 15640                           tosh	equ	0xFFE
 15641                           tosl	equ	0xFFD
 15642                           pclath	equ	0xFFA
 15643                           tblptru	equ	0xFF8
 15644                           tblptrh	equ	0xFF7
 15645                           tblptrl	equ	0xFF6
 15646                           tablat	equ	0xFF5
 15647                           prodh	equ	0xFF4
 15648                           prodl	equ	0xFF3
 15649                           intcon	equ	0xFF2
 15650                           postinc0	equ	0xFEE
 15651                           wreg	equ	0xFE8
 15652                           indf2	equ	0xFDF
 15653                           postinc2	equ	0xFDE
 15654                           postdec2	equ	0xFDD
 15655                           fsr2h	equ	0xFDA
 15656                           fsr2l	equ	0xFD9
 15657                           status	equ	0xFD8
 15658                           
 15659 ;; *************** function _mssp1_disableIRQ *****************
 15660 ;; Defined at:
 15661 ;;		line 49 in file "mcc_generated_files/i2c1_driver.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;		None
 15666 ;; Return value:  Size  Location     Type
 15667 ;;                  1    wreg      void 
 15668 ;; Registers used:
 15669 ;;		None
 15670 ;; Tracked objects:
 15671 ;;		On entry : 0/0
 15672 ;;		On exit  : 0/0
 15673 ;;		Unchanged: 0/0
 15674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;Total ram usage:        0 bytes
 15680 ;; Hardware stack levels used:    1
 15681 ;; Hardware stack levels required when called:    7
 15682 ;; This function calls:
 15683 ;;		Nothing
 15684 ;; This function is called by:
 15685 ;;		_i2c_close
 15686 ;;		_i2c_setTimeOut
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text89
 15691  00C6BC                     __ptext89:
 15692                           	opt stack 0
 15693  00C6BC                     _mssp1_disableIRQ:
 15694                           	opt stack 17
 15695                           
 15696                           ;i2c1_driver.c: 51: PIE1bits.SSP1IE = 0;
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;incstack = 0
 15700  00C6BC  969D               	bcf	3997,3,c	;volatile
 15701  00C6BE  0012               	return		;funcret
 15702  00C6C0                     __end_of_mssp1_disableIRQ:
 15703                           	opt stack 0
 15704                           tosu	equ	0xFFF
 15705                           tosh	equ	0xFFE
 15706                           tosl	equ	0xFFD
 15707                           pclath	equ	0xFFA
 15708                           tblptru	equ	0xFF8
 15709                           tblptrh	equ	0xFF7
 15710                           tblptrl	equ	0xFF6
 15711                           tablat	equ	0xFF5
 15712                           prodh	equ	0xFF4
 15713                           prodl	equ	0xFF3
 15714                           intcon	equ	0xFF2
 15715                           postinc0	equ	0xFEE
 15716                           wreg	equ	0xFE8
 15717                           indf2	equ	0xFDF
 15718                           postinc2	equ	0xFDE
 15719                           postdec2	equ	0xFDD
 15720                           fsr2h	equ	0xFDA
 15721                           fsr2l	equ	0xFD9
 15722                           status	equ	0xFD8
 15723                           
 15724 ;; *************** function _mssp1_clearIRQ *****************
 15725 ;; Defined at:
 15726 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;		None
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		None
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;Total ram usage:        0 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; Hardware stack levels required when called:    7
 15747 ;; This function calls:
 15748 ;;		Nothing
 15749 ;; This function is called by:
 15750 ;;		_i2c_open
 15751 ;;		_i2c_close
 15752 ;;		_i2c_ISR
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text90
 15757  00C6C0                     __ptext90:
 15758                           	opt stack 0
 15759  00C6C0                     _mssp1_clearIRQ:
 15760                           	opt stack 17
 15761                           
 15762                           ;i2c1_driver.c: 56: PIR1bits.SSP1IF = 0;
 15763                           
 15764                           ;incstack = 0
 15765  00C6C0  969E               	bcf	3998,3,c	;volatile
 15766  00C6C2  0012               	return		;funcret
 15767  00C6C4                     __end_of_mssp1_clearIRQ:
 15768                           	opt stack 0
 15769                           tosu	equ	0xFFF
 15770                           tosh	equ	0xFFE
 15771                           tosl	equ	0xFFD
 15772                           pclath	equ	0xFFA
 15773                           tblptru	equ	0xFF8
 15774                           tblptrh	equ	0xFF7
 15775                           tblptrl	equ	0xFF6
 15776                           tablat	equ	0xFF5
 15777                           prodh	equ	0xFF4
 15778                           prodl	equ	0xFF3
 15779                           intcon	equ	0xFF2
 15780                           postinc0	equ	0xFEE
 15781                           wreg	equ	0xFE8
 15782                           indf2	equ	0xFDF
 15783                           postinc2	equ	0xFDE
 15784                           postdec2	equ	0xFDD
 15785                           fsr2h	equ	0xFDA
 15786                           fsr2l	equ	0xFD9
 15787                           status	equ	0xFD8
 15788                           
 15789 ;; *************** function _Weather_getTemperatureDegC *****************
 15790 ;; Defined at:
 15791 ;;		line 96 in file "mcc_generated_files/weather.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;		None
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;		None
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  3    0[BANK1 ] float 
 15798 ;; Registers used:
 15799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15805 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15808 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15809 ;;Total ram usage:        3 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:   10
 15812 ;; This function calls:
 15813 ;;		_BME280_getTemperature
 15814 ;; This function is called by:
 15815 ;;		_main
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text91
 15820  00C370                     __ptext91:
 15821                           	opt stack 0
 15822  00C370                     _Weather_getTemperatureDegC:
 15823                           	opt stack 20
 15824                           
 15825                           ;weather.c: 98: return BME280_getTemperature();
 15826                           
 15827                           ;incstack = 0
 15828  00C370  EC96  F058         	call	_BME280_getTemperature	;wreg free
 15829  00C374  C0F3  F18C         	movff	?_BME280_getTemperature,?_Weather_getTemperatureDegC
 15830  00C378  C0F4  F18D         	movff	?_BME280_getTemperature+1,?_Weather_getTemperatureDegC+1
 15831  00C37C  C0F5  F18E         	movff	?_BME280_getTemperature+2,?_Weather_getTemperatureDegC+2
 15832  00C380  0012               	return	
 15833  00C382                     __end_of_Weather_getTemperatureDegC:
 15834                           	opt stack 0
 15835                           tosu	equ	0xFFF
 15836                           tosh	equ	0xFFE
 15837                           tosl	equ	0xFFD
 15838                           pclath	equ	0xFFA
 15839                           tblptru	equ	0xFF8
 15840                           tblptrh	equ	0xFF7
 15841                           tblptrl	equ	0xFF6
 15842                           tablat	equ	0xFF5
 15843                           prodh	equ	0xFF4
 15844                           prodl	equ	0xFF3
 15845                           intcon	equ	0xFF2
 15846                           postinc0	equ	0xFEE
 15847                           wreg	equ	0xFE8
 15848                           indf2	equ	0xFDF
 15849                           postinc2	equ	0xFDE
 15850                           postdec2	equ	0xFDD
 15851                           fsr2h	equ	0xFDA
 15852                           fsr2l	equ	0xFD9
 15853                           status	equ	0xFD8
 15854                           
 15855 ;; *************** function _BME280_getTemperature *****************
 15856 ;; Defined at:
 15857 ;;		line 295 in file "mcc_generated_files/bme280.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;  temperature     3  150[BANK0 ] float 
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  3  147[BANK0 ] float 
 15864 ;; Registers used:
 15865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15872 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15874 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15875 ;;Total ram usage:        6 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:    9
 15878 ;; This function calls:
 15879 ;;		_BME280_compensateTemperature
 15880 ;;		___altoft
 15881 ;;		___ftdiv
 15882 ;; This function is called by:
 15883 ;;		_Weather_getTemperatureDegC
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text92
 15888  00B12C                     __ptext92:
 15889                           	opt stack 0
 15890  00B12C                     _BME280_getTemperature:
 15891                           	opt stack 20
 15892                           
 15893                           ;bme280.c: 297: float temperature = (float) BME280_compensateTemperature() / 100;
 15894                           
 15895                           ;incstack = 0
 15896  00B12C  ECB5  F028         	call	_BME280_compensateTemperature	;wreg free
 15897  00B130  C0A6  F0CD         	movff	?_BME280_compensateTemperature,___altoft@c
 15898  00B134  C0A7  F0CE         	movff	?_BME280_compensateTemperature+1,___altoft@c+1
 15899  00B138  C0A8  F0CF         	movff	?_BME280_compensateTemperature+2,___altoft@c+2
 15900  00B13C  C0A9  F0D0         	movff	?_BME280_compensateTemperature+3,___altoft@c+3
 15901  00B140  ECAF  F051         	call	___altoft	;wreg free
 15902  00B144  C0CD  F0E4         	movff	?___altoft,___ftdiv@f1
 15903  00B148  C0CE  F0E5         	movff	?___altoft+1,___ftdiv@f1+1
 15904  00B14C  C0CF  F0E6         	movff	?___altoft+2,___ftdiv@f1+2
 15905  00B150  0E00               	movlw	0
 15906  00B152  0100               	movlb	0	; () banked
 15907  00B154  6FE7               	movwf	___ftdiv@f2& (0+255),b
 15908  00B156  0EC8               	movlw	200
 15909  00B158  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 15910  00B15A  0E42               	movlw	66
 15911  00B15C  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 15912  00B15E  EC39  F047         	call	___ftdiv	;wreg free
 15913  00B162  C0E4  F0F6         	movff	?___ftdiv,BME280_getTemperature@temperature
 15914  00B166  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getTemperature@temperature+1
 15915  00B16A  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getTemperature@temperature+2
 15916                           
 15917                           ;bme280.c: 298: return temperature;
 15918  00B16E  C0F6  F0F3         	movff	BME280_getTemperature@temperature,?_BME280_getTemperature
 15919  00B172  C0F7  F0F4         	movff	BME280_getTemperature@temperature+1,?_BME280_getTemperature+1
 15920  00B176  C0F8  F0F5         	movff	BME280_getTemperature@temperature+2,?_BME280_getTemperature+2
 15921  00B17A  0012               	return	
 15922  00B17C                     __end_of_BME280_getTemperature:
 15923                           	opt stack 0
 15924                           tosu	equ	0xFFF
 15925                           tosh	equ	0xFFE
 15926                           tosl	equ	0xFFD
 15927                           pclath	equ	0xFFA
 15928                           tblptru	equ	0xFF8
 15929                           tblptrh	equ	0xFF7
 15930                           tblptrl	equ	0xFF6
 15931                           tablat	equ	0xFF5
 15932                           prodh	equ	0xFF4
 15933                           prodl	equ	0xFF3
 15934                           intcon	equ	0xFF2
 15935                           postinc0	equ	0xFEE
 15936                           wreg	equ	0xFE8
 15937                           indf2	equ	0xFDF
 15938                           postinc2	equ	0xFDE
 15939                           postdec2	equ	0xFDD
 15940                           fsr2h	equ	0xFDA
 15941                           fsr2l	equ	0xFD9
 15942                           status	equ	0xFD8
 15943                           
 15944 ;; *************** function ___altoft *****************
 15945 ;; Defined at:
 15946 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;  c               4  109[BANK0 ] long 
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  sign            1  118[BANK0 ] unsigned char 
 15951 ;;  exp             1  117[BANK0 ] unsigned char 
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  3  109[BANK0 ] float 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2, status,0, cstack
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15964 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;Total ram usage:       10 bytes
 15966 ;; Hardware stack levels used:    1
 15967 ;; Hardware stack levels required when called:    8
 15968 ;; This function calls:
 15969 ;;		___ftpack
 15970 ;; This function is called by:
 15971 ;;		_BME280_getTemperature
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	text93
 15976  00A35E                     __ptext93:
 15977                           	opt stack 0
 15978  00A35E                     ___altoft:
 15979                           	opt stack 20
 15980                           
 15981                           ;incstack = 0
 15982  00A35E  0E00               	movlw	0
 15983  00A360  0100               	movlb	0	; () banked
 15984  00A362  6FD6               	movwf	___altoft@sign& (0+255),b
 15985  00A364  0E8E               	movlw	142
 15986  00A366  6FD5               	movwf	___altoft@exp& (0+255),b
 15987                           
 15988                           ; BSR set to: 0
 15989  00A368  AFD0               	btfss	(___altoft@c+3)& (0+255),7,b
 15990  00A36A  D011               	goto	l3630
 15991                           
 15992                           ; BSR set to: 0
 15993  00A36C  1FD0               	comf	(___altoft@c+3)& (0+255),f,b
 15994  00A36E  1FCF               	comf	(___altoft@c+2)& (0+255),f,b
 15995  00A370  1FCE               	comf	(___altoft@c+1)& (0+255),f,b
 15996  00A372  6DCD               	negf	___altoft@c& (0+255),b
 15997  00A374  0E00               	movlw	0
 15998  00A376  23CE               	addwfc	(___altoft@c+1)& (0+255),f,b
 15999  00A378  23CF               	addwfc	(___altoft@c+2)& (0+255),f,b
 16000  00A37A  23D0               	addwfc	(___altoft@c+3)& (0+255),f,b
 16001                           
 16002                           ; BSR set to: 0
 16003  00A37C  0E01               	movlw	1
 16004  00A37E  6FD6               	movwf	___altoft@sign& (0+255),b
 16005                           
 16006                           ; BSR set to: 0
 16007  00A380  D006               	goto	l3630
 16008  00A382                     
 16009                           ; BSR set to: 0
 16010                           
 16011                           ; BSR set to: 0
 16012  00A382  90D8               	bcf	status,0,c
 16013  00A384  33D0               	rrcf	(___altoft@c+3)& (0+255),f,b
 16014  00A386  33CF               	rrcf	(___altoft@c+2)& (0+255),f,b
 16015  00A388  33CE               	rrcf	(___altoft@c+1)& (0+255),f,b
 16016  00A38A  33CD               	rrcf	___altoft@c& (0+255),f,b
 16017  00A38C  2BD5               	incf	___altoft@exp& (0+255),f,b
 16018  00A38E                     l3630:
 16019                           
 16020                           ; BSR set to: 0
 16021                           
 16022                           ; BSR set to: 0
 16023  00A38E  0E00               	movlw	0
 16024  00A390  15CD               	andwf	___altoft@c& (0+255),w,b
 16025  00A392  6FD1               	movwf	??___altoft& (0+255),b
 16026  00A394  0E00               	movlw	0
 16027  00A396  15CE               	andwf	(___altoft@c+1)& (0+255),w,b
 16028  00A398  6FD2               	movwf	(??___altoft+1)& (0+255),b
 16029  00A39A  0E00               	movlw	0
 16030  00A39C  15CF               	andwf	(___altoft@c+2)& (0+255),w,b
 16031  00A39E  6FD3               	movwf	(??___altoft+2)& (0+255),b
 16032  00A3A0  0EFF               	movlw	255
 16033  00A3A2  15D0               	andwf	(___altoft@c+3)& (0+255),w,b
 16034  00A3A4  6FD4               	movwf	(??___altoft+3)& (0+255),b
 16035  00A3A6  51D1               	movf	??___altoft& (0+255),w,b
 16036  00A3A8  11D2               	iorwf	(??___altoft+1)& (0+255),w,b
 16037  00A3AA  11D3               	iorwf	(??___altoft+2)& (0+255),w,b
 16038  00A3AC  11D4               	iorwf	(??___altoft+3)& (0+255),w,b
 16039  00A3AE  A4D8               	btfss	status,2,c
 16040  00A3B0  D7E8               	goto	l3631
 16041                           
 16042                           ; BSR set to: 0
 16043                           
 16044                           ; BSR set to: 0
 16045  00A3B2  C0CD  F060         	movff	___altoft@c,___ftpack@arg
 16046  00A3B6  C0CE  F061         	movff	___altoft@c+1,___ftpack@arg+1
 16047  00A3BA  C0CF  F062         	movff	___altoft@c+2,___ftpack@arg+2
 16048  00A3BE  C0D5  F063         	movff	___altoft@exp,___ftpack@exp
 16049  00A3C2  C0D6  F064         	movff	___altoft@sign,___ftpack@sign
 16050  00A3C6  EC60  F04B         	call	___ftpack	;wreg free
 16051  00A3CA  C060  F0CD         	movff	?___ftpack,?___altoft
 16052  00A3CE  C061  F0CE         	movff	?___ftpack+1,?___altoft+1
 16053  00A3D2  C062  F0CF         	movff	?___ftpack+2,?___altoft+2
 16054  00A3D6  0012               	return	
 16055  00A3D8                     __end_of___altoft:
 16056                           	opt stack 0
 16057                           tosu	equ	0xFFF
 16058                           tosh	equ	0xFFE
 16059                           tosl	equ	0xFFD
 16060                           pclath	equ	0xFFA
 16061                           tblptru	equ	0xFF8
 16062                           tblptrh	equ	0xFF7
 16063                           tblptrl	equ	0xFF6
 16064                           tablat	equ	0xFF5
 16065                           prodh	equ	0xFF4
 16066                           prodl	equ	0xFF3
 16067                           intcon	equ	0xFF2
 16068                           postinc0	equ	0xFEE
 16069                           wreg	equ	0xFE8
 16070                           indf2	equ	0xFDF
 16071                           postinc2	equ	0xFDE
 16072                           postdec2	equ	0xFDD
 16073                           fsr2h	equ	0xFDA
 16074                           fsr2l	equ	0xFD9
 16075                           status	equ	0xFD8
 16076                           
 16077 ;; *************** function _BME280_compensateTemperature *****************
 16078 ;; Defined at:
 16079 ;;		line 323 in file "mcc_generated_files/bme280.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;		None
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  t               4  101[BANK0 ] long 
 16084 ;;  tempV2          4   97[BANK0 ] long 
 16085 ;;  tempV1          4   93[BANK0 ] long 
 16086 ;; Return value:  Size  Location     Type
 16087 ;;                  4   70[BANK0 ] long 
 16088 ;; Registers used:
 16089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16090 ;; Tracked objects:
 16091 ;;		On entry : 0/0
 16092 ;;		On exit  : 0/0
 16093 ;;		Unchanged: 0/0
 16094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;      Temps:          0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16098 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16099 ;;Total ram usage:       39 bytes
 16100 ;; Hardware stack levels used:    1
 16101 ;; Hardware stack levels required when called:    8
 16102 ;; This function calls:
 16103 ;;		___lmul
 16104 ;; This function is called by:
 16105 ;;		_BME280_getTemperature
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text94
 16110  00516A                     __ptext94:
 16111                           	opt stack 0
 16112  00516A                     _BME280_compensateTemperature:
 16113                           	opt stack 20
 16114                           
 16115                           ;bme280.c: 325: long tempV1, tempV2, t;
 16116                           ;bme280.c: 327: tempV1 = ((((adc_T >> 3) - ((long) calibParam.dig_T1 << 1))) * ((long) c
      +                          alibParam.dig_T2)) >> 11;
 16117                           
 16118                           ;incstack = 0
 16119  00516A  0E0B               	movlw	11
 16120  00516C  0100               	movlb	0	; () banked
 16121  00516E  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16122  005170  0101               	movlb	1	; () banked
 16123  005172  516B               	movf	_calibParam& (0+255),w,b
 16124  005174  0100               	movlb	0	; () banked
 16125  005176  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16126  005178  0101               	movlb	1	; () banked
 16127  00517A  516C               	movf	(_calibParam+1)& (0+255),w,b
 16128  00517C  0100               	movlb	0	; () banked
 16129  00517E  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16130  005180  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16131  005182  6BAE               	clrf	(??_BME280_compensateTemperature+4)& (0+255),b
 16132  005184  90D8               	bcf	status,0,c
 16133  005186  35AB               	rlcf	(??_BME280_compensateTemperature+1)& (0+255),w,b
 16134  005188  6FAF               	movwf	(??_BME280_compensateTemperature+5)& (0+255),b
 16135  00518A  35AC               	rlcf	(??_BME280_compensateTemperature+2)& (0+255),w,b
 16136  00518C  6FB0               	movwf	(??_BME280_compensateTemperature+6)& (0+255),b
 16137  00518E  35AD               	rlcf	(??_BME280_compensateTemperature+3)& (0+255),w,b
 16138  005190  6FB1               	movwf	(??_BME280_compensateTemperature+7)& (0+255),b
 16139  005192  35AE               	rlcf	(??_BME280_compensateTemperature+4)& (0+255),w,b
 16140  005194  6FB2               	movwf	(??_BME280_compensateTemperature+8)& (0+255),b
 16141  005196  1FAF               	comf	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16142  005198  1FB0               	comf	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16143  00519A  1FB1               	comf	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16144  00519C  1FB2               	comf	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16145  00519E  2BAF               	incf	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16146  0051A0  0E00               	movlw	0
 16147  0051A2  23B0               	addwfc	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16148  0051A4  23B1               	addwfc	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16149  0051A6  23B2               	addwfc	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16150  0051A8  0E03               	movlw	3
 16151  0051AA  6FB3               	movwf	(??_BME280_compensateTemperature+9)& (0+255),b
 16152  0051AC  C108  F0B4         	movff	_adc_T,??_BME280_compensateTemperature+10
 16153  0051B0  C109  F0B5         	movff	_adc_T+1,??_BME280_compensateTemperature+11
 16154  0051B4  C10A  F0B6         	movff	_adc_T+2,??_BME280_compensateTemperature+12
 16155  0051B8  C10B  F0B7         	movff	_adc_T+3,??_BME280_compensateTemperature+13
 16156  0051BC                     u24725:
 16157  0051BC  67B3               	tstfsz	(??_BME280_compensateTemperature+9)& (0+255),b
 16158  0051BE  D001               	goto	u24726
 16159  0051C0  D007               	goto	u24727
 16160  0051C2                     u24726:
 16161  0051C2  35B7               	rlcf	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16162  0051C4  33B7               	rrcf	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16163  0051C6  33B6               	rrcf	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16164  0051C8  33B5               	rrcf	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16165  0051CA  33B4               	rrcf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16166  0051CC  2FB3               	decfsz	(??_BME280_compensateTemperature+9)& (0+255),f,b
 16167  0051CE  D7F6               	goto	u24725
 16168  0051D0                     u24727:
 16169  0051D0  0100               	movlb	0	; () banked
 16170  0051D2  51AF               	movf	(??_BME280_compensateTemperature+5)& (0+255),w,b
 16171  0051D4  25B4               	addwf	(??_BME280_compensateTemperature+10)& (0+255),w,b
 16172  0051D6  6F9A               	movwf	___lmul@multiplier& (0+255),b
 16173  0051D8  51B0               	movf	(??_BME280_compensateTemperature+6)& (0+255),w,b
 16174  0051DA  21B5               	addwfc	(??_BME280_compensateTemperature+11)& (0+255),w,b
 16175  0051DC  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 16176  0051DE  51B1               	movf	(??_BME280_compensateTemperature+7)& (0+255),w,b
 16177  0051E0  21B6               	addwfc	(??_BME280_compensateTemperature+12)& (0+255),w,b
 16178  0051E2  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16179  0051E4  51B2               	movf	(??_BME280_compensateTemperature+8)& (0+255),w,b
 16180  0051E6  21B7               	addwfc	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16181  0051E8  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16182  0051EA  EE21  F06D         	lfsr	2,_calibParam+2
 16183  0051EE  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16184  0051F2  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16185  0051F6  0E00               	movlw	0
 16186  0051F8  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16187  0051FA  0EFF               	movlw	-1
 16188  0051FC  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16189  0051FE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16190  005200  EC1B  F057         	call	___lmul	;wreg free
 16191  005204                     u24735:
 16192  005204  0100               	movlb	0	; () banked
 16193  005206  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16194  005208  D001               	goto	u24736
 16195  00520A  D007               	goto	u24737
 16196  00520C                     u24736:
 16197  00520C  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16198  00520E  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16199  005210  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16200  005212  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16201  005214  339A               	rrcf	?___lmul& (0+255),f,b
 16202  005216  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16203  005218  D7F5               	goto	u24735
 16204  00521A                     u24737:
 16205  00521A  C09A  F0BD         	movff	?___lmul,BME280_compensateTemperature@tempV1
 16206  00521E  C09B  F0BE         	movff	?___lmul+1,BME280_compensateTemperature@tempV1+1
 16207  005222  C09C  F0BF         	movff	?___lmul+2,BME280_compensateTemperature@tempV1+2
 16208  005226  C09D  F0C0         	movff	?___lmul+3,BME280_compensateTemperature@tempV1+3
 16209                           
 16210                           ;bme280.c: 328: tempV2 = (((((adc_T >> 4) - ((long) calibParam.dig_T1)) * ((adc_T >> 4) 
      +                          - ((long) calibParam.dig_T1))) >> 12)*((long) calibParam.dig_T3)) >> 14;
 16211  00522A  0E0C               	movlw	12
 16212  00522C  0100               	movlb	0	; () banked
 16213  00522E  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16214  005230  0101               	movlb	1	; () banked
 16215  005232  516B               	movf	_calibParam& (0+255),w,b
 16216  005234  0100               	movlb	0	; () banked
 16217  005236  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16218  005238  0101               	movlb	1	; () banked
 16219  00523A  516C               	movf	(_calibParam+1)& (0+255),w,b
 16220  00523C  0100               	movlb	0	; () banked
 16221  00523E  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16222  005240  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16223  005242  6BAE               	clrf	(??_BME280_compensateTemperature+4)& (0+255),b
 16224  005244  1FAB               	comf	(??_BME280_compensateTemperature+1)& (0+255),f,b
 16225  005246  1FAC               	comf	(??_BME280_compensateTemperature+2)& (0+255),f,b
 16226  005248  1FAD               	comf	(??_BME280_compensateTemperature+3)& (0+255),f,b
 16227  00524A  1FAE               	comf	(??_BME280_compensateTemperature+4)& (0+255),f,b
 16228  00524C  2BAB               	incf	(??_BME280_compensateTemperature+1)& (0+255),f,b
 16229  00524E  0E00               	movlw	0
 16230  005250  23AC               	addwfc	(??_BME280_compensateTemperature+2)& (0+255),f,b
 16231  005252  23AD               	addwfc	(??_BME280_compensateTemperature+3)& (0+255),f,b
 16232  005254  23AE               	addwfc	(??_BME280_compensateTemperature+4)& (0+255),f,b
 16233  005256  0E04               	movlw	4
 16234  005258  6FAF               	movwf	(??_BME280_compensateTemperature+5)& (0+255),b
 16235  00525A  C108  F0B0         	movff	_adc_T,??_BME280_compensateTemperature+6
 16236  00525E  C109  F0B1         	movff	_adc_T+1,??_BME280_compensateTemperature+7
 16237  005262  C10A  F0B2         	movff	_adc_T+2,??_BME280_compensateTemperature+8
 16238  005266  C10B  F0B3         	movff	_adc_T+3,??_BME280_compensateTemperature+9
 16239  00526A                     u24745:
 16240  00526A  67AF               	tstfsz	(??_BME280_compensateTemperature+5)& (0+255),b
 16241  00526C  D001               	goto	u24746
 16242  00526E  D007               	goto	u24747
 16243  005270                     u24746:
 16244  005270  35B3               	rlcf	(??_BME280_compensateTemperature+9)& (0+255),w,b
 16245  005272  33B3               	rrcf	(??_BME280_compensateTemperature+9)& (0+255),f,b
 16246  005274  33B2               	rrcf	(??_BME280_compensateTemperature+8)& (0+255),f,b
 16247  005276  33B1               	rrcf	(??_BME280_compensateTemperature+7)& (0+255),f,b
 16248  005278  33B0               	rrcf	(??_BME280_compensateTemperature+6)& (0+255),f,b
 16249  00527A  2FAF               	decfsz	(??_BME280_compensateTemperature+5)& (0+255),f,b
 16250  00527C  D7F6               	goto	u24745
 16251  00527E                     u24747:
 16252  00527E  0100               	movlb	0	; () banked
 16253  005280  51AB               	movf	(??_BME280_compensateTemperature+1)& (0+255),w,b
 16254  005282  25B0               	addwf	(??_BME280_compensateTemperature+6)& (0+255),w,b
 16255  005284  6F9A               	movwf	___lmul@multiplier& (0+255),b
 16256  005286  51AC               	movf	(??_BME280_compensateTemperature+2)& (0+255),w,b
 16257  005288  21B1               	addwfc	(??_BME280_compensateTemperature+7)& (0+255),w,b
 16258  00528A  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 16259  00528C  51AD               	movf	(??_BME280_compensateTemperature+3)& (0+255),w,b
 16260  00528E  21B2               	addwfc	(??_BME280_compensateTemperature+8)& (0+255),w,b
 16261  005290  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16262  005292  51AE               	movf	(??_BME280_compensateTemperature+4)& (0+255),w,b
 16263  005294  21B3               	addwfc	(??_BME280_compensateTemperature+9)& (0+255),w,b
 16264  005296  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16265  005298  0101               	movlb	1	; () banked
 16266  00529A  516B               	movf	_calibParam& (0+255),w,b
 16267  00529C  0100               	movlb	0	; () banked
 16268  00529E  6FB4               	movwf	(??_BME280_compensateTemperature+10)& (0+255),b
 16269  0052A0  0101               	movlb	1	; () banked
 16270  0052A2  516C               	movf	(_calibParam+1)& (0+255),w,b
 16271  0052A4  0100               	movlb	0	; () banked
 16272  0052A6  6FB5               	movwf	(??_BME280_compensateTemperature+11)& (0+255),b
 16273  0052A8  6BB6               	clrf	(??_BME280_compensateTemperature+12)& (0+255),b
 16274  0052AA  6BB7               	clrf	(??_BME280_compensateTemperature+13)& (0+255),b
 16275  0052AC  1FB4               	comf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16276  0052AE  1FB5               	comf	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16277  0052B0  1FB6               	comf	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16278  0052B2  1FB7               	comf	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16279  0052B4  2BB4               	incf	(??_BME280_compensateTemperature+10)& (0+255),f,b
 16280  0052B6  0E00               	movlw	0
 16281  0052B8  23B5               	addwfc	(??_BME280_compensateTemperature+11)& (0+255),f,b
 16282  0052BA  23B6               	addwfc	(??_BME280_compensateTemperature+12)& (0+255),f,b
 16283  0052BC  23B7               	addwfc	(??_BME280_compensateTemperature+13)& (0+255),f,b
 16284  0052BE  0E04               	movlw	4
 16285  0052C0  6FB8               	movwf	(??_BME280_compensateTemperature+14)& (0+255),b
 16286  0052C2  C108  F0B9         	movff	_adc_T,??_BME280_compensateTemperature+15
 16287  0052C6  C109  F0BA         	movff	_adc_T+1,??_BME280_compensateTemperature+16
 16288  0052CA  C10A  F0BB         	movff	_adc_T+2,??_BME280_compensateTemperature+17
 16289  0052CE  C10B  F0BC         	movff	_adc_T+3,??_BME280_compensateTemperature+18
 16290  0052D2                     u24755:
 16291  0052D2  67B8               	tstfsz	(??_BME280_compensateTemperature+14)& (0+255),b
 16292  0052D4  D001               	goto	u24756
 16293  0052D6  D007               	goto	u24757
 16294  0052D8                     u24756:
 16295  0052D8  35BC               	rlcf	(??_BME280_compensateTemperature+18)& (0+255),w,b
 16296  0052DA  33BC               	rrcf	(??_BME280_compensateTemperature+18)& (0+255),f,b
 16297  0052DC  33BB               	rrcf	(??_BME280_compensateTemperature+17)& (0+255),f,b
 16298  0052DE  33BA               	rrcf	(??_BME280_compensateTemperature+16)& (0+255),f,b
 16299  0052E0  33B9               	rrcf	(??_BME280_compensateTemperature+15)& (0+255),f,b
 16300  0052E2  2FB8               	decfsz	(??_BME280_compensateTemperature+14)& (0+255),f,b
 16301  0052E4  D7F6               	goto	u24755
 16302  0052E6                     u24757:
 16303  0052E6  0100               	movlb	0	; () banked
 16304  0052E8  51B4               	movf	(??_BME280_compensateTemperature+10)& (0+255),w,b
 16305  0052EA  25B9               	addwf	(??_BME280_compensateTemperature+15)& (0+255),w,b
 16306  0052EC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 16307  0052EE  51B5               	movf	(??_BME280_compensateTemperature+11)& (0+255),w,b
 16308  0052F0  21BA               	addwfc	(??_BME280_compensateTemperature+16)& (0+255),w,b
 16309  0052F2  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16310  0052F4  51B6               	movf	(??_BME280_compensateTemperature+12)& (0+255),w,b
 16311  0052F6  21BB               	addwfc	(??_BME280_compensateTemperature+17)& (0+255),w,b
 16312  0052F8  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16313  0052FA  51B7               	movf	(??_BME280_compensateTemperature+13)& (0+255),w,b
 16314  0052FC  21BC               	addwfc	(??_BME280_compensateTemperature+18)& (0+255),w,b
 16315  0052FE  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16316  005300  EC1B  F057         	call	___lmul	;wreg free
 16317  005304                     u24765:
 16318  005304  0100               	movlb	0	; () banked
 16319  005306  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16320  005308  D001               	goto	u24766
 16321  00530A  D007               	goto	u24767
 16322  00530C                     u24766:
 16323  00530C  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16324  00530E  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16325  005310  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16326  005312  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16327  005314  339A               	rrcf	?___lmul& (0+255),f,b
 16328  005316  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16329  005318  D7F5               	goto	u24765
 16330  00531A                     u24767:
 16331  00531A  C09A  F0C9         	movff	?___lmul,_BME280_compensateTemperature$7024
 16332  00531E  C09B  F0CA         	movff	?___lmul+1,_BME280_compensateTemperature$7024+1
 16333  005322  C09C  F0CB         	movff	?___lmul+2,_BME280_compensateTemperature$7024+2
 16334  005326  C09D  F0CC         	movff	?___lmul+3,_BME280_compensateTemperature$7024+3
 16335                           
 16336                           ;bme280.c: 328: tempV2 = (((((adc_T >> 4) - ((long) calibParam.dig_T1)) * ((adc_T >> 4) 
      +                          - ((long) calibParam.dig_T1))) >> 12)*((long) calibParam.dig_T3)) >> 14;
 16337  00532A  0E0E               	movlw	14
 16338  00532C  0100               	movlb	0	; () banked
 16339  00532E  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16340  005330  C0C9  F09A         	movff	_BME280_compensateTemperature$7024,___lmul@multiplier
 16341  005334  C0CA  F09B         	movff	_BME280_compensateTemperature$7024+1,___lmul@multiplier+1
 16342  005338  C0CB  F09C         	movff	_BME280_compensateTemperature$7024+2,___lmul@multiplier+2
 16343  00533C  C0CC  F09D         	movff	_BME280_compensateTemperature$7024+3,___lmul@multiplier+3
 16344  005340  EE21  F06F         	lfsr	2,_calibParam+4
 16345  005344  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16346  005348  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16347  00534C  0E00               	movlw	0
 16348  00534E  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16349  005350  0EFF               	movlw	-1
 16350  005352  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16351  005354  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16352  005356  EC1B  F057         	call	___lmul	;wreg free
 16353  00535A                     u24775:
 16354  00535A  0100               	movlb	0	; () banked
 16355  00535C  67AA               	tstfsz	??_BME280_compensateTemperature& (0+255),b
 16356  00535E  D001               	goto	u24776
 16357  005360  D007               	goto	u24777
 16358  005362                     u24776:
 16359  005362  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16360  005364  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16361  005366  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16362  005368  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16363  00536A  339A               	rrcf	?___lmul& (0+255),f,b
 16364  00536C  2FAA               	decfsz	??_BME280_compensateTemperature& (0+255),f,b
 16365  00536E  D7F5               	goto	u24775
 16366  005370                     u24777:
 16367  005370  C09A  F0C1         	movff	?___lmul,BME280_compensateTemperature@tempV2
 16368  005374  C09B  F0C2         	movff	?___lmul+1,BME280_compensateTemperature@tempV2+1
 16369  005378  C09C  F0C3         	movff	?___lmul+2,BME280_compensateTemperature@tempV2+2
 16370  00537C  C09D  F0C4         	movff	?___lmul+3,BME280_compensateTemperature@tempV2+3
 16371                           
 16372                           ;bme280.c: 329: t_fine = tempV1 + tempV2;
 16373  005380  0100               	movlb	0	; () banked
 16374  005382  51C1               	movf	BME280_compensateTemperature@tempV2& (0+255),w,b
 16375  005384  25BD               	addwf	BME280_compensateTemperature@tempV1& (0+255),w,b
 16376  005386  0101               	movlb	1	; () banked
 16377  005388  6F00               	movwf	_t_fine& (0+255),b
 16378  00538A  0100               	movlb	0	; () banked
 16379  00538C  51C2               	movf	(BME280_compensateTemperature@tempV2+1)& (0+255),w,b
 16380  00538E  21BE               	addwfc	(BME280_compensateTemperature@tempV1+1)& (0+255),w,b
 16381  005390  0101               	movlb	1	; () banked
 16382  005392  6F01               	movwf	(_t_fine+1)& (0+255),b
 16383  005394  0100               	movlb	0	; () banked
 16384  005396  51C3               	movf	(BME280_compensateTemperature@tempV2+2)& (0+255),w,b
 16385  005398  21BF               	addwfc	(BME280_compensateTemperature@tempV1+2)& (0+255),w,b
 16386  00539A  0101               	movlb	1	; () banked
 16387  00539C  6F02               	movwf	(_t_fine+2)& (0+255),b
 16388  00539E  0100               	movlb	0	; () banked
 16389  0053A0  51C4               	movf	(BME280_compensateTemperature@tempV2+3)& (0+255),w,b
 16390  0053A2  21C0               	addwfc	(BME280_compensateTemperature@tempV1+3)& (0+255),w,b
 16391  0053A4  0101               	movlb	1	; () banked
 16392  0053A6  6F03               	movwf	(_t_fine+3)& (0+255),b
 16393                           
 16394                           ; BSR set to: 1
 16395                           ;bme280.c: 330: t = (t_fine * 5 + 128) >> 8;
 16396  0053A8  C100  F09A         	movff	_t_fine,___lmul@multiplier
 16397  0053AC  C101  F09B         	movff	_t_fine+1,___lmul@multiplier+1
 16398  0053B0  C102  F09C         	movff	_t_fine+2,___lmul@multiplier+2
 16399  0053B4  C103  F09D         	movff	_t_fine+3,___lmul@multiplier+3
 16400  0053B8  0E05               	movlw	5
 16401  0053BA  0100               	movlb	0	; () banked
 16402  0053BC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 16403  0053BE  0E00               	movlw	0
 16404  0053C0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16405  0053C2  0E00               	movlw	0
 16406  0053C4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16407  0053C6  0E00               	movlw	0
 16408  0053C8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16409  0053CA  EC1B  F057         	call	___lmul	;wreg free
 16410  0053CE  0E80               	movlw	128
 16411  0053D0  0100               	movlb	0	; () banked
 16412  0053D2  259A               	addwf	?___lmul& (0+255),w,b
 16413  0053D4  6FAA               	movwf	??_BME280_compensateTemperature& (0+255),b
 16414  0053D6  0E00               	movlw	0
 16415  0053D8  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 16416  0053DA  6FAB               	movwf	(??_BME280_compensateTemperature+1)& (0+255),b
 16417  0053DC  0E00               	movlw	0
 16418  0053DE  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 16419  0053E0  6FAC               	movwf	(??_BME280_compensateTemperature+2)& (0+255),b
 16420  0053E2  0E00               	movlw	0
 16421  0053E4  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 16422  0053E6  6FAD               	movwf	(??_BME280_compensateTemperature+3)& (0+255),b
 16423  0053E8  C0AB  F0AA         	movff	??_BME280_compensateTemperature+1,??_BME280_compensateTemperature
 16424  0053EC  C0AC  F0AB         	movff	??_BME280_compensateTemperature+2,??_BME280_compensateTemperature+1
 16425  0053F0  C0AD  F0AC         	movff	??_BME280_compensateTemperature+3,??_BME280_compensateTemperature+2
 16426  0053F4  6BAD               	clrf	(??_BME280_compensateTemperature+3)& (0+255),b
 16427  0053F6  BFAC               	btfsc	(??_BME280_compensateTemperature+2)& (0+255),7,b
 16428  0053F8  69AD               	setf	(??_BME280_compensateTemperature+3)& (0+255),b
 16429  0053FA  C0AA  F0C5         	movff	??_BME280_compensateTemperature,BME280_compensateTemperature@t
 16430  0053FE  C0AB  F0C6         	movff	??_BME280_compensateTemperature+1,BME280_compensateTemperature@t+1
 16431  005402  C0AC  F0C7         	movff	??_BME280_compensateTemperature+2,BME280_compensateTemperature@t+2
 16432  005406  C0AD  F0C8         	movff	??_BME280_compensateTemperature+3,BME280_compensateTemperature@t+3
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;bme280.c: 332: return t;
 16436  00540A  C0C5  F0A6         	movff	BME280_compensateTemperature@t,?_BME280_compensateTemperature
 16437  00540E  C0C6  F0A7         	movff	BME280_compensateTemperature@t+1,?_BME280_compensateTemperature+1
 16438  005412  C0C7  F0A8         	movff	BME280_compensateTemperature@t+2,?_BME280_compensateTemperature+2
 16439  005416  C0C8  F0A9         	movff	BME280_compensateTemperature@t+3,?_BME280_compensateTemperature+3
 16440  00541A  0012               	return	
 16441  00541C                     __end_of_BME280_compensateTemperature:
 16442                           	opt stack 0
 16443                           tosu	equ	0xFFF
 16444                           tosh	equ	0xFFE
 16445                           tosl	equ	0xFFD
 16446                           pclath	equ	0xFFA
 16447                           tblptru	equ	0xFF8
 16448                           tblptrh	equ	0xFF7
 16449                           tblptrl	equ	0xFF6
 16450                           tablat	equ	0xFF5
 16451                           prodh	equ	0xFF4
 16452                           prodl	equ	0xFF3
 16453                           intcon	equ	0xFF2
 16454                           postinc0	equ	0xFEE
 16455                           wreg	equ	0xFE8
 16456                           indf2	equ	0xFDF
 16457                           postinc2	equ	0xFDE
 16458                           postdec2	equ	0xFDD
 16459                           fsr2h	equ	0xFDA
 16460                           fsr2l	equ	0xFD9
 16461                           status	equ	0xFD8
 16462                           
 16463 ;; *************** function _Weather_getPressureKPa *****************
 16464 ;; Defined at:
 16465 ;;		line 101 in file "mcc_generated_files/weather.c"
 16466 ;; Parameters:    Size  Location     Type
 16467 ;;		None
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;		None
 16470 ;; Return value:  Size  Location     Type
 16471 ;;                  3    0[BANK1 ] float 
 16472 ;; Registers used:
 16473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16474 ;; Tracked objects:
 16475 ;;		On entry : 0/0
 16476 ;;		On exit  : 0/0
 16477 ;;		Unchanged: 0/0
 16478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16479 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16482 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;Total ram usage:        3 bytes
 16484 ;; Hardware stack levels used:    1
 16485 ;; Hardware stack levels required when called:   10
 16486 ;; This function calls:
 16487 ;;		_BME280_getPressure
 16488 ;; This function is called by:
 16489 ;;		_main
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           	psect	text95
 16494  00C382                     __ptext95:
 16495                           	opt stack 0
 16496  00C382                     _Weather_getPressureKPa:
 16497                           	opt stack 20
 16498                           
 16499                           ;weather.c: 103: return BME280_getPressure();
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;incstack = 0
 16503  00C382  ECBE  F058         	call	_BME280_getPressure	;wreg free
 16504  00C386  C0F3  F18C         	movff	?_BME280_getPressure,?_Weather_getPressureKPa
 16505  00C38A  C0F4  F18D         	movff	?_BME280_getPressure+1,?_Weather_getPressureKPa+1
 16506  00C38E  C0F5  F18E         	movff	?_BME280_getPressure+2,?_Weather_getPressureKPa+2
 16507  00C392  0012               	return	
 16508  00C394                     __end_of_Weather_getPressureKPa:
 16509                           	opt stack 0
 16510                           tosu	equ	0xFFF
 16511                           tosh	equ	0xFFE
 16512                           tosl	equ	0xFFD
 16513                           pclath	equ	0xFFA
 16514                           tblptru	equ	0xFF8
 16515                           tblptrh	equ	0xFF7
 16516                           tblptrl	equ	0xFF6
 16517                           tablat	equ	0xFF5
 16518                           prodh	equ	0xFF4
 16519                           prodl	equ	0xFF3
 16520                           intcon	equ	0xFF2
 16521                           postinc0	equ	0xFEE
 16522                           wreg	equ	0xFE8
 16523                           indf2	equ	0xFDF
 16524                           postinc2	equ	0xFDE
 16525                           postdec2	equ	0xFDD
 16526                           fsr2h	equ	0xFDA
 16527                           fsr2l	equ	0xFD9
 16528                           status	equ	0xFD8
 16529                           
 16530 ;; *************** function _BME280_getPressure *****************
 16531 ;; Defined at:
 16532 ;;		line 301 in file "mcc_generated_files/bme280.c"
 16533 ;; Parameters:    Size  Location     Type
 16534 ;;		None
 16535 ;; Auto vars:     Size  Location     Type
 16536 ;;  pressure        3  150[BANK0 ] float 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  3  147[BANK0 ] float 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16546 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16550 ;;Total ram usage:        6 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; Hardware stack levels required when called:    9
 16553 ;; This function calls:
 16554 ;;		_BME280_compensatePressure
 16555 ;;		___ftdiv
 16556 ;;		___lltoft
 16557 ;; This function is called by:
 16558 ;;		_Weather_getPressureKPa
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           	psect	text96
 16563  00B17C                     __ptext96:
 16564                           	opt stack 0
 16565  00B17C                     _BME280_getPressure:
 16566                           	opt stack 20
 16567                           
 16568                           ;bme280.c: 303: float pressure = (float) BME280_compensatePressure() / 1000;
 16569                           
 16570                           ;incstack = 0
 16571  00B17C  EC34  F00F         	call	_BME280_compensatePressure	;wreg free
 16572  00B180  C0A6  F0DB         	movff	?_BME280_compensatePressure,___lltoft@c
 16573  00B184  C0A7  F0DC         	movff	?_BME280_compensatePressure+1,___lltoft@c+1
 16574  00B188  C0A8  F0DD         	movff	?_BME280_compensatePressure+2,___lltoft@c+2
 16575  00B18C  C0A9  F0DE         	movff	?_BME280_compensatePressure+3,___lltoft@c+3
 16576  00B190  ECD9  F055         	call	___lltoft	;wreg free
 16577  00B194  C0DB  F0E4         	movff	?___lltoft,___ftdiv@f1
 16578  00B198  C0DC  F0E5         	movff	?___lltoft+1,___ftdiv@f1+1
 16579  00B19C  C0DD  F0E6         	movff	?___lltoft+2,___ftdiv@f1+2
 16580  00B1A0  0E00               	movlw	0
 16581  00B1A2  0100               	movlb	0	; () banked
 16582  00B1A4  6FE7               	movwf	___ftdiv@f2& (0+255),b
 16583  00B1A6  0E7A               	movlw	122
 16584  00B1A8  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 16585  00B1AA  0E44               	movlw	68
 16586  00B1AC  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 16587  00B1AE  EC39  F047         	call	___ftdiv	;wreg free
 16588  00B1B2  C0E4  F0F6         	movff	?___ftdiv,BME280_getPressure@pressure
 16589  00B1B6  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getPressure@pressure+1
 16590  00B1BA  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getPressure@pressure+2
 16591                           
 16592                           ;bme280.c: 304: return pressure;
 16593  00B1BE  C0F6  F0F3         	movff	BME280_getPressure@pressure,?_BME280_getPressure
 16594  00B1C2  C0F7  F0F4         	movff	BME280_getPressure@pressure+1,?_BME280_getPressure+1
 16595  00B1C6  C0F8  F0F5         	movff	BME280_getPressure@pressure+2,?_BME280_getPressure+2
 16596  00B1CA  0012               	return	
 16597  00B1CC                     __end_of_BME280_getPressure:
 16598                           	opt stack 0
 16599                           tosu	equ	0xFFF
 16600                           tosh	equ	0xFFE
 16601                           tosl	equ	0xFFD
 16602                           pclath	equ	0xFFA
 16603                           tblptru	equ	0xFF8
 16604                           tblptrh	equ	0xFF7
 16605                           tblptrl	equ	0xFF6
 16606                           tablat	equ	0xFF5
 16607                           prodh	equ	0xFF4
 16608                           prodl	equ	0xFF3
 16609                           intcon	equ	0xFF2
 16610                           postinc0	equ	0xFEE
 16611                           wreg	equ	0xFE8
 16612                           indf2	equ	0xFDF
 16613                           postinc2	equ	0xFDE
 16614                           postdec2	equ	0xFDD
 16615                           fsr2h	equ	0xFDA
 16616                           fsr2l	equ	0xFD9
 16617                           status	equ	0xFD8
 16618                           
 16619 ;; *************** function _BME280_compensatePressure *****************
 16620 ;; Defined at:
 16621 ;;		line 339 in file "mcc_generated_files/bme280.c"
 16622 ;; Parameters:    Size  Location     Type
 16623 ;;		None
 16624 ;; Auto vars:     Size  Location     Type
 16625 ;;  pressV1         4   99[BANK0 ] long 
 16626 ;;  p               4   95[BANK0 ] unsigned long 
 16627 ;;  pressV2         4   91[BANK0 ] long 
 16628 ;; Return value:  Size  Location     Type
 16629 ;;                  4   70[BANK0 ] unsigned long 
 16630 ;; Registers used:
 16631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : 0/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16637 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16638 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16639 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16640 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16641 ;;Total ram usage:       33 bytes
 16642 ;; Hardware stack levels used:    1
 16643 ;; Hardware stack levels required when called:    8
 16644 ;; This function calls:
 16645 ;;		___lldiv
 16646 ;;		___lmul
 16647 ;; This function is called by:
 16648 ;;		_BME280_getPressure
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text97
 16653  001E68                     __ptext97:
 16654                           	opt stack 0
 16655  001E68                     _BME280_compensatePressure:
 16656                           	opt stack 20
 16657                           
 16658                           ;bme280.c: 341: long pressV1, pressV2;
 16659                           ;bme280.c: 342: uint32_t p;
 16660                           ;bme280.c: 344: pressV1 = (((long) t_fine) >> 1) - (long) 64000;
 16661                           
 16662                           ;incstack = 0
 16663  001E68  C100  F0AA         	movff	_t_fine,??_BME280_compensatePressure
 16664  001E6C  C101  F0AB         	movff	_t_fine+1,??_BME280_compensatePressure+1
 16665  001E70  C102  F0AC         	movff	_t_fine+2,??_BME280_compensatePressure+2
 16666  001E74  C103  F0AD         	movff	_t_fine+3,??_BME280_compensatePressure+3
 16667  001E78  0100               	movlb	0	; () banked
 16668  001E7A  35AD               	rlcf	(??_BME280_compensatePressure+3)& (0+255),w,b
 16669  001E7C  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16670  001E7E  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16671  001E80  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 16672  001E82  33AA               	rrcf	??_BME280_compensatePressure& (0+255),f,b
 16673  001E84  0E00               	movlw	0
 16674  001E86  25AA               	addwf	??_BME280_compensatePressure& (0+255),w,b
 16675  001E88  6FC3               	movwf	BME280_compensatePressure@pressV1& (0+255),b
 16676  001E8A  0E06               	movlw	6
 16677  001E8C  21AB               	addwfc	(??_BME280_compensatePressure+1)& (0+255),w,b
 16678  001E8E  6FC4               	movwf	(BME280_compensatePressure@pressV1+1)& (0+255),b
 16679  001E90  0EFF               	movlw	255
 16680  001E92  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 16681  001E94  6FC5               	movwf	(BME280_compensatePressure@pressV1+2)& (0+255),b
 16682  001E96  0EFF               	movlw	255
 16683  001E98  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 16684  001E9A  6FC6               	movwf	(BME280_compensatePressure@pressV1+3)& (0+255),b
 16685                           
 16686                           ; BSR set to: 0
 16687                           ;bme280.c: 345: pressV2 = (((pressV1 >> 2) * (pressV1 >> 2)) >> 11) * ((long) calibParam
      +                          .dig_P6);
 16688  001E9C  0E0B               	movlw	11
 16689  001E9E  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16690  001EA0  0E02               	movlw	2
 16691  001EA2  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16692  001EA4  C0C3  F0AC         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+2
 16693  001EA8  C0C4  F0AD         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+3
 16694  001EAC  C0C5  F0AE         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+4
 16695  001EB0  C0C6  F0AF         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+5
 16696  001EB4                     u24785:
 16697  001EB4  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 16698  001EB6  D001               	goto	u24786
 16699  001EB8  D007               	goto	u24787
 16700  001EBA                     u24786:
 16701  001EBA  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16702  001EBC  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16703  001EBE  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 16704  001EC0  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16705  001EC2  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16706  001EC4  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 16707  001EC6  D7F6               	goto	u24785
 16708  001EC8                     u24787:
 16709  001EC8  C0AC  F09A         	movff	??_BME280_compensatePressure+2,___lmul@multiplier
 16710  001ECC  C0AD  F09B         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+1
 16711  001ED0  C0AE  F09C         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+2
 16712  001ED4  C0AF  F09D         	movff	??_BME280_compensatePressure+5,___lmul@multiplier+3
 16713  001ED8  0E02               	movlw	2
 16714  001EDA  0100               	movlb	0	; () banked
 16715  001EDC  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 16716  001EDE  C0C3  F0B1         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+7
 16717  001EE2  C0C4  F0B2         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+8
 16718  001EE6  C0C5  F0B3         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+9
 16719  001EEA  C0C6  F0B4         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+10
 16720  001EEE                     u24795:
 16721  001EEE  67B0               	tstfsz	(??_BME280_compensatePressure+6)& (0+255),b
 16722  001EF0  D001               	goto	u24796
 16723  001EF2  D007               	goto	u24797
 16724  001EF4                     u24796:
 16725  001EF4  35B4               	rlcf	(??_BME280_compensatePressure+10)& (0+255),w,b
 16726  001EF6  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 16727  001EF8  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 16728  001EFA  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16729  001EFC  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16730  001EFE  2FB0               	decfsz	(??_BME280_compensatePressure+6)& (0+255),f,b
 16731  001F00  D7F6               	goto	u24795
 16732  001F02                     u24797:
 16733  001F02  C0B1  F09E         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand
 16734  001F06  C0B2  F09F         	movff	??_BME280_compensatePressure+8,___lmul@multiplicand+1
 16735  001F0A  C0B3  F0A0         	movff	??_BME280_compensatePressure+9,___lmul@multiplicand+2
 16736  001F0E  C0B4  F0A1         	movff	??_BME280_compensatePressure+10,___lmul@multiplicand+3
 16737  001F12  EC1B  F057         	call	___lmul	;wreg free
 16738  001F16                     u24805:
 16739  001F16  0100               	movlb	0	; () banked
 16740  001F18  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 16741  001F1A  D001               	goto	u24806
 16742  001F1C  D007               	goto	u24807
 16743  001F1E                     u24806:
 16744  001F1E  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16745  001F20  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16746  001F22  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16747  001F24  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16748  001F26  339A               	rrcf	?___lmul& (0+255),f,b
 16749  001F28  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 16750  001F2A  D7F5               	goto	u24805
 16751  001F2C                     u24807:
 16752  001F2C  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7025
 16753  001F30  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7025+1
 16754  001F34  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7025+2
 16755  001F38  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7025+3
 16756                           
 16757                           ;bme280.c: 345: pressV2 = (((pressV1 >> 2) * (pressV1 >> 2)) >> 11) * ((long) calibParam
      +                          .dig_P6);
 16758  001F3C  C0B7  F09A         	movff	_BME280_compensatePressure$7025,___lmul@multiplier
 16759  001F40  C0B8  F09B         	movff	_BME280_compensatePressure$7025+1,___lmul@multiplier+1
 16760  001F44  C0B9  F09C         	movff	_BME280_compensatePressure$7025+2,___lmul@multiplier+2
 16761  001F48  C0BA  F09D         	movff	_BME280_compensatePressure$7025+3,___lmul@multiplier+3
 16762  001F4C  EE21  F07B         	lfsr	2,_calibParam+16
 16763  001F50  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 16764  001F54  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 16765  001F58  0100               	movlb	0	; () banked
 16766  001F5A  0E00               	movlw	0
 16767  001F5C  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 16768  001F5E  0EFF               	movlw	-1
 16769  001F60  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16770  001F62  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16771  001F64  EC1B  F057         	call	___lmul	;wreg free
 16772  001F68  C09A  F0BB         	movff	?___lmul,BME280_compensatePressure@pressV2
 16773  001F6C  C09B  F0BC         	movff	?___lmul+1,BME280_compensatePressure@pressV2+1
 16774  001F70  C09C  F0BD         	movff	?___lmul+2,BME280_compensatePressure@pressV2+2
 16775  001F74  C09D  F0BE         	movff	?___lmul+3,BME280_compensatePressure@pressV2+3
 16776                           
 16777                           ;bme280.c: 346: pressV2 = pressV2 + ((pressV1 * ((long) calibParam.dig_P5)) << 1);
 16778  001F78  EE21  F079         	lfsr	2,_calibParam+14
 16779  001F7C  CFDE F09A          	movff	postinc2,___lmul@multiplier
 16780  001F80  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 16781  001F84  0100               	movlb	0	; () banked
 16782  001F86  0E00               	movlw	0
 16783  001F88  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16784  001F8A  0EFF               	movlw	-1
 16785  001F8C  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16786  001F8E  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16787  001F90  C0C3  F09E         	movff	BME280_compensatePressure@pressV1,___lmul@multiplicand
 16788  001F94  C0C4  F09F         	movff	BME280_compensatePressure@pressV1+1,___lmul@multiplicand+1
 16789  001F98  C0C5  F0A0         	movff	BME280_compensatePressure@pressV1+2,___lmul@multiplicand+2
 16790  001F9C  C0C6  F0A1         	movff	BME280_compensatePressure@pressV1+3,___lmul@multiplicand+3
 16791  001FA0  EC1B  F057         	call	___lmul	;wreg free
 16792  001FA4  90D8               	bcf	status,0,c
 16793  001FA6  0100               	movlb	0	; () banked
 16794  001FA8  359A               	rlcf	?___lmul& (0+255),w,b
 16795  001FAA  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16796  001FAC  359B               	rlcf	(?___lmul+1)& (0+255),w,b
 16797  001FAE  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16798  001FB0  359C               	rlcf	(?___lmul+2)& (0+255),w,b
 16799  001FB2  6FAC               	movwf	(??_BME280_compensatePressure+2)& (0+255),b
 16800  001FB4  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16801  001FB6  6FAD               	movwf	(??_BME280_compensatePressure+3)& (0+255),b
 16802  001FB8  51BB               	movf	BME280_compensatePressure@pressV2& (0+255),w,b
 16803  001FBA  25AA               	addwf	??_BME280_compensatePressure& (0+255),w,b
 16804  001FBC  6FBB               	movwf	BME280_compensatePressure@pressV2& (0+255),b
 16805  001FBE  51BC               	movf	(BME280_compensatePressure@pressV2+1)& (0+255),w,b
 16806  001FC0  21AB               	addwfc	(??_BME280_compensatePressure+1)& (0+255),w,b
 16807  001FC2  6FBC               	movwf	(BME280_compensatePressure@pressV2+1)& (0+255),b
 16808  001FC4  51BD               	movf	(BME280_compensatePressure@pressV2+2)& (0+255),w,b
 16809  001FC6  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 16810  001FC8  6FBD               	movwf	(BME280_compensatePressure@pressV2+2)& (0+255),b
 16811  001FCA  51BE               	movf	(BME280_compensatePressure@pressV2+3)& (0+255),w,b
 16812  001FCC  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 16813  001FCE  6FBE               	movwf	(BME280_compensatePressure@pressV2+3)& (0+255),b
 16814                           
 16815                           ; BSR set to: 0
 16816                           ;bme280.c: 347: pressV2 = (pressV2 >> 2)+(((long) calibParam.dig_P4) << 16);
 16817  001FD0  0101               	movlb	1	; () banked
 16818  001FD2  5177               	movf	(_calibParam+12)& (0+255),w,b
 16819  001FD4  0100               	movlb	0	; () banked
 16820  001FD6  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16821  001FD8  0101               	movlb	1	; () banked
 16822  001FDA  5178               	movf	(_calibParam+13)& (0+255),w,b
 16823  001FDC  0100               	movlb	0	; () banked
 16824  001FDE  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16825  001FE0  6BAC               	clrf	(??_BME280_compensatePressure+2)& (0+255),b
 16826  001FE2  6BAD               	clrf	(??_BME280_compensatePressure+3)& (0+255),b
 16827  001FE4  C0AB  F0AD         	movff	??_BME280_compensatePressure+1,??_BME280_compensatePressure+3
 16828  001FE8  C0AA  F0AC         	movff	??_BME280_compensatePressure,??_BME280_compensatePressure+2
 16829  001FEC  6BAB               	clrf	(??_BME280_compensatePressure+1)& (0+255),b
 16830  001FEE  6BAA               	clrf	??_BME280_compensatePressure& (0+255),b
 16831  001FF0  0E02               	movlw	2
 16832  001FF2  6FAE               	movwf	(??_BME280_compensatePressure+4)& (0+255),b
 16833  001FF4  C0BB  F0AF         	movff	BME280_compensatePressure@pressV2,??_BME280_compensatePressure+5
 16834  001FF8  C0BC  F0B0         	movff	BME280_compensatePressure@pressV2+1,??_BME280_compensatePressure+6
 16835  001FFC  C0BD  F0B1         	movff	BME280_compensatePressure@pressV2+2,??_BME280_compensatePressure+7
 16836  002000  C0BE  F0B2         	movff	BME280_compensatePressure@pressV2+3,??_BME280_compensatePressure+8
 16837  002004                     u24815:
 16838  002004  67AE               	tstfsz	(??_BME280_compensatePressure+4)& (0+255),b
 16839  002006  D001               	goto	u24816
 16840  002008  D007               	goto	u24817
 16841  00200A                     u24816:
 16842  00200A  35B2               	rlcf	(??_BME280_compensatePressure+8)& (0+255),w,b
 16843  00200C  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16844  00200E  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16845  002010  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 16846  002012  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16847  002014  2FAE               	decfsz	(??_BME280_compensatePressure+4)& (0+255),f,b
 16848  002016  D7F6               	goto	u24815
 16849  002018                     u24817:
 16850  002018  0100               	movlb	0	; () banked
 16851  00201A  51AA               	movf	??_BME280_compensatePressure& (0+255),w,b
 16852  00201C  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16853  00201E  6FBB               	movwf	BME280_compensatePressure@pressV2& (0+255),b
 16854  002020  51AB               	movf	(??_BME280_compensatePressure+1)& (0+255),w,b
 16855  002022  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 16856  002024  6FBC               	movwf	(BME280_compensatePressure@pressV2+1)& (0+255),b
 16857  002026  51AC               	movf	(??_BME280_compensatePressure+2)& (0+255),w,b
 16858  002028  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 16859  00202A  6FBD               	movwf	(BME280_compensatePressure@pressV2+2)& (0+255),b
 16860  00202C  51AD               	movf	(??_BME280_compensatePressure+3)& (0+255),w,b
 16861  00202E  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 16862  002030  6FBE               	movwf	(BME280_compensatePressure@pressV2+3)& (0+255),b
 16863                           
 16864                           ;bme280.c: 348: pressV1 = (((calibParam.dig_P3 * (((pressV1 >> 2) * (pressV1 >> 2)) >> 1
      +                          3)) >> 3) +
 16865                           ;bme280.c: 349: ((((long) calibParam.dig_P2) * pressV1) >> 1)) >> 18;
 16866  002032  0E0D               	movlw	13
 16867  002034  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16868  002036  0E02               	movlw	2
 16869  002038  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16870  00203A  C0C3  F0AC         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+2
 16871  00203E  C0C4  F0AD         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+3
 16872  002042  C0C5  F0AE         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+4
 16873  002046  C0C6  F0AF         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+5
 16874  00204A                     u24825:
 16875  00204A  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 16876  00204C  D001               	goto	u24826
 16877  00204E  D007               	goto	u24827
 16878  002050                     u24826:
 16879  002050  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16880  002052  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16881  002054  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 16882  002056  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16883  002058  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16884  00205A  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 16885  00205C  D7F6               	goto	u24825
 16886  00205E                     u24827:
 16887  00205E  C0AC  F09A         	movff	??_BME280_compensatePressure+2,___lmul@multiplier
 16888  002062  C0AD  F09B         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+1
 16889  002066  C0AE  F09C         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+2
 16890  00206A  C0AF  F09D         	movff	??_BME280_compensatePressure+5,___lmul@multiplier+3
 16891  00206E  0E02               	movlw	2
 16892  002070  0100               	movlb	0	; () banked
 16893  002072  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 16894  002074  C0C3  F0B1         	movff	BME280_compensatePressure@pressV1,??_BME280_compensatePressure+7
 16895  002078  C0C4  F0B2         	movff	BME280_compensatePressure@pressV1+1,??_BME280_compensatePressure+8
 16896  00207C  C0C5  F0B3         	movff	BME280_compensatePressure@pressV1+2,??_BME280_compensatePressure+9
 16897  002080  C0C6  F0B4         	movff	BME280_compensatePressure@pressV1+3,??_BME280_compensatePressure+10
 16898  002084                     u24835:
 16899  002084  67B0               	tstfsz	(??_BME280_compensatePressure+6)& (0+255),b
 16900  002086  D001               	goto	u24836
 16901  002088  D007               	goto	u24837
 16902  00208A                     u24836:
 16903  00208A  35B4               	rlcf	(??_BME280_compensatePressure+10)& (0+255),w,b
 16904  00208C  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 16905  00208E  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 16906  002090  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 16907  002092  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 16908  002094  2FB0               	decfsz	(??_BME280_compensatePressure+6)& (0+255),f,b
 16909  002096  D7F6               	goto	u24835
 16910  002098                     u24837:
 16911  002098  C0B1  F09E         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand
 16912  00209C  C0B2  F09F         	movff	??_BME280_compensatePressure+8,___lmul@multiplicand+1
 16913  0020A0  C0B3  F0A0         	movff	??_BME280_compensatePressure+9,___lmul@multiplicand+2
 16914  0020A4  C0B4  F0A1         	movff	??_BME280_compensatePressure+10,___lmul@multiplicand+3
 16915  0020A8  EC1B  F057         	call	___lmul	;wreg free
 16916  0020AC                     u24845:
 16917  0020AC  0100               	movlb	0	; () banked
 16918  0020AE  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 16919  0020B0  D001               	goto	u24846
 16920  0020B2  D007               	goto	u24847
 16921  0020B4                     u24846:
 16922  0020B4  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16923  0020B6  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16924  0020B8  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16925  0020BA  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16926  0020BC  339A               	rrcf	?___lmul& (0+255),f,b
 16927  0020BE  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 16928  0020C0  D7F5               	goto	u24845
 16929  0020C2                     u24847:
 16930  0020C2  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7025
 16931  0020C6  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7025+1
 16932  0020CA  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7025+2
 16933  0020CE  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7025+3
 16934                           
 16935                           ;bme280.c: 348: pressV1 = (((calibParam.dig_P3 * (((pressV1 >> 2) * (pressV1 >> 2)) >> 1
      +                          3)) >> 3) +
 16936                           ;bme280.c: 349: ((((long) calibParam.dig_P2) * pressV1) >> 1)) >> 18;
 16937  0020D2  0E12               	movlw	18
 16938  0020D4  0100               	movlb	0	; () banked
 16939  0020D6  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 16940  0020D8  0E03               	movlw	3
 16941  0020DA  6FAB               	movwf	(??_BME280_compensatePressure+1)& (0+255),b
 16942  0020DC  EE21  F075         	lfsr	2,_calibParam+10
 16943  0020E0  CFDE F09A          	movff	postinc2,___lmul@multiplier
 16944  0020E4  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 16945  0020E8  0E00               	movlw	0
 16946  0020EA  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16947  0020EC  0EFF               	movlw	-1
 16948  0020EE  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16949  0020F0  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16950  0020F2  C0B7  F09E         	movff	_BME280_compensatePressure$7025,___lmul@multiplicand
 16951  0020F6  C0B8  F09F         	movff	_BME280_compensatePressure$7025+1,___lmul@multiplicand+1
 16952  0020FA  C0B9  F0A0         	movff	_BME280_compensatePressure$7025+2,___lmul@multiplicand+2
 16953  0020FE  C0BA  F0A1         	movff	_BME280_compensatePressure$7025+3,___lmul@multiplicand+3
 16954  002102  EC1B  F057         	call	___lmul	;wreg free
 16955  002106  C09A  F0AC         	movff	?___lmul,??_BME280_compensatePressure+2
 16956  00210A  C09B  F0AD         	movff	?___lmul+1,??_BME280_compensatePressure+3
 16957  00210E  C09C  F0AE         	movff	?___lmul+2,??_BME280_compensatePressure+4
 16958  002112  C09D  F0AF         	movff	?___lmul+3,??_BME280_compensatePressure+5
 16959  002116                     u24855:
 16960  002116  0100               	movlb	0	; () banked
 16961  002118  67AB               	tstfsz	(??_BME280_compensatePressure+1)& (0+255),b
 16962  00211A  D001               	goto	u24856
 16963  00211C  D007               	goto	u24857
 16964  00211E                     u24856:
 16965  00211E  35AF               	rlcf	(??_BME280_compensatePressure+5)& (0+255),w,b
 16966  002120  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 16967  002122  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 16968  002124  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 16969  002126  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 16970  002128  2FAB               	decfsz	(??_BME280_compensatePressure+1)& (0+255),f,b
 16971  00212A  D7F5               	goto	u24855
 16972  00212C                     u24857:
 16973  00212C  EE21  F073         	lfsr	2,_calibParam+8
 16974  002130  CFDE F09A          	movff	postinc2,___lmul@multiplier
 16975  002134  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 16976  002138  0100               	movlb	0	; () banked
 16977  00213A  0E00               	movlw	0
 16978  00213C  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16979  00213E  0EFF               	movlw	-1
 16980  002140  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 16981  002142  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 16982  002144  C0C3  F09E         	movff	BME280_compensatePressure@pressV1,___lmul@multiplicand
 16983  002148  C0C4  F09F         	movff	BME280_compensatePressure@pressV1+1,___lmul@multiplicand+1
 16984  00214C  C0C5  F0A0         	movff	BME280_compensatePressure@pressV1+2,___lmul@multiplicand+2
 16985  002150  C0C6  F0A1         	movff	BME280_compensatePressure@pressV1+3,___lmul@multiplicand+3
 16986  002154  EC1B  F057         	call	___lmul	;wreg free
 16987  002158  0100               	movlb	0	; () banked
 16988  00215A  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 16989  00215C  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 16990  00215E  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 16991  002160  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 16992  002162  339A               	rrcf	?___lmul& (0+255),f,b
 16993  002164  519A               	movf	?___lmul& (0+255),w,b
 16994  002166  25AC               	addwf	(??_BME280_compensatePressure+2)& (0+255),w,b
 16995  002168  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 16996  00216A  519B               	movf	(?___lmul+1)& (0+255),w,b
 16997  00216C  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 16998  00216E  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 16999  002170  519C               	movf	(?___lmul+2)& (0+255),w,b
 17000  002172  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17001  002174  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17002  002176  519D               	movf	(?___lmul+3)& (0+255),w,b
 17003  002178  21AF               	addwfc	(??_BME280_compensatePressure+5)& (0+255),w,b
 17004  00217A  6FB3               	movwf	(??_BME280_compensatePressure+9)& (0+255),b
 17005  00217C                     u24865:
 17006  00217C  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17007  00217E  D001               	goto	u24866
 17008  002180  D007               	goto	u24867
 17009  002182                     u24866:
 17010  002182  35B3               	rlcf	(??_BME280_compensatePressure+9)& (0+255),w,b
 17011  002184  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 17012  002186  33B2               	rrcf	(??_BME280_compensatePressure+8)& (0+255),f,b
 17013  002188  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17014  00218A  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17015  00218C  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17016  00218E  D7F6               	goto	u24865
 17017  002190                     u24867:
 17018  002190  C0B0  F0C3         	movff	??_BME280_compensatePressure+6,BME280_compensatePressure@pressV1
 17019  002194  C0B1  F0C4         	movff	??_BME280_compensatePressure+7,BME280_compensatePressure@pressV1+1
 17020  002198  C0B2  F0C5         	movff	??_BME280_compensatePressure+8,BME280_compensatePressure@pressV1+2
 17021  00219C  C0B3  F0C6         	movff	??_BME280_compensatePressure+9,BME280_compensatePressure@pressV1+3
 17022                           
 17023                           ;bme280.c: 350: pressV1 = ((((32768 + pressV1))*((long) calibParam.dig_P1)) >> 15);
 17024  0021A0  0E0F               	movlw	15
 17025  0021A2  0100               	movlb	0	; () banked
 17026  0021A4  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17027  0021A6  0E00               	movlw	0
 17028  0021A8  25C3               	addwf	BME280_compensatePressure@pressV1& (0+255),w,b
 17029  0021AA  6F9A               	movwf	___lmul@multiplier& (0+255),b
 17030  0021AC  0E80               	movlw	128
 17031  0021AE  21C4               	addwfc	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17032  0021B0  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 17033  0021B2  0E00               	movlw	0
 17034  0021B4  21C5               	addwfc	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17035  0021B6  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17036  0021B8  0E00               	movlw	0
 17037  0021BA  21C6               	addwfc	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17038  0021BC  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17039  0021BE  C171  F09E         	movff	_calibParam+6,___lmul@multiplicand
 17040  0021C2  C172  F09F         	movff	_calibParam+7,___lmul@multiplicand+1
 17041  0021C6  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17042  0021C8  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17043  0021CA  EC1B  F057         	call	___lmul	;wreg free
 17044  0021CE                     u24875:
 17045  0021CE  0100               	movlb	0	; () banked
 17046  0021D0  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17047  0021D2  D001               	goto	u24876
 17048  0021D4  D007               	goto	u24877
 17049  0021D6                     u24876:
 17050  0021D6  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17051  0021D8  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17052  0021DA  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17053  0021DC  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17054  0021DE  339A               	rrcf	?___lmul& (0+255),f,b
 17055  0021E0  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17056  0021E2  D7F5               	goto	u24875
 17057  0021E4                     u24877:
 17058  0021E4  C09A  F0C3         	movff	?___lmul,BME280_compensatePressure@pressV1
 17059  0021E8  C09B  F0C4         	movff	?___lmul+1,BME280_compensatePressure@pressV1+1
 17060  0021EC  C09C  F0C5         	movff	?___lmul+2,BME280_compensatePressure@pressV1+2
 17061  0021F0  C09D  F0C6         	movff	?___lmul+3,BME280_compensatePressure@pressV1+3
 17062                           
 17063                           ;bme280.c: 352: if (pressV1 == 0)
 17064  0021F4  0100               	movlb	0	; () banked
 17065  0021F6  51C3               	movf	BME280_compensatePressure@pressV1& (0+255),w,b
 17066  0021F8  11C4               	iorwf	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17067  0021FA  11C5               	iorwf	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17068  0021FC  11C6               	iorwf	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17069  0021FE  A4D8               	btfss	status,2,c
 17070  002200  D009               	goto	l3086
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;bme280.c: 353: {
 17074                           ;bme280.c: 355: return 0;
 17075  002202  0E00               	movlw	0
 17076  002204  6FA6               	movwf	?_BME280_compensatePressure& (0+255),b
 17077  002206  0E00               	movlw	0
 17078  002208  6FA7               	movwf	(?_BME280_compensatePressure+1)& (0+255),b
 17079  00220A  0E00               	movlw	0
 17080  00220C  6FA8               	movwf	(?_BME280_compensatePressure+2)& (0+255),b
 17081  00220E  0E00               	movlw	0
 17082  002210  6FA9               	movwf	(?_BME280_compensatePressure+3)& (0+255),b
 17083                           
 17084                           ; BSR set to: 0
 17085  002212  0012               	return	
 17086  002214                     l3086:
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;bme280.c: 356: }
 17090                           ;bme280.c: 358: p = (((uint32_t) (((long) 1048576) - adc_P)-(pressV2 >> 12)))*3125;
 17091                           
 17092                           ; BSR set to: 0
 17093  002214  0E0C               	movlw	12
 17094  002216  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17095  002218  C0BB  F0AB         	movff	BME280_compensatePressure@pressV2,??_BME280_compensatePressure+1
 17096  00221C  C0BC  F0AC         	movff	BME280_compensatePressure@pressV2+1,??_BME280_compensatePressure+2
 17097  002220  C0BD  F0AD         	movff	BME280_compensatePressure@pressV2+2,??_BME280_compensatePressure+3
 17098  002224  C0BE  F0AE         	movff	BME280_compensatePressure@pressV2+3,??_BME280_compensatePressure+4
 17099  002228                     u24895:
 17100  002228  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17101  00222A  D001               	goto	u24896
 17102  00222C  D007               	goto	u24897
 17103  00222E                     u24896:
 17104  00222E  35AE               	rlcf	(??_BME280_compensatePressure+4)& (0+255),w,b
 17105  002230  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17106  002232  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17107  002234  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17108  002236  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17109  002238  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17110  00223A  D7F6               	goto	u24895
 17111  00223C                     u24897:
 17112  00223C  0102               	movlb	2	; () banked
 17113  00223E  5100               	movf	_adc_P& (0+255),w,b
 17114  002240  0100               	movlb	0	; () banked
 17115  002242  25AB               	addwf	(??_BME280_compensatePressure+1)& (0+255),w,b
 17116  002244  6FAF               	movwf	(??_BME280_compensatePressure+5)& (0+255),b
 17117  002246  0102               	movlb	2	; () banked
 17118  002248  5101               	movf	(_adc_P+1)& (0+255),w,b
 17119  00224A  0100               	movlb	0	; () banked
 17120  00224C  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 17121  00224E  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 17122  002250  0102               	movlb	2	; () banked
 17123  002252  5102               	movf	(_adc_P+2)& (0+255),w,b
 17124  002254  0100               	movlb	0	; () banked
 17125  002256  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 17126  002258  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 17127  00225A  0102               	movlb	2	; () banked
 17128  00225C  5103               	movf	(_adc_P+3)& (0+255),w,b
 17129  00225E  0100               	movlb	0	; () banked
 17130  002260  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17131  002262  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17132  002264  1FAF               	comf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17133  002266  1FB0               	comf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17134  002268  1FB1               	comf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17135  00226A  1FB2               	comf	(??_BME280_compensatePressure+8)& (0+255),f,b
 17136  00226C  2BAF               	incf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17137  00226E  0E00               	movlw	0
 17138  002270  23B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),f,b
 17139  002272  23B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),f,b
 17140  002274  23B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),f,b
 17141  002276  0E00               	movlw	0
 17142  002278  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 17143  00227A  6F9A               	movwf	___lmul@multiplier& (0+255),b
 17144  00227C  0E00               	movlw	0
 17145  00227E  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 17146  002280  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 17147  002282  0E10               	movlw	16
 17148  002284  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 17149  002286  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17150  002288  0E00               	movlw	0
 17151  00228A  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 17152  00228C  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17153  00228E  0E35               	movlw	53
 17154  002290  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 17155  002292  0E0C               	movlw	12
 17156  002294  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17157  002296  0E00               	movlw	0
 17158  002298  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17159  00229A  0E00               	movlw	0
 17160  00229C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17161  00229E  EC1B  F057         	call	___lmul	;wreg free
 17162  0022A2  C09A  F0BF         	movff	?___lmul,BME280_compensatePressure@p
 17163  0022A6  C09B  F0C0         	movff	?___lmul+1,BME280_compensatePressure@p+1
 17164  0022AA  C09C  F0C1         	movff	?___lmul+2,BME280_compensatePressure@p+2
 17165  0022AE  C09D  F0C2         	movff	?___lmul+3,BME280_compensatePressure@p+3
 17166                           
 17167                           ;bme280.c: 359: if (p < 0x80000000)
 17168  0022B2  0E80               	movlw	128
 17169  0022B4  0100               	movlb	0	; () banked
 17170  0022B6  5DC2               	subwf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17171  0022B8  B0D8               	btfsc	status,0,c
 17172  0022BA  D01C               	goto	l3088
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;bme280.c: 360: {
 17176                           ;bme280.c: 361: p = (p << 1) / ((uint32_t) pressV1);
 17177  0022BC  90D8               	bcf	status,0,c
 17178  0022BE  35BF               	rlcf	BME280_compensatePressure@p& (0+255),w,b
 17179  0022C0  6F60               	movwf	___lldiv@dividend& (0+255),b
 17180  0022C2  35C0               	rlcf	(BME280_compensatePressure@p+1)& (0+255),w,b
 17181  0022C4  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 17182  0022C6  35C1               	rlcf	(BME280_compensatePressure@p+2)& (0+255),w,b
 17183  0022C8  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 17184  0022CA  35C2               	rlcf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17185  0022CC  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 17186  0022CE  C0C3  F064         	movff	BME280_compensatePressure@pressV1,___lldiv@divisor
 17187  0022D2  C0C4  F065         	movff	BME280_compensatePressure@pressV1+1,___lldiv@divisor+1
 17188  0022D6  C0C5  F066         	movff	BME280_compensatePressure@pressV1+2,___lldiv@divisor+2
 17189  0022DA  C0C6  F067         	movff	BME280_compensatePressure@pressV1+3,___lldiv@divisor+3
 17190  0022DE  ECAE  F050         	call	___lldiv	;wreg free
 17191  0022E2  C060  F0BF         	movff	?___lldiv,BME280_compensatePressure@p
 17192  0022E6  C061  F0C0         	movff	?___lldiv+1,BME280_compensatePressure@p+1
 17193  0022EA  C062  F0C1         	movff	?___lldiv+2,BME280_compensatePressure@p+2
 17194  0022EE  C063  F0C2         	movff	?___lldiv+3,BME280_compensatePressure@p+3
 17195                           
 17196                           ;bme280.c: 362: }
 17197  0022F2  D01C               	goto	l3089
 17198  0022F4                     l3088:
 17199                           
 17200                           ;bme280.c: 363: else
 17201                           ;bme280.c: 364: {
 17202                           ;bme280.c: 365: p = (p / (uint32_t) pressV1) * 2;
 17203  0022F4  C0BF  F060         	movff	BME280_compensatePressure@p,___lldiv@dividend
 17204  0022F8  C0C0  F061         	movff	BME280_compensatePressure@p+1,___lldiv@dividend+1
 17205  0022FC  C0C1  F062         	movff	BME280_compensatePressure@p+2,___lldiv@dividend+2
 17206  002300  C0C2  F063         	movff	BME280_compensatePressure@p+3,___lldiv@dividend+3
 17207  002304  C0C3  F064         	movff	BME280_compensatePressure@pressV1,___lldiv@divisor
 17208  002308  C0C4  F065         	movff	BME280_compensatePressure@pressV1+1,___lldiv@divisor+1
 17209  00230C  C0C5  F066         	movff	BME280_compensatePressure@pressV1+2,___lldiv@divisor+2
 17210  002310  C0C6  F067         	movff	BME280_compensatePressure@pressV1+3,___lldiv@divisor+3
 17211  002314  ECAE  F050         	call	___lldiv	;wreg free
 17212  002318  90D8               	bcf	status,0,c
 17213  00231A  0100               	movlb	0	; () banked
 17214  00231C  3560               	rlcf	?___lldiv& (0+255),w,b
 17215  00231E  6FBF               	movwf	BME280_compensatePressure@p& (0+255),b
 17216  002320  3561               	rlcf	(?___lldiv+1)& (0+255),w,b
 17217  002322  6FC0               	movwf	(BME280_compensatePressure@p+1)& (0+255),b
 17218  002324  3562               	rlcf	(?___lldiv+2)& (0+255),w,b
 17219  002326  6FC1               	movwf	(BME280_compensatePressure@p+2)& (0+255),b
 17220  002328  3563               	rlcf	(?___lldiv+3)& (0+255),w,b
 17221  00232A  6FC2               	movwf	(BME280_compensatePressure@p+3)& (0+255),b
 17222  00232C                     l3089:
 17223                           
 17224                           ;bme280.c: 366: }
 17225                           ;bme280.c: 368: pressV1 = (((long) calibParam.dig_P9) * ((long) (((p >> 3) * (p >> 3)) >
      +                          > 13))) >> 12;
 17226  00232C  C0BF  F0AA         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure
 17227  002330  C0C0  F0AB         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+1
 17228  002334  C0C1  F0AC         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+2
 17229  002338  C0C2  F0AD         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+3
 17230  00233C  0E04               	movlw	4
 17231  00233E  D006               	goto	u24910
 17232  002340                     u24915:
 17233  002340  0100               	movlb	0	; () banked
 17234  002342  90D8               	bcf	status,0,c
 17235  002344  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17236  002346  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17237  002348  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17238  00234A  33AA               	rrcf	??_BME280_compensatePressure& (0+255),f,b
 17239  00234C                     u24910:
 17240  00234C  2EE8               	decfsz	wreg,f,c
 17241  00234E  D7F8               	goto	u24915
 17242  002350  C0AA  F09A         	movff	??_BME280_compensatePressure,___lmul@multiplier
 17243  002354  C0AB  F09B         	movff	??_BME280_compensatePressure+1,___lmul@multiplier+1
 17244  002358  C0AC  F09C         	movff	??_BME280_compensatePressure+2,___lmul@multiplier+2
 17245  00235C  C0AD  F09D         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+3
 17246  002360  C0BF  F0AE         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure+4
 17247  002364  C0C0  F0AF         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+5
 17248  002368  C0C1  F0B0         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+6
 17249  00236C  C0C2  F0B1         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+7
 17250  002370  0E04               	movlw	4
 17251  002372  D005               	goto	u24920
 17252  002374                     u24925:
 17253  002374  90D8               	bcf	status,0,c
 17254  002376  33B1               	rrcf	(??_BME280_compensatePressure+7)& (0+255),f,b
 17255  002378  33B0               	rrcf	(??_BME280_compensatePressure+6)& (0+255),f,b
 17256  00237A  33AF               	rrcf	(??_BME280_compensatePressure+5)& (0+255),f,b
 17257  00237C  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17258  00237E                     u24920:
 17259  00237E  2EE8               	decfsz	wreg,f,c
 17260  002380  D7F9               	goto	u24925
 17261  002382  C0AE  F09E         	movff	??_BME280_compensatePressure+4,___lmul@multiplicand
 17262  002386  C0AF  F09F         	movff	??_BME280_compensatePressure+5,___lmul@multiplicand+1
 17263  00238A  C0B0  F0A0         	movff	??_BME280_compensatePressure+6,___lmul@multiplicand+2
 17264  00238E  C0B1  F0A1         	movff	??_BME280_compensatePressure+7,___lmul@multiplicand+3
 17265  002392  EC1B  F057         	call	___lmul	;wreg free
 17266  002396  0E0E               	movlw	14
 17267  002398  D006               	goto	u24930
 17268  00239A                     u24935:
 17269  00239A  0100               	movlb	0	; () banked
 17270  00239C  90D8               	bcf	status,0,c
 17271  00239E  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17272  0023A0  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17273  0023A2  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17274  0023A4  339A               	rrcf	?___lmul& (0+255),f,b
 17275  0023A6                     u24930:
 17276  0023A6  2EE8               	decfsz	wreg,f,c
 17277  0023A8  D7F8               	goto	u24935
 17278  0023AA  C09A  F0B7         	movff	?___lmul,_BME280_compensatePressure$7025
 17279  0023AE  C09B  F0B8         	movff	?___lmul+1,_BME280_compensatePressure$7025+1
 17280  0023B2  C09C  F0B9         	movff	?___lmul+2,_BME280_compensatePressure$7025+2
 17281  0023B6  C09D  F0BA         	movff	?___lmul+3,_BME280_compensatePressure$7025+3
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;bme280.c: 366: }
 17285                           ;bme280.c: 368: pressV1 = (((long) calibParam.dig_P9) * ((long) (((p >> 3) * (p >> 3)) >
      +                          > 13))) >> 12;
 17286  0023BA  0E0C               	movlw	12
 17287  0023BC  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17288  0023BE  EE21  F081         	lfsr	2,_calibParam+22
 17289  0023C2  CFDE F09A          	movff	postinc2,___lmul@multiplier
 17290  0023C6  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 17291  0023CA  0E00               	movlw	0
 17292  0023CC  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17293  0023CE  0EFF               	movlw	-1
 17294  0023D0  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 17295  0023D2  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 17296  0023D4  C0B7  F09E         	movff	_BME280_compensatePressure$7025,___lmul@multiplicand
 17297  0023D8  C0B8  F09F         	movff	_BME280_compensatePressure$7025+1,___lmul@multiplicand+1
 17298  0023DC  C0B9  F0A0         	movff	_BME280_compensatePressure$7025+2,___lmul@multiplicand+2
 17299  0023E0  C0BA  F0A1         	movff	_BME280_compensatePressure$7025+3,___lmul@multiplicand+3
 17300  0023E4  EC1B  F057         	call	___lmul	;wreg free
 17301  0023E8                     u24945:
 17302  0023E8  0100               	movlb	0	; () banked
 17303  0023EA  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17304  0023EC  D001               	goto	u24946
 17305  0023EE  D007               	goto	u24947
 17306  0023F0                     u24946:
 17307  0023F0  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17308  0023F2  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17309  0023F4  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17310  0023F6  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17311  0023F8  339A               	rrcf	?___lmul& (0+255),f,b
 17312  0023FA  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17313  0023FC  D7F5               	goto	u24945
 17314  0023FE                     u24947:
 17315  0023FE  C09A  F0C3         	movff	?___lmul,BME280_compensatePressure@pressV1
 17316  002402  C09B  F0C4         	movff	?___lmul+1,BME280_compensatePressure@pressV1+1
 17317  002406  C09C  F0C5         	movff	?___lmul+2,BME280_compensatePressure@pressV1+2
 17318  00240A  C09D  F0C6         	movff	?___lmul+3,BME280_compensatePressure@pressV1+3
 17319                           
 17320                           ;bme280.c: 369: pressV2 = (((long) (p >> 2)) * ((long) calibParam.dig_P8)) >> 13;
 17321  00240E  0E0D               	movlw	13
 17322  002410  0100               	movlb	0	; () banked
 17323  002412  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17324  002414  C0BF  F0AB         	movff	BME280_compensatePressure@p,??_BME280_compensatePressure+1
 17325  002418  C0C0  F0AC         	movff	BME280_compensatePressure@p+1,??_BME280_compensatePressure+2
 17326  00241C  C0C1  F0AD         	movff	BME280_compensatePressure@p+2,??_BME280_compensatePressure+3
 17327  002420  C0C2  F0AE         	movff	BME280_compensatePressure@p+3,??_BME280_compensatePressure+4
 17328  002424  0E03               	movlw	3
 17329  002426  D005               	goto	u24950
 17330  002428                     u24955:
 17331  002428  90D8               	bcf	status,0,c
 17332  00242A  33AE               	rrcf	(??_BME280_compensatePressure+4)& (0+255),f,b
 17333  00242C  33AD               	rrcf	(??_BME280_compensatePressure+3)& (0+255),f,b
 17334  00242E  33AC               	rrcf	(??_BME280_compensatePressure+2)& (0+255),f,b
 17335  002430  33AB               	rrcf	(??_BME280_compensatePressure+1)& (0+255),f,b
 17336  002432                     u24950:
 17337  002432  2EE8               	decfsz	wreg,f,c
 17338  002434  D7F9               	goto	u24955
 17339  002436  C0AB  F09A         	movff	??_BME280_compensatePressure+1,___lmul@multiplier
 17340  00243A  C0AC  F09B         	movff	??_BME280_compensatePressure+2,___lmul@multiplier+1
 17341  00243E  C0AD  F09C         	movff	??_BME280_compensatePressure+3,___lmul@multiplier+2
 17342  002442  C0AE  F09D         	movff	??_BME280_compensatePressure+4,___lmul@multiplier+3
 17343  002446  EE21  F07F         	lfsr	2,_calibParam+20
 17344  00244A  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 17345  00244E  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 17346  002452  0E00               	movlw	0
 17347  002454  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17348  002456  0EFF               	movlw	-1
 17349  002458  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17350  00245A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17351  00245C  EC1B  F057         	call	___lmul	;wreg free
 17352  002460                     u24965:
 17353  002460  0100               	movlb	0	; () banked
 17354  002462  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17355  002464  D001               	goto	u24966
 17356  002466  D007               	goto	u24967
 17357  002468                     u24966:
 17358  002468  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 17359  00246A  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 17360  00246C  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 17361  00246E  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 17362  002470  339A               	rrcf	?___lmul& (0+255),f,b
 17363  002472  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17364  002474  D7F5               	goto	u24965
 17365  002476                     u24967:
 17366  002476  C09A  F0BB         	movff	?___lmul,BME280_compensatePressure@pressV2
 17367  00247A  C09B  F0BC         	movff	?___lmul+1,BME280_compensatePressure@pressV2+1
 17368  00247E  C09C  F0BD         	movff	?___lmul+2,BME280_compensatePressure@pressV2+2
 17369  002482  C09D  F0BE         	movff	?___lmul+3,BME280_compensatePressure@pressV2+3
 17370                           
 17371                           ;bme280.c: 370: p = (uint32_t) ((long) p + ((pressV1 + pressV2 + calibParam.dig_P7) >> 4
      +                          ));
 17372  002486  0E04               	movlw	4
 17373  002488  0100               	movlb	0	; () banked
 17374  00248A  6FAA               	movwf	??_BME280_compensatePressure& (0+255),b
 17375  00248C  C17D  F0AB         	movff	_calibParam+18,??_BME280_compensatePressure+1
 17376  002490  C17E  F0AC         	movff	_calibParam+19,??_BME280_compensatePressure+2
 17377  002494  0E00               	movlw	0
 17378  002496  BFAC               	btfsc	(??_BME280_compensatePressure+2)& (0+255),7,b
 17379  002498  0EFF               	movlw	255
 17380  00249A  6FAD               	movwf	(??_BME280_compensatePressure+3)& (0+255),b
 17381  00249C  6FAE               	movwf	(??_BME280_compensatePressure+4)& (0+255),b
 17382  00249E  51C3               	movf	BME280_compensatePressure@pressV1& (0+255),w,b
 17383  0024A0  25AB               	addwf	(??_BME280_compensatePressure+1)& (0+255),w,b
 17384  0024A2  6FAF               	movwf	(??_BME280_compensatePressure+5)& (0+255),b
 17385  0024A4  51C4               	movf	(BME280_compensatePressure@pressV1+1)& (0+255),w,b
 17386  0024A6  21AC               	addwfc	(??_BME280_compensatePressure+2)& (0+255),w,b
 17387  0024A8  6FB0               	movwf	(??_BME280_compensatePressure+6)& (0+255),b
 17388  0024AA  51C5               	movf	(BME280_compensatePressure@pressV1+2)& (0+255),w,b
 17389  0024AC  21AD               	addwfc	(??_BME280_compensatePressure+3)& (0+255),w,b
 17390  0024AE  6FB1               	movwf	(??_BME280_compensatePressure+7)& (0+255),b
 17391  0024B0  51C6               	movf	(BME280_compensatePressure@pressV1+3)& (0+255),w,b
 17392  0024B2  21AE               	addwfc	(??_BME280_compensatePressure+4)& (0+255),w,b
 17393  0024B4  6FB2               	movwf	(??_BME280_compensatePressure+8)& (0+255),b
 17394  0024B6  51BB               	movf	BME280_compensatePressure@pressV2& (0+255),w,b
 17395  0024B8  25AF               	addwf	(??_BME280_compensatePressure+5)& (0+255),w,b
 17396  0024BA  6FB3               	movwf	(??_BME280_compensatePressure+9)& (0+255),b
 17397  0024BC  51BC               	movf	(BME280_compensatePressure@pressV2+1)& (0+255),w,b
 17398  0024BE  21B0               	addwfc	(??_BME280_compensatePressure+6)& (0+255),w,b
 17399  0024C0  6FB4               	movwf	(??_BME280_compensatePressure+10)& (0+255),b
 17400  0024C2  51BD               	movf	(BME280_compensatePressure@pressV2+2)& (0+255),w,b
 17401  0024C4  21B1               	addwfc	(??_BME280_compensatePressure+7)& (0+255),w,b
 17402  0024C6  6FB5               	movwf	(??_BME280_compensatePressure+11)& (0+255),b
 17403  0024C8  51BE               	movf	(BME280_compensatePressure@pressV2+3)& (0+255),w,b
 17404  0024CA  21B2               	addwfc	(??_BME280_compensatePressure+8)& (0+255),w,b
 17405  0024CC  6FB6               	movwf	(??_BME280_compensatePressure+12)& (0+255),b
 17406  0024CE                     u24975:
 17407  0024CE  67AA               	tstfsz	??_BME280_compensatePressure& (0+255),b
 17408  0024D0  D001               	goto	u24976
 17409  0024D2  D007               	goto	u24977
 17410  0024D4                     u24976:
 17411  0024D4  35B6               	rlcf	(??_BME280_compensatePressure+12)& (0+255),w,b
 17412  0024D6  33B6               	rrcf	(??_BME280_compensatePressure+12)& (0+255),f,b
 17413  0024D8  33B5               	rrcf	(??_BME280_compensatePressure+11)& (0+255),f,b
 17414  0024DA  33B4               	rrcf	(??_BME280_compensatePressure+10)& (0+255),f,b
 17415  0024DC  33B3               	rrcf	(??_BME280_compensatePressure+9)& (0+255),f,b
 17416  0024DE  2FAA               	decfsz	??_BME280_compensatePressure& (0+255),f,b
 17417  0024E0  D7F6               	goto	u24975
 17418  0024E2                     u24977:
 17419  0024E2  0100               	movlb	0	; () banked
 17420  0024E4  51BF               	movf	BME280_compensatePressure@p& (0+255),w,b
 17421  0024E6  25B3               	addwf	(??_BME280_compensatePressure+9)& (0+255),w,b
 17422  0024E8  6FBF               	movwf	BME280_compensatePressure@p& (0+255),b
 17423  0024EA  51C0               	movf	(BME280_compensatePressure@p+1)& (0+255),w,b
 17424  0024EC  21B4               	addwfc	(??_BME280_compensatePressure+10)& (0+255),w,b
 17425  0024EE  6FC0               	movwf	(BME280_compensatePressure@p+1)& (0+255),b
 17426  0024F0  51C1               	movf	(BME280_compensatePressure@p+2)& (0+255),w,b
 17427  0024F2  21B5               	addwfc	(??_BME280_compensatePressure+11)& (0+255),w,b
 17428  0024F4  6FC1               	movwf	(BME280_compensatePressure@p+2)& (0+255),b
 17429  0024F6  51C2               	movf	(BME280_compensatePressure@p+3)& (0+255),w,b
 17430  0024F8  21B6               	addwfc	(??_BME280_compensatePressure+12)& (0+255),w,b
 17431  0024FA  6FC2               	movwf	(BME280_compensatePressure@p+3)& (0+255),b
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;bme280.c: 372: return p;
 17435  0024FC  C0BF  F0A6         	movff	BME280_compensatePressure@p,?_BME280_compensatePressure
 17436  002500  C0C0  F0A7         	movff	BME280_compensatePressure@p+1,?_BME280_compensatePressure+1
 17437  002504  C0C1  F0A8         	movff	BME280_compensatePressure@p+2,?_BME280_compensatePressure+2
 17438  002508  C0C2  F0A9         	movff	BME280_compensatePressure@p+3,?_BME280_compensatePressure+3
 17439  00250C  0012               	return	
 17440  00250E                     __end_of_BME280_compensatePressure:
 17441                           	opt stack 0
 17442                           tosu	equ	0xFFF
 17443                           tosh	equ	0xFFE
 17444                           tosl	equ	0xFFD
 17445                           pclath	equ	0xFFA
 17446                           tblptru	equ	0xFF8
 17447                           tblptrh	equ	0xFF7
 17448                           tblptrl	equ	0xFF6
 17449                           tablat	equ	0xFF5
 17450                           prodh	equ	0xFF4
 17451                           prodl	equ	0xFF3
 17452                           intcon	equ	0xFF2
 17453                           postinc0	equ	0xFEE
 17454                           wreg	equ	0xFE8
 17455                           indf2	equ	0xFDF
 17456                           postinc2	equ	0xFDE
 17457                           postdec2	equ	0xFDD
 17458                           fsr2h	equ	0xFDA
 17459                           fsr2l	equ	0xFD9
 17460                           status	equ	0xFD8
 17461                           
 17462 ;; *************** function _Weather_getHumidityRH *****************
 17463 ;; Defined at:
 17464 ;;		line 106 in file "mcc_generated_files/weather.c"
 17465 ;; Parameters:    Size  Location     Type
 17466 ;;		None
 17467 ;; Auto vars:     Size  Location     Type
 17468 ;;		None
 17469 ;; Return value:  Size  Location     Type
 17470 ;;                  3    0[BANK1 ] float 
 17471 ;; Registers used:
 17472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17473 ;; Tracked objects:
 17474 ;;		On entry : 0/0
 17475 ;;		On exit  : 0/0
 17476 ;;		Unchanged: 0/0
 17477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17478 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17481 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17482 ;;Total ram usage:        3 bytes
 17483 ;; Hardware stack levels used:    1
 17484 ;; Hardware stack levels required when called:   10
 17485 ;; This function calls:
 17486 ;;		_BME280_getHumidity
 17487 ;; This function is called by:
 17488 ;;		_main
 17489 ;; This function uses a non-reentrant model
 17490 ;;
 17491                           
 17492                           	psect	text98
 17493  00C394                     __ptext98:
 17494                           	opt stack 0
 17495  00C394                     _Weather_getHumidityRH:
 17496                           	opt stack 20
 17497                           
 17498                           ;weather.c: 108: return BME280_getHumidity();
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;incstack = 0
 17502  00C394  ECE6  F058         	call	_BME280_getHumidity	;wreg free
 17503  00C398  C0F3  F18C         	movff	?_BME280_getHumidity,?_Weather_getHumidityRH
 17504  00C39C  C0F4  F18D         	movff	?_BME280_getHumidity+1,?_Weather_getHumidityRH+1
 17505  00C3A0  C0F5  F18E         	movff	?_BME280_getHumidity+2,?_Weather_getHumidityRH+2
 17506  00C3A4  0012               	return	
 17507  00C3A6                     __end_of_Weather_getHumidityRH:
 17508                           	opt stack 0
 17509                           tosu	equ	0xFFF
 17510                           tosh	equ	0xFFE
 17511                           tosl	equ	0xFFD
 17512                           pclath	equ	0xFFA
 17513                           tblptru	equ	0xFF8
 17514                           tblptrh	equ	0xFF7
 17515                           tblptrl	equ	0xFF6
 17516                           tablat	equ	0xFF5
 17517                           prodh	equ	0xFF4
 17518                           prodl	equ	0xFF3
 17519                           intcon	equ	0xFF2
 17520                           postinc0	equ	0xFEE
 17521                           wreg	equ	0xFE8
 17522                           indf2	equ	0xFDF
 17523                           postinc2	equ	0xFDE
 17524                           postdec2	equ	0xFDD
 17525                           fsr2h	equ	0xFDA
 17526                           fsr2l	equ	0xFD9
 17527                           status	equ	0xFD8
 17528                           
 17529 ;; *************** function _BME280_getHumidity *****************
 17530 ;; Defined at:
 17531 ;;		line 307 in file "mcc_generated_files/bme280.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;  humidity        3  150[BANK0 ] float 
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  3  147[BANK0 ] float 
 17538 ;; Registers used:
 17539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17545 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17549 ;;Total ram usage:        6 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; Hardware stack levels required when called:    9
 17552 ;; This function calls:
 17553 ;;		_BME280_compensateHumidity
 17554 ;;		___ftdiv
 17555 ;;		___lltoft
 17556 ;; This function is called by:
 17557 ;;		_Weather_getHumidityRH
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text99
 17562  00B1CC                     __ptext99:
 17563                           	opt stack 0
 17564  00B1CC                     _BME280_getHumidity:
 17565                           	opt stack 20
 17566                           
 17567                           ;bme280.c: 309: float humidity = (float) BME280_compensateHumidity() / 1024;
 17568                           
 17569                           ;incstack = 0
 17570  00B1CC  EC78  F019         	call	_BME280_compensateHumidity	;wreg free
 17571  00B1D0  C0A6  F0DB         	movff	?_BME280_compensateHumidity,___lltoft@c
 17572  00B1D4  C0A7  F0DC         	movff	?_BME280_compensateHumidity+1,___lltoft@c+1
 17573  00B1D8  C0A8  F0DD         	movff	?_BME280_compensateHumidity+2,___lltoft@c+2
 17574  00B1DC  C0A9  F0DE         	movff	?_BME280_compensateHumidity+3,___lltoft@c+3
 17575  00B1E0  ECD9  F055         	call	___lltoft	;wreg free
 17576  00B1E4  C0DB  F0E4         	movff	?___lltoft,___ftdiv@f1
 17577  00B1E8  C0DC  F0E5         	movff	?___lltoft+1,___ftdiv@f1+1
 17578  00B1EC  C0DD  F0E6         	movff	?___lltoft+2,___ftdiv@f1+2
 17579  00B1F0  0E00               	movlw	0
 17580  00B1F2  0100               	movlb	0	; () banked
 17581  00B1F4  6FE7               	movwf	___ftdiv@f2& (0+255),b
 17582  00B1F6  0E80               	movlw	128
 17583  00B1F8  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
 17584  00B1FA  0E44               	movlw	68
 17585  00B1FC  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
 17586  00B1FE  EC39  F047         	call	___ftdiv	;wreg free
 17587  00B202  C0E4  F0F6         	movff	?___ftdiv,BME280_getHumidity@humidity
 17588  00B206  C0E5  F0F7         	movff	?___ftdiv+1,BME280_getHumidity@humidity+1
 17589  00B20A  C0E6  F0F8         	movff	?___ftdiv+2,BME280_getHumidity@humidity+2
 17590                           
 17591                           ;bme280.c: 310: return humidity;
 17592  00B20E  C0F6  F0F3         	movff	BME280_getHumidity@humidity,?_BME280_getHumidity
 17593  00B212  C0F7  F0F4         	movff	BME280_getHumidity@humidity+1,?_BME280_getHumidity+1
 17594  00B216  C0F8  F0F5         	movff	BME280_getHumidity@humidity+2,?_BME280_getHumidity+2
 17595  00B21A  0012               	return	
 17596  00B21C                     __end_of_BME280_getHumidity:
 17597                           	opt stack 0
 17598                           tosu	equ	0xFFF
 17599                           tosh	equ	0xFFE
 17600                           tosl	equ	0xFFD
 17601                           pclath	equ	0xFFA
 17602                           tblptru	equ	0xFF8
 17603                           tblptrh	equ	0xFF7
 17604                           tblptrl	equ	0xFF6
 17605                           tablat	equ	0xFF5
 17606                           prodh	equ	0xFF4
 17607                           prodl	equ	0xFF3
 17608                           intcon	equ	0xFF2
 17609                           postinc0	equ	0xFEE
 17610                           wreg	equ	0xFE8
 17611                           indf2	equ	0xFDF
 17612                           postinc2	equ	0xFDE
 17613                           postdec2	equ	0xFDD
 17614                           fsr2h	equ	0xFDA
 17615                           fsr2l	equ	0xFD9
 17616                           status	equ	0xFD8
 17617                           
 17618 ;; *************** function ___lltoft *****************
 17619 ;; Defined at:
 17620 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 17621 ;; Parameters:    Size  Location     Type
 17622 ;;  c               4  123[BANK0 ] unsigned long 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;  exp             1  131[BANK0 ] unsigned char 
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  3  123[BANK0 ] float 
 17627 ;; Registers used:
 17628 ;;		wreg, status,2, status,0, cstack
 17629 ;; Tracked objects:
 17630 ;;		On entry : 0/0
 17631 ;;		On exit  : 0/0
 17632 ;;		Unchanged: 0/0
 17633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;Total ram usage:        9 bytes
 17639 ;; Hardware stack levels used:    1
 17640 ;; Hardware stack levels required when called:    8
 17641 ;; This function calls:
 17642 ;;		___ftpack
 17643 ;; This function is called by:
 17644 ;;		_BME280_getPressure
 17645 ;;		_BME280_getHumidity
 17646 ;;		_printf
 17647 ;; This function uses a non-reentrant model
 17648 ;;
 17649                           
 17650                           	psect	text100
 17651  00ABB2                     __ptext100:
 17652                           	opt stack 0
 17653  00ABB2                     ___lltoft:
 17654                           	opt stack 21
 17655                           
 17656                           ;incstack = 0
 17657  00ABB2  0E8E               	movlw	142
 17658  00ABB4  0100               	movlb	0	; () banked
 17659  00ABB6  6FE3               	movwf	___lltoft@exp& (0+255),b
 17660  00ABB8  D006               	goto	l3956
 17661  00ABBA                     
 17662                           ; BSR set to: 0
 17663                           
 17664                           ; BSR set to: 0
 17665  00ABBA  90D8               	bcf	status,0,c
 17666  00ABBC  33DE               	rrcf	(___lltoft@c+3)& (0+255),f,b
 17667  00ABBE  33DD               	rrcf	(___lltoft@c+2)& (0+255),f,b
 17668  00ABC0  33DC               	rrcf	(___lltoft@c+1)& (0+255),f,b
 17669  00ABC2  33DB               	rrcf	___lltoft@c& (0+255),f,b
 17670  00ABC4  2BE3               	incf	___lltoft@exp& (0+255),f,b
 17671  00ABC6                     l3956:
 17672                           
 17673                           ; BSR set to: 0
 17674                           
 17675                           ; BSR set to: 0
 17676  00ABC6  0E00               	movlw	0
 17677  00ABC8  15DB               	andwf	___lltoft@c& (0+255),w,b
 17678  00ABCA  6FDF               	movwf	??___lltoft& (0+255),b
 17679  00ABCC  0E00               	movlw	0
 17680  00ABCE  15DC               	andwf	(___lltoft@c+1)& (0+255),w,b
 17681  00ABD0  6FE0               	movwf	(??___lltoft+1)& (0+255),b
 17682  00ABD2  0E00               	movlw	0
 17683  00ABD4  15DD               	andwf	(___lltoft@c+2)& (0+255),w,b
 17684  00ABD6  6FE1               	movwf	(??___lltoft+2)& (0+255),b
 17685  00ABD8  0EFF               	movlw	255
 17686  00ABDA  15DE               	andwf	(___lltoft@c+3)& (0+255),w,b
 17687  00ABDC  6FE2               	movwf	(??___lltoft+3)& (0+255),b
 17688  00ABDE  51DF               	movf	??___lltoft& (0+255),w,b
 17689  00ABE0  11E0               	iorwf	(??___lltoft+1)& (0+255),w,b
 17690  00ABE2  11E1               	iorwf	(??___lltoft+2)& (0+255),w,b
 17691  00ABE4  11E2               	iorwf	(??___lltoft+3)& (0+255),w,b
 17692  00ABE6  A4D8               	btfss	status,2,c
 17693  00ABE8  D7E8               	goto	l3957
 17694                           
 17695                           ; BSR set to: 0
 17696                           
 17697                           ; BSR set to: 0
 17698  00ABEA  C0DB  F060         	movff	___lltoft@c,___ftpack@arg
 17699  00ABEE  C0DC  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 17700  00ABF2  C0DD  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 17701  00ABF6  C0E3  F063         	movff	___lltoft@exp,___ftpack@exp
 17702  00ABFA  0E00               	movlw	0
 17703  00ABFC  6F64               	movwf	___ftpack@sign& (0+255),b
 17704  00ABFE  EC60  F04B         	call	___ftpack	;wreg free
 17705  00AC02  C060  F0DB         	movff	?___ftpack,?___lltoft
 17706  00AC06  C061  F0DC         	movff	?___ftpack+1,?___lltoft+1
 17707  00AC0A  C062  F0DD         	movff	?___ftpack+2,?___lltoft+2
 17708  00AC0E  0012               	return	
 17709  00AC10                     __end_of___lltoft:
 17710                           	opt stack 0
 17711                           tosu	equ	0xFFF
 17712                           tosh	equ	0xFFE
 17713                           tosl	equ	0xFFD
 17714                           pclath	equ	0xFFA
 17715                           tblptru	equ	0xFF8
 17716                           tblptrh	equ	0xFF7
 17717                           tblptrl	equ	0xFF6
 17718                           tablat	equ	0xFF5
 17719                           prodh	equ	0xFF4
 17720                           prodl	equ	0xFF3
 17721                           intcon	equ	0xFF2
 17722                           postinc0	equ	0xFEE
 17723                           wreg	equ	0xFE8
 17724                           indf2	equ	0xFDF
 17725                           postinc2	equ	0xFDE
 17726                           postdec2	equ	0xFDD
 17727                           fsr2h	equ	0xFDA
 17728                           fsr2l	equ	0xFD9
 17729                           status	equ	0xFD8
 17730                           
 17731 ;; *************** function ___ftdiv *****************
 17732 ;; Defined at:
 17733 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 17734 ;; Parameters:    Size  Location     Type
 17735 ;;  f1              3  132[BANK0 ] float 
 17736 ;;  f2              3  135[BANK0 ] float 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;  f3              3  142[BANK0 ] float 
 17739 ;;  sign            1  146[BANK0 ] unsigned char 
 17740 ;;  exp             1  145[BANK0 ] unsigned char 
 17741 ;;  cntr            1  141[BANK0 ] unsigned char 
 17742 ;; Return value:  Size  Location     Type
 17743 ;;                  3  132[BANK0 ] float 
 17744 ;; Registers used:
 17745 ;;		wreg, status,2, status,0, cstack
 17746 ;; Tracked objects:
 17747 ;;		On entry : 0/0
 17748 ;;		On exit  : 0/0
 17749 ;;		Unchanged: 0/0
 17750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17751 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17752 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17753 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17754 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17755 ;;Total ram usage:       15 bytes
 17756 ;; Hardware stack levels used:    1
 17757 ;; Hardware stack levels required when called:    8
 17758 ;; This function calls:
 17759 ;;		___ftpack
 17760 ;; This function is called by:
 17761 ;;		_BME280_getTemperature
 17762 ;;		_BME280_getPressure
 17763 ;;		_BME280_getHumidity
 17764 ;; This function uses a non-reentrant model
 17765 ;;
 17766                           
 17767                           	psect	text101
 17768  008E72                     __ptext101:
 17769                           	opt stack 0
 17770  008E72                     ___ftdiv:
 17771                           	opt stack 20
 17772                           
 17773                           ;incstack = 0
 17774  008E72  C0E6  F0EA         	movff	___ftdiv@f1+2,??___ftdiv
 17775  008E76  0100               	movlb	0	; () banked
 17776  008E78  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
 17777  008E7A  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
 17778  008E7C  35E5               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17779  008E7E  37EA               	rlcf	??___ftdiv& (0+255),f,b
 17780  008E80  E301               	bnc	u16321
 17781  008E82  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
 17782  008E84                     u16321:
 17783  008E84  51EA               	movf	??___ftdiv& (0+255),w,b
 17784  008E86  6FF1               	movwf	___ftdiv@exp& (0+255),b
 17785  008E88  51F1               	movf	___ftdiv@exp& (0+255),w,b
 17786  008E8A  A4D8               	btfss	status,2,c
 17787  008E8C  D007               	goto	l3841
 17788                           
 17789                           ; BSR set to: 0
 17790  008E8E  0E00               	movlw	0
 17791  008E90  6FE4               	movwf	?___ftdiv& (0+255),b
 17792  008E92  0E00               	movlw	0
 17793  008E94  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
 17794  008E96  0E00               	movlw	0
 17795  008E98  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
 17796                           
 17797                           ; BSR set to: 0
 17798  008E9A  0012               	return	
 17799  008E9C                     l3841:
 17800                           
 17801                           ; BSR set to: 0
 17802                           
 17803                           ; BSR set to: 0
 17804  008E9C  C0E9  F0EA         	movff	___ftdiv@f2+2,??___ftdiv
 17805  008EA0  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
 17806  008EA2  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
 17807  008EA4  35E8               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17808  008EA6  37EA               	rlcf	??___ftdiv& (0+255),f,b
 17809  008EA8  E301               	bnc	u16341
 17810  008EAA  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
 17811  008EAC                     u16341:
 17812  008EAC  51EA               	movf	??___ftdiv& (0+255),w,b
 17813  008EAE  6FF2               	movwf	___ftdiv@sign& (0+255),b
 17814  008EB0  51F2               	movf	___ftdiv@sign& (0+255),w,b
 17815  008EB2  A4D8               	btfss	status,2,c
 17816  008EB4  D007               	goto	l3843
 17817                           
 17818                           ; BSR set to: 0
 17819  008EB6  0E00               	movlw	0
 17820  008EB8  6FE4               	movwf	?___ftdiv& (0+255),b
 17821  008EBA  0E00               	movlw	0
 17822  008EBC  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
 17823  008EBE  0E00               	movlw	0
 17824  008EC0  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
 17825                           
 17826                           ; BSR set to: 0
 17827  008EC2  0012               	return	
 17828  008EC4                     l3843:
 17829                           
 17830                           ; BSR set to: 0
 17831                           
 17832                           ; BSR set to: 0
 17833  008EC4  0E00               	movlw	0
 17834  008EC6  6FEE               	movwf	___ftdiv@f3& (0+255),b
 17835  008EC8  0E00               	movlw	0
 17836  008ECA  6FEF               	movwf	(___ftdiv@f3+1)& (0+255),b
 17837  008ECC  0E00               	movlw	0
 17838  008ECE  6FF0               	movwf	(___ftdiv@f3+2)& (0+255),b
 17839                           
 17840                           ; BSR set to: 0
 17841  008ED0  51F2               	movf	___ftdiv@sign& (0+255),w,b
 17842  008ED2  0F89               	addlw	137
 17843  008ED4  5FF1               	subwf	___ftdiv@exp& (0+255),f,b
 17844                           
 17845                           ; BSR set to: 0
 17846  008ED6  C0E6  F0F2         	movff	___ftdiv@f1+2,___ftdiv@sign
 17847                           
 17848                           ; BSR set to: 0
 17849  008EDA  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17850  008EDC  1BF2               	xorwf	___ftdiv@sign& (0+255),f,b
 17851                           
 17852                           ; BSR set to: 0
 17853  008EDE  0E80               	movlw	128
 17854  008EE0  17F2               	andwf	___ftdiv@sign& (0+255),f,b
 17855                           
 17856                           ; BSR set to: 0
 17857  008EE2  8FE5               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17858                           
 17859                           ; BSR set to: 0
 17860  008EE4  0EFF               	movlw	255
 17861  008EE6  17E4               	andwf	___ftdiv@f1& (0+255),f,b
 17862  008EE8  0EFF               	movlw	255
 17863  008EEA  17E5               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17864  008EEC  0E00               	movlw	0
 17865  008EEE  17E6               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17866                           
 17867                           ; BSR set to: 0
 17868  008EF0  8FE8               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17869                           
 17870                           ; BSR set to: 0
 17871  008EF2  0EFF               	movlw	255
 17872  008EF4  17E7               	andwf	___ftdiv@f2& (0+255),f,b
 17873  008EF6  0EFF               	movlw	255
 17874  008EF8  17E8               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 17875  008EFA  0E00               	movlw	0
 17876  008EFC  17E9               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 17877                           
 17878                           ; BSR set to: 0
 17879  008EFE  0E18               	movlw	24
 17880  008F00  6FED               	movwf	___ftdiv@cntr& (0+255),b
 17881  008F02                     
 17882                           ; BSR set to: 0
 17883                           
 17884                           ; BSR set to: 0
 17885  008F02  90D8               	bcf	status,0,c
 17886  008F04  37EE               	rlcf	___ftdiv@f3& (0+255),f,b
 17887  008F06  37EF               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 17888  008F08  37F0               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 17889                           
 17890                           ; BSR set to: 0
 17891  008F0A  51E7               	movf	___ftdiv@f2& (0+255),w,b
 17892  008F0C  5DE4               	subwf	___ftdiv@f1& (0+255),w,b
 17893  008F0E  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17894  008F10  59E5               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 17895  008F12  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17896  008F14  59E6               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 17897  008F16  A0D8               	btfss	status,0,c
 17898  008F18  D007               	goto	l3845
 17899                           
 17900                           ; BSR set to: 0
 17901  008F1A  51E7               	movf	___ftdiv@f2& (0+255),w,b
 17902  008F1C  5FE4               	subwf	___ftdiv@f1& (0+255),f,b
 17903  008F1E  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17904  008F20  5BE5               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 17905  008F22  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17906  008F24  5BE6               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 0
 17909  008F26  81EE               	bsf	___ftdiv@f3& (0+255),0,b
 17910  008F28                     l3845:
 17911                           
 17912                           ; BSR set to: 0
 17913  008F28  90D8               	bcf	status,0,c
 17914  008F2A  37E4               	rlcf	___ftdiv@f1& (0+255),f,b
 17915  008F2C  37E5               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 17916  008F2E  37E6               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 17917                           
 17918                           ; BSR set to: 0
 17919  008F30  2FED               	decfsz	___ftdiv@cntr& (0+255),f,b
 17920  008F32  D7E7               	goto	l3844
 17921                           
 17922                           ; BSR set to: 0
 17923                           
 17924                           ; BSR set to: 0
 17925  008F34  C0EE  F060         	movff	___ftdiv@f3,___ftpack@arg
 17926  008F38  C0EF  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 17927  008F3C  C0F0  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 17928  008F40  C0F1  F063         	movff	___ftdiv@exp,___ftpack@exp
 17929  008F44  C0F2  F064         	movff	___ftdiv@sign,___ftpack@sign
 17930  008F48  EC60  F04B         	call	___ftpack	;wreg free
 17931  008F4C  C060  F0E4         	movff	?___ftpack,?___ftdiv
 17932  008F50  C061  F0E5         	movff	?___ftpack+1,?___ftdiv+1
 17933  008F54  C062  F0E6         	movff	?___ftpack+2,?___ftdiv+2
 17934  008F58  0012               	return	
 17935  008F5A                     __end_of___ftdiv:
 17936                           	opt stack 0
 17937                           tosu	equ	0xFFF
 17938                           tosh	equ	0xFFE
 17939                           tosl	equ	0xFFD
 17940                           pclath	equ	0xFFA
 17941                           tblptru	equ	0xFF8
 17942                           tblptrh	equ	0xFF7
 17943                           tblptrl	equ	0xFF6
 17944                           tablat	equ	0xFF5
 17945                           prodh	equ	0xFF4
 17946                           prodl	equ	0xFF3
 17947                           intcon	equ	0xFF2
 17948                           postinc0	equ	0xFEE
 17949                           wreg	equ	0xFE8
 17950                           indf2	equ	0xFDF
 17951                           postinc2	equ	0xFDE
 17952                           postdec2	equ	0xFDD
 17953                           fsr2h	equ	0xFDA
 17954                           fsr2l	equ	0xFD9
 17955                           status	equ	0xFD8
 17956                           
 17957 ;; *************** function ___ftpack *****************
 17958 ;; Defined at:
 17959 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;  arg             3    0[BANK0 ] unsigned um
 17962 ;;  exp             1    3[BANK0 ] unsigned char 
 17963 ;;  sign            1    4[BANK0 ] unsigned char 
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;		None
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  3    0[BANK0 ] float 
 17968 ;; Registers used:
 17969 ;;		wreg, status,2, status,0
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17975 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17977 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17978 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17979 ;;Total ram usage:        8 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:    7
 17982 ;; This function calls:
 17983 ;;		Nothing
 17984 ;; This function is called by:
 17985 ;;		___altoft
 17986 ;;		___ftadd
 17987 ;;		___ftdiv
 17988 ;;		___ftmul
 17989 ;;		___lltoft
 17990 ;;		___lwtoft
 17991 ;; This function uses a non-reentrant model
 17992 ;;
 17993                           
 17994                           	psect	text102
 17995  0096C0                     __ptext102:
 17996                           	opt stack 0
 17997  0096C0                     ___ftpack:
 17998                           	opt stack 20
 17999                           
 18000                           ;incstack = 0
 18001  0096C0  0100               	movlb	0	; () banked
 18002  0096C2  5163               	movf	___ftpack@exp& (0+255),w,b
 18003  0096C4  B4D8               	btfsc	status,2,c
 18004  0096C6  D005               	goto	u14700
 18005                           
 18006                           ; BSR set to: 0
 18007  0096C8  5160               	movf	___ftpack@arg& (0+255),w,b
 18008  0096CA  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 18009  0096CC  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 18010  0096CE  A4D8               	btfss	status,2,c
 18011  0096D0  D00C               	goto	l3777
 18012  0096D2                     u14700:
 18013                           
 18014                           ; BSR set to: 0
 18015                           
 18016                           ; BSR set to: 0
 18017  0096D2  0E00               	movlw	0
 18018  0096D4  6F60               	movwf	?___ftpack& (0+255),b
 18019  0096D6  0E00               	movlw	0
 18020  0096D8  6F61               	movwf	(?___ftpack+1)& (0+255),b
 18021  0096DA  0E00               	movlw	0
 18022  0096DC  6F62               	movwf	(?___ftpack+2)& (0+255),b
 18023                           
 18024                           ; BSR set to: 0
 18025  0096DE  0012               	return	
 18026  0096E0                     
 18027                           ; BSR set to: 0
 18028                           
 18029                           ; BSR set to: 0
 18030  0096E0  2B63               	incf	___ftpack@exp& (0+255),f,b
 18031  0096E2  90D8               	bcf	status,0,c
 18032  0096E4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18033  0096E6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18034  0096E8  3360               	rrcf	___ftpack@arg& (0+255),f,b
 18035  0096EA                     l3777:
 18036                           
 18037                           ; BSR set to: 0
 18038                           
 18039                           ; BSR set to: 0
 18040  0096EA  0E00               	movlw	0
 18041  0096EC  1560               	andwf	___ftpack@arg& (0+255),w,b
 18042  0096EE  6F65               	movwf	??___ftpack& (0+255),b
 18043  0096F0  0E00               	movlw	0
 18044  0096F2  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18045  0096F4  6F66               	movwf	(??___ftpack+1)& (0+255),b
 18046  0096F6  0EFE               	movlw	254
 18047  0096F8  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18048  0096FA  6F67               	movwf	(??___ftpack+2)& (0+255),b
 18049  0096FC  5165               	movf	??___ftpack& (0+255),w,b
 18050  0096FE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 18051  009700  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 18052  009702  B4D8               	btfsc	status,2,c
 18053  009704  D00C               	goto	l3780
 18054  009706  D7EC               	goto	l3778
 18055  009708                     
 18056                           ; BSR set to: 0
 18057                           
 18058                           ; BSR set to: 0
 18059  009708  2B63               	incf	___ftpack@exp& (0+255),f,b
 18060                           
 18061                           ; BSR set to: 0
 18062  00970A  0E01               	movlw	1
 18063  00970C  2760               	addwf	___ftpack@arg& (0+255),f,b
 18064  00970E  0E00               	movlw	0
 18065  009710  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 18066  009712  0E00               	movlw	0
 18067  009714  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 18068  009716  90D8               	bcf	status,0,c
 18069  009718  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18070  00971A  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18071  00971C  3360               	rrcf	___ftpack@arg& (0+255),f,b
 18072  00971E                     l3780:
 18073                           
 18074                           ; BSR set to: 0
 18075                           
 18076                           ; BSR set to: 0
 18077  00971E  0E00               	movlw	0
 18078  009720  1560               	andwf	___ftpack@arg& (0+255),w,b
 18079  009722  6F65               	movwf	??___ftpack& (0+255),b
 18080  009724  0E00               	movlw	0
 18081  009726  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18082  009728  6F66               	movwf	(??___ftpack+1)& (0+255),b
 18083  00972A  0EFF               	movlw	255
 18084  00972C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18085  00972E  6F67               	movwf	(??___ftpack+2)& (0+255),b
 18086  009730  5165               	movf	??___ftpack& (0+255),w,b
 18087  009732  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 18088  009734  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 18089  009736  B4D8               	btfsc	status,2,c
 18090  009738  D006               	goto	l3783
 18091  00973A  D7E6               	goto	l3781
 18092  00973C                     
 18093                           ; BSR set to: 0
 18094                           
 18095                           ; BSR set to: 0
 18096  00973C  0763               	decf	___ftpack@exp& (0+255),f,b
 18097  00973E  90D8               	bcf	status,0,c
 18098  009740  3760               	rlcf	___ftpack@arg& (0+255),f,b
 18099  009742  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 18100  009744  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 18101  009746                     l3783:
 18102                           
 18103                           ; BSR set to: 0
 18104                           
 18105                           ; BSR set to: 0
 18106  009746  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 18107  009748  D003               	goto	u14740
 18108                           
 18109                           ; BSR set to: 0
 18110  00974A  0E02               	movlw	2
 18111  00974C  6163               	cpfslt	___ftpack@exp& (0+255),b
 18112  00974E  D7F6               	goto	l3784
 18113  009750                     u14740:
 18114                           
 18115                           ; BSR set to: 0
 18116                           
 18117                           ; BSR set to: 0
 18118  009750  A163               	btfss	___ftpack@exp& (0+255),0,b
 18119                           
 18120                           ; BSR set to: 0
 18121  009752  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 18122                           
 18123                           ; BSR set to: 0
 18124                           
 18125                           ; BSR set to: 0
 18126  009754  90D8               	bcf	status,0,c
 18127  009756  3363               	rrcf	___ftpack@exp& (0+255),f,b
 18128  009758  5163               	movf	___ftpack@exp& (0+255),w,b
 18129  00975A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 18130                           
 18131                           ; BSR set to: 0
 18132  00975C  5164               	movf	___ftpack@sign& (0+255),w,b
 18133  00975E  A4D8               	btfss	status,2,c
 18134                           
 18135                           ; BSR set to: 0
 18136  009760  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 18137                           
 18138                           ; BSR set to: 0
 18139                           
 18140                           ; BSR set to: 0
 18141  009762  C060  F060         	movff	___ftpack@arg,?___ftpack
 18142  009766  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 18143  00976A  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 18144  00976E  0012               	return	
 18145  009770                     __end_of___ftpack:
 18146                           	opt stack 0
 18147                           tosu	equ	0xFFF
 18148                           tosh	equ	0xFFE
 18149                           tosl	equ	0xFFD
 18150                           pclath	equ	0xFFA
 18151                           tblptru	equ	0xFF8
 18152                           tblptrh	equ	0xFF7
 18153                           tblptrl	equ	0xFF6
 18154                           tablat	equ	0xFF5
 18155                           prodh	equ	0xFF4
 18156                           prodl	equ	0xFF3
 18157                           intcon	equ	0xFF2
 18158                           postinc0	equ	0xFEE
 18159                           wreg	equ	0xFE8
 18160                           indf2	equ	0xFDF
 18161                           postinc2	equ	0xFDE
 18162                           postdec2	equ	0xFDD
 18163                           fsr2h	equ	0xFDA
 18164                           fsr2l	equ	0xFD9
 18165                           status	equ	0xFD8
 18166                           
 18167 ;; *************** function _BME280_compensateHumidity *****************
 18168 ;; Defined at:
 18169 ;;		line 380 in file "mcc_generated_files/bme280.c"
 18170 ;; Parameters:    Size  Location     Type
 18171 ;;		None
 18172 ;; Auto vars:     Size  Location     Type
 18173 ;;  humV            4  119[BANK0 ] long 
 18174 ;;  h               4   95[BANK0 ] unsigned long 
 18175 ;; Return value:  Size  Location     Type
 18176 ;;                  4   70[BANK0 ] unsigned long 
 18177 ;; Registers used:
 18178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18179 ;; Tracked objects:
 18180 ;;		On entry : 0/0
 18181 ;;		On exit  : 0/0
 18182 ;;		Unchanged: 0/0
 18183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18185 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18186 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18187 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18188 ;;Total ram usage:       53 bytes
 18189 ;; Hardware stack levels used:    1
 18190 ;; Hardware stack levels required when called:    8
 18191 ;; This function calls:
 18192 ;;		___lmul
 18193 ;; This function is called by:
 18194 ;;		_BME280_getHumidity
 18195 ;; This function uses a non-reentrant model
 18196 ;;
 18197                           
 18198                           	psect	text103
 18199  0032F0                     __ptext103:
 18200                           	opt stack 0
 18201  0032F0                     _BME280_compensateHumidity:
 18202                           	opt stack 20
 18203                           
 18204                           ;bme280.c: 382: long humV;
 18205                           ;bme280.c: 383: uint32_t h;
 18206                           ;bme280.c: 385: humV = (t_fine - ((long) 76800));
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;incstack = 0
 18210  0032F0  0E00               	movlw	0
 18211  0032F2  0101               	movlb	1	; () banked
 18212  0032F4  2500               	addwf	_t_fine& (0+255),w,b
 18213  0032F6  0100               	movlb	0	; () banked
 18214  0032F8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18215  0032FA  0ED4               	movlw	212
 18216  0032FC  0101               	movlb	1	; () banked
 18217  0032FE  2101               	addwfc	(_t_fine+1)& (0+255),w,b
 18218  003300  0100               	movlb	0	; () banked
 18219  003302  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18220  003304  0EFE               	movlw	254
 18221  003306  0101               	movlb	1	; () banked
 18222  003308  2102               	addwfc	(_t_fine+2)& (0+255),w,b
 18223  00330A  0100               	movlb	0	; () banked
 18224  00330C  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18225  00330E  0EFF               	movlw	255
 18226  003310  0101               	movlb	1	; () banked
 18227  003312  2103               	addwfc	(_t_fine+3)& (0+255),w,b
 18228  003314  0100               	movlb	0	; () banked
 18229  003316  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18230                           
 18231                           ; BSR set to: 0
 18232                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18233                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18234                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18235                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18236  003318  0E0B               	movlw	11
 18237  00331A  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18238  00331C  0101               	movlb	1	; () banked
 18239  00331E  5186               	movf	(_calibParam+27)& (0+255),w,b
 18240  003320  0100               	movlb	0	; () banked
 18241  003322  6F9A               	movwf	___lmul@multiplier& (0+255),b
 18242  003324  6B9B               	clrf	(___lmul@multiplier+1)& (0+255),b
 18243  003326  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 18244  003328  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 18245  00332A  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18246  00332E  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18247  003332  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18248  003336  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18249  00333A  EC1B  F057         	call	___lmul	;wreg free
 18250  00333E                     u24985:
 18251  00333E  0100               	movlb	0	; () banked
 18252  003340  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18253  003342  D001               	goto	u24986
 18254  003344  D007               	goto	u24987
 18255  003346                     u24986:
 18256  003346  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18257  003348  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18258  00334A  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18259  00334C  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18260  00334E  339A               	rrcf	?___lmul& (0+255),f,b
 18261  003350  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18262  003352  D7F5               	goto	u24985
 18263  003354                     u24987:
 18264  003354  0E00               	movlw	0
 18265  003356  0100               	movlb	0	; () banked
 18266  003358  259A               	addwf	?___lmul& (0+255),w,b
 18267  00335A  6FD3               	movwf	_BME280_compensateHumidity$7026& (0+255),b
 18268  00335C  0E80               	movlw	128
 18269  00335E  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18270  003360  6FD4               	movwf	(_BME280_compensateHumidity$7026+1)& (0+255),b
 18271  003362  0E00               	movlw	0
 18272  003364  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18273  003366  6FD5               	movwf	(_BME280_compensateHumidity$7026+2)& (0+255),b
 18274  003368  0E00               	movlw	0
 18275  00336A  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18276  00336C  6FD6               	movwf	(_BME280_compensateHumidity$7026+3)& (0+255),b
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18280                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18281                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18282                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18283  00336E  0E0A               	movlw	10
 18284  003370  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18285  003372  0101               	movlb	1	; () banked
 18286  003374  518B               	movf	(_calibParam+32)& (0+255),w,b
 18287  003376  0100               	movlb	0	; () banked
 18288  003378  6F9A               	movwf	___lmul@multiplier& (0+255),b
 18289  00337A  0E00               	movlw	0
 18290  00337C  BF9A               	btfsc	___lmul@multiplier& (0+255),7,b
 18291  00337E  0EFF               	movlw	-1
 18292  003380  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 18293  003382  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 18294  003384  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 18295  003386  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18296  00338A  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18297  00338E  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18298  003392  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18299  003396  EC1B  F057         	call	___lmul	;wreg free
 18300  00339A                     u24995:
 18301  00339A  0100               	movlb	0	; () banked
 18302  00339C  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18303  00339E  D001               	goto	u24996
 18304  0033A0  D007               	goto	u24997
 18305  0033A2                     u24996:
 18306  0033A2  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18307  0033A4  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18308  0033A6  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18309  0033A8  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18310  0033AA  339A               	rrcf	?___lmul& (0+255),f,b
 18311  0033AC  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18312  0033AE  D7F5               	goto	u24995
 18313  0033B0                     u24997:
 18314  0033B0  C09A  F0C3         	movff	?___lmul,_BME280_compensateHumidity$7027
 18315  0033B4  C09B  F0C4         	movff	?___lmul+1,_BME280_compensateHumidity$7027+1
 18316  0033B8  C09C  F0C5         	movff	?___lmul+2,_BME280_compensateHumidity$7027+2
 18317  0033BC  C09D  F0C6         	movff	?___lmul+3,_BME280_compensateHumidity$7027+3
 18318                           
 18319                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18320                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18321                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18322                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18323  0033C0  0E0A               	movlw	10
 18324  0033C2  0100               	movlb	0	; () banked
 18325  0033C4  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18326  0033C6  C0D3  F09A         	movff	_BME280_compensateHumidity$7026,___lmul@multiplier
 18327  0033CA  C0D4  F09B         	movff	_BME280_compensateHumidity$7026+1,___lmul@multiplier+1
 18328  0033CE  C0D5  F09C         	movff	_BME280_compensateHumidity$7026+2,___lmul@multiplier+2
 18329  0033D2  C0D6  F09D         	movff	_BME280_compensateHumidity$7026+3,___lmul@multiplier+3
 18330  0033D6  C0C3  F09E         	movff	_BME280_compensateHumidity$7027,___lmul@multiplicand
 18331  0033DA  C0C4  F09F         	movff	_BME280_compensateHumidity$7027+1,___lmul@multiplicand+1
 18332  0033DE  C0C5  F0A0         	movff	_BME280_compensateHumidity$7027+2,___lmul@multiplicand+2
 18333  0033E2  C0C6  F0A1         	movff	_BME280_compensateHumidity$7027+3,___lmul@multiplicand+3
 18334  0033E6  EC1B  F057         	call	___lmul	;wreg free
 18335  0033EA                     u25005:
 18336  0033EA  0100               	movlb	0	; () banked
 18337  0033EC  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18338  0033EE  D001               	goto	u25006
 18339  0033F0  D007               	goto	u25007
 18340  0033F2                     u25006:
 18341  0033F2  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18342  0033F4  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18343  0033F6  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18344  0033F8  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18345  0033FA  339A               	rrcf	?___lmul& (0+255),f,b
 18346  0033FC  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18347  0033FE  D7F5               	goto	u25005
 18348  003400                     u25007:
 18349  003400  0E00               	movlw	0
 18350  003402  0100               	movlb	0	; () banked
 18351  003404  259A               	addwf	?___lmul& (0+255),w,b
 18352  003406  6FC7               	movwf	_BME280_compensateHumidity$7028& (0+255),b
 18353  003408  0E00               	movlw	0
 18354  00340A  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18355  00340C  6FC8               	movwf	(_BME280_compensateHumidity$7028+1)& (0+255),b
 18356  00340E  0E20               	movlw	32
 18357  003410  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18358  003412  6FC9               	movwf	(_BME280_compensateHumidity$7028+2)& (0+255),b
 18359  003414  0E00               	movlw	0
 18360  003416  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18361  003418  6FCA               	movwf	(_BME280_compensateHumidity$7028+3)& (0+255),b
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18365                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18366                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18367                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18368  00341A  0E0F               	movlw	15
 18369  00341C  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18370  00341E  EE21  F089         	lfsr	2,_calibParam+30
 18371  003422  CFDE F09A          	movff	postinc2,___lmul@multiplier
 18372  003426  CFDD F09B          	movff	postdec2,___lmul@multiplier+1
 18373  00342A  0E00               	movlw	0
 18374  00342C  BF9B               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18375  00342E  0EFF               	movlw	-1
 18376  003430  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 18377  003432  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 18378  003434  C0D7  F09E         	movff	BME280_compensateHumidity@humV,___lmul@multiplicand
 18379  003438  C0D8  F09F         	movff	BME280_compensateHumidity@humV+1,___lmul@multiplicand+1
 18380  00343C  C0D9  F0A0         	movff	BME280_compensateHumidity@humV+2,___lmul@multiplicand+2
 18381  003440  C0DA  F0A1         	movff	BME280_compensateHumidity@humV+3,___lmul@multiplicand+3
 18382  003444  EC1B  F057         	call	___lmul	;wreg free
 18383  003448  0100               	movlb	0	; () banked
 18384  00344A  1F9A               	comf	?___lmul& (0+255),f,b
 18385  00344C  1F9B               	comf	(?___lmul+1)& (0+255),f,b
 18386  00344E  1F9C               	comf	(?___lmul+2)& (0+255),f,b
 18387  003450  1F9D               	comf	(?___lmul+3)& (0+255),f,b
 18388  003452  2B9A               	incf	?___lmul& (0+255),f,b
 18389  003454  0E00               	movlw	0
 18390  003456  239B               	addwfc	(?___lmul+1)& (0+255),f,b
 18391  003458  239C               	addwfc	(?___lmul+2)& (0+255),f,b
 18392  00345A  239D               	addwfc	(?___lmul+3)& (0+255),f,b
 18393  00345C  0101               	movlb	1	; () banked
 18394  00345E  5187               	movf	(_calibParam+28)& (0+255),w,b
 18395  003460  0100               	movlb	0	; () banked
 18396  003462  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18397  003464  0101               	movlb	1	; () banked
 18398  003466  5188               	movf	(_calibParam+29)& (0+255),w,b
 18399  003468  0100               	movlb	0	; () banked
 18400  00346A  6FAC               	movwf	(??_BME280_compensateHumidity+2)& (0+255),b
 18401  00346C  6BAD               	clrf	(??_BME280_compensateHumidity+3)& (0+255),b
 18402  00346E  6BAE               	clrf	(??_BME280_compensateHumidity+4)& (0+255),b
 18403  003470  0E14               	movlw	20
 18404  003472                     u25015:
 18405  003472  90D8               	bcf	status,0,c
 18406  003474  37AB               	rlcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18407  003476  37AC               	rlcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18408  003478  37AD               	rlcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18409  00347A  37AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18410  00347C  2EE8               	decfsz	wreg,f,c
 18411  00347E  D7F9               	goto	u25015
 18412  003480  1FAB               	comf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18413  003482  1FAC               	comf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18414  003484  1FAD               	comf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18415  003486  1FAE               	comf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18416  003488  2BAB               	incf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18417  00348A  0E00               	movlw	0
 18418  00348C  23AC               	addwfc	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18419  00348E  23AD               	addwfc	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18420  003490  23AE               	addwfc	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18421  003492  C104  F0AF         	movff	_adc_H,??_BME280_compensateHumidity+5
 18422  003496  C105  F0B0         	movff	_adc_H+1,??_BME280_compensateHumidity+6
 18423  00349A  C106  F0B1         	movff	_adc_H+2,??_BME280_compensateHumidity+7
 18424  00349E  C107  F0B2         	movff	_adc_H+3,??_BME280_compensateHumidity+8
 18425  0034A2  0E0E               	movlw	14
 18426  0034A4                     u25025:
 18427  0034A4  90D8               	bcf	status,0,c
 18428  0034A6  37AF               	rlcf	(??_BME280_compensateHumidity+5)& (0+255),f,b
 18429  0034A8  37B0               	rlcf	(??_BME280_compensateHumidity+6)& (0+255),f,b
 18430  0034AA  37B1               	rlcf	(??_BME280_compensateHumidity+7)& (0+255),f,b
 18431  0034AC  37B2               	rlcf	(??_BME280_compensateHumidity+8)& (0+255),f,b
 18432  0034AE  2EE8               	decfsz	wreg,f,c
 18433  0034B0  D7F9               	goto	u25025
 18434  0034B2  51AB               	movf	(??_BME280_compensateHumidity+1)& (0+255),w,b
 18435  0034B4  25AF               	addwf	(??_BME280_compensateHumidity+5)& (0+255),w,b
 18436  0034B6  6FB3               	movwf	(??_BME280_compensateHumidity+9)& (0+255),b
 18437  0034B8  51AC               	movf	(??_BME280_compensateHumidity+2)& (0+255),w,b
 18438  0034BA  21B0               	addwfc	(??_BME280_compensateHumidity+6)& (0+255),w,b
 18439  0034BC  6FB4               	movwf	(??_BME280_compensateHumidity+10)& (0+255),b
 18440  0034BE  51AD               	movf	(??_BME280_compensateHumidity+3)& (0+255),w,b
 18441  0034C0  21B1               	addwfc	(??_BME280_compensateHumidity+7)& (0+255),w,b
 18442  0034C2  6FB5               	movwf	(??_BME280_compensateHumidity+11)& (0+255),b
 18443  0034C4  51AE               	movf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18444  0034C6  21B2               	addwfc	(??_BME280_compensateHumidity+8)& (0+255),w,b
 18445  0034C8  6FB6               	movwf	(??_BME280_compensateHumidity+12)& (0+255),b
 18446  0034CA  519A               	movf	?___lmul& (0+255),w,b
 18447  0034CC  25B3               	addwf	(??_BME280_compensateHumidity+9)& (0+255),w,b
 18448  0034CE  6FB7               	movwf	(??_BME280_compensateHumidity+13)& (0+255),b
 18449  0034D0  519B               	movf	(?___lmul+1)& (0+255),w,b
 18450  0034D2  21B4               	addwfc	(??_BME280_compensateHumidity+10)& (0+255),w,b
 18451  0034D4  6FB8               	movwf	(??_BME280_compensateHumidity+14)& (0+255),b
 18452  0034D6  519C               	movf	(?___lmul+2)& (0+255),w,b
 18453  0034D8  21B5               	addwfc	(??_BME280_compensateHumidity+11)& (0+255),w,b
 18454  0034DA  6FB9               	movwf	(??_BME280_compensateHumidity+15)& (0+255),b
 18455  0034DC  519D               	movf	(?___lmul+3)& (0+255),w,b
 18456  0034DE  21B6               	addwfc	(??_BME280_compensateHumidity+12)& (0+255),w,b
 18457  0034E0  6FBA               	movwf	(??_BME280_compensateHumidity+16)& (0+255),b
 18458  0034E2  0E00               	movlw	0
 18459  0034E4  25B7               	addwf	(??_BME280_compensateHumidity+13)& (0+255),w,b
 18460  0034E6  6FBB               	movwf	(??_BME280_compensateHumidity+17)& (0+255),b
 18461  0034E8  0E40               	movlw	64
 18462  0034EA  21B8               	addwfc	(??_BME280_compensateHumidity+14)& (0+255),w,b
 18463  0034EC  6FBC               	movwf	(??_BME280_compensateHumidity+18)& (0+255),b
 18464  0034EE  0E00               	movlw	0
 18465  0034F0  21B9               	addwfc	(??_BME280_compensateHumidity+15)& (0+255),w,b
 18466  0034F2  6FBD               	movwf	(??_BME280_compensateHumidity+19)& (0+255),b
 18467  0034F4  0E00               	movlw	0
 18468  0034F6  21BA               	addwfc	(??_BME280_compensateHumidity+16)& (0+255),w,b
 18469  0034F8  6FBE               	movwf	(??_BME280_compensateHumidity+20)& (0+255),b
 18470  0034FA                     u25035:
 18471  0034FA  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18472  0034FC  D001               	goto	u25036
 18473  0034FE  D007               	goto	u25037
 18474  003500                     u25036:
 18475  003500  35BE               	rlcf	(??_BME280_compensateHumidity+20)& (0+255),w,b
 18476  003502  33BE               	rrcf	(??_BME280_compensateHumidity+20)& (0+255),f,b
 18477  003504  33BD               	rrcf	(??_BME280_compensateHumidity+19)& (0+255),f,b
 18478  003506  33BC               	rrcf	(??_BME280_compensateHumidity+18)& (0+255),f,b
 18479  003508  33BB               	rrcf	(??_BME280_compensateHumidity+17)& (0+255),f,b
 18480  00350A  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18481  00350C  D7F6               	goto	u25035
 18482  00350E                     u25037:
 18483  00350E  C0BB  F0CB         	movff	??_BME280_compensateHumidity+17,_BME280_compensateHumidity$7029
 18484  003512  C0BC  F0CC         	movff	??_BME280_compensateHumidity+18,_BME280_compensateHumidity$7029+1
 18485  003516  C0BD  F0CD         	movff	??_BME280_compensateHumidity+19,_BME280_compensateHumidity$7029+2
 18486  00351A  C0BE  F0CE         	movff	??_BME280_compensateHumidity+20,_BME280_compensateHumidity$7029+3
 18487                           
 18488                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18489                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18490                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18491                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18492  00351E  0E0E               	movlw	14
 18493  003520  0100               	movlb	0	; () banked
 18494  003522  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18495  003524  C0C7  F09A         	movff	_BME280_compensateHumidity$7028,___lmul@multiplier
 18496  003528  C0C8  F09B         	movff	_BME280_compensateHumidity$7028+1,___lmul@multiplier+1
 18497  00352C  C0C9  F09C         	movff	_BME280_compensateHumidity$7028+2,___lmul@multiplier+2
 18498  003530  C0CA  F09D         	movff	_BME280_compensateHumidity$7028+3,___lmul@multiplier+3
 18499  003534  EE21  F084         	lfsr	2,_calibParam+25
 18500  003538  CFDE F09E          	movff	postinc2,___lmul@multiplicand
 18501  00353C  CFDD F09F          	movff	postdec2,___lmul@multiplicand+1
 18502  003540  0E00               	movlw	0
 18503  003542  BF9F               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18504  003544  0EFF               	movlw	-1
 18505  003546  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18506  003548  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18507  00354A  EC1B  F057         	call	___lmul	;wreg free
 18508  00354E  0E00               	movlw	0
 18509  003550  0100               	movlb	0	; () banked
 18510  003552  259A               	addwf	?___lmul& (0+255),w,b
 18511  003554  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18512  003556  0E20               	movlw	32
 18513  003558  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18514  00355A  6FAC               	movwf	(??_BME280_compensateHumidity+2)& (0+255),b
 18515  00355C  0E00               	movlw	0
 18516  00355E  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18517  003560  6FAD               	movwf	(??_BME280_compensateHumidity+3)& (0+255),b
 18518  003562  0E00               	movlw	0
 18519  003564  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18520  003566  6FAE               	movwf	(??_BME280_compensateHumidity+4)& (0+255),b
 18521  003568                     u25045:
 18522  003568  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18523  00356A  D001               	goto	u25046
 18524  00356C  D007               	goto	u25047
 18525  00356E                     u25046:
 18526  00356E  35AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18527  003570  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18528  003572  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18529  003574  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18530  003576  33AB               	rrcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18531  003578  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18532  00357A  D7F6               	goto	u25045
 18533  00357C                     u25047:
 18534  00357C  C0AB  F0CF         	movff	??_BME280_compensateHumidity+1,_BME280_compensateHumidity$7030
 18535  003580  C0AC  F0D0         	movff	??_BME280_compensateHumidity+2,_BME280_compensateHumidity$7030+1
 18536  003584  C0AD  F0D1         	movff	??_BME280_compensateHumidity+3,_BME280_compensateHumidity$7030+2
 18537  003588  C0AE  F0D2         	movff	??_BME280_compensateHumidity+4,_BME280_compensateHumidity$7030+3
 18538                           
 18539                           ;bme280.c: 386: humV = (((((adc_H << 14) - (((long) calibParam.dig_H4) << 20) - (((long)
      +                           calibParam.dig_H5) * humV)) +
 18540                           ;bme280.c: 387: ((long) 16384)) >> 15) * (((((((humV * ((long) calibParam.dig_H6)) >> 10
      +                          ) *
 18541                           ;bme280.c: 388: (((humV * ((long) calibParam.dig_H3)) >> 11) + ((long) 32768))) >> 10) +
 18542                           ;bme280.c: 389: ((long) 2097152)) * ((long) calibParam.dig_H2) + 8192) >> 14));
 18543  00358C  C0CB  F09A         	movff	_BME280_compensateHumidity$7029,___lmul@multiplier
 18544  003590  C0CC  F09B         	movff	_BME280_compensateHumidity$7029+1,___lmul@multiplier+1
 18545  003594  C0CD  F09C         	movff	_BME280_compensateHumidity$7029+2,___lmul@multiplier+2
 18546  003598  C0CE  F09D         	movff	_BME280_compensateHumidity$7029+3,___lmul@multiplier+3
 18547  00359C  C0CF  F09E         	movff	_BME280_compensateHumidity$7030,___lmul@multiplicand
 18548  0035A0  C0D0  F09F         	movff	_BME280_compensateHumidity$7030+1,___lmul@multiplicand+1
 18549  0035A4  C0D1  F0A0         	movff	_BME280_compensateHumidity$7030+2,___lmul@multiplicand+2
 18550  0035A8  C0D2  F0A1         	movff	_BME280_compensateHumidity$7030+3,___lmul@multiplicand+3
 18551  0035AC  EC1B  F057         	call	___lmul	;wreg free
 18552  0035B0  C09A  F0D7         	movff	?___lmul,BME280_compensateHumidity@humV
 18553  0035B4  C09B  F0D8         	movff	?___lmul+1,BME280_compensateHumidity@humV+1
 18554  0035B8  C09C  F0D9         	movff	?___lmul+2,BME280_compensateHumidity@humV+2
 18555  0035BC  C09D  F0DA         	movff	?___lmul+3,BME280_compensateHumidity@humV+3
 18556                           
 18557                           ;bme280.c: 390: humV = (humV - (((((humV >> 15) * (humV >> 15)) >> 7) * ((long) calibPar
      +                          am.dig_H1)) >> 4));
 18558  0035C0  0E07               	movlw	7
 18559  0035C2  0100               	movlb	0	; () banked
 18560  0035C4  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18561  0035C6  0E0F               	movlw	15
 18562  0035C8  6FAB               	movwf	(??_BME280_compensateHumidity+1)& (0+255),b
 18563  0035CA  C0D7  F0AC         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+2
 18564  0035CE  C0D8  F0AD         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+3
 18565  0035D2  C0D9  F0AE         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+4
 18566  0035D6  C0DA  F0AF         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+5
 18567  0035DA                     u25055:
 18568  0035DA  67AB               	tstfsz	(??_BME280_compensateHumidity+1)& (0+255),b
 18569  0035DC  D001               	goto	u25056
 18570  0035DE  D007               	goto	u25057
 18571  0035E0                     u25056:
 18572  0035E0  35AF               	rlcf	(??_BME280_compensateHumidity+5)& (0+255),w,b
 18573  0035E2  33AF               	rrcf	(??_BME280_compensateHumidity+5)& (0+255),f,b
 18574  0035E4  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18575  0035E6  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18576  0035E8  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18577  0035EA  2FAB               	decfsz	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18578  0035EC  D7F6               	goto	u25055
 18579  0035EE                     u25057:
 18580  0035EE  C0AC  F09A         	movff	??_BME280_compensateHumidity+2,___lmul@multiplier
 18581  0035F2  C0AD  F09B         	movff	??_BME280_compensateHumidity+3,___lmul@multiplier+1
 18582  0035F6  C0AE  F09C         	movff	??_BME280_compensateHumidity+4,___lmul@multiplier+2
 18583  0035FA  C0AF  F09D         	movff	??_BME280_compensateHumidity+5,___lmul@multiplier+3
 18584  0035FE  0E0F               	movlw	15
 18585  003600  0100               	movlb	0	; () banked
 18586  003602  6FB0               	movwf	(??_BME280_compensateHumidity+6)& (0+255),b
 18587  003604  C0D7  F0B1         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+7
 18588  003608  C0D8  F0B2         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+8
 18589  00360C  C0D9  F0B3         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+9
 18590  003610  C0DA  F0B4         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+10
 18591  003614                     u25065:
 18592  003614  67B0               	tstfsz	(??_BME280_compensateHumidity+6)& (0+255),b
 18593  003616  D001               	goto	u25066
 18594  003618  D007               	goto	u25067
 18595  00361A                     u25066:
 18596  00361A  35B4               	rlcf	(??_BME280_compensateHumidity+10)& (0+255),w,b
 18597  00361C  33B4               	rrcf	(??_BME280_compensateHumidity+10)& (0+255),f,b
 18598  00361E  33B3               	rrcf	(??_BME280_compensateHumidity+9)& (0+255),f,b
 18599  003620  33B2               	rrcf	(??_BME280_compensateHumidity+8)& (0+255),f,b
 18600  003622  33B1               	rrcf	(??_BME280_compensateHumidity+7)& (0+255),f,b
 18601  003624  2FB0               	decfsz	(??_BME280_compensateHumidity+6)& (0+255),f,b
 18602  003626  D7F6               	goto	u25065
 18603  003628                     u25067:
 18604  003628  C0B1  F09E         	movff	??_BME280_compensateHumidity+7,___lmul@multiplicand
 18605  00362C  C0B2  F09F         	movff	??_BME280_compensateHumidity+8,___lmul@multiplicand+1
 18606  003630  C0B3  F0A0         	movff	??_BME280_compensateHumidity+9,___lmul@multiplicand+2
 18607  003634  C0B4  F0A1         	movff	??_BME280_compensateHumidity+10,___lmul@multiplicand+3
 18608  003638  EC1B  F057         	call	___lmul	;wreg free
 18609  00363C                     u25075:
 18610  00363C  0100               	movlb	0	; () banked
 18611  00363E  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18612  003640  D001               	goto	u25076
 18613  003642  D007               	goto	u25077
 18614  003644                     u25076:
 18615  003644  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18616  003646  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18617  003648  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18618  00364A  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18619  00364C  339A               	rrcf	?___lmul& (0+255),f,b
 18620  00364E  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18621  003650  D7F5               	goto	u25075
 18622  003652                     u25077:
 18623  003652  C09A  F0D3         	movff	?___lmul,_BME280_compensateHumidity$7026
 18624  003656  C09B  F0D4         	movff	?___lmul+1,_BME280_compensateHumidity$7026+1
 18625  00365A  C09C  F0D5         	movff	?___lmul+2,_BME280_compensateHumidity$7026+2
 18626  00365E  C09D  F0D6         	movff	?___lmul+3,_BME280_compensateHumidity$7026+3
 18627                           
 18628                           ;bme280.c: 390: humV = (humV - (((((humV >> 15) * (humV >> 15)) >> 7) * ((long) calibPar
      +                          am.dig_H1)) >> 4));
 18629  003662  0E04               	movlw	4
 18630  003664  0100               	movlb	0	; () banked
 18631  003666  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18632  003668  C0D3  F09A         	movff	_BME280_compensateHumidity$7026,___lmul@multiplier
 18633  00366C  C0D4  F09B         	movff	_BME280_compensateHumidity$7026+1,___lmul@multiplier+1
 18634  003670  C0D5  F09C         	movff	_BME280_compensateHumidity$7026+2,___lmul@multiplier+2
 18635  003674  C0D6  F09D         	movff	_BME280_compensateHumidity$7026+3,___lmul@multiplier+3
 18636  003678  0101               	movlb	1	; () banked
 18637  00367A  5183               	movf	(_calibParam+24)& (0+255),w,b
 18638  00367C  0100               	movlb	0	; () banked
 18639  00367E  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 18640  003680  6B9F               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18641  003682  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18642  003684  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18643  003686  EC1B  F057         	call	___lmul	;wreg free
 18644  00368A                     u25085:
 18645  00368A  0100               	movlb	0	; () banked
 18646  00368C  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18647  00368E  D001               	goto	u25086
 18648  003690  D007               	goto	u25087
 18649  003692                     u25086:
 18650  003692  359D               	rlcf	(?___lmul+3)& (0+255),w,b
 18651  003694  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 18652  003696  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 18653  003698  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 18654  00369A  339A               	rrcf	?___lmul& (0+255),f,b
 18655  00369C  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18656  00369E  D7F5               	goto	u25085
 18657  0036A0                     u25087:
 18658  0036A0  0100               	movlb	0	; () banked
 18659  0036A2  1F9A               	comf	?___lmul& (0+255),f,b
 18660  0036A4  1F9B               	comf	(?___lmul+1)& (0+255),f,b
 18661  0036A6  1F9C               	comf	(?___lmul+2)& (0+255),f,b
 18662  0036A8  1F9D               	comf	(?___lmul+3)& (0+255),f,b
 18663  0036AA  2B9A               	incf	?___lmul& (0+255),f,b
 18664  0036AC  0E00               	movlw	0
 18665  0036AE  239B               	addwfc	(?___lmul+1)& (0+255),f,b
 18666  0036B0  239C               	addwfc	(?___lmul+2)& (0+255),f,b
 18667  0036B2  239D               	addwfc	(?___lmul+3)& (0+255),f,b
 18668  0036B4  51D7               	movf	BME280_compensateHumidity@humV& (0+255),w,b
 18669  0036B6  259A               	addwf	?___lmul& (0+255),w,b
 18670  0036B8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18671  0036BA  51D8               	movf	(BME280_compensateHumidity@humV+1)& (0+255),w,b
 18672  0036BC  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 18673  0036BE  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18674  0036C0  51D9               	movf	(BME280_compensateHumidity@humV+2)& (0+255),w,b
 18675  0036C2  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 18676  0036C4  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18677  0036C6  51DA               	movf	(BME280_compensateHumidity@humV+3)& (0+255),w,b
 18678  0036C8  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 18679  0036CA  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18680                           
 18681                           ;bme280.c: 391: humV = (humV < 0 ? 0 : humV);
 18682  0036CC  AFDA               	btfss	(BME280_compensateHumidity@humV+3)& (0+255),7,b
 18683  0036CE  D008               	goto	l3095
 18684                           
 18685                           ; BSR set to: 0
 18686                           
 18687                           ; BSR set to: 0
 18688                           
 18689                           ; BSR set to: 0
 18690  0036D0  0E00               	movlw	0
 18691  0036D2  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18692  0036D4  0E00               	movlw	0
 18693  0036D6  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18694  0036D8  0E00               	movlw	0
 18695  0036DA  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18696  0036DC  0E00               	movlw	0
 18697  0036DE  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18698  0036E0                     l3095:
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;bme280.c: 392: humV = (humV > 419430400 ? 419430400 : humV);
 18702                           
 18703                           ; BSR set to: 0
 18704  0036E0  BFDA               	btfsc	(BME280_compensateHumidity@humV+3)& (0+255),7,b
 18705  0036E2  D011               	goto	l3099
 18706  0036E4  05D7               	decf	BME280_compensateHumidity@humV& (0+255),w,b
 18707  0036E6  0E00               	movlw	0
 18708  0036E8  59D8               	subwfb	(BME280_compensateHumidity@humV+1)& (0+255),w,b
 18709  0036EA  0E00               	movlw	0
 18710  0036EC  59D9               	subwfb	(BME280_compensateHumidity@humV+2)& (0+255),w,b
 18711  0036EE  0E19               	movlw	25
 18712  0036F0  59DA               	subwfb	(BME280_compensateHumidity@humV+3)& (0+255),w,b
 18713  0036F2  A0D8               	btfss	status,0,c
 18714  0036F4  D008               	goto	l3099
 18715                           
 18716                           ; BSR set to: 0
 18717                           
 18718                           ; BSR set to: 0
 18719                           
 18720                           ; BSR set to: 0
 18721  0036F6  0E00               	movlw	0
 18722  0036F8  6FD7               	movwf	BME280_compensateHumidity@humV& (0+255),b
 18723  0036FA  0E00               	movlw	0
 18724  0036FC  6FD8               	movwf	(BME280_compensateHumidity@humV+1)& (0+255),b
 18725  0036FE  0E00               	movlw	0
 18726  003700  6FD9               	movwf	(BME280_compensateHumidity@humV+2)& (0+255),b
 18727  003702  0E19               	movlw	25
 18728  003704  6FDA               	movwf	(BME280_compensateHumidity@humV+3)& (0+255),b
 18729  003706                     l3099:
 18730                           
 18731                           ; BSR set to: 0
 18732                           ;bme280.c: 394: h = (uint32_t) (humV >> 12);
 18733                           
 18734                           ; BSR set to: 0
 18735  003706  0E0C               	movlw	12
 18736  003708  6FAA               	movwf	??_BME280_compensateHumidity& (0+255),b
 18737  00370A  C0D7  F0AB         	movff	BME280_compensateHumidity@humV,??_BME280_compensateHumidity+1
 18738  00370E  C0D8  F0AC         	movff	BME280_compensateHumidity@humV+1,??_BME280_compensateHumidity+2
 18739  003712  C0D9  F0AD         	movff	BME280_compensateHumidity@humV+2,??_BME280_compensateHumidity+3
 18740  003716  C0DA  F0AE         	movff	BME280_compensateHumidity@humV+3,??_BME280_compensateHumidity+4
 18741  00371A                     u25115:
 18742  00371A  67AA               	tstfsz	??_BME280_compensateHumidity& (0+255),b
 18743  00371C  D001               	goto	u25116
 18744  00371E  D007               	goto	u25117
 18745  003720                     u25116:
 18746  003720  35AE               	rlcf	(??_BME280_compensateHumidity+4)& (0+255),w,b
 18747  003722  33AE               	rrcf	(??_BME280_compensateHumidity+4)& (0+255),f,b
 18748  003724  33AD               	rrcf	(??_BME280_compensateHumidity+3)& (0+255),f,b
 18749  003726  33AC               	rrcf	(??_BME280_compensateHumidity+2)& (0+255),f,b
 18750  003728  33AB               	rrcf	(??_BME280_compensateHumidity+1)& (0+255),f,b
 18751  00372A  2FAA               	decfsz	??_BME280_compensateHumidity& (0+255),f,b
 18752  00372C  D7F6               	goto	u25115
 18753  00372E                     u25117:
 18754  00372E  C0AB  F0BF         	movff	??_BME280_compensateHumidity+1,BME280_compensateHumidity@h
 18755  003732  C0AC  F0C0         	movff	??_BME280_compensateHumidity+2,BME280_compensateHumidity@h+1
 18756  003736  C0AD  F0C1         	movff	??_BME280_compensateHumidity+3,BME280_compensateHumidity@h+2
 18757  00373A  C0AE  F0C2         	movff	??_BME280_compensateHumidity+4,BME280_compensateHumidity@h+3
 18758                           
 18759                           ;bme280.c: 395: return h;
 18760  00373E  C0BF  F0A6         	movff	BME280_compensateHumidity@h,?_BME280_compensateHumidity
 18761  003742  C0C0  F0A7         	movff	BME280_compensateHumidity@h+1,?_BME280_compensateHumidity+1
 18762  003746  C0C1  F0A8         	movff	BME280_compensateHumidity@h+2,?_BME280_compensateHumidity+2
 18763  00374A  C0C2  F0A9         	movff	BME280_compensateHumidity@h+3,?_BME280_compensateHumidity+3
 18764  00374E  0012               	return	
 18765  003750                     __end_of_BME280_compensateHumidity:
 18766                           	opt stack 0
 18767                           tosu	equ	0xFFF
 18768                           tosh	equ	0xFFE
 18769                           tosl	equ	0xFFD
 18770                           pclath	equ	0xFFA
 18771                           tblptru	equ	0xFF8
 18772                           tblptrh	equ	0xFF7
 18773                           tblptrl	equ	0xFF6
 18774                           tablat	equ	0xFF5
 18775                           prodh	equ	0xFF4
 18776                           prodl	equ	0xFF3
 18777                           intcon	equ	0xFF2
 18778                           postinc0	equ	0xFEE
 18779                           wreg	equ	0xFE8
 18780                           indf2	equ	0xFDF
 18781                           postinc2	equ	0xFDE
 18782                           postdec2	equ	0xFDD
 18783                           fsr2h	equ	0xFDA
 18784                           fsr2l	equ	0xFD9
 18785                           status	equ	0xFD8
 18786                           
 18787 ;; *************** function _TMR5_HasOverflowOccured *****************
 18788 ;; Defined at:
 18789 ;;		line 151 in file "mcc_generated_files/tmr5.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;		None
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;		None
 18794 ;; Return value:  Size  Location     Type
 18795 ;;                  1    wreg      unsigned char 
 18796 ;; Registers used:
 18797 ;;		wreg
 18798 ;; Tracked objects:
 18799 ;;		On entry : 0/0
 18800 ;;		On exit  : 0/0
 18801 ;;		Unchanged: 0/0
 18802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18807 ;;Total ram usage:        0 bytes
 18808 ;; Hardware stack levels used:    1
 18809 ;; Hardware stack levels required when called:    7
 18810 ;; This function calls:
 18811 ;;		Nothing
 18812 ;; This function is called by:
 18813 ;;		_main
 18814 ;; This function uses a non-reentrant model
 18815 ;;
 18816                           
 18817                           	psect	text104
 18818  00C506                     __ptext104:
 18819                           	opt stack 0
 18820  00C506                     _TMR5_HasOverflowOccured:
 18821                           	opt stack 23
 18822                           
 18823                           ;tmr5.c: 154: return(PIR5bits.TMR5IF);
 18824                           
 18825                           ;incstack = 0
 18826  00C506  A27E               	btfss	3966,1,c	;volatile
 18827  00C508  D002               	goto	u17550
 18828  00C50A  0E01               	movlw	1
 18829  00C50C  0012               	return	
 18830  00C50E                     u17550:
 18831  00C50E  0E00               	movlw	0
 18832  00C510  0012               	return	
 18833  00C512                     __end_of_TMR5_HasOverflowOccured:
 18834                           	opt stack 0
 18835                           tosu	equ	0xFFF
 18836                           tosh	equ	0xFFE
 18837                           tosl	equ	0xFFD
 18838                           pclath	equ	0xFFA
 18839                           tblptru	equ	0xFF8
 18840                           tblptrh	equ	0xFF7
 18841                           tblptrl	equ	0xFF6
 18842                           tablat	equ	0xFF5
 18843                           prodh	equ	0xFF4
 18844                           prodl	equ	0xFF3
 18845                           intcon	equ	0xFF2
 18846                           postinc0	equ	0xFEE
 18847                           wreg	equ	0xFE8
 18848                           indf2	equ	0xFDF
 18849                           postinc2	equ	0xFDE
 18850                           postdec2	equ	0xFDD
 18851                           fsr2h	equ	0xFDA
 18852                           fsr2l	equ	0xFD9
 18853                           status	equ	0xFD8
 18854                           
 18855 ;; *************** function _SYSTEM_Initialize *****************
 18856 ;; Defined at:
 18857 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18858 ;; Parameters:    Size  Location     Type
 18859 ;;		None
 18860 ;; Auto vars:     Size  Location     Type
 18861 ;;		None
 18862 ;; Return value:  Size  Location     Type
 18863 ;;                  1    wreg      void 
 18864 ;; Registers used:
 18865 ;;		wreg, status,2, status,0, cstack
 18866 ;; Tracked objects:
 18867 ;;		On entry : 0/0
 18868 ;;		On exit  : 0/0
 18869 ;;		Unchanged: 0/0
 18870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18875 ;;Total ram usage:        0 bytes
 18876 ;; Hardware stack levels used:    1
 18877 ;; Hardware stack levels required when called:   10
 18878 ;; This function calls:
 18879 ;;		_ADC_Initialize
 18880 ;;		_CCP5_Initialize
 18881 ;;		_EUSART1_Initialize
 18882 ;;		_EXT_INT_Initialize
 18883 ;;		_INTERRUPT_Initialize
 18884 ;;		_LORAWAN_PlatformInit
 18885 ;;		_OSCILLATOR_Initialize
 18886 ;;		_PIN_MANAGER_Initialize
 18887 ;;		_SPI2_Initialize
 18888 ;;		_TMR1_Initialize
 18889 ;;		_TMR5_Initialize
 18890 ;; This function is called by:
 18891 ;;		_main
 18892 ;; This function uses a non-reentrant model
 18893 ;;
 18894                           
 18895                           	psect	text105
 18896  00BA6E                     __ptext105:
 18897                           	opt stack 0
 18898  00BA6E                     _SYSTEM_Initialize:
 18899                           	opt stack 20
 18900                           
 18901                           ;mcc.c: 53: INTERRUPT_Initialize();
 18902                           
 18903                           ;incstack = 0
 18904  00BA6E  EC62  F063         	call	_INTERRUPT_Initialize	;wreg free
 18905                           
 18906                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 18907  00BA72  ECC7  F057         	call	_PIN_MANAGER_Initialize	;wreg free
 18908                           
 18909                           ;mcc.c: 55: OSCILLATOR_Initialize();
 18910  00BA76  EC69  F062         	call	_OSCILLATOR_Initialize	;wreg free
 18911                           
 18912                           ;mcc.c: 56: SPI2_Initialize();
 18913  00BA7A  EC62  F062         	call	_SPI2_Initialize	;wreg free
 18914                           
 18915                           ;mcc.c: 57: ADC_Initialize();
 18916  00BA7E  EC53  F061         	call	_ADC_Initialize	;wreg free
 18917                           
 18918                           ;mcc.c: 58: CCP5_Initialize();
 18919  00BA82  EC36  F062         	call	_CCP5_Initialize	;wreg free
 18920                           
 18921                           ;mcc.c: 59: TMR5_Initialize();
 18922  00BA86  EC88  F060         	call	_TMR5_Initialize	;wreg free
 18923                           
 18924                           ;mcc.c: 60: TMR1_Initialize();
 18925  00BA8A  ECD8  F05D         	call	_TMR1_Initialize	;wreg free
 18926                           
 18927                           ;mcc.c: 61: EXT_INT_Initialize();
 18928  00BA8E  ECEE  F05D         	call	_EXT_INT_Initialize	;wreg free
 18929                           
 18930                           ;mcc.c: 62: EUSART1_Initialize();
 18931  00BA92  EC7D  F059         	call	_EUSART1_Initialize	;wreg free
 18932                           
 18933                           ;mcc.c: 63: LORAWAN_PlatformInit();
 18934  00BA96  EC27  F05F         	call	_LORAWAN_PlatformInit	;wreg free
 18935  00BA9A  0012               	return		;funcret
 18936  00BA9C                     __end_of_SYSTEM_Initialize:
 18937                           	opt stack 0
 18938                           tosu	equ	0xFFF
 18939                           tosh	equ	0xFFE
 18940                           tosl	equ	0xFFD
 18941                           pclath	equ	0xFFA
 18942                           tblptru	equ	0xFF8
 18943                           tblptrh	equ	0xFF7
 18944                           tblptrl	equ	0xFF6
 18945                           tablat	equ	0xFF5
 18946                           prodh	equ	0xFF4
 18947                           prodl	equ	0xFF3
 18948                           intcon	equ	0xFF2
 18949                           postinc0	equ	0xFEE
 18950                           wreg	equ	0xFE8
 18951                           indf2	equ	0xFDF
 18952                           postinc2	equ	0xFDE
 18953                           postdec2	equ	0xFDD
 18954                           fsr2h	equ	0xFDA
 18955                           fsr2l	equ	0xFD9
 18956                           status	equ	0xFD8
 18957                           
 18958 ;; *************** function _TMR5_Initialize *****************
 18959 ;; Defined at:
 18960 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 18961 ;; Parameters:    Size  Location     Type
 18962 ;;		None
 18963 ;; Auto vars:     Size  Location     Type
 18964 ;;		None
 18965 ;; Return value:  Size  Location     Type
 18966 ;;                  1    wreg      void 
 18967 ;; Registers used:
 18968 ;;		wreg, status,2
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/0
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;Total ram usage:        0 bytes
 18979 ;; Hardware stack levels used:    1
 18980 ;; Hardware stack levels required when called:    7
 18981 ;; This function calls:
 18982 ;;		Nothing
 18983 ;; This function is called by:
 18984 ;;		_SYSTEM_Initialize
 18985 ;; This function uses a non-reentrant model
 18986 ;;
 18987                           
 18988                           	psect	text106
 18989  00C110                     __ptext106:
 18990                           	opt stack 0
 18991  00C110                     _TMR5_Initialize:
 18992                           	opt stack 22
 18993                           
 18994                           ;tmr5.c: 68: T5GCON = 0x00;
 18995                           
 18996                           ;incstack = 0
 18997  00C110  0E00               	movlw	0
 18998  00C112  010F               	movlb	15	; () banked
 18999  00C114  6F4D               	movwf	77,b	;volatile
 19000                           
 19001                           ;tmr5.c: 71: TMR5H = 0x10;
 19002  00C116  0E10               	movlw	16
 19003  00C118  6F50               	movwf	80,b	;volatile
 19004                           
 19005                           ;tmr5.c: 74: TMR5L = 0x00;
 19006  00C11A  0E00               	movlw	0
 19007  00C11C  6F4F               	movwf	79,b	;volatile
 19008                           
 19009                           ; BSR set to: 15
 19010                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
 19011  00C11E  CF4F F3F0          	movff	3919,_timer5ReloadVal	;volatile
 19012  00C122  CF50 F3F1          	movff	3920,_timer5ReloadVal+1	;volatile
 19013                           
 19014                           ; BSR set to: 15
 19015                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
 19016  00C126  927E               	bcf	3966,1,c	;volatile
 19017                           
 19018                           ;tmr5.c: 83: T5CON = 0xBD;
 19019  00C128  0EBD               	movlw	189
 19020  00C12A  6F4E               	movwf	78,b	;volatile
 19021                           
 19022                           ; BSR set to: 15
 19023  00C12C  0012               	return		;funcret
 19024  00C12E                     __end_of_TMR5_Initialize:
 19025                           	opt stack 0
 19026                           tosu	equ	0xFFF
 19027                           tosh	equ	0xFFE
 19028                           tosl	equ	0xFFD
 19029                           pclath	equ	0xFFA
 19030                           tblptru	equ	0xFF8
 19031                           tblptrh	equ	0xFF7
 19032                           tblptrl	equ	0xFF6
 19033                           tablat	equ	0xFF5
 19034                           prodh	equ	0xFF4
 19035                           prodl	equ	0xFF3
 19036                           intcon	equ	0xFF2
 19037                           postinc0	equ	0xFEE
 19038                           wreg	equ	0xFE8
 19039                           indf2	equ	0xFDF
 19040                           postinc2	equ	0xFDE
 19041                           postdec2	equ	0xFDD
 19042                           fsr2h	equ	0xFDA
 19043                           fsr2l	equ	0xFD9
 19044                           status	equ	0xFD8
 19045                           
 19046 ;; *************** function _TMR1_Initialize *****************
 19047 ;; Defined at:
 19048 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 19049 ;; Parameters:    Size  Location     Type
 19050 ;;		None
 19051 ;; Auto vars:     Size  Location     Type
 19052 ;;		None
 19053 ;; Return value:  Size  Location     Type
 19054 ;;                  1    wreg      void 
 19055 ;; Registers used:
 19056 ;;		wreg, status,2, status,0, cstack
 19057 ;; Tracked objects:
 19058 ;;		On entry : 0/0
 19059 ;;		On exit  : 0/0
 19060 ;;		Unchanged: 0/0
 19061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19066 ;;Total ram usage:        0 bytes
 19067 ;; Hardware stack levels used:    1
 19068 ;; Hardware stack levels required when called:    8
 19069 ;; This function calls:
 19070 ;;		_TMR1_SetInterruptHandler
 19071 ;; This function is called by:
 19072 ;;		_SYSTEM_Initialize
 19073 ;; This function uses a non-reentrant model
 19074 ;;
 19075                           
 19076                           	psect	text107
 19077  00BBB0                     __ptext107:
 19078                           	opt stack 0
 19079  00BBB0                     _TMR1_Initialize:
 19080                           	opt stack 21
 19081                           
 19082                           ;tmr1.c: 69: T1GCON = 0x00;
 19083                           
 19084                           ; BSR set to: 15
 19085                           ;incstack = 0
 19086  00BBB0  0E00               	movlw	0
 19087  00BBB2  6ECC               	movwf	4044,c	;volatile
 19088                           
 19089                           ;tmr1.c: 72: TMR1H = 0x00;
 19090  00BBB4  0E00               	movlw	0
 19091  00BBB6  6ECF               	movwf	4047,c	;volatile
 19092                           
 19093                           ;tmr1.c: 75: TMR1L = 0x00;
 19094  00BBB8  0E00               	movlw	0
 19095  00BBBA  6ECE               	movwf	4046,c	;volatile
 19096                           
 19097                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
 19098  00BBBC  CFCE F1F5          	movff	4046,_timer1ReloadVal	;volatile
 19099  00BBC0  CFCF F1F6          	movff	4047,_timer1ReloadVal+1	;volatile
 19100                           
 19101                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
 19102  00BBC4  909E               	bcf	3998,0,c	;volatile
 19103                           
 19104                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
 19105  00BBC6  809D               	bsf	3997,0,c	;volatile
 19106                           
 19107                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 19108  00BBC8  0EE4               	movlw	low _TMR1_DefaultInterruptHandler
 19109  00BBCA  0100               	movlb	0	; () banked
 19110  00BBCC  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 19111  00BBCE  0EC6               	movlw	high _TMR1_DefaultInterruptHandler
 19112  00BBD0  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19113  00BBD2  ECA3  F062         	call	_TMR1_SetInterruptHandler	;wreg free
 19114                           
 19115                           ;tmr1.c: 90: T1CON = 0x8D;
 19116  00BBD6  0E8D               	movlw	141
 19117  00BBD8  6ECD               	movwf	4045,c	;volatile
 19118  00BBDA  0012               	return		;funcret
 19119  00BBDC                     __end_of_TMR1_Initialize:
 19120                           	opt stack 0
 19121                           tosu	equ	0xFFF
 19122                           tosh	equ	0xFFE
 19123                           tosl	equ	0xFFD
 19124                           pclath	equ	0xFFA
 19125                           tblptru	equ	0xFF8
 19126                           tblptrh	equ	0xFF7
 19127                           tblptrl	equ	0xFF6
 19128                           tablat	equ	0xFF5
 19129                           prodh	equ	0xFF4
 19130                           prodl	equ	0xFF3
 19131                           intcon	equ	0xFF2
 19132                           postinc0	equ	0xFEE
 19133                           wreg	equ	0xFE8
 19134                           indf2	equ	0xFDF
 19135                           postinc2	equ	0xFDE
 19136                           postdec2	equ	0xFDD
 19137                           fsr2h	equ	0xFDA
 19138                           fsr2l	equ	0xFD9
 19139                           status	equ	0xFD8
 19140                           
 19141 ;; *************** function _SPI2_Initialize *****************
 19142 ;; Defined at:
 19143 ;;		line 65 in file "mcc_generated_files/spi2.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;		None
 19146 ;; Auto vars:     Size  Location     Type
 19147 ;;		None
 19148 ;; Return value:  Size  Location     Type
 19149 ;;                  1    wreg      void 
 19150 ;; Registers used:
 19151 ;;		wreg, status,2
 19152 ;; Tracked objects:
 19153 ;;		On entry : 0/0
 19154 ;;		On exit  : 0/0
 19155 ;;		Unchanged: 0/0
 19156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19161 ;;Total ram usage:        0 bytes
 19162 ;; Hardware stack levels used:    1
 19163 ;; Hardware stack levels required when called:    7
 19164 ;; This function calls:
 19165 ;;		Nothing
 19166 ;; This function is called by:
 19167 ;;		_SYSTEM_Initialize
 19168 ;; This function uses a non-reentrant model
 19169 ;;
 19170                           
 19171                           	psect	text108
 19172  00C4C4                     __ptext108:
 19173                           	opt stack 0
 19174  00C4C4                     _SPI2_Initialize:
 19175                           	opt stack 22
 19176                           
 19177                           ;spi2.c: 70: SSP2STAT = 0x40;
 19178                           
 19179                           ;incstack = 0
 19180  00C4C4  0E40               	movlw	64
 19181  00C4C6  6E6D               	movwf	3949,c	;volatile
 19182                           
 19183                           ;spi2.c: 73: SSP2CON1 = 0x20;
 19184  00C4C8  0E20               	movlw	32
 19185  00C4CA  6E6C               	movwf	3948,c	;volatile
 19186                           
 19187                           ;spi2.c: 76: SSP2ADD = 0x00;
 19188  00C4CC  0E00               	movlw	0
 19189  00C4CE  6E6E               	movwf	3950,c	;volatile
 19190  00C4D0  0012               	return		;funcret
 19191  00C4D2                     __end_of_SPI2_Initialize:
 19192                           	opt stack 0
 19193                           tosu	equ	0xFFF
 19194                           tosh	equ	0xFFE
 19195                           tosl	equ	0xFFD
 19196                           pclath	equ	0xFFA
 19197                           tblptru	equ	0xFF8
 19198                           tblptrh	equ	0xFF7
 19199                           tblptrl	equ	0xFF6
 19200                           tablat	equ	0xFF5
 19201                           prodh	equ	0xFF4
 19202                           prodl	equ	0xFF3
 19203                           intcon	equ	0xFF2
 19204                           postinc0	equ	0xFEE
 19205                           wreg	equ	0xFE8
 19206                           indf2	equ	0xFDF
 19207                           postinc2	equ	0xFDE
 19208                           postdec2	equ	0xFDD
 19209                           fsr2h	equ	0xFDA
 19210                           fsr2l	equ	0xFD9
 19211                           status	equ	0xFD8
 19212                           
 19213 ;; *************** function _PIN_MANAGER_Initialize *****************
 19214 ;; Defined at:
 19215 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 19216 ;; Parameters:    Size  Location     Type
 19217 ;;		None
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;		None
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      void 
 19222 ;; Registers used:
 19223 ;;		wreg, status,2, status,0, cstack
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:    8
 19236 ;; This function calls:
 19237 ;;		_IOCB4_SetInterruptHandler
 19238 ;; This function is called by:
 19239 ;;		_SYSTEM_Initialize
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           	psect	text109
 19244  00AF8E                     __ptext109:
 19245                           	opt stack 0
 19246  00AF8E                     _PIN_MANAGER_Initialize:
 19247                           	opt stack 21
 19248                           
 19249                           ;pin_manager.c: 62: LATE = 0x00;
 19250                           
 19251                           ;incstack = 0
 19252  00AF8E  0E00               	movlw	0
 19253  00AF90  6E8D               	movwf	3981,c	;volatile
 19254                           
 19255                           ;pin_manager.c: 63: LATD = 0x00;
 19256  00AF92  0E00               	movlw	0
 19257  00AF94  6E8C               	movwf	3980,c	;volatile
 19258                           
 19259                           ;pin_manager.c: 64: LATA = 0x00;
 19260  00AF96  0E00               	movlw	0
 19261  00AF98  6E89               	movwf	3977,c	;volatile
 19262                           
 19263                           ;pin_manager.c: 65: LATB = 0x00;
 19264  00AF9A  0E00               	movlw	0
 19265  00AF9C  6E8A               	movwf	3978,c	;volatile
 19266                           
 19267                           ;pin_manager.c: 66: LATC = 0x00;
 19268  00AF9E  0E00               	movlw	0
 19269  00AFA0  6E8B               	movwf	3979,c	;volatile
 19270                           
 19271                           ;pin_manager.c: 71: TRISE = 0x07;
 19272  00AFA2  0E07               	movlw	7
 19273  00AFA4  6E96               	movwf	3990,c	;volatile
 19274                           
 19275                           ;pin_manager.c: 72: TRISA = 0xFF;
 19276  00AFA6  6892               	setf	3986,c	;volatile
 19277                           
 19278                           ;pin_manager.c: 73: TRISB = 0xFF;
 19279  00AFA8  6893               	setf	3987,c	;volatile
 19280                           
 19281                           ;pin_manager.c: 74: TRISC = 0xBE;
 19282  00AFAA  0EBE               	movlw	190
 19283  00AFAC  6E94               	movwf	3988,c	;volatile
 19284                           
 19285                           ;pin_manager.c: 75: TRISD = 0xE6;
 19286  00AFAE  0EE6               	movlw	230
 19287  00AFB0  6E95               	movwf	3989,c	;volatile
 19288                           
 19289                           ;pin_manager.c: 80: ANSELD = 0xE4;
 19290  00AFB2  0EE4               	movlw	228
 19291  00AFB4  010F               	movlb	15	; () banked
 19292  00AFB6  6F3B               	movwf	59,b	;volatile
 19293                           
 19294                           ;pin_manager.c: 81: ANSELC = 0x20;
 19295  00AFB8  0E20               	movlw	32
 19296  00AFBA  6F3A               	movwf	58,b	;volatile
 19297                           
 19298                           ;pin_manager.c: 82: ANSELB = 0x28;
 19299  00AFBC  0E28               	movlw	40
 19300  00AFBE  6F39               	movwf	57,b	;volatile
 19301                           
 19302                           ;pin_manager.c: 83: ANSELE = 0x07;
 19303  00AFC0  0E07               	movlw	7
 19304  00AFC2  6F3C               	movwf	60,b	;volatile
 19305                           
 19306                           ;pin_manager.c: 84: ANSELA = 0x2F;
 19307  00AFC4  0E2F               	movlw	47
 19308  00AFC6  6F38               	movwf	56,b	;volatile
 19309                           
 19310                           ;pin_manager.c: 89: WPUB = 0x00;
 19311  00AFC8  0E00               	movlw	0
 19312  00AFCA  6E61               	movwf	3937,c	;volatile
 19313                           
 19314                           ; BSR set to: 15
 19315                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
 19316  00AFCC  8EF1               	bsf	intcon2,7,c	;volatile
 19317                           
 19318                           ; BSR set to: 15
 19319                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
 19320  00AFCE  8862               	bsf	3938,4,c	;volatile
 19321                           
 19322                           ; BSR set to: 15
 19323                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
 19324  00AFD0  0EE6               	movlw	low _IOCB4_DefaultInterruptHandler
 19325  00AFD2  0100               	movlb	0	; () banked
 19326  00AFD4  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 19327  00AFD6  0EC6               	movlw	high _IOCB4_DefaultInterruptHandler
 19328  00AFD8  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19329  00AFDA  ECA8  F062         	call	_IOCB4_SetInterruptHandler	;wreg free
 19330                           
 19331                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
 19332  00AFDE  86F2               	bsf	intcon,3,c	;volatile
 19333  00AFE0  0012               	return		;funcret
 19334  00AFE2                     __end_of_PIN_MANAGER_Initialize:
 19335                           	opt stack 0
 19336                           tosu	equ	0xFFF
 19337                           tosh	equ	0xFFE
 19338                           tosl	equ	0xFFD
 19339                           pclath	equ	0xFFA
 19340                           tblptru	equ	0xFF8
 19341                           tblptrh	equ	0xFF7
 19342                           tblptrl	equ	0xFF6
 19343                           tablat	equ	0xFF5
 19344                           prodh	equ	0xFF4
 19345                           prodl	equ	0xFF3
 19346                           intcon	equ	0xFF2
 19347                           intcon2	equ	0xFF1
 19348                           postinc0	equ	0xFEE
 19349                           wreg	equ	0xFE8
 19350                           indf2	equ	0xFDF
 19351                           postinc2	equ	0xFDE
 19352                           postdec2	equ	0xFDD
 19353                           fsr2h	equ	0xFDA
 19354                           fsr2l	equ	0xFD9
 19355                           status	equ	0xFD8
 19356                           
 19357 ;; *************** function _OSCILLATOR_Initialize *****************
 19358 ;; Defined at:
 19359 ;;		line 66 in file "mcc_generated_files/mcc.c"
 19360 ;; Parameters:    Size  Location     Type
 19361 ;;		None
 19362 ;; Auto vars:     Size  Location     Type
 19363 ;;		None
 19364 ;; Return value:  Size  Location     Type
 19365 ;;                  1    wreg      void 
 19366 ;; Registers used:
 19367 ;;		wreg, status,2
 19368 ;; Tracked objects:
 19369 ;;		On entry : 0/0
 19370 ;;		On exit  : 0/0
 19371 ;;		Unchanged: 0/0
 19372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19377 ;;Total ram usage:        0 bytes
 19378 ;; Hardware stack levels used:    1
 19379 ;; Hardware stack levels required when called:    7
 19380 ;; This function calls:
 19381 ;;		Nothing
 19382 ;; This function is called by:
 19383 ;;		_SYSTEM_Initialize
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text110
 19388  00C4D2                     __ptext110:
 19389                           	opt stack 0
 19390  00C4D2                     _OSCILLATOR_Initialize:
 19391                           	opt stack 22
 19392                           
 19393                           ;mcc.c: 69: OSCCON = 0x70;
 19394                           
 19395                           ;incstack = 0
 19396  00C4D2  0E70               	movlw	112
 19397  00C4D4  6ED3               	movwf	4051,c	;volatile
 19398                           
 19399                           ;mcc.c: 71: OSCCON2 = 0x04;
 19400  00C4D6  0E04               	movlw	4
 19401  00C4D8  6ED2               	movwf	4050,c	;volatile
 19402                           
 19403                           ;mcc.c: 73: OSCTUNE = 0x00;
 19404  00C4DA  0E00               	movlw	0
 19405  00C4DC  6E9B               	movwf	3995,c	;volatile
 19406  00C4DE  0012               	return		;funcret
 19407  00C4E0                     __end_of_OSCILLATOR_Initialize:
 19408                           	opt stack 0
 19409                           tosu	equ	0xFFF
 19410                           tosh	equ	0xFFE
 19411                           tosl	equ	0xFFD
 19412                           pclath	equ	0xFFA
 19413                           tblptru	equ	0xFF8
 19414                           tblptrh	equ	0xFF7
 19415                           tblptrl	equ	0xFF6
 19416                           tablat	equ	0xFF5
 19417                           prodh	equ	0xFF4
 19418                           prodl	equ	0xFF3
 19419                           intcon	equ	0xFF2
 19420                           intcon2	equ	0xFF1
 19421                           postinc0	equ	0xFEE
 19422                           wreg	equ	0xFE8
 19423                           indf2	equ	0xFDF
 19424                           postinc2	equ	0xFDE
 19425                           postdec2	equ	0xFDD
 19426                           fsr2h	equ	0xFDA
 19427                           fsr2l	equ	0xFD9
 19428                           status	equ	0xFD8
 19429                           
 19430 ;; *************** function _LORAWAN_PlatformInit *****************
 19431 ;; Defined at:
 19432 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19433 ;; Parameters:    Size  Location     Type
 19434 ;;		None
 19435 ;; Auto vars:     Size  Location     Type
 19436 ;;		None
 19437 ;; Return value:  Size  Location     Type
 19438 ;;                  1    wreg      void 
 19439 ;; Registers used:
 19440 ;;		wreg, status,2, status,0, cstack
 19441 ;; Tracked objects:
 19442 ;;		On entry : 0/0
 19443 ;;		On exit  : 0/0
 19444 ;;		Unchanged: 0/0
 19445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19450 ;;Total ram usage:        0 bytes
 19451 ;; Hardware stack levels used:    1
 19452 ;; Hardware stack levels required when called:    9
 19453 ;; This function calls:
 19454 ;;		_DIO0_ISR_Lora_Init
 19455 ;;		_DIO1_ISR_Lora_Init
 19456 ;;		_DIO2_ISR_Lora_Init
 19457 ;;		_DIO3_ISR_Lora_Init
 19458 ;;		_DIO4_ISR_Lora_Init
 19459 ;;		_DIO5_ISR_Lora_Init
 19460 ;;		_SystemTimerInit
 19461 ;;		_TMR_ISR_Lora_Init
 19462 ;; This function is called by:
 19463 ;;		_SYSTEM_Initialize
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text111
 19468  00BE4E                     __ptext111:
 19469                           	opt stack 0
 19470  00BE4E                     _LORAWAN_PlatformInit:
 19471                           	opt stack 20
 19472                           
 19473                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
 19474                           
 19475                           ;incstack = 0
 19476  00BE4E  EC16  F062         	call	_TMR_ISR_Lora_Init	;wreg free
 19477                           
 19478                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
 19479  00BE52  EC2E  F062         	call	_DIO0_ISR_Lora_Init	;wreg free
 19480                           
 19481                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
 19482  00BE56  EC26  F062         	call	_DIO1_ISR_Lora_Init	;wreg free
 19483                           
 19484                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
 19485  00BE5A  EC1E  F062         	call	_DIO2_ISR_Lora_Init	;wreg free
 19486                           
 19487                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
 19488  00BE5E  EC6F  F063         	call	_DIO3_ISR_Lora_Init	;wreg free
 19489                           
 19490                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
 19491  00BE62  EC6E  F063         	call	_DIO4_ISR_Lora_Init	;wreg free
 19492                           
 19493                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
 19494  00BE66  EC6D  F063         	call	_DIO5_ISR_Lora_Init	;wreg free
 19495                           
 19496                           ;lorawan_init.c: 82: SystemTimerInit();
 19497  00BE6A  EC22  F063         	call	_SystemTimerInit	;wreg free
 19498  00BE6E  0012               	return		;funcret
 19499  00BE70                     __end_of_LORAWAN_PlatformInit:
 19500                           	opt stack 0
 19501                           tosu	equ	0xFFF
 19502                           tosh	equ	0xFFE
 19503                           tosl	equ	0xFFD
 19504                           pclath	equ	0xFFA
 19505                           tblptru	equ	0xFF8
 19506                           tblptrh	equ	0xFF7
 19507                           tblptrl	equ	0xFF6
 19508                           tablat	equ	0xFF5
 19509                           prodh	equ	0xFF4
 19510                           prodl	equ	0xFF3
 19511                           intcon	equ	0xFF2
 19512                           intcon2	equ	0xFF1
 19513                           postinc0	equ	0xFEE
 19514                           wreg	equ	0xFE8
 19515                           indf2	equ	0xFDF
 19516                           postinc2	equ	0xFDE
 19517                           postdec2	equ	0xFDD
 19518                           fsr2h	equ	0xFDA
 19519                           fsr2l	equ	0xFD9
 19520                           status	equ	0xFD8
 19521                           
 19522 ;; *************** function _TMR_ISR_Lora_Init *****************
 19523 ;; Defined at:
 19524 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 19525 ;; Parameters:    Size  Location     Type
 19526 ;;		None
 19527 ;; Auto vars:     Size  Location     Type
 19528 ;;		None
 19529 ;; Return value:  Size  Location     Type
 19530 ;;                  1    wreg      void 
 19531 ;; Registers used:
 19532 ;;		wreg, status,2, status,0, cstack
 19533 ;; Tracked objects:
 19534 ;;		On entry : 0/0
 19535 ;;		On exit  : 0/0
 19536 ;;		Unchanged: 0/0
 19537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19542 ;;Total ram usage:        0 bytes
 19543 ;; Hardware stack levels used:    1
 19544 ;; Hardware stack levels required when called:    8
 19545 ;; This function calls:
 19546 ;;		_TMR1_SetInterruptHandler
 19547 ;; This function is called by:
 19548 ;;		_LORAWAN_PlatformInit
 19549 ;; This function uses a non-reentrant model
 19550 ;;
 19551                           
 19552                           	psect	text112
 19553  00C42C                     __ptext112:
 19554                           	opt stack 0
 19555  00C42C                     _TMR_ISR_Lora_Init:
 19556                           	opt stack 20
 19557                           
 19558                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
 19559                           
 19560                           ;incstack = 0
 19561  00C42C  0EE4               	movlw	low _TMR_ISR_lora
 19562  00C42E  0100               	movlb	0	; () banked
 19563  00C430  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 19564  00C432  0EAE               	movlw	high _TMR_ISR_lora
 19565  00C434  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19566  00C436  ECA3  F062         	call	_TMR1_SetInterruptHandler	;wreg free
 19567  00C43A  0012               	return		;funcret
 19568  00C43C                     __end_of_TMR_ISR_Lora_Init:
 19569                           	opt stack 0
 19570                           tosu	equ	0xFFF
 19571                           tosh	equ	0xFFE
 19572                           tosl	equ	0xFFD
 19573                           pclath	equ	0xFFA
 19574                           tblptru	equ	0xFF8
 19575                           tblptrh	equ	0xFF7
 19576                           tblptrl	equ	0xFF6
 19577                           tablat	equ	0xFF5
 19578                           prodh	equ	0xFF4
 19579                           prodl	equ	0xFF3
 19580                           intcon	equ	0xFF2
 19581                           intcon2	equ	0xFF1
 19582                           postinc0	equ	0xFEE
 19583                           wreg	equ	0xFE8
 19584                           indf2	equ	0xFDF
 19585                           postinc2	equ	0xFDE
 19586                           postdec2	equ	0xFDD
 19587                           fsr2h	equ	0xFDA
 19588                           fsr2l	equ	0xFD9
 19589                           status	equ	0xFD8
 19590                           
 19591 ;; *************** function _TMR1_SetInterruptHandler *****************
 19592 ;; Defined at:
 19593 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 19594 ;; Parameters:    Size  Location     Type
 19595 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19596 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
 19597 ;; Auto vars:     Size  Location     Type
 19598 ;;		None
 19599 ;; Return value:  Size  Location     Type
 19600 ;;                  1    wreg      void 
 19601 ;; Registers used:
 19602 ;;		wreg, status,2, status,0
 19603 ;; Tracked objects:
 19604 ;;		On entry : 0/0
 19605 ;;		On exit  : 0/0
 19606 ;;		Unchanged: 0/0
 19607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19612 ;;Total ram usage:        2 bytes
 19613 ;; Hardware stack levels used:    1
 19614 ;; Hardware stack levels required when called:    7
 19615 ;; This function calls:
 19616 ;;		Nothing
 19617 ;; This function is called by:
 19618 ;;		_TMR_ISR_Lora_Init
 19619 ;;		_TMR1_Initialize
 19620 ;; This function uses a non-reentrant model
 19621 ;;
 19622                           
 19623                           	psect	text113
 19624  00C546                     __ptext113:
 19625                           	opt stack 0
 19626  00C546                     _TMR1_SetInterruptHandler:
 19627                           	opt stack 21
 19628                           
 19629                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
 19630                           
 19631                           ;incstack = 0
 19632  00C546  C060  F3F8         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 19633  00C54A  C061  F3F9         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 19634  00C54E  0012               	return		;funcret
 19635  00C550                     __end_of_TMR1_SetInterruptHandler:
 19636                           	opt stack 0
 19637                           tosu	equ	0xFFF
 19638                           tosh	equ	0xFFE
 19639                           tosl	equ	0xFFD
 19640                           pclath	equ	0xFFA
 19641                           tblptru	equ	0xFF8
 19642                           tblptrh	equ	0xFF7
 19643                           tblptrl	equ	0xFF6
 19644                           tablat	equ	0xFF5
 19645                           prodh	equ	0xFF4
 19646                           prodl	equ	0xFF3
 19647                           intcon	equ	0xFF2
 19648                           intcon2	equ	0xFF1
 19649                           postinc0	equ	0xFEE
 19650                           wreg	equ	0xFE8
 19651                           indf2	equ	0xFDF
 19652                           postinc2	equ	0xFDE
 19653                           postdec2	equ	0xFDD
 19654                           fsr2h	equ	0xFDA
 19655                           fsr2l	equ	0xFD9
 19656                           status	equ	0xFD8
 19657                           
 19658 ;; *************** function _SystemTimerInit *****************
 19659 ;; Defined at:
 19660 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 19661 ;; Parameters:    Size  Location     Type
 19662 ;;		None
 19663 ;; Auto vars:     Size  Location     Type
 19664 ;;		None
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1    wreg      void 
 19667 ;; Registers used:
 19668 ;;		wreg, status,2
 19669 ;; Tracked objects:
 19670 ;;		On entry : 0/0
 19671 ;;		On exit  : 0/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19678 ;;Total ram usage:        0 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:    7
 19681 ;; This function calls:
 19682 ;;		Nothing
 19683 ;; This function is called by:
 19684 ;;		_LORAWAN_PlatformInit
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text114
 19689  00C644                     __ptext114:
 19690                           	opt stack 0
 19691  00C644                     _SystemTimerInit:
 19692                           	opt stack 21
 19693                           
 19694                           ;sw_timer.c: 137: allocatedTimers = 0;
 19695                           
 19696                           ;incstack = 0
 19697  00C644  0E00               	movlw	0
 19698  00C646  0100               	movlb	0	; () banked
 19699  00C648  6FFF               	movwf	_allocatedTimers& (0+255),b	;volatile
 19700                           
 19701                           ; BSR set to: 0
 19702  00C64A  0012               	return		;funcret
 19703  00C64C                     __end_of_SystemTimerInit:
 19704                           	opt stack 0
 19705                           tosu	equ	0xFFF
 19706                           tosh	equ	0xFFE
 19707                           tosl	equ	0xFFD
 19708                           pclath	equ	0xFFA
 19709                           tblptru	equ	0xFF8
 19710                           tblptrh	equ	0xFF7
 19711                           tblptrl	equ	0xFF6
 19712                           tablat	equ	0xFF5
 19713                           prodh	equ	0xFF4
 19714                           prodl	equ	0xFF3
 19715                           intcon	equ	0xFF2
 19716                           intcon2	equ	0xFF1
 19717                           postinc0	equ	0xFEE
 19718                           wreg	equ	0xFE8
 19719                           indf2	equ	0xFDF
 19720                           postinc2	equ	0xFDE
 19721                           postdec2	equ	0xFDD
 19722                           fsr2h	equ	0xFDA
 19723                           fsr2l	equ	0xFD9
 19724                           status	equ	0xFD8
 19725                           
 19726 ;; *************** function _DIO5_ISR_Lora_Init *****************
 19727 ;; Defined at:
 19728 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;		None
 19731 ;; Auto vars:     Size  Location     Type
 19732 ;;		None
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  1    wreg      void 
 19735 ;; Registers used:
 19736 ;;		None
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/0
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19746 ;;Total ram usage:        0 bytes
 19747 ;; Hardware stack levels used:    1
 19748 ;; Hardware stack levels required when called:    7
 19749 ;; This function calls:
 19750 ;;		Nothing
 19751 ;; This function is called by:
 19752 ;;		_LORAWAN_PlatformInit
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text115
 19757  00C6DA                     __ptext115:
 19758                           	opt stack 0
 19759  00C6DA                     _DIO5_ISR_Lora_Init:
 19760                           	opt stack 21
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;incstack = 0
 19764  00C6DA  0012               	return		;funcret
 19765  00C6DC                     __end_of_DIO5_ISR_Lora_Init:
 19766                           	opt stack 0
 19767                           tosu	equ	0xFFF
 19768                           tosh	equ	0xFFE
 19769                           tosl	equ	0xFFD
 19770                           pclath	equ	0xFFA
 19771                           tblptru	equ	0xFF8
 19772                           tblptrh	equ	0xFF7
 19773                           tblptrl	equ	0xFF6
 19774                           tablat	equ	0xFF5
 19775                           prodh	equ	0xFF4
 19776                           prodl	equ	0xFF3
 19777                           intcon	equ	0xFF2
 19778                           intcon2	equ	0xFF1
 19779                           postinc0	equ	0xFEE
 19780                           wreg	equ	0xFE8
 19781                           indf2	equ	0xFDF
 19782                           postinc2	equ	0xFDE
 19783                           postdec2	equ	0xFDD
 19784                           fsr2h	equ	0xFDA
 19785                           fsr2l	equ	0xFD9
 19786                           status	equ	0xFD8
 19787                           
 19788 ;; *************** function _DIO4_ISR_Lora_Init *****************
 19789 ;; Defined at:
 19790 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19791 ;; Parameters:    Size  Location     Type
 19792 ;;		None
 19793 ;; Auto vars:     Size  Location     Type
 19794 ;;		None
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  1    wreg      void 
 19797 ;; Registers used:
 19798 ;;		None
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;Total ram usage:        0 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:    7
 19811 ;; This function calls:
 19812 ;;		Nothing
 19813 ;; This function is called by:
 19814 ;;		_LORAWAN_PlatformInit
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           	psect	text116
 19819  00C6DC                     __ptext116:
 19820                           	opt stack 0
 19821  00C6DC                     _DIO4_ISR_Lora_Init:
 19822                           	opt stack 21
 19823                           
 19824                           ;incstack = 0
 19825  00C6DC  0012               	return		;funcret
 19826  00C6DE                     __end_of_DIO4_ISR_Lora_Init:
 19827                           	opt stack 0
 19828                           tosu	equ	0xFFF
 19829                           tosh	equ	0xFFE
 19830                           tosl	equ	0xFFD
 19831                           pclath	equ	0xFFA
 19832                           tblptru	equ	0xFF8
 19833                           tblptrh	equ	0xFF7
 19834                           tblptrl	equ	0xFF6
 19835                           tablat	equ	0xFF5
 19836                           prodh	equ	0xFF4
 19837                           prodl	equ	0xFF3
 19838                           intcon	equ	0xFF2
 19839                           intcon2	equ	0xFF1
 19840                           postinc0	equ	0xFEE
 19841                           wreg	equ	0xFE8
 19842                           indf2	equ	0xFDF
 19843                           postinc2	equ	0xFDE
 19844                           postdec2	equ	0xFDD
 19845                           fsr2h	equ	0xFDA
 19846                           fsr2l	equ	0xFD9
 19847                           status	equ	0xFD8
 19848                           
 19849 ;; *************** function _DIO3_ISR_Lora_Init *****************
 19850 ;; Defined at:
 19851 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19852 ;; Parameters:    Size  Location     Type
 19853 ;;		None
 19854 ;; Auto vars:     Size  Location     Type
 19855 ;;		None
 19856 ;; Return value:  Size  Location     Type
 19857 ;;                  1    wreg      void 
 19858 ;; Registers used:
 19859 ;;		None
 19860 ;; Tracked objects:
 19861 ;;		On entry : 0/0
 19862 ;;		On exit  : 0/0
 19863 ;;		Unchanged: 0/0
 19864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19869 ;;Total ram usage:        0 bytes
 19870 ;; Hardware stack levels used:    1
 19871 ;; Hardware stack levels required when called:    7
 19872 ;; This function calls:
 19873 ;;		Nothing
 19874 ;; This function is called by:
 19875 ;;		_LORAWAN_PlatformInit
 19876 ;; This function uses a non-reentrant model
 19877 ;;
 19878                           
 19879                           	psect	text117
 19880  00C6DE                     __ptext117:
 19881                           	opt stack 0
 19882  00C6DE                     _DIO3_ISR_Lora_Init:
 19883                           	opt stack 21
 19884                           
 19885                           ;incstack = 0
 19886  00C6DE  0012               	return		;funcret
 19887  00C6E0                     __end_of_DIO3_ISR_Lora_Init:
 19888                           	opt stack 0
 19889                           tosu	equ	0xFFF
 19890                           tosh	equ	0xFFE
 19891                           tosl	equ	0xFFD
 19892                           pclath	equ	0xFFA
 19893                           tblptru	equ	0xFF8
 19894                           tblptrh	equ	0xFF7
 19895                           tblptrl	equ	0xFF6
 19896                           tablat	equ	0xFF5
 19897                           prodh	equ	0xFF4
 19898                           prodl	equ	0xFF3
 19899                           intcon	equ	0xFF2
 19900                           intcon2	equ	0xFF1
 19901                           postinc0	equ	0xFEE
 19902                           wreg	equ	0xFE8
 19903                           indf2	equ	0xFDF
 19904                           postinc2	equ	0xFDE
 19905                           postdec2	equ	0xFDD
 19906                           fsr2h	equ	0xFDA
 19907                           fsr2l	equ	0xFD9
 19908                           status	equ	0xFD8
 19909                           
 19910 ;; *************** function _DIO2_ISR_Lora_Init *****************
 19911 ;; Defined at:
 19912 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 19913 ;; Parameters:    Size  Location     Type
 19914 ;;		None
 19915 ;; Auto vars:     Size  Location     Type
 19916 ;;		None
 19917 ;; Return value:  Size  Location     Type
 19918 ;;                  1    wreg      void 
 19919 ;; Registers used:
 19920 ;;		wreg, status,2, status,0, cstack
 19921 ;; Tracked objects:
 19922 ;;		On entry : 0/0
 19923 ;;		On exit  : 0/0
 19924 ;;		Unchanged: 0/0
 19925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19930 ;;Total ram usage:        0 bytes
 19931 ;; Hardware stack levels used:    1
 19932 ;; Hardware stack levels required when called:    8
 19933 ;; This function calls:
 19934 ;;		_IOCB4_SetInterruptHandler
 19935 ;; This function is called by:
 19936 ;;		_LORAWAN_PlatformInit
 19937 ;; This function uses a non-reentrant model
 19938 ;;
 19939                           
 19940                           	psect	text118
 19941  00C43C                     __ptext118:
 19942                           	opt stack 0
 19943  00C43C                     _DIO2_ISR_Lora_Init:
 19944                           	opt stack 20
 19945                           
 19946                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
 19947                           
 19948                           ;incstack = 0
 19949  00C43C  0E7A               	movlw	low _DIO2_ISR_Lora
 19950  00C43E  0100               	movlb	0	; () banked
 19951  00C440  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 19952  00C442  0EC6               	movlw	high _DIO2_ISR_Lora
 19953  00C444  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19954  00C446  ECA8  F062         	call	_IOCB4_SetInterruptHandler	;wreg free
 19955  00C44A  0012               	return		;funcret
 19956  00C44C                     __end_of_DIO2_ISR_Lora_Init:
 19957                           	opt stack 0
 19958                           tosu	equ	0xFFF
 19959                           tosh	equ	0xFFE
 19960                           tosl	equ	0xFFD
 19961                           pclath	equ	0xFFA
 19962                           tblptru	equ	0xFF8
 19963                           tblptrh	equ	0xFF7
 19964                           tblptrl	equ	0xFF6
 19965                           tablat	equ	0xFF5
 19966                           prodh	equ	0xFF4
 19967                           prodl	equ	0xFF3
 19968                           intcon	equ	0xFF2
 19969                           intcon2	equ	0xFF1
 19970                           postinc0	equ	0xFEE
 19971                           wreg	equ	0xFE8
 19972                           indf2	equ	0xFDF
 19973                           postinc2	equ	0xFDE
 19974                           postdec2	equ	0xFDD
 19975                           fsr2h	equ	0xFDA
 19976                           fsr2l	equ	0xFD9
 19977                           status	equ	0xFD8
 19978                           
 19979 ;; *************** function _IOCB4_SetInterruptHandler *****************
 19980 ;; Defined at:
 19981 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
 19982 ;; Parameters:    Size  Location     Type
 19983 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19984 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
 19985 ;; Auto vars:     Size  Location     Type
 19986 ;;		None
 19987 ;; Return value:  Size  Location     Type
 19988 ;;                  1    wreg      void 
 19989 ;; Registers used:
 19990 ;;		wreg, status,2, status,0
 19991 ;; Tracked objects:
 19992 ;;		On entry : 0/0
 19993 ;;		On exit  : 0/0
 19994 ;;		Unchanged: 0/0
 19995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20000 ;;Total ram usage:        2 bytes
 20001 ;; Hardware stack levels used:    1
 20002 ;; Hardware stack levels required when called:    7
 20003 ;; This function calls:
 20004 ;;		Nothing
 20005 ;; This function is called by:
 20006 ;;		_DIO2_ISR_Lora_Init
 20007 ;;		_PIN_MANAGER_Initialize
 20008 ;; This function uses a non-reentrant model
 20009 ;;
 20010                           
 20011                           	psect	text119
 20012  00C550                     __ptext119:
 20013                           	opt stack 0
 20014  00C550                     _IOCB4_SetInterruptHandler:
 20015                           	opt stack 21
 20016                           
 20017                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
 20018                           
 20019                           ;incstack = 0
 20020  00C550  C060  F3FA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 20021  00C554  C061  F3FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 20022  00C558  0012               	return		;funcret
 20023  00C55A                     __end_of_IOCB4_SetInterruptHandler:
 20024                           	opt stack 0
 20025                           tosu	equ	0xFFF
 20026                           tosh	equ	0xFFE
 20027                           tosl	equ	0xFFD
 20028                           pclath	equ	0xFFA
 20029                           tblptru	equ	0xFF8
 20030                           tblptrh	equ	0xFF7
 20031                           tblptrl	equ	0xFF6
 20032                           tablat	equ	0xFF5
 20033                           prodh	equ	0xFF4
 20034                           prodl	equ	0xFF3
 20035                           intcon	equ	0xFF2
 20036                           intcon2	equ	0xFF1
 20037                           postinc0	equ	0xFEE
 20038                           wreg	equ	0xFE8
 20039                           indf2	equ	0xFDF
 20040                           postinc2	equ	0xFDE
 20041                           postdec2	equ	0xFDD
 20042                           fsr2h	equ	0xFDA
 20043                           fsr2l	equ	0xFD9
 20044                           status	equ	0xFD8
 20045                           
 20046 ;; *************** function _DIO1_ISR_Lora_Init *****************
 20047 ;; Defined at:
 20048 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 20049 ;; Parameters:    Size  Location     Type
 20050 ;;		None
 20051 ;; Auto vars:     Size  Location     Type
 20052 ;;		None
 20053 ;; Return value:  Size  Location     Type
 20054 ;;                  1    wreg      void 
 20055 ;; Registers used:
 20056 ;;		wreg, status,2, status,0, cstack
 20057 ;; Tracked objects:
 20058 ;;		On entry : 0/0
 20059 ;;		On exit  : 0/0
 20060 ;;		Unchanged: 0/0
 20061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20066 ;;Total ram usage:        0 bytes
 20067 ;; Hardware stack levels used:    1
 20068 ;; Hardware stack levels required when called:    8
 20069 ;; This function calls:
 20070 ;;		_INT2_SetInterruptHandler
 20071 ;; This function is called by:
 20072 ;;		_LORAWAN_PlatformInit
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           	psect	text120
 20077  00C44C                     __ptext120:
 20078                           	opt stack 0
 20079  00C44C                     _DIO1_ISR_Lora_Init:
 20080                           	opt stack 20
 20081                           
 20082                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
 20083                           
 20084                           ;incstack = 0
 20085  00C44C  0E80               	movlw	low _DIO1_ISR_Lora
 20086  00C44E  0100               	movlb	0	; () banked
 20087  00C450  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 20088  00C452  0EC6               	movlw	high _DIO1_ISR_Lora
 20089  00C454  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20090  00C456  ECAD  F062         	call	_INT2_SetInterruptHandler	;wreg free
 20091  00C45A  0012               	return		;funcret
 20092  00C45C                     __end_of_DIO1_ISR_Lora_Init:
 20093                           	opt stack 0
 20094                           tosu	equ	0xFFF
 20095                           tosh	equ	0xFFE
 20096                           tosl	equ	0xFFD
 20097                           pclath	equ	0xFFA
 20098                           tblptru	equ	0xFF8
 20099                           tblptrh	equ	0xFF7
 20100                           tblptrl	equ	0xFF6
 20101                           tablat	equ	0xFF5
 20102                           prodh	equ	0xFF4
 20103                           prodl	equ	0xFF3
 20104                           intcon	equ	0xFF2
 20105                           intcon2	equ	0xFF1
 20106                           postinc0	equ	0xFEE
 20107                           wreg	equ	0xFE8
 20108                           indf2	equ	0xFDF
 20109                           postinc2	equ	0xFDE
 20110                           postdec2	equ	0xFDD
 20111                           fsr2h	equ	0xFDA
 20112                           fsr2l	equ	0xFD9
 20113                           status	equ	0xFD8
 20114                           
 20115 ;; *************** function _DIO0_ISR_Lora_Init *****************
 20116 ;; Defined at:
 20117 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 20118 ;; Parameters:    Size  Location     Type
 20119 ;;		None
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;		None
 20122 ;; Return value:  Size  Location     Type
 20123 ;;                  1    wreg      void 
 20124 ;; Registers used:
 20125 ;;		wreg, status,2, status,0, cstack
 20126 ;; Tracked objects:
 20127 ;;		On entry : 0/0
 20128 ;;		On exit  : 0/0
 20129 ;;		Unchanged: 0/0
 20130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20135 ;;Total ram usage:        0 bytes
 20136 ;; Hardware stack levels used:    1
 20137 ;; Hardware stack levels required when called:    8
 20138 ;; This function calls:
 20139 ;;		_INT1_SetInterruptHandler
 20140 ;; This function is called by:
 20141 ;;		_LORAWAN_PlatformInit
 20142 ;; This function uses a non-reentrant model
 20143 ;;
 20144                           
 20145                           	psect	text121
 20146  00C45C                     __ptext121:
 20147                           	opt stack 0
 20148  00C45C                     _DIO0_ISR_Lora_Init:
 20149                           	opt stack 20
 20150                           
 20151                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
 20152                           
 20153                           ;incstack = 0
 20154  00C45C  0E86               	movlw	low _DIO0_ISR_Lora
 20155  00C45E  0100               	movlb	0	; () banked
 20156  00C460  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 20157  00C462  0EC6               	movlw	high _DIO0_ISR_Lora
 20158  00C464  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20159  00C466  ECB2  F062         	call	_INT1_SetInterruptHandler	;wreg free
 20160  00C46A  0012               	return		;funcret
 20161  00C46C                     __end_of_DIO0_ISR_Lora_Init:
 20162                           	opt stack 0
 20163                           tosu	equ	0xFFF
 20164                           tosh	equ	0xFFE
 20165                           tosl	equ	0xFFD
 20166                           pclath	equ	0xFFA
 20167                           tblptru	equ	0xFF8
 20168                           tblptrh	equ	0xFF7
 20169                           tblptrl	equ	0xFF6
 20170                           tablat	equ	0xFF5
 20171                           prodh	equ	0xFF4
 20172                           prodl	equ	0xFF3
 20173                           intcon	equ	0xFF2
 20174                           intcon2	equ	0xFF1
 20175                           postinc0	equ	0xFEE
 20176                           wreg	equ	0xFE8
 20177                           indf2	equ	0xFDF
 20178                           postinc2	equ	0xFDE
 20179                           postdec2	equ	0xFDD
 20180                           fsr2h	equ	0xFDA
 20181                           fsr2l	equ	0xFD9
 20182                           status	equ	0xFD8
 20183                           
 20184 ;; *************** function _INTERRUPT_Initialize *****************
 20185 ;; Defined at:
 20186 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20187 ;; Parameters:    Size  Location     Type
 20188 ;;		None
 20189 ;; Auto vars:     Size  Location     Type
 20190 ;;		None
 20191 ;; Return value:  Size  Location     Type
 20192 ;;                  1    wreg      void 
 20193 ;; Registers used:
 20194 ;;		None
 20195 ;; Tracked objects:
 20196 ;;		On entry : 0/0
 20197 ;;		On exit  : 0/0
 20198 ;;		Unchanged: 0/0
 20199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20204 ;;Total ram usage:        0 bytes
 20205 ;; Hardware stack levels used:    1
 20206 ;; Hardware stack levels required when called:    7
 20207 ;; This function calls:
 20208 ;;		Nothing
 20209 ;; This function is called by:
 20210 ;;		_SYSTEM_Initialize
 20211 ;; This function uses a non-reentrant model
 20212 ;;
 20213                           
 20214                           	psect	text122
 20215  00C6C4                     __ptext122:
 20216                           	opt stack 0
 20217  00C6C4                     _INTERRUPT_Initialize:
 20218                           	opt stack 22
 20219                           
 20220                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
 20221                           
 20222                           ;incstack = 0
 20223  00C6C4  9ED0               	bcf	4048,7,c	;volatile
 20224  00C6C6  0012               	return		;funcret
 20225  00C6C8                     __end_of_INTERRUPT_Initialize:
 20226                           	opt stack 0
 20227                           tosu	equ	0xFFF
 20228                           tosh	equ	0xFFE
 20229                           tosl	equ	0xFFD
 20230                           pclath	equ	0xFFA
 20231                           tblptru	equ	0xFF8
 20232                           tblptrh	equ	0xFF7
 20233                           tblptrl	equ	0xFF6
 20234                           tablat	equ	0xFF5
 20235                           prodh	equ	0xFF4
 20236                           prodl	equ	0xFF3
 20237                           intcon	equ	0xFF2
 20238                           intcon2	equ	0xFF1
 20239                           postinc0	equ	0xFEE
 20240                           wreg	equ	0xFE8
 20241                           indf2	equ	0xFDF
 20242                           postinc2	equ	0xFDE
 20243                           postdec2	equ	0xFDD
 20244                           fsr2h	equ	0xFDA
 20245                           fsr2l	equ	0xFD9
 20246                           status	equ	0xFD8
 20247                           
 20248 ;; *************** function _EXT_INT_Initialize *****************
 20249 ;; Defined at:
 20250 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;		None
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;		None
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg, status,2, status,0, cstack
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20268 ;;Total ram usage:        0 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:    8
 20271 ;; This function calls:
 20272 ;;		_INT1_SetInterruptHandler
 20273 ;;		_INT2_SetInterruptHandler
 20274 ;; This function is called by:
 20275 ;;		_SYSTEM_Initialize
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text123
 20280  00BBDC                     __ptext123:
 20281                           	opt stack 0
 20282  00BBDC                     _EXT_INT_Initialize:
 20283                           	opt stack 21
 20284                           
 20285                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 20286                           
 20287                           ;incstack = 0
 20288  00BBDC  90F0               	bcf	intcon3,0,c	;volatile
 20289                           
 20290                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
 20291  00BBDE  8AF1               	bsf	intcon2,5,c	;volatile
 20292                           
 20293                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 20294  00BBE0  0EEA               	movlw	low _INT1_DefaultInterruptHandler
 20295  00BBE2  0100               	movlb	0	; () banked
 20296  00BBE4  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 20297  00BBE6  0EC6               	movlw	high _INT1_DefaultInterruptHandler
 20298  00BBE8  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20299  00BBEA  ECB2  F062         	call	_INT1_SetInterruptHandler	;wreg free
 20300                           
 20301                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
 20302  00BBEE  86F0               	bsf	intcon3,3,c	;volatile
 20303                           
 20304                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
 20305  00BBF0  92F0               	bcf	intcon3,1,c	;volatile
 20306                           
 20307                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
 20308  00BBF2  88F1               	bsf	intcon2,4,c	;volatile
 20309                           
 20310                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 20311  00BBF4  0EE8               	movlw	low _INT2_DefaultInterruptHandler
 20312  00BBF6  0100               	movlb	0	; () banked
 20313  00BBF8  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 20314  00BBFA  0EC6               	movlw	high _INT2_DefaultInterruptHandler
 20315  00BBFC  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20316  00BBFE  ECAD  F062         	call	_INT2_SetInterruptHandler	;wreg free
 20317                           
 20318                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
 20319  00BC02  88F0               	bsf	intcon3,4,c	;volatile
 20320  00BC04  0012               	return		;funcret
 20321  00BC06                     __end_of_EXT_INT_Initialize:
 20322                           	opt stack 0
 20323                           tosu	equ	0xFFF
 20324                           tosh	equ	0xFFE
 20325                           tosl	equ	0xFFD
 20326                           pclath	equ	0xFFA
 20327                           tblptru	equ	0xFF8
 20328                           tblptrh	equ	0xFF7
 20329                           tblptrl	equ	0xFF6
 20330                           tablat	equ	0xFF5
 20331                           prodh	equ	0xFF4
 20332                           prodl	equ	0xFF3
 20333                           intcon	equ	0xFF2
 20334                           intcon2	equ	0xFF1
 20335                           intcon3	equ	0xFF0
 20336                           postinc0	equ	0xFEE
 20337                           wreg	equ	0xFE8
 20338                           indf2	equ	0xFDF
 20339                           postinc2	equ	0xFDE
 20340                           postdec2	equ	0xFDD
 20341                           fsr2h	equ	0xFDA
 20342                           fsr2l	equ	0xFD9
 20343                           status	equ	0xFD8
 20344                           
 20345 ;; *************** function _INT2_SetInterruptHandler *****************
 20346 ;; Defined at:
 20347 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20350 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;		None
 20353 ;; Return value:  Size  Location     Type
 20354 ;;                  1    wreg      void 
 20355 ;; Registers used:
 20356 ;;		wreg, status,2, status,0
 20357 ;; Tracked objects:
 20358 ;;		On entry : 0/0
 20359 ;;		On exit  : 0/0
 20360 ;;		Unchanged: 0/0
 20361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20366 ;;Total ram usage:        2 bytes
 20367 ;; Hardware stack levels used:    1
 20368 ;; Hardware stack levels required when called:    7
 20369 ;; This function calls:
 20370 ;;		Nothing
 20371 ;; This function is called by:
 20372 ;;		_DIO1_ISR_Lora_Init
 20373 ;;		_EXT_INT_Initialize
 20374 ;; This function uses a non-reentrant model
 20375 ;;
 20376                           
 20377                           	psect	text124
 20378  00C55A                     __ptext124:
 20379                           	opt stack 0
 20380  00C55A                     _INT2_SetInterruptHandler:
 20381                           	opt stack 20
 20382                           
 20383                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 20384                           
 20385                           ;incstack = 0
 20386  00C55A  C060  F2FD         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 20387  00C55E  C061  F2FE         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 20388  00C562  0012               	return		;funcret
 20389  00C564                     __end_of_INT2_SetInterruptHandler:
 20390                           	opt stack 0
 20391                           tosu	equ	0xFFF
 20392                           tosh	equ	0xFFE
 20393                           tosl	equ	0xFFD
 20394                           pclath	equ	0xFFA
 20395                           tblptru	equ	0xFF8
 20396                           tblptrh	equ	0xFF7
 20397                           tblptrl	equ	0xFF6
 20398                           tablat	equ	0xFF5
 20399                           prodh	equ	0xFF4
 20400                           prodl	equ	0xFF3
 20401                           intcon	equ	0xFF2
 20402                           intcon2	equ	0xFF1
 20403                           intcon3	equ	0xFF0
 20404                           postinc0	equ	0xFEE
 20405                           wreg	equ	0xFE8
 20406                           indf2	equ	0xFDF
 20407                           postinc2	equ	0xFDE
 20408                           postdec2	equ	0xFDD
 20409                           fsr2h	equ	0xFDA
 20410                           fsr2l	equ	0xFD9
 20411                           status	equ	0xFD8
 20412                           
 20413 ;; *************** function _INT1_SetInterruptHandler *****************
 20414 ;; Defined at:
 20415 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20418 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
 20419 ;; Auto vars:     Size  Location     Type
 20420 ;;		None
 20421 ;; Return value:  Size  Location     Type
 20422 ;;                  1    wreg      void 
 20423 ;; Registers used:
 20424 ;;		wreg, status,2, status,0
 20425 ;; Tracked objects:
 20426 ;;		On entry : 0/0
 20427 ;;		On exit  : 0/0
 20428 ;;		Unchanged: 0/0
 20429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20434 ;;Total ram usage:        2 bytes
 20435 ;; Hardware stack levels used:    1
 20436 ;; Hardware stack levels required when called:    7
 20437 ;; This function calls:
 20438 ;;		Nothing
 20439 ;; This function is called by:
 20440 ;;		_DIO0_ISR_Lora_Init
 20441 ;;		_EXT_INT_Initialize
 20442 ;; This function uses a non-reentrant model
 20443 ;;
 20444                           
 20445                           	psect	text125
 20446  00C564                     __ptext125:
 20447                           	opt stack 0
 20448  00C564                     _INT1_SetInterruptHandler:
 20449                           	opt stack 20
 20450                           
 20451                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 20452                           
 20453                           ;incstack = 0
 20454  00C564  C060  F1F7         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 20455  00C568  C061  F1F8         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 20456  00C56C  0012               	return		;funcret
 20457  00C56E                     __end_of_INT1_SetInterruptHandler:
 20458                           	opt stack 0
 20459                           tosu	equ	0xFFF
 20460                           tosh	equ	0xFFE
 20461                           tosl	equ	0xFFD
 20462                           pclath	equ	0xFFA
 20463                           tblptru	equ	0xFF8
 20464                           tblptrh	equ	0xFF7
 20465                           tblptrl	equ	0xFF6
 20466                           tablat	equ	0xFF5
 20467                           prodh	equ	0xFF4
 20468                           prodl	equ	0xFF3
 20469                           intcon	equ	0xFF2
 20470                           intcon2	equ	0xFF1
 20471                           intcon3	equ	0xFF0
 20472                           postinc0	equ	0xFEE
 20473                           wreg	equ	0xFE8
 20474                           indf2	equ	0xFDF
 20475                           postinc2	equ	0xFDE
 20476                           postdec2	equ	0xFDD
 20477                           fsr2h	equ	0xFDA
 20478                           fsr2l	equ	0xFD9
 20479                           status	equ	0xFD8
 20480                           
 20481 ;; *************** function _EUSART1_Initialize *****************
 20482 ;; Defined at:
 20483 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 20484 ;; Parameters:    Size  Location     Type
 20485 ;;		None
 20486 ;; Auto vars:     Size  Location     Type
 20487 ;;		None
 20488 ;; Return value:  Size  Location     Type
 20489 ;;                  1    wreg      void 
 20490 ;; Registers used:
 20491 ;;		wreg, status,2, status,0, cstack
 20492 ;; Tracked objects:
 20493 ;;		On entry : 0/0
 20494 ;;		On exit  : 0/0
 20495 ;;		Unchanged: 0/0
 20496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20501 ;;Total ram usage:        0 bytes
 20502 ;; Hardware stack levels used:    1
 20503 ;; Hardware stack levels required when called:    8
 20504 ;; This function calls:
 20505 ;;		_EUSART1_SetErrorHandler
 20506 ;;		_EUSART1_SetFramingErrorHandler
 20507 ;;		_EUSART1_SetOverrunErrorHandler
 20508 ;; This function is called by:
 20509 ;;		_SYSTEM_Initialize
 20510 ;; This function uses a non-reentrant model
 20511 ;;
 20512                           
 20513                           	psect	text126
 20514  00B2FA                     __ptext126:
 20515                           	opt stack 0
 20516  00B2FA                     _EUSART1_Initialize:
 20517                           	opt stack 21
 20518                           
 20519                           ;eusart1.c: 71: BAUDCON1 = 0x08;
 20520                           
 20521                           ;incstack = 0
 20522  00B2FA  0E08               	movlw	8
 20523  00B2FC  6EB8               	movwf	4024,c	;volatile
 20524                           
 20525                           ;eusart1.c: 74: RCSTA1 = 0x90;
 20526  00B2FE  0E90               	movlw	144
 20527  00B300  6EAB               	movwf	4011,c	;volatile
 20528                           
 20529                           ;eusart1.c: 77: TXSTA1 = 0x24;
 20530  00B302  0E24               	movlw	36
 20531  00B304  6EAC               	movwf	4012,c	;volatile
 20532                           
 20533                           ;eusart1.c: 80: SPBRG1 = 0xA0;
 20534  00B306  0EA0               	movlw	160
 20535  00B308  6EAF               	movwf	4015,c	;volatile
 20536                           
 20537                           ;eusart1.c: 83: SPBRGH1 = 0x01;
 20538  00B30A  0E01               	movlw	1
 20539  00B30C  6EB0               	movwf	4016,c	;volatile
 20540                           
 20541                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
 20542  00B30E  0E00               	movlw	0
 20543  00B310  0100               	movlb	0	; () banked
 20544  00B312  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 20545  00B314  0E00               	movlw	0
 20546  00B316  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 20547  00B318  ECBC  F062         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 20548                           
 20549                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
 20550  00B31C  0E00               	movlw	0
 20551  00B31E  0100               	movlb	0	; () banked
 20552  00B320  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 20553  00B322  0E00               	movlw	0
 20554  00B324  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 20555  00B326  ECB7  F062         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 20556                           
 20557                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
 20558  00B32A  0E00               	movlw	0
 20559  00B32C  0100               	movlb	0	; () banked
 20560  00B32E  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 20561  00B330  0E00               	movlw	0
 20562  00B332  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 20563  00B334  ECC1  F062         	call	_EUSART1_SetErrorHandler	;wreg free
 20564                           
 20565                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
 20566  00B338  0E00               	movlw	0
 20567  00B33A  0101               	movlb	1	; () banked
 20568  00B33C  6F31               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 20569                           
 20570                           ; BSR set to: 1
 20571  00B33E  0012               	return		;funcret
 20572  00B340                     __end_of_EUSART1_Initialize:
 20573                           	opt stack 0
 20574                           tosu	equ	0xFFF
 20575                           tosh	equ	0xFFE
 20576                           tosl	equ	0xFFD
 20577                           pclath	equ	0xFFA
 20578                           tblptru	equ	0xFF8
 20579                           tblptrh	equ	0xFF7
 20580                           tblptrl	equ	0xFF6
 20581                           tablat	equ	0xFF5
 20582                           prodh	equ	0xFF4
 20583                           prodl	equ	0xFF3
 20584                           intcon	equ	0xFF2
 20585                           intcon2	equ	0xFF1
 20586                           intcon3	equ	0xFF0
 20587                           postinc0	equ	0xFEE
 20588                           wreg	equ	0xFE8
 20589                           indf2	equ	0xFDF
 20590                           postinc2	equ	0xFDE
 20591                           postdec2	equ	0xFDD
 20592                           fsr2h	equ	0xFDA
 20593                           fsr2l	equ	0xFD9
 20594                           status	equ	0xFD8
 20595                           
 20596 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 20597 ;; Defined at:
 20598 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20601 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 20602 ;; Auto vars:     Size  Location     Type
 20603 ;;		None
 20604 ;; Return value:  Size  Location     Type
 20605 ;;                  1    wreg      void 
 20606 ;; Registers used:
 20607 ;;		wreg, status,2, status,0
 20608 ;; Tracked objects:
 20609 ;;		On entry : 0/0
 20610 ;;		On exit  : 0/0
 20611 ;;		Unchanged: 0/0
 20612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20617 ;;Total ram usage:        2 bytes
 20618 ;; Hardware stack levels used:    1
 20619 ;; Hardware stack levels required when called:    7
 20620 ;; This function calls:
 20621 ;;		Nothing
 20622 ;; This function is called by:
 20623 ;;		_EUSART1_Initialize
 20624 ;; This function uses a non-reentrant model
 20625 ;;
 20626                           
 20627                           	psect	text127
 20628  00C56E                     __ptext127:
 20629                           	opt stack 0
 20630  00C56E                     _EUSART1_SetOverrunErrorHandler:
 20631                           	opt stack 21
 20632                           
 20633                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
 20634                           
 20635                           ; BSR set to: 1
 20636                           ;incstack = 0
 20637  00C56E  C060  F3F4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 20638  00C572  C061  F3F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 20639  00C576  0012               	return		;funcret
 20640  00C578                     __end_of_EUSART1_SetOverrunErrorHandler:
 20641                           	opt stack 0
 20642                           tosu	equ	0xFFF
 20643                           tosh	equ	0xFFE
 20644                           tosl	equ	0xFFD
 20645                           pclath	equ	0xFFA
 20646                           tblptru	equ	0xFF8
 20647                           tblptrh	equ	0xFF7
 20648                           tblptrl	equ	0xFF6
 20649                           tablat	equ	0xFF5
 20650                           prodh	equ	0xFF4
 20651                           prodl	equ	0xFF3
 20652                           intcon	equ	0xFF2
 20653                           intcon2	equ	0xFF1
 20654                           intcon3	equ	0xFF0
 20655                           postinc0	equ	0xFEE
 20656                           wreg	equ	0xFE8
 20657                           indf2	equ	0xFDF
 20658                           postinc2	equ	0xFDE
 20659                           postdec2	equ	0xFDD
 20660                           fsr2h	equ	0xFDA
 20661                           fsr2l	equ	0xFD9
 20662                           status	equ	0xFD8
 20663                           
 20664 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 20665 ;; Defined at:
 20666 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20669 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;		None
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  1    wreg      void 
 20674 ;; Registers used:
 20675 ;;		wreg, status,2, status,0
 20676 ;; Tracked objects:
 20677 ;;		On entry : 0/0
 20678 ;;		On exit  : 0/0
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20685 ;;Total ram usage:        2 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    7
 20688 ;; This function calls:
 20689 ;;		Nothing
 20690 ;; This function is called by:
 20691 ;;		_EUSART1_Initialize
 20692 ;; This function uses a non-reentrant model
 20693 ;;
 20694                           
 20695                           	psect	text128
 20696  00C578                     __ptext128:
 20697                           	opt stack 0
 20698  00C578                     _EUSART1_SetFramingErrorHandler:
 20699                           	opt stack 21
 20700                           
 20701                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
 20702                           
 20703                           ;incstack = 0
 20704  00C578  C060  F3F6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 20705  00C57C  C061  F3F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 20706  00C580  0012               	return		;funcret
 20707  00C582                     __end_of_EUSART1_SetFramingErrorHandler:
 20708                           	opt stack 0
 20709                           tosu	equ	0xFFF
 20710                           tosh	equ	0xFFE
 20711                           tosl	equ	0xFFD
 20712                           pclath	equ	0xFFA
 20713                           tblptru	equ	0xFF8
 20714                           tblptrh	equ	0xFF7
 20715                           tblptrl	equ	0xFF6
 20716                           tablat	equ	0xFF5
 20717                           prodh	equ	0xFF4
 20718                           prodl	equ	0xFF3
 20719                           intcon	equ	0xFF2
 20720                           intcon2	equ	0xFF1
 20721                           intcon3	equ	0xFF0
 20722                           postinc0	equ	0xFEE
 20723                           wreg	equ	0xFE8
 20724                           indf2	equ	0xFDF
 20725                           postinc2	equ	0xFDE
 20726                           postdec2	equ	0xFDD
 20727                           fsr2h	equ	0xFDA
 20728                           fsr2l	equ	0xFD9
 20729                           status	equ	0xFD8
 20730                           
 20731 ;; *************** function _EUSART1_SetErrorHandler *****************
 20732 ;; Defined at:
 20733 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 20734 ;; Parameters:    Size  Location     Type
 20735 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 20736 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;		None
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      void 
 20741 ;; Registers used:
 20742 ;;		wreg, status,2, status,0
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20752 ;;Total ram usage:        2 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    7
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_EUSART1_Initialize
 20759 ;; This function uses a non-reentrant model
 20760 ;;
 20761                           
 20762                           	psect	text129
 20763  00C582                     __ptext129:
 20764                           	opt stack 0
 20765  00C582                     _EUSART1_SetErrorHandler:
 20766                           	opt stack 21
 20767                           
 20768                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
 20769                           
 20770                           ;incstack = 0
 20771  00C582  C060  F3F2         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 20772  00C586  C061  F3F3         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 20773  00C58A  0012               	return		;funcret
 20774  00C58C                     __end_of_EUSART1_SetErrorHandler:
 20775                           	opt stack 0
 20776                           tosu	equ	0xFFF
 20777                           tosh	equ	0xFFE
 20778                           tosl	equ	0xFFD
 20779                           pclath	equ	0xFFA
 20780                           tblptru	equ	0xFF8
 20781                           tblptrh	equ	0xFF7
 20782                           tblptrl	equ	0xFF6
 20783                           tablat	equ	0xFF5
 20784                           prodh	equ	0xFF4
 20785                           prodl	equ	0xFF3
 20786                           intcon	equ	0xFF2
 20787                           intcon2	equ	0xFF1
 20788                           intcon3	equ	0xFF0
 20789                           postinc0	equ	0xFEE
 20790                           wreg	equ	0xFE8
 20791                           indf2	equ	0xFDF
 20792                           postinc2	equ	0xFDE
 20793                           postdec2	equ	0xFDD
 20794                           fsr2h	equ	0xFDA
 20795                           fsr2l	equ	0xFD9
 20796                           status	equ	0xFD8
 20797                           
 20798 ;; *************** function _CCP5_Initialize *****************
 20799 ;; Defined at:
 20800 ;;		line 49 in file "mcc_generated_files/ccp5.c"
 20801 ;; Parameters:    Size  Location     Type
 20802 ;;		None
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;		None
 20805 ;; Return value:  Size  Location     Type
 20806 ;;                  1    wreg      void 
 20807 ;; Registers used:
 20808 ;;		wreg, status,2
 20809 ;; Tracked objects:
 20810 ;;		On entry : 0/0
 20811 ;;		On exit  : 0/0
 20812 ;;		Unchanged: 0/0
 20813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20818 ;;Total ram usage:        0 bytes
 20819 ;; Hardware stack levels used:    1
 20820 ;; Hardware stack levels required when called:    7
 20821 ;; This function calls:
 20822 ;;		Nothing
 20823 ;; This function is called by:
 20824 ;;		_SYSTEM_Initialize
 20825 ;; This function uses a non-reentrant model
 20826 ;;
 20827                           
 20828                           	psect	text130
 20829  00C46C                     __ptext130:
 20830                           	opt stack 0
 20831  00C46C                     _CCP5_Initialize:
 20832                           	opt stack 22
 20833                           
 20834                           ;ccp5.c: 53: CCP5CON = 0x00;
 20835                           
 20836                           ;incstack = 0
 20837  00C46C  0E00               	movlw	0
 20838  00C46E  010F               	movlb	15	; () banked
 20839  00C470  6F54               	movwf	84,b	;volatile
 20840                           
 20841                           ;ccp5.c: 56: CCPR5L = 0x00;
 20842  00C472  0E00               	movlw	0
 20843  00C474  6F55               	movwf	85,b	;volatile
 20844                           
 20845                           ;ccp5.c: 59: CCPR5H = 0x00;
 20846  00C476  0E00               	movlw	0
 20847  00C478  6F56               	movwf	86,b	;volatile
 20848                           
 20849                           ; BSR set to: 15
 20850  00C47A  0012               	return		;funcret
 20851  00C47C                     __end_of_CCP5_Initialize:
 20852                           	opt stack 0
 20853                           tosu	equ	0xFFF
 20854                           tosh	equ	0xFFE
 20855                           tosl	equ	0xFFD
 20856                           pclath	equ	0xFFA
 20857                           tblptru	equ	0xFF8
 20858                           tblptrh	equ	0xFF7
 20859                           tblptrl	equ	0xFF6
 20860                           tablat	equ	0xFF5
 20861                           prodh	equ	0xFF4
 20862                           prodl	equ	0xFF3
 20863                           intcon	equ	0xFF2
 20864                           intcon2	equ	0xFF1
 20865                           intcon3	equ	0xFF0
 20866                           postinc0	equ	0xFEE
 20867                           wreg	equ	0xFE8
 20868                           indf2	equ	0xFDF
 20869                           postinc2	equ	0xFDE
 20870                           postdec2	equ	0xFDD
 20871                           fsr2h	equ	0xFDA
 20872                           fsr2l	equ	0xFD9
 20873                           status	equ	0xFD8
 20874                           
 20875 ;; *************** function _ADC_Initialize *****************
 20876 ;; Defined at:
 20877 ;;		line 60 in file "mcc_generated_files/adc.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;		None
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;		None
 20882 ;; Return value:  Size  Location     Type
 20883 ;;                  1    wreg      void 
 20884 ;; Registers used:
 20885 ;;		wreg, status,2
 20886 ;; Tracked objects:
 20887 ;;		On entry : 0/0
 20888 ;;		On exit  : 0/0
 20889 ;;		Unchanged: 0/0
 20890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20895 ;;Total ram usage:        0 bytes
 20896 ;; Hardware stack levels used:    1
 20897 ;; Hardware stack levels required when called:    7
 20898 ;; This function calls:
 20899 ;;		Nothing
 20900 ;; This function is called by:
 20901 ;;		_SYSTEM_Initialize
 20902 ;; This function uses a non-reentrant model
 20903 ;;
 20904                           
 20905                           	psect	text131
 20906  00C2A6                     __ptext131:
 20907                           	opt stack 0
 20908  00C2A6                     _ADC_Initialize:
 20909                           	opt stack 22
 20910                           
 20911                           ;adc.c: 65: ADCON0 = 0x01;
 20912                           
 20913                           ; BSR set to: 15
 20914                           ;incstack = 0
 20915  00C2A6  0E01               	movlw	1
 20916  00C2A8  6EC2               	movwf	4034,c	;volatile
 20917                           
 20918                           ;adc.c: 68: ADCON1 = 0x00;
 20919  00C2AA  0E00               	movlw	0
 20920  00C2AC  6EC1               	movwf	4033,c	;volatile
 20921                           
 20922                           ;adc.c: 71: ADCON2 = 0x85;
 20923  00C2AE  0E85               	movlw	133
 20924  00C2B0  6EC0               	movwf	4032,c	;volatile
 20925                           
 20926                           ;adc.c: 74: ADRESL = 0x00;
 20927  00C2B2  0E00               	movlw	0
 20928  00C2B4  6EC3               	movwf	4035,c	;volatile
 20929                           
 20930                           ;adc.c: 77: ADRESH = 0x00;
 20931  00C2B6  0E00               	movlw	0
 20932  00C2B8  6EC4               	movwf	4036,c	;volatile
 20933  00C2BA  0012               	return		;funcret
 20934  00C2BC                     __end_of_ADC_Initialize:
 20935                           	opt stack 0
 20936                           tosu	equ	0xFFF
 20937                           tosh	equ	0xFFE
 20938                           tosl	equ	0xFFD
 20939                           pclath	equ	0xFFA
 20940                           tblptru	equ	0xFF8
 20941                           tblptrh	equ	0xFF7
 20942                           tblptrl	equ	0xFF6
 20943                           tablat	equ	0xFF5
 20944                           prodh	equ	0xFF4
 20945                           prodl	equ	0xFF3
 20946                           intcon	equ	0xFF2
 20947                           intcon2	equ	0xFF1
 20948                           intcon3	equ	0xFF0
 20949                           postinc0	equ	0xFEE
 20950                           wreg	equ	0xFE8
 20951                           indf2	equ	0xFDF
 20952                           postinc2	equ	0xFDE
 20953                           postdec2	equ	0xFDD
 20954                           fsr2h	equ	0xFDA
 20955                           fsr2l	equ	0xFD9
 20956                           status	equ	0xFD8
 20957                           
 20958 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
 20959 ;; Defined at:
 20960 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
 20963 ;;		 -> nwkSessionKey(16), 
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1    wreg      void 
 20968 ;; Registers used:
 20969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/0
 20972 ;;		On exit  : 0/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20979 ;;Total ram usage:        2 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:    8
 20982 ;; This function calls:
 20983 ;;		_memcpy
 20984 ;; This function is called by:
 20985 ;;		_main
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text132
 20990  00BA9C                     __ptext132:
 20991                           	opt stack 0
 20992  00BA9C                     _LORAWAN_SetNetworkSessionKey:
 20993                           	opt stack 22
 20994                           
 20995                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
 20996                           
 20997                           ;incstack = 0
 20998  00BA9C  0100               	movlb	0	; () banked
 20999  00BA9E  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
 21000  00BAA0  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
 21001  00BAA2  B4D8               	btfsc	status,2,c
 21002  00BAA4  0012               	return	
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;lorawan.c: 382: {
 21006                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
 21007  00BAA6  0E26               	movlw	low (_loRa+34)
 21008  00BAA8  6F60               	movwf	memcpy@d1& (0+255),b
 21009  00BAAA  0E02               	movlw	high (_loRa+34)
 21010  00BAAC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21011  00BAAE  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
 21012  00BAB2  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
 21013  00BAB6  0E00               	movlw	0
 21014  00BAB8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21015  00BABA  0E10               	movlw	16
 21016  00BABC  6F64               	movwf	memcpy@n& (0+255),b
 21017  00BABE  ECA9  F055         	call	_memcpy	;wreg free
 21018                           
 21019                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
 21020  00BAC2  0102               	movlb	2	; () banked
 21021  00BAC4  89A9               	bsf	(_loRa+165)& (0+255),4,b
 21022                           
 21023                           ; BSR set to: 2
 21024                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
 21025  00BAC6  9906               	bcf	(_loRa+2)& (0+255),4,b
 21026  00BAC8  0012               	return	
 21027  00BACA                     __end_of_LORAWAN_SetNetworkSessionKey:
 21028                           	opt stack 0
 21029                           tosu	equ	0xFFF
 21030                           tosh	equ	0xFFE
 21031                           tosl	equ	0xFFD
 21032                           pclath	equ	0xFFA
 21033                           tblptru	equ	0xFF8
 21034                           tblptrh	equ	0xFF7
 21035                           tblptrl	equ	0xFF6
 21036                           tablat	equ	0xFF5
 21037                           prodh	equ	0xFF4
 21038                           prodl	equ	0xFF3
 21039                           intcon	equ	0xFF2
 21040                           intcon2	equ	0xFF1
 21041                           intcon3	equ	0xFF0
 21042                           postinc0	equ	0xFEE
 21043                           wreg	equ	0xFE8
 21044                           indf2	equ	0xFDF
 21045                           postinc2	equ	0xFDE
 21046                           postdec2	equ	0xFDD
 21047                           fsr2h	equ	0xFDA
 21048                           fsr2l	equ	0xFD9
 21049                           status	equ	0xFD8
 21050                           
 21051 ;; *************** function _LORAWAN_SetDeviceEui *****************
 21052 ;; Defined at:
 21053 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21054 ;; Parameters:    Size  Location     Type
 21055 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
 21056 ;;		 -> deviceEUI(8), 
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;		None
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21071 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21072 ;;Total ram usage:        2 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:    8
 21075 ;; This function calls:
 21076 ;;		_memcpy
 21077 ;; This function is called by:
 21078 ;;		_main
 21079 ;; This function uses a non-reentrant model
 21080 ;;
 21081                           
 21082                           	psect	text133
 21083  00BACA                     __ptext133:
 21084                           	opt stack 0
 21085  00BACA                     _LORAWAN_SetDeviceEui:
 21086                           	opt stack 22
 21087                           
 21088                           ;lorawan.c: 339: if (deviceEuiNew != (0))
 21089                           
 21090                           ;incstack = 0
 21091  00BACA  0100               	movlb	0	; () banked
 21092  00BACC  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
 21093  00BACE  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
 21094  00BAD0  B4D8               	btfsc	status,2,c
 21095  00BAD2  0012               	return	
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;lorawan.c: 340: {
 21099                           ;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, deviceEuiNew, sizeof
      +                          (loRa.activationParameters.deviceEui) );
 21100  00BAD4  0E5E               	movlw	low (_loRa+90)
 21101  00BAD6  6F60               	movwf	memcpy@d1& (0+255),b
 21102  00BAD8  0E02               	movlw	high (_loRa+90)
 21103  00BADA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21104  00BADC  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
 21105  00BAE0  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
 21106  00BAE4  0E00               	movlw	0
 21107  00BAE6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21108  00BAE8  0E08               	movlw	8
 21109  00BAEA  6F64               	movwf	memcpy@n& (0+255),b
 21110  00BAEC  ECA9  F055         	call	_memcpy	;wreg free
 21111                           
 21112                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
 21113  00BAF0  0102               	movlb	2	; () banked
 21114  00BAF2  81A9               	bsf	(_loRa+165)& (0+255),0,b
 21115                           
 21116                           ; BSR set to: 2
 21117                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
 21118  00BAF4  9906               	bcf	(_loRa+2)& (0+255),4,b
 21119  00BAF6  0012               	return	
 21120  00BAF8                     __end_of_LORAWAN_SetDeviceEui:
 21121                           	opt stack 0
 21122                           tosu	equ	0xFFF
 21123                           tosh	equ	0xFFE
 21124                           tosl	equ	0xFFD
 21125                           pclath	equ	0xFFA
 21126                           tblptru	equ	0xFF8
 21127                           tblptrh	equ	0xFF7
 21128                           tblptrl	equ	0xFF6
 21129                           tablat	equ	0xFF5
 21130                           prodh	equ	0xFF4
 21131                           prodl	equ	0xFF3
 21132                           intcon	equ	0xFF2
 21133                           intcon2	equ	0xFF1
 21134                           intcon3	equ	0xFF0
 21135                           postinc0	equ	0xFEE
 21136                           wreg	equ	0xFE8
 21137                           indf2	equ	0xFDF
 21138                           postinc2	equ	0xFDE
 21139                           postdec2	equ	0xFDD
 21140                           fsr2h	equ	0xFDA
 21141                           fsr2l	equ	0xFD9
 21142                           status	equ	0xFD8
 21143                           
 21144 ;; *************** function _LORAWAN_SetDeviceAddress *****************
 21145 ;; Defined at:
 21146 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
 21149 ;; Auto vars:     Size  Location     Type
 21150 ;;		None
 21151 ;; Return value:  Size  Location     Type
 21152 ;;                  1    wreg      void 
 21153 ;; Registers used:
 21154 ;;		None
 21155 ;; Tracked objects:
 21156 ;;		On entry : 0/0
 21157 ;;		On exit  : 0/0
 21158 ;;		Unchanged: 0/0
 21159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21164 ;;Total ram usage:        4 bytes
 21165 ;; Hardware stack levels used:    1
 21166 ;; Hardware stack levels required when called:    7
 21167 ;; This function calls:
 21168 ;;		Nothing
 21169 ;; This function is called by:
 21170 ;;		_main
 21171 ;; This function uses a non-reentrant model
 21172 ;;
 21173                           
 21174                           	psect	text134
 21175  00C21C                     __ptext134:
 21176                           	opt stack 0
 21177  00C21C                     _LORAWAN_SetDeviceAddress:
 21178                           	opt stack 23
 21179                           
 21180                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
 21181                           
 21182                           ;incstack = 0
 21183  00C21C  C060  F222         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
 21184  00C220  C061  F223         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
 21185  00C224  C062  F224         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
 21186  00C228  C063  F225         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
 21187                           
 21188                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
 21189  00C22C  0102               	movlb	2	; () banked
 21190  00C22E  85A9               	bsf	(_loRa+165)& (0+255),2,b
 21191                           
 21192                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
 21193  00C230  9906               	bcf	(_loRa+2)& (0+255),4,b
 21194                           
 21195                           ; BSR set to: 2
 21196  00C232  0012               	return		;funcret
 21197  00C234                     __end_of_LORAWAN_SetDeviceAddress:
 21198                           	opt stack 0
 21199                           tosu	equ	0xFFF
 21200                           tosh	equ	0xFFE
 21201                           tosl	equ	0xFFD
 21202                           pclath	equ	0xFFA
 21203                           tblptru	equ	0xFF8
 21204                           tblptrh	equ	0xFF7
 21205                           tblptrl	equ	0xFF6
 21206                           tablat	equ	0xFF5
 21207                           prodh	equ	0xFF4
 21208                           prodl	equ	0xFF3
 21209                           intcon	equ	0xFF2
 21210                           intcon2	equ	0xFF1
 21211                           intcon3	equ	0xFF0
 21212                           postinc0	equ	0xFEE
 21213                           wreg	equ	0xFE8
 21214                           indf2	equ	0xFDF
 21215                           postinc2	equ	0xFDE
 21216                           postdec2	equ	0xFDD
 21217                           fsr2h	equ	0xFDA
 21218                           fsr2l	equ	0xFD9
 21219                           status	equ	0xFD8
 21220                           
 21221 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
 21222 ;; Defined at:
 21223 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
 21226 ;;		 -> appSessionKey(16), 
 21227 ;; Auto vars:     Size  Location     Type
 21228 ;;		None
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  1    wreg      void 
 21231 ;; Registers used:
 21232 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21233 ;; Tracked objects:
 21234 ;;		On entry : 0/0
 21235 ;;		On exit  : 0/0
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21242 ;;Total ram usage:        2 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; Hardware stack levels required when called:    8
 21245 ;; This function calls:
 21246 ;;		_memcpy
 21247 ;; This function is called by:
 21248 ;;		_main
 21249 ;; This function uses a non-reentrant model
 21250 ;;
 21251                           
 21252                           	psect	text135
 21253  00BAF8                     __ptext135:
 21254                           	opt stack 0
 21255  00BAF8                     _LORAWAN_SetApplicationSessionKey:
 21256                           	opt stack 22
 21257                           
 21258                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
 21259                           
 21260                           ; BSR set to: 2
 21261                           ;incstack = 0
 21262  00BAF8  0100               	movlb	0	; () banked
 21263  00BAFA  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
 21264  00BAFC  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
 21265  00BAFE  B4D8               	btfsc	status,2,c
 21266  00BB00  0012               	return	
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;lorawan.c: 397: {
 21270                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
 21271  00BB02  0E36               	movlw	low (_loRa+50)
 21272  00BB04  6F60               	movwf	memcpy@d1& (0+255),b
 21273  00BB06  0E02               	movlw	high (_loRa+50)
 21274  00BB08  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21275  00BB0A  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
 21276  00BB0E  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
 21277  00BB12  0E00               	movlw	0
 21278  00BB14  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21279  00BB16  0E10               	movlw	16
 21280  00BB18  6F64               	movwf	memcpy@n& (0+255),b
 21281  00BB1A  ECA9  F055         	call	_memcpy	;wreg free
 21282                           
 21283                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
 21284  00BB1E  0102               	movlb	2	; () banked
 21285  00BB20  8BA9               	bsf	(_loRa+165)& (0+255),5,b
 21286                           
 21287                           ; BSR set to: 2
 21288                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
 21289  00BB22  9906               	bcf	(_loRa+2)& (0+255),4,b
 21290  00BB24  0012               	return	
 21291  00BB26                     __end_of_LORAWAN_SetApplicationSessionKey:
 21292                           	opt stack 0
 21293                           tosu	equ	0xFFF
 21294                           tosh	equ	0xFFE
 21295                           tosl	equ	0xFFD
 21296                           pclath	equ	0xFFA
 21297                           tblptru	equ	0xFF8
 21298                           tblptrh	equ	0xFF7
 21299                           tblptrl	equ	0xFF6
 21300                           tablat	equ	0xFF5
 21301                           prodh	equ	0xFF4
 21302                           prodl	equ	0xFF3
 21303                           intcon	equ	0xFF2
 21304                           intcon2	equ	0xFF1
 21305                           intcon3	equ	0xFF0
 21306                           postinc0	equ	0xFEE
 21307                           wreg	equ	0xFE8
 21308                           indf2	equ	0xFDF
 21309                           postinc2	equ	0xFDE
 21310                           postdec2	equ	0xFDD
 21311                           fsr2h	equ	0xFDA
 21312                           fsr2l	equ	0xFD9
 21313                           status	equ	0xFD8
 21314                           
 21315 ;; *************** function _LORAWAN_SetApplicationKey *****************
 21316 ;; Defined at:
 21317 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21318 ;; Parameters:    Size  Location     Type
 21319 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
 21320 ;;		 -> applicationKey(16), 
 21321 ;; Auto vars:     Size  Location     Type
 21322 ;;		None
 21323 ;; Return value:  Size  Location     Type
 21324 ;;                  1    wreg      void 
 21325 ;; Registers used:
 21326 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21327 ;; Tracked objects:
 21328 ;;		On entry : 0/0
 21329 ;;		On exit  : 0/0
 21330 ;;		Unchanged: 0/0
 21331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21336 ;;Total ram usage:        2 bytes
 21337 ;; Hardware stack levels used:    1
 21338 ;; Hardware stack levels required when called:    8
 21339 ;; This function calls:
 21340 ;;		_memcpy
 21341 ;; This function is called by:
 21342 ;;		_main
 21343 ;; This function uses a non-reentrant model
 21344 ;;
 21345                           
 21346                           	psect	text136
 21347  00BB26                     __ptext136:
 21348                           	opt stack 0
 21349  00BB26                     _LORAWAN_SetApplicationKey:
 21350                           	opt stack 22
 21351                           
 21352                           ;lorawan.c: 411: if (applicationKeyNew != (0))
 21353                           
 21354                           ;incstack = 0
 21355  00BB26  0100               	movlb	0	; () banked
 21356  00BB28  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
 21357  00BB2A  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
 21358  00BB2C  B4D8               	btfsc	status,2,c
 21359  00BB2E  0012               	return	
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;lorawan.c: 412: {
 21363                           ;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, applicationKeyNew, 16
      +                          );
 21364  00BB30  0E46               	movlw	low (_loRa+66)
 21365  00BB32  6F60               	movwf	memcpy@d1& (0+255),b
 21366  00BB34  0E02               	movlw	high (_loRa+66)
 21367  00BB36  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21368  00BB38  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
 21369  00BB3C  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
 21370  00BB40  0E00               	movlw	0
 21371  00BB42  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21372  00BB44  0E10               	movlw	16
 21373  00BB46  6F64               	movwf	memcpy@n& (0+255),b
 21374  00BB48  ECA9  F055         	call	_memcpy	;wreg free
 21375                           
 21376                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
 21377  00BB4C  0102               	movlb	2	; () banked
 21378  00BB4E  87A9               	bsf	(_loRa+165)& (0+255),3,b
 21379                           
 21380                           ; BSR set to: 2
 21381                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
 21382  00BB50  9906               	bcf	(_loRa+2)& (0+255),4,b
 21383  00BB52  0012               	return	
 21384  00BB54                     __end_of_LORAWAN_SetApplicationKey:
 21385                           	opt stack 0
 21386                           tosu	equ	0xFFF
 21387                           tosh	equ	0xFFE
 21388                           tosl	equ	0xFFD
 21389                           pclath	equ	0xFFA
 21390                           tblptru	equ	0xFF8
 21391                           tblptrh	equ	0xFF7
 21392                           tblptrl	equ	0xFF6
 21393                           tablat	equ	0xFF5
 21394                           prodh	equ	0xFF4
 21395                           prodl	equ	0xFF3
 21396                           intcon	equ	0xFF2
 21397                           intcon2	equ	0xFF1
 21398                           intcon3	equ	0xFF0
 21399                           postinc0	equ	0xFEE
 21400                           wreg	equ	0xFE8
 21401                           indf2	equ	0xFDF
 21402                           postinc2	equ	0xFDE
 21403                           postdec2	equ	0xFDD
 21404                           fsr2h	equ	0xFDA
 21405                           fsr2l	equ	0xFD9
 21406                           status	equ	0xFD8
 21407                           
 21408 ;; *************** function _LORAWAN_SetApplicationEui *****************
 21409 ;; Defined at:
 21410 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21411 ;; Parameters:    Size  Location     Type
 21412 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
 21413 ;;		 -> applicationEUI(8), 
 21414 ;; Auto vars:     Size  Location     Type
 21415 ;;		None
 21416 ;; Return value:  Size  Location     Type
 21417 ;;                  1    wreg      void 
 21418 ;; Registers used:
 21419 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21420 ;; Tracked objects:
 21421 ;;		On entry : 0/0
 21422 ;;		On exit  : 0/0
 21423 ;;		Unchanged: 0/0
 21424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21429 ;;Total ram usage:        2 bytes
 21430 ;; Hardware stack levels used:    1
 21431 ;; Hardware stack levels required when called:    8
 21432 ;; This function calls:
 21433 ;;		_memcpy
 21434 ;; This function is called by:
 21435 ;;		_main
 21436 ;; This function uses a non-reentrant model
 21437 ;;
 21438                           
 21439                           	psect	text137
 21440  00BB54                     __ptext137:
 21441                           	opt stack 0
 21442  00BB54                     _LORAWAN_SetApplicationEui:
 21443                           	opt stack 22
 21444                           
 21445                           ;lorawan.c: 354: if (applicationEuiNew != (0))
 21446                           
 21447                           ;incstack = 0
 21448  00BB54  0100               	movlb	0	; () banked
 21449  00BB56  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
 21450  00BB58  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
 21451  00BB5A  B4D8               	btfsc	status,2,c
 21452  00BB5C  0012               	return	
 21453                           
 21454                           ; BSR set to: 0
 21455                           ;lorawan.c: 355: {
 21456                           ;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffer, applicationEuiN
      +                          ew, 8);
 21457  00BB5E  0E56               	movlw	low (_loRa+82)
 21458  00BB60  6F60               	movwf	memcpy@d1& (0+255),b
 21459  00BB62  0E02               	movlw	high (_loRa+82)
 21460  00BB64  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21461  00BB66  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
 21462  00BB6A  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
 21463  00BB6E  0E00               	movlw	0
 21464  00BB70  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21465  00BB72  0E08               	movlw	8
 21466  00BB74  6F64               	movwf	memcpy@n& (0+255),b
 21467  00BB76  ECA9  F055         	call	_memcpy	;wreg free
 21468                           
 21469                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
 21470  00BB7A  0102               	movlb	2	; () banked
 21471  00BB7C  83A9               	bsf	(_loRa+165)& (0+255),1,b
 21472                           
 21473                           ; BSR set to: 2
 21474                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
 21475  00BB7E  9906               	bcf	(_loRa+2)& (0+255),4,b
 21476  00BB80  0012               	return	
 21477  00BB82                     __end_of_LORAWAN_SetApplicationEui:
 21478                           	opt stack 0
 21479                           tosu	equ	0xFFF
 21480                           tosh	equ	0xFFE
 21481                           tosl	equ	0xFFD
 21482                           pclath	equ	0xFFA
 21483                           tblptru	equ	0xFF8
 21484                           tblptrh	equ	0xFF7
 21485                           tblptrl	equ	0xFF6
 21486                           tablat	equ	0xFF5
 21487                           prodh	equ	0xFF4
 21488                           prodl	equ	0xFF3
 21489                           intcon	equ	0xFF2
 21490                           intcon2	equ	0xFF1
 21491                           intcon3	equ	0xFF0
 21492                           postinc0	equ	0xFEE
 21493                           wreg	equ	0xFE8
 21494                           indf2	equ	0xFDF
 21495                           postinc2	equ	0xFDE
 21496                           postdec2	equ	0xFDD
 21497                           fsr2h	equ	0xFDA
 21498                           fsr2l	equ	0xFD9
 21499                           status	equ	0xFD8
 21500                           
 21501 ;; *************** function _LORAWAN_Mainloop *****************
 21502 ;; Defined at:
 21503 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;		None
 21506 ;; Auto vars:     Size  Location     Type
 21507 ;;		None
 21508 ;; Return value:  Size  Location     Type
 21509 ;;                  1    wreg      void 
 21510 ;; Registers used:
 21511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21512 ;; Tracked objects:
 21513 ;;		On entry : 0/0
 21514 ;;		On exit  : 0/0
 21515 ;;		Unchanged: 0/0
 21516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21521 ;;Total ram usage:        0 bytes
 21522 ;; Hardware stack levels used:    1
 21523 ;; Hardware stack levels required when called:   18
 21524 ;; This function calls:
 21525 ;;		_INTERRUPT_GetDioStatus
 21526 ;;		_RADIO_DIO0
 21527 ;;		_RADIO_DIO1
 21528 ;;		_RADIO_DIO2
 21529 ;;		_RADIO_DIO3
 21530 ;;		_RADIO_DIO4
 21531 ;;		_RADIO_DIO5
 21532 ;;		_SwTimersExecute
 21533 ;; This function is called by:
 21534 ;;		_main
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text138
 21539  00B736                     __ptext138:
 21540                           	opt stack 0
 21541  00B736                     _LORAWAN_Mainloop:
 21542                           	opt stack 12
 21543                           
 21544                           ;lorawan.c: 2240: SwTimersExecute();
 21545                           
 21546                           ;incstack = 0
 21547  00B736  ECAD  F047         	call	_SwTimersExecute	;wreg free
 21548                           
 21549                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
 21550  00B73A  EC9B  F061         	call	_INTERRUPT_GetDioStatus	;wreg free
 21551  00B73E  0101               	movlb	1	; () banked
 21552  00B740  6F32               	movwf	_localDioStatus& (0+255),b
 21553                           
 21554                           ; BSR set to: 1
 21555                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
 21556  00B742  B132               	btfsc	_localDioStatus& (0+255),0,b
 21557                           
 21558                           ; BSR set to: 1
 21559                           ;lorawan.c: 2246: {
 21560                           ;lorawan.c: 2247: RADIO_DIO0();
 21561  00B744  ECCB  F04E         	call	_RADIO_DIO0	;wreg free
 21562                           
 21563                           ;lorawan.c: 2248: }
 21564                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
 21565  00B748  0101               	movlb	1	; () banked
 21566  00B74A  B332               	btfsc	_localDioStatus& (0+255),1,b
 21567                           
 21568                           ; BSR set to: 1
 21569                           ;lorawan.c: 2250: {
 21570                           ;lorawan.c: 2251: RADIO_DIO1();
 21571  00B74C  EC0E  F059         	call	_RADIO_DIO1	;wreg free
 21572                           
 21573                           ;lorawan.c: 2252: }
 21574                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
 21575  00B750  0101               	movlb	1	; () banked
 21576  00B752  B532               	btfsc	_localDioStatus& (0+255),2,b
 21577                           
 21578                           ; BSR set to: 1
 21579                           ;lorawan.c: 2254: {
 21580                           ;lorawan.c: 2255: RADIO_DIO2();
 21581  00B754  EC47  F057         	call	_RADIO_DIO2	;wreg free
 21582                           
 21583                           ;lorawan.c: 2256: }
 21584                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
 21585  00B758  0101               	movlb	1	; () banked
 21586  00B75A  B732               	btfsc	_localDioStatus& (0+255),3,b
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;lorawan.c: 2258: {
 21590                           ;lorawan.c: 2259: RADIO_DIO3();
 21591  00B75C  EC38  F05F         	call	_RADIO_DIO3	;wreg free
 21592                           
 21593                           ;lorawan.c: 2260: }
 21594                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
 21595  00B760  0101               	movlb	1	; () banked
 21596  00B762  B932               	btfsc	_localDioStatus& (0+255),4,b
 21597                           
 21598                           ; BSR set to: 1
 21599                           ;lorawan.c: 2262: {
 21600                           ;lorawan.c: 2263: RADIO_DIO4();
 21601  00B764  EC2C  F05C         	call	_RADIO_DIO4	;wreg free
 21602                           
 21603                           ;lorawan.c: 2264: }
 21604                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
 21605  00B768  0101               	movlb	1	; () banked
 21606  00B76A  AB32               	btfss	_localDioStatus& (0+255),5,b
 21607  00B76C  0012               	return	
 21608                           
 21609                           ; BSR set to: 1
 21610                           ;lorawan.c: 2266: {
 21611                           ;lorawan.c: 2267: RADIO_DIO5();
 21612  00B76E  EC56  F05E         	call	_RADIO_DIO5	;wreg free
 21613  00B772  0012               	return	
 21614  00B774                     __end_of_LORAWAN_Mainloop:
 21615                           	opt stack 0
 21616                           tosu	equ	0xFFF
 21617                           tosh	equ	0xFFE
 21618                           tosl	equ	0xFFD
 21619                           pclath	equ	0xFFA
 21620                           tblptru	equ	0xFF8
 21621                           tblptrh	equ	0xFF7
 21622                           tblptrl	equ	0xFF6
 21623                           tablat	equ	0xFF5
 21624                           prodh	equ	0xFF4
 21625                           prodl	equ	0xFF3
 21626                           intcon	equ	0xFF2
 21627                           intcon2	equ	0xFF1
 21628                           intcon3	equ	0xFF0
 21629                           postinc0	equ	0xFEE
 21630                           wreg	equ	0xFE8
 21631                           indf2	equ	0xFDF
 21632                           postinc2	equ	0xFDE
 21633                           postdec2	equ	0xFDD
 21634                           fsr2h	equ	0xFDA
 21635                           fsr2l	equ	0xFD9
 21636                           status	equ	0xFD8
 21637                           
 21638 ;; *************** function _SwTimersExecute *****************
 21639 ;; Defined at:
 21640 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 21641 ;; Parameters:    Size  Location     Type
 21642 ;;		None
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;  i               1  126[BANK0 ] unsigned char 
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      void 
 21647 ;; Registers used:
 21648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+4, btemp+
      +5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21656 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21657 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21658 ;;Total ram usage:        5 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:   17
 21661 ;; This function calls:
 21662 ;;		Absolute function
 21663 ;;		_AckRetransmissionCallback
 21664 ;;		_AutomaticReplyCallback
 21665 ;;		_DutyCycleCallback
 21666 ;;		_LORAWAN_LinkCheckCallback
 21667 ;;		_LORAWAN_ReceiveWindow1Callback
 21668 ;;		_LORAWAN_ReceiveWindow2Callback
 21669 ;;		_RADIO_RxFSKTimeout
 21670 ;;		_RADIO_WatchdogTimeout
 21671 ;;		_UnconfirmedTransmissionCallback
 21672 ;;		_UpdateJoinSuccessState
 21673 ;; This function is called by:
 21674 ;;		_LORAWAN_Mainloop
 21675 ;; This function uses a non-reentrant model
 21676 ;;
 21677                           
 21678                           	psect	text139
 21679  008F5A                     __ptext139:
 21680                           	opt stack 0
 21681  008F5A                     _SwTimersExecute:
 21682                           	opt stack 12
 21683                           
 21684                           ;sw_timer.c: 262: uint8_t i;
 21685                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
 21686                           
 21687                           ;incstack = 0
 21688  008F5A  9EF2               	bcf	intcon,7,c	;volatile
 21689                           
 21690                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
 21691  008F5C  0E00               	movlw	0
 21692  008F5E  0100               	movlb	0	; () banked
 21693  008F60  6FDE               	movwf	SwTimersExecute@i& (0+255),b
 21694  008F62  D068               	goto	l603
 21695  008F64                     
 21696                           ; BSR set to: 0
 21697                           ;sw_timer.c: 266: {
 21698                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
 21699                           
 21700                           ; BSR set to: 0
 21701  008F64  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21702  008F66  0D08               	mullw	8
 21703  008F68  0E04               	movlw	4
 21704  008F6A  26F3               	addwf	prodl,f,c
 21705  008F6C  0E00               	movlw	0
 21706  008F6E  22F4               	addwfc	prodh,f,c
 21707  008F70  0E00               	movlw	low _swTimers
 21708  008F72  24F3               	addwf	prodl,w,c
 21709  008F74  6ED9               	movwf	fsr2l,c
 21710  008F76  0E03               	movlw	high _swTimers
 21711  008F78  20F4               	addwfc	prodh,w,c
 21712  008F7A  6EDA               	movwf	fsr2h,c
 21713  008F7C  04DE               	decf	postinc2,w,c
 21714  008F7E  A4D8               	btfss	status,2,c
 21715  008F80  D057               	goto	l607
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;sw_timer.c: 270: {
 21719                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
 21720  008F82  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21721  008F84  0D08               	mullw	8
 21722  008F86  0E00               	movlw	low _swTimers
 21723  008F88  24F3               	addwf	prodl,w,c
 21724  008F8A  6ED9               	movwf	fsr2l,c
 21725  008F8C  0E03               	movlw	high _swTimers
 21726  008F8E  20F4               	addwfc	prodh,w,c
 21727  008F90  6EDA               	movwf	fsr2h,c
 21728  008F92  50DE               	movf	postinc2,w,c
 21729  008F94  10DE               	iorwf	postinc2,w,c
 21730  008F96  10DE               	iorwf	postinc2,w,c
 21731  008F98  10DE               	iorwf	postinc2,w,c
 21732  008F9A  A4D8               	btfss	status,2,c
 21733  008F9C  D049               	goto	l607
 21734                           
 21735                           ; BSR set to: 0
 21736                           ;sw_timer.c: 272: {
 21737                           ;sw_timer.c: 273: swTimers[i].running = 0;
 21738  008F9E  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21739  008FA0  0D08               	mullw	8
 21740  008FA2  0E04               	movlw	4
 21741  008FA4  26F3               	addwf	prodl,f,c
 21742  008FA6  0E00               	movlw	0
 21743  008FA8  22F4               	addwfc	prodh,f,c
 21744  008FAA  0E00               	movlw	low _swTimers
 21745  008FAC  24F3               	addwf	prodl,w,c
 21746  008FAE  6ED9               	movwf	fsr2l,c
 21747  008FB0  0E03               	movlw	high _swTimers
 21748  008FB2  20F4               	addwfc	prodh,w,c
 21749  008FB4  6EDA               	movwf	fsr2h,c
 21750  008FB6  0E00               	movlw	0
 21751  008FB8  6EDF               	movwf	indf2,c
 21752                           
 21753                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
 21754  008FBA  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21755  008FBC  0D08               	mullw	8
 21756  008FBE  0E06               	movlw	6
 21757  008FC0  26F3               	addwf	prodl,f,c
 21758  008FC2  0E00               	movlw	0
 21759  008FC4  22F4               	addwfc	prodh,f,c
 21760  008FC6  0E00               	movlw	low _swTimers
 21761  008FC8  24F3               	addwf	prodl,w,c
 21762  008FCA  6ED9               	movwf	fsr2l,c
 21763  008FCC  0E03               	movlw	high _swTimers
 21764  008FCE  20F4               	addwfc	prodh,w,c
 21765  008FD0  6EDA               	movwf	fsr2h,c
 21766  008FD2  50DE               	movf	postinc2,w,c
 21767  008FD4  10DE               	iorwf	postinc2,w,c
 21768  008FD6  B4D8               	btfsc	status,2,c
 21769  008FD8  D02B               	goto	l607
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;sw_timer.c: 275: {
 21773                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
 21774  008FDA  8EF2               	bsf	intcon,7,c	;volatile
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
 21778  008FDC  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21779  008FDE  0D08               	mullw	8
 21780  008FE0  0E05               	movlw	5
 21781  008FE2  26F3               	addwf	prodl,f,c
 21782  008FE4  0E00               	movlw	0
 21783  008FE6  22F4               	addwfc	prodh,f,c
 21784  008FE8  0E00               	movlw	low _swTimers
 21785  008FEA  24F3               	addwf	prodl,w,c
 21786  008FEC  6ED9               	movwf	fsr2l,c
 21787  008FEE  0E03               	movlw	high _swTimers
 21788  008FF0  20F4               	addwfc	prodh,w,c
 21789  008FF2  6EDA               	movwf	fsr2h,c
 21790  008FF4  50DF               	movf	indf2,w,c
 21791  008FF6  6EE6               	movwf	postinc1,c
 21792  008FF8  51DE               	movf	SwTimersExecute@i& (0+255),w,b
 21793  008FFA  0D08               	mullw	8
 21794  008FFC  0E06               	movlw	6
 21795  008FFE  26F3               	addwf	prodl,f,c
 21796  009000  0E00               	movlw	0
 21797  009002  22F4               	addwfc	prodh,f,c
 21798  009004  0E00               	movlw	low _swTimers
 21799  009006  24F3               	addwf	prodl,w,c
 21800  009008  6ED9               	movwf	fsr2l,c
 21801  00900A  0E03               	movlw	high _swTimers
 21802  00900C  20F4               	addwfc	prodh,w,c
 21803  00900E  6EDA               	movwf	fsr2h,c
 21804  009010  CFDE F0DA          	movff	postinc2,??_SwTimersExecute
 21805  009014  CFDD F0DB          	movff	postdec2,??_SwTimersExecute+1
 21806  009018  D801               	call	u28678
 21807  00901A  D009               	goto	u28679
 21808  00901C                     u28678:
 21809  00901C  0005               	push	
 21810  00901E  6EFA               	movwf	pclath,c
 21811  009020  51DA               	movf	??_SwTimersExecute& (0+255),w,b
 21812  009022  6EFD               	movwf	tosl,c
 21813  009024  51DB               	movf	(??_SwTimersExecute+1)& (0+255),w,b
 21814  009026  6EFE               	movwf	tosh,c
 21815  009028  6AFF               	clrf	tosu,c
 21816  00902A  50FA               	movf	pclath,w,c
 21817  00902C  0012               	return		;indir
 21818  00902E                     u28679:
 21819                           
 21820                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
 21821  00902E  9EF2               	bcf	intcon,7,c	;volatile
 21822  009030                     l607:
 21823  009030  0100               	movlb	0	; () banked
 21824  009032  2BDE               	incf	SwTimersExecute@i& (0+255),f,b
 21825  009034                     l603:
 21826                           
 21827                           ; BSR set to: 0
 21828                           
 21829                           ; BSR set to: 0
 21830  009034  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 21831  009036  5DDE               	subwf	SwTimersExecute@i& (0+255),w,b
 21832  009038  A0D8               	btfss	status,0,c
 21833  00903A  D794               	goto	l604
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;sw_timer.c: 279: }
 21837                           ;sw_timer.c: 280: }
 21838                           ;sw_timer.c: 281: }
 21839                           ;sw_timer.c: 282: }
 21840                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
 21841  00903C  8EF2               	bsf	intcon,7,c	;volatile
 21842                           
 21843                           ; BSR set to: 0
 21844  00903E  0012               	return		;funcret
 21845  009040                     __end_of_SwTimersExecute:
 21846                           	opt stack 0
 21847                           tosu	equ	0xFFF
 21848                           tosh	equ	0xFFE
 21849                           tosl	equ	0xFFD
 21850                           pclath	equ	0xFFA
 21851                           tblptru	equ	0xFF8
 21852                           tblptrh	equ	0xFF7
 21853                           tblptrl	equ	0xFF6
 21854                           tablat	equ	0xFF5
 21855                           prodh	equ	0xFF4
 21856                           prodl	equ	0xFF3
 21857                           intcon	equ	0xFF2
 21858                           intcon2	equ	0xFF1
 21859                           intcon3	equ	0xFF0
 21860                           postinc0	equ	0xFEE
 21861                           wreg	equ	0xFE8
 21862                           postinc1	equ	0xFE6
 21863                           indf2	equ	0xFDF
 21864                           postinc2	equ	0xFDE
 21865                           postdec2	equ	0xFDD
 21866                           fsr2h	equ	0xFDA
 21867                           fsr2l	equ	0xFD9
 21868                           status	equ	0xFD8
 21869                           
 21870 ;; *************** function _DutyCycleCallback *****************
 21871 ;; Defined at:
 21872 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21873 ;; Parameters:    Size  Location     Type
 21874 ;;  param           1  [STACK] unsigned char 
 21875 ;; Auto vars:     Size  Location     Type
 21876 ;;  minim           4  [STACK] unsigned long 
 21877 ;;  i               1  [STACK] unsigned char 
 21878 ;;  found           1  [STACK] unsigned char 
 21879 ;; Return value:  Size  Location     Type
 21880 ;;                  1  [STACK] void 
 21881 ;; Registers used:
 21882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
 21883 ;; Tracked objects:
 21884 ;;		On entry : 3F/0
 21885 ;;		On exit  : 0/0
 21886 ;;		Unchanged: 0/0
 21887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21892 ;;Total ram usage:        0 bytes
 21893 ;; Hardware stack levels used:    1
 21894 ;; Hardware stack levels required when called:   11
 21895 ;; This function calls:
 21896 ;;		_SwTimerSetTimeout
 21897 ;;		_SwTimerStart
 21898 ;;		___lldiv
 21899 ;; This function is called by:
 21900 ;;		_SetCallbackSoftwareTimers
 21901 ;;		_SwTimersExecute
 21902 ;; This function uses a reentrant model
 21903 ;;
 21904                           
 21905                           	psect	text140
 21906  0048A6                     __ptext140:
 21907                           	opt stack 0
 21908  0048A6                     _DutyCycleCallback:
 21909                           	opt stack 0
 21910                           
 21911                           ; BSR set to: 0
 21912                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
 21913  0048A6  0E0A               	movlw	10
 21914  0048A8  26E1               	addwf	fsr1l,f,c
 21915  0048AA  0E00               	movlw	0
 21916  0048AC  22E2               	addwfc	fsr1h,f,c
 21917                           
 21918                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
 21919                           
 21920                           ;incstack = 0
 21921  0048AE  0EFF               	movlw	255
 21922  0048B0  6E50               	movwf	btemp+8,c
 21923  0048B2  0EFF               	movlw	255
 21924  0048B4  6E51               	movwf	btemp+9,c
 21925  0048B6  0EFF               	movlw	255
 21926  0048B8  6E52               	movwf	btemp+10,c
 21927  0048BA  0EFF               	movlw	255
 21928  0048BC  6E53               	movwf	btemp+11,c
 21929                           
 21930                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 21931  0048BE  0EFA               	movlw	-6
 21932  0048C0  C050  FFE3         	movff	btemp+8,plusw1
 21933  0048C4  0EFB               	movlw	-5
 21934  0048C6  C051  FFE3         	movff	btemp+9,plusw1
 21935  0048CA  0EFC               	movlw	-4
 21936  0048CC  C052  FFE3         	movff	btemp+10,plusw1
 21937  0048D0  0EFD               	movlw	-3
 21938  0048D2  C053  FFE3         	movff	btemp+11,plusw1
 21939                           
 21940                           ;lorawan_eu.c: 1224: bool found = 0;
 21941                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 21942  0048D6  0EFF               	movlw	-1
 21943  0048D8  6AE3               	clrf	plusw1,c
 21944                           
 21945                           ;lorawan_eu.c: 1225: uint8_t i;
 21946                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
 21947                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 21948  0048DA  0EFE               	movlw	-2
 21949  0048DC  6AE3               	clrf	plusw1,c
 21950  0048DE                     l20702:
 21951                           
 21952                           ;lorawan_eu.c: 1228: {
 21953                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 21954                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 21955  0048DE  0EFE               	movlw	-2
 21956  0048E0  50E3               	movf	plusw1,w,c
 21957  0048E2  0D0E               	mullw	14
 21958  0048E4  0E04               	movlw	low (_Channels+4)
 21959  0048E6  24F3               	addwf	prodl,w,c
 21960  0048E8  6ED9               	movwf	fsr2l,c
 21961  0048EA  0E04               	movlw	high (_Channels+4)
 21962  0048EC  20F4               	addwfc	prodh,w,c
 21963  0048EE  6EDA               	movwf	fsr2h,c
 21964  0048F0  04DE               	decf	postinc2,w,c
 21965  0048F2  A4D8               	btfss	status,2,c
 21966  0048F4  D0AD               	goto	l20720
 21967                           
 21968                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 21969  0048F6  0EFE               	movlw	-2
 21970  0048F8  50E3               	movf	plusw1,w,c
 21971  0048FA  0D0E               	mullw	14
 21972  0048FC  0E08               	movlw	low (_Channels+8)
 21973  0048FE  24F3               	addwf	prodl,w,c
 21974  004900  6ED9               	movwf	fsr2l,c
 21975  004902  0E04               	movlw	high (_Channels+8)
 21976  004904  20F4               	addwfc	prodh,w,c
 21977  004906  6EDA               	movwf	fsr2h,c
 21978  004908  50DE               	movf	postinc2,w,c
 21979  00490A  10DE               	iorwf	postinc2,w,c
 21980  00490C  10DE               	iorwf	postinc2,w,c
 21981  00490E  10DE               	iorwf	postinc2,w,c
 21982  004910  B4D8               	btfsc	status,2,c
 21983  004912  D09E               	goto	l20720
 21984                           
 21985                           ;lorawan_eu.c: 1231: {
 21986                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
 21987                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 21988  004914  0EFE               	movlw	-2
 21989  004916  50E3               	movf	plusw1,w,c
 21990  004918  0D0E               	mullw	14
 21991  00491A  0E08               	movlw	low (_Channels+8)
 21992  00491C  24F3               	addwf	prodl,w,c
 21993  00491E  6ED9               	movwf	fsr2l,c
 21994  004920  0E04               	movlw	high (_Channels+8)
 21995  004922  20F4               	addwfc	prodh,w,c
 21996  004924  6EDA               	movwf	fsr2h,c
 21997  004926  50DE               	movf	postinc2,w,c
 21998  004928  0102               	movlb	2	; () banked
 21999  00492A  5DCC               	subwf	(_loRa+200)& (0+255),w,b
 22000  00492C  50DE               	movf	postinc2,w,c
 22001  00492E  59CD               	subwfb	(_loRa+201)& (0+255),w,b
 22002  004930  50DE               	movf	postinc2,w,c
 22003  004932  59CE               	subwfb	(_loRa+202)& (0+255),w,b
 22004  004934  50DE               	movf	postinc2,w,c
 22005  004936  59CF               	subwfb	(_loRa+203)& (0+255),w,b
 22006  004938  B0D8               	btfsc	status,0,c
 22007  00493A  D02F               	goto	l20710
 22008                           
 22009                           ; BSR set to: 2
 22010                           ;lorawan_eu.c: 1233: {
 22011                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
 22012                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22013  00493C  0EFE               	movlw	-2
 22014  00493E  50E3               	movf	plusw1,w,c
 22015  004940  0D0E               	mullw	14
 22016  004942  0E08               	movlw	low (_Channels+8)
 22017  004944  24F3               	addwf	prodl,w,c
 22018  004946  6ED9               	movwf	fsr2l,c
 22019  004948  0E04               	movlw	high (_Channels+8)
 22020  00494A  20F4               	addwfc	prodh,w,c
 22021  00494C  6EDA               	movwf	fsr2h,c
 22022  00494E  CFDE F050          	movff	postinc2,btemp+8
 22023  004952  CFDE F051          	movff	postinc2,btemp+9
 22024  004956  CFDE F052          	movff	postinc2,btemp+10
 22025  00495A  CFDE F053          	movff	postinc2,btemp+11
 22026  00495E  51CC               	movf	(_loRa+200)& (0+255),w,b
 22027  004960  5C50               	subwf	btemp+8,w,c
 22028  004962  6E4C               	movwf	btemp+4,c
 22029  004964  51CD               	movf	(_loRa+201)& (0+255),w,b
 22030  004966  5851               	subwfb	btemp+9,w,c
 22031  004968  6E4D               	movwf	btemp+5,c
 22032  00496A  51CE               	movf	(_loRa+202)& (0+255),w,b
 22033  00496C  5852               	subwfb	btemp+10,w,c
 22034  00496E  6E4E               	movwf	btemp+6,c
 22035  004970  51CF               	movf	(_loRa+203)& (0+255),w,b
 22036  004972  5853               	subwfb	btemp+11,w,c
 22037  004974  6E4F               	movwf	btemp+7,c
 22038                           
 22039                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22040  004976  0EFE               	movlw	-2
 22041  004978  50E3               	movf	plusw1,w,c
 22042  00497A  0D0E               	mullw	14
 22043  00497C  0E08               	movlw	low (_Channels+8)
 22044  00497E  24F3               	addwf	prodl,w,c
 22045  004980  6ED9               	movwf	fsr2l,c
 22046  004982  0E04               	movlw	high (_Channels+8)
 22047  004984  20F4               	addwfc	prodh,w,c
 22048  004986  6EDA               	movwf	fsr2h,c
 22049  004988  C04C  FFDE         	movff	btemp+4,postinc2
 22050  00498C  C04D  FFDE         	movff	btemp+5,postinc2
 22051  004990  C04E  FFDE         	movff	btemp+6,postinc2
 22052  004994  C04F  FFDE         	movff	btemp+7,postinc2
 22053                           
 22054                           ;lorawan_eu.c: 1235: }
 22055  004998  D00D               	goto	l20712
 22056  00499A                     l20710:
 22057                           
 22058                           ; BSR set to: 2
 22059                           ;lorawan_eu.c: 1236: else
 22060                           ;lorawan_eu.c: 1237: {
 22061                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
 22062                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22063  00499A  0EFE               	movlw	-2
 22064  00499C  50E3               	movf	plusw1,w,c
 22065  00499E  0D0E               	mullw	14
 22066  0049A0  0E08               	movlw	low (_Channels+8)
 22067  0049A2  24F3               	addwf	prodl,w,c
 22068  0049A4  6ED9               	movwf	fsr2l,c
 22069  0049A6  0E04               	movlw	high (_Channels+8)
 22070  0049A8  20F4               	addwfc	prodh,w,c
 22071  0049AA  6EDA               	movwf	fsr2h,c
 22072  0049AC  6ADE               	clrf	postinc2,c
 22073  0049AE  6ADE               	clrf	postinc2,c
 22074  0049B0  6ADE               	clrf	postinc2,c
 22075  0049B2  6ADD               	clrf	postdec2,c
 22076  0049B4                     l20712:
 22077                           
 22078                           ; BSR set to: 2
 22079                           ;lorawan_eu.c: 1239: }
 22080                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
 22081                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22082  0049B4  0EFE               	movlw	-2
 22083  0049B6  50E3               	movf	plusw1,w,c
 22084  0049B8  0D0E               	mullw	14
 22085  0049BA  0E08               	movlw	low (_Channels+8)
 22086  0049BC  24F3               	addwf	prodl,w,c
 22087  0049BE  6ED9               	movwf	fsr2l,c
 22088  0049C0  0E04               	movlw	high (_Channels+8)
 22089  0049C2  20F4               	addwfc	prodh,w,c
 22090  0049C4  6EDA               	movwf	fsr2h,c
 22091                           
 22092                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22093  0049C6  0EFA               	movlw	-6
 22094  0049C8  CFE3 F048          	movff	plusw1,btemp
 22095  0049CC  50DE               	movf	postinc2,w,c
 22096  0049CE  5C48               	subwf	btemp,w,c
 22097  0049D0  0EFB               	movlw	-5
 22098  0049D2  CFE3 F048          	movff	plusw1,btemp
 22099  0049D6  50DE               	movf	postinc2,w,c
 22100  0049D8  5848               	subwfb	btemp,w,c
 22101  0049DA  0EFC               	movlw	-4
 22102  0049DC  CFE3 F048          	movff	plusw1,btemp
 22103  0049E0  50DE               	movf	postinc2,w,c
 22104  0049E2  5848               	subwfb	btemp,w,c
 22105  0049E4  0EFD               	movlw	-3
 22106  0049E6  CFE3 F048          	movff	plusw1,btemp
 22107  0049EA  50DE               	movf	postinc2,w,c
 22108  0049EC  5848               	subwfb	btemp,w,c
 22109  0049EE  A0D8               	btfss	status,0,c
 22110  0049F0  D02F               	goto	l20720
 22111                           
 22112                           ; BSR set to: 2
 22113                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22114  0049F2  0EFE               	movlw	-2
 22115  0049F4  50E3               	movf	plusw1,w,c
 22116  0049F6  0D0E               	mullw	14
 22117  0049F8  0E08               	movlw	low (_Channels+8)
 22118  0049FA  24F3               	addwf	prodl,w,c
 22119  0049FC  6ED9               	movwf	fsr2l,c
 22120  0049FE  0E04               	movlw	high (_Channels+8)
 22121  004A00  20F4               	addwfc	prodh,w,c
 22122  004A02  6EDA               	movwf	fsr2h,c
 22123  004A04  50DE               	movf	postinc2,w,c
 22124  004A06  10DE               	iorwf	postinc2,w,c
 22125  004A08  10DE               	iorwf	postinc2,w,c
 22126  004A0A  10DE               	iorwf	postinc2,w,c
 22127  004A0C  B4D8               	btfsc	status,2,c
 22128  004A0E  D020               	goto	l20720
 22129                           
 22130                           ; BSR set to: 2
 22131                           ;lorawan_eu.c: 1241: {
 22132                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
 22133                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22134  004A10  0EFE               	movlw	-2
 22135  004A12  50E3               	movf	plusw1,w,c
 22136  004A14  0D0E               	mullw	14
 22137  004A16  0E08               	movlw	low (_Channels+8)
 22138  004A18  24F3               	addwf	prodl,w,c
 22139  004A1A  6ED9               	movwf	fsr2l,c
 22140  004A1C  0E04               	movlw	high (_Channels+8)
 22141  004A1E  20F4               	addwfc	prodh,w,c
 22142  004A20  6EDA               	movwf	fsr2h,c
 22143  004A22  CFDE F050          	movff	postinc2,btemp+8
 22144  004A26  CFDE F051          	movff	postinc2,btemp+9
 22145  004A2A  CFDE F052          	movff	postinc2,btemp+10
 22146  004A2E  CFDE F053          	movff	postinc2,btemp+11
 22147                           
 22148                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22149  004A32  0EFA               	movlw	-6
 22150  004A34  C050  FFE3         	movff	btemp+8,plusw1
 22151  004A38  0EFB               	movlw	-5
 22152  004A3A  C051  FFE3         	movff	btemp+9,plusw1
 22153  004A3E  0EFC               	movlw	-4
 22154  004A40  C052  FFE3         	movff	btemp+10,plusw1
 22155  004A44  0EFD               	movlw	-3
 22156  004A46  C053  FFE3         	movff	btemp+11,plusw1
 22157                           
 22158                           ; BSR set to: 2
 22159                           ;lorawan_eu.c: 1243: found = 1;
 22160                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 22161  004A4A  0EFF               	movlw	-1
 22162  004A4C  6AE3               	clrf	plusw1,c
 22163  004A4E  2AE3               	incf	plusw1,f,c
 22164  004A50                     l20720:
 22165                           
 22166                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22167  004A50  0EFE               	movlw	-2
 22168  004A52  2AE3               	incf	plusw1,f,c
 22169                           
 22170                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
 22171  004A54  0EFE               	movlw	-2
 22172  004A56  CFE3 F048          	movff	plusw1,btemp
 22173  004A5A  0E0F               	movlw	15
 22174  004A5C  6448               	cpfsgt	btemp,c
 22175  004A5E  D73F               	goto	l20702
 22176                           
 22177                           ;lorawan_eu.c: 1244: }
 22178                           ;lorawan_eu.c: 1245: }
 22179                           ;lorawan_eu.c: 1246: }
 22180                           ;lorawan_eu.c: 1247: if ( found == 1 )
 22181                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
 22182  004A60  0EFF               	movlw	-1
 22183  004A62  04E3               	decf	plusw1,w,c
 22184  004A64  A4D8               	btfss	status,2,c
 22185  004A66  D09D               	goto	l1635
 22186                           
 22187                           ;lorawan_eu.c: 1248: {
 22188                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
 22189                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22190  004A68  50E1               	movf	fsr1l,w,c
 22191  004A6A  0FFA               	addlw	-6
 22192  004A6C  6ED9               	movwf	fsr2l,c
 22193  004A6E  50E2               	movf	fsr1h,w,c
 22194  004A70  6EDA               	movwf	fsr2h,c
 22195  004A72  0EFF               	movlw	255
 22196  004A74  22DA               	addwfc	fsr2h,f,c
 22197  004A76  CFDE F2CC          	movff	postinc2,_loRa+200
 22198  004A7A  CFDE F2CD          	movff	postinc2,_loRa+201
 22199  004A7E  CFDE F2CE          	movff	postinc2,_loRa+202
 22200  004A82  CFDE F2CF          	movff	postinc2,_loRa+203
 22201                           
 22202                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
 22203                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22204  004A86  0EFD               	movlw	-3
 22205  004A88  50E3               	movf	plusw1,w,c
 22206  004A8A  E10E               	bnz	u24380
 22207  004A8C  0EFA               	movlw	-6
 22208  004A8E  28E3               	incf	plusw1,w,c
 22209  004A90  0EFB               	movlw	-5
 22210  004A92  CFE3 F048          	movff	plusw1,btemp
 22211  004A96  0EFF               	movlw	255
 22212  004A98  5A48               	subwfb	btemp,f,c
 22213  004A9A  0EFC               	movlw	-4
 22214  004A9C  CFE3 F048          	movff	plusw1,btemp
 22215  004AA0  0E0F               	movlw	15
 22216  004AA2  5A48               	subwfb	btemp,f,c
 22217  004AA4  A0D8               	btfss	status,0,c
 22218  004AA6  D02B               	goto	l20732
 22219  004AA8                     u24380:
 22220                           
 22221                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22222  004AA8  50E1               	movf	fsr1l,w,c
 22223  004AAA  0FFA               	addlw	-6
 22224  004AAC  6ED9               	movwf	fsr2l,c
 22225  004AAE  50E2               	movf	fsr1h,w,c
 22226  004AB0  6EDA               	movwf	fsr2h,c
 22227  004AB2  0EFF               	movlw	255
 22228  004AB4  22DA               	addwfc	fsr2h,f,c
 22229  004AB6  CFDE F060          	movff	postinc2,___lldiv@dividend
 22230  004ABA  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 22231  004ABE  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 22232  004AC2  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 22233  004AC6  0E7D               	movlw	125
 22234  004AC8  0100               	movlb	0	; () banked
 22235  004ACA  6F64               	movwf	___lldiv@divisor& (0+255),b
 22236  004ACC  0E00               	movlw	0
 22237  004ACE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22238  004AD0  0E00               	movlw	0
 22239  004AD2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22240  004AD4  0E00               	movlw	0
 22241  004AD6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22242  004AD8  ECAE  F050         	call	___lldiv	;wreg free
 22243  004ADC  C060  F050         	movff	?___lldiv,btemp+8
 22244  004AE0  C061  F051         	movff	?___lldiv+1,btemp+9
 22245  004AE4  C062  F052         	movff	?___lldiv+2,btemp+10
 22246  004AE8  C063  F053         	movff	?___lldiv+3,btemp+11
 22247  004AEC  0E0C               	movlw	12
 22248  004AEE                     u24395:
 22249  004AEE  90D8               	bcf	status,0,c
 22250  004AF0  3650               	rlcf	btemp+8,f,c
 22251  004AF2  3651               	rlcf	btemp+9,f,c
 22252  004AF4  3652               	rlcf	btemp+10,f,c
 22253  004AF6  3653               	rlcf	btemp+11,f,c
 22254  004AF8  2EE8               	decfsz	wreg,f,c
 22255  004AFA  D7F9               	goto	u24395
 22256  004AFC  D02F               	goto	L4
 22257  004AFE                     l20732:
 22258                           
 22259                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
 22260  004AFE  0EFA               	movlw	-6
 22261  004B00  CFE3 F050          	movff	plusw1,btemp+8
 22262  004B04  0EFB               	movlw	-5
 22263  004B06  CFE3 F051          	movff	plusw1,btemp+9
 22264  004B0A  0EFC               	movlw	-4
 22265  004B0C  CFE3 F052          	movff	plusw1,btemp+10
 22266  004B10  0EFD               	movlw	-3
 22267  004B12  CFE3 F053          	movff	plusw1,btemp+11
 22268  004B16  0E0C               	movlw	12
 22269  004B18                     u24405:
 22270  004B18  90D8               	bcf	status,0,c
 22271  004B1A  3650               	rlcf	btemp+8,f,c
 22272  004B1C  3651               	rlcf	btemp+9,f,c
 22273  004B1E  3652               	rlcf	btemp+10,f,c
 22274  004B20  3653               	rlcf	btemp+11,f,c
 22275  004B22  2EE8               	decfsz	wreg,f,c
 22276  004B24  D7F9               	goto	u24405
 22277  004B26  C050  F060         	movff	btemp+8,___lldiv@dividend
 22278  004B2A  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 22279  004B2E  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 22280  004B32  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 22281  004B36  0E7D               	movlw	125
 22282  004B38  0100               	movlb	0	; () banked
 22283  004B3A  6F64               	movwf	___lldiv@divisor& (0+255),b
 22284  004B3C  0E00               	movlw	0
 22285  004B3E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22286  004B40  0E00               	movlw	0
 22287  004B42  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22288  004B44  0E00               	movlw	0
 22289  004B46  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22290  004B48  ECAE  F050         	call	___lldiv	;wreg free
 22291  004B4C  C060  F050         	movff	?___lldiv,btemp+8
 22292  004B50  C061  F051         	movff	?___lldiv+1,btemp+9
 22293  004B54  C062  F052         	movff	?___lldiv+2,btemp+10
 22294  004B58  C063  F053         	movff	?___lldiv+3,btemp+11
 22295  004B5C                     L4:
 22296                           
 22297                           ;stkvar	_DutyCycleCallback$2252 @ sp[(-10)+0]
 22298  004B5C  0EF6               	movlw	-10
 22299  004B5E  C050  FFE3         	movff	btemp+8,plusw1
 22300  004B62  0EF7               	movlw	-9
 22301  004B64  C051  FFE3         	movff	btemp+9,plusw1
 22302  004B68  0EF8               	movlw	-8
 22303  004B6A  C052  FFE3         	movff	btemp+10,plusw1
 22304  004B6E  0EF9               	movlw	-7
 22305  004B70  C053  FFE3         	movff	btemp+11,plusw1
 22306                           
 22307                           ;stkvar	_DutyCycleCallback$2252 @ sp[(-10)+0]
 22308  004B74  50E1               	movf	fsr1l,w,c
 22309  004B76  0FF6               	addlw	-10
 22310  004B78  6ED9               	movwf	fsr2l,c
 22311  004B7A  50E2               	movf	fsr1h,w,c
 22312  004B7C  6EDA               	movwf	fsr2h,c
 22313  004B7E  0EFF               	movlw	255
 22314  004B80  22DA               	addwfc	fsr2h,f,c
 22315  004B82  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 22316  004B86  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 22317  004B8A  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 22318  004B8E  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 22319  004B92  0102               	movlb	2	; () banked
 22320  004B94  51ED               	movf	(_loRa+233)& (0+255),w,b
 22321  004B96  ECD5  F05A         	call	_SwTimerSetTimeout
 22322                           
 22323                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
 22324  004B9A  0102               	movlb	2	; () banked
 22325  004B9C  51ED               	movf	(_loRa+233)& (0+255),w,b
 22326  004B9E  EC5A  F04D         	call	_SwTimerStart
 22327  004BA2                     l1635:
 22328                           
 22329                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22330  004BA2  0EF5               	movlw	245
 22331  004BA4  26E1               	addwf	fsr1l,f,c
 22332  004BA6  0EFF               	movlw	255
 22333  004BA8  22E2               	addwfc	fsr1h,f,c
 22334  004BAA  0012               	return		;funcret
 22335  004BAC                     __end_of_DutyCycleCallback:
 22336                           	opt stack 0
 22337                           tosu	equ	0xFFF
 22338                           tosh	equ	0xFFE
 22339                           tosl	equ	0xFFD
 22340                           pclath	equ	0xFFA
 22341                           tblptru	equ	0xFF8
 22342                           tblptrh	equ	0xFF7
 22343                           tblptrl	equ	0xFF6
 22344                           tablat	equ	0xFF5
 22345                           prodh	equ	0xFF4
 22346                           prodl	equ	0xFF3
 22347                           intcon	equ	0xFF2
 22348                           intcon2	equ	0xFF1
 22349                           intcon3	equ	0xFF0
 22350                           postinc0	equ	0xFEE
 22351                           wreg	equ	0xFE8
 22352                           postinc1	equ	0xFE6
 22353                           plusw1	equ	0xFE3
 22354                           fsr1h	equ	0xFE2
 22355                           fsr1l	equ	0xFE1
 22356                           indf2	equ	0xFDF
 22357                           postinc2	equ	0xFDE
 22358                           postdec2	equ	0xFDD
 22359                           fsr2h	equ	0xFDA
 22360                           fsr2l	equ	0xFD9
 22361                           status	equ	0xFD8
 22362                           
 22363 ;; *************** function _UpdateJoinSuccessState *****************
 22364 ;; Defined at:
 22365 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22366 ;; Parameters:    Size  Location     Type
 22367 ;;  param           1  [STACK] unsigned char 
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;		None
 22370 ;; Return value:  Size  Location     Type
 22371 ;;                  1  [STACK] void 
 22372 ;; Registers used:
 22373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
 22374 ;; Tracked objects:
 22375 ;;		On entry : 0/0
 22376 ;;		On exit  : 0/0
 22377 ;;		Unchanged: 0/0
 22378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22383 ;;Total ram usage:        0 bytes
 22384 ;; Hardware stack levels used:    1
 22385 ;; Hardware stack levels required when called:   11
 22386 ;; This function calls:
 22387 ;;		_RxJoinResponse
 22388 ;;		_SwTimerSetTimeout
 22389 ;;		_SwTimerStart
 22390 ;;		___lldiv
 22391 ;; This function is called by:
 22392 ;;		_SetCallbackSoftwareTimers
 22393 ;;		_LORAWAN_RxDone
 22394 ;;		_SwTimersExecute
 22395 ;; This function uses a reentrant model
 22396 ;;
 22397                           
 22398                           	psect	text141
 22399  007C64                     __ptext141:
 22400                           	opt stack 0
 22401  007C64                     _UpdateJoinSuccessState:
 22402                           	opt stack 0
 22403                           
 22404                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22405  007C64  52E6               	movf	postinc1,f,c
 22406  007C66  52E6               	movf	postinc1,f,c
 22407  007C68  52E6               	movf	postinc1,f,c
 22408  007C6A  52E6               	movf	postinc1,f,c
 22409                           
 22410                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
 22411                           
 22412                           ;incstack = 0
 22413  007C6C  0102               	movlb	2	; () banked
 22414  007C6E  9504               	bcf	_loRa& (0+255),2,b
 22415                           
 22416                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
 22417  007C70  8906               	bsf	(_loRa+2)& (0+255),4,b
 22418                           
 22419                           ; BSR set to: 2
 22420                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
 22421  007C72  0EF0               	movlw	-16
 22422  007C74  1706               	andwf	(_loRa+2)& (0+255),f,b
 22423                           
 22424                           ; BSR set to: 2
 22425                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
 22426  007C76  6BD4               	clrf	(_loRa+208)& (0+255),b
 22427  007C78  6BD5               	clrf	(_loRa+209)& (0+255),b
 22428                           
 22429                           ; BSR set to: 2
 22430                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
 22431  007C7A  6BF2               	clrf	(_loRa+238)& (0+255),b
 22432                           
 22433                           ; BSR set to: 2
 22434                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
 22435  007C7C  A507               	btfss	(_loRa+3)& (0+255),2,b
 22436  007C7E  D07B               	goto	l19612
 22437                           
 22438                           ; BSR set to: 2
 22439                           ;lorawan.c: 1052: {
 22440                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 22441  007C80  51D3               	movf	(_loRa+207)& (0+255),w,b
 22442  007C82  E107               	bnz	u22330
 22443  007C84  29D0               	incf	(_loRa+204)& (0+255),w,b
 22444  007C86  0EFF               	movlw	255
 22445  007C88  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 22446  007C8A  0E0F               	movlw	15
 22447  007C8C  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 22448  007C8E  A0D8               	btfss	status,0,c
 22449  007C90  D024               	goto	l19606
 22450  007C92                     u22330:
 22451                           
 22452                           ; BSR set to: 2
 22453  007C92  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 22454  007C96  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 22455  007C9A  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 22456  007C9E  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 22457  007CA2  0E7D               	movlw	125
 22458  007CA4  0100               	movlb	0	; () banked
 22459  007CA6  6F64               	movwf	___lldiv@divisor& (0+255),b
 22460  007CA8  0E00               	movlw	0
 22461  007CAA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22462  007CAC  0E00               	movlw	0
 22463  007CAE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22464  007CB0  0E00               	movlw	0
 22465  007CB2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22466  007CB4  ECAE  F050         	call	___lldiv	;wreg free
 22467  007CB8  C060  F050         	movff	?___lldiv,btemp+8
 22468  007CBC  C061  F051         	movff	?___lldiv+1,btemp+9
 22469  007CC0  C062  F052         	movff	?___lldiv+2,btemp+10
 22470  007CC4  C063  F053         	movff	?___lldiv+3,btemp+11
 22471  007CC8  0E0C               	movlw	12
 22472  007CCA                     u22345:
 22473  007CCA  90D8               	bcf	status,0,c
 22474  007CCC  3650               	rlcf	btemp+8,f,c
 22475  007CCE  3651               	rlcf	btemp+9,f,c
 22476  007CD0  3652               	rlcf	btemp+10,f,c
 22477  007CD2  3653               	rlcf	btemp+11,f,c
 22478  007CD4  2EE8               	decfsz	wreg,f,c
 22479  007CD6  D7F9               	goto	u22345
 22480  007CD8  D02B               	goto	L5
 22481  007CDA                     l19606:
 22482                           
 22483                           ; BSR set to: 2
 22484  007CDA  C2D0  F050         	movff	_loRa+204,btemp+8
 22485  007CDE  C2D1  F051         	movff	_loRa+205,btemp+9
 22486  007CE2  C2D2  F052         	movff	_loRa+206,btemp+10
 22487  007CE6  C2D3  F053         	movff	_loRa+207,btemp+11
 22488  007CEA  0E0C               	movlw	12
 22489  007CEC                     u22355:
 22490  007CEC  90D8               	bcf	status,0,c
 22491  007CEE  3650               	rlcf	btemp+8,f,c
 22492  007CF0  3651               	rlcf	btemp+9,f,c
 22493  007CF2  3652               	rlcf	btemp+10,f,c
 22494  007CF4  3653               	rlcf	btemp+11,f,c
 22495  007CF6  2EE8               	decfsz	wreg,f,c
 22496  007CF8  D7F9               	goto	u22355
 22497  007CFA  C050  F060         	movff	btemp+8,___lldiv@dividend
 22498  007CFE  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 22499  007D02  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 22500  007D06  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 22501  007D0A  0E7D               	movlw	125
 22502  007D0C  0100               	movlb	0	; () banked
 22503  007D0E  6F64               	movwf	___lldiv@divisor& (0+255),b
 22504  007D10  0E00               	movlw	0
 22505  007D12  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22506  007D14  0E00               	movlw	0
 22507  007D16  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22508  007D18  0E00               	movlw	0
 22509  007D1A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22510  007D1C  ECAE  F050         	call	___lldiv	;wreg free
 22511  007D20  C060  F050         	movff	?___lldiv,btemp+8
 22512  007D24  C061  F051         	movff	?___lldiv+1,btemp+9
 22513  007D28  C062  F052         	movff	?___lldiv+2,btemp+10
 22514  007D2C  C063  F053         	movff	?___lldiv+3,btemp+11
 22515  007D30                     L5:
 22516                           
 22517                           ;stkvar	_UpdateJoinSuccessState$2923 @ sp[(-4)+0]
 22518  007D30  0EFC               	movlw	-4
 22519  007D32  C050  FFE3         	movff	btemp+8,plusw1
 22520  007D36  0EFD               	movlw	-3
 22521  007D38  C051  FFE3         	movff	btemp+9,plusw1
 22522  007D3C  0EFE               	movlw	-2
 22523  007D3E  C052  FFE3         	movff	btemp+10,plusw1
 22524  007D42  0EFF               	movlw	-1
 22525  007D44  C053  FFE3         	movff	btemp+11,plusw1
 22526                           
 22527                           ;stkvar	_UpdateJoinSuccessState$2923 @ sp[(-4)+0]
 22528  007D48  50E1               	movf	fsr1l,w,c
 22529  007D4A  0FFC               	addlw	-4
 22530  007D4C  6ED9               	movwf	fsr2l,c
 22531  007D4E  50E2               	movf	fsr1h,w,c
 22532  007D50  6EDA               	movwf	fsr2h,c
 22533  007D52  0EFF               	movlw	255
 22534  007D54  22DA               	addwfc	fsr2h,f,c
 22535  007D56  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 22536  007D5A  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 22537  007D5E  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 22538  007D62  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 22539  007D66  0102               	movlb	2	; () banked
 22540  007D68  51EB               	movf	(_loRa+231)& (0+255),w,b
 22541  007D6A  ECD5  F05A         	call	_SwTimerSetTimeout
 22542                           
 22543                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
 22544  007D6E  0102               	movlb	2	; () banked
 22545  007D70  51EB               	movf	(_loRa+231)& (0+255),w,b
 22546  007D72  EC5A  F04D         	call	_SwTimerStart
 22547  007D76                     l19612:
 22548                           
 22549                           ;lorawan.c: 1055: }
 22550                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
 22551  007D76  0101               	movlb	1	; () banked
 22552  007D78  510E               	movf	(_rxPayload+2)& (0+255),w,b
 22553  007D7A  110F               	iorwf	(_rxPayload+3)& (0+255),w,b
 22554  007D7C  B4D8               	btfsc	status,2,c
 22555  007D7E  D00C               	goto	u22379
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;lorawan.c: 1058: {
 22559                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
 22560  007D80  D801               	call	u22378
 22561  007D82  D00A               	goto	u22379
 22562  007D84                     u22378:
 22563  007D84  0005               	push	
 22564  007D86  6EFA               	movwf	pclath,c
 22565  007D88  510E               	movf	(_rxPayload+2)& (0+255),w,b
 22566  007D8A  6EFD               	movwf	tosl,c
 22567  007D8C  510F               	movf	(_rxPayload+3)& (0+255),w,b
 22568  007D8E  6EFE               	movwf	tosh,c
 22569  007D90  6AFF               	clrf	tosu,c
 22570  007D92  50FA               	movf	pclath,w,c
 22571  007D94  0E01               	movlw	1
 22572  007D96  0012               	return		;indir
 22573  007D98                     u22379:
 22574                           
 22575                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
 22576  007D98  0EFB               	movlw	251
 22577  007D9A  26E1               	addwf	fsr1l,f,c
 22578  007D9C  0EFF               	movlw	255
 22579  007D9E  22E2               	addwfc	fsr1h,f,c
 22580  007DA0  0012               	return		;funcret
 22581  007DA2                     __end_of_UpdateJoinSuccessState:
 22582                           	opt stack 0
 22583                           tosu	equ	0xFFF
 22584                           tosh	equ	0xFFE
 22585                           tosl	equ	0xFFD
 22586                           pclath	equ	0xFFA
 22587                           tblptru	equ	0xFF8
 22588                           tblptrh	equ	0xFF7
 22589                           tblptrl	equ	0xFF6
 22590                           tablat	equ	0xFF5
 22591                           prodh	equ	0xFF4
 22592                           prodl	equ	0xFF3
 22593                           intcon	equ	0xFF2
 22594                           intcon2	equ	0xFF1
 22595                           intcon3	equ	0xFF0
 22596                           postinc0	equ	0xFEE
 22597                           wreg	equ	0xFE8
 22598                           postinc1	equ	0xFE6
 22599                           plusw1	equ	0xFE3
 22600                           fsr1h	equ	0xFE2
 22601                           fsr1l	equ	0xFE1
 22602                           indf2	equ	0xFDF
 22603                           postinc2	equ	0xFDE
 22604                           postdec2	equ	0xFDD
 22605                           fsr2h	equ	0xFDA
 22606                           fsr2l	equ	0xFD9
 22607                           status	equ	0xFD8
 22608                           
 22609 ;; *************** function _AutomaticReplyCallback *****************
 22610 ;; Defined at:
 22611 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22612 ;; Parameters:    Size  Location     Type
 22613 ;;  param           1  [STACK] unsigned char 
 22614 ;; Auto vars:     Size  Location     Type
 22615 ;;		None
 22616 ;; Return value:  Size  Location     Type
 22617 ;;                  1  [STACK] void 
 22618 ;; Registers used:
 22619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22620 ;; Tracked objects:
 22621 ;;		On entry : 3F/0
 22622 ;;		On exit  : 3F/2
 22623 ;;		Unchanged: 0/0
 22624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22629 ;;Total ram usage:        0 bytes
 22630 ;; Hardware stack levels used:    1
 22631 ;; Hardware stack levels required when called:   14
 22632 ;; This function calls:
 22633 ;;		_LORAWAN_Send
 22634 ;; This function is called by:
 22635 ;;		_SetCallbackSoftwareTimers
 22636 ;;		_SwTimersExecute
 22637 ;; This function uses a reentrant model
 22638 ;;
 22639                           
 22640                           	psect	text142
 22641  00BDC0                     __ptext142:
 22642                           	opt stack 0
 22643  00BDC0                     _AutomaticReplyCallback:
 22644                           	opt stack 14
 22645                           
 22646                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
 22647                           
 22648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22649                           ;incstack = 0
 22650  00BDC0  0EF0               	movlw	-16
 22651  00BDC2  0102               	movlb	2	; () banked
 22652  00BDC4  1706               	andwf	(_loRa+2)& (0+255),f,b
 22653                           
 22654                           ; BSR set to: 2
 22655                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
 22656  00BDC6  0E00               	movlw	0
 22657  00BDC8  0100               	movlb	0	; () banked
 22658  00BDCA  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 22659  00BDCC  0E00               	movlw	0
 22660  00BDCE  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 22661  00BDD0  0E00               	movlw	0
 22662  00BDD2  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 22663  00BDD4  0E00               	movlw	0
 22664  00BDD6  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 22665  00BDD8  0E00               	movlw	0
 22666  00BDDA  ECDC  F049         	call	_LORAWAN_Send
 22667                           
 22668                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
 22669  00BDDE  0102               	movlb	2	; () banked
 22670  00BDE0  9704               	bcf	_loRa& (0+255),3,b
 22671                           
 22672                           ; BSR set to: 2
 22673                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
 22674  00BDE2  52E5               	movf	postdec1,f,c
 22675  00BDE4  0012               	return		;funcret
 22676  00BDE6                     __end_of_AutomaticReplyCallback:
 22677                           	opt stack 0
 22678                           tosu	equ	0xFFF
 22679                           tosh	equ	0xFFE
 22680                           tosl	equ	0xFFD
 22681                           pclath	equ	0xFFA
 22682                           tblptru	equ	0xFF8
 22683                           tblptrh	equ	0xFF7
 22684                           tblptrl	equ	0xFF6
 22685                           tablat	equ	0xFF5
 22686                           prodh	equ	0xFF4
 22687                           prodl	equ	0xFF3
 22688                           intcon	equ	0xFF2
 22689                           intcon2	equ	0xFF1
 22690                           intcon3	equ	0xFF0
 22691                           postinc0	equ	0xFEE
 22692                           wreg	equ	0xFE8
 22693                           postinc1	equ	0xFE6
 22694                           postdec1	equ	0xFE5
 22695                           plusw1	equ	0xFE3
 22696                           fsr1h	equ	0xFE2
 22697                           fsr1l	equ	0xFE1
 22698                           indf2	equ	0xFDF
 22699                           postinc2	equ	0xFDE
 22700                           postdec2	equ	0xFDD
 22701                           fsr2h	equ	0xFDA
 22702                           fsr2l	equ	0xFD9
 22703                           status	equ	0xFD8
 22704                           
 22705 ;; *************** function _AckRetransmissionCallback *****************
 22706 ;; Defined at:
 22707 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;  param           1  [STACK] unsigned char 
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;  maximumPacke    1  [STACK] unsigned char 
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1  [STACK] void 
 22714 ;; Registers used:
 22715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22716 ;; Tracked objects:
 22717 ;;		On entry : 3F/0
 22718 ;;		On exit  : 0/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22725 ;;Total ram usage:        0 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; Hardware stack levels required when called:   13
 22728 ;; This function calls:
 22729 ;;		_FindSmallestDataRate
 22730 ;;		_LORAWAN_GetMaxPayloadSize
 22731 ;;		_RADIO_Transmit
 22732 ;;		_ResetParametersForConfirmedTransmission
 22733 ;;		_RxData
 22734 ;;		_SelectChannelForTransmission
 22735 ;;		_UpdateRetransmissionAckTimeoutState
 22736 ;; This function is called by:
 22737 ;;		_SetCallbackSoftwareTimers
 22738 ;;		_SwTimersExecute
 22739 ;; This function uses a reentrant model
 22740 ;;
 22741                           
 22742                           	psect	text143
 22743  00837E                     __ptext143:
 22744                           	opt stack 0
 22745  00837E                     _AckRetransmissionCallback:
 22746                           	opt stack 0
 22747                           
 22748                           ; BSR set to: 2
 22749                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 22750  00837E  52E6               	movf	postinc1,f,c
 22751                           
 22752                           ;lorawan.c: 936: uint8_t maximumPacketSize;
 22753                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
 22754                           
 22755                           ;incstack = 0
 22756  008380  0102               	movlb	2	; () banked
 22757  008382  B107               	btfsc	(_loRa+3)& (0+255),0,b
 22758  008384  D086               	goto	l20838
 22759                           
 22760                           ; BSR set to: 2
 22761                           ;lorawan.c: 939: {
 22762                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
 22763  008386  51DD               	movf	(_loRa+217)& (0+255),w,b
 22764  008388  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 22765  00838A  A0D8               	btfss	status,0,c
 22766  00838C  D061               	goto	l20828
 22767                           
 22768                           ; BSR set to: 2
 22769                           ;lorawan.c: 941: {
 22770                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
 22771  00838E  EC79  F055         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 22772  008392  6E53               	movwf	btemp+11,c
 22773  008394  0E0D               	movlw	13
 22774  008396  2653               	addwf	btemp+11,f,c
 22775                           
 22776                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
 22777  008398  0EFF               	movlw	-1
 22778  00839A  C053  FFE3         	movff	btemp+11,plusw1
 22779                           
 22780                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
 22781                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
 22782  00839E  0EFF               	movlw	-1
 22783  0083A0  50E3               	movf	plusw1,w,c
 22784  0083A2  6E49               	movwf	btemp+1,c
 22785  0083A4  6A4A               	clrf	btemp+2,c
 22786  0083A6  0102               	movlb	2	; () banked
 22787  0083A8  51D8               	movf	(_loRa+212)& (0+255),w,b
 22788  0083AA  5C49               	subwf	btemp+1,w,c
 22789  0083AC  51D9               	movf	(_loRa+213)& (0+255),w,b
 22790  0083AE  584A               	subwfb	btemp+2,w,c
 22791  0083B0  A0D8               	btfss	status,0,c
 22792  0083B2  D039               	goto	l20822
 22793                           
 22794                           ; BSR set to: 2
 22795                           ;lorawan.c: 946: {
 22796                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
 22797  0083B4  0E01               	movlw	1
 22798  0083B6  EC7B  F053         	call	_SelectChannelForTransmission
 22799  0083BA  0900               	iorlw	0
 22800  0083BC  A4D8               	btfss	status,2,c
 22801  0083BE  D030               	goto	l20818
 22802                           
 22803                           ;lorawan.c: 948: {
 22804                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 22805  0083C0  0E30               	movlw	low (_macBuffer+16)
 22806  0083C2  0100               	movlb	0	; () banked
 22807  0083C4  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 22808  0083C6  0E05               	movlw	high (_macBuffer+16)
 22809  0083C8  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 22810  0083CA  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 22811  0083CE  ECE2  F02D         	call	_RADIO_Transmit	;wreg free
 22812  0083D2  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
 22813  0083D6  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
 22814  0083DA  5049               	movf	btemp+1,w,c
 22815  0083DC  104A               	iorwf	btemp+2,w,c
 22816  0083DE  A4D8               	btfss	status,2,c
 22817  0083E0  D01F               	goto	l20818
 22818                           
 22819                           ;lorawan.c: 951: {
 22820                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 22821  0083E2  0102               	movlb	2	; () banked
 22822  0083E4  5106               	movf	(_loRa+2)& (0+255),w,b
 22823  0083E6  0BF0               	andlw	-16
 22824  0083E8  0901               	iorlw	1
 22825  0083EA  6F06               	movwf	(_loRa+2)& (0+255),b
 22826                           
 22827                           ; BSR set to: 2
 22828                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
 22829  0083EC  2BDD               	incf	(_loRa+217)& (0+255),f,b
 22830                           
 22831                           ; BSR set to: 2
 22832                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
 22833  0083EE  B1DD               	btfsc	(_loRa+217)& (0+255),0,b
 22834  0083F0  D052               	goto	l2176
 22835                           
 22836                           ; BSR set to: 2
 22837  0083F2  51E3               	movf	(_loRa+223)& (0+255),w,b
 22838  0083F4  B4D8               	btfsc	status,2,c
 22839  0083F6  D04F               	goto	l2176
 22840                           
 22841                           ; BSR set to: 2
 22842  0083F8  51DD               	movf	(_loRa+217)& (0+255),w,b
 22843  0083FA  6E49               	movwf	btemp+1,c
 22844  0083FC  6A4A               	clrf	btemp+2,c
 22845  0083FE  51DB               	movf	(_loRa+215)& (0+255),w,b
 22846  008400  6E52               	movwf	btemp+10,c
 22847  008402  6A53               	clrf	btemp+11,c
 22848  008404  0E01               	movlw	1
 22849  008406  2652               	addwf	btemp+10,f,c
 22850  008408  0E00               	movlw	0
 22851  00840A  2253               	addwfc	btemp+11,f,c
 22852  00840C  5049               	movf	btemp+1,w,c
 22853  00840E  1852               	xorwf	btemp+10,w,c
 22854  008410  E104               	bnz	u24610
 22855  008412  504A               	movf	btemp+2,w,c
 22856  008414  1853               	xorwf	btemp+11,w,c
 22857  008416  B4D8               	btfsc	status,2,c
 22858  008418  D03E               	goto	l2176
 22859  00841A                     u24610:
 22860                           
 22861                           ; BSR set to: 2
 22862                           ;lorawan.c: 957: {
 22863                           ;lorawan.c: 958: FindSmallestDataRate();
 22864  00841A  EC92  F048         	call	_FindSmallestDataRate	;wreg free
 22865  00841E  D03B               	goto	l2176
 22866  008420                     l20818:
 22867                           
 22868                           ;lorawan.c: 961: else
 22869                           ;lorawan.c: 962: {
 22870                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
 22871  008420  ECD4  F052         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 22872  008424  D038               	goto	l2176
 22873  008426                     l20822:
 22874                           
 22875                           ; BSR set to: 2
 22876                           ;lorawan.c: 973: else
 22877                           ;lorawan.c: 974: {
 22878                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
 22879  008426  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22880                           
 22881                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
 22882  00842A  0101               	movlb	1	; () banked
 22883  00842C  510C               	movf	_rxPayload& (0+255),w,b
 22884  00842E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 22885  008430  B4D8               	btfsc	status,2,c
 22886  008432  D031               	goto	l2176
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;lorawan.c: 977: {
 22890                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
 22891  008434  0E00               	movlw	0
 22892  008436  0100               	movlb	0	; () banked
 22893  008438  6F60               	movwf	RxData@pData& (0+255),b
 22894  00843A  0E00               	movlw	0
 22895  00843C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22896  00843E  0E00               	movlw	0
 22897  008440  6F62               	movwf	RxData@dataLength& (0+255),b
 22898  008442  0E04               	movlw	4
 22899  008444  6F63               	movwf	RxData@status& (0+255),b
 22900  008446  D801               	call	u24638
 22901  008448  D026               	goto	l2176
 22902  00844A                     u24638:
 22903  00844A  0005               	push	
 22904  00844C  6EFA               	movwf	pclath,c
 22905  00844E  D019               	goto	L6
 22906  008450                     l20828:
 22907                           
 22908                           ; BSR set to: 2
 22909                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
 22910  008450  51DD               	movf	(_loRa+217)& (0+255),w,b
 22911  008452  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 22912  008454  A0D8               	btfss	status,0,c
 22913                           
 22914                           ; BSR set to: 2
 22915  008456  B107               	btfsc	(_loRa+3)& (0+255),0,b
 22916  008458  D01E               	goto	l2176
 22917                           
 22918                           ; BSR set to: 2
 22919                           ;lorawan.c: 983: {
 22920                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
 22921  00845A  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22922                           
 22923                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
 22924  00845E  0101               	movlb	1	; () banked
 22925  008460  510C               	movf	_rxPayload& (0+255),w,b
 22926  008462  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 22927  008464  B4D8               	btfsc	status,2,c
 22928  008466  D017               	goto	l2176
 22929                           
 22930                           ; BSR set to: 1
 22931                           ;lorawan.c: 986: {
 22932                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 22933  008468  0E00               	movlw	0
 22934  00846A  0100               	movlb	0	; () banked
 22935  00846C  6F60               	movwf	RxData@pData& (0+255),b
 22936  00846E  0E00               	movlw	0
 22937  008470  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22938  008472  0E00               	movlw	0
 22939  008474  6F62               	movwf	RxData@dataLength& (0+255),b
 22940  008476  0E00               	movlw	0
 22941  008478  6F63               	movwf	RxData@status& (0+255),b
 22942  00847A  D801               	call	u24678
 22943  00847C  D00C               	goto	l2176
 22944  00847E                     u24678:
 22945  00847E  0005               	push	
 22946  008480  6EFA               	movwf	pclath,c
 22947  008482                     L6:
 22948  008482  0101               	movlb	1	; () banked
 22949  008484  510C               	movf	_rxPayload& (0+255),w,b
 22950  008486  6EFD               	movwf	tosl,c
 22951  008488  510D               	movf	(_rxPayload+1)& (0+255),w,b
 22952  00848A  6EFE               	movwf	tosh,c
 22953  00848C  6AFF               	clrf	tosu,c
 22954  00848E  50FA               	movf	pclath,w,c
 22955  008490  0012               	return		;indir
 22956  008492                     l20838:
 22957                           
 22958                           ; BSR set to: 2
 22959                           ;lorawan.c: 991: else
 22960                           ;lorawan.c: 992: {
 22961                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
 22962  008492  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22963  008496                     l2176:
 22964                           
 22965                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
 22966  008496  52E5               	movf	postdec1,f,c
 22967  008498  52E5               	movf	postdec1,f,c
 22968  00849A  0012               	return		;funcret
 22969  00849C                     __end_of_AckRetransmissionCallback:
 22970                           	opt stack 0
 22971                           tosu	equ	0xFFF
 22972                           tosh	equ	0xFFE
 22973                           tosl	equ	0xFFD
 22974                           pclath	equ	0xFFA
 22975                           tblptru	equ	0xFF8
 22976                           tblptrh	equ	0xFF7
 22977                           tblptrl	equ	0xFF6
 22978                           tablat	equ	0xFF5
 22979                           prodh	equ	0xFF4
 22980                           prodl	equ	0xFF3
 22981                           intcon	equ	0xFF2
 22982                           intcon2	equ	0xFF1
 22983                           intcon3	equ	0xFF0
 22984                           postinc0	equ	0xFEE
 22985                           wreg	equ	0xFE8
 22986                           postinc1	equ	0xFE6
 22987                           postdec1	equ	0xFE5
 22988                           plusw1	equ	0xFE3
 22989                           fsr1h	equ	0xFE2
 22990                           fsr1l	equ	0xFE1
 22991                           indf2	equ	0xFDF
 22992                           postinc2	equ	0xFDE
 22993                           postdec2	equ	0xFDD
 22994                           fsr2h	equ	0xFDA
 22995                           fsr2l	equ	0xFD9
 22996                           status	equ	0xFD8
 22997                           
 22998 ;; *************** function _LORAWAN_LinkCheckCallback *****************
 22999 ;; Defined at:
 23000 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23001 ;; Parameters:    Size  Location     Type
 23002 ;;  param           1  [STACK] unsigned char 
 23003 ;; Auto vars:     Size  Location     Type
 23004 ;;  iCtr            1  [STACK] unsigned char 
 23005 ;; Return value:  Size  Location     Type
 23006 ;;                  1  [STACK] void 
 23007 ;; Registers used:
 23008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
 23009 ;; Tracked objects:
 23010 ;;		On entry : 3F/0
 23011 ;;		On exit  : 0/0
 23012 ;;		Unchanged: 0/0
 23013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23018 ;;Total ram usage:        0 bytes
 23019 ;; Hardware stack levels used:    1
 23020 ;; Hardware stack levels required when called:   11
 23021 ;; This function calls:
 23022 ;;		_SwTimerSetTimeout
 23023 ;;		_SwTimerStart
 23024 ;;		___lldiv
 23025 ;; This function is called by:
 23026 ;;		_SetCallbackSoftwareTimers
 23027 ;;		_SwTimersExecute
 23028 ;; This function uses a reentrant model
 23029 ;;
 23030                           
 23031                           	psect	text144
 23032  00718A                     __ptext144:
 23033                           	opt stack 0
 23034  00718A                     _LORAWAN_LinkCheckCallback:
 23035                           	opt stack 0
 23036                           
 23037                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23038  00718A  0E05               	movlw	5
 23039  00718C  26E1               	addwf	fsr1l,f,c
 23040  00718E  0E00               	movlw	0
 23041  007190  22E2               	addwfc	fsr1h,f,c
 23042                           
 23043                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
 23044                           
 23045                           ;incstack = 0
 23046  007192  0102               	movlb	2	; () banked
 23047  007194  A107               	btfss	(_loRa+3)& (0+255),0,b
 23048                           
 23049                           ; BSR set to: 2
 23050  007196  A507               	btfss	(_loRa+3)& (0+255),2,b
 23051  007198  D02C               	goto	l20782
 23052                           
 23053                           ; BSR set to: 2
 23054                           ;lorawan.c: 886: {
 23055                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 23056                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23057  00719A  0EFF               	movlw	-1
 23058  00719C  6AE3               	clrf	plusw1,c
 23059  00719E  D00F               	goto	l20772
 23060  0071A0                     l20766:
 23061                           
 23062                           ; BSR set to: 2
 23063                           ;lorawan.c: 889: {
 23064                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 23065                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23066  0071A0  0EFF               	movlw	-1
 23067  0071A2  50E3               	movf	plusw1,w,c
 23068  0071A4  0D02               	mullw	2
 23069  0071A6  0EAC               	movlw	low (_loRa+168)
 23070  0071A8  24F3               	addwf	prodl,w,c
 23071  0071AA  6ED9               	movwf	fsr2l,c
 23072  0071AC  0E02               	movlw	high (_loRa+168)
 23073  0071AE  20F4               	addwfc	prodh,w,c
 23074  0071B0  6EDA               	movwf	fsr2h,c
 23075  0071B2  0E02               	movlw	2
 23076  0071B4  18DE               	xorwf	postinc2,w,c
 23077  0071B6  B4D8               	btfsc	status,2,c
 23078  0071B8  D009               	goto	u24470
 23079                           
 23080                           ; BSR set to: 2
 23081                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23082  0071BA  0EFF               	movlw	-1
 23083  0071BC  2AE3               	incf	plusw1,f,c
 23084  0071BE                     l20772:
 23085                           
 23086                           ; BSR set to: 2
 23087                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23088  0071BE  0EFF               	movlw	-1
 23089  0071C0  CFE3 F048          	movff	plusw1,btemp
 23090  0071C4  51AB               	movf	(_loRa+167)& (0+255),w,b
 23091  0071C6  5C48               	subwf	btemp,w,c
 23092  0071C8  A0D8               	btfss	status,0,c
 23093  0071CA  D7EA               	goto	l20766
 23094  0071CC                     u24470:
 23095                           
 23096                           ; BSR set to: 2
 23097                           ;lorawan.c: 893: }
 23098                           ;lorawan.c: 894: }
 23099                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
 23100                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
 23101  0071CC  0EFF               	movlw	-1
 23102  0071CE  50E3               	movf	plusw1,w,c
 23103  0071D0  19AB               	xorwf	(_loRa+167)& (0+255),w,b
 23104  0071D2  A4D8               	btfss	status,2,c
 23105  0071D4  D00E               	goto	l20782
 23106                           
 23107                           ; BSR set to: 2
 23108                           ;lorawan.c: 897: {
 23109                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
 23110  0071D6  51AB               	movf	(_loRa+167)& (0+255),w,b
 23111  0071D8  0D02               	mullw	2
 23112  0071DA  0EAC               	movlw	low (_loRa+168)
 23113  0071DC  24F3               	addwf	prodl,w,c
 23114  0071DE  6ED9               	movwf	fsr2l,c
 23115  0071E0  0E02               	movlw	high (_loRa+168)
 23116  0071E2  20F4               	addwfc	prodh,w,c
 23117  0071E4  6EDA               	movwf	fsr2h,c
 23118  0071E6  0E02               	movlw	2
 23119  0071E8  6EDF               	movwf	indf2,c
 23120                           
 23121                           ; BSR set to: 2
 23122                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
 23123  0071EA  0E10               	movlw	16
 23124  0071EC  61AB               	cpfslt	(_loRa+167)& (0+255),b
 23125  0071EE  D001               	goto	l20782
 23126                           
 23127                           ; BSR set to: 2
 23128                           ;lorawan.c: 901: {
 23129                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
 23130  0071F0  2BAB               	incf	(_loRa+167)& (0+255),f,b
 23131  0071F2                     l20782:
 23132                           
 23133                           ; BSR set to: 2
 23134                           ;lorawan.c: 903: }
 23135                           ;lorawan.c: 904: }
 23136                           ;lorawan.c: 905: }
 23137                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
 23138  0071F2  A507               	btfss	(_loRa+3)& (0+255),2,b
 23139  0071F4  D07B               	goto	l2154
 23140                           
 23141                           ; BSR set to: 2
 23142                           ;lorawan.c: 909: {
 23143                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 23144  0071F6  51D3               	movf	(_loRa+207)& (0+255),w,b
 23145  0071F8  E107               	bnz	u24510
 23146  0071FA  29D0               	incf	(_loRa+204)& (0+255),w,b
 23147  0071FC  0EFF               	movlw	255
 23148  0071FE  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 23149  007200  0E0F               	movlw	15
 23150  007202  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 23151  007204  A0D8               	btfss	status,0,c
 23152  007206  D024               	goto	l20788
 23153  007208                     u24510:
 23154                           
 23155                           ; BSR set to: 2
 23156  007208  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 23157  00720C  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 23158  007210  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 23159  007214  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 23160  007218  0E7D               	movlw	125
 23161  00721A  0100               	movlb	0	; () banked
 23162  00721C  6F64               	movwf	___lldiv@divisor& (0+255),b
 23163  00721E  0E00               	movlw	0
 23164  007220  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23165  007222  0E00               	movlw	0
 23166  007224  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23167  007226  0E00               	movlw	0
 23168  007228  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23169  00722A  ECAE  F050         	call	___lldiv	;wreg free
 23170  00722E  C060  F050         	movff	?___lldiv,btemp+8
 23171  007232  C061  F051         	movff	?___lldiv+1,btemp+9
 23172  007236  C062  F052         	movff	?___lldiv+2,btemp+10
 23173  00723A  C063  F053         	movff	?___lldiv+3,btemp+11
 23174  00723E  0E0C               	movlw	12
 23175  007240                     u24525:
 23176  007240  90D8               	bcf	status,0,c
 23177  007242  3650               	rlcf	btemp+8,f,c
 23178  007244  3651               	rlcf	btemp+9,f,c
 23179  007246  3652               	rlcf	btemp+10,f,c
 23180  007248  3653               	rlcf	btemp+11,f,c
 23181  00724A  2EE8               	decfsz	wreg,f,c
 23182  00724C  D7F9               	goto	u24525
 23183  00724E  D02B               	goto	L7
 23184  007250                     l20788:
 23185                           
 23186                           ; BSR set to: 2
 23187  007250  C2D0  F050         	movff	_loRa+204,btemp+8
 23188  007254  C2D1  F051         	movff	_loRa+205,btemp+9
 23189  007258  C2D2  F052         	movff	_loRa+206,btemp+10
 23190  00725C  C2D3  F053         	movff	_loRa+207,btemp+11
 23191  007260  0E0C               	movlw	12
 23192  007262                     u24535:
 23193  007262  90D8               	bcf	status,0,c
 23194  007264  3650               	rlcf	btemp+8,f,c
 23195  007266  3651               	rlcf	btemp+9,f,c
 23196  007268  3652               	rlcf	btemp+10,f,c
 23197  00726A  3653               	rlcf	btemp+11,f,c
 23198  00726C  2EE8               	decfsz	wreg,f,c
 23199  00726E  D7F9               	goto	u24535
 23200  007270  C050  F060         	movff	btemp+8,___lldiv@dividend
 23201  007274  C051  F061         	movff	btemp+9,___lldiv@dividend+1
 23202  007278  C052  F062         	movff	btemp+10,___lldiv@dividend+2
 23203  00727C  C053  F063         	movff	btemp+11,___lldiv@dividend+3
 23204  007280  0E7D               	movlw	125
 23205  007282  0100               	movlb	0	; () banked
 23206  007284  6F64               	movwf	___lldiv@divisor& (0+255),b
 23207  007286  0E00               	movlw	0
 23208  007288  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23209  00728A  0E00               	movlw	0
 23210  00728C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23211  00728E  0E00               	movlw	0
 23212  007290  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23213  007292  ECAE  F050         	call	___lldiv	;wreg free
 23214  007296  C060  F050         	movff	?___lldiv,btemp+8
 23215  00729A  C061  F051         	movff	?___lldiv+1,btemp+9
 23216  00729E  C062  F052         	movff	?___lldiv+2,btemp+10
 23217  0072A2  C063  F053         	movff	?___lldiv+3,btemp+11
 23218  0072A6                     L7:
 23219                           
 23220                           ;stkvar	_LORAWAN_LinkCheckCallback$2906 @ sp[(-5)+0]
 23221  0072A6  0EFB               	movlw	-5
 23222  0072A8  C050  FFE3         	movff	btemp+8,plusw1
 23223  0072AC  0EFC               	movlw	-4
 23224  0072AE  C051  FFE3         	movff	btemp+9,plusw1
 23225  0072B2  0EFD               	movlw	-3
 23226  0072B4  C052  FFE3         	movff	btemp+10,plusw1
 23227  0072B8  0EFE               	movlw	-2
 23228  0072BA  C053  FFE3         	movff	btemp+11,plusw1
 23229                           
 23230                           ;stkvar	_LORAWAN_LinkCheckCallback$2906 @ sp[(-5)+0]
 23231  0072BE  50E1               	movf	fsr1l,w,c
 23232  0072C0  0FFB               	addlw	-5
 23233  0072C2  6ED9               	movwf	fsr2l,c
 23234  0072C4  50E2               	movf	fsr1h,w,c
 23235  0072C6  6EDA               	movwf	fsr2h,c
 23236  0072C8  0EFF               	movlw	255
 23237  0072CA  22DA               	addwfc	fsr2h,f,c
 23238  0072CC  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
 23239  0072D0  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
 23240  0072D4  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
 23241  0072D8  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
 23242  0072DC  0102               	movlb	2	; () banked
 23243  0072DE  51EB               	movf	(_loRa+231)& (0+255),w,b
 23244  0072E0  ECD5  F05A         	call	_SwTimerSetTimeout
 23245                           
 23246                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
 23247  0072E4  0102               	movlb	2	; () banked
 23248  0072E6  51EB               	movf	(_loRa+231)& (0+255),w,b
 23249  0072E8  EC5A  F04D         	call	_SwTimerStart
 23250  0072EC                     l2154:
 23251                           
 23252                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
 23253  0072EC  0EFA               	movlw	250
 23254  0072EE  26E1               	addwf	fsr1l,f,c
 23255  0072F0  0EFF               	movlw	255
 23256  0072F2  22E2               	addwfc	fsr1h,f,c
 23257  0072F4  0012               	return		;funcret
 23258  0072F6                     __end_of_LORAWAN_LinkCheckCallback:
 23259                           	opt stack 0
 23260                           tosu	equ	0xFFF
 23261                           tosh	equ	0xFFE
 23262                           tosl	equ	0xFFD
 23263                           pclath	equ	0xFFA
 23264                           tblptru	equ	0xFF8
 23265                           tblptrh	equ	0xFF7
 23266                           tblptrl	equ	0xFF6
 23267                           tablat	equ	0xFF5
 23268                           prodh	equ	0xFF4
 23269                           prodl	equ	0xFF3
 23270                           intcon	equ	0xFF2
 23271                           intcon2	equ	0xFF1
 23272                           intcon3	equ	0xFF0
 23273                           postinc0	equ	0xFEE
 23274                           wreg	equ	0xFE8
 23275                           postinc1	equ	0xFE6
 23276                           postdec1	equ	0xFE5
 23277                           plusw1	equ	0xFE3
 23278                           fsr1h	equ	0xFE2
 23279                           fsr1l	equ	0xFE1
 23280                           indf2	equ	0xFDF
 23281                           postinc2	equ	0xFDE
 23282                           postdec2	equ	0xFDD
 23283                           fsr2h	equ	0xFDA
 23284                           fsr2l	equ	0xFD9
 23285                           status	equ	0xFD8
 23286                           
 23287 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
 23288 ;; Defined at:
 23289 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23290 ;; Parameters:    Size  Location     Type
 23291 ;;  param           1  [STACK] unsigned char 
 23292 ;; Auto vars:     Size  Location     Type
 23293 ;;  freq            4  [STACK] unsigned long 
 23294 ;; Return value:  Size  Location     Type
 23295 ;;                  1  [STACK] void 
 23296 ;; Registers used:
 23297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
 23298 ;; Tracked objects:
 23299 ;;		On entry : 3F/0
 23300 ;;		On exit  : 0/0
 23301 ;;		Unchanged: 0/0
 23302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23307 ;;Total ram usage:        0 bytes
 23308 ;; Hardware stack levels used:    1
 23309 ;; Hardware stack levels required when called:   13
 23310 ;; This function calls:
 23311 ;;		_ConfigureRadioRx
 23312 ;;		_GetRx1Freq
 23313 ;;		_RADIO_ReceiveStart
 23314 ;;		_RADIO_ReceiveStop
 23315 ;;		_RADIO_ReleaseData
 23316 ;; This function is called by:
 23317 ;;		_SetCallbackSoftwareTimers
 23318 ;;		_SwTimersExecute
 23319 ;; This function uses a reentrant model
 23320 ;;
 23321                           
 23322                           	psect	text145
 23323  009554                     __ptext145:
 23324                           	opt stack 0
 23325  009554                     _LORAWAN_ReceiveWindow1Callback:
 23326                           	opt stack 0
 23327                           
 23328                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23329  009554  52E6               	movf	postinc1,f,c
 23330  009556  52E6               	movf	postinc1,f,c
 23331  009558  52E6               	movf	postinc1,f,c
 23332  00955A  52E6               	movf	postinc1,f,c
 23333                           
 23334                           ;lorawan.c: 798: uint32_t freq;
 23335                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
 23336                           
 23337                           ;incstack = 0
 23338  00955C  0102               	movlb	2	; () banked
 23339  00955E  B107               	btfsc	(_loRa+3)& (0+255),0,b
 23340  009560  D050               	goto	l2127
 23341                           
 23342                           ; BSR set to: 2
 23343                           ;lorawan.c: 801: {
 23344                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
 23345  009562  0E02               	movlw	2
 23346  009564  1916               	xorwf	(_loRa+18)& (0+255),w,b
 23347  009566  B4D8               	btfsc	status,2,c
 23348                           
 23349                           ; BSR set to: 2
 23350                           ;lorawan.c: 803: {
 23351                           ;lorawan.c: 804: RADIO_ReceiveStop();
 23352  009568  ECDB  F05F         	call	_RADIO_ReceiveStop	;wreg free
 23353                           
 23354                           ;lorawan.c: 805: }
 23355                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
 23356  00956C  0102               	movlb	2	; () banked
 23357  00956E  51F3               	movf	(_loRa+239)& (0+255),w,b
 23358  009570  5D1B               	subwf	(_loRa+23)& (0+255),w,b
 23359  009572  A0D8               	btfss	status,0,c
 23360  009574  D004               	goto	l2125
 23361                           
 23362                           ; BSR set to: 2
 23363                           ;lorawan.c: 807: {
 23364                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
 23365  009576  51F3               	movf	(_loRa+239)& (0+255),w,b
 23366  009578  5D1B               	subwf	(_loRa+23)& (0+255),w,b
 23367  00957A  6F1B               	movwf	(_loRa+23)& (0+255),b
 23368                           
 23369                           ;lorawan.c: 809: }
 23370  00957C  D001               	goto	l20748
 23371  00957E                     l2125:
 23372                           
 23373                           ; BSR set to: 2
 23374                           ;lorawan.c: 810: else
 23375                           ;lorawan.c: 811: {
 23376                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
 23377  00957E  6B1B               	clrf	(_loRa+23)& (0+255),b
 23378  009580                     l20748:
 23379                           
 23380                           ; BSR set to: 2
 23381                           ;lorawan.c: 813: }
 23382                           ;lorawan.c: 815: freq = GetRx1Freq();
 23383  009580  ECD3  F061         	call	_GetRx1Freq	;wreg free
 23384  009584  C060  F050         	movff	?_GetRx1Freq,btemp+8
 23385  009588  C061  F051         	movff	?_GetRx1Freq+1,btemp+9
 23386  00958C  C062  F052         	movff	?_GetRx1Freq+2,btemp+10
 23387  009590  C063  F053         	movff	?_GetRx1Freq+3,btemp+11
 23388                           
 23389                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
 23390  009594  0EFC               	movlw	-4
 23391  009596  C050  FFE3         	movff	btemp+8,plusw1
 23392  00959A  0EFD               	movlw	-3
 23393  00959C  C051  FFE3         	movff	btemp+9,plusw1
 23394  0095A0  0EFE               	movlw	-2
 23395  0095A2  C052  FFE3         	movff	btemp+10,plusw1
 23396  0095A6  0EFF               	movlw	-1
 23397  0095A8  C053  FFE3         	movff	btemp+11,plusw1
 23398                           
 23399                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
 23400  0095AC  0102               	movlb	2	; () banked
 23401  0095AE  5106               	movf	(_loRa+2)& (0+255),w,b
 23402  0095B0  0BF0               	andlw	-16
 23403  0095B2  0903               	iorlw	3
 23404  0095B4  6F06               	movwf	(_loRa+2)& (0+255),b
 23405                           
 23406                           ; BSR set to: 2
 23407                           ;lorawan.c: 819: RADIO_ReleaseData();
 23408  0095B6  EC3A  F063         	call	_RADIO_ReleaseData	;wreg free
 23409                           
 23410                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
 23411                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
 23412  0095BA  50E1               	movf	fsr1l,w,c
 23413  0095BC  0FFC               	addlw	-4
 23414  0095BE  6ED9               	movwf	fsr2l,c
 23415  0095C0  50E2               	movf	fsr1h,w,c
 23416  0095C2  6EDA               	movwf	fsr2h,c
 23417  0095C4  0EFF               	movlw	255
 23418  0095C6  22DA               	addwfc	fsr2h,f,c
 23419  0095C8  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
 23420  0095CC  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
 23421  0095D0  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
 23422  0095D4  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
 23423  0095D8  0102               	movlb	2	; () banked
 23424  0095DA  511B               	movf	(_loRa+23)& (0+255),w,b
 23425  0095DC  EC2D  F05E         	call	_ConfigureRadioRx
 23426                           
 23427                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
 23428  0095E0  0EED               	movlw	low _rxWindowSize
 23429  0095E2  0102               	movlb	2	; () banked
 23430  0095E4  251B               	addwf	(_loRa+23)& (0+255),w,b
 23431  0095E6  6EF6               	movwf	tblptrl,c
 23432  0095E8  6AF7               	clrf	tblptrh,c
 23433  0095EA  0EFE               	movlw	high _rxWindowSize
 23434  0095EC  22F7               	addwfc	tblptrh,f,c
 23435  0095EE                     	if	1	;There are 3 active tblptr bytes
 23436  0095EE  6AF8               	clrf	tblptru,c
 23437  0095F0  0E00               	movlw	low (__mediumconst shr (0+16))
 23438  0095F2  22F8               	addwfc	tblptru,f,c
 23439  0095F4                     	endif
 23440  0095F4  0008               	tblrd		*
 23441  0095F6  50F5               	movf	tablat,w,c
 23442  0095F8  0100               	movlb	0	; () banked
 23443  0095FA  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23444  0095FC  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23445  0095FE  ECFE  F02E         	call	_RADIO_ReceiveStart	;wreg free
 23446  009602                     l2127:
 23447                           
 23448                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
 23449  009602  0EFB               	movlw	251
 23450  009604  26E1               	addwf	fsr1l,f,c
 23451  009606  0EFF               	movlw	255
 23452  009608  22E2               	addwfc	fsr1h,f,c
 23453  00960A  0012               	return		;funcret
 23454  00960C                     __end_of_LORAWAN_ReceiveWindow1Callback:
 23455                           	opt stack 0
 23456                           tosu	equ	0xFFF
 23457                           tosh	equ	0xFFE
 23458                           tosl	equ	0xFFD
 23459                           pclath	equ	0xFFA
 23460                           tblptru	equ	0xFF8
 23461                           tblptrh	equ	0xFF7
 23462                           tblptrl	equ	0xFF6
 23463                           tablat	equ	0xFF5
 23464                           prodh	equ	0xFF4
 23465                           prodl	equ	0xFF3
 23466                           intcon	equ	0xFF2
 23467                           intcon2	equ	0xFF1
 23468                           intcon3	equ	0xFF0
 23469                           postinc0	equ	0xFEE
 23470                           wreg	equ	0xFE8
 23471                           postinc1	equ	0xFE6
 23472                           postdec1	equ	0xFE5
 23473                           plusw1	equ	0xFE3
 23474                           fsr1h	equ	0xFE2
 23475                           fsr1l	equ	0xFE1
 23476                           indf2	equ	0xFDF
 23477                           postinc2	equ	0xFDE
 23478                           postdec2	equ	0xFDD
 23479                           fsr2h	equ	0xFDA
 23480                           fsr2l	equ	0xFD9
 23481                           status	equ	0xFD8
 23482                           
 23483 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
 23484 ;; Defined at:
 23485 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23486 ;; Parameters:    Size  Location     Type
 23487 ;;  param           1  [STACK] unsigned char 
 23488 ;; Auto vars:     Size  Location     Type
 23489 ;;		None
 23490 ;; Return value:  Size  Location     Type
 23491 ;;                  1  [STACK] void 
 23492 ;; Registers used:
 23493 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 23494 ;; Tracked objects:
 23495 ;;		On entry : 3D/0
 23496 ;;		On exit  : 0/0
 23497 ;;		Unchanged: 0/0
 23498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23503 ;;Total ram usage:        0 bytes
 23504 ;; Hardware stack levels used:    1
 23505 ;; Hardware stack levels required when called:   14
 23506 ;; This function calls:
 23507 ;;		_ConfigureRadioRx
 23508 ;;		_LORAWAN_EnterContinuousReceive
 23509 ;;		_RADIO_GetStatus
 23510 ;;		_RADIO_ReceiveStart
 23511 ;;		_RADIO_ReceiveStop
 23512 ;;		_RADIO_ReleaseData
 23513 ;;		_ResetParametersForConfirmedTransmission
 23514 ;;		_ResetParametersForUnconfirmedTransmission
 23515 ;;		_RxData
 23516 ;; This function is called by:
 23517 ;;		_LORAWAN_RxTimeout
 23518 ;;		_SetCallbackSoftwareTimers
 23519 ;;		_SwTimersExecute
 23520 ;; This function uses a reentrant model
 23521 ;;
 23522                           
 23523                           	psect	text146
 23524  0092E0                     __ptext146:
 23525                           	opt stack 0
 23526  0092E0                     _LORAWAN_ReceiveWindow2Callback:
 23527                           	opt stack 12
 23528                           
 23529                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
 23530                           
 23531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23532                           ;incstack = 0
 23533  0092E0  0102               	movlb	2	; () banked
 23534  0092E2  B107               	btfsc	(_loRa+3)& (0+255),0,b
 23535  0092E4  D05F               	goto	l2130
 23536                           
 23537                           ; BSR set to: 2
 23538                           ;lorawan.c: 831: {
 23539                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
 23540  0092E6  EC37  F063         	call	_RADIO_GetStatus	;wreg free
 23541  0092EA  6E53               	movwf	btemp+11,c
 23542  0092EC  B253               	btfsc	btemp+11,1,c
 23543  0092EE  D056               	goto	l19462
 23544                           
 23545                           ;lorawan.c: 833: {
 23546                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
 23547  0092F0  0102               	movlb	2	; () banked
 23548  0092F2  5106               	movf	(_loRa+2)& (0+255),w,b
 23549  0092F4  0BF0               	andlw	-16
 23550  0092F6  0905               	iorlw	5
 23551  0092F8  6F06               	movwf	(_loRa+2)& (0+255),b
 23552                           
 23553                           ; BSR set to: 2
 23554                           ;lorawan.c: 836: RADIO_ReceiveStop();
 23555  0092FA  ECDB  F05F         	call	_RADIO_ReceiveStop	;wreg free
 23556                           
 23557                           ;lorawan.c: 837: RADIO_ReleaseData();
 23558  0092FE  EC3A  F063         	call	_RADIO_ReleaseData	;wreg free
 23559                           
 23560                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23561  009302  C21C  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 23562  009306  C21D  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23563  00930A  C21E  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23564  00930E  C21F  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23565  009312  0102               	movlb	2	; () banked
 23566  009314  5120               	movf	(_loRa+28)& (0+255),w,b
 23567  009316  EC2D  F05E         	call	_ConfigureRadioRx
 23568                           
 23569                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
 23570  00931A  0102               	movlb	2	; () banked
 23571  00931C  5116               	movf	(_loRa+18)& (0+255),w,b
 23572  00931E  A4D8               	btfss	status,2,c
 23573  009320  D036               	goto	l19458
 23574                           
 23575                           ; BSR set to: 2
 23576                           ;lorawan.c: 842: {
 23577                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
 23578  009322  0EED               	movlw	low _rxWindowSize
 23579  009324  2520               	addwf	(_loRa+28)& (0+255),w,b
 23580  009326  6EF6               	movwf	tblptrl,c
 23581  009328  6AF7               	clrf	tblptrh,c
 23582  00932A  0EFE               	movlw	high _rxWindowSize
 23583  00932C  22F7               	addwfc	tblptrh,f,c
 23584  00932E                     	if	1	;There are 3 active tblptr bytes
 23585  00932E  6AF8               	clrf	tblptru,c
 23586  009330  0E00               	movlw	low (__mediumconst shr (0+16))
 23587  009332  22F8               	addwfc	tblptru,f,c
 23588  009334                     	endif
 23589  009334  0008               	tblrd		*
 23590  009336  50F5               	movf	tablat,w,c
 23591  009338  0100               	movlb	0	; () banked
 23592  00933A  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23593  00933C  6BB2               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23594  00933E  ECFE  F02E         	call	_RADIO_ReceiveStart	;wreg free
 23595  009342  C0B1  F049         	movff	?_RADIO_ReceiveStart,btemp+1
 23596  009346  C0B2  F04A         	movff	?_RADIO_ReceiveStart+1,btemp+2
 23597  00934A  5049               	movf	btemp+1,w,c
 23598  00934C  104A               	iorwf	btemp+2,w,c
 23599  00934E  B4D8               	btfsc	status,2,c
 23600  009350  D031               	goto	l2139
 23601                           
 23602                           ;lorawan.c: 844: {
 23603                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
 23604  009352  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23605                           
 23606                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
 23607  009356  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23608                           
 23609                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
 23610  00935A  0101               	movlb	1	; () banked
 23611  00935C  510C               	movf	_rxPayload& (0+255),w,b
 23612  00935E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 23613  009360  B4D8               	btfsc	status,2,c
 23614  009362  D028               	goto	l2139
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;lorawan.c: 848: {
 23618                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23619  009364  0E00               	movlw	0
 23620  009366  0100               	movlb	0	; () banked
 23621  009368  6F60               	movwf	RxData@pData& (0+255),b
 23622  00936A  0E00               	movlw	0
 23623  00936C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23624  00936E  0E00               	movlw	0
 23625  009370  6F62               	movwf	RxData@dataLength& (0+255),b
 23626  009372  0E00               	movlw	0
 23627  009374  6F63               	movwf	RxData@status& (0+255),b
 23628  009376  D801               	call	u22008
 23629  009378  D01D               	goto	l2139
 23630  00937A                     u22008:
 23631  00937A  0005               	push	
 23632  00937C  6EFA               	movwf	pclath,c
 23633  00937E  0101               	movlb	1	; () banked
 23634  009380  510C               	movf	_rxPayload& (0+255),w,b
 23635  009382  6EFD               	movwf	tosl,c
 23636  009384  510D               	movf	(_rxPayload+1)& (0+255),w,b
 23637  009386  6EFE               	movwf	tosh,c
 23638  009388  6AFF               	clrf	tosu,c
 23639  00938A  50FA               	movf	pclath,w,c
 23640  00938C  0012               	return		;indir
 23641  00938E                     l19458:
 23642                           
 23643                           ; BSR set to: 2
 23644                           ;lorawan.c: 853: else
 23645                           ;lorawan.c: 854: {
 23646                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 23647  00938E  5106               	movf	(_loRa+2)& (0+255),w,b
 23648  009390  0BF0               	andlw	-16
 23649  009392  0909               	iorlw	9
 23650  009394  6F06               	movwf	(_loRa+2)& (0+255),b
 23651                           
 23652                           ; BSR set to: 2
 23653                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
 23654  009396  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 23655  00939A  D00C               	goto	l2139
 23656  00939C                     l19462:
 23657                           
 23658                           ;lorawan.c: 859: else
 23659                           ;lorawan.c: 860: {
 23660                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
 23661  00939C  0E01               	movlw	1
 23662  00939E  0102               	movlb	2	; () banked
 23663  0093A0  6FF5               	movwf	(_loRa+241)& (0+255),b
 23664                           
 23665                           ; BSR set to: 1
 23666                           ;lorawan.c: 864: }
 23667                           ;lorawan.c: 865: }
 23668  0093A2  D008               	goto	l2139
 23669  0093A4                     l2130:
 23670                           
 23671                           ; BSR set to: 2
 23672                           ;lorawan.c: 866: else
 23673                           ;lorawan.c: 867: {
 23674                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
 23675  0093A4  A504               	btfss	_loRa& (0+255),2,b
 23676  0093A6  D002               	goto	l19466
 23677                           
 23678                           ; BSR set to: 2
 23679                           ;lorawan.c: 871: {
 23680                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
 23681  0093A8  9504               	bcf	_loRa& (0+255),2,b
 23682                           
 23683                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
 23684  0093AA  9906               	bcf	(_loRa+2)& (0+255),4,b
 23685  0093AC                     l19466:
 23686                           
 23687                           ; BSR set to: 2
 23688                           ;lorawan.c: 874: }
 23689                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
 23690  0093AC  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23691                           
 23692                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
 23693  0093B0  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23694  0093B4                     l2139:
 23695                           
 23696                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
 23697  0093B4  52E5               	movf	postdec1,f,c
 23698  0093B6  0012               	return		;funcret
 23699  0093B8                     __end_of_LORAWAN_ReceiveWindow2Callback:
 23700                           	opt stack 0
 23701                           tosu	equ	0xFFF
 23702                           tosh	equ	0xFFE
 23703                           tosl	equ	0xFFD
 23704                           pclath	equ	0xFFA
 23705                           tblptru	equ	0xFF8
 23706                           tblptrh	equ	0xFF7
 23707                           tblptrl	equ	0xFF6
 23708                           tablat	equ	0xFF5
 23709                           prodh	equ	0xFF4
 23710                           prodl	equ	0xFF3
 23711                           intcon	equ	0xFF2
 23712                           intcon2	equ	0xFF1
 23713                           intcon3	equ	0xFF0
 23714                           postinc0	equ	0xFEE
 23715                           wreg	equ	0xFE8
 23716                           postinc1	equ	0xFE6
 23717                           postdec1	equ	0xFE5
 23718                           plusw1	equ	0xFE3
 23719                           fsr1h	equ	0xFE2
 23720                           fsr1l	equ	0xFE1
 23721                           indf2	equ	0xFDF
 23722                           postinc2	equ	0xFDE
 23723                           postdec2	equ	0xFDD
 23724                           fsr2h	equ	0xFDA
 23725                           fsr2l	equ	0xFD9
 23726                           status	equ	0xFD8
 23727                           
 23728 ;; *************** function _RADIO_WatchdogTimeout *****************
 23729 ;; Defined at:
 23730 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23731 ;; Parameters:    Size  Location     Type
 23732 ;;  param           1  [STACK] unsigned char 
 23733 ;; Auto vars:     Size  Location     Type
 23734 ;;		None
 23735 ;; Return value:  Size  Location     Type
 23736 ;;                  1  [STACK] void 
 23737 ;; Registers used:
 23738 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 23739 ;; Tracked objects:
 23740 ;;		On entry : 3F/0
 23741 ;;		On exit  : 0/0
 23742 ;;		Unchanged: 0/0
 23743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23748 ;;Total ram usage:        0 bytes
 23749 ;; Hardware stack levels used:    1
 23750 ;; Hardware stack levels required when called:   16
 23751 ;; This function calls:
 23752 ;;		_LORAWAN_RxTimeout
 23753 ;;		_LORAWAN_TxDone
 23754 ;;		_RADIO_WriteMode
 23755 ;; This function is called by:
 23756 ;;		_RADIO_Init
 23757 ;;		_SwTimersExecute
 23758 ;; This function uses a reentrant model
 23759 ;;
 23760                           
 23761                           	psect	text147
 23762  00B340                     __ptext147:
 23763                           	opt stack 0
 23764  00B340                     _RADIO_WatchdogTimeout:
 23765                           	opt stack 12
 23766                           
 23767                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
 23768                           
 23769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23770                           ;incstack = 0
 23771  00B340  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23772  00B344  0E01               	movlw	1
 23773  00B346  0100               	movlb	0	; () banked
 23774  00B348  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23775  00B34A  0E01               	movlw	1
 23776  00B34C  ECDC  F043         	call	_RADIO_WriteMode
 23777                           
 23778                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 23779  00B350  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23780  00B354  0E00               	movlw	0
 23781  00B356  0100               	movlb	0	; () banked
 23782  00B358  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23783  00B35A  0E00               	movlw	0
 23784  00B35C  ECDC  F043         	call	_RADIO_WriteMode
 23785                           
 23786                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
 23787  00B360  0101               	movlb	1	; () banked
 23788  00B362  8958               	bsf	(_RadioConfiguration+35)& (0+255),4,b
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
 23792  00B364  A358               	btfss	(_RadioConfiguration+35)& (0+255),1,b
 23793  00B366  D004               	goto	l1011
 23794                           
 23795                           ; BSR set to: 1
 23796                           ;radio_driver_SX1276.c: 1414: {
 23797                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
 23798  00B368  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23799                           
 23800                           ; BSR set to: 1
 23801                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
 23802  00B36A  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 23803                           
 23804                           ;radio_driver_SX1276.c: 1417: }
 23805  00B36E  D009               	goto	l1014
 23806  00B370                     l1011:
 23807                           
 23808                           ; BSR set to: 1
 23809                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
 23810  00B370  A158               	btfss	(_RadioConfiguration+35)& (0+255),0,b
 23811  00B372  D007               	goto	l1014
 23812                           
 23813                           ; BSR set to: 1
 23814                           ;radio_driver_SX1276.c: 1419: {
 23815                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
 23816  00B374  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 23817                           
 23818                           ; BSR set to: 1
 23819                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
 23820  00B376  C15F  F0BB         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
 23821  00B37A  C160  F0BC         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
 23822  00B37E  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 23823  00B382                     l1014:
 23824                           
 23825                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23826  00B382  52E5               	movf	postdec1,f,c
 23827  00B384  0012               	return		;funcret
 23828  00B386                     __end_of_RADIO_WatchdogTimeout:
 23829                           	opt stack 0
 23830                           tosu	equ	0xFFF
 23831                           tosh	equ	0xFFE
 23832                           tosl	equ	0xFFD
 23833                           pclath	equ	0xFFA
 23834                           tblptru	equ	0xFF8
 23835                           tblptrh	equ	0xFF7
 23836                           tblptrl	equ	0xFF6
 23837                           tablat	equ	0xFF5
 23838                           prodh	equ	0xFF4
 23839                           prodl	equ	0xFF3
 23840                           intcon	equ	0xFF2
 23841                           intcon2	equ	0xFF1
 23842                           intcon3	equ	0xFF0
 23843                           postinc0	equ	0xFEE
 23844                           wreg	equ	0xFE8
 23845                           postinc1	equ	0xFE6
 23846                           postdec1	equ	0xFE5
 23847                           plusw1	equ	0xFE3
 23848                           fsr1h	equ	0xFE2
 23849                           fsr1l	equ	0xFE1
 23850                           indf2	equ	0xFDF
 23851                           postinc2	equ	0xFDE
 23852                           postdec2	equ	0xFDD
 23853                           fsr2h	equ	0xFDA
 23854                           fsr2l	equ	0xFD9
 23855                           status	equ	0xFD8
 23856                           
 23857 ;; *************** function _RADIO_RxFSKTimeout *****************
 23858 ;; Defined at:
 23859 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;  param           1  [STACK] unsigned char 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  irqFlags        1  [STACK] unsigned char 
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  1  [STACK] void 
 23866 ;; Registers used:
 23867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptr
      +l, tblptrh, tblptru, prodl, prodh, cstack
 23868 ;; Tracked objects:
 23869 ;;		On entry : 3F/0
 23870 ;;		On exit  : 0/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23877 ;;Total ram usage:        0 bytes
 23878 ;; Hardware stack levels used:    1
 23879 ;; Hardware stack levels required when called:   16
 23880 ;; This function calls:
 23881 ;;		_LORAWAN_RxTimeout
 23882 ;;		_RADIO_RegisterRead
 23883 ;;		_RADIO_WriteMode
 23884 ;;		_SwTimerStop
 23885 ;; This function is called by:
 23886 ;;		_RADIO_Init
 23887 ;;		_SwTimersExecute
 23888 ;; This function uses a reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text148
 23892  00B7B0                     __ptext148:
 23893                           	opt stack 0
 23894  00B7B0                     _RADIO_RxFSKTimeout:
 23895                           	opt stack 0
 23896                           
 23897                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 23898  00B7B0  52E6               	movf	postinc1,f,c
 23899                           
 23900                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
 23901                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
 23902                           
 23903                           ;incstack = 0
 23904  00B7B2  0E3E               	movlw	62
 23905  00B7B4  EC92  F05E         	call	_RADIO_RegisterRead
 23906  00B7B8  6E53               	movwf	btemp+11,c
 23907                           
 23908                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
 23909  00B7BA  0EFF               	movlw	-1
 23910  00B7BC  C053  FFE3         	movff	btemp+11,plusw1
 23911                           
 23912                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
 23913                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
 23914  00B7C0  0EFF               	movlw	-1
 23915  00B7C2  B0E3               	btfsc	plusw1,0,c
 23916  00B7C4  D010               	goto	l1008
 23917                           
 23918                           ;radio_driver_SX1276.c: 1397: {
 23919                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 23920  00B7C6  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23921  00B7CA  0E00               	movlw	0
 23922  00B7CC  0100               	movlb	0	; () banked
 23923  00B7CE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23924  00B7D0  0E00               	movlw	0
 23925  00B7D2  ECDC  F043         	call	_RADIO_WriteMode
 23926                           
 23927                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
 23928  00B7D6  0101               	movlb	1	; () banked
 23929  00B7D8  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23930  00B7DA  ECA6  F05E         	call	_SwTimerStop
 23931                           
 23932                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
 23933  00B7DE  0101               	movlb	1	; () banked
 23934  00B7E0  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23935                           
 23936                           ; BSR set to: 1
 23937                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
 23938  00B7E2  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 23939  00B7E6                     l1008:
 23940                           
 23941                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23942  00B7E6  52E5               	movf	postdec1,f,c
 23943  00B7E8  52E5               	movf	postdec1,f,c
 23944  00B7EA  0012               	return		;funcret
 23945  00B7EC                     __end_of_RADIO_RxFSKTimeout:
 23946                           	opt stack 0
 23947                           tosu	equ	0xFFF
 23948                           tosh	equ	0xFFE
 23949                           tosl	equ	0xFFD
 23950                           pclath	equ	0xFFA
 23951                           tblptru	equ	0xFF8
 23952                           tblptrh	equ	0xFF7
 23953                           tblptrl	equ	0xFF6
 23954                           tablat	equ	0xFF5
 23955                           prodh	equ	0xFF4
 23956                           prodl	equ	0xFF3
 23957                           intcon	equ	0xFF2
 23958                           intcon2	equ	0xFF1
 23959                           intcon3	equ	0xFF0
 23960                           postinc0	equ	0xFEE
 23961                           wreg	equ	0xFE8
 23962                           postinc1	equ	0xFE6
 23963                           postdec1	equ	0xFE5
 23964                           plusw1	equ	0xFE3
 23965                           fsr1h	equ	0xFE2
 23966                           fsr1l	equ	0xFE1
 23967                           indf2	equ	0xFDF
 23968                           postinc2	equ	0xFDE
 23969                           postdec2	equ	0xFDD
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function _UnconfirmedTransmissionCallback *****************
 23975 ;; Defined at:
 23976 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  param           1  [STACK] unsigned char 
 23979 ;; Auto vars:     Size  Location     Type
 23980 ;;		None
 23981 ;; Return value:  Size  Location     Type
 23982 ;;                  1  [STACK] void 
 23983 ;; Registers used:
 23984 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, pro
      +dl, prodh, cstack
 23985 ;; Tracked objects:
 23986 ;;		On entry : 3F/0
 23987 ;;		On exit  : 0/0
 23988 ;;		Unchanged: 0/0
 23989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23994 ;;Total ram usage:        0 bytes
 23995 ;; Hardware stack levels used:    1
 23996 ;; Hardware stack levels required when called:   13
 23997 ;; This function calls:
 23998 ;;		_RADIO_Transmit
 23999 ;;		_ResetParametersForUnconfirmedTransmission
 24000 ;;		_RxData
 24001 ;;		_SelectChannelForTransmission
 24002 ;; This function is called by:
 24003 ;;		_SetCallbackSoftwareTimers
 24004 ;;		_SwTimersExecute
 24005 ;; This function uses a reentrant model
 24006 ;;
 24007                           
 24008                           	psect	text149
 24009  00A3D8                     __ptext149:
 24010                           	opt stack 0
 24011  00A3D8                     _UnconfirmedTransmissionCallback:
 24012                           	opt stack 15
 24013                           
 24014                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
 24015                           
 24016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
 24017                           ;incstack = 0
 24018  00A3D8  0E01               	movlw	1
 24019  00A3DA  EC7B  F053         	call	_SelectChannelForTransmission
 24020  00A3DE  0900               	iorlw	0
 24021  00A3E0  A4D8               	btfss	status,2,c
 24022  00A3E2  D018               	goto	l20848
 24023  00A3E4  0E30               	movlw	low (_macBuffer+16)
 24024  00A3E6  0100               	movlb	0	; () banked
 24025  00A3E8  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 24026  00A3EA  0E05               	movlw	high (_macBuffer+16)
 24027  00A3EC  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24028  00A3EE  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 24029  00A3F2  ECE2  F02D         	call	_RADIO_Transmit	;wreg free
 24030  00A3F6  C0B1  F049         	movff	?_RADIO_Transmit,btemp+1
 24031  00A3FA  C0B2  F04A         	movff	?_RADIO_Transmit+1,btemp+2
 24032  00A3FE  5049               	movf	btemp+1,w,c
 24033  00A400  104A               	iorwf	btemp+2,w,c
 24034  00A402  A4D8               	btfss	status,2,c
 24035  00A404  D007               	goto	l20848
 24036                           
 24037                           ;lorawan.c: 1001: {
 24038                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 24039  00A406  0102               	movlb	2	; () banked
 24040  00A408  2BDC               	incf	(_loRa+216)& (0+255),f,b
 24041                           
 24042                           ; BSR set to: 2
 24043                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 24044  00A40A  5106               	movf	(_loRa+2)& (0+255),w,b
 24045  00A40C  0BF0               	andlw	-16
 24046  00A40E  0901               	iorlw	1
 24047  00A410  6F06               	movwf	(_loRa+2)& (0+255),b
 24048                           
 24049                           ;lorawan.c: 1005: }
 24050  00A412  D01C               	goto	u24719
 24051  00A414                     l20848:
 24052                           
 24053                           ;lorawan.c: 1006: else
 24054                           ;lorawan.c: 1008: {
 24055                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
 24056  00A414  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 24057                           
 24058                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
 24059  00A418  0101               	movlb	1	; () banked
 24060  00A41A  510C               	movf	_rxPayload& (0+255),w,b
 24061  00A41C  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 24062  00A41E  B4D8               	btfsc	status,2,c
 24063  00A420  D015               	goto	u24719
 24064                           
 24065                           ; BSR set to: 1
 24066                           ;lorawan.c: 1011: {
 24067                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 24068  00A422  0E00               	movlw	0
 24069  00A424  0100               	movlb	0	; () banked
 24070  00A426  6F60               	movwf	RxData@pData& (0+255),b
 24071  00A428  0E00               	movlw	0
 24072  00A42A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 24073  00A42C  0E00               	movlw	0
 24074  00A42E  6F62               	movwf	RxData@dataLength& (0+255),b
 24075  00A430  0E00               	movlw	0
 24076  00A432  6F63               	movwf	RxData@status& (0+255),b
 24077  00A434  D801               	call	u24718
 24078  00A436  D00A               	goto	u24719
 24079  00A438                     u24718:
 24080  00A438  0005               	push	
 24081  00A43A  6EFA               	movwf	pclath,c
 24082  00A43C  0101               	movlb	1	; () banked
 24083  00A43E  510C               	movf	_rxPayload& (0+255),w,b
 24084  00A440  6EFD               	movwf	tosl,c
 24085  00A442  510D               	movf	(_rxPayload+1)& (0+255),w,b
 24086  00A444  6EFE               	movwf	tosh,c
 24087  00A446  6AFF               	clrf	tosu,c
 24088  00A448  50FA               	movf	pclath,w,c
 24089  00A44A  0012               	return		;indir
 24090  00A44C                     u24719:
 24091                           
 24092                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
 24093  00A44C  52E5               	movf	postdec1,f,c
 24094  00A44E  0012               	return		;funcret
 24095  00A450                     __end_of_UnconfirmedTransmissionCallback:
 24096                           	opt stack 0
 24097                           tosu	equ	0xFFF
 24098                           tosh	equ	0xFFE
 24099                           tosl	equ	0xFFD
 24100                           pclath	equ	0xFFA
 24101                           tblptru	equ	0xFF8
 24102                           tblptrh	equ	0xFF7
 24103                           tblptrl	equ	0xFF6
 24104                           tablat	equ	0xFF5
 24105                           prodh	equ	0xFF4
 24106                           prodl	equ	0xFF3
 24107                           intcon	equ	0xFF2
 24108                           intcon2	equ	0xFF1
 24109                           intcon3	equ	0xFF0
 24110                           postinc0	equ	0xFEE
 24111                           wreg	equ	0xFE8
 24112                           postinc1	equ	0xFE6
 24113                           postdec1	equ	0xFE5
 24114                           plusw1	equ	0xFE3
 24115                           fsr1h	equ	0xFE2
 24116                           fsr1l	equ	0xFE1
 24117                           indf2	equ	0xFDF
 24118                           postinc2	equ	0xFDE
 24119                           postdec2	equ	0xFDD
 24120                           fsr2h	equ	0xFDA
 24121                           fsr2l	equ	0xFD9
 24122                           status	equ	0xFD8
 24123                           
 24124 ;; *************** function _GetRx1Freq *****************
 24125 ;; Defined at:
 24126 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24127 ;; Parameters:    Size  Location     Type
 24128 ;;		None
 24129 ;; Auto vars:     Size  Location     Type
 24130 ;;		None
 24131 ;; Return value:  Size  Location     Type
 24132 ;;                  4    0[BANK0 ] unsigned long 
 24133 ;; Registers used:
 24134 ;;		None
 24135 ;; Tracked objects:
 24136 ;;		On entry : 0/0
 24137 ;;		On exit  : 0/0
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24143 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24144 ;;Total ram usage:        4 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:    7
 24147 ;; This function calls:
 24148 ;;		Nothing
 24149 ;; This function is called by:
 24150 ;;		_LORAWAN_ReceiveWindow1Callback
 24151 ;; This function uses a non-reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text150
 24155  00C3A6                     __ptext150:
 24156                           	opt stack 0
 24157  00C3A6                     _GetRx1Freq:
 24158                           	opt stack 20
 24159                           
 24160                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
 24161                           
 24162                           ;incstack = 0
 24163  00C3A6  C217  F060         	movff	_loRa+19,?_GetRx1Freq
 24164  00C3AA  C218  F061         	movff	_loRa+20,?_GetRx1Freq+1
 24165  00C3AE  C219  F062         	movff	_loRa+21,?_GetRx1Freq+2
 24166  00C3B2  C21A  F063         	movff	_loRa+22,?_GetRx1Freq+3
 24167  00C3B6  0012               	return		;funcret
 24168  00C3B8                     __end_of_GetRx1Freq:
 24169                           	opt stack 0
 24170                           tosu	equ	0xFFF
 24171                           tosh	equ	0xFFE
 24172                           tosl	equ	0xFFD
 24173                           pclath	equ	0xFFA
 24174                           tblptru	equ	0xFF8
 24175                           tblptrh	equ	0xFF7
 24176                           tblptrl	equ	0xFF6
 24177                           tablat	equ	0xFF5
 24178                           prodh	equ	0xFF4
 24179                           prodl	equ	0xFF3
 24180                           intcon	equ	0xFF2
 24181                           intcon2	equ	0xFF1
 24182                           intcon3	equ	0xFF0
 24183                           postinc0	equ	0xFEE
 24184                           wreg	equ	0xFE8
 24185                           postinc1	equ	0xFE6
 24186                           postdec1	equ	0xFE5
 24187                           plusw1	equ	0xFE3
 24188                           fsr1h	equ	0xFE2
 24189                           fsr1l	equ	0xFE1
 24190                           indf2	equ	0xFDF
 24191                           postinc2	equ	0xFDE
 24192                           postdec2	equ	0xFDD
 24193                           fsr2h	equ	0xFDA
 24194                           fsr2l	equ	0xFD9
 24195                           status	equ	0xFD8
 24196                           
 24197 ;; *************** function _RADIO_DIO5 *****************
 24198 ;; Defined at:
 24199 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24200 ;; Parameters:    Size  Location     Type
 24201 ;;		None
 24202 ;; Auto vars:     Size  Location     Type
 24203 ;;  dioMapping      1    6[BANK0 ] unsigned char 
 24204 ;; Return value:  Size  Location     Type
 24205 ;;                  1    wreg      void 
 24206 ;; Registers used:
 24207 ;;		wreg, status,2, status,0, cstack
 24208 ;; Tracked objects:
 24209 ;;		On entry : 0/0
 24210 ;;		On exit  : 0/0
 24211 ;;		Unchanged: 0/0
 24212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24217 ;;Total ram usage:        2 bytes
 24218 ;; Hardware stack levels used:    1
 24219 ;; Hardware stack levels required when called:   11
 24220 ;; This function calls:
 24221 ;;		_RADIO_RegisterRead
 24222 ;;		_RADIO_UnhandledInterrupt
 24223 ;; This function is called by:
 24224 ;;		_LORAWAN_Mainloop
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text151
 24229  00BCAC                     __ptext151:
 24230                           	opt stack 0
 24231  00BCAC                     _RADIO_DIO5:
 24232                           	opt stack 18
 24233                           
 24234                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
 24235                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
 24236                           
 24237                           ;incstack = 0
 24238  00BCAC  0E41               	movlw	65
 24239  00BCAE  EC92  F05E         	call	_RADIO_RegisterRead
 24240  00BCB2  0100               	movlb	0	; () banked
 24241  00BCB4  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 24242  00BCB6  3965               	swapf	??_RADIO_DIO5& (0+255),w,b
 24243  00BCB8  0B0F               	andlw	15
 24244  00BCBA  0B03               	andlw	3
 24245  00BCBC  6F66               	movwf	RADIO_DIO5@dioMapping& (0+255),b
 24246                           
 24247                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24248  00BCBE  0E01               	movlw	1
 24249  00BCC0  EC92  F05E         	call	_RADIO_RegisterRead
 24250  00BCC4  0100               	movlb	0	; () banked
 24251  00BCC6  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 24252  00BCC8  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
 24253  00BCCA  0012               	return	
 24254                           
 24255                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24256                           
 24257                           ; BSR set to: 0
 24258                           
 24259                           ;radio_driver_SX1276.c: 1354: {
 24260                           ;radio_driver_SX1276.c: 1355: default:
 24261                           
 24262                           ; BSR set to: 0
 24263                           ;radio_driver_SX1276.c: 1351: {
 24264                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
 24265  00BCCC  0E01               	movlw	1
 24266  00BCCE  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 24267                           
 24268                           ;radio_driver_SX1276.c: 1358: }
 24269                           
 24270                           ;radio_driver_SX1276.c: 1357: break;
 24271  00BCD2  0012               	return	
 24272  00BCD4                     __end_of_RADIO_DIO5:
 24273                           	opt stack 0
 24274                           tosu	equ	0xFFF
 24275                           tosh	equ	0xFFE
 24276                           tosl	equ	0xFFD
 24277                           pclath	equ	0xFFA
 24278                           tblptru	equ	0xFF8
 24279                           tblptrh	equ	0xFF7
 24280                           tblptrl	equ	0xFF6
 24281                           tablat	equ	0xFF5
 24282                           prodh	equ	0xFF4
 24283                           prodl	equ	0xFF3
 24284                           intcon	equ	0xFF2
 24285                           intcon2	equ	0xFF1
 24286                           intcon3	equ	0xFF0
 24287                           postinc0	equ	0xFEE
 24288                           wreg	equ	0xFE8
 24289                           postinc1	equ	0xFE6
 24290                           postdec1	equ	0xFE5
 24291                           plusw1	equ	0xFE3
 24292                           fsr1h	equ	0xFE2
 24293                           fsr1l	equ	0xFE1
 24294                           indf2	equ	0xFDF
 24295                           postinc2	equ	0xFDE
 24296                           postdec2	equ	0xFDD
 24297                           fsr2h	equ	0xFDA
 24298                           fsr2l	equ	0xFD9
 24299                           status	equ	0xFD8
 24300                           
 24301 ;; *************** function _RADIO_DIO4 *****************
 24302 ;; Defined at:
 24303 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24304 ;; Parameters:    Size  Location     Type
 24305 ;;		None
 24306 ;; Auto vars:     Size  Location     Type
 24307 ;;  dioMapping      1    7[BANK0 ] unsigned char 
 24308 ;; Return value:  Size  Location     Type
 24309 ;;                  1    wreg      void 
 24310 ;; Registers used:
 24311 ;;		wreg, status,2, status,0, cstack
 24312 ;; Tracked objects:
 24313 ;;		On entry : 0/0
 24314 ;;		On exit  : 0/0
 24315 ;;		Unchanged: 0/0
 24316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24319 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24321 ;;Total ram usage:        3 bytes
 24322 ;; Hardware stack levels used:    1
 24323 ;; Hardware stack levels required when called:   11
 24324 ;; This function calls:
 24325 ;;		_RADIO_RegisterRead
 24326 ;;		_RADIO_UnhandledInterrupt
 24327 ;; This function is called by:
 24328 ;;		_LORAWAN_Mainloop
 24329 ;; This function uses a non-reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text152
 24333  00B858                     __ptext152:
 24334                           	opt stack 0
 24335  00B858                     _RADIO_DIO4:
 24336                           	opt stack 18
 24337                           
 24338                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
 24339                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
 24340                           
 24341                           ;incstack = 0
 24342  00B858  0E41               	movlw	65
 24343  00B85A  EC92  F05E         	call	_RADIO_RegisterRead
 24344  00B85E  0100               	movlb	0	; () banked
 24345  00B860  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 24346  00B862  0E06               	movlw	6
 24347  00B864  6F66               	movwf	(??_RADIO_DIO4+1)& (0+255),b
 24348  00B866                     u25245:
 24349  00B866  90D8               	bcf	status,0,c
 24350  00B868  3365               	rrcf	??_RADIO_DIO4& (0+255),f,b
 24351  00B86A  2F66               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
 24352  00B86C  D7FC               	goto	u25245
 24353  00B86E  5165               	movf	??_RADIO_DIO4& (0+255),w,b
 24354  00B870  0B03               	andlw	3
 24355  00B872  6F67               	movwf	RADIO_DIO4@dioMapping& (0+255),b
 24356                           
 24357                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24358  00B874  0E01               	movlw	1
 24359  00B876  EC92  F05E         	call	_RADIO_RegisterRead
 24360  00B87A  0100               	movlb	0	; () banked
 24361  00B87C  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 24362  00B87E  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
 24363  00B880  0012               	return	
 24364                           
 24365                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24366                           
 24367                           ; BSR set to: 0
 24368                           
 24369                           ;radio_driver_SX1276.c: 1331: {
 24370                           ;radio_driver_SX1276.c: 1332: default:
 24371                           
 24372                           ; BSR set to: 0
 24373                           ;radio_driver_SX1276.c: 1328: {
 24374                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
 24375  00B882  0E01               	movlw	1
 24376  00B884  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 24377                           
 24378                           ;radio_driver_SX1276.c: 1335: }
 24379                           
 24380                           ;radio_driver_SX1276.c: 1334: break;
 24381  00B888  0012               	return	
 24382  00B88A                     __end_of_RADIO_DIO4:
 24383                           	opt stack 0
 24384                           tosu	equ	0xFFF
 24385                           tosh	equ	0xFFE
 24386                           tosl	equ	0xFFD
 24387                           pclath	equ	0xFFA
 24388                           tblptru	equ	0xFF8
 24389                           tblptrh	equ	0xFF7
 24390                           tblptrl	equ	0xFF6
 24391                           tablat	equ	0xFF5
 24392                           prodh	equ	0xFF4
 24393                           prodl	equ	0xFF3
 24394                           intcon	equ	0xFF2
 24395                           intcon2	equ	0xFF1
 24396                           intcon3	equ	0xFF0
 24397                           postinc0	equ	0xFEE
 24398                           wreg	equ	0xFE8
 24399                           postinc1	equ	0xFE6
 24400                           postdec1	equ	0xFE5
 24401                           plusw1	equ	0xFE3
 24402                           fsr1h	equ	0xFE2
 24403                           fsr1l	equ	0xFE1
 24404                           indf2	equ	0xFDF
 24405                           postinc2	equ	0xFDE
 24406                           postdec2	equ	0xFDD
 24407                           fsr2h	equ	0xFDA
 24408                           fsr2l	equ	0xFD9
 24409                           status	equ	0xFD8
 24410                           
 24411 ;; *************** function _RADIO_DIO3 *****************
 24412 ;; Defined at:
 24413 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24414 ;; Parameters:    Size  Location     Type
 24415 ;;		None
 24416 ;; Auto vars:     Size  Location     Type
 24417 ;;  dioMapping      1    6[BANK0 ] unsigned char 
 24418 ;; Return value:  Size  Location     Type
 24419 ;;                  1    wreg      void 
 24420 ;; Registers used:
 24421 ;;		wreg, status,2, status,0, cstack
 24422 ;; Tracked objects:
 24423 ;;		On entry : 0/0
 24424 ;;		On exit  : 0/0
 24425 ;;		Unchanged: 0/0
 24426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24429 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24431 ;;Total ram usage:        2 bytes
 24432 ;; Hardware stack levels used:    1
 24433 ;; Hardware stack levels required when called:   11
 24434 ;; This function calls:
 24435 ;;		_RADIO_RegisterRead
 24436 ;;		_RADIO_UnhandledInterrupt
 24437 ;; This function is called by:
 24438 ;;		_LORAWAN_Mainloop
 24439 ;; This function uses a non-reentrant model
 24440 ;;
 24441                           
 24442                           	psect	text153
 24443  00BE70                     __ptext153:
 24444                           	opt stack 0
 24445  00BE70                     _RADIO_DIO3:
 24446                           	opt stack 18
 24447                           
 24448                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
 24449                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
 24450                           
 24451                           ;incstack = 0
 24452  00BE70  0E40               	movlw	64
 24453  00BE72  EC92  F05E         	call	_RADIO_RegisterRead
 24454  00BE76  0B03               	andlw	3
 24455  00BE78  0100               	movlb	0	; () banked
 24456  00BE7A  6F66               	movwf	RADIO_DIO3@dioMapping& (0+255),b
 24457                           
 24458                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24459  00BE7C  0E01               	movlw	1
 24460  00BE7E  EC92  F05E         	call	_RADIO_RegisterRead
 24461  00BE82  0100               	movlb	0	; () banked
 24462  00BE84  6F65               	movwf	??_RADIO_DIO3& (0+255),b
 24463  00BE86  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
 24464  00BE88  0012               	return	
 24465                           
 24466                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24467                           
 24468                           ; BSR set to: 0
 24469                           
 24470                           ;radio_driver_SX1276.c: 1308: {
 24471                           ;radio_driver_SX1276.c: 1309: default:
 24472                           
 24473                           ; BSR set to: 0
 24474                           ;radio_driver_SX1276.c: 1305: {
 24475                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
 24476  00BE8A  0E01               	movlw	1
 24477  00BE8C  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 24478                           
 24479                           ;radio_driver_SX1276.c: 1312: }
 24480                           
 24481                           ;radio_driver_SX1276.c: 1311: break;
 24482  00BE90  0012               	return	
 24483  00BE92                     __end_of_RADIO_DIO3:
 24484                           	opt stack 0
 24485                           tosu	equ	0xFFF
 24486                           tosh	equ	0xFFE
 24487                           tosl	equ	0xFFD
 24488                           pclath	equ	0xFFA
 24489                           tblptru	equ	0xFF8
 24490                           tblptrh	equ	0xFF7
 24491                           tblptrl	equ	0xFF6
 24492                           tablat	equ	0xFF5
 24493                           prodh	equ	0xFF4
 24494                           prodl	equ	0xFF3
 24495                           intcon	equ	0xFF2
 24496                           intcon2	equ	0xFF1
 24497                           intcon3	equ	0xFF0
 24498                           postinc0	equ	0xFEE
 24499                           wreg	equ	0xFE8
 24500                           postinc1	equ	0xFE6
 24501                           postdec1	equ	0xFE5
 24502                           plusw1	equ	0xFE3
 24503                           fsr1h	equ	0xFE2
 24504                           fsr1l	equ	0xFE1
 24505                           indf2	equ	0xFDF
 24506                           postinc2	equ	0xFDE
 24507                           postdec2	equ	0xFDD
 24508                           fsr2h	equ	0xFDA
 24509                           fsr2l	equ	0xFD9
 24510                           status	equ	0xFD8
 24511                           
 24512 ;; *************** function _RADIO_DIO2 *****************
 24513 ;; Defined at:
 24514 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24515 ;; Parameters:    Size  Location     Type
 24516 ;;		None
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;  dioMapping      1   28[BANK0 ] unsigned char 
 24519 ;;  opMode          1   27[BANK0 ] unsigned char 
 24520 ;; Return value:  Size  Location     Type
 24521 ;;                  1    wreg      void 
 24522 ;; Registers used:
 24523 ;;		wreg, status,2, status,0, cstack
 24524 ;; Tracked objects:
 24525 ;;		On entry : 0/0
 24526 ;;		On exit  : 0/0
 24527 ;;		Unchanged: 0/0
 24528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24532 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24533 ;;Total ram usage:        3 bytes
 24534 ;; Hardware stack levels used:    1
 24535 ;; Hardware stack levels required when called:   12
 24536 ;; This function calls:
 24537 ;;		_RADIO_FHSSChangeChannel
 24538 ;;		_RADIO_RegisterRead
 24539 ;;		_RADIO_UnhandledInterrupt
 24540 ;; This function is called by:
 24541 ;;		_LORAWAN_Mainloop
 24542 ;; This function uses a non-reentrant model
 24543 ;;
 24544                           
 24545                           	psect	text154
 24546  00AE8E                     __ptext154:
 24547                           	opt stack 0
 24548  00AE8E                     _RADIO_DIO2:
 24549                           	opt stack 17
 24550                           
 24551                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
 24552                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
 24553                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
 24554                           
 24555                           ;incstack = 0
 24556  00AE8E  0E40               	movlw	64
 24557  00AE90  EC92  F05E         	call	_RADIO_RegisterRead
 24558  00AE94  0100               	movlb	0	; () banked
 24559  00AE96  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 24560  00AE98  90D8               	bcf	status,0,c
 24561  00AE9A  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
 24562  00AE9C  90D8               	bcf	status,0,c
 24563  00AE9E  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
 24564  00AEA0  0B03               	andlw	3
 24565  00AEA2  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
 24566                           
 24567                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
 24568  00AEA4  0E01               	movlw	1
 24569  00AEA6  EC92  F05E         	call	_RADIO_RegisterRead
 24570  00AEAA  0100               	movlb	0	; () banked
 24571  00AEAC  6F7B               	movwf	RADIO_DIO2@opMode& (0+255),b
 24572                           
 24573                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24574  00AEAE  0E01               	movlw	1
 24575  00AEB0  EC92  F05E         	call	_RADIO_RegisterRead
 24576  00AEB4  0100               	movlb	0	; () banked
 24577  00AEB6  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 24578  00AEB8  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
 24579  00AEBA  0012               	return	
 24580  00AEBC  D007               	goto	l968
 24581  00AEBE                     
 24582                           ; BSR set to: 0
 24583                           ;radio_driver_SX1276.c: 1283: case 0x01:
 24584                           ;radio_driver_SX1276.c: 1284: case 0x02:
 24585                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
 24586                           
 24587                           ; BSR set to: 0
 24588                           
 24589                           ; BSR set to: 0
 24590                           
 24591                           ; BSR set to: 0
 24592  00AEBE  EC5B  F05B         	call	_RADIO_FHSSChangeChannel	;wreg free
 24593                           
 24594                           ;radio_driver_SX1276.c: 1286: break;
 24595  00AEC2  0012               	return	
 24596  00AEC4                     
 24597                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24598  00AEC4  0E01               	movlw	1
 24599  00AEC6  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 24600                           
 24601                           ;radio_driver_SX1276.c: 1290: }
 24602                           
 24603                           ;radio_driver_SX1276.c: 1289: break;
 24604  00AECA  0012               	return	
 24605  00AECC                     l968:
 24606  00AECC  0100               	movlb	0	; () banked
 24607  00AECE  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
 24608                           
 24609                           ; Switch size 1, requested type "space"
 24610                           ; Number of cases is 3, Range of values is 0 to 2
 24611                           ; switch strategies available:
 24612                           ; Name         Instructions Cycles
 24613                           ; simple_byte           10     6 (average)
 24614                           ;	Chosen strategy is simple_byte
 24615  00AED0  0A00               	xorlw	0	; case 0
 24616  00AED2  B4D8               	btfsc	status,2,c
 24617  00AED4  D7F4               	goto	l969
 24618  00AED6  0A01               	xorlw	1	; case 1
 24619  00AED8  B4D8               	btfsc	status,2,c
 24620  00AEDA  D7F1               	goto	l969
 24621  00AEDC  0A03               	xorlw	3	; case 2
 24622  00AEDE  B4D8               	btfsc	status,2,c
 24623  00AEE0  D7EE               	goto	l969
 24624  00AEE2  D7F0               	goto	l973
 24625  00AEE4                     __end_of_RADIO_DIO2:
 24626                           	opt stack 0
 24627                           tosu	equ	0xFFF
 24628                           tosh	equ	0xFFE
 24629                           tosl	equ	0xFFD
 24630                           pclath	equ	0xFFA
 24631                           tblptru	equ	0xFF8
 24632                           tblptrh	equ	0xFF7
 24633                           tblptrl	equ	0xFF6
 24634                           tablat	equ	0xFF5
 24635                           prodh	equ	0xFF4
 24636                           prodl	equ	0xFF3
 24637                           intcon	equ	0xFF2
 24638                           intcon2	equ	0xFF1
 24639                           intcon3	equ	0xFF0
 24640                           postinc0	equ	0xFEE
 24641                           wreg	equ	0xFE8
 24642                           postinc1	equ	0xFE6
 24643                           postdec1	equ	0xFE5
 24644                           plusw1	equ	0xFE3
 24645                           fsr1h	equ	0xFE2
 24646                           fsr1l	equ	0xFE1
 24647                           indf2	equ	0xFDF
 24648                           postinc2	equ	0xFDE
 24649                           postdec2	equ	0xFDD
 24650                           fsr2h	equ	0xFDA
 24651                           fsr2l	equ	0xFD9
 24652                           status	equ	0xFD8
 24653                           
 24654 ;; *************** function _RADIO_DIO1 *****************
 24655 ;; Defined at:
 24656 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24657 ;; Parameters:    Size  Location     Type
 24658 ;;		None
 24659 ;; Auto vars:     Size  Location     Type
 24660 ;;  dioMapping      1  108[BANK0 ] unsigned char 
 24661 ;; Return value:  Size  Location     Type
 24662 ;;                  1    wreg      void 
 24663 ;; Registers used:
 24664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 24665 ;; Tracked objects:
 24666 ;;		On entry : 0/0
 24667 ;;		On exit  : 0/0
 24668 ;;		Unchanged: 0/0
 24669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24674 ;;Total ram usage:        2 bytes
 24675 ;; Hardware stack levels used:    1
 24676 ;; Hardware stack levels required when called:   17
 24677 ;; This function calls:
 24678 ;;		_RADIO_FHSSChangeChannel
 24679 ;;		_RADIO_RegisterRead
 24680 ;;		_RADIO_RxTimeout
 24681 ;;		_RADIO_UnhandledInterrupt
 24682 ;; This function is called by:
 24683 ;;		_LORAWAN_Mainloop
 24684 ;; This function uses a non-reentrant model
 24685 ;;
 24686                           
 24687                           	psect	text155
 24688  00B21C                     __ptext155:
 24689                           	opt stack 0
 24690  00B21C                     _RADIO_DIO1:
 24691                           	opt stack 12
 24692                           
 24693                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
 24694                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
 24695                           
 24696                           ;incstack = 0
 24697  00B21C  0E40               	movlw	64
 24698  00B21E  EC92  F05E         	call	_RADIO_RegisterRead
 24699  00B222  0100               	movlb	0	; () banked
 24700  00B224  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
 24701  00B226  39CB               	swapf	??_RADIO_DIO1& (0+255),w,b
 24702  00B228  0B0F               	andlw	15
 24703  00B22A  0B03               	andlw	3
 24704  00B22C  6FCC               	movwf	RADIO_DIO1@dioMapping& (0+255),b
 24705                           
 24706                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 24707  00B22E  0E01               	movlw	1
 24708  00B230  EC92  F05E         	call	_RADIO_RegisterRead
 24709  00B234  0100               	movlb	0	; () banked
 24710  00B236  6FCB               	movwf	??_RADIO_DIO1& (0+255),b
 24711  00B238  BFCB               	btfsc	??_RADIO_DIO1& (0+255),7,b
 24712  00B23A  D00B               	goto	l954
 24713  00B23C  D013               	goto	l960
 24714  00B23E                     
 24715                           ; BSR set to: 0
 24716                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 24717                           
 24718                           ; BSR set to: 0
 24719  00B23E  ECC1  F05D         	call	_RADIO_RxTimeout	;wreg free
 24720                           
 24721                           ;radio_driver_SX1276.c: 1244: break;
 24722  00B242  0012               	return	
 24723  00B244                     
 24724                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 24725  00B244  EC5B  F05B         	call	_RADIO_FHSSChangeChannel	;wreg free
 24726                           
 24727                           ;radio_driver_SX1276.c: 1247: break;
 24728  00B248  0012               	return	
 24729  00B24A                     
 24730                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 24731  00B24A  0E01               	movlw	1
 24732  00B24C  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 24733                           
 24734                           ;radio_driver_SX1276.c: 1251: }
 24735                           
 24736                           ;radio_driver_SX1276.c: 1250: break;
 24737  00B250  0012               	return	
 24738  00B252                     l954:
 24739  00B252  0100               	movlb	0	; () banked
 24740  00B254  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 24741                           
 24742                           ; Switch size 1, requested type "space"
 24743                           ; Number of cases is 2, Range of values is 0 to 1
 24744                           ; switch strategies available:
 24745                           ; Name         Instructions Cycles
 24746                           ; simple_byte            7     4 (average)
 24747                           ;	Chosen strategy is simple_byte
 24748  00B256  0A00               	xorlw	0	; case 0
 24749  00B258  B4D8               	btfsc	status,2,c
 24750  00B25A  D7F1               	goto	l955
 24751  00B25C  0A01               	xorlw	1	; case 1
 24752  00B25E  B4D8               	btfsc	status,2,c
 24753  00B260  D7F1               	goto	l957
 24754  00B262  D7F3               	goto	l958
 24755  00B264                     l960:
 24756                           
 24757                           ; BSR set to: 0
 24758                           
 24759                           ; BSR set to: 0
 24760  00B264  51CC               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 24761                           
 24762                           ; Switch size 1, requested type "space"
 24763                           ; Number of cases is 1, Range of values is 0 to 0
 24764                           ; switch strategies available:
 24765                           ; Name         Instructions Cycles
 24766                           ; simple_byte            4     3 (average)
 24767                           ;	Chosen strategy is simple_byte
 24768  00B266  0A00               	xorlw	0	; case 0
 24769                           
 24770                           ; BSR set to: 0
 24771  00B268  0012               	return	
 24772  00B26A                     __end_of_RADIO_DIO1:
 24773                           	opt stack 0
 24774                           tosu	equ	0xFFF
 24775                           tosh	equ	0xFFE
 24776                           tosl	equ	0xFFD
 24777                           pclath	equ	0xFFA
 24778                           tblptru	equ	0xFF8
 24779                           tblptrh	equ	0xFF7
 24780                           tblptrl	equ	0xFF6
 24781                           tablat	equ	0xFF5
 24782                           prodh	equ	0xFF4
 24783                           prodl	equ	0xFF3
 24784                           intcon	equ	0xFF2
 24785                           intcon2	equ	0xFF1
 24786                           intcon3	equ	0xFF0
 24787                           postinc0	equ	0xFEE
 24788                           wreg	equ	0xFE8
 24789                           postinc1	equ	0xFE6
 24790                           postdec1	equ	0xFE5
 24791                           plusw1	equ	0xFE3
 24792                           fsr1h	equ	0xFE2
 24793                           fsr1l	equ	0xFE1
 24794                           indf2	equ	0xFDF
 24795                           postinc2	equ	0xFDE
 24796                           postdec2	equ	0xFDD
 24797                           fsr2h	equ	0xFDA
 24798                           fsr2l	equ	0xFD9
 24799                           status	equ	0xFD8
 24800                           
 24801 ;; *************** function _RADIO_RxTimeout *****************
 24802 ;; Defined at:
 24803 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24804 ;; Parameters:    Size  Location     Type
 24805 ;;		None
 24806 ;; Auto vars:     Size  Location     Type
 24807 ;;		None
 24808 ;; Return value:  Size  Location     Type
 24809 ;;                  1    wreg      void 
 24810 ;; Registers used:
 24811 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 24812 ;; Tracked objects:
 24813 ;;		On entry : 0/0
 24814 ;;		On exit  : 0/0
 24815 ;;		Unchanged: 0/0
 24816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24821 ;;Total ram usage:        0 bytes
 24822 ;; Hardware stack levels used:    1
 24823 ;; Hardware stack levels required when called:   16
 24824 ;; This function calls:
 24825 ;;		_LORAWAN_RxTimeout
 24826 ;;		_RADIO_RegisterWrite
 24827 ;;		_RADIO_WriteMode
 24828 ;;		_SwTimerStop
 24829 ;; This function is called by:
 24830 ;;		_RADIO_DIO1
 24831 ;; This function uses a non-reentrant model
 24832 ;;
 24833                           
 24834                           	psect	text156
 24835  00BB82                     __ptext156:
 24836                           	opt stack 0
 24837  00BB82                     _RADIO_RxTimeout:
 24838                           	opt stack 12
 24839                           
 24840                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 24841                           
 24842                           ;incstack = 0
 24843  00BB82  0101               	movlb	1	; () banked
 24844  00BB84  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24845  00BB86  ECA6  F05E         	call	_SwTimerStop
 24846                           
 24847                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 24848  00BB8A  0E80               	movlw	128
 24849  00BB8C  0100               	movlb	0	; () banked
 24850  00BB8E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24851  00BB90  0E12               	movlw	18
 24852  00BB92  ECEB  F05F         	call	_RADIO_RegisterWrite
 24853                           
 24854                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24855  00BB96  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24856  00BB9A  0E00               	movlw	0
 24857  00BB9C  0100               	movlb	0	; () banked
 24858  00BB9E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24859  00BBA0  0E00               	movlw	0
 24860  00BBA2  ECDC  F043         	call	_RADIO_WriteMode
 24861                           
 24862                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 24863  00BBA6  0101               	movlb	1	; () banked
 24864  00BBA8  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24865                           
 24866                           ; BSR set to: 1
 24867                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 24868  00BBAA  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 24869  00BBAE  0012               	return		;funcret
 24870  00BBB0                     __end_of_RADIO_RxTimeout:
 24871                           	opt stack 0
 24872                           tosu	equ	0xFFF
 24873                           tosh	equ	0xFFE
 24874                           tosl	equ	0xFFD
 24875                           pclath	equ	0xFFA
 24876                           tblptru	equ	0xFF8
 24877                           tblptrh	equ	0xFF7
 24878                           tblptrl	equ	0xFF6
 24879                           tablat	equ	0xFF5
 24880                           prodh	equ	0xFF4
 24881                           prodl	equ	0xFF3
 24882                           intcon	equ	0xFF2
 24883                           intcon2	equ	0xFF1
 24884                           intcon3	equ	0xFF0
 24885                           postinc0	equ	0xFEE
 24886                           wreg	equ	0xFE8
 24887                           postinc1	equ	0xFE6
 24888                           postdec1	equ	0xFE5
 24889                           plusw1	equ	0xFE3
 24890                           fsr1h	equ	0xFE2
 24891                           fsr1l	equ	0xFE1
 24892                           indf2	equ	0xFDF
 24893                           postinc2	equ	0xFDE
 24894                           postdec2	equ	0xFDD
 24895                           fsr2h	equ	0xFDA
 24896                           fsr2l	equ	0xFD9
 24897                           status	equ	0xFD8
 24898                           
 24899 ;; *************** function _RADIO_FHSSChangeChannel *****************
 24900 ;; Defined at:
 24901 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24902 ;; Parameters:    Size  Location     Type
 24903 ;;		None
 24904 ;; Auto vars:     Size  Location     Type
 24905 ;;  irqFlags        1   25[BANK0 ] unsigned char 
 24906 ;; Return value:  Size  Location     Type
 24907 ;;                  1    wreg      void 
 24908 ;; Registers used:
 24909 ;;		wreg, status,2, status,0, cstack
 24910 ;; Tracked objects:
 24911 ;;		On entry : 0/0
 24912 ;;		On exit  : 0/0
 24913 ;;		Unchanged: 0/0
 24914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24919 ;;Total ram usage:        1 bytes
 24920 ;; Hardware stack levels used:    1
 24921 ;; Hardware stack levels required when called:   11
 24922 ;; This function calls:
 24923 ;;		_RADIO_RegisterRead
 24924 ;;		_RADIO_RegisterWrite
 24925 ;;		_RADIO_WriteFrequency
 24926 ;; This function is called by:
 24927 ;;		_RADIO_DIO1
 24928 ;;		_RADIO_DIO2
 24929 ;; This function uses a non-reentrant model
 24930 ;;
 24931                           
 24932                           	psect	text157
 24933  00B6B6                     __ptext157:
 24934                           	opt stack 0
 24935  00B6B6                     _RADIO_FHSSChangeChannel:
 24936                           	opt stack 17
 24937                           
 24938                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
 24939                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
 24940                           
 24941                           ;incstack = 0
 24942  00B6B6  0E12               	movlw	18
 24943  00B6B8  EC92  F05E         	call	_RADIO_RegisterRead
 24944  00B6BC  0100               	movlb	0	; () banked
 24945  00B6BE  6F79               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
 24946                           
 24947                           ; BSR set to: 0
 24948                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 24949  00B6C0  0101               	movlb	1	; () banked
 24950  00B6C2  5153               	movf	(_RadioConfiguration+30)& (0+255),w,b
 24951  00B6C4  1154               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 24952  00B6C6  B4D8               	btfsc	status,2,c
 24953  00B6C8  D00F               	goto	l931
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;radio_driver_SX1276.c: 1164: {
 24957                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
 24958  00B6CA  5164               	movf	(_RadioConfiguration+47)& (0+255),w,b
 24959  00B6CC  1165               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 24960  00B6CE  B4D8               	btfsc	status,2,c
 24961  00B6D0  D00B               	goto	l931
 24962                           
 24963                           ; BSR set to: 1
 24964                           ;radio_driver_SX1276.c: 1166: {
 24965                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
 24966  00B6D2  0E00               	movlw	0
 24967  00B6D4  0100               	movlb	0	; () banked
 24968  00B6D6  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 24969  00B6D8  0E00               	movlw	0
 24970  00B6DA  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 24971  00B6DC  0E00               	movlw	0
 24972  00B6DE  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 24973  00B6E0  0E00               	movlw	0
 24974  00B6E2  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 24975  00B6E4  ECC1  F046         	call	_RADIO_WriteFrequency	;wreg free
 24976  00B6E8                     l931:
 24977                           
 24978                           ;radio_driver_SX1276.c: 1168: }
 24979                           ;radio_driver_SX1276.c: 1169: }
 24980                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
 24981  00B6E8  0E02               	movlw	2
 24982  00B6EA  0100               	movlb	0	; () banked
 24983  00B6EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24984  00B6EE  0E12               	movlw	18
 24985  00B6F0  ECEB  F05F         	call	_RADIO_RegisterWrite
 24986  00B6F4  0012               	return		;funcret
 24987  00B6F6                     __end_of_RADIO_FHSSChangeChannel:
 24988                           	opt stack 0
 24989                           tosu	equ	0xFFF
 24990                           tosh	equ	0xFFE
 24991                           tosl	equ	0xFFD
 24992                           pclath	equ	0xFFA
 24993                           tblptru	equ	0xFF8
 24994                           tblptrh	equ	0xFF7
 24995                           tblptrl	equ	0xFF6
 24996                           tablat	equ	0xFF5
 24997                           prodh	equ	0xFF4
 24998                           prodl	equ	0xFF3
 24999                           intcon	equ	0xFF2
 25000                           intcon2	equ	0xFF1
 25001                           intcon3	equ	0xFF0
 25002                           postinc0	equ	0xFEE
 25003                           wreg	equ	0xFE8
 25004                           postinc1	equ	0xFE6
 25005                           postdec1	equ	0xFE5
 25006                           plusw1	equ	0xFE3
 25007                           fsr1h	equ	0xFE2
 25008                           fsr1l	equ	0xFE1
 25009                           indf2	equ	0xFDF
 25010                           postinc2	equ	0xFDE
 25011                           postdec2	equ	0xFDD
 25012                           fsr2h	equ	0xFDA
 25013                           fsr2l	equ	0xFD9
 25014                           status	equ	0xFD8
 25015                           
 25016 ;; *************** function _RADIO_DIO0 *****************
 25017 ;; Defined at:
 25018 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25019 ;; Parameters:    Size  Location     Type
 25020 ;;		None
 25021 ;; Auto vars:     Size  Location     Type
 25022 ;;  opMode          1  152[BANK0 ] unsigned char 
 25023 ;;  dioMapping      1  151[BANK0 ] unsigned char 
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  1    wreg      void 
 25026 ;; Registers used:
 25027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25028 ;; Tracked objects:
 25029 ;;		On entry : 0/0
 25030 ;;		On exit  : 0/0
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25037 ;;Total ram usage:        4 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; Hardware stack levels required when called:   17
 25040 ;; This function calls:
 25041 ;;		_RADIO_FSKPacketSent
 25042 ;;		_RADIO_FSKPayloadReady
 25043 ;;		_RADIO_RegisterRead
 25044 ;;		_RADIO_RxDone
 25045 ;;		_RADIO_TxDone
 25046 ;;		_RADIO_UnhandledInterrupt
 25047 ;; This function is called by:
 25048 ;;		_LORAWAN_Mainloop
 25049 ;; This function uses a non-reentrant model
 25050 ;;
 25051                           
 25052                           	psect	text158
 25053  009D96                     __ptext158:
 25054                           	opt stack 0
 25055  009D96                     _RADIO_DIO0:
 25056                           	opt stack 12
 25057                           
 25058                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
 25059                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
 25060                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
 25061                           
 25062                           ;incstack = 0
 25063  009D96  0E40               	movlw	64
 25064  009D98  EC92  F05E         	call	_RADIO_RegisterRead
 25065  009D9C  0100               	movlb	0	; () banked
 25066  009D9E  6FF5               	movwf	??_RADIO_DIO0& (0+255),b
 25067  009DA0  0E06               	movlw	6
 25068  009DA2  6FF6               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 25069  009DA4                     u25175:
 25070  009DA4  90D8               	bcf	status,0,c
 25071  009DA6  33F5               	rrcf	??_RADIO_DIO0& (0+255),f,b
 25072  009DA8  2FF6               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 25073  009DAA  D7FC               	goto	u25175
 25074  009DAC  51F5               	movf	??_RADIO_DIO0& (0+255),w,b
 25075  009DAE  0B03               	andlw	3
 25076  009DB0  6FF7               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 25077                           
 25078                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 25079  009DB2  0E01               	movlw	1
 25080  009DB4  EC92  F05E         	call	_RADIO_RegisterRead
 25081  009DB8  0100               	movlb	0	; () banked
 25082  009DBA  6FF8               	movwf	RADIO_DIO0@opMode& (0+255),b
 25083                           
 25084                           ; BSR set to: 0
 25085                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 25086  009DBC  BFF8               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 25087  009DBE  D00B               	goto	l936
 25088  009DC0  D02C               	goto	l942
 25089  009DC2                     
 25090                           ; BSR set to: 0
 25091                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 25092                           
 25093                           ; BSR set to: 0
 25094  009DC2  EC20  F048         	call	_RADIO_RxDone	;wreg free
 25095                           
 25096                           ;radio_driver_SX1276.c: 1191: break;
 25097  009DC6  0012               	return	
 25098  009DC8                     
 25099                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 25100  009DC8  EC2C  F041         	call	_RADIO_TxDone	;wreg free
 25101                           
 25102                           ;radio_driver_SX1276.c: 1194: break;
 25103  009DCC  0012               	return	
 25104  009DCE                     
 25105                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 25106  009DCE  0E01               	movlw	1
 25107  009DD0  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 25108                           
 25109                           ;radio_driver_SX1276.c: 1198: }
 25110                           
 25111                           ;radio_driver_SX1276.c: 1197: break;
 25112  009DD4  0012               	return	
 25113  009DD6                     l936:
 25114  009DD6  0100               	movlb	0	; () banked
 25115  009DD8  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 25116                           
 25117                           ; Switch size 1, requested type "space"
 25118                           ; Number of cases is 2, Range of values is 0 to 1
 25119                           ; switch strategies available:
 25120                           ; Name         Instructions Cycles
 25121                           ; simple_byte            7     4 (average)
 25122                           ;	Chosen strategy is simple_byte
 25123  009DDA  0A00               	xorlw	0	; case 0
 25124  009DDC  B4D8               	btfsc	status,2,c
 25125  009DDE  D7F1               	goto	l937
 25126  009DE0  0A01               	xorlw	1	; case 1
 25127  009DE2  B4D8               	btfsc	status,2,c
 25128  009DE4  D7F1               	goto	l939
 25129  009DE6  D7F3               	goto	l940
 25130  009DE8                     
 25131                           ; BSR set to: 0
 25132                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 25133                           
 25134                           ; BSR set to: 0
 25135  009DE8  0E07               	movlw	7
 25136  009DEA  17F8               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 25137                           
 25138                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 25139  009DEC  0E03               	movlw	3
 25140  009DEE  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 25141  009DF0  A4D8               	btfss	status,2,c
 25142  009DF2  D003               	goto	l944
 25143                           
 25144                           ; BSR set to: 0
 25145                           ;radio_driver_SX1276.c: 1209: {
 25146                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 25147  009DF4  EC6B  F03F         	call	_RADIO_FSKPacketSent	;wreg free
 25148                           
 25149                           ;radio_driver_SX1276.c: 1212: }
 25150  009DF8  0012               	return	
 25151  009DFA                     l944:
 25152                           
 25153                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 25154  009DFA  0E05               	movlw	5
 25155  009DFC  0100               	movlb	0	; () banked
 25156  009DFE  19F8               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 25157  009E00  A4D8               	btfss	status,2,c
 25158  009E02  D003               	goto	l946
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;radio_driver_SX1276.c: 1214: {
 25162                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 25163  009E04  EC06  F04B         	call	_RADIO_FSKPayloadReady	;wreg free
 25164                           
 25165                           ;radio_driver_SX1276.c: 1217: }
 25166  009E08  0012               	return	
 25167  009E0A                     l946:
 25168                           
 25169                           ;radio_driver_SX1276.c: 1218: else
 25170                           ;radio_driver_SX1276.c: 1219: {
 25171                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 25172  009E0A  0E00               	movlw	0
 25173  009E0C  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 25174                           
 25175                           ;radio_driver_SX1276.c: 1221: }
 25176                           ;radio_driver_SX1276.c: 1222: break;
 25177  009E10  0012               	return	
 25178  009E12                     
 25179                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 25180  009E12  0E00               	movlw	0
 25181  009E14  EC45  F05C         	call	_RADIO_UnhandledInterrupt
 25182                           
 25183                           ;radio_driver_SX1276.c: 1226: }
 25184                           
 25185                           ;radio_driver_SX1276.c: 1225: break;
 25186  009E18  0012               	return	
 25187  009E1A                     l942:
 25188  009E1A  0100               	movlb	0	; () banked
 25189  009E1C  51F7               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 25190                           
 25191                           ; Switch size 1, requested type "space"
 25192                           ; Number of cases is 1, Range of values is 0 to 0
 25193                           ; switch strategies available:
 25194                           ; Name         Instructions Cycles
 25195                           ; simple_byte            4     3 (average)
 25196                           ;	Chosen strategy is simple_byte
 25197  009E1E  0A00               	xorlw	0	; case 0
 25198  009E20  B4D8               	btfsc	status,2,c
 25199  009E22  D7E2               	goto	l943
 25200  009E24  D7F6               	goto	l949
 25201  009E26                     __end_of_RADIO_DIO0:
 25202                           	opt stack 0
 25203                           tosu	equ	0xFFF
 25204                           tosh	equ	0xFFE
 25205                           tosl	equ	0xFFD
 25206                           pclath	equ	0xFFA
 25207                           tblptru	equ	0xFF8
 25208                           tblptrh	equ	0xFF7
 25209                           tblptrl	equ	0xFF6
 25210                           tablat	equ	0xFF5
 25211                           prodh	equ	0xFF4
 25212                           prodl	equ	0xFF3
 25213                           intcon	equ	0xFF2
 25214                           intcon2	equ	0xFF1
 25215                           intcon3	equ	0xFF0
 25216                           postinc0	equ	0xFEE
 25217                           wreg	equ	0xFE8
 25218                           postinc1	equ	0xFE6
 25219                           postdec1	equ	0xFE5
 25220                           plusw1	equ	0xFE3
 25221                           fsr1h	equ	0xFE2
 25222                           fsr1l	equ	0xFE1
 25223                           indf2	equ	0xFDF
 25224                           postinc2	equ	0xFDE
 25225                           postdec2	equ	0xFDD
 25226                           fsr2h	equ	0xFDA
 25227                           fsr2l	equ	0xFD9
 25228                           status	equ	0xFD8
 25229                           
 25230 ;; *************** function _RADIO_UnhandledInterrupt *****************
 25231 ;; Defined at:
 25232 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;  modulation      1    wreg     enum E6984
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;  modulation      1    4[BANK0 ] enum E6984
 25237 ;; Return value:  Size  Location     Type
 25238 ;;                  1    wreg      void 
 25239 ;; Registers used:
 25240 ;;		wreg, status,2, status,0, cstack
 25241 ;; Tracked objects:
 25242 ;;		On entry : 0/0
 25243 ;;		On exit  : 0/0
 25244 ;;		Unchanged: 0/0
 25245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25250 ;;Total ram usage:        1 bytes
 25251 ;; Hardware stack levels used:    1
 25252 ;; Hardware stack levels required when called:   10
 25253 ;; This function calls:
 25254 ;;		_RADIO_RegisterWrite
 25255 ;; This function is called by:
 25256 ;;		_RADIO_DIO0
 25257 ;;		_RADIO_DIO1
 25258 ;;		_RADIO_DIO2
 25259 ;;		_RADIO_DIO3
 25260 ;;		_RADIO_DIO4
 25261 ;;		_RADIO_DIO5
 25262 ;; This function uses a non-reentrant model
 25263 ;;
 25264                           
 25265                           	psect	text159
 25266  00B88A                     __ptext159:
 25267                           	opt stack 0
 25268  00B88A                     _RADIO_UnhandledInterrupt:
 25269                           	opt stack 18
 25270                           
 25271                           ;incstack = 0
 25272                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 25273  00B88A  0100               	movlb	0	; () banked
 25274  00B88C  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 25275                           
 25276                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 25277  00B88E  0100               	movlb	0	; () banked
 25278  00B890  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 25279  00B892  A4D8               	btfss	status,2,c
 25280  00B894  D006               	goto	l925
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;radio_driver_SX1276.c: 1145: {
 25284                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
 25285  00B896  0EFF               	movlw	255
 25286  00B898  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25287  00B89A  0E12               	movlw	18
 25288  00B89C  ECEB  F05F         	call	_RADIO_RegisterWrite
 25289                           
 25290                           ;radio_driver_SX1276.c: 1147: }
 25291  00B8A0  0012               	return	
 25292  00B8A2                     l925:
 25293                           
 25294                           ;radio_driver_SX1276.c: 1148: else
 25295                           ;radio_driver_SX1276.c: 1149: {
 25296                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
 25297  00B8A2  0EFF               	movlw	255
 25298  00B8A4  0100               	movlb	0	; () banked
 25299  00B8A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25300  00B8A8  0E3E               	movlw	62
 25301  00B8AA  ECEB  F05F         	call	_RADIO_RegisterWrite
 25302                           
 25303                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 25304  00B8AE  0EFF               	movlw	255
 25305  00B8B0  0100               	movlb	0	; () banked
 25306  00B8B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25307  00B8B4  0E3F               	movlw	63
 25308  00B8B6  ECEB  F05F         	call	_RADIO_RegisterWrite
 25309  00B8BA  0012               	return	
 25310  00B8BC                     __end_of_RADIO_UnhandledInterrupt:
 25311                           	opt stack 0
 25312                           tosu	equ	0xFFF
 25313                           tosh	equ	0xFFE
 25314                           tosl	equ	0xFFD
 25315                           pclath	equ	0xFFA
 25316                           tblptru	equ	0xFF8
 25317                           tblptrh	equ	0xFF7
 25318                           tblptrl	equ	0xFF6
 25319                           tablat	equ	0xFF5
 25320                           prodh	equ	0xFF4
 25321                           prodl	equ	0xFF3
 25322                           intcon	equ	0xFF2
 25323                           intcon2	equ	0xFF1
 25324                           intcon3	equ	0xFF0
 25325                           postinc0	equ	0xFEE
 25326                           wreg	equ	0xFE8
 25327                           postinc1	equ	0xFE6
 25328                           postdec1	equ	0xFE5
 25329                           plusw1	equ	0xFE3
 25330                           fsr1h	equ	0xFE2
 25331                           fsr1l	equ	0xFE1
 25332                           indf2	equ	0xFDF
 25333                           postinc2	equ	0xFDE
 25334                           postdec2	equ	0xFDD
 25335                           fsr2h	equ	0xFDA
 25336                           fsr2l	equ	0xFD9
 25337                           status	equ	0xFD8
 25338                           
 25339 ;; *************** function _RADIO_TxDone *****************
 25340 ;; Defined at:
 25341 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25342 ;; Parameters:    Size  Location     Type
 25343 ;;		None
 25344 ;; Auto vars:     Size  Location     Type
 25345 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  1    wreg      void 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/0
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25359 ;;Total ram usage:       12 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   15
 25362 ;; This function calls:
 25363 ;;		_LORAWAN_TxDone
 25364 ;;		_RADIO_RegisterWrite
 25365 ;;		_RADIO_WriteMode
 25366 ;;		_SwTimerReadValue
 25367 ;;		_SwTimerStop
 25368 ;;		___lmul
 25369 ;; This function is called by:
 25370 ;;		_RADIO_DIO0
 25371 ;; This function uses a non-reentrant model
 25372 ;;
 25373                           
 25374                           	psect	text160
 25375  008258                     __ptext160:
 25376                           	opt stack 0
 25377  008258                     _RADIO_TxDone:
 25378                           	opt stack 13
 25379                           
 25380                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
 25381                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25382                           
 25383                           ;incstack = 0
 25384  008258  0101               	movlb	1	; () banked
 25385  00825A  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25386  00825C  ECA6  F05E         	call	_SwTimerStop
 25387                           
 25388                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 25389  008260  0E08               	movlw	8
 25390  008262  0100               	movlb	0	; () banked
 25391  008264  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25392  008266  0E12               	movlw	18
 25393  008268  ECEB  F05F         	call	_RADIO_RegisterWrite
 25394                           
 25395                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 25396  00826C  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25397  008270  0E00               	movlw	0
 25398  008272  0100               	movlb	0	; () banked
 25399  008274  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25400  008276  0E00               	movlw	0
 25401  008278  ECDC  F043         	call	_RADIO_WriteMode
 25402                           
 25403                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 25404  00827C  0101               	movlb	1	; () banked
 25405  00827E  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 25406                           
 25407                           ; BSR set to: 1
 25408                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 25409  008280  B958               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 25410  008282  0012               	return	
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;radio_driver_SX1276.c: 1087: {
 25414                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 25415  008284  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25416  008286  EC7B  F05B         	call	_SwTimerReadValue
 25417  00828A  0100               	movlb	0	; () banked
 25418  00828C  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 25419  00828E  E108               	bnz	u24060
 25420  008290  0E1F               	movlw	31
 25421  008292  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 25422  008294  0EAC               	movlw	172
 25423  008296  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 25424  008298  0EDF               	movlw	223
 25425  00829A  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 25426  00829C  A0D8               	btfss	status,0,c
 25427  00829E  D021               	goto	l900
 25428  0082A0                     u24060:
 25429                           
 25430                           ; BSR set to: 0
 25431  0082A0  0101               	movlb	1	; () banked
 25432  0082A2  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25433  0082A4  EC7B  F05B         	call	_SwTimerReadValue
 25434  0082A8  0E0D               	movlw	13
 25435  0082AA  D006               	goto	u24070
 25436  0082AC                     u24075:
 25437  0082AC  0100               	movlb	0	; () banked
 25438  0082AE  90D8               	bcf	status,0,c
 25439  0082B0  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 25440  0082B2  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 25441  0082B4  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 25442  0082B6  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 25443  0082B8                     u24070:
 25444  0082B8  2EE8               	decfsz	wreg,f,c
 25445  0082BA  D7F8               	goto	u24075
 25446  0082BC  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25447  0082C0  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25448  0082C4  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25449  0082C8  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25450  0082CC  0E7D               	movlw	125
 25451  0082CE  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25452  0082D0  0E00               	movlw	0
 25453  0082D2  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25454  0082D4  0E00               	movlw	0
 25455  0082D6  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25456  0082D8  0E00               	movlw	0
 25457  0082DA  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25458  0082DC  EC1B  F057         	call	___lmul	;wreg free
 25459  0082E0  D021               	goto	L8
 25460  0082E2                     l900:
 25461  0082E2  0101               	movlb	1	; () banked
 25462  0082E4  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25463  0082E6  EC7B  F05B         	call	_SwTimerReadValue
 25464  0082EA  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 25465  0082EE  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 25466  0082F2  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 25467  0082F6  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 25468  0082FA  0E7D               	movlw	125
 25469  0082FC  0100               	movlb	0	; () banked
 25470  0082FE  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 25471  008300  0E00               	movlw	0
 25472  008302  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25473  008304  0E00               	movlw	0
 25474  008306  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25475  008308  0E00               	movlw	0
 25476  00830A  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25477  00830C  EC1B  F057         	call	___lmul	;wreg free
 25478  008310  0E0D               	movlw	13
 25479  008312  D006               	goto	u24080
 25480  008314                     u24085:
 25481  008314  0100               	movlb	0	; () banked
 25482  008316  90D8               	bcf	status,0,c
 25483  008318  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 25484  00831A  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 25485  00831C  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 25486  00831E  339A               	rrcf	?___lmul& (0+255),f,b
 25487  008320                     u24080:
 25488  008320  2EE8               	decfsz	wreg,f,c
 25489  008322  D7F8               	goto	u24085
 25490  008324                     L8:
 25491  008324  C09A  F0EB         	movff	?___lmul,_RADIO_TxDone$1189
 25492  008328  C09B  F0EC         	movff	?___lmul+1,_RADIO_TxDone$1189+1
 25493  00832C  C09C  F0ED         	movff	?___lmul+2,_RADIO_TxDone$1189+2
 25494  008330  C09D  F0EE         	movff	?___lmul+3,_RADIO_TxDone$1189+3
 25495                           
 25496                           ; BSR set to: 0
 25497  008334  C0EB  F0E3         	movff	_RADIO_TxDone$1189,??_RADIO_TxDone
 25498  008338  C0EC  F0E4         	movff	_RADIO_TxDone$1189+1,??_RADIO_TxDone+1
 25499  00833C  C0ED  F0E5         	movff	_RADIO_TxDone$1189+2,??_RADIO_TxDone+2
 25500  008340  C0EE  F0E6         	movff	_RADIO_TxDone$1189+3,??_RADIO_TxDone+3
 25501  008344  0100               	movlb	0	; () banked
 25502  008346  1FE3               	comf	??_RADIO_TxDone& (0+255),f,b
 25503  008348  1FE4               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
 25504  00834A  1FE5               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
 25505  00834C  1FE6               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
 25506  00834E  2BE3               	incf	??_RADIO_TxDone& (0+255),f,b
 25507  008350  0E00               	movlw	0
 25508  008352  23E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
 25509  008354  23E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
 25510  008356  23E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
 25511  008358  0E20               	movlw	32
 25512  00835A  25E3               	addwf	??_RADIO_TxDone& (0+255),w,b
 25513  00835C  6FE7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 25514  00835E  0E4E               	movlw	78
 25515  008360  21E4               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
 25516  008362  6FE8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 25517  008364  0E00               	movlw	0
 25518  008366  21E5               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
 25519  008368  6FE9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 25520  00836A  0E00               	movlw	0
 25521  00836C  21E6               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
 25522  00836E  6FEA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 25523                           
 25524                           ; BSR set to: 0
 25525                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 25526  008370  C0E7  F0BB         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 25527  008374  C0E8  F0BC         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 25528  008378  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 25529  00837C  0012               	return	
 25530  00837E                     __end_of_RADIO_TxDone:
 25531                           	opt stack 0
 25532                           tosu	equ	0xFFF
 25533                           tosh	equ	0xFFE
 25534                           tosl	equ	0xFFD
 25535                           pclath	equ	0xFFA
 25536                           tblptru	equ	0xFF8
 25537                           tblptrh	equ	0xFF7
 25538                           tblptrl	equ	0xFF6
 25539                           tablat	equ	0xFF5
 25540                           prodh	equ	0xFF4
 25541                           prodl	equ	0xFF3
 25542                           intcon	equ	0xFF2
 25543                           intcon2	equ	0xFF1
 25544                           intcon3	equ	0xFF0
 25545                           postinc0	equ	0xFEE
 25546                           wreg	equ	0xFE8
 25547                           postinc1	equ	0xFE6
 25548                           postdec1	equ	0xFE5
 25549                           plusw1	equ	0xFE3
 25550                           fsr1h	equ	0xFE2
 25551                           fsr1l	equ	0xFE1
 25552                           indf2	equ	0xFDF
 25553                           postinc2	equ	0xFDE
 25554                           postdec2	equ	0xFDD
 25555                           fsr2h	equ	0xFDA
 25556                           fsr2l	equ	0xFD9
 25557                           status	equ	0xFD8
 25558                           
 25559 ;; *************** function _RADIO_RxDone *****************
 25560 ;; Defined at:
 25561 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25562 ;; Parameters:    Size  Location     Type
 25563 ;;		None
 25564 ;; Auto vars:     Size  Location     Type
 25565 ;;  i               1  148[BANK0 ] unsigned char 
 25566 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 25567 ;; Return value:  Size  Location     Type
 25568 ;;                  1    wreg      void 
 25569 ;; Registers used:
 25570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25571 ;; Tracked objects:
 25572 ;;		On entry : 0/0
 25573 ;;		On exit  : 0/0
 25574 ;;		Unchanged: 0/0
 25575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25579 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25580 ;;Total ram usage:        2 bytes
 25581 ;; Hardware stack levels used:    1
 25582 ;; Hardware stack levels required when called:   16
 25583 ;; This function calls:
 25584 ;;		_HALSPICSAssert
 25585 ;;		_HALSPICSDeassert
 25586 ;;		_HALSPISend
 25587 ;;		_LORAWAN_RxDone
 25588 ;;		_RADIO_RegisterRead
 25589 ;;		_RADIO_RegisterWrite
 25590 ;;		_RADIO_WriteMode
 25591 ;;		_SwTimerStop
 25592 ;;		___abdiv
 25593 ;; This function is called by:
 25594 ;;		_RADIO_DIO0
 25595 ;; This function uses a non-reentrant model
 25596 ;;
 25597                           
 25598                           	psect	text161
 25599  009040                     __ptext161:
 25600                           	opt stack 0
 25601  009040                     _RADIO_RxDone:
 25602                           	opt stack 12
 25603                           
 25604                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
 25605                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
 25606                           
 25607                           ;incstack = 0
 25608  009040  0E12               	movlw	18
 25609  009042  EC92  F05E         	call	_RADIO_RegisterRead
 25610  009046  0100               	movlb	0	; () banked
 25611  009048  6FF3               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 25612                           
 25613                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 25614  00904A  0E70               	movlw	112
 25615  00904C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25616  00904E  0E12               	movlw	18
 25617  009050  ECEB  F05F         	call	_RADIO_RegisterWrite
 25618                           
 25619                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 25620  009054  0100               	movlb	0	; () banked
 25621  009056  51F3               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 25622  009058  0B50               	andlw	80
 25623  00905A  0A50               	xorlw	80
 25624  00905C  A4D8               	btfss	status,2,c
 25625  00905E  0012               	return	
 25626                           
 25627                           ; BSR set to: 0
 25628                           ;radio_driver_SX1276.c: 969: {
 25629                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25630  009060  0101               	movlb	1	; () banked
 25631  009062  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25632  009064  ECA6  F05E         	call	_SwTimerStop
 25633                           
 25634                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 25635  009068  0E1C               	movlw	28
 25636  00906A  EC92  F05E         	call	_RADIO_RegisterRead
 25637  00906E  0100               	movlb	0	; () banked
 25638  009070  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 25639                           
 25640                           ; BSR set to: 0
 25641                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 25642  009072  0101               	movlb	1	; () banked
 25643  009074  5151               	movf	(_RadioConfiguration+28)& (0+255),w,b
 25644  009076  B4D8               	btfsc	status,2,c
 25645  009078  D004               	goto	u23980
 25646                           
 25647                           ; BSR set to: 1
 25648  00907A  0100               	movlb	0	; () banked
 25649  00907C  ABF3               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 25650                           
 25651                           ; BSR set to: 0
 25652  00907E  ADF4               	btfss	RADIO_RxDone@i& (0+255),6,b
 25653  009080  D03C               	goto	l872
 25654  009082                     u23980:
 25655                           
 25656                           ;radio_driver_SX1276.c: 976: {
 25657                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
 25658                           
 25659                           ; BSR set to: 0
 25660  009082  0E13               	movlw	19
 25661  009084  EC92  F05E         	call	_RADIO_RegisterRead
 25662  009088  0101               	movlb	1	; () banked
 25663  00908A  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 25664                           
 25665                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 25666  00908C  0E00               	movlw	0
 25667  00908E  0100               	movlb	0	; () banked
 25668  009090  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25669  009092  0E0D               	movlw	13
 25670  009094  ECEB  F05F         	call	_RADIO_RegisterWrite
 25671                           
 25672                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 25673  009098  EC66  F063         	call	_HALSPICSAssert	;wreg free
 25674                           
 25675                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 25676  00909C  0E00               	movlw	0
 25677  00909E  EC70  F062         	call	_HALSPISend
 25678                           
 25679                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 25680  0090A2  0E00               	movlw	0
 25681  0090A4  0100               	movlb	0	; () banked
 25682  0090A6  6FF4               	movwf	RADIO_RxDone@i& (0+255),b
 25683  0090A8  D00F               	goto	l875
 25684  0090AA                     
 25685                           ; BSR set to: 0
 25686                           ;radio_driver_SX1276.c: 990: {
 25687                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 25688                           
 25689                           ; BSR set to: 0
 25690  0090AA  51F4               	movf	RADIO_RxDone@i& (0+255),w,b
 25691  0090AC  0D01               	mullw	1
 25692  0090AE  50F3               	movf	prodl,w,c
 25693  0090B0  0101               	movlb	1	; () banked
 25694  0090B2  255A               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 25695  0090B4  6ED9               	movwf	fsr2l,c
 25696  0090B6  50F4               	movf	prodh,w,c
 25697  0090B8  215B               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 25698  0090BA  6EDA               	movwf	fsr2h,c
 25699  0090BC  0EFF               	movlw	255
 25700  0090BE  EC70  F062         	call	_HALSPISend
 25701  0090C2  6EDF               	movwf	indf2,c
 25702  0090C4  0100               	movlb	0	; () banked
 25703  0090C6  2BF4               	incf	RADIO_RxDone@i& (0+255),f,b
 25704  0090C8                     l875:
 25705                           
 25706                           ; BSR set to: 0
 25707                           
 25708                           ; BSR set to: 0
 25709  0090C8  0101               	movlb	1	; () banked
 25710  0090CA  5159               	movf	(_RadioConfiguration+36)& (0+255),w,b
 25711  0090CC  0100               	movlb	0	; () banked
 25712  0090CE  5DF4               	subwf	RADIO_RxDone@i& (0+255),w,b
 25713  0090D0  A0D8               	btfss	status,0,c
 25714  0090D2  D7EB               	goto	l876
 25715                           
 25716                           ; BSR set to: 0
 25717                           ;radio_driver_SX1276.c: 992: }
 25718                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
 25719                           
 25720                           ; BSR set to: 0
 25721  0090D4  EC64  F063         	call	_HALSPICSDeassert	;wreg free
 25722                           
 25723                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 25724  0090D8  0101               	movlb	1	; () banked
 25725  0090DA  8558               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 25726                           
 25727                           ; BSR set to: 1
 25728                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 25729  0090DC  0E19               	movlw	25
 25730  0090DE  EC92  F05E         	call	_RADIO_RegisterRead
 25731  0090E2  0101               	movlb	1	; () banked
 25732  0090E4  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 25733                           
 25734                           ; BSR set to: 1
 25735                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 25736  0090E6  0E04               	movlw	4
 25737  0090E8  0100               	movlb	0	; () banked
 25738  0090EA  6F60               	movwf	___abdiv@divisor& (0+255),b
 25739  0090EC  0101               	movlb	1	; () banked
 25740  0090EE  5167               	movf	(_RadioConfiguration+50)& (0+255),w,b
 25741  0090F0  EC4E  F054         	call	___abdiv
 25742  0090F4  0101               	movlb	1	; () banked
 25743  0090F6  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 25744                           
 25745                           ;radio_driver_SX1276.c: 998: }
 25746  0090F8  D002               	goto	l878
 25747  0090FA                     l872:
 25748                           
 25749                           ;radio_driver_SX1276.c: 999: else
 25750                           ;radio_driver_SX1276.c: 1000: {
 25751                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
 25752                           
 25753                           ; BSR set to: 1
 25754  0090FA  0101               	movlb	1	; () banked
 25755  0090FC  8758               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 25756  0090FE                     l878:
 25757                           
 25758                           ; BSR set to: 1
 25759                           ;radio_driver_SX1276.c: 1003: }
 25760                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 25761                           
 25762                           ; BSR set to: 1
 25763  0090FE  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25764  009102  0E00               	movlw	0
 25765  009104  0100               	movlb	0	; () banked
 25766  009106  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25767  009108  0E00               	movlw	0
 25768  00910A  ECDC  F043         	call	_RADIO_WriteMode
 25769                           
 25770                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 25771  00910E  0101               	movlb	1	; () banked
 25772  009110  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 25773                           
 25774                           ; BSR set to: 1
 25775                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 25776  009112  C15A  F1F2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 25777  009116  C15B  F1F3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 25778  00911A  C159  F1F4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 25779  00911E  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 25780  009122  0012               	return	
 25781  009124                     __end_of_RADIO_RxDone:
 25782                           	opt stack 0
 25783                           tosu	equ	0xFFF
 25784                           tosh	equ	0xFFE
 25785                           tosl	equ	0xFFD
 25786                           pclath	equ	0xFFA
 25787                           tblptru	equ	0xFF8
 25788                           tblptrh	equ	0xFF7
 25789                           tblptrl	equ	0xFF6
 25790                           tablat	equ	0xFF5
 25791                           prodh	equ	0xFF4
 25792                           prodl	equ	0xFF3
 25793                           intcon	equ	0xFF2
 25794                           intcon2	equ	0xFF1
 25795                           intcon3	equ	0xFF0
 25796                           postinc0	equ	0xFEE
 25797                           wreg	equ	0xFE8
 25798                           postinc1	equ	0xFE6
 25799                           postdec1	equ	0xFE5
 25800                           plusw1	equ	0xFE3
 25801                           fsr1h	equ	0xFE2
 25802                           fsr1l	equ	0xFE1
 25803                           indf2	equ	0xFDF
 25804                           postinc2	equ	0xFDE
 25805                           postdec2	equ	0xFDD
 25806                           fsr2h	equ	0xFDA
 25807                           fsr2l	equ	0xFD9
 25808                           status	equ	0xFD8
 25809                           
 25810 ;; *************** function ___abdiv *****************
 25811 ;; Defined at:
 25812 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abdiv.c"
 25813 ;; Parameters:    Size  Location     Type
 25814 ;;  dividend        1    wreg     char 
 25815 ;;  divisor         1    0[BANK0 ] char 
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;  dividend        1    6[BANK0 ] char 
 25818 ;;  quotient        1    5[BANK0 ] char 
 25819 ;;  sign            1    4[BANK0 ] unsigned char 
 25820 ;;  counter         1    3[BANK0 ] unsigned char 
 25821 ;; Return value:  Size  Location     Type
 25822 ;;                  1    wreg      char 
 25823 ;; Registers used:
 25824 ;;		wreg, status,2, status,0
 25825 ;; Tracked objects:
 25826 ;;		On entry : 0/0
 25827 ;;		On exit  : 0/0
 25828 ;;		Unchanged: 0/0
 25829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25830 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25831 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25833 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25834 ;;Total ram usage:        7 bytes
 25835 ;; Hardware stack levels used:    1
 25836 ;; Hardware stack levels required when called:    7
 25837 ;; This function calls:
 25838 ;;		Nothing
 25839 ;; This function is called by:
 25840 ;;		_RADIO_RxDone
 25841 ;; This function uses a non-reentrant model
 25842 ;;
 25843                           
 25844                           	psect	text162
 25845  00A89C                     __ptext162:
 25846                           	opt stack 0
 25847  00A89C                     ___abdiv:
 25848                           	opt stack 20
 25849                           
 25850                           ;incstack = 0
 25851                           ;___abdiv@dividend stored from wreg
 25852  00A89C  0100               	movlb	0	; () banked
 25853  00A89E  6F66               	movwf	___abdiv@dividend& (0+255),b
 25854  00A8A0  0E00               	movlw	0
 25855  00A8A2  0100               	movlb	0	; () banked
 25856  00A8A4  6F64               	movwf	___abdiv@sign& (0+255),b
 25857                           
 25858                           ; BSR set to: 0
 25859  00A8A6  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 25860  00A8A8  D003               	goto	l3569
 25861                           
 25862                           ; BSR set to: 0
 25863  00A8AA  6D60               	negf	___abdiv@divisor& (0+255),b
 25864                           
 25865                           ; BSR set to: 0
 25866  00A8AC  0E01               	movlw	1
 25867  00A8AE  6F64               	movwf	___abdiv@sign& (0+255),b
 25868  00A8B0                     l3569:
 25869                           
 25870                           ; BSR set to: 0
 25871                           
 25872                           ; BSR set to: 0
 25873  00A8B0  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 25874  00A8B2  D003               	goto	l3570
 25875                           
 25876                           ; BSR set to: 0
 25877  00A8B4  6D66               	negf	___abdiv@dividend& (0+255),b
 25878                           
 25879                           ; BSR set to: 0
 25880  00A8B6  0E01               	movlw	1
 25881  00A8B8  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 25882  00A8BA                     l3570:
 25883                           
 25884                           ; BSR set to: 0
 25885                           
 25886                           ; BSR set to: 0
 25887  00A8BA  0E00               	movlw	0
 25888  00A8BC  6F65               	movwf	___abdiv@quotient& (0+255),b
 25889                           
 25890                           ; BSR set to: 0
 25891  00A8BE  5160               	movf	___abdiv@divisor& (0+255),w,b
 25892  00A8C0  B4D8               	btfsc	status,2,c
 25893  00A8C2  D01A               	goto	l3577
 25894                           
 25895                           ; BSR set to: 0
 25896  00A8C4  0E01               	movlw	1
 25897  00A8C6  6F63               	movwf	___abdiv@counter& (0+255),b
 25898  00A8C8  D003               	goto	l3572
 25899  00A8CA                     
 25900                           ; BSR set to: 0
 25901                           
 25902                           ; BSR set to: 0
 25903  00A8CA  90D8               	bcf	status,0,c
 25904  00A8CC  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 25905                           
 25906                           ; BSR set to: 0
 25907  00A8CE  2B63               	incf	___abdiv@counter& (0+255),f,b
 25908  00A8D0                     l3572:
 25909                           
 25910                           ; BSR set to: 0
 25911                           
 25912                           ; BSR set to: 0
 25913  00A8D0  C060  F061         	movff	___abdiv@divisor,??___abdiv
 25914  00A8D4  6B62               	clrf	(??___abdiv+1)& (0+255),b
 25915  00A8D6  BF61               	btfsc	??___abdiv& (0+255),7,b
 25916  00A8D8  0762               	decf	(??___abdiv+1)& (0+255),f,b
 25917  00A8DA  AF61               	btfss	??___abdiv& (0+255),7,b
 25918  00A8DC  D7F6               	goto	l3573
 25919  00A8DE                     u23900:
 25920                           
 25921                           ; BSR set to: 0
 25922                           
 25923                           ; BSR set to: 0
 25924                           
 25925                           ; BSR set to: 0
 25926  00A8DE  90D8               	bcf	status,0,c
 25927  00A8E0  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 25928  00A8E2  5160               	movf	___abdiv@divisor& (0+255),w,b
 25929  00A8E4  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 25930  00A8E6  A0D8               	btfss	status,0,c
 25931  00A8E8  D003               	goto	l3576
 25932                           
 25933                           ; BSR set to: 0
 25934  00A8EA  5160               	movf	___abdiv@divisor& (0+255),w,b
 25935  00A8EC  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 25936                           
 25937                           ; BSR set to: 0
 25938  00A8EE  8165               	bsf	___abdiv@quotient& (0+255),0,b
 25939  00A8F0                     l3576:
 25940                           
 25941                           ; BSR set to: 0
 25942                           
 25943                           ; BSR set to: 0
 25944  00A8F0  90D8               	bcf	status,0,c
 25945  00A8F2  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 25946                           
 25947                           ; BSR set to: 0
 25948  00A8F4  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 25949  00A8F6  D7F3               	goto	u23900
 25950  00A8F8                     l3577:
 25951                           
 25952                           ; BSR set to: 0
 25953                           
 25954                           ; BSR set to: 0
 25955                           
 25956                           ; BSR set to: 0
 25957  00A8F8  5164               	movf	___abdiv@sign& (0+255),w,b
 25958  00A8FA  A4D8               	btfss	status,2,c
 25959                           
 25960                           ; BSR set to: 0
 25961  00A8FC  6D65               	negf	___abdiv@quotient& (0+255),b
 25962                           
 25963                           ; BSR set to: 0
 25964                           
 25965                           ; BSR set to: 0
 25966  00A8FE  5165               	movf	___abdiv@quotient& (0+255),w,b
 25967  00A900  0012               	return	
 25968  00A902                     __end_of___abdiv:
 25969                           	opt stack 0
 25970                           tosu	equ	0xFFF
 25971                           tosh	equ	0xFFE
 25972                           tosl	equ	0xFFD
 25973                           pclath	equ	0xFFA
 25974                           tblptru	equ	0xFF8
 25975                           tblptrh	equ	0xFF7
 25976                           tblptrl	equ	0xFF6
 25977                           tablat	equ	0xFF5
 25978                           prodh	equ	0xFF4
 25979                           prodl	equ	0xFF3
 25980                           intcon	equ	0xFF2
 25981                           intcon2	equ	0xFF1
 25982                           intcon3	equ	0xFF0
 25983                           postinc0	equ	0xFEE
 25984                           wreg	equ	0xFE8
 25985                           postinc1	equ	0xFE6
 25986                           postdec1	equ	0xFE5
 25987                           plusw1	equ	0xFE3
 25988                           fsr1h	equ	0xFE2
 25989                           fsr1l	equ	0xFE1
 25990                           indf2	equ	0xFDF
 25991                           postinc2	equ	0xFDE
 25992                           postdec2	equ	0xFDD
 25993                           fsr2h	equ	0xFDA
 25994                           fsr2l	equ	0xFD9
 25995                           status	equ	0xFD8
 25996                           
 25997 ;; *************** function _RADIO_FSKPayloadReady *****************
 25998 ;; Defined at:
 25999 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26000 ;; Parameters:    Size  Location     Type
 26001 ;;		None
 26002 ;; Auto vars:     Size  Location     Type
 26003 ;;  i               1  148[BANK0 ] unsigned char 
 26004 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;                  1    wreg      void 
 26007 ;; Registers used:
 26008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+8, btemp+9, btem
      +p+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26009 ;; Tracked objects:
 26010 ;;		On entry : 0/0
 26011 ;;		On exit  : 0/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;Total ram usage:        2 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:   16
 26021 ;; This function calls:
 26022 ;;		_HALSPICSAssert
 26023 ;;		_HALSPICSDeassert
 26024 ;;		_HALSPISend
 26025 ;;		_LORAWAN_RxDone
 26026 ;;		_LORAWAN_RxTimeout
 26027 ;;		_RADIO_RegisterRead
 26028 ;;		_RADIO_WriteMode
 26029 ;;		_SwTimerStop
 26030 ;; This function is called by:
 26031 ;;		_RADIO_DIO0
 26032 ;; This function uses a non-reentrant model
 26033 ;;
 26034                           
 26035                           	psect	text163
 26036  00960C                     __ptext163:
 26037                           	opt stack 0
 26038  00960C                     _RADIO_FSKPayloadReady:
 26039                           	opt stack 12
 26040                           
 26041                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 26042                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 26043                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 26044                           
 26045                           ; BSR set to: 0
 26046                           ;incstack = 0
 26047  00960C  0E3F               	movlw	63
 26048  00960E  EC92  F05E         	call	_RADIO_RegisterRead
 26049  009612  0100               	movlb	0	; () banked
 26050  009614  6FF3               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 26051                           
 26052                           ; BSR set to: 0
 26053                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 26054  009616  A5F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 26055  009618  0012               	return	
 26056                           
 26057                           ; BSR set to: 0
 26058                           ;radio_driver_SX1276.c: 1017: {
 26059                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 26060  00961A  0101               	movlb	1	; () banked
 26061  00961C  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26062  00961E  ECA6  F05E         	call	_SwTimerStop
 26063                           
 26064                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 26065  009622  0101               	movlb	1	; () banked
 26066  009624  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 26067  009626  ECA6  F05E         	call	_SwTimerStop
 26068                           
 26069                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 26070  00962A  EC66  F063         	call	_HALSPICSAssert	;wreg free
 26071                           
 26072                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 26073  00962E  0E00               	movlw	0
 26074  009630  EC70  F062         	call	_HALSPISend
 26075                           
 26076                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 26077  009634  0EFF               	movlw	255
 26078  009636  EC70  F062         	call	_HALSPISend
 26079  00963A  0101               	movlb	1	; () banked
 26080  00963C  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 26081                           
 26082                           ; BSR set to: 1
 26083                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 26084  00963E  0E00               	movlw	0
 26085  009640  0100               	movlb	0	; () banked
 26086  009642  6FF4               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 26087  009644  D00F               	goto	l883
 26088  009646                     
 26089                           ; BSR set to: 0
 26090                           ;radio_driver_SX1276.c: 1029: {
 26091                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 26092                           
 26093                           ; BSR set to: 0
 26094  009646  51F4               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 26095  009648  0D01               	mullw	1
 26096  00964A  50F3               	movf	prodl,w,c
 26097  00964C  0101               	movlb	1	; () banked
 26098  00964E  255A               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 26099  009650  6ED9               	movwf	fsr2l,c
 26100  009652  50F4               	movf	prodh,w,c
 26101  009654  215B               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 26102  009656  6EDA               	movwf	fsr2h,c
 26103  009658  0EFF               	movlw	255
 26104  00965A  EC70  F062         	call	_HALSPISend
 26105  00965E  6EDF               	movwf	indf2,c
 26106  009660  0100               	movlb	0	; () banked
 26107  009662  2BF4               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 26108  009664                     l883:
 26109                           
 26110                           ; BSR set to: 0
 26111                           
 26112                           ; BSR set to: 0
 26113  009664  0101               	movlb	1	; () banked
 26114  009666  5159               	movf	(_RadioConfiguration+36)& (0+255),w,b
 26115  009668  0100               	movlb	0	; () banked
 26116  00966A  5DF4               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 26117  00966C  A0D8               	btfss	status,0,c
 26118  00966E  D7EB               	goto	l884
 26119                           
 26120                           ; BSR set to: 0
 26121                           ;radio_driver_SX1276.c: 1031: }
 26122                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 26123                           
 26124                           ; BSR set to: 0
 26125  009670  EC64  F063         	call	_HALSPICSDeassert	;wreg free
 26126                           
 26127                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 26128  009674  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26129  009678  0E00               	movlw	0
 26130  00967A  0100               	movlb	0	; () banked
 26131  00967C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26132  00967E  0E00               	movlw	0
 26133  009680  ECDC  F043         	call	_RADIO_WriteMode
 26134                           
 26135                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 26136  009684  0101               	movlb	1	; () banked
 26137  009686  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 26138                           
 26139                           ; BSR set to: 1
 26140                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 26141  009688  0E80               	movlw	128
 26142  00968A  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 26143                           
 26144                           ; BSR set to: 1
 26145                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 26146  00968C  0551               	decf	(_RadioConfiguration+28)& (0+255),w,b
 26147  00968E  A4D8               	btfss	status,2,c
 26148  009690  D008               	goto	l886
 26149                           
 26150                           ; BSR set to: 1
 26151                           ;radio_driver_SX1276.c: 1040: {
 26152                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 26153  009692  0100               	movlb	0	; () banked
 26154  009694  A3F3               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 26155  009696  D002               	goto	l887
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;radio_driver_SX1276.c: 1042: {
 26159                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 26160  009698  0101               	movlb	1	; () banked
 26161  00969A  D003               	goto	l886
 26162  00969C                     l887:
 26163                           
 26164                           ;radio_driver_SX1276.c: 1045: else
 26165                           ;radio_driver_SX1276.c: 1046: {
 26166                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 26167                           
 26168                           ; BSR set to: 1
 26169  00969C  0101               	movlb	1	; () banked
 26170  00969E  9558               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 26171                           
 26172                           ; BSR set to: 1
 26173                           ;radio_driver_SX1276.c: 1048: }
 26174                           ;radio_driver_SX1276.c: 1049: }
 26175  0096A0  D001               	goto	l889
 26176  0096A2                     l886:
 26177                           
 26178                           ; BSR set to: 1
 26179                           ;radio_driver_SX1276.c: 1050: else
 26180                           ;radio_driver_SX1276.c: 1051: {
 26181                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 26182                           
 26183                           ; BSR set to: 1
 26184  0096A2  8558               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 26185  0096A4                     l889:
 26186                           
 26187                           ; BSR set to: 1
 26188                           ;radio_driver_SX1276.c: 1053: }
 26189                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26190                           
 26191                           ; BSR set to: 1
 26192  0096A4  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26193  0096A6  D009               	goto	l890
 26194                           
 26195                           ; BSR set to: 1
 26196                           ;radio_driver_SX1276.c: 1056: {
 26197                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 26198  0096A8  C15A  F1F2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 26199  0096AC  C15B  F1F3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 26200  0096B0  C159  F1F4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 26201  0096B4  EC43  F000         	call	_LORAWAN_RxDone	;wreg free
 26202                           
 26203                           ;radio_driver_SX1276.c: 1058: }
 26204  0096B8  0012               	return	
 26205  0096BA                     l890:
 26206                           
 26207                           ;radio_driver_SX1276.c: 1059: else
 26208                           ;radio_driver_SX1276.c: 1060: {
 26209                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 26210  0096BA  EC55  F01F         	call	_LORAWAN_RxTimeout	;wreg free
 26211  0096BE  0012               	return	
 26212  0096C0                     __end_of_RADIO_FSKPayloadReady:
 26213                           	opt stack 0
 26214                           tosu	equ	0xFFF
 26215                           tosh	equ	0xFFE
 26216                           tosl	equ	0xFFD
 26217                           pclath	equ	0xFFA
 26218                           tblptru	equ	0xFF8
 26219                           tblptrh	equ	0xFF7
 26220                           tblptrl	equ	0xFF6
 26221                           tablat	equ	0xFF5
 26222                           prodh	equ	0xFF4
 26223                           prodl	equ	0xFF3
 26224                           intcon	equ	0xFF2
 26225                           intcon2	equ	0xFF1
 26226                           intcon3	equ	0xFF0
 26227                           postinc0	equ	0xFEE
 26228                           wreg	equ	0xFE8
 26229                           postinc1	equ	0xFE6
 26230                           postdec1	equ	0xFE5
 26231                           plusw1	equ	0xFE3
 26232                           fsr1h	equ	0xFE2
 26233                           fsr1l	equ	0xFE1
 26234                           indf2	equ	0xFDF
 26235                           postinc2	equ	0xFDE
 26236                           postdec2	equ	0xFDD
 26237                           fsr2h	equ	0xFDA
 26238                           fsr2l	equ	0xFD9
 26239                           status	equ	0xFD8
 26240                           
 26241 ;; *************** function _LORAWAN_RxTimeout *****************
 26242 ;; Defined at:
 26243 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26244 ;; Parameters:    Size  Location     Type
 26245 ;;		None
 26246 ;; Auto vars:     Size  Location     Type
 26247 ;;  minim           4  102[BANK0 ] unsigned long 
 26248 ;;  i               1  106[BANK0 ] unsigned char 
 26249 ;; Return value:  Size  Location     Type
 26250 ;;                  1    wreg      void 
 26251 ;; Registers used:
 26252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tb
      +lptru, prodl, prodh, cstack
 26253 ;; Tracked objects:
 26254 ;;		On entry : 0/0
 26255 ;;		On exit  : 0/0
 26256 ;;		Unchanged: 0/0
 26257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26261 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26262 ;;Total ram usage:        9 bytes
 26263 ;; Hardware stack levels used:    1
 26264 ;; Hardware stack levels required when called:   15
 26265 ;; This function calls:
 26266 ;;		_LORAWAN_ReceiveWindow2Callback
 26267 ;;		_RADIO_Transmit
 26268 ;;		_ResetParametersForConfirmedTransmission
 26269 ;;		_ResetParametersForUnconfirmedTransmission
 26270 ;;		_RxData
 26271 ;;		_SelectChannelForTransmission
 26272 ;;		_SetJoinFailState
 26273 ;;		_SwTimerSetTimeout
 26274 ;;		_SwTimerStart
 26275 ;;		___lldiv
 26276 ;; This function is called by:
 26277 ;;		_RADIO_FSKPayloadReady
 26278 ;;		_RADIO_RxTimeout
 26279 ;;		_RADIO_RxFSKTimeout
 26280 ;;		_RADIO_WatchdogTimeout
 26281 ;; This function uses a non-reentrant model
 26282 ;;
 26283                           
 26284                           	psect	text164
 26285  003EAA                     __ptext164:
 26286                           	opt stack 0
 26287  003EAA                     _LORAWAN_RxTimeout:
 26288                           	opt stack 12
 26289                           
 26290                           ;lorawan_eu.c: 466: uint8_t i;
 26291                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 26292                           
 26293                           ;incstack = 0
 26294  003EAA  0100               	movlb	0	; () banked
 26295  003EAC  69C6               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 26296  003EAE  69C7               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 26297  003EB0  69C8               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 26298  003EB2  69C9               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 26299                           
 26300                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 26301  003EB4  0102               	movlb	2	; () banked
 26302  003EB6  B107               	btfsc	(_loRa+3)& (0+255),0,b
 26303  003EB8  D190               	goto	l1386
 26304                           
 26305                           ; BSR set to: 2
 26306                           ;lorawan_eu.c: 470: {
 26307                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 26308  003EBA  5106               	movf	(_loRa+2)& (0+255),w,b
 26309  003EBC  0B0F               	andlw	15
 26310  003EBE  0A03               	xorlw	3
 26311  003EC0  A4D8               	btfss	status,2,c
 26312  003EC2  D011               	goto	l1387
 26313                           
 26314                           ; BSR set to: 2
 26315                           ;lorawan_eu.c: 473: {
 26316                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 26317  003EC4  5116               	movf	(_loRa+18)& (0+255),w,b
 26318  003EC6  A4D8               	btfss	status,2,c
 26319  003EC8  D005               	goto	l1388
 26320                           
 26321                           ; BSR set to: 2
 26322                           ;lorawan_eu.c: 475: {
 26323                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 26324  003ECA  5106               	movf	(_loRa+2)& (0+255),w,b
 26325  003ECC  0BF0               	andlw	-16
 26326  003ECE  0904               	iorlw	4
 26327  003ED0  6F06               	movwf	(_loRa+2)& (0+255),b
 26328                           
 26329                           ;lorawan_eu.c: 477: }
 26330  003ED2  0012               	return	
 26331  003ED4                     l1388:
 26332                           
 26333                           ; BSR set to: 2
 26334                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 26335                           
 26336                           ; BSR set to: 2
 26337  003ED4  0E02               	movlw	2
 26338  003ED6  1916               	xorwf	(_loRa+18)& (0+255),w,b
 26339  003ED8  A4D8               	btfss	status,2,c
 26340  003EDA  0012               	return	
 26341                           
 26342                           ; BSR set to: 2
 26343                           ;lorawan_eu.c: 479: {
 26344                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 26345  003EDC  0E00               	movlw	0
 26346  003EDE  6EE6               	movwf	postinc1,c
 26347  003EE0  EC70  F049         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 26348                           
 26349                           ;lorawan_eu.c: 481: }
 26350                           ;lorawan_eu.c: 482: }
 26351  003EE4  0012               	return	
 26352  003EE6                     l1387:
 26353                           
 26354                           ; BSR set to: 2
 26355                           ;lorawan_eu.c: 483: else
 26356                           ;lorawan_eu.c: 484: {
 26357                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 26358  003EE6  A504               	btfss	_loRa& (0+255),2,b
 26359  003EE8  D003               	goto	l1392
 26360                           
 26361                           ; BSR set to: 2
 26362                           ;lorawan_eu.c: 487: {
 26363                           ;lorawan_eu.c: 488: SetJoinFailState();
 26364  003EEA  ECD7  F05C         	call	_SetJoinFailState	;wreg free
 26365                           
 26366                           ;lorawan_eu.c: 489: }
 26367  003EEE  0012               	return	
 26368  003EF0                     l1392:
 26369                           
 26370                           ; BSR set to: 2
 26371                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 26372  003EF0  A906               	btfss	(_loRa+2)& (0+255),4,b
 26373  003EF2  0012               	return	
 26374                           
 26375                           ; BSR set to: 2
 26376                           ;lorawan_eu.c: 492: {
 26377                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 26378  003EF4  A104               	btfss	_loRa& (0+255),0,b
 26379  003EF6  D058               	goto	l1395
 26380                           
 26381                           ; BSR set to: 2
 26382                           ;lorawan_eu.c: 494: {
 26383                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 26384  003EF8  51DD               	movf	(_loRa+217)& (0+255),w,b
 26385  003EFA  5DDB               	subwf	(_loRa+215)& (0+255),w,b
 26386  003EFC  A0D8               	btfss	status,0,c
 26387  003EFE  D038               	goto	l1396
 26388                           
 26389                           ; BSR set to: 2
 26390                           ;lorawan_eu.c: 496: {
 26391                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 26392  003F00  5106               	movf	(_loRa+2)& (0+255),w,b
 26393  003F02  0BF0               	andlw	-16
 26394  003F04  0906               	iorlw	6
 26395  003F06  6F06               	movwf	(_loRa+2)& (0+255),b
 26396                           
 26397                           ; BSR set to: 2
 26398                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 26399  003F08  51A4               	movf	(_loRa+160)& (0+255),w,b
 26400  003F0A  0100               	movlb	0	; () banked
 26401  003F0C  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26402  003F0E  0102               	movlb	2	; () banked
 26403  003F10  51A5               	movf	(_loRa+161)& (0+255),w,b
 26404  003F12  0100               	movlb	0	; () banked
 26405  003F14  6FC3               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 26406  003F16  6BC4               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 26407  003F18  6BC5               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 26408  003F1A  0E0C               	movlw	12
 26409  003F1C                     u23405:
 26410  003F1C  90D8               	bcf	status,0,c
 26411  003F1E  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 26412  003F20  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 26413  003F22  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 26414  003F24  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 26415  003F26  2EE8               	decfsz	wreg,f,c
 26416  003F28  D7F9               	goto	u23405
 26417  003F2A  C0C2  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 26418  003F2E  C0C3  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 26419  003F32  C0C4  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 26420  003F36  C0C5  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 26421  003F3A  0E7D               	movlw	125
 26422  003F3C  6F64               	movwf	___lldiv@divisor& (0+255),b
 26423  003F3E  0E00               	movlw	0
 26424  003F40  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26425  003F42  0E00               	movlw	0
 26426  003F44  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26427  003F46  0E00               	movlw	0
 26428  003F48  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26429  003F4A  ECAE  F050         	call	___lldiv	;wreg free
 26430  003F4E  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 26431  003F52  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 26432  003F56  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 26433  003F5A  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 26434  003F5E  0102               	movlb	2	; () banked
 26435  003F60  51EC               	movf	(_loRa+232)& (0+255),w,b
 26436  003F62  ECD5  F05A         	call	_SwTimerSetTimeout
 26437                           
 26438                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 26439  003F66  0102               	movlb	2	; () banked
 26440  003F68  51EC               	movf	(_loRa+232)& (0+255),w,b
 26441  003F6A  EC5A  F04D         	call	_SwTimerStart
 26442                           
 26443                           ;lorawan_eu.c: 500: }
 26444  003F6E  0012               	return	
 26445  003F70                     l1396:
 26446                           
 26447                           ;lorawan_eu.c: 501: else
 26448                           ;lorawan_eu.c: 502: {
 26449                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 26450  003F70  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 26451                           
 26452                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 26453  003F74  0101               	movlb	1	; () banked
 26454  003F76  510C               	movf	_rxPayload& (0+255),w,b
 26455  003F78  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26456  003F7A  B4D8               	btfsc	status,2,c
 26457  003F7C  0012               	return	
 26458                           
 26459                           ; BSR set to: 1
 26460                           ;lorawan_eu.c: 505: {
 26461                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 26462  003F7E  0E00               	movlw	0
 26463  003F80  0100               	movlb	0	; () banked
 26464  003F82  6F60               	movwf	RxData@pData& (0+255),b
 26465  003F84  0E00               	movlw	0
 26466  003F86  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26467  003F88  0E00               	movlw	0
 26468  003F8A  6F62               	movwf	RxData@dataLength& (0+255),b
 26469  003F8C  0E00               	movlw	0
 26470  003F8E  6F63               	movwf	RxData@status& (0+255),b
 26471  003F90  D801               	call	u23428
 26472  003F92  0012               	return	
 26473  003F94                     u23428:
 26474  003F94  0005               	push	
 26475  003F96  6EFA               	movwf	pclath,c
 26476  003F98  0101               	movlb	1	; () banked
 26477  003F9A  510C               	movf	_rxPayload& (0+255),w,b
 26478  003F9C  6EFD               	movwf	tosl,c
 26479  003F9E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26480  003FA0  6EFE               	movwf	tosh,c
 26481  003FA2  6AFF               	clrf	tosu,c
 26482  003FA4  50FA               	movf	pclath,w,c
 26483  003FA6  0012               	return		;indir
 26484  003FA8                     l1395:
 26485                           
 26486                           ;lorawan_eu.c: 511: else
 26487                           ;lorawan_eu.c: 512: {
 26488                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 26489  003FA8  0102               	movlb	2	; () banked
 26490  003FAA  51DC               	movf	(_loRa+216)& (0+255),w,b
 26491  003FAC  5DDA               	subwf	(_loRa+214)& (0+255),w,b
 26492  003FAE  A0D8               	btfss	status,0,c
 26493  003FB0  D0F8               	goto	l1400
 26494                           
 26495                           ; BSR set to: 2
 26496                           ;lorawan_eu.c: 514: {
 26497                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 26498  003FB2  5106               	movf	(_loRa+2)& (0+255),w,b
 26499  003FB4  0BF0               	andlw	-16
 26500  003FB6  0906               	iorlw	6
 26501  003FB8  6F06               	movwf	(_loRa+2)& (0+255),b
 26502                           
 26503                           ; BSR set to: 2
 26504                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 26505  003FBA  0E01               	movlw	1
 26506  003FBC  EC7B  F053         	call	_SelectChannelForTransmission
 26507  003FC0  0900               	iorlw	0
 26508  003FC2  A4D8               	btfss	status,2,c
 26509  003FC4  D031               	goto	l1401
 26510                           
 26511                           ;lorawan_eu.c: 517: {
 26512                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 26513  003FC6  0E30               	movlw	low (_macBuffer+16)
 26514  003FC8  0100               	movlb	0	; () banked
 26515  003FCA  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 26516  003FCC  0E05               	movlw	high (_macBuffer+16)
 26517  003FCE  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 26518  003FD0  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 26519  003FD4  ECE2  F02D         	call	_RADIO_Transmit	;wreg free
 26520  003FD8  0100               	movlb	0	; () banked
 26521  003FDA  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 26522  003FDC  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 26523  003FDE  A4D8               	btfss	status,2,c
 26524  003FE0  D007               	goto	l1402
 26525                           
 26526                           ; BSR set to: 0
 26527                           ;lorawan_eu.c: 520: {
 26528                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 26529  003FE2  0102               	movlb	2	; () banked
 26530  003FE4  2BDC               	incf	(_loRa+216)& (0+255),f,b
 26531                           
 26532                           ; BSR set to: 2
 26533                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 26534  003FE6  5106               	movf	(_loRa+2)& (0+255),w,b
 26535  003FE8  0BF0               	andlw	-16
 26536  003FEA  0901               	iorlw	1
 26537  003FEC  6F06               	movwf	(_loRa+2)& (0+255),b
 26538                           
 26539                           ;lorawan_eu.c: 523: }
 26540  003FEE  0012               	return	
 26541  003FF0                     l1402:
 26542                           
 26543                           ;lorawan_eu.c: 524: else
 26544                           ;lorawan_eu.c: 526: {
 26545                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 26546                           
 26547                           ; BSR set to: 2
 26548  003FF0  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26549                           
 26550                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 26551  003FF4  0101               	movlb	1	; () banked
 26552  003FF6  510C               	movf	_rxPayload& (0+255),w,b
 26553  003FF8  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26554  003FFA  B4D8               	btfsc	status,2,c
 26555  003FFC  0012               	return	
 26556                           
 26557                           ; BSR set to: 1
 26558                           ;lorawan_eu.c: 529: {
 26559                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 26560  003FFE  0E00               	movlw	0
 26561  004000  0100               	movlb	0	; () banked
 26562  004002  6F60               	movwf	RxData@pData& (0+255),b
 26563  004004  0E00               	movlw	0
 26564  004006  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26565  004008  0E00               	movlw	0
 26566  00400A  6F62               	movwf	RxData@dataLength& (0+255),b
 26567  00400C  0E00               	movlw	0
 26568  00400E  6F63               	movwf	RxData@status& (0+255),b
 26569  004010  D801               	call	u23478
 26570  004012  0012               	return	
 26571  004014                     u23478:
 26572  004014  0005               	push	
 26573  004016  6EFA               	movwf	pclath,c
 26574  004018  0101               	movlb	1	; () banked
 26575  00401A  510C               	movf	_rxPayload& (0+255),w,b
 26576  00401C  6EFD               	movwf	tosl,c
 26577  00401E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26578  004020  6EFE               	movwf	tosh,c
 26579  004022  6AFF               	clrf	tosu,c
 26580  004024  50FA               	movf	pclath,w,c
 26581  004026  0012               	return		;indir
 26582  004028                     l1401:
 26583                           
 26584                           ;lorawan_eu.c: 534: else
 26585                           ;lorawan_eu.c: 535: {
 26586                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 26587  004028  0E00               	movlw	0
 26588  00402A  0100               	movlb	0	; () banked
 26589  00402C  6FCA               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 26590  00402E  D07C               	goto	l1406
 26591  004030                     
 26592                           ;lorawan_eu.c: 538: {
 26593                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 26594                           
 26595                           ; BSR set to: 0
 26596  004030  0100               	movlb	0	; () banked
 26597  004032  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26598  004034  0D0E               	mullw	14
 26599  004036  0E04               	movlw	4
 26600  004038  26F3               	addwf	prodl,f,c
 26601  00403A  0E00               	movlw	0
 26602  00403C  22F4               	addwfc	prodh,f,c
 26603  00403E  0E00               	movlw	low _Channels
 26604  004040  24F3               	addwf	prodl,w,c
 26605  004042  6ED9               	movwf	fsr2l,c
 26606  004044  0E04               	movlw	high _Channels
 26607  004046  20F4               	addwfc	prodh,w,c
 26608  004048  6EDA               	movwf	fsr2h,c
 26609  00404A  04DE               	decf	postinc2,w,c
 26610  00404C  A4D8               	btfss	status,2,c
 26611  00404E  D06A               	goto	l1408
 26612                           
 26613                           ; BSR set to: 0
 26614  004050  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26615  004052  0D0E               	mullw	14
 26616  004054  0E08               	movlw	8
 26617  004056  26F3               	addwf	prodl,f,c
 26618  004058  0E00               	movlw	0
 26619  00405A  22F4               	addwfc	prodh,f,c
 26620  00405C  0E00               	movlw	low _Channels
 26621  00405E  24F3               	addwf	prodl,w,c
 26622  004060  6ED9               	movwf	fsr2l,c
 26623  004062  0E04               	movlw	high _Channels
 26624  004064  20F4               	addwfc	prodh,w,c
 26625  004066  6EDA               	movwf	fsr2h,c
 26626  004068  50DE               	movf	postinc2,w,c
 26627  00406A  10DE               	iorwf	postinc2,w,c
 26628  00406C  10DE               	iorwf	postinc2,w,c
 26629  00406E  10DE               	iorwf	postinc2,w,c
 26630  004070  B4D8               	btfsc	status,2,c
 26631  004072  D058               	goto	l1408
 26632                           
 26633                           ; BSR set to: 0
 26634  004074  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26635  004076  0D0E               	mullw	14
 26636  004078  0E08               	movlw	8
 26637  00407A  26F3               	addwf	prodl,f,c
 26638  00407C  0E00               	movlw	0
 26639  00407E  22F4               	addwfc	prodh,f,c
 26640  004080  0E00               	movlw	low _Channels
 26641  004082  24F3               	addwf	prodl,w,c
 26642  004084  6ED9               	movwf	fsr2l,c
 26643  004086  0E04               	movlw	high _Channels
 26644  004088  20F4               	addwfc	prodh,w,c
 26645  00408A  6EDA               	movwf	fsr2h,c
 26646  00408C  50DE               	movf	postinc2,w,c
 26647  00408E  5DC6               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 26648  004090  50DE               	movf	postinc2,w,c
 26649  004092  59C7               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 26650  004094  50DE               	movf	postinc2,w,c
 26651  004096  59C8               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 26652  004098  50DE               	movf	postinc2,w,c
 26653  00409A  59C9               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 26654  00409C  A0D8               	btfss	status,0,c
 26655  00409E  D042               	goto	l1408
 26656                           
 26657                           ; BSR set to: 0
 26658  0040A0  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26659  0040A2  0D0E               	mullw	14
 26660  0040A4  0E05               	movlw	5
 26661  0040A6  26F3               	addwf	prodl,f,c
 26662  0040A8  0E00               	movlw	0
 26663  0040AA  22F4               	addwfc	prodh,f,c
 26664  0040AC  0E00               	movlw	low _Channels
 26665  0040AE  24F3               	addwf	prodl,w,c
 26666  0040B0  6ED9               	movwf	fsr2l,c
 26667  0040B2  0E04               	movlw	high _Channels
 26668  0040B4  20F4               	addwfc	prodh,w,c
 26669  0040B6  6EDA               	movwf	fsr2h,c
 26670  0040B8  0104               	movlb	4	; () banked
 26671  0040BA  50DF               	movf	223,w,c
 26672  0040BC  0B0F               	andlw	15
 26673  0040BE  0100               	movlb	0	; () banked
 26674  0040C0  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26675  0040C2  51C2               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 26676  0040C4  0102               	movlb	2	; () banked
 26677  0040C6  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 26678  0040C8  A0D8               	btfss	status,0,c
 26679  0040CA  D02C               	goto	l1408
 26680                           
 26681                           ; BSR set to: 2
 26682  0040CC  0100               	movlb	0	; () banked
 26683  0040CE  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26684  0040D0  0D0E               	mullw	14
 26685  0040D2  0E05               	movlw	5
 26686  0040D4  26F3               	addwf	prodl,f,c
 26687  0040D6  0E00               	movlw	0
 26688  0040D8  22F4               	addwfc	prodh,f,c
 26689  0040DA  0E00               	movlw	low _Channels
 26690  0040DC  24F3               	addwf	prodl,w,c
 26691  0040DE  6ED9               	movwf	fsr2l,c
 26692  0040E0  0E04               	movlw	high _Channels
 26693  0040E2  20F4               	addwfc	prodh,w,c
 26694  0040E4  6EDA               	movwf	fsr2h,c
 26695  0040E6  0104               	movlb	4	; () banked
 26696  0040E8  38DF               	swapf	223,w,c
 26697  0040EA  0B0F               	andlw	15
 26698  0040EC  0100               	movlb	0	; () banked
 26699  0040EE  6FC2               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 26700  0040F0  0102               	movlb	2	; () banked
 26701  0040F2  51E3               	movf	(_loRa+223)& (0+255),w,b
 26702  0040F4  0100               	movlb	0	; () banked
 26703  0040F6  5DC2               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 26704  0040F8  A0D8               	btfss	status,0,c
 26705  0040FA  D014               	goto	l1408
 26706                           
 26707                           ; BSR set to: 0
 26708                           ;lorawan_eu.c: 540: {
 26709                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 26710  0040FC  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26711  0040FE  0D0E               	mullw	14
 26712  004100  0E08               	movlw	8
 26713  004102  26F3               	addwf	prodl,f,c
 26714  004104  0E00               	movlw	0
 26715  004106  22F4               	addwfc	prodh,f,c
 26716  004108  0E00               	movlw	low _Channels
 26717  00410A  24F3               	addwf	prodl,w,c
 26718  00410C  6ED9               	movwf	fsr2l,c
 26719  00410E  0E04               	movlw	high _Channels
 26720  004110  20F4               	addwfc	prodh,w,c
 26721  004112  6EDA               	movwf	fsr2h,c
 26722  004114  CFDE F0C6          	movff	postinc2,LORAWAN_RxTimeout@minim
 26723  004118  CFDE F0C7          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 26724  00411C  CFDE F0C8          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 26725  004120  CFDE F0C9          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 26726  004124                     l1408:
 26727                           
 26728                           ; BSR set to: 0
 26729  004124  0100               	movlb	0	; () banked
 26730  004126  2BCA               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 26731  004128                     l1406:
 26732                           
 26733                           ; BSR set to: 0
 26734                           
 26735                           ; BSR set to: 0
 26736  004128  51CA               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 26737  00412A  0102               	movlb	2	; () banked
 26738  00412C  5DF1               	subwf	(_loRa+237)& (0+255),w,b
 26739  00412E  B0D8               	btfsc	status,0,c
 26740  004130  D77F               	goto	l1407
 26741                           
 26742                           ; BSR set to: 2
 26743                           ;lorawan_eu.c: 542: }
 26744                           ;lorawan_eu.c: 543: }
 26745                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 26746                           
 26747                           ; BSR set to: 2
 26748  004132  C0C6  F0C2         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 26749  004136  C0C7  F0C3         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 26750  00413A  C0C8  F0C4         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 26751  00413E  C0C9  F0C5         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 26752  004142  0E0C               	movlw	12
 26753  004144                     u23545:
 26754  004144  90D8               	bcf	status,0,c
 26755  004146  0100               	movlb	0	; () banked
 26756  004148  37C2               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 26757  00414A  37C3               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 26758  00414C  37C4               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 26759  00414E  37C5               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 26760  004150  2EE8               	decfsz	wreg,f,c
 26761  004152  D7F8               	goto	u23545
 26762  004154  0E00               	movlw	0
 26763  004156  25C2               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 26764  004158  6F60               	movwf	___lldiv@dividend& (0+255),b
 26765  00415A  0E20               	movlw	32
 26766  00415C  21C3               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 26767  00415E  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 26768  004160  0E03               	movlw	3
 26769  004162  21C4               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 26770  004164  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 26771  004166  0E00               	movlw	0
 26772  004168  21C5               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 26773  00416A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 26774  00416C  0E7D               	movlw	125
 26775  00416E  6F64               	movwf	___lldiv@divisor& (0+255),b
 26776  004170  0E00               	movlw	0
 26777  004172  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 26778  004174  0E00               	movlw	0
 26779  004176  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 26780  004178  0E00               	movlw	0
 26781  00417A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 26782  00417C  ECAE  F050         	call	___lldiv	;wreg free
 26783  004180  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 26784  004184  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 26785  004188  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 26786  00418C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 26787  004190  0102               	movlb	2	; () banked
 26788  004192  51EE               	movf	(_loRa+234)& (0+255),w,b
 26789  004194  ECD5  F05A         	call	_SwTimerSetTimeout
 26790                           
 26791                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 26792  004198  0102               	movlb	2	; () banked
 26793  00419A  51EE               	movf	(_loRa+234)& (0+255),w,b
 26794  00419C  EC5A  F04D         	call	_SwTimerStart
 26795                           
 26796                           ;lorawan_eu.c: 546: }
 26797                           ;lorawan_eu.c: 547: }
 26798  0041A0  0012               	return	
 26799  0041A2                     l1400:
 26800                           
 26801                           ;lorawan_eu.c: 548: else
 26802                           ;lorawan_eu.c: 549: {
 26803                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 26804  0041A2  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26805                           
 26806                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 26807  0041A6  0101               	movlb	1	; () banked
 26808  0041A8  510C               	movf	_rxPayload& (0+255),w,b
 26809  0041AA  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26810  0041AC  B4D8               	btfsc	status,2,c
 26811  0041AE  0012               	return	
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;lorawan_eu.c: 552: {
 26815                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 26816  0041B0  0E00               	movlw	0
 26817  0041B2  0100               	movlb	0	; () banked
 26818  0041B4  6F60               	movwf	RxData@pData& (0+255),b
 26819  0041B6  0E00               	movlw	0
 26820  0041B8  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26821  0041BA  0E00               	movlw	0
 26822  0041BC  6F62               	movwf	RxData@dataLength& (0+255),b
 26823  0041BE  0E01               	movlw	1
 26824  0041C0  6F63               	movwf	RxData@status& (0+255),b
 26825  0041C2  D801               	call	u23568
 26826  0041C4  0012               	return	
 26827  0041C6                     u23568:
 26828  0041C6  0005               	push	
 26829  0041C8  6EFA               	movwf	pclath,c
 26830  0041CA  0101               	movlb	1	; () banked
 26831  0041CC  510C               	movf	_rxPayload& (0+255),w,b
 26832  0041CE  6EFD               	movwf	tosl,c
 26833  0041D0  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26834  0041D2  6EFE               	movwf	tosh,c
 26835  0041D4  6AFF               	clrf	tosu,c
 26836  0041D6  50FA               	movf	pclath,w,c
 26837  0041D8  0012               	return		;indir
 26838  0041DA                     l1386:
 26839                           
 26840                           ;lorawan_eu.c: 560: else
 26841                           ;lorawan_eu.c: 561: {
 26842                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 26843  0041DA  0101               	movlb	1	; () banked
 26844  0041DC  510C               	movf	_rxPayload& (0+255),w,b
 26845  0041DE  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 26846  0041E0  B4D8               	btfsc	status,2,c
 26847  0041E2  0012               	return	
 26848                           
 26849                           ; BSR set to: 1
 26850                           ;lorawan_eu.c: 564: {
 26851                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 26852  0041E4  0E00               	movlw	0
 26853  0041E6  0100               	movlb	0	; () banked
 26854  0041E8  6F60               	movwf	RxData@pData& (0+255),b
 26855  0041EA  0E00               	movlw	0
 26856  0041EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 26857  0041EE  0E00               	movlw	0
 26858  0041F0  6F62               	movwf	RxData@dataLength& (0+255),b
 26859  0041F2  0E02               	movlw	2
 26860  0041F4  6F63               	movwf	RxData@status& (0+255),b
 26861  0041F6  D801               	call	u23588
 26862  0041F8  0012               	return	
 26863  0041FA                     u23588:
 26864  0041FA  0005               	push	
 26865  0041FC  6EFA               	movwf	pclath,c
 26866  0041FE  0101               	movlb	1	; () banked
 26867  004200  510C               	movf	_rxPayload& (0+255),w,b
 26868  004202  6EFD               	movwf	tosl,c
 26869  004204  510D               	movf	(_rxPayload+1)& (0+255),w,b
 26870  004206  6EFE               	movwf	tosh,c
 26871  004208  6AFF               	clrf	tosu,c
 26872  00420A  50FA               	movf	pclath,w,c
 26873  00420C  0012               	return		;indir
 26874  00420E                     __end_of_LORAWAN_RxTimeout:
 26875                           	opt stack 0
 26876                           tosu	equ	0xFFF
 26877                           tosh	equ	0xFFE
 26878                           tosl	equ	0xFFD
 26879                           pclath	equ	0xFFA
 26880                           tblptru	equ	0xFF8
 26881                           tblptrh	equ	0xFF7
 26882                           tblptrl	equ	0xFF6
 26883                           tablat	equ	0xFF5
 26884                           prodh	equ	0xFF4
 26885                           prodl	equ	0xFF3
 26886                           intcon	equ	0xFF2
 26887                           intcon2	equ	0xFF1
 26888                           intcon3	equ	0xFF0
 26889                           postinc0	equ	0xFEE
 26890                           wreg	equ	0xFE8
 26891                           postinc1	equ	0xFE6
 26892                           postdec1	equ	0xFE5
 26893                           plusw1	equ	0xFE3
 26894                           fsr1h	equ	0xFE2
 26895                           fsr1l	equ	0xFE1
 26896                           indf2	equ	0xFDF
 26897                           postinc2	equ	0xFDE
 26898                           postdec2	equ	0xFDD
 26899                           fsr2h	equ	0xFDA
 26900                           fsr2l	equ	0xFD9
 26901                           status	equ	0xFD8
 26902                           
 26903 ;; *************** function _LORAWAN_RxDone *****************
 26904 ;; Defined at:
 26905 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 26908 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26909 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 26910 ;; Auto vars:     Size  Location     Type
 26911 ;;  hdr             2  145[BANK0 ] PTR struct .
 26912 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26913 ;;  joinAccept      2  142[BANK0 ] PTR struct .
 26914 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 26915 ;;  computedMic     4  138[BANK0 ] unsigned long 
 26916 ;;  extractedMic    4  130[BANK0 ] unsigned long 
 26917 ;;  packet          2  136[BANK0 ] PTR unsigned char 
 26918 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 26919 ;;  frmPayloadLe    1  144[BANK0 ] unsigned char 
 26920 ;;  temp            1  135[BANK0 ] unsigned char 
 26921 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 26922 ;;  mhdr            1  129[BANK0 ] struct .
 26923 ;;  channelIndex    1  128[BANK0 ] unsigned char 
 26924 ;;  fPort           1  127[BANK0 ] unsigned char 
 26925 ;; Return value:  Size  Location     Type
 26926 ;;                  1    wreg      enum E7426
 26927 ;; Registers used:
 26928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26929 ;; Tracked objects:
 26930 ;;		On entry : 0/0
 26931 ;;		On exit  : 0/0
 26932 ;;		Unchanged: 0/0
 26933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26934 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26935 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26936 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26937 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26938 ;;Total ram usage:       28 bytes
 26939 ;; Hardware stack levels used:    1
 26940 ;; Hardware stack levels required when called:   15
 26941 ;; This function calls:
 26942 ;;		_AESCmac
 26943 ;;		_AESEncodeLoRa
 26944 ;;		_AssembleEncryptionBlock
 26945 ;;		_CheckFlags
 26946 ;;		_CheckMcastFlags
 26947 ;;		_ComputeMic
 26948 ;;		_ComputeSessionKeys
 26949 ;;		_EncryptFRMPayload
 26950 ;;		_ExtractMic
 26951 ;;		_LORAWAN_EnterContinuousReceive
 26952 ;;		_LORAWAN_Send
 26953 ;;		_MacExecuteCommands
 26954 ;;		_RADIO_GetStatus
 26955 ;;		_RADIO_ReleaseData
 26956 ;;		_RxData
 26957 ;;		_SearchAvailableChannel
 26958 ;;		_SetJoinFailState
 26959 ;;		_SetReceptionNotOkState
 26960 ;;		_StartReTxTimer
 26961 ;;		_SwTimerStop
 26962 ;;		_UpdateCfList
 26963 ;;		_UpdateDLSettings
 26964 ;;		_UpdateJoinSuccessState
 26965 ;;		_UpdateReceiveDelays
 26966 ;;		_UpdateRetransmissionAckTimeoutState
 26967 ;;		_memcpy
 26968 ;; This function is called by:
 26969 ;;		_RADIO_RxDone
 26970 ;;		_RADIO_FSKPayloadReady
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974                           	psect	text165
 26975  000086                     __ptext165:
 26976                           	opt stack 0
 26977  000086                     _LORAWAN_RxDone:
 26978                           	opt stack 12
 26979                           
 26980                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 26981                           ;lorawan.c: 1124: Mhdr_t mhdr;
 26982                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 26983                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 26984                           ;lorawan.c: 1127: uint8_t *packet;
 26985                           ;lorawan.c: 1128: uint8_t temp;
 26986                           ;lorawan.c: 1130: RADIO_ReleaseData();
 26987                           
 26988                           ;incstack = 0
 26989  000086  EC3A  F063         	call	_RADIO_ReleaseData	;wreg free
 26990                           
 26991                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 26992  00008A  0102               	movlb	2	; () banked
 26993  00008C  B107               	btfsc	(_loRa+3)& (0+255),0,b
 26994  00008E  EF62  F006         	goto	l2230
 26995                           
 26996                           ; BSR set to: 2
 26997                           ;lorawan.c: 1133: {
 26998                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 26999  000092  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 27000  000096  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 27001  00009A  50DF               	movf	indf2,w,c
 27002  00009C  0100               	movlb	0	; () banked
 27003  00009E  6FE1               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 27004                           
 27005                           ; BSR set to: 0
 27006                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 27007  0000A0  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27008  0000A2  32E8               	rrcf	wreg,f,c
 27009  0000A4  0B07               	andlw	7
 27010  0000A6  06E8               	decf	wreg,f,c
 27011  0000A8  A4D8               	btfss	status,2,c
 27012  0000AA  D0D8               	goto	l2231
 27013                           
 27014                           ; BSR set to: 0
 27015  0000AC  0102               	movlb	2	; () banked
 27016  0000AE  5121               	movf	(_loRa+29)& (0+255),w,b
 27017  0000B0  A4D8               	btfss	status,2,c
 27018  0000B2  D0D4               	goto	l2231
 27019                           
 27020                           ; BSR set to: 2
 27021                           ;lorawan.c: 1136: {
 27022                           ;lorawan.c: 1137: temp = bufferLength - 1;
 27023  0000B4  0101               	movlb	1	; () banked
 27024  0000B6  05F4               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27025  0000B8  0100               	movlb	0	; () banked
 27026  0000BA  D028               	goto	L9
 27027  0000BC                     
 27028                           ; BSR set to: 0
 27029                           ;lorawan.c: 1139: {
 27030                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 27031                           
 27032                           ; BSR set to: 0
 27033  0000BC  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 27034  0000BE  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 27035  0000C0  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 27036  0000C2  1FDA               	comf	??_LORAWAN_RxDone& (0+255),f,b
 27037  0000C4  1FDB               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 27038  0000C6  4BDA               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 27039  0000C8  2BDB               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 27040  0000CA  0101               	movlb	1	; () banked
 27041  0000CC  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27042  0000CE  0100               	movlb	0	; () banked
 27043  0000D0  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 27044  0000D2  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 27045  0000D4  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27046  0000D6  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27047  0000D8  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27048  0000DA  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27049  0000DC  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27050  0000DE  0101               	movlb	1	; () banked
 27051  0000E0  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 27052  0000E2  0100               	movlb	0	; () banked
 27053  0000E4  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 27054  0000E6  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27055  0000E8  0101               	movlb	1	; () banked
 27056  0000EA  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 27057  0000EC  0100               	movlb	0	; () banked
 27058  0000EE  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 27059  0000F0  0E46               	movlw	low (_loRa+66)
 27060  0000F2  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 27061  0000F4  0E02               	movlw	high (_loRa+66)
 27062  0000F6  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 27063  0000F8  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 27064                           
 27065                           ;lorawan.c: 1142: if (temp > 16)
 27066  0000FC  0E10               	movlw	16
 27067  0000FE  0100               	movlb	0	; () banked
 27068  000100  65E7               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 27069  000102  D003               	goto	l2234
 27070                           
 27071                           ; BSR set to: 0
 27072                           ;lorawan.c: 1143: {
 27073                           ;lorawan.c: 1144: temp -= 16;
 27074  000104  0E10               	movlw	16
 27075  000106  5FE7               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 27076                           
 27077                           ;lorawan.c: 1145: }
 27078  000108  D002               	goto	l2235
 27079  00010A                     l2234:
 27080                           
 27081                           ; BSR set to: 0
 27082                           ;lorawan.c: 1146: else
 27083                           ;lorawan.c: 1147: {
 27084                           ;lorawan.c: 1148: temp = 0;
 27085                           
 27086                           ; BSR set to: 0
 27087  00010A  0E00               	movlw	0
 27088  00010C                     L9:
 27089  00010C  6FE7               	movwf	LORAWAN_RxDone@temp& (0+255),b
 27090  00010E                     l2235:
 27091                           
 27092                           ; BSR set to: 0
 27093                           
 27094                           ; BSR set to: 0
 27095  00010E  51E7               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 27096  000110  A4D8               	btfss	status,2,c
 27097  000112  D7D4               	goto	l2233
 27098                           
 27099                           ; BSR set to: 0
 27100                           ;lorawan.c: 1149: }
 27101                           ;lorawan.c: 1150: }
 27102                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 27103                           
 27104                           ; BSR set to: 0
 27105  000114  0E46               	movlw	low (_loRa+66)
 27106  000116  6FC7               	movwf	ComputeMic@key& (0+255),b
 27107  000118  0E02               	movlw	high (_loRa+66)
 27108  00011A  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 27109  00011C  C1F2  F0C9         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 27110  000120  C1F3  F0CA         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 27111  000124  0101               	movlb	1	; () banked
 27112  000126  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27113  000128  0FFC               	addlw	252
 27114  00012A  0100               	movlb	0	; () banked
 27115  00012C  6FCB               	movwf	ComputeMic@bufferLength& (0+255),b
 27116  00012E  ECE6  F054         	call	_ComputeMic	;wreg free
 27117  000132  C0C7  F0EA         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 27118  000136  C0C8  F0EB         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 27119  00013A  C0C9  F0EC         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 27120  00013E  C0CA  F0ED         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 27121                           
 27122                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 27123  000142  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 27124  000146  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 27125  00014A  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 27126  00014E  ECEE  F056         	call	_ExtractMic	;wreg free
 27127  000152  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 27128  000156  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 27129  00015A  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 27130  00015E  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 27131                           
 27132                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 27133  000162  0100               	movlb	0	; () banked
 27134  000164  51EA               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 27135  000166  19E2               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 27136  000168  E10A               	bnz	u22640
 27137  00016A  51EB               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 27138  00016C  19E3               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 27139  00016E  E107               	bnz	u22640
 27140  000170  51EC               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 27141  000172  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 27142  000174  E104               	bnz	u22640
 27143  000176  51ED               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 27144  000178  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 27145  00017A  B4D8               	btfsc	status,2,c
 27146  00017C  D011               	goto	l2237
 27147  00017E                     u22640:
 27148                           
 27149                           ; BSR set to: 0
 27150                           ;lorawan.c: 1156: {
 27151                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 27152  00017E  0102               	movlb	2	; () banked
 27153  000180  5106               	movf	(_loRa+2)& (0+255),w,b
 27154  000182  0B0F               	andlw	15
 27155  000184  0A05               	xorlw	5
 27156  000186  B4D8               	btfsc	status,2,c
 27157  000188  D008               	goto	u22670
 27158                           
 27159                           ; BSR set to: 2
 27160  00018A  5106               	movf	(_loRa+2)& (0+255),w,b
 27161  00018C  0B0F               	andlw	15
 27162  00018E  0A03               	xorlw	3
 27163  000190  A4D8               	btfss	status,2,c
 27164  000192  0012               	return	
 27165                           
 27166                           ; BSR set to: 2
 27167  000194  51F5               	movf	(_loRa+241)& (0+255),w,b
 27168  000196  B4D8               	btfsc	status,2,c
 27169  000198  0012               	return	
 27170  00019A                     u22670:
 27171                           
 27172                           ; BSR set to: 2
 27173                           ;lorawan.c: 1158: {
 27174                           ;lorawan.c: 1159: SetJoinFailState();
 27175                           
 27176                           ; BSR set to: 2
 27177  00019A  ECD7  F05C         	call	_SetJoinFailState	;wreg free
 27178                           
 27179                           ;lorawan.c: 1160: }
 27180                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 27181                           ;	Return value of _LORAWAN_RxDone is never used
 27182  00019E  0012               	return	
 27183  0001A0                     l2237:
 27184                           
 27185                           ;lorawan.c: 1163: }
 27186                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 27187  0001A0  0102               	movlb	2	; () banked
 27188  0001A2  5106               	movf	(_loRa+2)& (0+255),w,b
 27189  0001A4  0B0F               	andlw	15
 27190  0001A6  0A03               	xorlw	3
 27191  0001A8  A4D8               	btfss	status,2,c
 27192  0001AA  D003               	goto	l2242
 27193                           
 27194                           ; BSR set to: 2
 27195                           ;lorawan.c: 1167: {
 27196                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 27197  0001AC  51E7               	movf	(_loRa+227)& (0+255),w,b
 27198  0001AE  ECA6  F05E         	call	_SwTimerStop
 27199  0001B2                     l2242:
 27200                           
 27201                           ;lorawan.c: 1169: }
 27202                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 27203                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 27204  0001B2  C1F2  F0EE         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 27205  0001B6  C1F3  F0EF         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 27206                           
 27207                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 27208  0001BA  0100               	movlb	0	; () banked
 27209  0001BC  EE20 F007          	lfsr	2,7
 27210  0001C0  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27211  0001C2  26D9               	addwf	fsr2l,f,c
 27212  0001C4  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27213  0001C6  22DA               	addwfc	fsr2h,f,c
 27214  0001C8  CFDE F222          	movff	postinc2,_loRa+30
 27215  0001CC  CFDE F223          	movff	postinc2,_loRa+31
 27216  0001D0  CFDE F224          	movff	postinc2,_loRa+32
 27217  0001D4  CFDE F225          	movff	postinc2,_loRa+33
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 27221  0001D8  EE20 F00C          	lfsr	2,12
 27222  0001DC  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27223  0001DE  26D9               	addwf	fsr2l,f,c
 27224  0001E0  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27225  0001E2  22DA               	addwfc	fsr2h,f,c
 27226  0001E4  50DF               	movf	indf2,w,c
 27227  0001E6  0B0F               	andlw	15
 27228  0001E8  EC3A  F05B         	call	_UpdateReceiveDelays
 27229                           
 27230                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 27231  0001EC  0100               	movlb	0	; () banked
 27232  0001EE  EE20 F00B          	lfsr	2,11
 27233  0001F2  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27234  0001F4  26D9               	addwf	fsr2l,f,c
 27235  0001F6  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27236  0001F8  22DA               	addwfc	fsr2h,f,c
 27237  0001FA  38DF               	swapf	223,w,c
 27238  0001FC  0B07               	andlw	7
 27239  0001FE  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 27240  000200  EE20 F00B          	lfsr	2,11
 27241  000204  51EE               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 27242  000206  26D9               	addwf	fsr2l,f,c
 27243  000208  51EF               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 27244  00020A  22DA               	addwfc	fsr2h,f,c
 27245  00020C  50DF               	movf	223,w,c
 27246  00020E  0B0F               	andlw	15
 27247  000210  ECA5  F060         	call	_UpdateDLSettings
 27248                           
 27249                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 27250  000214  C0EE  F0A6         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 27251  000218  C0EF  F0A7         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 27252  00021C  0101               	movlb	1	; () banked
 27253  00021E  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27254  000220  EC20  F031         	call	_UpdateCfList
 27255                           
 27256                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 27257  000224  C0EE  F091         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 27258  000228  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 27259  00022C  EC6B  F050         	call	_ComputeSessionKeys	;wreg free
 27260                           
 27261                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 27262  000230  0E00               	movlw	0
 27263  000232  6EE6               	movwf	postinc1,c
 27264  000234  EC32  F03E         	call	_UpdateJoinSuccessState	;wreg free
 27265                           
 27266                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 27267  000238  0E00               	movlw	0
 27268  00023A  0102               	movlb	2	; () banked
 27269  00023C  6F0A               	movwf	(_loRa+6)& (0+255),b
 27270  00023E  0E00               	movlw	0
 27271  000240  6F0B               	movwf	(_loRa+7)& (0+255),b
 27272  000242  0E00               	movlw	0
 27273  000244  6F0C               	movwf	(_loRa+8)& (0+255),b
 27274  000246  0E00               	movlw	0
 27275  000248  6F0D               	movwf	(_loRa+9)& (0+255),b
 27276                           
 27277                           ; BSR set to: 2
 27278                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 27279  00024A  0E00               	movlw	0
 27280  00024C  6F0E               	movwf	(_loRa+10)& (0+255),b
 27281  00024E  0E00               	movlw	0
 27282  000250  6F0F               	movwf	(_loRa+11)& (0+255),b
 27283  000252  0E00               	movlw	0
 27284  000254  6F10               	movwf	(_loRa+12)& (0+255),b
 27285  000256  0E00               	movlw	0
 27286  000258  6F11               	movwf	(_loRa+13)& (0+255),b
 27287                           
 27288                           ; BSR set to: 2
 27289                           ;lorawan.c: 1190: }
 27290                           
 27291                           ; BSR set to: 2
 27292                           ;lorawan.c: 1189: return OK;
 27293                           ;	Return value of _LORAWAN_RxDone is never used
 27294  00025A  0012               	return	
 27295  00025C                     l2231:
 27296                           
 27297                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 27298                           
 27299                           ; BSR set to: 2
 27300  00025C  0100               	movlb	0	; () banked
 27301  00025E  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27302  000260  32E8               	rrcf	wreg,f,c
 27303  000262  0B07               	andlw	7
 27304  000264  0A03               	xorlw	3
 27305  000266  B4D8               	btfsc	status,2,c
 27306  000268  D007               	goto	u22700
 27307                           
 27308                           ; BSR set to: 0
 27309  00026A  39E1               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 27310  00026C  32E8               	rrcf	wreg,f,c
 27311  00026E  0B07               	andlw	7
 27312  000270  0A05               	xorlw	5
 27313  000272  A4D8               	btfss	status,2,c
 27314  000274  EF5F  F006         	goto	l2244
 27315  000278                     u22700:
 27316                           
 27317                           ; BSR set to: 0
 27318                           ;lorawan.c: 1192: {
 27319                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 27320                           
 27321                           ; BSR set to: 0
 27322  000278  0E00               	movlw	0
 27323  00027A  0102               	movlb	2	; () banked
 27324  00027C  6FAB               	movwf	(_loRa+167)& (0+255),b
 27325                           
 27326                           ; BSR set to: 2
 27327                           ;lorawan.c: 1195: Hdr_t *hdr;
 27328                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 27329  00027E  C1F2  F0F1         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 27330  000282  C1F3  F0F2         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 27331                           
 27332                           ; BSR set to: 2
 27333                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 27334  000286  0E02               	movlw	2
 27335  000288  1916               	xorwf	(_loRa+18)& (0+255),w,b
 27336  00028A  A4D8               	btfss	status,2,c
 27337  00028C  D210               	goto	l2247
 27338                           
 27339                           ; BSR set to: 2
 27340  00028E  0100               	movlb	0	; () banked
 27341  000290  EE20 F001          	lfsr	2,1
 27342  000294  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27343  000296  26D9               	addwf	fsr2l,f,c
 27344  000298  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27345  00029A  22DA               	addwfc	fsr2h,f,c
 27346  00029C  0102               	movlb	2	; () banked
 27347  00029E  5166               	movf	(_loRa+98)& (0+255),w,b
 27348  0002A0  18DE               	xorwf	postinc2,w,c
 27349  0002A2  E109               	bnz	u22721
 27350  0002A4  5167               	movf	(_loRa+99)& (0+255),w,b
 27351  0002A6  18DE               	xorwf	postinc2,w,c
 27352  0002A8  E106               	bnz	u22721
 27353  0002AA  5168               	movf	(_loRa+100)& (0+255),w,b
 27354  0002AC  18DE               	xorwf	postinc2,w,c
 27355  0002AE  E103               	bnz	u22721
 27356  0002B0  5169               	movf	(_loRa+101)& (0+255),w,b
 27357  0002B2  18DE               	xorwf	postinc2,w,c
 27358  0002B4  A4D8               	btfss	status,2,c
 27359  0002B6                     u22721:
 27360  0002B6  D1FB               	goto	l2247
 27361                           
 27362                           ; BSR set to: 2
 27363  0002B8  A508               	btfss	(_loRa+4)& (0+255),2,b
 27364  0002BA  D1F9               	goto	l2247
 27365                           
 27366                           ; BSR set to: 2
 27367                           ;lorawan.c: 1200: {
 27368                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 27369  0002BC  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 27370  0002C0  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 27371  0002C4  ECF0  F050         	call	_CheckMcastFlags	;wreg free
 27372  0002C8  0900               	iorlw	0
 27373  0002CA  A4D8               	btfss	status,2,c
 27374  0002CC  D008               	goto	l2248
 27375                           
 27376                           ;lorawan.c: 1203: {
 27377                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27378  0002CE  0102               	movlb	2	; () banked
 27379  0002D0  5106               	movf	(_loRa+2)& (0+255),w,b
 27380  0002D2  0BF0               	andlw	-16
 27381  0002D4  0909               	iorlw	9
 27382  0002D6  6F06               	movwf	(_loRa+2)& (0+255),b
 27383                           
 27384                           ; BSR set to: 2
 27385                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 27386  0002D8  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27387                           
 27388                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 27389                           ;	Return value of _LORAWAN_RxDone is never used
 27390  0002DC  0012               	return	
 27391  0002DE                     l2248:
 27392                           
 27393                           ;lorawan.c: 1207: }
 27394                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 27395  0002DE  0100               	movlb	0	; () banked
 27396  0002E0  EE20 F006          	lfsr	2,6
 27397  0002E4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27398  0002E6  26D9               	addwf	fsr2l,f,c
 27399  0002E8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27400  0002EA  22DA               	addwfc	fsr2h,f,c
 27401  0002EC  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 27402  0002F0  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 27403  0002F4  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 27404  0002F8  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 27405  0002FC  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 27406  0002FE  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 27407  000300  0101               	movlb	1	; () banked
 27408  000302  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27409  000304  0FFC               	addlw	252
 27410  000306  0100               	movlb	0	; () banked
 27411  000308  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 27412  00030A  0E49               	movlw	73
 27413  00030C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 27414  00030E  0E01               	movlw	1
 27415  000310  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 27416  000312  0E01               	movlw	1
 27417  000314  ECCF  F045         	call	_AssembleEncryptionBlock
 27418                           
 27419                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 27420  000318  0E2F               	movlw	low _radioBuffer
 27421  00031A  0100               	movlb	0	; () banked
 27422  00031C  6F60               	movwf	memcpy@d1& (0+255),b
 27423  00031E  0E06               	movlw	high _radioBuffer
 27424  000320  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27425  000322  0EC8               	movlw	low _aesBuffer
 27426  000324  6F62               	movwf	memcpy@s1& (0+255),b
 27427  000326  0E03               	movlw	high _aesBuffer
 27428  000328  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27429  00032A  0E00               	movlw	0
 27430  00032C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27431  00032E  0E10               	movlw	16
 27432  000330  6F64               	movwf	memcpy@n& (0+255),b
 27433  000332  ECA9  F055         	call	_memcpy	;wreg free
 27434                           
 27435                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 27436  000336  0E3F               	movlw	low (_radioBuffer+16)
 27437  000338  0100               	movlb	0	; () banked
 27438  00033A  6F60               	movwf	memcpy@d1& (0+255),b
 27439  00033C  0E06               	movlw	high (_radioBuffer+16)
 27440  00033E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27441  000340  C1F2  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 27442  000344  C1F3  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 27443  000348  0EFC               	movlw	252
 27444  00034A  0101               	movlb	1	; () banked
 27445  00034C  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27446  00034E  0100               	movlb	0	; () banked
 27447  000350  6F64               	movwf	memcpy@n& (0+255),b
 27448  000352  6B65               	clrf	(memcpy@n+1)& (0+255),b
 27449  000354  0EFF               	movlw	255
 27450  000356  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 27451  000358  ECA9  F055         	call	_memcpy	;wreg free
 27452                           
 27453                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 27454  00035C  0E6A               	movlw	low (_loRa+102)
 27455  00035E  0100               	movlb	0	; () banked
 27456  000360  6FB9               	movwf	AESCmac@key& (0+255),b
 27457  000362  0E02               	movlw	high (_loRa+102)
 27458  000364  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 27459  000366  0EC8               	movlw	low _aesBuffer
 27460  000368  6FBB               	movwf	AESCmac@output& (0+255),b
 27461  00036A  0E03               	movlw	high _aesBuffer
 27462  00036C  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 27463  00036E  0E2F               	movlw	low _radioBuffer
 27464  000370  6FBD               	movwf	AESCmac@input& (0+255),b
 27465  000372  0E06               	movlw	high _radioBuffer
 27466  000374  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 27467  000376  0101               	movlb	1	; () banked
 27468  000378  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27469  00037A  0F0C               	addlw	12
 27470  00037C  0100               	movlb	0	; () banked
 27471  00037E  6FBF               	movwf	AESCmac@size& (0+255),b
 27472  000380  EC80  F01D         	call	_AESCmac	;wreg free
 27473                           
 27474                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 27475  000384  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 27476  000386  0100               	movlb	0	; () banked
 27477  000388  6F60               	movwf	memcpy@d1& (0+255),b
 27478  00038A  0E00               	movlw	high LORAWAN_RxDone@computedMic
 27479  00038C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27480  00038E  0EC8               	movlw	low _aesBuffer
 27481  000390  6F62               	movwf	memcpy@s1& (0+255),b
 27482  000392  0E03               	movlw	high _aesBuffer
 27483  000394  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27484  000396  0E00               	movlw	0
 27485  000398  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27486  00039A  0E04               	movlw	4
 27487  00039C  6F64               	movwf	memcpy@n& (0+255),b
 27488  00039E  ECA9  F055         	call	_memcpy	;wreg free
 27489                           
 27490                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 27491  0003A2  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 27492  0003A6  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 27493  0003AA  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 27494  0003AE  ECEE  F056         	call	_ExtractMic	;wreg free
 27495  0003B2  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 27496  0003B6  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 27497  0003BA  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 27498  0003BE  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 27499                           
 27500                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 27501  0003C2  0100               	movlb	0	; () banked
 27502  0003C4  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 27503  0003C6  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 27504  0003C8  E10A               	bnz	u22750
 27505  0003CA  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 27506  0003CC  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 27507  0003CE  E107               	bnz	u22750
 27508  0003D0  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 27509  0003D2  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 27510  0003D4  E104               	bnz	u22750
 27511  0003D6  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 27512  0003D8  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 27513  0003DA  B4D8               	btfsc	status,2,c
 27514  0003DC  D008               	goto	l2249
 27515  0003DE                     u22750:
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;lorawan.c: 1218: {
 27519                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27520  0003DE  0102               	movlb	2	; () banked
 27521  0003E0  5106               	movf	(_loRa+2)& (0+255),w,b
 27522  0003E2  0BF0               	andlw	-16
 27523  0003E4  0909               	iorlw	9
 27524  0003E6  6F06               	movwf	(_loRa+2)& (0+255),b
 27525                           
 27526                           ; BSR set to: 2
 27527                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 27528  0003E8  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27529                           
 27530                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 27531                           ;	Return value of _LORAWAN_RxDone is never used
 27532  0003EC  0012               	return	
 27533  0003EE                     l2249:
 27534                           
 27535                           ;lorawan.c: 1222: }
 27536                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 27537  0003EE  0100               	movlb	0	; () banked
 27538  0003F0  EE20 F006          	lfsr	2,6
 27539  0003F4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27540  0003F6  26D9               	addwf	fsr2l,f,c
 27541  0003F8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27542  0003FA  22DA               	addwfc	fsr2h,f,c
 27543  0003FC  0102               	movlb	2	; () banked
 27544  0003FE  5112               	movf	(_loRa+14)& (0+255),w,b
 27545  000400  5CDE               	subwf	postinc2,w,c
 27546  000402  5113               	movf	(_loRa+15)& (0+255),w,b
 27547  000404  58DE               	subwfb	postinc2,w,c
 27548  000406  A0D8               	btfss	status,0,c
 27549  000408  D050               	goto	l2250
 27550                           
 27551                           ; BSR set to: 2
 27552                           ;lorawan.c: 1225: {
 27553                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 27554  00040A  0100               	movlb	0	; () banked
 27555  00040C  EE20 F006          	lfsr	2,6
 27556  000410  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27557  000412  26D9               	addwf	fsr2l,f,c
 27558  000414  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27559  000416  22DA               	addwfc	fsr2h,f,c
 27560  000418  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 27561  00041C  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 27562  000420  EE22  F012         	lfsr	2,_loRa+14
 27563  000424  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 27564  000428  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 27565  00042C  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27566  00042E  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27567  000430  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27568  000432  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27569  000434  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27570  000436  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27571  000438  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27572  00043A  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27573  00043C  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27574  00043E  0102               	movlb	2	; () banked
 27575  000440  5DA2               	subwf	(_loRa+158)& (0+255),w,b
 27576  000442  0100               	movlb	0	; () banked
 27577  000444  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27578  000446  0102               	movlb	2	; () banked
 27579  000448  59A3               	subwfb	(_loRa+159)& (0+255),w,b
 27580  00044A  B0D8               	btfsc	status,0,c
 27581  00044C  D022               	goto	l2251
 27582                           
 27583                           ; BSR set to: 2
 27584                           ;lorawan.c: 1227: {
 27585                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 27586  00044E  0101               	movlb	1	; () banked
 27587  000450  510C               	movf	_rxPayload& (0+255),w,b
 27588  000452  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27589  000454  B4D8               	btfsc	status,2,c
 27590  000456  D015               	goto	u22799
 27591                           
 27592                           ; BSR set to: 1
 27593                           ;lorawan.c: 1229: {
 27594                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27595  000458  0E00               	movlw	0
 27596  00045A  0100               	movlb	0	; () banked
 27597  00045C  6F60               	movwf	RxData@pData& (0+255),b
 27598  00045E  0E00               	movlw	0
 27599  000460  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27600  000462  0E00               	movlw	0
 27601  000464  6F62               	movwf	RxData@dataLength& (0+255),b
 27602  000466  0E05               	movlw	5
 27603  000468  6F63               	movwf	RxData@status& (0+255),b
 27604  00046A  D801               	call	u22798
 27605  00046C  D00A               	goto	u22799
 27606  00046E                     u22798:
 27607  00046E  0005               	push	
 27608  000470  6EFA               	movwf	pclath,c
 27609  000472  0101               	movlb	1	; () banked
 27610  000474  510C               	movf	_rxPayload& (0+255),w,b
 27611  000476  6EFD               	movwf	tosl,c
 27612  000478  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27613  00047A  6EFE               	movwf	tosh,c
 27614  00047C  6AFF               	clrf	tosu,c
 27615  00047E  50FA               	movf	pclath,w,c
 27616  000480  0012               	return		;indir
 27617  000482                     u22799:
 27618                           
 27619                           ;lorawan.c: 1231: }
 27620                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27621  000482  0102               	movlb	2	; () banked
 27622  000484  5106               	movf	(_loRa+2)& (0+255),w,b
 27623  000486  0BF0               	andlw	-16
 27624  000488  0909               	iorlw	9
 27625  00048A  6F06               	movwf	(_loRa+2)& (0+255),b
 27626                           
 27627                           ; BSR set to: 2
 27628                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 27629  00048C  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27630                           
 27631                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 27632                           ;	Return value of _LORAWAN_RxDone is never used
 27633  000490  0012               	return	
 27634  000492                     l2251:
 27635                           
 27636                           ;lorawan.c: 1237: else
 27637                           ;lorawan.c: 1238: {
 27638                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 27639  000492  0100               	movlb	0	; () banked
 27640  000494  EE20 F006          	lfsr	2,6
 27641  000498  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27642  00049A  26D9               	addwf	fsr2l,f,c
 27643  00049C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27644  00049E  22DA               	addwfc	fsr2h,f,c
 27645  0004A0  CFDE F212          	movff	postinc2,_loRa+14
 27646  0004A4  CFDD F213          	movff	postdec2,_loRa+15
 27647                           
 27648                           ; BSR set to: 0
 27649                           ;lorawan.c: 1240: }
 27650                           ;lorawan.c: 1241: }
 27651  0004A8  D03A               	goto	l2256
 27652  0004AA                     l2250:
 27653                           
 27654                           ;lorawan.c: 1242: else
 27655                           ;lorawan.c: 1243: {
 27656                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 27657                           
 27658                           ; BSR set to: 0
 27659  0004AA  0100               	movlb	0	; () banked
 27660  0004AC  EE20 F006          	lfsr	2,6
 27661  0004B0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27662  0004B2  26D9               	addwf	fsr2l,f,c
 27663  0004B4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27664  0004B6  22DA               	addwfc	fsr2h,f,c
 27665  0004B8  50DE               	movf	postinc2,w,c
 27666  0004BA  10DE               	iorwf	postinc2,w,c
 27667  0004BC  A4D8               	btfss	status,2,c
 27668  0004BE  D00D               	goto	l2255
 27669                           
 27670                           ; BSR set to: 0
 27671  0004C0  0102               	movlb	2	; () banked
 27672  0004C2  2912               	incf	(_loRa+14)& (0+255),w,b
 27673  0004C4  E10A               	bnz	l19900
 27674  0004C6  2913               	incf	(_loRa+15)& (0+255),w,b
 27675  0004C8  A4D8               	btfss	status,2,c
 27676  0004CA  D007               	goto	l2255
 27677                           
 27678                           ; BSR set to: 2
 27679                           ;lorawan.c: 1245: {
 27680                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 27681  0004CC  0E00               	movlw	0
 27682  0004CE  6F13               	movwf	(_loRa+15)& (0+255),b
 27683  0004D0  0E00               	movlw	0
 27684  0004D2  6F12               	movwf	(_loRa+14)& (0+255),b
 27685                           
 27686                           ; BSR set to: 2
 27687                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 27688  0004D4  4B14               	infsnz	(_loRa+16)& (0+255),f,b
 27689  0004D6  2B15               	incf	(_loRa+17)& (0+255),f,b
 27690                           
 27691                           ;lorawan.c: 1248: }
 27692  0004D8  D022               	goto	l2256
 27693  0004DA                     l2255:
 27694  0004DA                     l19900:
 27695                           
 27696                           ;lorawan.c: 1249: else
 27697                           ;lorawan.c: 1250: {
 27698                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 27699  0004DA  0101               	movlb	1	; () banked
 27700  0004DC  510C               	movf	_rxPayload& (0+255),w,b
 27701  0004DE  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27702  0004E0  B4D8               	btfsc	status,2,c
 27703  0004E2  D015               	goto	u22839
 27704                           
 27705                           ; BSR set to: 1
 27706                           ;lorawan.c: 1252: {
 27707                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27708  0004E4  0E00               	movlw	0
 27709  0004E6  0100               	movlb	0	; () banked
 27710  0004E8  6F60               	movwf	RxData@pData& (0+255),b
 27711  0004EA  0E00               	movlw	0
 27712  0004EC  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27713  0004EE  0E00               	movlw	0
 27714  0004F0  6F62               	movwf	RxData@dataLength& (0+255),b
 27715  0004F2  0E05               	movlw	5
 27716  0004F4  6F63               	movwf	RxData@status& (0+255),b
 27717  0004F6  D801               	call	u22838
 27718  0004F8  D00A               	goto	u22839
 27719  0004FA                     u22838:
 27720  0004FA  0005               	push	
 27721  0004FC  6EFA               	movwf	pclath,c
 27722  0004FE  0101               	movlb	1	; () banked
 27723  000500  510C               	movf	_rxPayload& (0+255),w,b
 27724  000502  6EFD               	movwf	tosl,c
 27725  000504  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27726  000506  6EFE               	movwf	tosh,c
 27727  000508  6AFF               	clrf	tosu,c
 27728  00050A  50FA               	movf	pclath,w,c
 27729  00050C  0012               	return		;indir
 27730  00050E                     u22839:
 27731                           
 27732                           ;lorawan.c: 1254: }
 27733                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27734  00050E  0102               	movlb	2	; () banked
 27735  000510  5106               	movf	(_loRa+2)& (0+255),w,b
 27736  000512  0BF0               	andlw	-16
 27737  000514  0909               	iorlw	9
 27738  000516  6F06               	movwf	(_loRa+2)& (0+255),b
 27739                           
 27740                           ; BSR set to: 2
 27741                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 27742  000518  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27743                           
 27744                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 27745                           ;	Return value of _LORAWAN_RxDone is never used
 27746  00051C  0012               	return	
 27747  00051E                     l2256:
 27748                           
 27749                           ;lorawan.c: 1259: }
 27750                           ;lorawan.c: 1260: }
 27751                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 27752  00051E  0102               	movlb	2	; () banked
 27753  000520  2912               	incf	(_loRa+14)& (0+255),w,b
 27754  000522  E129               	bnz	l19922
 27755  000524  2913               	incf	(_loRa+15)& (0+255),w,b
 27756  000526  E127               	bnz	l19922
 27757  000528  2914               	incf	(_loRa+16)& (0+255),w,b
 27758  00052A  E125               	bnz	l19922
 27759  00052C  2915               	incf	(_loRa+17)& (0+255),w,b
 27760  00052E  A4D8               	btfss	status,2,c
 27761  000530  D022               	goto	l2258
 27762                           
 27763                           ; BSR set to: 2
 27764                           ;lorawan.c: 1263: {
 27765                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 27766  000532  0101               	movlb	1	; () banked
 27767  000534  510C               	movf	_rxPayload& (0+255),w,b
 27768  000536  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27769  000538  B4D8               	btfsc	status,2,c
 27770  00053A  D015               	goto	u22869
 27771                           
 27772                           ; BSR set to: 1
 27773                           ;lorawan.c: 1265: {
 27774                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 27775  00053C  0E00               	movlw	0
 27776  00053E  0100               	movlb	0	; () banked
 27777  000540  6F60               	movwf	RxData@pData& (0+255),b
 27778  000542  0E00               	movlw	0
 27779  000544  6F61               	movwf	(RxData@pData+1)& (0+255),b
 27780  000546  0E00               	movlw	0
 27781  000548  6F62               	movwf	RxData@dataLength& (0+255),b
 27782  00054A  0E05               	movlw	5
 27783  00054C  6F63               	movwf	RxData@status& (0+255),b
 27784  00054E  D801               	call	u22868
 27785  000550  D00A               	goto	u22869
 27786  000552                     u22868:
 27787  000552  0005               	push	
 27788  000554  6EFA               	movwf	pclath,c
 27789  000556  0101               	movlb	1	; () banked
 27790  000558  510C               	movf	_rxPayload& (0+255),w,b
 27791  00055A  6EFD               	movwf	tosl,c
 27792  00055C  510D               	movf	(_rxPayload+1)& (0+255),w,b
 27793  00055E  6EFE               	movwf	tosh,c
 27794  000560  6AFF               	clrf	tosu,c
 27795  000562  50FA               	movf	pclath,w,c
 27796  000564  0012               	return		;indir
 27797  000566                     u22869:
 27798                           
 27799                           ;lorawan.c: 1267: }
 27800                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 27801  000566  0102               	movlb	2	; () banked
 27802  000568  5106               	movf	(_loRa+2)& (0+255),w,b
 27803  00056A  0BF0               	andlw	-16
 27804  00056C  0909               	iorlw	9
 27805  00056E  6F06               	movwf	(_loRa+2)& (0+255),b
 27806                           
 27807                           ; BSR set to: 2
 27808                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 27809  000570  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 27810                           
 27811                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 27812                           ;	Return value of _LORAWAN_RxDone is never used
 27813  000574  0012               	return	
 27814  000576                     l2258:
 27815  000576                     l19922:
 27816                           
 27817                           ;lorawan.c: 1272: }
 27818                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 27819  000576  0102               	movlb	2	; () banked
 27820  000578  5106               	movf	(_loRa+2)& (0+255),w,b
 27821  00057A  0B0F               	andlw	15
 27822  00057C  0A08               	xorlw	8
 27823  00057E  A4D8               	btfss	status,2,c
 27824  000580  D008               	goto	l2260
 27825                           
 27826                           ; BSR set to: 2
 27827                           ;lorawan.c: 1275: {
 27828                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 27829  000582  51E8               	movf	(_loRa+228)& (0+255),w,b
 27830  000584  ECA6  F05E         	call	_SwTimerStop
 27831                           
 27832                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 27833  000588  0102               	movlb	2	; () banked
 27834  00058A  51E9               	movf	(_loRa+229)& (0+255),w,b
 27835  00058C  ECA6  F05E         	call	_SwTimerStop
 27836                           
 27837                           ;lorawan.c: 1278: }
 27838  000590  D009               	goto	l2262
 27839  000592                     l2260:
 27840                           
 27841                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 27842  000592  0102               	movlb	2	; () banked
 27843  000594  5106               	movf	(_loRa+2)& (0+255),w,b
 27844  000596  0B0F               	andlw	15
 27845  000598  0A03               	xorlw	3
 27846  00059A  A4D8               	btfss	status,2,c
 27847  00059C  D003               	goto	l2262
 27848                           
 27849                           ; BSR set to: 2
 27850                           ;lorawan.c: 1280: {
 27851                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 27852  00059E  51E9               	movf	(_loRa+229)& (0+255),w,b
 27853  0005A0  ECA6  F05E         	call	_SwTimerStop
 27854  0005A4                     l2262:
 27855                           
 27856                           ;lorawan.c: 1282: }
 27857                           ;lorawan.c: 1284: buffer = buffer + 8;
 27858  0005A4  0E08               	movlw	8
 27859  0005A6  0101               	movlb	1	; () banked
 27860  0005A8  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 27861  0005AA  6FF2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 27862  0005AC  0E00               	movlw	0
 27863  0005AE  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 27864  0005B0  6FF3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 27865                           
 27866                           ; BSR set to: 1
 27867                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 27868  0005B2  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27869  0005B4  0100               	movlb	0	; () banked
 27870  0005B6  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 27871  0005B8  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 27872  0005BA  EE20 F005          	lfsr	2,5
 27873  0005BE  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 27874  0005C0  26D9               	addwf	fsr2l,f,c
 27875  0005C2  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 27876  0005C4  22DA               	addwfc	fsr2h,f,c
 27877  0005C6  50DF               	movf	223,w,c
 27878  0005C8  0B0F               	andlw	15
 27879  0005CA  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 27880  0005CC  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 27881  0005CE  0E0C               	movlw	12
 27882  0005D0  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 27883  0005D2  0E00               	movlw	0
 27884  0005D4  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 27885  0005D6  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 27886  0005D8  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 27887  0005DA  E104               	bnz	u22890
 27888  0005DC  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 27889  0005DE  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 27890  0005E0  B4D8               	btfsc	status,2,c
 27891  0005E2  D037               	goto	l2263
 27892  0005E4                     u22890:
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;lorawan.c: 1287: {
 27896                           ;lorawan.c: 1288: fPort = *(buffer++);
 27897  0005E4  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 27898  0005E8  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 27899  0005EC  50DF               	movf	indf2,w,c
 27900  0005EE  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 27901                           
 27902                           ; BSR set to: 0
 27903  0005F0  0101               	movlb	1	; () banked
 27904  0005F2  4BF2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 27905  0005F4  2BF3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 27906                           
 27907                           ; BSR set to: 1
 27908                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 27909  0005F6  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 27910  0005F8  0FF4               	addlw	244
 27911  0005FA  0100               	movlb	0	; () banked
 27912  0005FC  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 27913                           
 27914                           ; BSR set to: 0
 27915                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 27916  0005FE  0E19               	movlw	25
 27917  000600  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 27918                           
 27919                           ; BSR set to: 0
 27920                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 27921  000602  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 27922  000606  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 27923  00060A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 27924  00060C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 27925  00060E  0E01               	movlw	1
 27926  000610  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 27927  000612  C212  F095         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 27928  000616  C213  F096         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 27929  00061A  C214  F097         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 27930  00061E  C215  F098         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 27931  000622  0E7A               	movlw	low (_loRa+118)
 27932  000624  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 27933  000626  0E02               	movlw	high (_loRa+118)
 27934  000628  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 27935  00062A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 27936  00062E  0E2F               	movlw	low _radioBuffer
 27937  000630  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 27938  000632  0E06               	movlw	high _radioBuffer
 27939  000634  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 27940  000636  0E01               	movlw	1
 27941  000638  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 27942  00063A  EC3E  F037         	call	_EncryptFRMPayload	;wreg free
 27943                           
 27944                           ;lorawan.c: 1294: packet = buffer - 1;
 27945  00063E  0EFF               	movlw	255
 27946  000640  0101               	movlb	1	; () banked
 27947  000642  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 27948  000644  0100               	movlb	0	; () banked
 27949  000646  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 27950  000648  0EFF               	movlw	255
 27951  00064A  0101               	movlb	1	; () banked
 27952  00064C  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 27953  00064E  0100               	movlb	0	; () banked
 27954  000650  D005               	goto	L10
 27955  000652                     l2263:
 27956                           
 27957                           ; BSR set to: 0
 27958                           ;lorawan.c: 1296: else
 27959                           ;lorawan.c: 1297: {
 27960                           ;lorawan.c: 1298: frmPayloadLength = 0;
 27961                           
 27962                           ; BSR set to: 0
 27963  000652  0E00               	movlw	0
 27964  000654  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 27965                           
 27966                           ; BSR set to: 0
 27967                           ;lorawan.c: 1299: packet = (0);
 27968  000656  0E00               	movlw	0
 27969  000658  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 27970  00065A  0E00               	movlw	0
 27971  00065C                     L10:
 27972  00065C  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 27973                           
 27974                           ; BSR set to: 0
 27975                           ;lorawan.c: 1300: }
 27976                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 27977                           
 27978                           ; BSR set to: 0
 27979  00065E  0102               	movlb	2	; () banked
 27980  000660  8307               	bsf	(_loRa+3)& (0+255),1,b
 27981                           
 27982                           ; BSR set to: 2
 27983                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 27984  000662  9106               	bcf	(_loRa+2)& (0+255),0,b
 27985  000664  9306               	bcf	(_loRa+2)& (0+255),1,b
 27986  000666  9506               	bcf	(_loRa+2)& (0+255),2,b
 27987  000668  9706               	bcf	(_loRa+2)& (0+255),3,b
 27988                           
 27989                           ; BSR set to: 2
 27990                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 27991  00066A  0101               	movlb	1	; () banked
 27992  00066C  510C               	movf	_rxPayload& (0+255),w,b
 27993  00066E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 27994  000670  B4D8               	btfsc	status,2,c
 27995  000672  D015               	goto	u22919
 27996                           
 27997                           ; BSR set to: 1
 27998                           ;lorawan.c: 1306: {
 27999                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 28000  000674  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 28001  000678  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 28002  00067C  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 28003  000680  0E01               	movlw	1
 28004  000682  0100               	movlb	0	; () banked
 28005  000684  6F63               	movwf	RxData@status& (0+255),b
 28006  000686  D801               	call	u22918
 28007  000688  D00A               	goto	u22919
 28008  00068A                     u22918:
 28009  00068A  0005               	push	
 28010  00068C  6EFA               	movwf	pclath,c
 28011  00068E  0101               	movlb	1	; () banked
 28012  000690  510C               	movf	_rxPayload& (0+255),w,b
 28013  000692  6EFD               	movwf	tosl,c
 28014  000694  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28015  000696  6EFE               	movwf	tosh,c
 28016  000698  6AFF               	clrf	tosu,c
 28017  00069A  50FA               	movf	pclath,w,c
 28018  00069C  0012               	return		;indir
 28019  00069E                     u22919:
 28020                           
 28021                           ;lorawan.c: 1308: }
 28022                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28023  00069E  0102               	movlb	2	; () banked
 28024  0006A0  5106               	movf	(_loRa+2)& (0+255),w,b
 28025  0006A2  0BF0               	andlw	-16
 28026  0006A4  0909               	iorlw	9
 28027  0006A6  6F06               	movwf	(_loRa+2)& (0+255),b
 28028                           
 28029                           ; BSR set to: 2
 28030                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 28031  0006A8  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28032                           
 28033                           ;lorawan.c: 1312: return MAC_OK;
 28034                           ;	Return value of _LORAWAN_RxDone is never used
 28035  0006AC  0012               	return	
 28036  0006AE                     l2247:
 28037                           
 28038                           ;lorawan.c: 1313: }
 28039                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 28040  0006AE  0100               	movlb	0	; () banked
 28041  0006B0  EE20 F001          	lfsr	2,1
 28042  0006B4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28043  0006B6  26D9               	addwf	fsr2l,f,c
 28044  0006B8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28045  0006BA  22DA               	addwfc	fsr2h,f,c
 28046  0006BC  0102               	movlb	2	; () banked
 28047  0006BE  5122               	movf	(_loRa+30)& (0+255),w,b
 28048  0006C0  18DE               	xorwf	postinc2,w,c
 28049  0006C2  E10A               	bnz	u22920
 28050  0006C4  5123               	movf	(_loRa+31)& (0+255),w,b
 28051  0006C6  18DE               	xorwf	postinc2,w,c
 28052  0006C8  E107               	bnz	u22920
 28053  0006CA  5124               	movf	(_loRa+32)& (0+255),w,b
 28054  0006CC  18DE               	xorwf	postinc2,w,c
 28055  0006CE  E104               	bnz	u22920
 28056  0006D0  5125               	movf	(_loRa+33)& (0+255),w,b
 28057  0006D2  18DE               	xorwf	postinc2,w,c
 28058  0006D4  B4D8               	btfsc	status,2,c
 28059  0006D6  D00E               	goto	l2266
 28060  0006D8                     u22920:
 28061                           
 28062                           ; BSR set to: 2
 28063                           ;lorawan.c: 1317: {
 28064                           ;lorawan.c: 1318: SetReceptionNotOkState();
 28065  0006D8  EC31  F051         	call	_SetReceptionNotOkState	;wreg free
 28066                           
 28067                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 28068  0006DC  0E02               	movlw	2
 28069  0006DE  0102               	movlb	2	; () banked
 28070  0006E0  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28071  0006E2  A4D8               	btfss	status,2,c
 28072  0006E4  0012               	return	
 28073                           
 28074                           ; BSR set to: 2
 28075                           ;lorawan.c: 1320: {
 28076                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28077  0006E6  5106               	movf	(_loRa+2)& (0+255),w,b
 28078  0006E8  0BF0               	andlw	-16
 28079  0006EA  0909               	iorlw	9
 28080  0006EC  6F06               	movwf	(_loRa+2)& (0+255),b
 28081                           
 28082                           ; BSR set to: 2
 28083                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 28084  0006EE  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28085                           
 28086                           ;lorawan.c: 1323: }
 28087                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 28088                           ;	Return value of _LORAWAN_RxDone is never used
 28089  0006F2  0012               	return	
 28090  0006F4                     l2266:
 28091                           
 28092                           ;lorawan.c: 1325: }
 28093                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 28094  0006F4  0100               	movlb	0	; () banked
 28095  0006F6  EE20 F006          	lfsr	2,6
 28096  0006FA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28097  0006FC  26D9               	addwf	fsr2l,f,c
 28098  0006FE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28099  000700  22DA               	addwfc	fsr2h,f,c
 28100  000702  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 28101  000706  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 28102  00070A  C0DA  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 28103  00070E  C0DB  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 28104  000712  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 28105  000714  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 28106  000716  0101               	movlb	1	; () banked
 28107  000718  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28108  00071A  0FFC               	addlw	252
 28109  00071C  0100               	movlb	0	; () banked
 28110  00071E  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 28111  000720  0E49               	movlw	73
 28112  000722  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 28113  000724  0E00               	movlw	0
 28114  000726  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 28115  000728  0E01               	movlw	1
 28116  00072A  ECCF  F045         	call	_AssembleEncryptionBlock
 28117                           
 28118                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 28119  00072E  0E2F               	movlw	low _radioBuffer
 28120  000730  0100               	movlb	0	; () banked
 28121  000732  6F60               	movwf	memcpy@d1& (0+255),b
 28122  000734  0E06               	movlw	high _radioBuffer
 28123  000736  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28124  000738  0EC8               	movlw	low _aesBuffer
 28125  00073A  6F62               	movwf	memcpy@s1& (0+255),b
 28126  00073C  0E03               	movlw	high _aesBuffer
 28127  00073E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28128  000740  0E00               	movlw	0
 28129  000742  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28130  000744  0E10               	movlw	16
 28131  000746  6F64               	movwf	memcpy@n& (0+255),b
 28132  000748  ECA9  F055         	call	_memcpy	;wreg free
 28133                           
 28134                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 28135  00074C  0E3F               	movlw	low (_radioBuffer+16)
 28136  00074E  0100               	movlb	0	; () banked
 28137  000750  6F60               	movwf	memcpy@d1& (0+255),b
 28138  000752  0E06               	movlw	high (_radioBuffer+16)
 28139  000754  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28140  000756  C1F2  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 28141  00075A  C1F3  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 28142  00075E  0EFC               	movlw	252
 28143  000760  0101               	movlb	1	; () banked
 28144  000762  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28145  000764  0100               	movlb	0	; () banked
 28146  000766  6F64               	movwf	memcpy@n& (0+255),b
 28147  000768  6B65               	clrf	(memcpy@n+1)& (0+255),b
 28148  00076A  0EFF               	movlw	255
 28149  00076C  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 28150  00076E  ECA9  F055         	call	_memcpy	;wreg free
 28151                           
 28152                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 28153  000772  0E26               	movlw	low (_loRa+34)
 28154  000774  0100               	movlb	0	; () banked
 28155  000776  6FB9               	movwf	AESCmac@key& (0+255),b
 28156  000778  0E02               	movlw	high (_loRa+34)
 28157  00077A  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 28158  00077C  0EC8               	movlw	low _aesBuffer
 28159  00077E  6FBB               	movwf	AESCmac@output& (0+255),b
 28160  000780  0E03               	movlw	high _aesBuffer
 28161  000782  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 28162  000784  0E2F               	movlw	low _radioBuffer
 28163  000786  6FBD               	movwf	AESCmac@input& (0+255),b
 28164  000788  0E06               	movlw	high _radioBuffer
 28165  00078A  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 28166  00078C  0101               	movlb	1	; () banked
 28167  00078E  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28168  000790  0F0C               	addlw	12
 28169  000792  0100               	movlb	0	; () banked
 28170  000794  6FBF               	movwf	AESCmac@size& (0+255),b
 28171  000796  EC80  F01D         	call	_AESCmac	;wreg free
 28172                           
 28173                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 28174  00079A  0EEA               	movlw	low LORAWAN_RxDone@computedMic
 28175  00079C  0100               	movlb	0	; () banked
 28176  00079E  6F60               	movwf	memcpy@d1& (0+255),b
 28177  0007A0  0E00               	movlw	high LORAWAN_RxDone@computedMic
 28178  0007A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28179  0007A4  0EC8               	movlw	low _aesBuffer
 28180  0007A6  6F62               	movwf	memcpy@s1& (0+255),b
 28181  0007A8  0E03               	movlw	high _aesBuffer
 28182  0007AA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 28183  0007AC  0E00               	movlw	0
 28184  0007AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28185  0007B0  0E04               	movlw	4
 28186  0007B2  6F64               	movwf	memcpy@n& (0+255),b
 28187  0007B4  ECA9  F055         	call	_memcpy	;wreg free
 28188                           
 28189                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 28190  0007B8  C1F2  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 28191  0007BC  C1F3  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 28192  0007C0  C1F4  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 28193  0007C4  ECEE  F056         	call	_ExtractMic	;wreg free
 28194  0007C8  C06B  F0E2         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 28195  0007CC  C06C  F0E3         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 28196  0007D0  C06D  F0E4         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 28197  0007D4  C06E  F0E5         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 28198                           
 28199                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 28200  0007D8  0100               	movlb	0	; () banked
 28201  0007DA  51E2               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 28202  0007DC  19EA               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 28203  0007DE  E10A               	bnz	u22940
 28204  0007E0  51E3               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 28205  0007E2  19EB               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 28206  0007E4  E107               	bnz	u22940
 28207  0007E6  51E4               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 28208  0007E8  19EC               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 28209  0007EA  E104               	bnz	u22940
 28210  0007EC  51E5               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 28211  0007EE  19ED               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 28212  0007F0  B4D8               	btfsc	status,2,c
 28213  0007F2  D00E               	goto	l2268
 28214  0007F4                     u22940:
 28215                           
 28216                           ; BSR set to: 0
 28217                           ;lorawan.c: 1337: {
 28218                           ;lorawan.c: 1338: SetReceptionNotOkState();
 28219  0007F4  EC31  F051         	call	_SetReceptionNotOkState	;wreg free
 28220                           
 28221                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 28222  0007F8  0E02               	movlw	2
 28223  0007FA  0102               	movlb	2	; () banked
 28224  0007FC  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28225  0007FE  A4D8               	btfss	status,2,c
 28226  000800  0012               	return	
 28227                           
 28228                           ; BSR set to: 2
 28229                           ;lorawan.c: 1340: {
 28230                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28231  000802  5106               	movf	(_loRa+2)& (0+255),w,b
 28232  000804  0BF0               	andlw	-16
 28233  000806  0909               	iorlw	9
 28234  000808  6F06               	movwf	(_loRa+2)& (0+255),b
 28235                           
 28236                           ; BSR set to: 2
 28237                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 28238  00080A  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28239                           
 28240                           ;lorawan.c: 1343: }
 28241                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 28242                           ;	Return value of _LORAWAN_RxDone is never used
 28243  00080E  0012               	return	
 28244  000810                     l2268:
 28245                           
 28246                           ;lorawan.c: 1345: }
 28247                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 28248  000810  0100               	movlb	0	; () banked
 28249  000812  EE20 F006          	lfsr	2,6
 28250  000816  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28251  000818  26D9               	addwf	fsr2l,f,c
 28252  00081A  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28253  00081C  22DA               	addwfc	fsr2h,f,c
 28254  00081E  0102               	movlb	2	; () banked
 28255  000820  510E               	movf	(_loRa+10)& (0+255),w,b
 28256  000822  5CDE               	subwf	postinc2,w,c
 28257  000824  510F               	movf	(_loRa+11)& (0+255),w,b
 28258  000826  58DE               	subwfb	postinc2,w,c
 28259  000828  A0D8               	btfss	status,0,c
 28260  00082A  D05D               	goto	l2270
 28261                           
 28262                           ; BSR set to: 2
 28263                           ;lorawan.c: 1349: {
 28264                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 28265  00082C  0100               	movlb	0	; () banked
 28266  00082E  EE20 F006          	lfsr	2,6
 28267  000832  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28268  000834  26D9               	addwf	fsr2l,f,c
 28269  000836  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28270  000838  22DA               	addwfc	fsr2h,f,c
 28271  00083A  CFDE F0DA          	movff	postinc2,??_LORAWAN_RxDone
 28272  00083E  CFDD F0DB          	movff	postdec2,??_LORAWAN_RxDone+1
 28273  000842  EE22  F00E         	lfsr	2,_loRa+10
 28274  000846  CFDE F0DC          	movff	postinc2,??_LORAWAN_RxDone+2
 28275  00084A  CFDD F0DD          	movff	postdec2,??_LORAWAN_RxDone+3
 28276  00084E  1FDC               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28277  000850  1FDD               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28278  000852  4BDC               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28279  000854  2BDD               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28280  000856  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28281  000858  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28282  00085A  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28283  00085C  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28284  00085E  51DC               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28285  000860  0102               	movlb	2	; () banked
 28286  000862  5DA0               	subwf	(_loRa+156)& (0+255),w,b
 28287  000864  0100               	movlb	0	; () banked
 28288  000866  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28289  000868  0102               	movlb	2	; () banked
 28290  00086A  59A1               	subwfb	(_loRa+157)& (0+255),w,b
 28291  00086C  B0D8               	btfsc	status,0,c
 28292  00086E  D02F               	goto	l2271
 28293                           
 28294                           ; BSR set to: 2
 28295                           ;lorawan.c: 1351: {
 28296                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 28297  000870  9104               	bcf	_loRa& (0+255),0,b
 28298                           
 28299                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 28300  000872  9106               	bcf	(_loRa+2)& (0+255),0,b
 28301  000874  9306               	bcf	(_loRa+2)& (0+255),1,b
 28302  000876  9506               	bcf	(_loRa+2)& (0+255),2,b
 28303  000878  9706               	bcf	(_loRa+2)& (0+255),3,b
 28304                           
 28305                           ; BSR set to: 2
 28306                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 28307  00087A  0101               	movlb	1	; () banked
 28308  00087C  510C               	movf	_rxPayload& (0+255),w,b
 28309  00087E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 28310  000880  B4D8               	btfsc	status,2,c
 28311  000882  D017               	goto	u22999
 28312                           
 28313                           ; BSR set to: 1
 28314                           ;lorawan.c: 1355: {
 28315                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 28316  000884  0102               	movlb	2	; () banked
 28317  000886  9B04               	bcf	_loRa& (0+255),5,b
 28318                           
 28319                           ; BSR set to: 2
 28320                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 28321  000888  0E00               	movlw	0
 28322  00088A  0100               	movlb	0	; () banked
 28323  00088C  6F60               	movwf	RxData@pData& (0+255),b
 28324  00088E  0E00               	movlw	0
 28325  000890  6F61               	movwf	(RxData@pData+1)& (0+255),b
 28326  000892  0E00               	movlw	0
 28327  000894  6F62               	movwf	RxData@dataLength& (0+255),b
 28328  000896  0E00               	movlw	0
 28329  000898  6F63               	movwf	RxData@status& (0+255),b
 28330  00089A  D801               	call	u22998
 28331  00089C  D00A               	goto	u22999
 28332  00089E                     u22998:
 28333  00089E  0005               	push	
 28334  0008A0  6EFA               	movwf	pclath,c
 28335  0008A2  0101               	movlb	1	; () banked
 28336  0008A4  510C               	movf	_rxPayload& (0+255),w,b
 28337  0008A6  6EFD               	movwf	tosl,c
 28338  0008A8  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28339  0008AA  6EFE               	movwf	tosh,c
 28340  0008AC  6AFF               	clrf	tosu,c
 28341  0008AE  50FA               	movf	pclath,w,c
 28342  0008B0  0012               	return		;indir
 28343  0008B2                     u22999:
 28344                           
 28345                           ;lorawan.c: 1358: }
 28346                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 28347  0008B2  0102               	movlb	2	; () banked
 28348  0008B4  9307               	bcf	(_loRa+3)& (0+255),1,b
 28349                           
 28350                           ; BSR set to: 2
 28351                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 28352  0008B6  8308               	bsf	(_loRa+4)& (0+255),1,b
 28353                           
 28354                           ; BSR set to: 2
 28355                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 28356  0008B8  0E02               	movlw	2
 28357  0008BA  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28358  0008BC  A4D8               	btfss	status,2,c
 28359  0008BE  0012               	return	
 28360                           
 28361                           ; BSR set to: 2
 28362                           ;lorawan.c: 1364: {
 28363                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28364  0008C0  5106               	movf	(_loRa+2)& (0+255),w,b
 28365  0008C2  0BF0               	andlw	-16
 28366  0008C4  0909               	iorlw	9
 28367  0008C6  6F06               	movwf	(_loRa+2)& (0+255),b
 28368                           
 28369                           ; BSR set to: 2
 28370                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 28371  0008C8  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28372                           
 28373                           ;lorawan.c: 1367: }
 28374                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 28375                           ;	Return value of _LORAWAN_RxDone is never used
 28376  0008CC  0012               	return	
 28377  0008CE                     l2271:
 28378                           
 28379                           ;lorawan.c: 1370: else
 28380                           ;lorawan.c: 1371: {
 28381                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 28382  0008CE  0100               	movlb	0	; () banked
 28383  0008D0  EE20 F006          	lfsr	2,6
 28384  0008D4  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28385  0008D6  26D9               	addwf	fsr2l,f,c
 28386  0008D8  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28387  0008DA  22DA               	addwfc	fsr2h,f,c
 28388  0008DC  CFDE F20E          	movff	postinc2,_loRa+10
 28389  0008E0  CFDD F20F          	movff	postdec2,_loRa+11
 28390                           
 28391                           ; BSR set to: 0
 28392                           ;lorawan.c: 1373: }
 28393                           ;lorawan.c: 1374: }
 28394  0008E4  D02E               	goto	l2277
 28395  0008E6                     l2270:
 28396                           
 28397                           ;lorawan.c: 1375: else
 28398                           ;lorawan.c: 1376: {
 28399                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 28400                           
 28401                           ; BSR set to: 0
 28402  0008E6  0100               	movlb	0	; () banked
 28403  0008E8  EE20 F006          	lfsr	2,6
 28404  0008EC  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28405  0008EE  26D9               	addwf	fsr2l,f,c
 28406  0008F0  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28407  0008F2  22DA               	addwfc	fsr2h,f,c
 28408  0008F4  50DE               	movf	postinc2,w,c
 28409  0008F6  10DE               	iorwf	postinc2,w,c
 28410  0008F8  A4D8               	btfss	status,2,c
 28411  0008FA  D015               	goto	l2276
 28412                           
 28413                           ; BSR set to: 0
 28414  0008FC  0102               	movlb	2	; () banked
 28415  0008FE  290E               	incf	(_loRa+10)& (0+255),w,b
 28416  000900  E112               	bnz	l20034
 28417  000902  290F               	incf	(_loRa+11)& (0+255),w,b
 28418  000904  A4D8               	btfss	status,2,c
 28419  000906  D00F               	goto	l2276
 28420                           
 28421                           ; BSR set to: 2
 28422                           ;lorawan.c: 1378: {
 28423                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 28424  000908  0100               	movlb	0	; () banked
 28425  00090A  EE20 F006          	lfsr	2,6
 28426  00090E  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28427  000910  26D9               	addwf	fsr2l,f,c
 28428  000912  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28429  000914  22DA               	addwfc	fsr2h,f,c
 28430  000916  CFDE F20E          	movff	postinc2,_loRa+10
 28431  00091A  CFDD F20F          	movff	postdec2,_loRa+11
 28432                           
 28433                           ; BSR set to: 0
 28434                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 28435  00091E  0102               	movlb	2	; () banked
 28436  000920  4B10               	infsnz	(_loRa+12)& (0+255),f,b
 28437  000922  2B11               	incf	(_loRa+13)& (0+255),f,b
 28438                           
 28439                           ;lorawan.c: 1382: }
 28440  000924  D00E               	goto	l2277
 28441  000926                     l2276:
 28442  000926                     l20034:
 28443                           
 28444                           ;lorawan.c: 1383: else
 28445                           ;lorawan.c: 1384: {
 28446                           ;lorawan.c: 1385: SetReceptionNotOkState();
 28447  000926  EC31  F051         	call	_SetReceptionNotOkState	;wreg free
 28448                           
 28449                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 28450  00092A  0E02               	movlw	2
 28451  00092C  0102               	movlb	2	; () banked
 28452  00092E  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28453  000930  A4D8               	btfss	status,2,c
 28454  000932  0012               	return	
 28455                           
 28456                           ; BSR set to: 2
 28457                           ;lorawan.c: 1387: {
 28458                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28459  000934  5106               	movf	(_loRa+2)& (0+255),w,b
 28460  000936  0BF0               	andlw	-16
 28461  000938  0909               	iorlw	9
 28462  00093A  6F06               	movwf	(_loRa+2)& (0+255),b
 28463                           
 28464                           ; BSR set to: 2
 28465                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 28466  00093C  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28467                           
 28468                           ;lorawan.c: 1390: }
 28469                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 28470                           ;	Return value of _LORAWAN_RxDone is never used
 28471  000940  0012               	return	
 28472  000942                     l2277:
 28473                           
 28474                           ;lorawan.c: 1393: }
 28475                           ;lorawan.c: 1394: }
 28476                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 28477  000942  0102               	movlb	2	; () banked
 28478  000944  290E               	incf	(_loRa+10)& (0+255),w,b
 28479  000946  E113               	bnz	l20056
 28480  000948  290F               	incf	(_loRa+11)& (0+255),w,b
 28481  00094A  E111               	bnz	l20056
 28482  00094C  2910               	incf	(_loRa+12)& (0+255),w,b
 28483  00094E  E10F               	bnz	l20056
 28484  000950  2911               	incf	(_loRa+13)& (0+255),w,b
 28485  000952  A4D8               	btfss	status,2,c
 28486  000954  D00C               	goto	l2279
 28487                           
 28488                           ; BSR set to: 2
 28489                           ;lorawan.c: 1397: {
 28490                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 28491  000956  8308               	bsf	(_loRa+4)& (0+255),1,b
 28492                           
 28493                           ; BSR set to: 2
 28494                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 28495  000958  0E02               	movlw	2
 28496  00095A  1916               	xorwf	(_loRa+18)& (0+255),w,b
 28497  00095C  A4D8               	btfss	status,2,c
 28498  00095E  0012               	return	
 28499                           
 28500                           ; BSR set to: 2
 28501                           ;lorawan.c: 1402: {
 28502                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 28503  000960  5106               	movf	(_loRa+2)& (0+255),w,b
 28504  000962  0BF0               	andlw	-16
 28505  000964  0909               	iorlw	9
 28506  000966  6F06               	movwf	(_loRa+2)& (0+255),b
 28507                           
 28508                           ; BSR set to: 2
 28509                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 28510  000968  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 28511                           
 28512                           ;lorawan.c: 1405: }
 28513                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 28514                           ;	Return value of _LORAWAN_RxDone is never used
 28515  00096C  0012               	return	
 28516  00096E                     l2279:
 28517  00096E                     l20056:
 28518                           
 28519                           ;lorawan.c: 1407: }
 28520                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 28521  00096E  0102               	movlb	2	; () banked
 28522  000970  5106               	movf	(_loRa+2)& (0+255),w,b
 28523  000972  0B0F               	andlw	15
 28524  000974  0A03               	xorlw	3
 28525  000976  A4D8               	btfss	status,2,c
 28526  000978  D003               	goto	l2281
 28527                           
 28528                           ; BSR set to: 2
 28529                           ;lorawan.c: 1411: {
 28530                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 28531  00097A  51E9               	movf	(_loRa+229)& (0+255),w,b
 28532  00097C  ECA6  F05E         	call	_SwTimerStop
 28533  000980                     l2281:
 28534                           
 28535                           ;lorawan.c: 1413: }
 28536                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 28537  000980  0E01               	movlw	1
 28538  000982  0102               	movlb	2	; () banked
 28539  000984  6FDC               	movwf	(_loRa+216)& (0+255),b
 28540                           
 28541                           ; BSR set to: 2
 28542                           ;lorawan.c: 1417: CheckFlags (hdr);
 28543  000986  C0F1  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 28544  00098A  C0F2  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 28545  00098E  EC37  F056         	call	_CheckFlags	;wreg free
 28546                           
 28547                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 28548  000992  0100               	movlb	0	; () banked
 28549  000994  EE20 F005          	lfsr	2,5
 28550  000998  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28551  00099A  26D9               	addwf	fsr2l,f,c
 28552  00099C  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28553  00099E  22DA               	addwfc	fsr2h,f,c
 28554  0009A0  50DF               	movf	223,w,c
 28555  0009A2  0B0F               	andlw	15
 28556  0009A4  0900               	iorlw	0
 28557  0009A6  B4D8               	btfsc	status,2,c
 28558  0009A8  D016               	goto	l2282
 28559                           
 28560                           ; BSR set to: 0
 28561                           ;lorawan.c: 1420: {
 28562                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 28563  0009AA  0E08               	movlw	8
 28564  0009AC  25F1               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 28565  0009AE  6FB0               	movwf	MacExecuteCommands@buffer& (0+255),b
 28566  0009B0  0E00               	movlw	0
 28567  0009B2  21F2               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28568  0009B4  6FB1               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 28569  0009B6  EE20 F005          	lfsr	2,5
 28570  0009BA  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28571  0009BC  26D9               	addwf	fsr2l,f,c
 28572  0009BE  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28573  0009C0  22DA               	addwfc	fsr2h,f,c
 28574  0009C2  50DF               	movf	223,w,c
 28575  0009C4  0B0F               	andlw	15
 28576  0009C6  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 28577  0009C8  ECD6  F025         	call	_MacExecuteCommands	;wreg free
 28578  0009CC  C0B0  F1F2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 28579  0009D0  C0B1  F1F3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 28580                           
 28581                           ;lorawan.c: 1422: }
 28582  0009D4  D007               	goto	l2283
 28583  0009D6                     l2282:
 28584                           
 28585                           ;lorawan.c: 1423: else
 28586                           ;lorawan.c: 1424: {
 28587                           ;lorawan.c: 1425: buffer = buffer + 8;
 28588  0009D6  0E08               	movlw	8
 28589  0009D8  0101               	movlb	1	; () banked
 28590  0009DA  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 28591  0009DC  6FF2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 28592  0009DE  0E00               	movlw	0
 28593  0009E0  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 28594  0009E2  6FF3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 28595  0009E4                     l2283:
 28596                           
 28597                           ;lorawan.c: 1426: }
 28598                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 28599                           
 28600                           ; BSR set to: 1
 28601  0009E4  0101               	movlb	1	; () banked
 28602  0009E6  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28603  0009E8  0100               	movlb	0	; () banked
 28604  0009EA  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 28605  0009EC  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 28606  0009EE  EE20 F005          	lfsr	2,5
 28607  0009F2  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28608  0009F4  26D9               	addwf	fsr2l,f,c
 28609  0009F6  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28610  0009F8  22DA               	addwfc	fsr2h,f,c
 28611  0009FA  50DF               	movf	223,w,c
 28612  0009FC  0B0F               	andlw	15
 28613  0009FE  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 28614  000A00  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 28615  000A02  0E0C               	movlw	12
 28616  000A04  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28617  000A06  0E00               	movlw	0
 28618  000A08  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28619  000A0A  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28620  000A0C  19DC               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28621  000A0E  E104               	bnz	u23080
 28622  000A10  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28623  000A12  19DD               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28624  000A14  B4D8               	btfsc	status,2,c
 28625  000A16  D098               	goto	l2284
 28626  000A18                     u23080:
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;lorawan.c: 1428: {
 28630                           ;lorawan.c: 1429: fPort = *(buffer++);
 28631  000A18  C1F2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 28632  000A1C  C1F3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 28633  000A20  50DF               	movf	indf2,w,c
 28634  000A22  6FDF               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 28635                           
 28636                           ; BSR set to: 0
 28637  000A24  0101               	movlb	1	; () banked
 28638  000A26  4BF2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 28639  000A28  2BF3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 28640                           
 28641                           ; BSR set to: 1
 28642                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 28643  000A2A  0100               	movlb	0	; () banked
 28644  000A2C  EE20 F005          	lfsr	2,5
 28645  000A30  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28646  000A32  26D9               	addwf	fsr2l,f,c
 28647  000A34  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28648  000A36  22DA               	addwfc	fsr2h,f,c
 28649  000A38  50DF               	movf	223,w,c
 28650  000A3A  0B0F               	andlw	15
 28651  000A3C  0800               	sublw	0
 28652  000A3E  0101               	movlb	1	; () banked
 28653  000A40  25F4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28654  000A42  0FF4               	addlw	244
 28655  000A44  0100               	movlb	0	; () banked
 28656  000A46  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 28660  000A48  EE20 F005          	lfsr	2,5
 28661  000A4C  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28662  000A4E  26D9               	addwf	fsr2l,f,c
 28663  000A50  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28664  000A52  22DA               	addwfc	fsr2h,f,c
 28665  000A54  50DF               	movf	223,w,c
 28666  000A56  0B0F               	andlw	15
 28667  000A58  0F19               	addlw	25
 28668  000A5A  6FE6               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 28669                           
 28670                           ; BSR set to: 0
 28671                           ;lorawan.c: 1434: if (fPort != 0)
 28672  000A5C  51DF               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 28673  000A5E  B4D8               	btfsc	status,2,c
 28674  000A60  D028               	goto	l2285
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;lorawan.c: 1435: {
 28678                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 28679  000A62  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 28680  000A66  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 28681  000A6A  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28682  000A6C  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 28683  000A6E  0E01               	movlw	1
 28684  000A70  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 28685  000A72  C20E  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 28686  000A76  C20F  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 28687  000A7A  C210  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 28688  000A7E  C211  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 28689  000A82  0E36               	movlw	low (_loRa+50)
 28690  000A84  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 28691  000A86  0E02               	movlw	high (_loRa+50)
 28692  000A88  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 28693  000A8A  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 28694  000A8E  0E2F               	movlw	low _radioBuffer
 28695  000A90  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 28696  000A92  0E06               	movlw	high _radioBuffer
 28697  000A94  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 28698  000A96  0E00               	movlw	0
 28699  000A98  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 28700  000A9A  EC3E  F037         	call	_EncryptFRMPayload	;wreg free
 28701                           
 28702                           ;lorawan.c: 1437: packet = buffer - 1;
 28703  000A9E  0EFF               	movlw	255
 28704  000AA0  0101               	movlb	1	; () banked
 28705  000AA2  25F2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 28706  000AA4  0100               	movlb	0	; () banked
 28707  000AA6  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28708  000AA8  0EFF               	movlw	255
 28709  000AAA  0101               	movlb	1	; () banked
 28710  000AAC  21F3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 28711  000AAE  0100               	movlb	0	; () banked
 28712  000AB0  D050               	goto	L32
 28713  000AB2                     l2285:
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;lorawan.c: 1439: else
 28717                           ;lorawan.c: 1440: {
 28718                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 28719                           
 28720                           ; BSR set to: 0
 28721  000AB2  0101               	movlb	1	; () banked
 28722  000AB4  51F4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 28723  000AB6  0100               	movlb	0	; () banked
 28724  000AB8  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 28725  000ABA  6BDB               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 28726  000ABC  EE20 F005          	lfsr	2,5
 28727  000AC0  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28728  000AC2  26D9               	addwf	fsr2l,f,c
 28729  000AC4  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28730  000AC6  22DA               	addwfc	fsr2h,f,c
 28731  000AC8  50DF               	movf	223,w,c
 28732  000ACA  0B0F               	andlw	15
 28733  000ACC  6FDC               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 28734  000ACE  6BDD               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 28735  000AD0  0E0D               	movlw	13
 28736  000AD2  27DC               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 28737  000AD4  0E00               	movlw	0
 28738  000AD6  23DD               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 28739  000AD8  51DA               	movf	??_LORAWAN_RxDone& (0+255),w,b
 28740  000ADA  5DDC               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 28741  000ADC  51DD               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 28742  000ADE  0A80               	xorlw	128
 28743  000AE0  6FDE               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 28744  000AE2  51DB               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 28745  000AE4  0A80               	xorlw	128
 28746  000AE6  59DE               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 28747  000AE8  B0D8               	btfsc	status,0,c
 28748  000AEA  D02B               	goto	l2287
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;lorawan.c: 1443: {
 28752                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 28753  000AEC  C1F2  F091         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 28754  000AF0  C1F3  F092         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 28755  000AF4  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28756  000AF6  6F93               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 28757  000AF8  0E01               	movlw	1
 28758  000AFA  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 28759  000AFC  C20E  F095         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 28760  000B00  C20F  F096         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 28761  000B04  C210  F097         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 28762  000B08  C211  F098         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 28763  000B0C  0E26               	movlw	low (_loRa+34)
 28764  000B0E  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 28765  000B10  0E02               	movlw	high (_loRa+34)
 28766  000B12  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 28767  000B14  C0E6  F09B         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 28768  000B18  0E2F               	movlw	low _radioBuffer
 28769  000B1A  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 28770  000B1C  0E06               	movlw	high _radioBuffer
 28771  000B1E  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 28772  000B20  0E00               	movlw	0
 28773  000B22  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 28774  000B24  EC3E  F037         	call	_EncryptFRMPayload	;wreg free
 28775                           
 28776                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 28777  000B28  C1F2  F0B0         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 28778  000B2C  C1F3  F0B1         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 28779  000B30  0100               	movlb	0	; () banked
 28780  000B32  05F0               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 28781  000B34  6FB2               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 28782  000B36  ECD6  F025         	call	_MacExecuteCommands	;wreg free
 28783  000B3A  C0B0  F1F2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 28784  000B3E  C0B1  F1F3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 28785  000B42                     l2287:
 28786                           
 28787                           ;lorawan.c: 1447: }
 28788                           ;lorawan.c: 1449: frmPayloadLength = 0;
 28789  000B42  0E00               	movlw	0
 28790  000B44  0100               	movlb	0	; () banked
 28791  000B46  D001               	goto	L12
 28792  000B48                     l2284:
 28793                           
 28794                           ; BSR set to: 0
 28795                           ;lorawan.c: 1453: else
 28796                           ;lorawan.c: 1454: {
 28797                           ;lorawan.c: 1455: frmPayloadLength = 0;
 28798                           
 28799                           ; BSR set to: 0
 28800  000B48  0E00               	movlw	0
 28801  000B4A                     L12:
 28802  000B4A  6FF0               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 28803                           
 28804                           ; BSR set to: 0
 28805                           ;lorawan.c: 1456: packet = (0);
 28806  000B4C  0E00               	movlw	0
 28807  000B4E  6FE8               	movwf	LORAWAN_RxDone@packet& (0+255),b
 28808  000B50  0E00               	movlw	0
 28809  000B52                     L32:
 28810  000B52  6FE9               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;lorawan.c: 1457: }
 28814                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 28815                           
 28816                           ; BSR set to: 0
 28817  000B54  0E01               	movlw	1
 28818  000B56  0102               	movlb	2	; () banked
 28819  000B58  6FDC               	movwf	(_loRa+216)& (0+255),b
 28820                           
 28821                           ; BSR set to: 2
 28822                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 28823  000B5A  0E00               	movlw	0
 28824  000B5C  6FD5               	movwf	(_loRa+209)& (0+255),b
 28825  000B5E  0E00               	movlw	0
 28826  000B60  6FD4               	movwf	(_loRa+208)& (0+255),b
 28827                           
 28828                           ; BSR set to: 2
 28829                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 28830  000B62  0E00               	movlw	0
 28831  000B64  6FF2               	movwf	(_loRa+238)& (0+255),b
 28832                           
 28833                           ; BSR set to: 2
 28834                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 28835  000B66  9904               	bcf	_loRa& (0+255),4,b
 28836                           
 28837                           ; BSR set to: 2
 28838                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 28839  000B68  8307               	bsf	(_loRa+3)& (0+255),1,b
 28840                           
 28841                           ; BSR set to: 2
 28842                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 28843  000B6A  A104               	btfss	_loRa& (0+255),0,b
 28844  000B6C  D055               	goto	l2289
 28845                           
 28846                           ; BSR set to: 2
 28847                           ;lorawan.c: 1468: {
 28848                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 28849  000B6E  0100               	movlb	0	; () banked
 28850  000B70  EE20 F005          	lfsr	2,5
 28851  000B74  51F1               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 28852  000B76  26D9               	addwf	fsr2l,f,c
 28853  000B78  51F2               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 28854  000B7A  22DA               	addwfc	fsr2h,f,c
 28855  000B7C  AADF               	btfss	indf2,5,c
 28856  000B7E  D049               	goto	l2290
 28857                           
 28858                           ; BSR set to: 0
 28859                           ;lorawan.c: 1470: {
 28860                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 28861  000B80  0102               	movlb	2	; () banked
 28862  000B82  9104               	bcf	_loRa& (0+255),0,b
 28863                           
 28864                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 28865  000B84  9106               	bcf	(_loRa+2)& (0+255),0,b
 28866  000B86  9306               	bcf	(_loRa+2)& (0+255),1,b
 28867  000B88  9506               	bcf	(_loRa+2)& (0+255),2,b
 28868  000B8A  9706               	bcf	(_loRa+2)& (0+255),3,b
 28869                           
 28870                           ; BSR set to: 2
 28871                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 28872  000B8C  0101               	movlb	1	; () banked
 28873  000B8E  510C               	movf	_rxPayload& (0+255),w,b
 28874  000B90  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 28875  000B92  B4D8               	btfsc	status,2,c
 28876  000B94  D017               	goto	u23149
 28877                           
 28878                           ; BSR set to: 1
 28879                           ;lorawan.c: 1474: {
 28880                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 28881  000B96  0102               	movlb	2	; () banked
 28882  000B98  9B04               	bcf	_loRa& (0+255),5,b
 28883                           
 28884                           ; BSR set to: 2
 28885                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 28886  000B9A  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 28887  000B9E  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 28888  000BA2  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 28889  000BA6  0E01               	movlw	1
 28890  000BA8  0100               	movlb	0	; () banked
 28891  000BAA  6F63               	movwf	RxData@status& (0+255),b
 28892  000BAC  D801               	call	u23148
 28893  000BAE  D00A               	goto	u23149
 28894  000BB0                     u23148:
 28895  000BB0  0005               	push	
 28896  000BB2  6EFA               	movwf	pclath,c
 28897  000BB4  0101               	movlb	1	; () banked
 28898  000BB6  510C               	movf	_rxPayload& (0+255),w,b
 28899  000BB8  6EFD               	movwf	tosl,c
 28900  000BBA  510D               	movf	(_rxPayload+1)& (0+255),w,b
 28901  000BBC  6EFE               	movwf	tosh,c
 28902  000BBE  6AFF               	clrf	tosu,c
 28903  000BC0  50FA               	movf	pclath,w,c
 28904  000BC2  0012               	return		;indir
 28905  000BC4                     u23149:
 28906                           
 28907                           ;lorawan.c: 1477: }
 28908                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 28909  000BC4  0102               	movlb	2	; () banked
 28910  000BC6  9307               	bcf	(_loRa+3)& (0+255),1,b
 28911                           
 28912                           ; BSR set to: 2
 28913                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 28914  000BC8  BB06               	btfsc	(_loRa+2)& (0+255),5,b
 28915                           
 28916                           ; BSR set to: 2
 28917  000BCA  BB04               	btfsc	_loRa& (0+255),5,b
 28918  000BCC  D06C               	goto	l2304
 28919                           
 28920                           ; BSR set to: 2
 28921  000BCE  B304               	btfsc	_loRa& (0+255),1,b
 28922  000BD0  D002               	goto	u23180
 28923                           
 28924                           ; BSR set to: 2
 28925  000BD2  A704               	btfss	_loRa& (0+255),3,b
 28926  000BD4  D068               	goto	l2304
 28927  000BD6                     u23180:
 28928                           
 28929                           ; BSR set to: 2
 28930                           ;lorawan.c: 1480: {
 28931                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 28932                           
 28933                           ; BSR set to: 2
 28934  000BD6  0E01               	movlw	1
 28935  000BD8  0100               	movlb	0	; () banked
 28936  000BDA  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 28937  000BDC  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 28938  000BDE  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28939  000BE0  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 28940  000BE2  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28941  000BE4  0102               	movlb	2	; () banked
 28942  000BE6  51F1               	movf	(_loRa+237)& (0+255),w,b
 28943  000BE8  EC97  F040         	call	_SearchAvailableChannel
 28944  000BEC  0900               	iorlw	0
 28945  000BEE  A4D8               	btfss	status,2,c
 28946  000BF0  D00D               	goto	l2295
 28947                           
 28948                           ;lorawan.c: 1482: {
 28949                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 28950  000BF2  0E00               	movlw	0
 28951  000BF4  0100               	movlb	0	; () banked
 28952  000BF6  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 28953  000BF8  0E00               	movlw	0
 28954  000BFA  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 28955  000BFC  0E00               	movlw	0
 28956  000BFE  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 28957  000C00  0E00               	movlw	0
 28958  000C02  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 28959  000C04  0E00               	movlw	0
 28960  000C06  ECDC  F049         	call	_LORAWAN_Send
 28961  000C0A  D048               	goto	l20160
 28962  000C0C                     l2295:
 28963                           
 28964                           ;lorawan.c: 1486: else
 28965                           ;lorawan.c: 1487: {
 28966                           ;lorawan.c: 1489: StartReTxTimer();
 28967                           
 28968                           ; BSR set to: 2
 28969  000C0C  EC04  F038         	call	_StartReTxTimer	;wreg free
 28970                           
 28971                           ;lorawan.c: 1490: }
 28972                           ;lorawan.c: 1491: }
 28973                           ;lorawan.c: 1492: }
 28974  000C10  D04A               	goto	l2304
 28975  000C12                     l2290:
 28976                           
 28977                           ;lorawan.c: 1494: else
 28978                           ;lorawan.c: 1495: {
 28979                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 28980  000C12  ECD4  F052         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 28981                           
 28982                           ;lorawan.c: 1497: }
 28983                           ;lorawan.c: 1498: }
 28984  000C16  D047               	goto	l2304
 28985  000C18                     l2289:
 28986                           
 28987                           ; BSR set to: 2
 28988                           ;lorawan.c: 1499: else
 28989                           ;lorawan.c: 1500: {
 28990                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 28991  000C18  9106               	bcf	(_loRa+2)& (0+255),0,b
 28992  000C1A  9306               	bcf	(_loRa+2)& (0+255),1,b
 28993  000C1C  9506               	bcf	(_loRa+2)& (0+255),2,b
 28994  000C1E  9706               	bcf	(_loRa+2)& (0+255),3,b
 28995                           
 28996                           ; BSR set to: 2
 28997                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 28998  000C20  0101               	movlb	1	; () banked
 28999  000C22  510C               	movf	_rxPayload& (0+255),w,b
 29000  000C24  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 29001  000C26  B4D8               	btfsc	status,2,c
 29002  000C28  D017               	goto	u23219
 29003                           
 29004                           ; BSR set to: 1
 29005                           ;lorawan.c: 1504: {
 29006                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 29007  000C2A  0102               	movlb	2	; () banked
 29008  000C2C  9B04               	bcf	_loRa& (0+255),5,b
 29009                           
 29010                           ; BSR set to: 2
 29011                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 29012  000C2E  C0E8  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 29013  000C32  C0E9  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 29014  000C36  C0F0  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 29015  000C3A  0E01               	movlw	1
 29016  000C3C  0100               	movlb	0	; () banked
 29017  000C3E  6F63               	movwf	RxData@status& (0+255),b
 29018  000C40  D801               	call	u23218
 29019  000C42  D00A               	goto	u23219
 29020  000C44                     u23218:
 29021  000C44  0005               	push	
 29022  000C46  6EFA               	movwf	pclath,c
 29023  000C48  0101               	movlb	1	; () banked
 29024  000C4A  510C               	movf	_rxPayload& (0+255),w,b
 29025  000C4C  6EFD               	movwf	tosl,c
 29026  000C4E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29027  000C50  6EFE               	movwf	tosh,c
 29028  000C52  6AFF               	clrf	tosu,c
 29029  000C54  50FA               	movf	pclath,w,c
 29030  000C56  0012               	return		;indir
 29031  000C58                     u23219:
 29032                           
 29033                           ;lorawan.c: 1507: }
 29034                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 29035  000C58  0102               	movlb	2	; () banked
 29036  000C5A  BB06               	btfsc	(_loRa+2)& (0+255),5,b
 29037                           
 29038                           ; BSR set to: 2
 29039  000C5C  BB04               	btfsc	_loRa& (0+255),5,b
 29040  000C5E  D023               	goto	l2304
 29041                           
 29042                           ; BSR set to: 2
 29043  000C60  B304               	btfsc	_loRa& (0+255),1,b
 29044  000C62  D002               	goto	u23250
 29045                           
 29046                           ; BSR set to: 2
 29047  000C64  A704               	btfss	_loRa& (0+255),3,b
 29048  000C66  D01F               	goto	l2304
 29049  000C68                     u23250:
 29050                           
 29051                           ; BSR set to: 2
 29052                           ;lorawan.c: 1510: {
 29053                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 29054                           
 29055                           ; BSR set to: 2
 29056  000C68  0E01               	movlw	1
 29057  000C6A  0100               	movlb	0	; () banked
 29058  000C6C  6FAF               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 29059  000C6E  0EE0               	movlw	low LORAWAN_RxDone@channelIndex
 29060  000C70  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 29061  000C72  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 29062  000C74  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 29063  000C76  0102               	movlb	2	; () banked
 29064  000C78  51F1               	movf	(_loRa+237)& (0+255),w,b
 29065  000C7A  EC97  F040         	call	_SearchAvailableChannel
 29066  000C7E  0900               	iorlw	0
 29067  000C80  A4D8               	btfss	status,2,c
 29068  000C82  D00F               	goto	l2303
 29069                           
 29070                           ;lorawan.c: 1512: {
 29071                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 29072  000C84  0E00               	movlw	0
 29073  000C86  0100               	movlb	0	; () banked
 29074  000C88  6FD3               	movwf	LORAWAN_Send@port& (0+255),b
 29075  000C8A  0E00               	movlw	0
 29076  000C8C  6FD4               	movwf	LORAWAN_Send@buffer& (0+255),b
 29077  000C8E  0E00               	movlw	0
 29078  000C90  6FD5               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 29079  000C92  0E00               	movlw	0
 29080  000C94  6FD6               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 29081  000C96  0E00               	movlw	0
 29082  000C98  ECDC  F049         	call	_LORAWAN_Send
 29083  000C9C                     l20160:
 29084                           
 29085                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 29086  000C9C  0102               	movlb	2	; () banked
 29087  000C9E  9704               	bcf	_loRa& (0+255),3,b
 29088                           
 29089                           ;lorawan.c: 1515: }
 29090  000CA0  D002               	goto	l2304
 29091  000CA2                     l2303:
 29092                           
 29093                           ;lorawan.c: 1516: else
 29094                           ;lorawan.c: 1517: {
 29095                           ;lorawan.c: 1519: StartReTxTimer();
 29096                           
 29097                           ; BSR set to: 2
 29098  000CA2  EC04  F038         	call	_StartReTxTimer	;wreg free
 29099  000CA6                     l2304:
 29100                           
 29101                           ;lorawan.c: 1520: }
 29102                           ;lorawan.c: 1521: }
 29103                           ;lorawan.c: 1522: }
 29104                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 29105  000CA6  0E02               	movlw	2
 29106  000CA8  0102               	movlb	2	; () banked
 29107  000CAA  1916               	xorwf	(_loRa+18)& (0+255),w,b
 29108  000CAC  A4D8               	btfss	status,2,c
 29109  000CAE  0012               	return	
 29110                           
 29111                           ; BSR set to: 2
 29112                           ;lorawan.c: 1525: {
 29113                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 29114  000CB0  5106               	movf	(_loRa+2)& (0+255),w,b
 29115  000CB2  0BF0               	andlw	-16
 29116  000CB4  0909               	iorlw	9
 29117  000CB6  6F06               	movwf	(_loRa+2)& (0+255),b
 29118                           
 29119                           ; BSR set to: 2
 29120                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 29121  000CB8  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 29122                           
 29123                           ;lorawan.c: 1528: }
 29124                           ;lorawan.c: 1529: }
 29125  000CBC  0012               	return	
 29126  000CBE                     l2244:
 29127                           
 29128                           ;lorawan.c: 1530: else
 29129                           ;lorawan.c: 1531: {
 29130                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 29131  000CBE  EC31  F051         	call	_SetReceptionNotOkState	;wreg free
 29132                           
 29133                           ;lorawan.c: 1535: }
 29134                           ;lorawan.c: 1536: }
 29135                           
 29136                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 29137                           ;	Return value of _LORAWAN_RxDone is never used
 29138  000CC2  0012               	return	
 29139  000CC4                     l2230:
 29140                           
 29141                           ;lorawan.c: 1537: else
 29142                           ;lorawan.c: 1538: {
 29143                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 29144  000CC4  0101               	movlb	1	; () banked
 29145  000CC6  510C               	movf	_rxPayload& (0+255),w,b
 29146  000CC8  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 29147  000CCA  B4D8               	btfsc	status,2,c
 29148  000CCC  0012               	return	
 29149                           
 29150                           ; BSR set to: 1
 29151                           ;lorawan.c: 1541: {
 29152                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 29153  000CCE  EC37  F063         	call	_RADIO_GetStatus	;wreg free
 29154  000CD2  0100               	movlb	0	; () banked
 29155  000CD4  6FDA               	movwf	??_LORAWAN_RxDone& (0+255),b
 29156  000CD6  B7DA               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 29157  000CD8  D014               	goto	l2309
 29158                           
 29159                           ; BSR set to: 0
 29160                           ;lorawan.c: 1543: {
 29161                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 29162  000CDA  C1F2  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 29163  000CDE  C1F3  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 29164  000CE2  C1F4  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 29165  000CE6  0E03               	movlw	3
 29166  000CE8  6F63               	movwf	RxData@status& (0+255),b
 29167  000CEA  D801               	call	u23308
 29168  000CEC  0012               	return	
 29169  000CEE                     u23308:
 29170  000CEE  0005               	push	
 29171  000CF0  6EFA               	movwf	pclath,c
 29172  000CF2  0101               	movlb	1	; () banked
 29173  000CF4  510C               	movf	_rxPayload& (0+255),w,b
 29174  000CF6  6EFD               	movwf	tosl,c
 29175  000CF8  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29176  000CFA  6EFE               	movwf	tosh,c
 29177  000CFC  6AFF               	clrf	tosu,c
 29178  000CFE  50FA               	movf	pclath,w,c
 29179  000D00  0012               	return		;indir
 29180  000D02                     l2309:
 29181                           
 29182                           ;lorawan.c: 1546: else
 29183                           ;lorawan.c: 1547: {
 29184                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 29185  000D02  C1F2  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 29186  000D06  C1F3  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 29187  000D0A  C1F4  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 29188  000D0E  0E02               	movlw	2
 29189  000D10  0100               	movlb	0	; () banked
 29190  000D12  6F63               	movwf	RxData@status& (0+255),b
 29191  000D14  D801               	call	u23318
 29192  000D16  0012               	return	
 29193  000D18                     u23318:
 29194  000D18  0005               	push	
 29195  000D1A  6EFA               	movwf	pclath,c
 29196  000D1C  0101               	movlb	1	; () banked
 29197  000D1E  510C               	movf	_rxPayload& (0+255),w,b
 29198  000D20  6EFD               	movwf	tosl,c
 29199  000D22  510D               	movf	(_rxPayload+1)& (0+255),w,b
 29200  000D24  6EFE               	movwf	tosh,c
 29201  000D26  6AFF               	clrf	tosu,c
 29202  000D28  50FA               	movf	pclath,w,c
 29203  000D2A  0012               	return		;indir
 29204  000D2C                     __end_of_LORAWAN_RxDone:
 29205                           	opt stack 0
 29206                           tosu	equ	0xFFF
 29207                           tosh	equ	0xFFE
 29208                           tosl	equ	0xFFD
 29209                           pclath	equ	0xFFA
 29210                           tblptru	equ	0xFF8
 29211                           tblptrh	equ	0xFF7
 29212                           tblptrl	equ	0xFF6
 29213                           tablat	equ	0xFF5
 29214                           prodh	equ	0xFF4
 29215                           prodl	equ	0xFF3
 29216                           intcon	equ	0xFF2
 29217                           intcon2	equ	0xFF1
 29218                           intcon3	equ	0xFF0
 29219                           postinc0	equ	0xFEE
 29220                           wreg	equ	0xFE8
 29221                           postinc1	equ	0xFE6
 29222                           postdec1	equ	0xFE5
 29223                           plusw1	equ	0xFE3
 29224                           fsr1h	equ	0xFE2
 29225                           fsr1l	equ	0xFE1
 29226                           indf2	equ	0xFDF
 29227                           postinc2	equ	0xFDE
 29228                           postdec2	equ	0xFDD
 29229                           fsr2h	equ	0xFDA
 29230                           fsr2l	equ	0xFD9
 29231                           status	equ	0xFD8
 29232                           
 29233 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 29234 ;; Defined at:
 29235 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29236 ;; Parameters:    Size  Location     Type
 29237 ;;		None
 29238 ;; Auto vars:     Size  Location     Type
 29239 ;;		None
 29240 ;; Return value:  Size  Location     Type
 29241 ;;                  1    wreg      void 
 29242 ;; Registers used:
 29243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29244 ;; Tracked objects:
 29245 ;;		On entry : 0/0
 29246 ;;		On exit  : 0/0
 29247 ;;		Unchanged: 0/0
 29248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29251 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29252 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29253 ;;Total ram usage:        4 bytes
 29254 ;; Hardware stack levels used:    1
 29255 ;; Hardware stack levels required when called:   11
 29256 ;; This function calls:
 29257 ;;		_SwTimerSetTimeout
 29258 ;;		_SwTimerStart
 29259 ;;		___lldiv
 29260 ;; This function is called by:
 29261 ;;		_AckRetransmissionCallback
 29262 ;;		_LORAWAN_RxDone
 29263 ;; This function uses a non-reentrant model
 29264 ;;
 29265                           
 29266                           	psect	text166
 29267  00A5A8                     __ptext166:
 29268                           	opt stack 0
 29269  00A5A8                     _UpdateRetransmissionAckTimeoutState:
 29270                           	opt stack 16
 29271                           
 29272                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 29273                           
 29274                           ;incstack = 0
 29275  00A5A8  0102               	movlb	2	; () banked
 29276  00A5AA  5106               	movf	(_loRa+2)& (0+255),w,b
 29277  00A5AC  0BF0               	andlw	-16
 29278  00A5AE  0906               	iorlw	6
 29279  00A5B0  6F06               	movwf	(_loRa+2)& (0+255),b
 29280                           
 29281                           ; BSR set to: 2
 29282                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 29283  00A5B2  51A4               	movf	(_loRa+160)& (0+255),w,b
 29284  00A5B4  0100               	movlb	0	; () banked
 29285  00A5B6  6F9A               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 29286  00A5B8  0102               	movlb	2	; () banked
 29287  00A5BA  51A5               	movf	(_loRa+161)& (0+255),w,b
 29288  00A5BC  0100               	movlb	0	; () banked
 29289  00A5BE  6F9B               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 29290  00A5C0  6B9C               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 29291  00A5C2  6B9D               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 29292  00A5C4  0E0C               	movlw	12
 29293  00A5C6                     u22315:
 29294  00A5C6  90D8               	bcf	status,0,c
 29295  00A5C8  379A               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 29296  00A5CA  379B               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 29297  00A5CC  379C               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 29298  00A5CE  379D               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 29299  00A5D0  2EE8               	decfsz	wreg,f,c
 29300  00A5D2  D7F9               	goto	u22315
 29301  00A5D4  C09A  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 29302  00A5D8  C09B  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 29303  00A5DC  C09C  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 29304  00A5E0  C09D  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 29305  00A5E4  0E7D               	movlw	125
 29306  00A5E6  6F64               	movwf	___lldiv@divisor& (0+255),b
 29307  00A5E8  0E00               	movlw	0
 29308  00A5EA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 29309  00A5EC  0E00               	movlw	0
 29310  00A5EE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 29311  00A5F0  0E00               	movlw	0
 29312  00A5F2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 29313  00A5F4  ECAE  F050         	call	___lldiv	;wreg free
 29314  00A5F8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 29315  00A5FC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 29316  00A600  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 29317  00A604  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 29318  00A608  0102               	movlb	2	; () banked
 29319  00A60A  51EC               	movf	(_loRa+232)& (0+255),w,b
 29320  00A60C  ECD5  F05A         	call	_SwTimerSetTimeout
 29321                           
 29322                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 29323  00A610  0102               	movlb	2	; () banked
 29324  00A612  51EC               	movf	(_loRa+232)& (0+255),w,b
 29325  00A614  EC5A  F04D         	call	_SwTimerStart
 29326  00A618  0012               	return		;funcret
 29327  00A61A                     __end_of_UpdateRetransmissionAckTimeoutState:
 29328                           	opt stack 0
 29329                           tosu	equ	0xFFF
 29330                           tosh	equ	0xFFE
 29331                           tosl	equ	0xFFD
 29332                           pclath	equ	0xFFA
 29333                           tblptru	equ	0xFF8
 29334                           tblptrh	equ	0xFF7
 29335                           tblptrl	equ	0xFF6
 29336                           tablat	equ	0xFF5
 29337                           prodh	equ	0xFF4
 29338                           prodl	equ	0xFF3
 29339                           intcon	equ	0xFF2
 29340                           intcon2	equ	0xFF1
 29341                           intcon3	equ	0xFF0
 29342                           postinc0	equ	0xFEE
 29343                           wreg	equ	0xFE8
 29344                           postinc1	equ	0xFE6
 29345                           postdec1	equ	0xFE5
 29346                           plusw1	equ	0xFE3
 29347                           fsr1h	equ	0xFE2
 29348                           fsr1l	equ	0xFE1
 29349                           indf2	equ	0xFDF
 29350                           postinc2	equ	0xFDE
 29351                           postdec2	equ	0xFDD
 29352                           fsr2h	equ	0xFDA
 29353                           fsr2l	equ	0xFD9
 29354                           status	equ	0xFD8
 29355                           
 29356 ;; *************** function _UpdateDLSettings *****************
 29357 ;; Defined at:
 29358 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;  dlRx2Dr         1    wreg     unsigned char 
 29361 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 29362 ;; Auto vars:     Size  Location     Type
 29363 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 29364 ;; Return value:  Size  Location     Type
 29365 ;;                  1    wreg      void 
 29366 ;; Registers used:
 29367 ;;		wreg, status,2, status,0
 29368 ;; Tracked objects:
 29369 ;;		On entry : 0/0
 29370 ;;		On exit  : 0/0
 29371 ;;		Unchanged: 0/0
 29372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29373 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29377 ;;Total ram usage:        2 bytes
 29378 ;; Hardware stack levels used:    1
 29379 ;; Hardware stack levels required when called:    7
 29380 ;; This function calls:
 29381 ;;		Nothing
 29382 ;; This function is called by:
 29383 ;;		_LORAWAN_RxDone
 29384 ;; This function uses a non-reentrant model
 29385 ;;
 29386                           
 29387                           	psect	text167
 29388  00C14A                     __ptext167:
 29389                           	opt stack 0
 29390  00C14A                     _UpdateDLSettings:
 29391                           	opt stack 19
 29392                           
 29393                           ;incstack = 0
 29394                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 29395  00C14A  0100               	movlb	0	; () banked
 29396  00C14C  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 29397                           
 29398                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 29399  00C14E  0E08               	movlw	8
 29400  00C150  0100               	movlb	0	; () banked
 29401  00C152  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 29402  00C154  D002               	goto	l1505
 29403                           
 29404                           ; BSR set to: 0
 29405                           ;lorawan_eu.c: 891: {
 29406                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 29407  00C156  C061  F220         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 29408  00C15A                     l1505:
 29409                           
 29410                           ; BSR set to: 0
 29411                           ;lorawan_eu.c: 893: }
 29412                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 29413                           
 29414                           ; BSR set to: 0
 29415  00C15A  0E06               	movlw	6
 29416  00C15C  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 29417  00C15E  0012               	return	
 29418                           
 29419                           ; BSR set to: 0
 29420                           ;lorawan_eu.c: 896: {
 29421                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 29422  00C160  C060  F2F3         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 29423  00C164  0012               	return	
 29424  00C166                     __end_of_UpdateDLSettings:
 29425                           	opt stack 0
 29426                           tosu	equ	0xFFF
 29427                           tosh	equ	0xFFE
 29428                           tosl	equ	0xFFD
 29429                           pclath	equ	0xFFA
 29430                           tblptru	equ	0xFF8
 29431                           tblptrh	equ	0xFF7
 29432                           tblptrl	equ	0xFF6
 29433                           tablat	equ	0xFF5
 29434                           prodh	equ	0xFF4
 29435                           prodl	equ	0xFF3
 29436                           intcon	equ	0xFF2
 29437                           intcon2	equ	0xFF1
 29438                           intcon3	equ	0xFF0
 29439                           postinc0	equ	0xFEE
 29440                           wreg	equ	0xFE8
 29441                           postinc1	equ	0xFE6
 29442                           postdec1	equ	0xFE5
 29443                           plusw1	equ	0xFE3
 29444                           fsr1h	equ	0xFE2
 29445                           fsr1l	equ	0xFE1
 29446                           indf2	equ	0xFDF
 29447                           postinc2	equ	0xFDE
 29448                           postdec2	equ	0xFDD
 29449                           fsr2h	equ	0xFDA
 29450                           fsr2l	equ	0xFD9
 29451                           status	equ	0xFD8
 29452                           
 29453 ;; *************** function _UpdateCfList *****************
 29454 ;; Defined at:
 29455 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29456 ;; Parameters:    Size  Location     Type
 29457 ;;  bufferLength    1    wreg     unsigned char 
 29458 ;;  joinAccept      2   70[BANK0 ] PTR struct .
 29459 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 29460 ;; Auto vars:     Size  Location     Type
 29461 ;;  bufferLength    1   72[BANK0 ] unsigned char 
 29462 ;;  frequency       4   73[BANK0 ] unsigned long 
 29463 ;;  i               1   78[BANK0 ] unsigned char 
 29464 ;;  channelIndex    1   77[BANK0 ] unsigned char 
 29465 ;; Return value:  Size  Location     Type
 29466 ;;                  1    wreg      void 
 29467 ;; Registers used:
 29468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29469 ;; Tracked objects:
 29470 ;;		On entry : 0/0
 29471 ;;		On exit  : 0/0
 29472 ;;		Unchanged: 0/0
 29473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29475 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29477 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29478 ;;Total ram usage:        9 bytes
 29479 ;; Hardware stack levels used:    1
 29480 ;; Hardware stack levels required when called:    9
 29481 ;; This function calls:
 29482 ;;		_LORAWAN_SetChannelIdStatus
 29483 ;;		_ValidateFrequency
 29484 ;;		___lmul
 29485 ;;		___wmul
 29486 ;;		_memcpy
 29487 ;; This function is called by:
 29488 ;;		_LORAWAN_RxDone
 29489 ;; This function uses a non-reentrant model
 29490 ;;
 29491                           
 29492                           	psect	text168
 29493  006240                     __ptext168:
 29494                           	opt stack 0
 29495  006240                     _UpdateCfList:
 29496                           	opt stack 17
 29497                           
 29498                           ; BSR set to: 0
 29499                           ;incstack = 0
 29500                           ;UpdateCfList@bufferLength stored from wreg
 29501  006240  0100               	movlb	0	; () banked
 29502  006242  6FA8               	movwf	UpdateCfList@bufferLength& (0+255),b
 29503                           
 29504                           ;lorawan_eu.c: 826: uint8_t i;
 29505                           ;lorawan_eu.c: 827: uint32_t frequency;
 29506                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 29507                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 29508  006244  0E21               	movlw	33
 29509  006246  0100               	movlb	0	; () banked
 29510  006248  19A8               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 29511  00624A  A4D8               	btfss	status,2,c
 29512  00624C  0012               	return	
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;lorawan_eu.c: 831: {
 29516                           ;lorawan_eu.c: 833: channelIndex = 3;
 29517  00624E  0E03               	movlw	3
 29518  006250  6FAD               	movwf	UpdateCfList@channelIndex& (0+255),b
 29519                           
 29520                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 29521  006252  0E00               	movlw	0
 29522  006254  6FAE               	movwf	UpdateCfList@i& (0+255),b
 29523  006256                     l19478:
 29524                           
 29525                           ; BSR set to: 0
 29526  006256  0E04               	movlw	4
 29527  006258  65AE               	cpfsgt	UpdateCfList@i& (0+255),b
 29528  00625A  D001               	goto	l1489
 29529  00625C  D0E5               	goto	u22080
 29530  00625E                     l1489:
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;lorawan_eu.c: 836: {
 29534                           ;lorawan_eu.c: 837: frequency = 0;
 29535                           
 29536                           ; BSR set to: 0
 29537  00625E  0E00               	movlw	0
 29538  006260  6FA9               	movwf	UpdateCfList@frequency& (0+255),b
 29539  006262  0E00               	movlw	0
 29540  006264  6FAA               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 29541  006266  0E00               	movlw	0
 29542  006268  6FAB               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 29543  00626A  0E00               	movlw	0
 29544  00626C  6FAC               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 29545                           
 29546                           ; BSR set to: 0
 29547                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 29548  00626E  0EA9               	movlw	low UpdateCfList@frequency
 29549  006270  6F60               	movwf	memcpy@d1& (0+255),b
 29550  006272  0E00               	movlw	high UpdateCfList@frequency
 29551  006274  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29552  006276  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29553  006278  0D03               	mullw	3
 29554  00627A  0E0D               	movlw	13
 29555  00627C  26F3               	addwf	prodl,f,c
 29556  00627E  0E00               	movlw	0
 29557  006280  22F4               	addwfc	prodh,f,c
 29558  006282  50F3               	movf	prodl,w,c
 29559  006284  25A6               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 29560  006286  6F62               	movwf	memcpy@s1& (0+255),b
 29561  006288  50F4               	movf	prodh,w,c
 29562  00628A  21A7               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 29563  00628C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 29564  00628E  0E00               	movlw	0
 29565  006290  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29566  006292  0E03               	movlw	3
 29567  006294  6F64               	movwf	memcpy@n& (0+255),b
 29568  006296  ECA9  F055         	call	_memcpy	;wreg free
 29569                           
 29570                           ;lorawan_eu.c: 839: frequency *= 100;
 29571  00629A  C0A9  F09A         	movff	UpdateCfList@frequency,___lmul@multiplier
 29572  00629E  C0AA  F09B         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 29573  0062A2  C0AB  F09C         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 29574  0062A6  C0AC  F09D         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 29575  0062AA  0E64               	movlw	100
 29576  0062AC  0100               	movlb	0	; () banked
 29577  0062AE  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 29578  0062B0  0E00               	movlw	0
 29579  0062B2  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29580  0062B4  0E00               	movlw	0
 29581  0062B6  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29582  0062B8  0E00               	movlw	0
 29583  0062BA  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29584  0062BC  EC1B  F057         	call	___lmul	;wreg free
 29585  0062C0  C09A  F0A9         	movff	?___lmul,UpdateCfList@frequency
 29586  0062C4  C09B  F0AA         	movff	?___lmul+1,UpdateCfList@frequency+1
 29587  0062C8  C09C  F0AB         	movff	?___lmul+2,UpdateCfList@frequency+2
 29588  0062CC  C09D  F0AC         	movff	?___lmul+3,UpdateCfList@frequency+3
 29589                           
 29590                           ;lorawan_eu.c: 840: if (frequency != 0)
 29591  0062D0  0100               	movlb	0	; () banked
 29592  0062D2  51A9               	movf	UpdateCfList@frequency& (0+255),w,b
 29593  0062D4  11AA               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 29594  0062D6  11AB               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 29595  0062D8  11AC               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 29596  0062DA  B4D8               	btfsc	status,2,c
 29597  0062DC  D09B               	goto	l1491
 29598                           
 29599                           ; BSR set to: 0
 29600                           ;lorawan_eu.c: 841: {
 29601                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 29602  0062DE  C0A9  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 29603  0062E2  C0AA  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 29604  0062E6  C0AB  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 29605  0062EA  C0AC  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 29606  0062EE  EC81  F054         	call	_ValidateFrequency	;wreg free
 29607  0062F2  0900               	iorlw	0
 29608  0062F4  A4D8               	btfss	status,2,c
 29609  0062F6  D095               	goto	l1493
 29610                           
 29611                           ;lorawan_eu.c: 843: {
 29612                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 29613  0062F8  0100               	movlb	0	; () banked
 29614  0062FA  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29615  0062FC  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29616  0062FE  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29617  006300  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29618  006302  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29619  006304  0E00               	movlw	0
 29620  006306  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29621  006308  0E0E               	movlw	14
 29622  00630A  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29623  00630C  EC7E  F05E         	call	___wmul	;wreg free
 29624  006310  0E00               	movlw	low _Channels
 29625  006312  0100               	movlb	0	; () banked
 29626  006314  256E               	addwf	?___wmul& (0+255),w,b
 29627  006316  6ED9               	movwf	fsr2l,c
 29628  006318  0E04               	movlw	high _Channels
 29629  00631A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29630  00631C  6EDA               	movwf	fsr2h,c
 29631  00631E  C0A9  FFDE         	movff	UpdateCfList@frequency,postinc2
 29632  006322  C0AA  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 29633  006326  C0AB  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 29634  00632A  C0AC  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 29635                           
 29636                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 29637  00632E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29638  006330  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29639  006332  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29640  006334  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29641  006336  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29642  006338  0E00               	movlw	0
 29643  00633A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29644  00633C  0E0E               	movlw	14
 29645  00633E  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29646  006340  EC7E  F05E         	call	___wmul	;wreg free
 29647  006344  0E05               	movlw	5
 29648  006346  0100               	movlb	0	; () banked
 29649  006348  276E               	addwf	?___wmul& (0+255),f,b
 29650  00634A  0E00               	movlw	0
 29651  00634C  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29652  00634E  0E00               	movlw	low _Channels
 29653  006350  256E               	addwf	?___wmul& (0+255),w,b
 29654  006352  6ED9               	movwf	fsr2l,c
 29655  006354  0E04               	movlw	high _Channels
 29656  006356  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29657  006358  6EDA               	movwf	fsr2h,c
 29658  00635A  0104               	movlb	4	; () banked
 29659  00635C  50DF               	movf	223,w,c
 29660  00635E  0B0F               	andlw	-241
 29661  006360  0950               	iorlw	80
 29662  006362  6EDF               	movwf	223,c
 29663                           
 29664                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 29665  006364  0100               	movlb	0	; () banked
 29666  006366  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29667  006368  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29668  00636A  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29669  00636C  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29670  00636E  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29671  006370  0E00               	movlw	0
 29672  006372  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29673  006374  0E0E               	movlw	14
 29674  006376  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29675  006378  EC7E  F05E         	call	___wmul	;wreg free
 29676  00637C  0E05               	movlw	5
 29677  00637E  0100               	movlb	0	; () banked
 29678  006380  276E               	addwf	?___wmul& (0+255),f,b
 29679  006382  0E00               	movlw	0
 29680  006384  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29681  006386  0E00               	movlw	low _Channels
 29682  006388  256E               	addwf	?___wmul& (0+255),w,b
 29683  00638A  6ED9               	movwf	fsr2l,c
 29684  00638C  0E04               	movlw	high _Channels
 29685  00638E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29686  006390  6EDA               	movwf	fsr2h,c
 29687  006392  0104               	movlb	4	; () banked
 29688  006394  90DF               	bcf	223,0,c
 29689  006396  92DF               	bcf	223,1,c
 29690  006398  94DF               	bcf	223,2,c
 29691  00639A  96DF               	bcf	223,3,c
 29692                           
 29693                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 29694  00639C  0100               	movlb	0	; () banked
 29695  00639E  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29696  0063A0  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29697  0063A2  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29698  0063A4  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29699  0063A6  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29700  0063A8  0E00               	movlw	0
 29701  0063AA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29702  0063AC  0E0E               	movlw	14
 29703  0063AE  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29704  0063B0  EC7E  F05E         	call	___wmul	;wreg free
 29705  0063B4  0E06               	movlw	6
 29706  0063B6  0100               	movlb	0	; () banked
 29707  0063B8  276E               	addwf	?___wmul& (0+255),f,b
 29708  0063BA  0E00               	movlw	0
 29709  0063BC  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29710  0063BE  0E00               	movlw	low _Channels
 29711  0063C0  256E               	addwf	?___wmul& (0+255),w,b
 29712  0063C2  6ED9               	movwf	fsr2l,c
 29713  0063C4  0E04               	movlw	high _Channels
 29714  0063C6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29715  0063C8  6EDA               	movwf	fsr2h,c
 29716  0063CA  0EE7               	movlw	231
 29717  0063CC  6EDE               	movwf	postinc2,c
 29718  0063CE  0E03               	movlw	3
 29719  0063D0  6EDD               	movwf	postdec2,c
 29720                           
 29721                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 29722  0063D2  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29723  0063D4  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29724  0063D6  6F6E               	movwf	___wmul@multiplier& (0+255),b
 29725  0063D8  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 29726  0063DA  376F               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 29727  0063DC  0E00               	movlw	0
 29728  0063DE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29729  0063E0  0E0E               	movlw	14
 29730  0063E2  6F70               	movwf	___wmul@multiplicand& (0+255),b
 29731  0063E4  EC7E  F05E         	call	___wmul	;wreg free
 29732  0063E8  0E0D               	movlw	13
 29733  0063EA  0100               	movlb	0	; () banked
 29734  0063EC  276E               	addwf	?___wmul& (0+255),f,b
 29735  0063EE  0E00               	movlw	0
 29736  0063F0  236F               	addwfc	(?___wmul+1)& (0+255),f,b
 29737  0063F2  0E00               	movlw	low _Channels
 29738  0063F4  256E               	addwf	?___wmul& (0+255),w,b
 29739  0063F6  6ED9               	movwf	fsr2l,c
 29740  0063F8  0E04               	movlw	high _Channels
 29741  0063FA  216F               	addwfc	(?___wmul+1)& (0+255),w,b
 29742  0063FC  6EDA               	movwf	fsr2h,c
 29743  0063FE  0EFF               	movlw	255
 29744  006400  6EDF               	movwf	indf2,c
 29745                           
 29746                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 29747  006402  0E01               	movlw	1
 29748  006404  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 29749  006406  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29750  006408  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29751  00640A  ECC1  F056         	call	_LORAWAN_SetChannelIdStatus
 29752                           
 29753                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 29754  00640E  0102               	movlb	2	; () banked
 29755  006410  8707               	bsf	(_loRa+3)& (0+255),3,b
 29756                           
 29757                           ; BSR set to: 2
 29758                           ;lorawan_eu.c: 851: }
 29759                           ;lorawan_eu.c: 852: }
 29760  006412  D007               	goto	l1493
 29761  006414                     l1491:
 29762                           
 29763                           ;lorawan_eu.c: 853: else
 29764                           ;lorawan_eu.c: 854: {
 29765                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 29766                           
 29767                           ; BSR set to: 2
 29768  006414  0E00               	movlw	0
 29769  006416  0100               	movlb	0	; () banked
 29770  006418  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 29771  00641A  51AE               	movf	UpdateCfList@i& (0+255),w,b
 29772  00641C  25AD               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 29773  00641E  ECC1  F056         	call	_LORAWAN_SetChannelIdStatus
 29774  006422                     l1493:
 29775  006422  0100               	movlb	0	; () banked
 29776  006424  2BAE               	incf	UpdateCfList@i& (0+255),f,b
 29777  006426  D717               	goto	l19478
 29778  006428                     u22080:
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;lorawan_eu.c: 856: }
 29782                           ;lorawan_eu.c: 857: }
 29783                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 29784  006428  0102               	movlb	2	; () banked
 29785  00642A  8707               	bsf	(_loRa+3)& (0+255),3,b
 29786  00642C  0012               	return	
 29787  00642E                     __end_of_UpdateCfList:
 29788                           	opt stack 0
 29789                           tosu	equ	0xFFF
 29790                           tosh	equ	0xFFE
 29791                           tosl	equ	0xFFD
 29792                           pclath	equ	0xFFA
 29793                           tblptru	equ	0xFF8
 29794                           tblptrh	equ	0xFF7
 29795                           tblptrl	equ	0xFF6
 29796                           tablat	equ	0xFF5
 29797                           prodh	equ	0xFF4
 29798                           prodl	equ	0xFF3
 29799                           intcon	equ	0xFF2
 29800                           intcon2	equ	0xFF1
 29801                           intcon3	equ	0xFF0
 29802                           postinc0	equ	0xFEE
 29803                           wreg	equ	0xFE8
 29804                           postinc1	equ	0xFE6
 29805                           postdec1	equ	0xFE5
 29806                           plusw1	equ	0xFE3
 29807                           fsr1h	equ	0xFE2
 29808                           fsr1l	equ	0xFE1
 29809                           indf2	equ	0xFDF
 29810                           postinc2	equ	0xFDE
 29811                           postdec2	equ	0xFDD
 29812                           fsr2h	equ	0xFDA
 29813                           fsr2l	equ	0xFD9
 29814                           status	equ	0xFD8
 29815                           
 29816 ;; *************** function _StartReTxTimer *****************
 29817 ;; Defined at:
 29818 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;		None
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;  minim           4   62[BANK0 ] unsigned long 
 29823 ;;  i               1   66[BANK0 ] unsigned char 
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  1    wreg      void 
 29826 ;; Registers used:
 29827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29828 ;; Tracked objects:
 29829 ;;		On entry : 0/0
 29830 ;;		On exit  : 0/0
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29834 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29837 ;;Total ram usage:        9 bytes
 29838 ;; Hardware stack levels used:    1
 29839 ;; Hardware stack levels required when called:   11
 29840 ;; This function calls:
 29841 ;;		_SwTimerSetTimeout
 29842 ;;		_SwTimerStart
 29843 ;;		___lldiv
 29844 ;; This function is called by:
 29845 ;;		_LORAWAN_RxDone
 29846 ;; This function uses a non-reentrant model
 29847 ;;
 29848                           
 29849                           	psect	text169
 29850  007008                     __ptext169:
 29851                           	opt stack 0
 29852  007008                     _StartReTxTimer:
 29853                           	opt stack 15
 29854                           
 29855                           ;lorawan_eu.c: 904: uint8_t i;
 29856                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 29857                           
 29858                           ;incstack = 0
 29859  007008  0100               	movlb	0	; () banked
 29860  00700A  699E               	setf	StartReTxTimer@minim& (0+255),b
 29861  00700C  699F               	setf	(StartReTxTimer@minim+1)& (0+255),b
 29862  00700E  69A0               	setf	(StartReTxTimer@minim+2)& (0+255),b
 29863  007010  69A1               	setf	(StartReTxTimer@minim+3)& (0+255),b
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 29867  007012  0E00               	movlw	0
 29868  007014  6FA2               	movwf	StartReTxTimer@i& (0+255),b
 29869  007016  D07C               	goto	l1510
 29870  007018                     
 29871                           ;lorawan_eu.c: 908: {
 29872                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 29873                           
 29874                           ; BSR set to: 0
 29875  007018  0100               	movlb	0	; () banked
 29876  00701A  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29877  00701C  0D0E               	mullw	14
 29878  00701E  0E04               	movlw	4
 29879  007020  26F3               	addwf	prodl,f,c
 29880  007022  0E00               	movlw	0
 29881  007024  22F4               	addwfc	prodh,f,c
 29882  007026  0E00               	movlw	low _Channels
 29883  007028  24F3               	addwf	prodl,w,c
 29884  00702A  6ED9               	movwf	fsr2l,c
 29885  00702C  0E04               	movlw	high _Channels
 29886  00702E  20F4               	addwfc	prodh,w,c
 29887  007030  6EDA               	movwf	fsr2h,c
 29888  007032  04DE               	decf	postinc2,w,c
 29889  007034  A4D8               	btfss	status,2,c
 29890  007036  D06A               	goto	l1512
 29891                           
 29892                           ; BSR set to: 0
 29893  007038  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29894  00703A  0D0E               	mullw	14
 29895  00703C  0E08               	movlw	8
 29896  00703E  26F3               	addwf	prodl,f,c
 29897  007040  0E00               	movlw	0
 29898  007042  22F4               	addwfc	prodh,f,c
 29899  007044  0E00               	movlw	low _Channels
 29900  007046  24F3               	addwf	prodl,w,c
 29901  007048  6ED9               	movwf	fsr2l,c
 29902  00704A  0E04               	movlw	high _Channels
 29903  00704C  20F4               	addwfc	prodh,w,c
 29904  00704E  6EDA               	movwf	fsr2h,c
 29905  007050  50DE               	movf	postinc2,w,c
 29906  007052  10DE               	iorwf	postinc2,w,c
 29907  007054  10DE               	iorwf	postinc2,w,c
 29908  007056  10DE               	iorwf	postinc2,w,c
 29909  007058  B4D8               	btfsc	status,2,c
 29910  00705A  D058               	goto	l1512
 29911                           
 29912                           ; BSR set to: 0
 29913  00705C  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29914  00705E  0D0E               	mullw	14
 29915  007060  0E08               	movlw	8
 29916  007062  26F3               	addwf	prodl,f,c
 29917  007064  0E00               	movlw	0
 29918  007066  22F4               	addwfc	prodh,f,c
 29919  007068  0E00               	movlw	low _Channels
 29920  00706A  24F3               	addwf	prodl,w,c
 29921  00706C  6ED9               	movwf	fsr2l,c
 29922  00706E  0E04               	movlw	high _Channels
 29923  007070  20F4               	addwfc	prodh,w,c
 29924  007072  6EDA               	movwf	fsr2h,c
 29925  007074  50DE               	movf	postinc2,w,c
 29926  007076  5D9E               	subwf	StartReTxTimer@minim& (0+255),w,b
 29927  007078  50DE               	movf	postinc2,w,c
 29928  00707A  599F               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 29929  00707C  50DE               	movf	postinc2,w,c
 29930  00707E  59A0               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 29931  007080  50DE               	movf	postinc2,w,c
 29932  007082  59A1               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 29933  007084  A0D8               	btfss	status,0,c
 29934  007086  D042               	goto	l1512
 29935                           
 29936                           ; BSR set to: 0
 29937  007088  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29938  00708A  0D0E               	mullw	14
 29939  00708C  0E05               	movlw	5
 29940  00708E  26F3               	addwf	prodl,f,c
 29941  007090  0E00               	movlw	0
 29942  007092  22F4               	addwfc	prodh,f,c
 29943  007094  0E00               	movlw	low _Channels
 29944  007096  24F3               	addwf	prodl,w,c
 29945  007098  6ED9               	movwf	fsr2l,c
 29946  00709A  0E04               	movlw	high _Channels
 29947  00709C  20F4               	addwfc	prodh,w,c
 29948  00709E  6EDA               	movwf	fsr2h,c
 29949  0070A0  0104               	movlb	4	; () banked
 29950  0070A2  50DF               	movf	223,w,c
 29951  0070A4  0B0F               	andlw	15
 29952  0070A6  0100               	movlb	0	; () banked
 29953  0070A8  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 29954  0070AA  519A               	movf	??_StartReTxTimer& (0+255),w,b
 29955  0070AC  0102               	movlb	2	; () banked
 29956  0070AE  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 29957  0070B0  A0D8               	btfss	status,0,c
 29958  0070B2  D02C               	goto	l1512
 29959                           
 29960                           ; BSR set to: 2
 29961  0070B4  0100               	movlb	0	; () banked
 29962  0070B6  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29963  0070B8  0D0E               	mullw	14
 29964  0070BA  0E05               	movlw	5
 29965  0070BC  26F3               	addwf	prodl,f,c
 29966  0070BE  0E00               	movlw	0
 29967  0070C0  22F4               	addwfc	prodh,f,c
 29968  0070C2  0E00               	movlw	low _Channels
 29969  0070C4  24F3               	addwf	prodl,w,c
 29970  0070C6  6ED9               	movwf	fsr2l,c
 29971  0070C8  0E04               	movlw	high _Channels
 29972  0070CA  20F4               	addwfc	prodh,w,c
 29973  0070CC  6EDA               	movwf	fsr2h,c
 29974  0070CE  0104               	movlb	4	; () banked
 29975  0070D0  38DF               	swapf	223,w,c
 29976  0070D2  0B0F               	andlw	15
 29977  0070D4  0100               	movlb	0	; () banked
 29978  0070D6  6F9A               	movwf	??_StartReTxTimer& (0+255),b
 29979  0070D8  0102               	movlb	2	; () banked
 29980  0070DA  51E3               	movf	(_loRa+223)& (0+255),w,b
 29981  0070DC  0100               	movlb	0	; () banked
 29982  0070DE  5D9A               	subwf	??_StartReTxTimer& (0+255),w,b
 29983  0070E0  A0D8               	btfss	status,0,c
 29984  0070E2  D014               	goto	l1512
 29985                           
 29986                           ; BSR set to: 0
 29987                           ;lorawan_eu.c: 910: {
 29988                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 29989  0070E4  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 29990  0070E6  0D0E               	mullw	14
 29991  0070E8  0E08               	movlw	8
 29992  0070EA  26F3               	addwf	prodl,f,c
 29993  0070EC  0E00               	movlw	0
 29994  0070EE  22F4               	addwfc	prodh,f,c
 29995  0070F0  0E00               	movlw	low _Channels
 29996  0070F2  24F3               	addwf	prodl,w,c
 29997  0070F4  6ED9               	movwf	fsr2l,c
 29998  0070F6  0E04               	movlw	high _Channels
 29999  0070F8  20F4               	addwfc	prodh,w,c
 30000  0070FA  6EDA               	movwf	fsr2h,c
 30001  0070FC  CFDE F09E          	movff	postinc2,StartReTxTimer@minim
 30002  007100  CFDE F09F          	movff	postinc2,StartReTxTimer@minim+1
 30003  007104  CFDE F0A0          	movff	postinc2,StartReTxTimer@minim+2
 30004  007108  CFDE F0A1          	movff	postinc2,StartReTxTimer@minim+3
 30005  00710C                     l1512:
 30006                           
 30007                           ; BSR set to: 0
 30008  00710C  0100               	movlb	0	; () banked
 30009  00710E  2BA2               	incf	StartReTxTimer@i& (0+255),f,b
 30010  007110                     l1510:
 30011                           
 30012                           ; BSR set to: 0
 30013                           
 30014                           ; BSR set to: 0
 30015  007110  51A2               	movf	StartReTxTimer@i& (0+255),w,b
 30016  007112  0102               	movlb	2	; () banked
 30017  007114  5DF1               	subwf	(_loRa+237)& (0+255),w,b
 30018  007116  B0D8               	btfsc	status,0,c
 30019  007118  D77F               	goto	l1511
 30020                           
 30021                           ; BSR set to: 2
 30022                           ;lorawan_eu.c: 912: }
 30023                           ;lorawan_eu.c: 913: }
 30024                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 30025                           
 30026                           ; BSR set to: 2
 30027  00711A  5106               	movf	(_loRa+2)& (0+255),w,b
 30028  00711C  0BF0               	andlw	-16
 30029  00711E  0906               	iorlw	6
 30030  007120  6F06               	movwf	(_loRa+2)& (0+255),b
 30031                           
 30032                           ; BSR set to: 2
 30033                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 30034  007122  C09E  F09A         	movff	StartReTxTimer@minim,??_StartReTxTimer
 30035  007126  C09F  F09B         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 30036  00712A  C0A0  F09C         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 30037  00712E  C0A1  F09D         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 30038  007132  0E0C               	movlw	12
 30039  007134                     u22175:
 30040  007134  90D8               	bcf	status,0,c
 30041  007136  0100               	movlb	0	; () banked
 30042  007138  379A               	rlcf	??_StartReTxTimer& (0+255),f,b
 30043  00713A  379B               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 30044  00713C  379C               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 30045  00713E  379D               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 30046  007140  2EE8               	decfsz	wreg,f,c
 30047  007142  D7F8               	goto	u22175
 30048  007144  C09A  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 30049  007148  C09B  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 30050  00714C  C09C  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 30051  007150  C09D  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 30052  007154  0E7D               	movlw	125
 30053  007156  6F64               	movwf	___lldiv@divisor& (0+255),b
 30054  007158  0E00               	movlw	0
 30055  00715A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30056  00715C  0E00               	movlw	0
 30057  00715E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30058  007160  0E00               	movlw	0
 30059  007162  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30060  007164  ECAE  F050         	call	___lldiv	;wreg free
 30061  007168  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 30062  00716C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 30063  007170  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 30064  007174  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 30065  007178  0102               	movlb	2	; () banked
 30066  00717A  51EA               	movf	(_loRa+230)& (0+255),w,b
 30067  00717C  ECD5  F05A         	call	_SwTimerSetTimeout
 30068                           
 30069                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 30070  007180  0102               	movlb	2	; () banked
 30071  007182  51EA               	movf	(_loRa+230)& (0+255),w,b
 30072  007184  EC5A  F04D         	call	_SwTimerStart
 30073  007188  0012               	return		;funcret
 30074  00718A                     __end_of_StartReTxTimer:
 30075                           	opt stack 0
 30076                           tosu	equ	0xFFF
 30077                           tosh	equ	0xFFE
 30078                           tosl	equ	0xFFD
 30079                           pclath	equ	0xFFA
 30080                           tblptru	equ	0xFF8
 30081                           tblptrh	equ	0xFF7
 30082                           tblptrl	equ	0xFF6
 30083                           tablat	equ	0xFF5
 30084                           prodh	equ	0xFF4
 30085                           prodl	equ	0xFF3
 30086                           intcon	equ	0xFF2
 30087                           intcon2	equ	0xFF1
 30088                           intcon3	equ	0xFF0
 30089                           postinc0	equ	0xFEE
 30090                           wreg	equ	0xFE8
 30091                           postinc1	equ	0xFE6
 30092                           postdec1	equ	0xFE5
 30093                           plusw1	equ	0xFE3
 30094                           fsr1h	equ	0xFE2
 30095                           fsr1l	equ	0xFE1
 30096                           indf2	equ	0xFDF
 30097                           postinc2	equ	0xFDE
 30098                           postdec2	equ	0xFDD
 30099                           fsr2h	equ	0xFDA
 30100                           fsr2l	equ	0xFD9
 30101                           status	equ	0xFD8
 30102                           
 30103 ;; *************** function _SetReceptionNotOkState *****************
 30104 ;; Defined at:
 30105 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30106 ;; Parameters:    Size  Location     Type
 30107 ;;		None
 30108 ;; Auto vars:     Size  Location     Type
 30109 ;;		None
 30110 ;; Return value:  Size  Location     Type
 30111 ;;                  1    wreg      void 
 30112 ;; Registers used:
 30113 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30114 ;; Tracked objects:
 30115 ;;		On entry : 0/0
 30116 ;;		On exit  : 0/0
 30117 ;;		Unchanged: 0/0
 30118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30123 ;;Total ram usage:        0 bytes
 30124 ;; Hardware stack levels used:    1
 30125 ;; Hardware stack levels required when called:   14
 30126 ;; This function calls:
 30127 ;;		_LORAWAN_EnterContinuousReceive
 30128 ;;		_RxData
 30129 ;; This function is called by:
 30130 ;;		_LORAWAN_RxDone
 30131 ;; This function uses a non-reentrant model
 30132 ;;
 30133                           
 30134                           	psect	text170
 30135  00A262                     __ptext170:
 30136                           	opt stack 0
 30137  00A262                     _SetReceptionNotOkState:
 30138                           	opt stack 12
 30139                           
 30140                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 30141                           
 30142                           ;incstack = 0
 30143  00A262  0102               	movlb	2	; () banked
 30144  00A264  5106               	movf	(_loRa+2)& (0+255),w,b
 30145  00A266  0B0F               	andlw	15
 30146  00A268  0A05               	xorlw	5
 30147  00A26A  B4D8               	btfsc	status,2,c
 30148  00A26C  D008               	goto	u22460
 30149                           
 30150                           ; BSR set to: 2
 30151  00A26E  5106               	movf	(_loRa+2)& (0+255),w,b
 30152  00A270  0B0F               	andlw	15
 30153  00A272  0A03               	xorlw	3
 30154  00A274  A4D8               	btfss	status,2,c
 30155  00A276  D029               	goto	l2418
 30156                           
 30157                           ; BSR set to: 2
 30158  00A278  51F5               	movf	(_loRa+241)& (0+255),w,b
 30159  00A27A  B4D8               	btfsc	status,2,c
 30160  00A27C  D026               	goto	l2418
 30161  00A27E                     u22460:
 30162                           
 30163                           ; BSR set to: 2
 30164                           ;lorawan.c: 2000: {
 30165                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 30166  00A27E  9104               	bcf	_loRa& (0+255),0,b
 30167                           
 30168                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 30169  00A280  9106               	bcf	(_loRa+2)& (0+255),0,b
 30170  00A282  9306               	bcf	(_loRa+2)& (0+255),1,b
 30171  00A284  9506               	bcf	(_loRa+2)& (0+255),2,b
 30172  00A286  9706               	bcf	(_loRa+2)& (0+255),3,b
 30173                           
 30174                           ; BSR set to: 2
 30175                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 30176  00A288  5116               	movf	(_loRa+18)& (0+255),w,b
 30177  00A28A  A4D8               	btfss	status,2,c
 30178  00A28C  D01C               	goto	u22499
 30179                           
 30180                           ; BSR set to: 2
 30181  00A28E  0101               	movlb	1	; () banked
 30182  00A290  510C               	movf	_rxPayload& (0+255),w,b
 30183  00A292  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 30184  00A294  B4D8               	btfsc	status,2,c
 30185  00A296  D017               	goto	u22499
 30186                           
 30187                           ; BSR set to: 1
 30188                           ;lorawan.c: 2005: {
 30189                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 30190  00A298  0102               	movlb	2	; () banked
 30191  00A29A  9B04               	bcf	_loRa& (0+255),5,b
 30192                           
 30193                           ; BSR set to: 2
 30194                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 30195  00A29C  0E00               	movlw	0
 30196  00A29E  0100               	movlb	0	; () banked
 30197  00A2A0  6F60               	movwf	RxData@pData& (0+255),b
 30198  00A2A2  0E00               	movlw	0
 30199  00A2A4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 30200  00A2A6  0E00               	movlw	0
 30201  00A2A8  6F62               	movwf	RxData@dataLength& (0+255),b
 30202  00A2AA  0E00               	movlw	0
 30203  00A2AC  6F63               	movwf	RxData@status& (0+255),b
 30204  00A2AE  D801               	call	u22498
 30205  00A2B0  D00A               	goto	u22499
 30206  00A2B2                     u22498:
 30207  00A2B2  0005               	push	
 30208  00A2B4  6EFA               	movwf	pclath,c
 30209  00A2B6  0101               	movlb	1	; () banked
 30210  00A2B8  510C               	movf	_rxPayload& (0+255),w,b
 30211  00A2BA  6EFD               	movwf	tosl,c
 30212  00A2BC  510D               	movf	(_rxPayload+1)& (0+255),w,b
 30213  00A2BE  6EFE               	movwf	tosh,c
 30214  00A2C0  6AFF               	clrf	tosu,c
 30215  00A2C2  50FA               	movf	pclath,w,c
 30216  00A2C4  0012               	return		;indir
 30217  00A2C6                     u22499:
 30218                           
 30219                           ;lorawan.c: 2008: }
 30220                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 30221  00A2C6  0102               	movlb	2	; () banked
 30222  00A2C8  9307               	bcf	(_loRa+3)& (0+255),1,b
 30223  00A2CA                     l2418:
 30224                           
 30225                           ; BSR set to: 2
 30226                           ;lorawan.c: 2010: }
 30227                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 30228                           
 30229                           ; BSR set to: 2
 30230  00A2CA  0E02               	movlw	2
 30231  00A2CC  1916               	xorwf	(_loRa+18)& (0+255),w,b
 30232  00A2CE  A4D8               	btfss	status,2,c
 30233  00A2D0  0012               	return	
 30234                           
 30235                           ; BSR set to: 2
 30236                           ;lorawan.c: 2013: {
 30237                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 30238  00A2D2  5106               	movf	(_loRa+2)& (0+255),w,b
 30239  00A2D4  0BF0               	andlw	-16
 30240  00A2D6  0909               	iorlw	9
 30241  00A2D8  6F06               	movwf	(_loRa+2)& (0+255),b
 30242                           
 30243                           ; BSR set to: 2
 30244                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 30245  00A2DA  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 30246  00A2DE  0012               	return	
 30247  00A2E0                     __end_of_SetReceptionNotOkState:
 30248                           	opt stack 0
 30249                           tosu	equ	0xFFF
 30250                           tosh	equ	0xFFE
 30251                           tosl	equ	0xFFD
 30252                           pclath	equ	0xFFA
 30253                           tblptru	equ	0xFF8
 30254                           tblptrh	equ	0xFF7
 30255                           tblptrl	equ	0xFF6
 30256                           tablat	equ	0xFF5
 30257                           prodh	equ	0xFF4
 30258                           prodl	equ	0xFF3
 30259                           intcon	equ	0xFF2
 30260                           intcon2	equ	0xFF1
 30261                           intcon3	equ	0xFF0
 30262                           postinc0	equ	0xFEE
 30263                           wreg	equ	0xFE8
 30264                           postinc1	equ	0xFE6
 30265                           postdec1	equ	0xFE5
 30266                           plusw1	equ	0xFE3
 30267                           fsr1h	equ	0xFE2
 30268                           fsr1l	equ	0xFE1
 30269                           indf2	equ	0xFDF
 30270                           postinc2	equ	0xFDE
 30271                           postdec2	equ	0xFDD
 30272                           fsr2h	equ	0xFDA
 30273                           fsr2l	equ	0xFD9
 30274                           status	equ	0xFD8
 30275                           
 30276 ;; *************** function _SetJoinFailState *****************
 30277 ;; Defined at:
 30278 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30279 ;; Parameters:    Size  Location     Type
 30280 ;;		None
 30281 ;; Auto vars:     Size  Location     Type
 30282 ;;		None
 30283 ;; Return value:  Size  Location     Type
 30284 ;;                  1    wreg      void 
 30285 ;; Registers used:
 30286 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30287 ;; Tracked objects:
 30288 ;;		On entry : 0/0
 30289 ;;		On exit  : 0/0
 30290 ;;		Unchanged: 0/0
 30291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30296 ;;Total ram usage:        0 bytes
 30297 ;; Hardware stack levels used:    1
 30298 ;; Hardware stack levels required when called:    8
 30299 ;; This function calls:
 30300 ;;		_RxJoinResponse
 30301 ;; This function is called by:
 30302 ;;		_LORAWAN_RxTimeout
 30303 ;;		_LORAWAN_RxDone
 30304 ;; This function uses a non-reentrant model
 30305 ;;
 30306                           
 30307                           	psect	text171
 30308  00B9AE                     __ptext171:
 30309                           	opt stack 0
 30310  00B9AE                     _SetJoinFailState:
 30311                           	opt stack 18
 30312                           
 30313                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 30314                           
 30315                           ;incstack = 0
 30316  00B9AE  0102               	movlb	2	; () banked
 30317  00B9B0  9906               	bcf	(_loRa+2)& (0+255),4,b
 30318                           
 30319                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 30320  00B9B2  9504               	bcf	_loRa& (0+255),2,b
 30321                           
 30322                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 30323  00B9B4  9106               	bcf	(_loRa+2)& (0+255),0,b
 30324  00B9B6  9306               	bcf	(_loRa+2)& (0+255),1,b
 30325  00B9B8  9506               	bcf	(_loRa+2)& (0+255),2,b
 30326  00B9BA  9706               	bcf	(_loRa+2)& (0+255),3,b
 30327                           
 30328                           ; BSR set to: 2
 30329                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 30330  00B9BC  0101               	movlb	1	; () banked
 30331  00B9BE  510E               	movf	(_rxPayload+2)& (0+255),w,b
 30332  00B9C0  110F               	iorwf	(_rxPayload+3)& (0+255),w,b
 30333  00B9C2  B4D8               	btfsc	status,2,c
 30334  00B9C4  0012               	return	
 30335                           
 30336                           ; BSR set to: 1
 30337                           ;lorawan.c: 1110: {
 30338                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 30339  00B9C6  D801               	call	u22038
 30340  00B9C8  0012               	return	
 30341  00B9CA                     u22038:
 30342  00B9CA  0005               	push	
 30343  00B9CC  6EFA               	movwf	pclath,c
 30344  00B9CE  510E               	movf	(_rxPayload+2)& (0+255),w,b
 30345  00B9D0  6EFD               	movwf	tosl,c
 30346  00B9D2  510F               	movf	(_rxPayload+3)& (0+255),w,b
 30347  00B9D4  6EFE               	movwf	tosh,c
 30348  00B9D6  6AFF               	clrf	tosu,c
 30349  00B9D8  50FA               	movf	pclath,w,c
 30350  00B9DA  0E00               	movlw	0
 30351  00B9DC  0012               	return		;indir
 30352  00B9DE                     __end_of_SetJoinFailState:
 30353                           	opt stack 0
 30354                           tosu	equ	0xFFF
 30355                           tosh	equ	0xFFE
 30356                           tosl	equ	0xFFD
 30357                           pclath	equ	0xFFA
 30358                           tblptru	equ	0xFF8
 30359                           tblptrh	equ	0xFF7
 30360                           tblptrl	equ	0xFF6
 30361                           tablat	equ	0xFF5
 30362                           prodh	equ	0xFF4
 30363                           prodl	equ	0xFF3
 30364                           intcon	equ	0xFF2
 30365                           intcon2	equ	0xFF1
 30366                           intcon3	equ	0xFF0
 30367                           postinc0	equ	0xFEE
 30368                           wreg	equ	0xFE8
 30369                           postinc1	equ	0xFE6
 30370                           postdec1	equ	0xFE5
 30371                           plusw1	equ	0xFE3
 30372                           fsr1h	equ	0xFE2
 30373                           fsr1l	equ	0xFE1
 30374                           indf2	equ	0xFDF
 30375                           postinc2	equ	0xFDE
 30376                           postdec2	equ	0xFDD
 30377                           fsr2h	equ	0xFDA
 30378                           fsr2l	equ	0xFD9
 30379                           status	equ	0xFD8
 30380                           
 30381 ;; *************** function _RxJoinResponse *****************
 30382 ;; Defined at:
 30383 ;;		line 77 in file "main.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;  status          1    wreg     unsigned char 
 30386 ;; Auto vars:     Size  Location     Type
 30387 ;;  status          1    0[COMRAM] unsigned char 
 30388 ;; Return value:  Size  Location     Type
 30389 ;;                  1    wreg      void 
 30390 ;; Registers used:
 30391 ;;		wreg
 30392 ;; Tracked objects:
 30393 ;;		On entry : 0/0
 30394 ;;		On exit  : 0/0
 30395 ;;		Unchanged: 0/0
 30396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30401 ;;Total ram usage:        0 bytes
 30402 ;; Hardware stack levels used:    1
 30403 ;; Hardware stack levels required when called:    7
 30404 ;; This function calls:
 30405 ;;		Nothing
 30406 ;; This function is called by:
 30407 ;;		_main
 30408 ;;		_SetJoinFailState
 30409 ;;		_UpdateJoinSuccessState
 30410 ;; This function uses a non-reentrant model
 30411 ;;
 30412                           
 30413                           	psect	text172
 30414  00C6E0                     __ptext172:
 30415                           	opt stack 0
 30416  00C6E0                     _RxJoinResponse:
 30417                           	opt stack 20
 30418                           
 30419                           ;incstack = 0
 30420  00C6E0  0012               	return		;funcret
 30421  00C6E2                     __end_of_RxJoinResponse:
 30422                           	opt stack 0
 30423                           tosu	equ	0xFFF
 30424                           tosh	equ	0xFFE
 30425                           tosl	equ	0xFFD
 30426                           pclath	equ	0xFFA
 30427                           tblptru	equ	0xFF8
 30428                           tblptrh	equ	0xFF7
 30429                           tblptrl	equ	0xFF6
 30430                           tablat	equ	0xFF5
 30431                           prodh	equ	0xFF4
 30432                           prodl	equ	0xFF3
 30433                           intcon	equ	0xFF2
 30434                           intcon2	equ	0xFF1
 30435                           intcon3	equ	0xFF0
 30436                           postinc0	equ	0xFEE
 30437                           wreg	equ	0xFE8
 30438                           postinc1	equ	0xFE6
 30439                           postdec1	equ	0xFE5
 30440                           plusw1	equ	0xFE3
 30441                           fsr1h	equ	0xFE2
 30442                           fsr1l	equ	0xFE1
 30443                           indf2	equ	0xFDF
 30444                           postinc2	equ	0xFDE
 30445                           postdec2	equ	0xFDD
 30446                           fsr2h	equ	0xFDA
 30447                           fsr2l	equ	0xFD9
 30448                           status	equ	0xFD8
 30449                           
 30450 ;; *************** function _MacExecuteCommands *****************
 30451 ;; Defined at:
 30452 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30453 ;; Parameters:    Size  Location     Type
 30454 ;;  buffer          2   80[BANK0 ] PTR unsigned char 
 30455 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 30456 ;;  fOptsLen        1   82[BANK0 ] unsigned char 
 30457 ;; Auto vars:     Size  Location     Type
 30458 ;;  ptr             2   86[BANK0 ] PTR unsigned char 
 30459 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 30460 ;;  done            1   85[BANK0 ] unsigned char 
 30461 ;; Return value:  Size  Location     Type
 30462 ;;                  2   80[BANK0 ] PTR unsigned char 
 30463 ;; Registers used:
 30464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30465 ;; Tracked objects:
 30466 ;;		On entry : 0/0
 30467 ;;		On exit  : 0/0
 30468 ;;		Unchanged: 0/0
 30469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30470 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30471 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30474 ;;Total ram usage:        8 bytes
 30475 ;; Hardware stack levels used:    1
 30476 ;; Hardware stack levels required when called:   11
 30477 ;; This function calls:
 30478 ;;		_ExecuteDevStatus
 30479 ;;		_ExecuteDutyCycle
 30480 ;;		_ExecuteLinkAdr
 30481 ;;		_ExecuteLinkCheck
 30482 ;;		_ExecuteNewChannel
 30483 ;;		_ExecuteRxParamSetupReq
 30484 ;;		_ExecuteRxTimingSetup
 30485 ;; This function is called by:
 30486 ;;		_LORAWAN_RxDone
 30487 ;; This function uses a non-reentrant model
 30488 ;;
 30489                           
 30490                           	psect	text173
 30491  004BAC                     __ptext173:
 30492                           	opt stack 0
 30493  004BAC                     _MacExecuteCommands:
 30494                           	opt stack 15
 30495                           
 30496                           ;lorawan.c: 1577: bool done = 0;
 30497                           
 30498                           ;incstack = 0
 30499  004BAC  0E00               	movlw	0
 30500  004BAE  0100               	movlb	0	; () banked
 30501  004BB0  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 30502                           
 30503                           ; BSR set to: 0
 30504                           ;lorawan.c: 1578: uint8_t *ptr;
 30505                           ;lorawan.c: 1579: ptr = buffer;
 30506  004BB2  C0B0  F0B6         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 30507  004BB6  C0B1  F0B7         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 30508                           
 30509                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 30510  004BBA  D15A               	goto	l2330
 30511  004BBC                     
 30512                           ; BSR set to: 0
 30513                           ;lorawan.c: 1581: {
 30514                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 30515                           
 30516                           ; BSR set to: 0
 30517  004BBC  0102               	movlb	2	; () banked
 30518  004BBE  51AB               	movf	(_loRa+167)& (0+255),w,b
 30519  004BC0  0D02               	mullw	2
 30520  004BC2  0E04               	movlw	low _loRa
 30521  004BC4  0100               	movlb	0	; () banked
 30522  004BC6  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30523  004BC8  0E02               	movlw	high _loRa
 30524  004BCA  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30525  004BCC  0EA8               	movlw	168
 30526  004BCE  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30527  004BD0  0E00               	movlw	0
 30528  004BD2  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30529  004BD4  50F3               	movf	prodl,w,c
 30530  004BD6  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30531  004BD8  50F4               	movf	prodh,w,c
 30532  004BDA  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30533  004BDC  0E01               	movlw	1
 30534  004BDE  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30535  004BE0  6ED9               	movwf	fsr2l,c
 30536  004BE2  0E00               	movlw	0
 30537  004BE4  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30538  004BE6  6EDA               	movwf	fsr2h,c
 30539  004BE8  0102               	movlb	2	; () banked
 30540  004BEA  90DF               	bcf	indf2,0,c
 30541                           
 30542                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 30543  004BEC  51AB               	movf	(_loRa+167)& (0+255),w,b
 30544  004BEE  0D02               	mullw	2
 30545  004BF0  0E04               	movlw	low _loRa
 30546  004BF2  0100               	movlb	0	; () banked
 30547  004BF4  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30548  004BF6  0E02               	movlw	high _loRa
 30549  004BF8  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30550  004BFA  0EA8               	movlw	168
 30551  004BFC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30552  004BFE  0E00               	movlw	0
 30553  004C00  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30554  004C02  50F3               	movf	prodl,w,c
 30555  004C04  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30556  004C06  50F4               	movf	prodh,w,c
 30557  004C08  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30558  004C0A  0E01               	movlw	1
 30559  004C0C  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30560  004C0E  6ED9               	movwf	fsr2l,c
 30561  004C10  0E00               	movlw	0
 30562  004C12  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30563  004C14  6EDA               	movwf	fsr2h,c
 30564  004C16  0102               	movlb	2	; () banked
 30565  004C18  92DF               	bcf	indf2,1,c
 30566                           
 30567                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 30568  004C1A  51AB               	movf	(_loRa+167)& (0+255),w,b
 30569  004C1C  0D02               	mullw	2
 30570  004C1E  0E04               	movlw	low _loRa
 30571  004C20  0100               	movlb	0	; () banked
 30572  004C22  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30573  004C24  0E02               	movlw	high _loRa
 30574  004C26  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30575  004C28  0EA8               	movlw	168
 30576  004C2A  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30577  004C2C  0E00               	movlw	0
 30578  004C2E  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30579  004C30  50F3               	movf	prodl,w,c
 30580  004C32  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30581  004C34  50F4               	movf	prodh,w,c
 30582  004C36  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30583  004C38  0E01               	movlw	1
 30584  004C3A  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30585  004C3C  6ED9               	movwf	fsr2l,c
 30586  004C3E  0E00               	movlw	0
 30587  004C40  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30588  004C42  6EDA               	movwf	fsr2h,c
 30589  004C44  0102               	movlb	2	; () banked
 30590  004C46  94DF               	bcf	indf2,2,c
 30591                           
 30592                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 30593  004C48  51AB               	movf	(_loRa+167)& (0+255),w,b
 30594  004C4A  0D02               	mullw	2
 30595  004C4C  0E04               	movlw	low _loRa
 30596  004C4E  0100               	movlb	0	; () banked
 30597  004C50  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30598  004C52  0E02               	movlw	high _loRa
 30599  004C54  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30600  004C56  0EA8               	movlw	168
 30601  004C58  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30602  004C5A  0E00               	movlw	0
 30603  004C5C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30604  004C5E  50F3               	movf	prodl,w,c
 30605  004C60  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30606  004C62  50F4               	movf	prodh,w,c
 30607  004C64  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30608  004C66  0E01               	movlw	1
 30609  004C68  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30610  004C6A  6ED9               	movwf	fsr2l,c
 30611  004C6C  0E00               	movlw	0
 30612  004C6E  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30613  004C70  6EDA               	movwf	fsr2h,c
 30614  004C72  0102               	movlb	2	; () banked
 30615  004C74  96DF               	bcf	indf2,3,c
 30616                           
 30617                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 30618  004C76  51AB               	movf	(_loRa+167)& (0+255),w,b
 30619  004C78  0D02               	mullw	2
 30620  004C7A  0E04               	movlw	low _loRa
 30621  004C7C  0100               	movlb	0	; () banked
 30622  004C7E  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30623  004C80  0E02               	movlw	high _loRa
 30624  004C82  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30625  004C84  0EA8               	movlw	168
 30626  004C86  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30627  004C88  0E00               	movlw	0
 30628  004C8A  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30629  004C8C  50F3               	movf	prodl,w,c
 30630  004C8E  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30631  004C90  50F4               	movf	prodh,w,c
 30632  004C92  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30633  004C94  0E01               	movlw	1
 30634  004C96  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30635  004C98  6ED9               	movwf	fsr2l,c
 30636  004C9A  0E00               	movlw	0
 30637  004C9C  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30638  004C9E  6EDA               	movwf	fsr2h,c
 30639  004CA0  0102               	movlb	2	; () banked
 30640  004CA2  98DF               	bcf	indf2,4,c
 30641                           
 30642                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 30643  004CA4  51AB               	movf	(_loRa+167)& (0+255),w,b
 30644  004CA6  0D02               	mullw	2
 30645  004CA8  0E04               	movlw	low _loRa
 30646  004CAA  0100               	movlb	0	; () banked
 30647  004CAC  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30648  004CAE  0E02               	movlw	high _loRa
 30649  004CB0  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30650  004CB2  0EA8               	movlw	168
 30651  004CB4  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30652  004CB6  0E00               	movlw	0
 30653  004CB8  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30654  004CBA  50F3               	movf	prodl,w,c
 30655  004CBC  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30656  004CBE  50F4               	movf	prodh,w,c
 30657  004CC0  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30658  004CC2  0E01               	movlw	1
 30659  004CC4  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30660  004CC6  6ED9               	movwf	fsr2l,c
 30661  004CC8  0E00               	movlw	0
 30662  004CCA  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30663  004CCC  6EDA               	movwf	fsr2h,c
 30664  004CCE  0102               	movlb	2	; () banked
 30665  004CD0  9ADF               	bcf	indf2,5,c
 30666                           
 30667                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 30668  004CD2  51AB               	movf	(_loRa+167)& (0+255),w,b
 30669  004CD4  0D02               	mullw	2
 30670  004CD6  0E04               	movlw	low _loRa
 30671  004CD8  0100               	movlb	0	; () banked
 30672  004CDA  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30673  004CDC  0E02               	movlw	high _loRa
 30674  004CDE  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30675  004CE0  0EA8               	movlw	168
 30676  004CE2  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30677  004CE4  0E00               	movlw	0
 30678  004CE6  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30679  004CE8  50F3               	movf	prodl,w,c
 30680  004CEA  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30681  004CEC  50F4               	movf	prodh,w,c
 30682  004CEE  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30683  004CF0  0E01               	movlw	1
 30684  004CF2  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30685  004CF4  6ED9               	movwf	fsr2l,c
 30686  004CF6  0E00               	movlw	0
 30687  004CF8  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30688  004CFA  6EDA               	movwf	fsr2h,c
 30689  004CFC  0102               	movlb	2	; () banked
 30690  004CFE  9CDF               	bcf	indf2,6,c
 30691                           
 30692                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 30693  004D00  51AB               	movf	(_loRa+167)& (0+255),w,b
 30694  004D02  0D02               	mullw	2
 30695  004D04  0E04               	movlw	low _loRa
 30696  004D06  0100               	movlb	0	; () banked
 30697  004D08  6FB3               	movwf	??_MacExecuteCommands& (0+255),b
 30698  004D0A  0E02               	movlw	high _loRa
 30699  004D0C  6FB4               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 30700  004D0E  0EA8               	movlw	168
 30701  004D10  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30702  004D12  0E00               	movlw	0
 30703  004D14  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30704  004D16  50F3               	movf	prodl,w,c
 30705  004D18  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30706  004D1A  50F4               	movf	prodh,w,c
 30707  004D1C  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30708  004D1E  0E01               	movlw	1
 30709  004D20  25B3               	addwf	??_MacExecuteCommands& (0+255),w,b
 30710  004D22  6ED9               	movwf	fsr2l,c
 30711  004D24  0E00               	movlw	0
 30712  004D26  21B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 30713  004D28  6EDA               	movwf	fsr2h,c
 30714  004D2A  0102               	movlb	2	; () banked
 30715  004D2C  9EDF               	bcf	indf2,7,c
 30716                           
 30717                           ; BSR set to: 2
 30718                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 30719  004D2E  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 30720  004D32  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 30721  004D36  51AB               	movf	(_loRa+167)& (0+255),w,b
 30722  004D38  0D02               	mullw	2
 30723  004D3A  0EAC               	movlw	low (_loRa+168)
 30724  004D3C  24F3               	addwf	prodl,w,c
 30725  004D3E  6EE9               	movwf	fsr0l,c
 30726  004D40  0E02               	movlw	high (_loRa+168)
 30727  004D42  20F4               	addwfc	prodh,w,c
 30728  004D44  6EEA               	movwf	fsr0h,c
 30729  004D46  CFDF FFEF          	movff	indf2,indf0
 30730                           
 30731                           ;lorawan.c: 1595: switch (*ptr ++)
 30732  004D4A  D064               	goto	l2320
 30733  004D4C                     
 30734                           ;lorawan.c: 1598: {
 30735                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 30736                           
 30737                           ; BSR set to: 2
 30738  004D4C  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 30739  004D50  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 30740  004D54  EC5E  F05C         	call	_ExecuteLinkCheck
 30741  004D58  C060  F0B6         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 30742  004D5C  C061  F0B7         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 30743  004D60  D04D               	goto	l19742
 30744  004D62                     
 30745                           ;lorawan.c: 1605: {
 30746                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 30747                           
 30748                           ; BSR set to: 2
 30749  004D62  C0B6  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 30750  004D66  C0B7  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 30751  004D6A  EC51  F027         	call	_ExecuteLinkAdr	;wreg free
 30752  004D6E  C06F  F0B6         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 30753  004D72  C070  F0B7         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 30754                           
 30755                           ;lorawan.c: 1607: } break;
 30756  004D76  D06C               	goto	l2322
 30757  004D78                     
 30758                           ;lorawan.c: 1610: {
 30759                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 30760  004D78  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 30761  004D7C  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 30762  004D80  ECF1  F057         	call	_ExecuteDutyCycle	;wreg free
 30763  004D84  C060  F0B6         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 30764  004D88  C061  F0B7         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 30765                           
 30766                           ;lorawan.c: 1612: } break;
 30767  004D8C  D061               	goto	l2322
 30768  004D8E                     
 30769                           ;lorawan.c: 1615: {
 30770                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 30771  004D8E  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 30772  004D92  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 30773  004D96  EC16  F030         	call	_ExecuteRxParamSetupReq	;wreg free
 30774  004D9A  C0A6  F0B6         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 30775  004D9E  C0A7  F0B7         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 30776                           
 30777                           ;lorawan.c: 1617: } break;
 30778  004DA2  D056               	goto	l2322
 30779  004DA4                     
 30780                           ;lorawan.c: 1620: {
 30781                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 30782  004DA4  C0B6  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 30783  004DA8  C0B7  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 30784  004DAC  ECD0  F062         	call	_ExecuteDevStatus	;wreg free
 30785  004DB0  C060  F0B6         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 30786  004DB4  C061  F0B7         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 30787                           
 30788                           ;lorawan.c: 1622: } break;
 30789  004DB8  D04B               	goto	l2322
 30790  004DBA                     
 30791                           ;lorawan.c: 1625: {
 30792                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 30793  004DBA  C0B6  F0A6         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 30794  004DBE  C0B7  F0A7         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 30795  004DC2  ECAA  F02C         	call	_ExecuteNewChannel	;wreg free
 30796  004DC6  C0A6  F0B6         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 30797  004DCA  C0A7  F0B7         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 30798                           
 30799                           ;lorawan.c: 1628: } break;
 30800  004DCE  D040               	goto	l2322
 30801  004DD0                     
 30802                           ;lorawan.c: 1631: {
 30803                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 30804  004DD0  C0B6  F075         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 30805  004DD4  C0B7  F076         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 30806  004DD8  EC6A  F05E         	call	_ExecuteRxTimingSetup	;wreg free
 30807  004DDC  C075  F0B6         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 30808  004DE0  C076  F0B7         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 30809                           
 30810                           ;lorawan.c: 1633: } break;
 30811  004DE4  D035               	goto	l2322
 30812  004DE6                     
 30813                           ;lorawan.c: 1636: {
 30814                           ;lorawan.c: 1637: done = 1;
 30815  004DE6  0E01               	movlw	1
 30816  004DE8  0100               	movlb	0	; () banked
 30817  004DEA  6FB5               	movwf	MacExecuteCommands@done& (0+255),b
 30818                           
 30819                           ; BSR set to: 0
 30820                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 30821  004DEC  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 30822  004DEE  0D01               	mullw	1
 30823  004DF0  50F3               	movf	prodl,w,c
 30824  004DF2  25B0               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 30825  004DF4  6FB6               	movwf	MacExecuteCommands@ptr& (0+255),b
 30826  004DF6  50F4               	movf	prodh,w,c
 30827  004DF8  21B1               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 30828  004DFA  6FB7               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 30829  004DFC                     l19742:
 30830                           
 30831                           ; BSR set to: 0
 30832                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 30833  004DFC  0102               	movlb	2	; () banked
 30834  004DFE  51AB               	movf	(_loRa+167)& (0+255),w,b
 30835  004E00  0D02               	mullw	2
 30836  004E02  0EAC               	movlw	low (_loRa+168)
 30837  004E04  24F3               	addwf	prodl,w,c
 30838  004E06  6ED9               	movwf	fsr2l,c
 30839  004E08  0E02               	movlw	high (_loRa+168)
 30840  004E0A  20F4               	addwfc	prodh,w,c
 30841  004E0C  6EDA               	movwf	fsr2h,c
 30842  004E0E  0EFF               	movlw	255
 30843  004E10  6EDF               	movwf	indf2,c
 30844                           
 30845                           ; BSR set to: 2
 30846                           ;lorawan.c: 1641: }
 30847                           
 30848                           ;lorawan.c: 1640: } break;
 30849  004E12  D01E               	goto	l2322
 30850  004E14                     l2320:
 30851                           
 30852                           ; BSR set to: 2
 30853                           
 30854                           ; BSR set to: 2
 30855  004E14  C0B6  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 30856  004E18  C0B7  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 30857  004E1C  0100               	movlb	0	; () banked
 30858  004E1E  4BB6               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 30859  004E20  2BB7               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 30860  004E22  50DF               	movf	indf2,w,c
 30861                           
 30862                           ; Switch size 1, requested type "space"
 30863                           ; Number of cases is 7, Range of values is 2 to 8
 30864                           ; switch strategies available:
 30865                           ; Name         Instructions Cycles
 30866                           ; simple_byte           22    12 (average)
 30867                           ;	Chosen strategy is simple_byte
 30868  004E24  0A02               	xorlw	2	; case 2
 30869  004E26  B4D8               	btfsc	status,2,c
 30870  004E28  D791               	goto	l2321
 30871  004E2A  0A01               	xorlw	1	; case 3
 30872  004E2C  B4D8               	btfsc	status,2,c
 30873  004E2E  D799               	goto	l2323
 30874  004E30  0A07               	xorlw	7	; case 4
 30875  004E32  B4D8               	btfsc	status,2,c
 30876  004E34  D7A1               	goto	l2324
 30877  004E36  0A01               	xorlw	1	; case 5
 30878  004E38  B4D8               	btfsc	status,2,c
 30879  004E3A  D7A9               	goto	l2325
 30880  004E3C  0A03               	xorlw	3	; case 6
 30881  004E3E  B4D8               	btfsc	status,2,c
 30882  004E40  D7B1               	goto	l2326
 30883  004E42  0A01               	xorlw	1	; case 7
 30884  004E44  B4D8               	btfsc	status,2,c
 30885  004E46  D7B9               	goto	l2327
 30886  004E48  0A0F               	xorlw	15	; case 8
 30887  004E4A  B4D8               	btfsc	status,2,c
 30888  004E4C  D7C1               	goto	l2328
 30889  004E4E  D7CB               	goto	l2329
 30890  004E50                     l2322:
 30891                           
 30892                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 30893                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 30894                           
 30895                           ; BSR set to: 0
 30896  004E50  0102               	movlb	2	; () banked
 30897  004E52  51AB               	movf	(_loRa+167)& (0+255),w,b
 30898  004E54  0D02               	mullw	2
 30899  004E56  0EAC               	movlw	low (_loRa+168)
 30900  004E58  24F3               	addwf	prodl,w,c
 30901  004E5A  6ED9               	movwf	fsr2l,c
 30902  004E5C  0E02               	movlw	high (_loRa+168)
 30903  004E5E  20F4               	addwfc	prodh,w,c
 30904  004E60  6EDA               	movwf	fsr2h,c
 30905  004E62  28DE               	incf	postinc2,w,c
 30906  004E64  B4D8               	btfsc	status,2,c
 30907  004E66  D004               	goto	l2330
 30908                           
 30909                           ; BSR set to: 2
 30910  004E68  0E10               	movlw	16
 30911  004E6A  61AB               	cpfslt	(_loRa+167)& (0+255),b
 30912  004E6C  D001               	goto	l2330
 30913                           
 30914                           ; BSR set to: 2
 30915                           ;lorawan.c: 1645: {
 30916                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 30917  004E6E  2BAB               	incf	(_loRa+167)& (0+255),f,b
 30918  004E70                     l2330:
 30919                           
 30920                           ; BSR set to: 2
 30921                           
 30922                           ; BSR set to: 2
 30923  004E70  0100               	movlb	0	; () banked
 30924  004E72  51B2               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 30925  004E74  0D01               	mullw	1
 30926  004E76  C0B0  F0B3         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 30927  004E7A  C0B1  F0B4         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 30928  004E7E  50F3               	movf	prodl,w,c
 30929  004E80  27B3               	addwf	??_MacExecuteCommands& (0+255),f,b
 30930  004E82  50F4               	movf	prodh,w,c
 30931  004E84  23B4               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 30932  004E86  51B3               	movf	??_MacExecuteCommands& (0+255),w,b
 30933  004E88  5DB6               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 30934  004E8A  51B4               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 30935  004E8C  59B7               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 30936  004E8E  B0D8               	btfsc	status,0,c
 30937  004E90  D003               	goto	u22580
 30938                           
 30939                           ; BSR set to: 0
 30940  004E92  51B5               	movf	MacExecuteCommands@done& (0+255),w,b
 30941  004E94  B4D8               	btfsc	status,2,c
 30942  004E96  D692               	goto	l2319
 30943  004E98                     u22580:
 30944                           
 30945                           ; BSR set to: 0
 30946                           ;lorawan.c: 1647: }
 30947                           ;lorawan.c: 1648: }
 30948                           ;lorawan.c: 1649: return ptr;
 30949                           
 30950                           ; BSR set to: 0
 30951                           
 30952                           ; BSR set to: 0
 30953  004E98  C0B6  F0B0         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 30954  004E9C  C0B7  F0B1         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 30955  004EA0  0012               	return	
 30956  004EA2                     __end_of_MacExecuteCommands:
 30957                           	opt stack 0
 30958                           tosu	equ	0xFFF
 30959                           tosh	equ	0xFFE
 30960                           tosl	equ	0xFFD
 30961                           pclath	equ	0xFFA
 30962                           tblptru	equ	0xFF8
 30963                           tblptrh	equ	0xFF7
 30964                           tblptrl	equ	0xFF6
 30965                           tablat	equ	0xFF5
 30966                           prodh	equ	0xFF4
 30967                           prodl	equ	0xFF3
 30968                           intcon	equ	0xFF2
 30969                           intcon2	equ	0xFF1
 30970                           intcon3	equ	0xFF0
 30971                           indf0	equ	0xFEF
 30972                           postinc0	equ	0xFEE
 30973                           fsr0h	equ	0xFEA
 30974                           fsr0l	equ	0xFE9
 30975                           wreg	equ	0xFE8
 30976                           postinc1	equ	0xFE6
 30977                           postdec1	equ	0xFE5
 30978                           plusw1	equ	0xFE3
 30979                           fsr1h	equ	0xFE2
 30980                           fsr1l	equ	0xFE1
 30981                           indf2	equ	0xFDF
 30982                           postinc2	equ	0xFDE
 30983                           postdec2	equ	0xFDD
 30984                           fsr2h	equ	0xFDA
 30985                           fsr2l	equ	0xFD9
 30986                           status	equ	0xFD8
 30987                           
 30988 ;; *************** function _ExecuteRxTimingSetup *****************
 30989 ;; Defined at:
 30990 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 30991 ;; Parameters:    Size  Location     Type
 30992 ;;  ptr             2   21[BANK0 ] PTR unsigned char 
 30993 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 30994 ;; Auto vars:     Size  Location     Type
 30995 ;;  delay           1   23[BANK0 ] unsigned char 
 30996 ;; Return value:  Size  Location     Type
 30997 ;;                  2   21[BANK0 ] PTR unsigned char 
 30998 ;; Registers used:
 30999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31000 ;; Tracked objects:
 31001 ;;		On entry : 0/0
 31002 ;;		On exit  : 0/0
 31003 ;;		Unchanged: 0/0
 31004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31005 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31009 ;;Total ram usage:        3 bytes
 31010 ;; Hardware stack levels used:    1
 31011 ;; Hardware stack levels required when called:    9
 31012 ;; This function calls:
 31013 ;;		_UpdateReceiveDelays
 31014 ;; This function is called by:
 31015 ;;		_MacExecuteCommands
 31016 ;; This function uses a non-reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text174
 31020  00BCD4                     __ptext174:
 31021                           	opt stack 0
 31022  00BCD4                     _ExecuteRxTimingSetup:
 31023                           	opt stack 16
 31024                           
 31025                           ;lorawan.c: 1661: uint8_t delay;
 31026                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 31027                           
 31028                           ; BSR set to: 0
 31029                           ;incstack = 0
 31030  00BCD4  C075  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 31031  00BCD8  C076  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 31032  00BCDC  50DF               	movf	indf2,w,c
 31033  00BCDE  0B0F               	andlw	15
 31034  00BCE0  0100               	movlb	0	; () banked
 31035  00BCE2  6F77               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 31036                           
 31037                           ; BSR set to: 0
 31038                           ;lorawan.c: 1664: ptr++;
 31039  00BCE4  4B75               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 31040  00BCE6  2B76               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 31044  00BCE8  5177               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 31045  00BCEA  EC3A  F05B         	call	_UpdateReceiveDelays
 31046                           
 31047                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 31048  00BCEE  0102               	movlb	2	; () banked
 31049  00BCF0  8108               	bsf	(_loRa+4)& (0+255),0,b
 31050                           
 31051                           ; BSR set to: 2
 31052                           ;lorawan.c: 1669: return ptr;
 31053  00BCF2  C075  F075         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 31054  00BCF6  C076  F076         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 31055  00BCFA  0012               	return	
 31056  00BCFC                     __end_of_ExecuteRxTimingSetup:
 31057                           	opt stack 0
 31058                           tosu	equ	0xFFF
 31059                           tosh	equ	0xFFE
 31060                           tosl	equ	0xFFD
 31061                           pclath	equ	0xFFA
 31062                           tblptru	equ	0xFF8
 31063                           tblptrh	equ	0xFF7
 31064                           tblptrl	equ	0xFF6
 31065                           tablat	equ	0xFF5
 31066                           prodh	equ	0xFF4
 31067                           prodl	equ	0xFF3
 31068                           intcon	equ	0xFF2
 31069                           intcon2	equ	0xFF1
 31070                           intcon3	equ	0xFF0
 31071                           indf0	equ	0xFEF
 31072                           postinc0	equ	0xFEE
 31073                           fsr0h	equ	0xFEA
 31074                           fsr0l	equ	0xFE9
 31075                           wreg	equ	0xFE8
 31076                           postinc1	equ	0xFE6
 31077                           postdec1	equ	0xFE5
 31078                           plusw1	equ	0xFE3
 31079                           fsr1h	equ	0xFE2
 31080                           fsr1l	equ	0xFE1
 31081                           indf2	equ	0xFDF
 31082                           postinc2	equ	0xFDE
 31083                           postdec2	equ	0xFDD
 31084                           fsr2h	equ	0xFDA
 31085                           fsr2l	equ	0xFD9
 31086                           status	equ	0xFD8
 31087                           
 31088 ;; *************** function _UpdateReceiveDelays *****************
 31089 ;; Defined at:
 31090 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31091 ;; Parameters:    Size  Location     Type
 31092 ;;  delay           1    wreg     unsigned char 
 31093 ;; Auto vars:     Size  Location     Type
 31094 ;;  delay           1   20[BANK0 ] unsigned char 
 31095 ;; Return value:  Size  Location     Type
 31096 ;;                  1    wreg      void 
 31097 ;; Registers used:
 31098 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31099 ;; Tracked objects:
 31100 ;;		On entry : 0/0
 31101 ;;		On exit  : 0/0
 31102 ;;		Unchanged: 0/0
 31103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31108 ;;Total ram usage:        1 bytes
 31109 ;; Hardware stack levels used:    1
 31110 ;; Hardware stack levels required when called:    8
 31111 ;; This function calls:
 31112 ;;		___wmul
 31113 ;; This function is called by:
 31114 ;;		_LORAWAN_RxDone
 31115 ;;		_ExecuteRxTimingSetup
 31116 ;; This function uses a non-reentrant model
 31117 ;;
 31118                           
 31119                           	psect	text175
 31120  00B674                     __ptext175:
 31121                           	opt stack 0
 31122  00B674                     _UpdateReceiveDelays:
 31123                           	opt stack 18
 31124                           
 31125                           ; BSR set to: 2
 31126                           ;incstack = 0
 31127                           ;UpdateReceiveDelays@delay stored from wreg
 31128  00B674  0100               	movlb	0	; () banked
 31129  00B676  6F74               	movwf	UpdateReceiveDelays@delay& (0+255),b
 31130                           
 31131                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 31132  00B678  C074  F06E         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 31133  00B67C  0100               	movlb	0	; () banked
 31134  00B67E  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 31135  00B680  0E03               	movlw	3
 31136  00B682  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31137  00B684  0EE8               	movlw	232
 31138  00B686  6F70               	movwf	___wmul@multiplicand& (0+255),b
 31139  00B688  EC7E  F05E         	call	___wmul	;wreg free
 31140  00B68C  C06E  F298         	movff	?___wmul,_loRa+148
 31141  00B690  C06F  F299         	movff	?___wmul+1,_loRa+149
 31142                           
 31143                           ;lorawan.c: 2029: if (delay == 0)
 31144  00B694  0100               	movlb	0	; () banked
 31145  00B696  5174               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 31146  00B698  A4D8               	btfss	status,2,c
 31147  00B69A  D005               	goto	l2429
 31148                           
 31149                           ; BSR set to: 0
 31150                           ;lorawan.c: 2030: {
 31151                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 31152  00B69C  0E03               	movlw	3
 31153  00B69E  0102               	movlb	2	; () banked
 31154  00B6A0  6F99               	movwf	(_loRa+149)& (0+255),b
 31155  00B6A2  0EE8               	movlw	232
 31156  00B6A4  6F98               	movwf	(_loRa+148)& (0+255),b
 31157  00B6A6                     l2429:
 31158                           
 31159                           ;lorawan.c: 2032: }
 31160                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 31161                           
 31162                           ; BSR set to: 2
 31163  00B6A6  0EE8               	movlw	232
 31164  00B6A8  0102               	movlb	2	; () banked
 31165  00B6AA  2598               	addwf	(_loRa+148)& (0+255),w,b
 31166  00B6AC  6F9A               	movwf	(_loRa+150)& (0+255),b
 31167  00B6AE  0E03               	movlw	3
 31168  00B6B0  2199               	addwfc	(_loRa+149)& (0+255),w,b
 31169  00B6B2  6F9B               	movwf	(_loRa+151)& (0+255),b
 31170                           
 31171                           ; BSR set to: 2
 31172  00B6B4  0012               	return		;funcret
 31173  00B6B6                     __end_of_UpdateReceiveDelays:
 31174                           	opt stack 0
 31175                           tosu	equ	0xFFF
 31176                           tosh	equ	0xFFE
 31177                           tosl	equ	0xFFD
 31178                           pclath	equ	0xFFA
 31179                           tblptru	equ	0xFF8
 31180                           tblptrh	equ	0xFF7
 31181                           tblptrl	equ	0xFF6
 31182                           tablat	equ	0xFF5
 31183                           prodh	equ	0xFF4
 31184                           prodl	equ	0xFF3
 31185                           intcon	equ	0xFF2
 31186                           intcon2	equ	0xFF1
 31187                           intcon3	equ	0xFF0
 31188                           indf0	equ	0xFEF
 31189                           postinc0	equ	0xFEE
 31190                           fsr0h	equ	0xFEA
 31191                           fsr0l	equ	0xFE9
 31192                           wreg	equ	0xFE8
 31193                           postinc1	equ	0xFE6
 31194                           postdec1	equ	0xFE5
 31195                           plusw1	equ	0xFE3
 31196                           fsr1h	equ	0xFE2
 31197                           fsr1l	equ	0xFE1
 31198                           indf2	equ	0xFDF
 31199                           postinc2	equ	0xFDE
 31200                           postdec2	equ	0xFDD
 31201                           fsr2h	equ	0xFDA
 31202                           fsr2l	equ	0xFD9
 31203                           status	equ	0xFD8
 31204                           
 31205 ;; *************** function ___wmul *****************
 31206 ;; Defined at:
 31207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 31208 ;; Parameters:    Size  Location     Type
 31209 ;;  multiplier      2   14[BANK0 ] unsigned int 
 31210 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 31211 ;; Auto vars:     Size  Location     Type
 31212 ;;  product         2   18[BANK0 ] unsigned int 
 31213 ;; Return value:  Size  Location     Type
 31214 ;;                  2   14[BANK0 ] unsigned int 
 31215 ;; Registers used:
 31216 ;;		wreg, status,2, status,0, prodl, prodh
 31217 ;; Tracked objects:
 31218 ;;		On entry : 0/0
 31219 ;;		On exit  : 0/0
 31220 ;;		Unchanged: 0/0
 31221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31225 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31226 ;;Total ram usage:        6 bytes
 31227 ;; Hardware stack levels used:    1
 31228 ;; Hardware stack levels required when called:    7
 31229 ;; This function calls:
 31230 ;;		Nothing
 31231 ;; This function is called by:
 31232 ;;		_UpdateCfList
 31233 ;;		_UpdateReceiveDelays
 31234 ;;		_fround
 31235 ;;		_scale
 31236 ;;		_printf
 31237 ;; This function uses a non-reentrant model
 31238 ;;
 31239                           
 31240                           	psect	text176
 31241  00BCFC                     __ptext176:
 31242                           	opt stack 0
 31243  00BCFC                     ___wmul:
 31244                           	opt stack 21
 31245                           
 31246                           ; BSR set to: 2
 31247                           ;incstack = 0
 31248  00BCFC  0100               	movlb	0	; () banked
 31249  00BCFE  516E               	movf	___wmul@multiplier& (0+255),w,b
 31250  00BD00  0370               	mulwf	___wmul@multiplicand& (0+255),b
 31251  00BD02  CFF3 F072          	movff	prodl,___wmul@product
 31252  00BD06  CFF4 F073          	movff	prodh,___wmul@product+1
 31253  00BD0A  516E               	movf	___wmul@multiplier& (0+255),w,b
 31254  00BD0C  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 31255  00BD0E  50F3               	movf	prodl,w,c
 31256  00BD10  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 31257  00BD12  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 31258  00BD14  0370               	mulwf	___wmul@multiplicand& (0+255),b
 31259  00BD16  50F3               	movf	prodl,w,c
 31260  00BD18  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 31261                           
 31262                           ; BSR set to: 0
 31263  00BD1A  C072  F06E         	movff	___wmul@product,?___wmul
 31264  00BD1E  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 31265  00BD22  0012               	return	
 31266  00BD24                     __end_of___wmul:
 31267                           	opt stack 0
 31268                           tosu	equ	0xFFF
 31269                           tosh	equ	0xFFE
 31270                           tosl	equ	0xFFD
 31271                           pclath	equ	0xFFA
 31272                           tblptru	equ	0xFF8
 31273                           tblptrh	equ	0xFF7
 31274                           tblptrl	equ	0xFF6
 31275                           tablat	equ	0xFF5
 31276                           prodh	equ	0xFF4
 31277                           prodl	equ	0xFF3
 31278                           intcon	equ	0xFF2
 31279                           intcon2	equ	0xFF1
 31280                           intcon3	equ	0xFF0
 31281                           indf0	equ	0xFEF
 31282                           postinc0	equ	0xFEE
 31283                           fsr0h	equ	0xFEA
 31284                           fsr0l	equ	0xFE9
 31285                           wreg	equ	0xFE8
 31286                           postinc1	equ	0xFE6
 31287                           postdec1	equ	0xFE5
 31288                           plusw1	equ	0xFE3
 31289                           fsr1h	equ	0xFE2
 31290                           fsr1l	equ	0xFE1
 31291                           indf2	equ	0xFDF
 31292                           postinc2	equ	0xFDE
 31293                           postdec2	equ	0xFDD
 31294                           fsr2h	equ	0xFDA
 31295                           fsr2l	equ	0xFD9
 31296                           status	equ	0xFD8
 31297                           
 31298 ;; *************** function _ExecuteRxParamSetupReq *****************
 31299 ;; Defined at:
 31300 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31301 ;; Parameters:    Size  Location     Type
 31302 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 31303 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;  frequency       4   74[BANK0 ] unsigned long 
 31306 ;;  dlSettings      1   78[BANK0 ] struct .
 31307 ;; Return value:  Size  Location     Type
 31308 ;;                  2   70[BANK0 ] PTR unsigned char 
 31309 ;; Registers used:
 31310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31311 ;; Tracked objects:
 31312 ;;		On entry : 0/0
 31313 ;;		On exit  : 0/0
 31314 ;;		Unchanged: 0/0
 31315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31317 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31319 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31320 ;;Total ram usage:        9 bytes
 31321 ;; Hardware stack levels used:    1
 31322 ;; Hardware stack levels required when called:    8
 31323 ;; This function calls:
 31324 ;;		_UpdateReceiveWindow2Parameters
 31325 ;;		_ValidateDataRate
 31326 ;;		_ValidateFrequency
 31327 ;;		_ValidateRxOffset
 31328 ;;		___lmul
 31329 ;; This function is called by:
 31330 ;;		_MacExecuteCommands
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text177
 31335  00602C                     __ptext177:
 31336                           	opt stack 0
 31337  00602C                     _ExecuteRxParamSetupReq:
 31338                           	opt stack 17
 31339                           
 31340                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 31341                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 31342                           
 31343                           ; BSR set to: 0
 31344                           ;incstack = 0
 31345  00602C  0E00               	movlw	0
 31346  00602E  0100               	movlb	0	; () banked
 31347  006030  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 31348  006032  0E00               	movlw	0
 31349  006034  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 31350  006036  0E00               	movlw	0
 31351  006038  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 31352  00603A  0E00               	movlw	0
 31353  00603C  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 31354                           
 31355                           ; BSR set to: 0
 31356                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 31357  00603E  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 31358  006042  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 31359  006046  50DF               	movf	indf2,w,c
 31360  006048  6FAE               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 31361                           
 31362                           ; BSR set to: 0
 31363  00604A  4BA6               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 31364  00604C  2BA7               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 31365                           
 31366                           ; BSR set to: 0
 31367                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 31368  00604E  C0A6  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 31369  006052  C0A7  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 31370  006056  0EFF               	movlw	255
 31371  006058  14DE               	andwf	postinc2,w,c
 31372  00605A  6FAA               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 31373  00605C  0EFF               	movlw	255
 31374  00605E  14DE               	andwf	postinc2,w,c
 31375  006060  6FAB               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 31376  006062  0EFF               	movlw	255
 31377  006064  14DE               	andwf	postinc2,w,c
 31378  006066  6FAC               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 31379  006068  0E00               	movlw	0
 31380  00606A  14DE               	andwf	postinc2,w,c
 31381  00606C  6FAD               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 31382                           
 31383                           ; BSR set to: 0
 31384                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 31385  00606E  C0AA  F09A         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 31386  006072  C0AB  F09B         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 31387  006076  C0AC  F09C         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 31388  00607A  C0AD  F09D         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 31389  00607E  0E64               	movlw	100
 31390  006080  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 31391  006082  0E00               	movlw	0
 31392  006084  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31393  006086  0E00               	movlw	0
 31394  006088  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31395  00608A  0E00               	movlw	0
 31396  00608C  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31397  00608E  EC1B  F057         	call	___lmul	;wreg free
 31398  006092  C09A  F0AA         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 31399  006096  C09B  F0AB         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 31400  00609A  C09C  F0AC         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 31401  00609E  C09D  F0AD         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 31402                           
 31403                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 31404  0060A2  0E03               	movlw	3
 31405  0060A4  0100               	movlb	0	; () banked
 31406  0060A6  25A6               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 31407  0060A8  6FA6               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 31408  0060AA  0E00               	movlw	0
 31409  0060AC  21A7               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 31410  0060AE  6FA7               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 31411                           
 31412                           ; BSR set to: 0
 31413                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 31414  0060B0  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 31415  0060B4  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 31416  0060B8  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 31417  0060BC  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 31418  0060C0  EC81  F054         	call	_ValidateFrequency	;wreg free
 31419  0060C4  0900               	iorlw	0
 31420  0060C6  A4D8               	btfss	status,2,c
 31421  0060C8  D018               	goto	l1463
 31422                           
 31423                           ;lorawan_eu.c: 754: {
 31424                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 31425  0060CA  0102               	movlb	2	; () banked
 31426  0060CC  51AB               	movf	(_loRa+167)& (0+255),w,b
 31427  0060CE  0D02               	mullw	2
 31428  0060D0  0E04               	movlw	low _loRa
 31429  0060D2  0100               	movlb	0	; () banked
 31430  0060D4  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31431  0060D6  0E02               	movlw	high _loRa
 31432  0060D8  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31433  0060DA  0EA8               	movlw	168
 31434  0060DC  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31435  0060DE  0E00               	movlw	0
 31436  0060E0  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31437  0060E2  50F3               	movf	prodl,w,c
 31438  0060E4  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31439  0060E6  50F4               	movf	prodh,w,c
 31440  0060E8  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31441  0060EA  0E01               	movlw	1
 31442  0060EC  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31443  0060EE  6ED9               	movwf	fsr2l,c
 31444  0060F0  0E00               	movlw	0
 31445  0060F2  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31446  0060F4  6EDA               	movwf	fsr2h,c
 31447  0060F6  0102               	movlb	2	; () banked
 31448  0060F8  86DF               	bsf	indf2,3,c
 31449  0060FA                     l1463:
 31450                           
 31451                           ;lorawan_eu.c: 756: }
 31452                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 31453                           
 31454                           ; BSR set to: 2
 31455  0060FA  0100               	movlb	0	; () banked
 31456  0060FC  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31457  0060FE  0B0F               	andlw	15
 31458  006100  EC26  F061         	call	_ValidateDataRate
 31459  006104  0900               	iorlw	0
 31460  006106  A4D8               	btfss	status,2,c
 31461  006108  D018               	goto	l1464
 31462                           
 31463                           ;lorawan_eu.c: 759: {
 31464                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 31465  00610A  0102               	movlb	2	; () banked
 31466  00610C  51AB               	movf	(_loRa+167)& (0+255),w,b
 31467  00610E  0D02               	mullw	2
 31468  006110  0E04               	movlw	low _loRa
 31469  006112  0100               	movlb	0	; () banked
 31470  006114  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31471  006116  0E02               	movlw	high _loRa
 31472  006118  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31473  00611A  0EA8               	movlw	168
 31474  00611C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31475  00611E  0E00               	movlw	0
 31476  006120  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31477  006122  50F3               	movf	prodl,w,c
 31478  006124  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31479  006126  50F4               	movf	prodh,w,c
 31480  006128  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31481  00612A  0E01               	movlw	1
 31482  00612C  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31483  00612E  6ED9               	movwf	fsr2l,c
 31484  006130  0E00               	movlw	0
 31485  006132  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31486  006134  6EDA               	movwf	fsr2h,c
 31487  006136  0102               	movlb	2	; () banked
 31488  006138  88DF               	bsf	indf2,4,c
 31489  00613A                     l1464:
 31490                           
 31491                           ;lorawan_eu.c: 761: }
 31492                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 31493                           
 31494                           ; BSR set to: 2
 31495  00613A  0100               	movlb	0	; () banked
 31496  00613C  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31497  00613E  0B07               	andlw	7
 31498  006140  EC1A  F061         	call	_ValidateRxOffset
 31499  006144  0900               	iorlw	0
 31500  006146  A4D8               	btfss	status,2,c
 31501  006148  D018               	goto	l1465
 31502                           
 31503                           ;lorawan_eu.c: 764: {
 31504                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 31505  00614A  0102               	movlb	2	; () banked
 31506  00614C  51AB               	movf	(_loRa+167)& (0+255),w,b
 31507  00614E  0D02               	mullw	2
 31508  006150  0E04               	movlw	low _loRa
 31509  006152  0100               	movlb	0	; () banked
 31510  006154  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31511  006156  0E02               	movlw	high _loRa
 31512  006158  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31513  00615A  0EA8               	movlw	168
 31514  00615C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31515  00615E  0E00               	movlw	0
 31516  006160  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31517  006162  50F3               	movf	prodl,w,c
 31518  006164  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31519  006166  50F4               	movf	prodh,w,c
 31520  006168  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31521  00616A  0E01               	movlw	1
 31522  00616C  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31523  00616E  6ED9               	movwf	fsr2l,c
 31524  006170  0E00               	movlw	0
 31525  006172  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31526  006174  6EDA               	movwf	fsr2h,c
 31527  006176  0102               	movlb	2	; () banked
 31528  006178  8ADF               	bsf	indf2,5,c
 31529  00617A                     l1465:
 31530                           
 31531                           ;lorawan_eu.c: 766: }
 31532                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 31533  00617A  0102               	movlb	2	; () banked
 31534  00617C  51AB               	movf	(_loRa+167)& (0+255),w,b
 31535  00617E  0D02               	mullw	2
 31536  006180  0E04               	movlw	low _loRa
 31537  006182  0100               	movlb	0	; () banked
 31538  006184  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31539  006186  0E02               	movlw	high _loRa
 31540  006188  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31541  00618A  0EA8               	movlw	168
 31542  00618C  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31543  00618E  0E00               	movlw	0
 31544  006190  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31545  006192  50F3               	movf	prodl,w,c
 31546  006194  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31547  006196  50F4               	movf	prodh,w,c
 31548  006198  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31549  00619A  0E01               	movlw	1
 31550  00619C  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31551  00619E  6ED9               	movwf	fsr2l,c
 31552  0061A0  0E00               	movlw	0
 31553  0061A2  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31554  0061A4  6EDA               	movwf	fsr2h,c
 31555  0061A6  0102               	movlb	2	; () banked
 31556  0061A8  A8DF               	btfss	indf2,4,c
 31557  0061AA  D045               	goto	l1466
 31558                           
 31559                           ; BSR set to: 2
 31560  0061AC  51AB               	movf	(_loRa+167)& (0+255),w,b
 31561  0061AE  0D02               	mullw	2
 31562  0061B0  0E04               	movlw	low _loRa
 31563  0061B2  0100               	movlb	0	; () banked
 31564  0061B4  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31565  0061B6  0E02               	movlw	high _loRa
 31566  0061B8  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31567  0061BA  0EA8               	movlw	168
 31568  0061BC  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31569  0061BE  0E00               	movlw	0
 31570  0061C0  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31571  0061C2  50F3               	movf	prodl,w,c
 31572  0061C4  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31573  0061C6  50F4               	movf	prodh,w,c
 31574  0061C8  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31575  0061CA  0E01               	movlw	1
 31576  0061CC  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31577  0061CE  6ED9               	movwf	fsr2l,c
 31578  0061D0  0E00               	movlw	0
 31579  0061D2  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31580  0061D4  6EDA               	movwf	fsr2h,c
 31581  0061D6  0102               	movlb	2	; () banked
 31582  0061D8  A6DF               	btfss	indf2,3,c
 31583  0061DA  D02D               	goto	l1466
 31584                           
 31585                           ; BSR set to: 2
 31586  0061DC  51AB               	movf	(_loRa+167)& (0+255),w,b
 31587  0061DE  0D02               	mullw	2
 31588  0061E0  0E04               	movlw	low _loRa
 31589  0061E2  0100               	movlb	0	; () banked
 31590  0061E4  6FA8               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 31591  0061E6  0E02               	movlw	high _loRa
 31592  0061E8  6FA9               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 31593  0061EA  0EA8               	movlw	168
 31594  0061EC  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31595  0061EE  0E00               	movlw	0
 31596  0061F0  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31597  0061F2  50F3               	movf	prodl,w,c
 31598  0061F4  27A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 31599  0061F6  50F4               	movf	prodh,w,c
 31600  0061F8  23A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 31601  0061FA  0E01               	movlw	1
 31602  0061FC  25A8               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 31603  0061FE  6ED9               	movwf	fsr2l,c
 31604  006200  0E00               	movlw	0
 31605  006202  21A9               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 31606  006204  6EDA               	movwf	fsr2h,c
 31607  006206  0102               	movlb	2	; () banked
 31608  006208  AADF               	btfss	indf2,5,c
 31609  00620A  D015               	goto	l1466
 31610                           
 31611                           ; BSR set to: 2
 31612                           ;lorawan_eu.c: 769: {
 31613                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 31614  00620C  0100               	movlb	0	; () banked
 31615  00620E  39AE               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31616  006210  0B07               	andlw	7
 31617  006212  0102               	movlb	2	; () banked
 31618  006214  6FF3               	movwf	(_loRa+239)& (0+255),b
 31619                           
 31620                           ; BSR set to: 2
 31621                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 31622  006216  C0AA  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 31623  00621A  C0AB  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 31624  00621E  C0AC  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 31625  006222  C0AD  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 31626  006226  0100               	movlb	0	; () banked
 31627  006228  51AE               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 31628  00622A  0B0F               	andlw	15
 31629  00622C  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 31630  00622E  EC5E  F061         	call	_UpdateReceiveWindow2Parameters	;wreg free
 31631                           
 31632                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 31633  006232  0102               	movlb	2	; () banked
 31634  006234  8F07               	bsf	(_loRa+3)& (0+255),7,b
 31635  006236                     l1466:
 31636                           
 31637                           ; BSR set to: 2
 31638                           ;lorawan_eu.c: 773: }
 31639                           ;lorawan_eu.c: 775: return ptr;
 31640                           
 31641                           ; BSR set to: 2
 31642  006236  C0A6  F0A6         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 31643  00623A  C0A7  F0A7         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 31644  00623E  0012               	return	
 31645  006240                     __end_of_ExecuteRxParamSetupReq:
 31646                           	opt stack 0
 31647                           tosu	equ	0xFFF
 31648                           tosh	equ	0xFFE
 31649                           tosl	equ	0xFFD
 31650                           pclath	equ	0xFFA
 31651                           tblptru	equ	0xFF8
 31652                           tblptrh	equ	0xFF7
 31653                           tblptrl	equ	0xFF6
 31654                           tablat	equ	0xFF5
 31655                           prodh	equ	0xFF4
 31656                           prodl	equ	0xFF3
 31657                           intcon	equ	0xFF2
 31658                           intcon2	equ	0xFF1
 31659                           intcon3	equ	0xFF0
 31660                           indf0	equ	0xFEF
 31661                           postinc0	equ	0xFEE
 31662                           fsr0h	equ	0xFEA
 31663                           fsr0l	equ	0xFE9
 31664                           wreg	equ	0xFE8
 31665                           postinc1	equ	0xFE6
 31666                           postdec1	equ	0xFE5
 31667                           plusw1	equ	0xFE3
 31668                           fsr1h	equ	0xFE2
 31669                           fsr1l	equ	0xFE1
 31670                           indf2	equ	0xFDF
 31671                           postinc2	equ	0xFDE
 31672                           postdec2	equ	0xFDD
 31673                           fsr2h	equ	0xFDA
 31674                           fsr2l	equ	0xFD9
 31675                           status	equ	0xFD8
 31676                           
 31677 ;; *************** function _ValidateRxOffset *****************
 31678 ;; Defined at:
 31679 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31680 ;; Parameters:    Size  Location     Type
 31681 ;;  rxOffset        1    wreg     unsigned char 
 31682 ;; Auto vars:     Size  Location     Type
 31683 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 31684 ;;  result          1    1[BANK0 ] enum E7249
 31685 ;; Return value:  Size  Location     Type
 31686 ;;                  1    wreg      enum E7249
 31687 ;; Registers used:
 31688 ;;		wreg, status,2, status,0
 31689 ;; Tracked objects:
 31690 ;;		On entry : 0/0
 31691 ;;		On exit  : 0/0
 31692 ;;		Unchanged: 0/0
 31693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31695 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31698 ;;Total ram usage:        2 bytes
 31699 ;; Hardware stack levels used:    1
 31700 ;; Hardware stack levels required when called:    7
 31701 ;; This function calls:
 31702 ;;		Nothing
 31703 ;; This function is called by:
 31704 ;;		_ExecuteRxParamSetupReq
 31705 ;; This function uses a non-reentrant model
 31706 ;;
 31707                           
 31708                           	psect	text178
 31709  00C234                     __ptext178:
 31710                           	opt stack 0
 31711  00C234                     _ValidateRxOffset:
 31712                           	opt stack 17
 31713                           
 31714                           ; BSR set to: 2
 31715                           ;incstack = 0
 31716                           ;ValidateRxOffset@rxOffset stored from wreg
 31717  00C234  0100               	movlb	0	; () banked
 31718  00C236  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 31719                           
 31720                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 31721  00C238  0E00               	movlw	0
 31722  00C23A  0100               	movlb	0	; () banked
 31723  00C23C  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 31724                           
 31725                           ; BSR set to: 0
 31726                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 31727  00C23E  0E05               	movlw	5
 31728  00C240  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 31729  00C242  D002               	goto	l1561
 31730                           
 31731                           ; BSR set to: 0
 31732                           ;lorawan_eu.c: 1081: {
 31733                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 31734  00C244  0E03               	movlw	3
 31735  00C246  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 31736  00C248                     l1561:
 31737                           
 31738                           ; BSR set to: 0
 31739                           ;lorawan_eu.c: 1083: }
 31740                           ;lorawan_eu.c: 1085: return result;
 31741  00C248  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 31742  00C24A  0012               	return	
 31743  00C24C                     __end_of_ValidateRxOffset:
 31744                           	opt stack 0
 31745                           tosu	equ	0xFFF
 31746                           tosh	equ	0xFFE
 31747                           tosl	equ	0xFFD
 31748                           pclath	equ	0xFFA
 31749                           tblptru	equ	0xFF8
 31750                           tblptrh	equ	0xFF7
 31751                           tblptrl	equ	0xFF6
 31752                           tablat	equ	0xFF5
 31753                           prodh	equ	0xFF4
 31754                           prodl	equ	0xFF3
 31755                           intcon	equ	0xFF2
 31756                           intcon2	equ	0xFF1
 31757                           intcon3	equ	0xFF0
 31758                           indf0	equ	0xFEF
 31759                           postinc0	equ	0xFEE
 31760                           fsr0h	equ	0xFEA
 31761                           fsr0l	equ	0xFE9
 31762                           wreg	equ	0xFE8
 31763                           postinc1	equ	0xFE6
 31764                           postdec1	equ	0xFE5
 31765                           plusw1	equ	0xFE3
 31766                           fsr1h	equ	0xFE2
 31767                           fsr1l	equ	0xFE1
 31768                           indf2	equ	0xFDF
 31769                           postinc2	equ	0xFDE
 31770                           postdec2	equ	0xFDD
 31771                           fsr2h	equ	0xFDA
 31772                           fsr2l	equ	0xFD9
 31773                           status	equ	0xFD8
 31774                           
 31775 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 31776 ;; Defined at:
 31777 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31778 ;; Parameters:    Size  Location     Type
 31779 ;;  frequency       4    0[BANK0 ] unsigned long 
 31780 ;;  dataRate        1    4[BANK0 ] unsigned char 
 31781 ;; Auto vars:     Size  Location     Type
 31782 ;;		None
 31783 ;; Return value:  Size  Location     Type
 31784 ;;                  1    wreg      void 
 31785 ;; Registers used:
 31786 ;;		None
 31787 ;; Tracked objects:
 31788 ;;		On entry : 0/0
 31789 ;;		On exit  : 0/0
 31790 ;;		Unchanged: 0/0
 31791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31792 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31795 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31796 ;;Total ram usage:        5 bytes
 31797 ;; Hardware stack levels used:    1
 31798 ;; Hardware stack levels required when called:    7
 31799 ;; This function calls:
 31800 ;;		Nothing
 31801 ;; This function is called by:
 31802 ;;		_ExecuteRxParamSetupReq
 31803 ;;		_LORAWAN_SetReceiveWindow2Parameters
 31804 ;; This function uses a non-reentrant model
 31805 ;;
 31806                           
 31807                           	psect	text179
 31808  00C2BC                     __ptext179:
 31809                           	opt stack 0
 31810  00C2BC                     _UpdateReceiveWindow2Parameters:
 31811                           	opt stack 17
 31812                           
 31813                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 31814                           
 31815                           ; BSR set to: 0
 31816                           ;incstack = 0
 31817  00C2BC  C064  F220         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 31818                           
 31819                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 31820  00C2C0  C060  F21C         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 31821  00C2C4  C061  F21D         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 31822  00C2C8  C062  F21E         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 31823  00C2CC  C063  F21F         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 31824  00C2D0  0012               	return		;funcret
 31825  00C2D2                     __end_of_UpdateReceiveWindow2Parameters:
 31826                           	opt stack 0
 31827                           tosu	equ	0xFFF
 31828                           tosh	equ	0xFFE
 31829                           tosl	equ	0xFFD
 31830                           pclath	equ	0xFFA
 31831                           tblptru	equ	0xFF8
 31832                           tblptrh	equ	0xFF7
 31833                           tblptrl	equ	0xFF6
 31834                           tablat	equ	0xFF5
 31835                           prodh	equ	0xFF4
 31836                           prodl	equ	0xFF3
 31837                           intcon	equ	0xFF2
 31838                           intcon2	equ	0xFF1
 31839                           intcon3	equ	0xFF0
 31840                           indf0	equ	0xFEF
 31841                           postinc0	equ	0xFEE
 31842                           fsr0h	equ	0xFEA
 31843                           fsr0l	equ	0xFE9
 31844                           wreg	equ	0xFE8
 31845                           postinc1	equ	0xFE6
 31846                           postdec1	equ	0xFE5
 31847                           plusw1	equ	0xFE3
 31848                           fsr1h	equ	0xFE2
 31849                           fsr1l	equ	0xFE1
 31850                           indf2	equ	0xFDF
 31851                           postinc2	equ	0xFDE
 31852                           postdec2	equ	0xFDD
 31853                           fsr2h	equ	0xFDA
 31854                           fsr2l	equ	0xFD9
 31855                           status	equ	0xFD8
 31856                           
 31857 ;; *************** function _ExecuteNewChannel *****************
 31858 ;; Defined at:
 31859 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31860 ;; Parameters:    Size  Location     Type
 31861 ;;  ptr             2   70[BANK0 ] PTR unsigned char 
 31862 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 31863 ;; Auto vars:     Size  Location     Type
 31864 ;;  frequency       4   75[BANK0 ] unsigned long 
 31865 ;;  channelIndex    1   79[BANK0 ] unsigned char 
 31866 ;;  drRange         1   74[BANK0 ] struct .
 31867 ;; Return value:  Size  Location     Type
 31868 ;;                  2   70[BANK0 ] PTR unsigned char 
 31869 ;; Registers used:
 31870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31871 ;; Tracked objects:
 31872 ;;		On entry : 0/0
 31873 ;;		On exit  : 0/0
 31874 ;;		Unchanged: 0/0
 31875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31877 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31879 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31880 ;;Total ram usage:       10 bytes
 31881 ;; Hardware stack levels used:    1
 31882 ;; Hardware stack levels required when called:    9
 31883 ;; This function calls:
 31884 ;;		_LORAWAN_SetChannelIdStatus
 31885 ;;		_UpdateChannelIdStatus
 31886 ;;		_UpdateDataRange
 31887 ;;		_UpdateDutyCycle
 31888 ;;		_UpdateFrequency
 31889 ;;		_ValidateChannelId
 31890 ;;		_ValidateDataRange
 31891 ;;		_ValidateFrequency
 31892 ;;		___lmul
 31893 ;; This function is called by:
 31894 ;;		_MacExecuteCommands
 31895 ;; This function uses a non-reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text180
 31899  005954                     __ptext180:
 31900                           	opt stack 0
 31901  005954                     _ExecuteNewChannel:
 31902                           	opt stack 16
 31903                           
 31904                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 31905                           ;lorawan_eu.c: 680: DataRange_t drRange;
 31906                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 31907                           
 31908                           ;incstack = 0
 31909  005954  0E00               	movlw	0
 31910  005956  0100               	movlb	0	; () banked
 31911  005958  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 31912  00595A  0E00               	movlw	0
 31913  00595C  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 31914  00595E  0E00               	movlw	0
 31915  005960  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 31916  005962  0E00               	movlw	0
 31917  005964  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 31918                           
 31919                           ; BSR set to: 0
 31920                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 31921  005966  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 31922  00596A  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 31923  00596E  50DF               	movf	indf2,w,c
 31924  005970  6FAF               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 31925                           
 31926                           ; BSR set to: 0
 31927  005972  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 31928  005974  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 31929                           
 31930                           ; BSR set to: 0
 31931                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 31932  005976  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 31933  00597A  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 31934  00597E  0EFF               	movlw	255
 31935  005980  14DE               	andwf	postinc2,w,c
 31936  005982  6FAB               	movwf	ExecuteNewChannel@frequency& (0+255),b
 31937  005984  0EFF               	movlw	255
 31938  005986  14DE               	andwf	postinc2,w,c
 31939  005988  6FAC               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 31940  00598A  0EFF               	movlw	255
 31941  00598C  14DE               	andwf	postinc2,w,c
 31942  00598E  6FAD               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 31943  005990  0E00               	movlw	0
 31944  005992  14DE               	andwf	postinc2,w,c
 31945  005994  6FAE               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 31949  005996  C0AB  F09A         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 31950  00599A  C0AC  F09B         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 31951  00599E  C0AD  F09C         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 31952  0059A2  C0AE  F09D         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 31953  0059A6  0E64               	movlw	100
 31954  0059A8  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 31955  0059AA  0E00               	movlw	0
 31956  0059AC  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31957  0059AE  0E00               	movlw	0
 31958  0059B0  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31959  0059B2  0E00               	movlw	0
 31960  0059B4  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31961  0059B6  EC1B  F057         	call	___lmul	;wreg free
 31962  0059BA  C09A  F0AB         	movff	?___lmul,ExecuteNewChannel@frequency
 31963  0059BE  C09B  F0AC         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 31964  0059C2  C09C  F0AD         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 31965  0059C6  C09D  F0AE         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 31966                           
 31967                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 31968  0059CA  0E03               	movlw	3
 31969  0059CC  0100               	movlb	0	; () banked
 31970  0059CE  25A6               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 31971  0059D0  6FA6               	movwf	ExecuteNewChannel@ptr& (0+255),b
 31972  0059D2  0E00               	movlw	0
 31973  0059D4  21A7               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 31974  0059D6  6FA7               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 31978  0059D8  C0A6  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 31979  0059DC  C0A7  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 31980  0059E0  50DF               	movf	indf2,w,c
 31981  0059E2  6FAA               	movwf	ExecuteNewChannel@drRange& (0+255),b
 31982                           
 31983                           ; BSR set to: 0
 31984  0059E4  4BA6               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 31985  0059E6  2BA7               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 31986                           
 31987                           ; BSR set to: 0
 31988                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 31989  0059E8  0E00               	movlw	0
 31990  0059EA  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 31991  0059EC  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 31992  0059EE  ECF3  F05E         	call	_ValidateChannelId
 31993  0059F2  0900               	iorlw	0
 31994  0059F4  A4D8               	btfss	status,2,c
 31995  0059F6  D04B               	goto	l1452
 31996                           
 31997                           ;lorawan_eu.c: 692: {
 31998                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 31999  0059F8  C0AB  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 32000  0059FC  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 32001  005A00  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 32002  005A04  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 32003  005A08  EC81  F054         	call	_ValidateFrequency	;wreg free
 32004  005A0C  0900               	iorlw	0
 32005  005A0E  B4D8               	btfsc	status,2,c
 32006  005A10  D007               	goto	u21580
 32007  005A12  0100               	movlb	0	; () banked
 32008  005A14  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32009  005A16  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32010  005A18  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32011  005A1A  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32012  005A1C  A4D8               	btfss	status,2,c
 32013  005A1E  D018               	goto	l1449
 32014  005A20                     u21580:
 32015                           
 32016                           ;lorawan_eu.c: 694: {
 32017                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 32018                           
 32019                           ; BSR set to: 0
 32020  005A20  0102               	movlb	2	; () banked
 32021  005A22  51AB               	movf	(_loRa+167)& (0+255),w,b
 32022  005A24  0D02               	mullw	2
 32023  005A26  0E04               	movlw	low _loRa
 32024  005A28  0100               	movlb	0	; () banked
 32025  005A2A  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32026  005A2C  0E02               	movlw	high _loRa
 32027  005A2E  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32028  005A30  0EA8               	movlw	168
 32029  005A32  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32030  005A34  0E00               	movlw	0
 32031  005A36  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32032  005A38  50F3               	movf	prodl,w,c
 32033  005A3A  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32034  005A3C  50F4               	movf	prodh,w,c
 32035  005A3E  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32036  005A40  0E01               	movlw	1
 32037  005A42  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32038  005A44  6ED9               	movwf	fsr2l,c
 32039  005A46  0E00               	movlw	0
 32040  005A48  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32041  005A4A  6EDA               	movwf	fsr2h,c
 32042  005A4C  0102               	movlb	2	; () banked
 32043  005A4E  8EDF               	bsf	indf2,7,c
 32044  005A50                     l1449:
 32045                           
 32046                           ;lorawan_eu.c: 696: }
 32047                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 32048                           
 32049                           ; BSR set to: 2
 32050  005A50  0100               	movlb	0	; () banked
 32051  005A52  51AA               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 32052  005A54  ECC3  F059         	call	_ValidateDataRange
 32053  005A58  0900               	iorlw	0
 32054  005A5A  A4D8               	btfss	status,2,c
 32055  005A5C  D018               	goto	l1452
 32056                           
 32057                           ;lorawan_eu.c: 699: {
 32058                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 32059  005A5E  0102               	movlb	2	; () banked
 32060  005A60  51AB               	movf	(_loRa+167)& (0+255),w,b
 32061  005A62  0D02               	mullw	2
 32062  005A64  0E04               	movlw	low _loRa
 32063  005A66  0100               	movlb	0	; () banked
 32064  005A68  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32065  005A6A  0E02               	movlw	high _loRa
 32066  005A6C  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32067  005A6E  0EA8               	movlw	168
 32068  005A70  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32069  005A72  0E00               	movlw	0
 32070  005A74  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32071  005A76  50F3               	movf	prodl,w,c
 32072  005A78  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32073  005A7A  50F4               	movf	prodh,w,c
 32074  005A7C  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32075  005A7E  0E01               	movlw	1
 32076  005A80  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32077  005A82  6ED9               	movwf	fsr2l,c
 32078  005A84  0E00               	movlw	0
 32079  005A86  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32080  005A88  6EDA               	movwf	fsr2h,c
 32081  005A8A  0102               	movlb	2	; () banked
 32082  005A8C  8CDF               	bsf	indf2,6,c
 32083  005A8E                     l1452:
 32084                           
 32085                           ;lorawan_eu.c: 701: }
 32086                           ;lorawan_eu.c: 702: }
 32087                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 32088                           
 32089                           ; BSR set to: 2
 32090  005A8E  0102               	movlb	2	; () banked
 32091  005A90  51AB               	movf	(_loRa+167)& (0+255),w,b
 32092  005A92  0D02               	mullw	2
 32093  005A94  0E04               	movlw	low _loRa
 32094  005A96  0100               	movlb	0	; () banked
 32095  005A98  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32096  005A9A  0E02               	movlw	high _loRa
 32097  005A9C  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32098  005A9E  0EA8               	movlw	168
 32099  005AA0  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32100  005AA2  0E00               	movlw	0
 32101  005AA4  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32102  005AA6  50F3               	movf	prodl,w,c
 32103  005AA8  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32104  005AAA  50F4               	movf	prodh,w,c
 32105  005AAC  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32106  005AAE  0E01               	movlw	1
 32107  005AB0  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32108  005AB2  6ED9               	movwf	fsr2l,c
 32109  005AB4  0E00               	movlw	0
 32110  005AB6  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32111  005AB8  6EDA               	movwf	fsr2h,c
 32112  005ABA  0102               	movlb	2	; () banked
 32113  005ABC  AEDF               	btfss	indf2,7,c
 32114  005ABE  D07D               	goto	l1453
 32115                           
 32116                           ; BSR set to: 2
 32117  005AC0  51AB               	movf	(_loRa+167)& (0+255),w,b
 32118  005AC2  0D02               	mullw	2
 32119  005AC4  0E04               	movlw	low _loRa
 32120  005AC6  0100               	movlb	0	; () banked
 32121  005AC8  6FA8               	movwf	??_ExecuteNewChannel& (0+255),b
 32122  005ACA  0E02               	movlw	high _loRa
 32123  005ACC  6FA9               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 32124  005ACE  0EA8               	movlw	168
 32125  005AD0  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32126  005AD2  0E00               	movlw	0
 32127  005AD4  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32128  005AD6  50F3               	movf	prodl,w,c
 32129  005AD8  27A8               	addwf	??_ExecuteNewChannel& (0+255),f,b
 32130  005ADA  50F4               	movf	prodh,w,c
 32131  005ADC  23A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 32132  005ADE  0E01               	movlw	1
 32133  005AE0  25A8               	addwf	??_ExecuteNewChannel& (0+255),w,b
 32134  005AE2  6ED9               	movwf	fsr2l,c
 32135  005AE4  0E00               	movlw	0
 32136  005AE6  21A9               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 32137  005AE8  6EDA               	movwf	fsr2h,c
 32138  005AEA  0102               	movlb	2	; () banked
 32139  005AEC  ACDF               	btfss	indf2,6,c
 32140  005AEE  D065               	goto	l1453
 32141                           
 32142                           ; BSR set to: 2
 32143                           ;lorawan_eu.c: 705: {
 32144                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 32145  005AF0  0E10               	movlw	16
 32146  005AF2  61DE               	cpfslt	(_loRa+218)& (0+255),b
 32147  005AF4  D02E               	goto	l1454
 32148                           
 32149                           ; BSR set to: 2
 32150                           ;lorawan_eu.c: 707: {
 32151                           ;lorawan_eu.c: 708: if (frequency != 0)
 32152  005AF6  0100               	movlb	0	; () banked
 32153  005AF8  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32154  005AFA  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32155  005AFC  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32156  005AFE  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32157  005B00  B4D8               	btfsc	status,2,c
 32158  005B02  D020               	goto	l1455
 32159                           
 32160                           ; BSR set to: 0
 32161                           ;lorawan_eu.c: 709: {
 32162                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 32163  005B04  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 32164  005B08  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 32165  005B0C  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 32166  005B10  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 32167  005B14  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32168  005B16  EC4D  F05A         	call	_UpdateFrequency
 32169                           
 32170                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 32171  005B1A  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 32172  005B1E  0100               	movlb	0	; () banked
 32173  005B20  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32174  005B22  EC45  F03C         	call	_UpdateDataRange
 32175                           
 32176                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 32177  005B26  0E01               	movlw	1
 32178  005B28  0100               	movlb	0	; () banked
 32179  005B2A  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 32180  005B2C  0E2E               	movlw	46
 32181  005B2E  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 32182  005B30  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32183  005B32  EC6F  F05A         	call	_UpdateDutyCycle
 32184                           
 32185                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 32186  005B36  0E01               	movlw	1
 32187  005B38  0100               	movlb	0	; () banked
 32188  005B3A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 32189  005B3C  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32190  005B3E  EC31  F03A         	call	_UpdateChannelIdStatus
 32191                           
 32192                           ;lorawan_eu.c: 714: }
 32193  005B42  D039               	goto	l1459
 32194  005B44                     l1455:
 32195                           
 32196                           ;lorawan_eu.c: 715: else
 32197                           ;lorawan_eu.c: 716: {
 32198                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 32199  005B44  0E00               	movlw	0
 32200  005B46  0100               	movlb	0	; () banked
 32201  005B48  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 32202  005B4A  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32203  005B4C  ECC1  F056         	call	_LORAWAN_SetChannelIdStatus
 32204                           
 32205                           ;lorawan_eu.c: 718: }
 32206                           ;lorawan_eu.c: 719: }
 32207  005B50  D032               	goto	l1459
 32208  005B52                     l1454:
 32209                           
 32210                           ;lorawan_eu.c: 720: else
 32211                           ;lorawan_eu.c: 721: {
 32212                           ;lorawan_eu.c: 722: if (frequency != 0)
 32213  005B52  0100               	movlb	0	; () banked
 32214  005B54  51AB               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 32215  005B56  11AC               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 32216  005B58  11AD               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 32217  005B5A  11AE               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 32218  005B5C  B4D8               	btfsc	status,2,c
 32219  005B5E  D024               	goto	l1458
 32220                           
 32221                           ; BSR set to: 0
 32222                           ;lorawan_eu.c: 723: {
 32223                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 32224  005B60  C0AB  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 32225  005B64  C0AC  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 32226  005B68  C0AD  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 32227  005B6C  C0AE  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 32228  005B70  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32229  005B72  0F10               	addlw	16
 32230  005B74  EC4D  F05A         	call	_UpdateFrequency
 32231                           
 32232                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 32233  005B78  C0AA  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 32234  005B7C  0100               	movlb	0	; () banked
 32235  005B7E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32236  005B80  0F10               	addlw	16
 32237  005B82  EC45  F03C         	call	_UpdateDataRange
 32238                           
 32239                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 32240  005B86  0E01               	movlw	1
 32241  005B88  0100               	movlb	0	; () banked
 32242  005B8A  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 32243  005B8C  0E2E               	movlw	46
 32244  005B8E  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 32245  005B90  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32246  005B92  0F10               	addlw	16
 32247  005B94  EC6F  F05A         	call	_UpdateDutyCycle
 32248                           
 32249                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 32250  005B98  0E01               	movlw	1
 32251  005B9A  0100               	movlb	0	; () banked
 32252  005B9C  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 32253  005B9E  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32254  005BA0  0F10               	addlw	16
 32255  005BA2  EC31  F03A         	call	_UpdateChannelIdStatus
 32256                           
 32257                           ;lorawan_eu.c: 728: }
 32258  005BA6  D007               	goto	l1459
 32259  005BA8                     l1458:
 32260                           
 32261                           ;lorawan_eu.c: 729: else
 32262                           ;lorawan_eu.c: 730: {
 32263                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 32264  005BA8  0E00               	movlw	0
 32265  005BAA  0100               	movlb	0	; () banked
 32266  005BAC  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 32267  005BAE  51AF               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 32268  005BB0  0F10               	addlw	16
 32269  005BB2  ECC1  F056         	call	_LORAWAN_SetChannelIdStatus
 32270  005BB6                     l1459:
 32271                           
 32272                           ;lorawan_eu.c: 732: }
 32273                           ;lorawan_eu.c: 733: }
 32274                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 32275  005BB6  0102               	movlb	2	; () banked
 32276  005BB8  8707               	bsf	(_loRa+3)& (0+255),3,b
 32277  005BBA                     l1453:
 32278                           
 32279                           ; BSR set to: 2
 32280                           ;lorawan_eu.c: 736: }
 32281                           ;lorawan_eu.c: 737: return ptr;
 32282                           
 32283                           ; BSR set to: 2
 32284  005BBA  C0A6  F0A6         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 32285  005BBE  C0A7  F0A7         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 32286  005BC2  0012               	return	
 32287  005BC4                     __end_of_ExecuteNewChannel:
 32288                           	opt stack 0
 32289                           tosu	equ	0xFFF
 32290                           tosh	equ	0xFFE
 32291                           tosl	equ	0xFFD
 32292                           pclath	equ	0xFFA
 32293                           tblptru	equ	0xFF8
 32294                           tblptrh	equ	0xFF7
 32295                           tblptrl	equ	0xFF6
 32296                           tablat	equ	0xFF5
 32297                           prodh	equ	0xFF4
 32298                           prodl	equ	0xFF3
 32299                           intcon	equ	0xFF2
 32300                           intcon2	equ	0xFF1
 32301                           intcon3	equ	0xFF0
 32302                           indf0	equ	0xFEF
 32303                           postinc0	equ	0xFEE
 32304                           fsr0h	equ	0xFEA
 32305                           fsr0l	equ	0xFE9
 32306                           wreg	equ	0xFE8
 32307                           postinc1	equ	0xFE6
 32308                           postdec1	equ	0xFE5
 32309                           plusw1	equ	0xFE3
 32310                           fsr1h	equ	0xFE2
 32311                           fsr1l	equ	0xFE1
 32312                           indf2	equ	0xFDF
 32313                           postinc2	equ	0xFDE
 32314                           postdec2	equ	0xFDD
 32315                           fsr2h	equ	0xFDA
 32316                           fsr2l	equ	0xFD9
 32317                           status	equ	0xFD8
 32318                           
 32319 ;; *************** function _ValidateFrequency *****************
 32320 ;; Defined at:
 32321 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32322 ;; Parameters:    Size  Location     Type
 32323 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 32324 ;; Auto vars:     Size  Location     Type
 32325 ;;  result          1    4[BANK0 ] enum E7249
 32326 ;; Return value:  Size  Location     Type
 32327 ;;                  1    wreg      enum E7249
 32328 ;; Registers used:
 32329 ;;		wreg, status,2, status,0
 32330 ;; Tracked objects:
 32331 ;;		On entry : 0/0
 32332 ;;		On exit  : 0/0
 32333 ;;		Unchanged: 0/0
 32334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32338 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32339 ;;Total ram usage:        5 bytes
 32340 ;; Hardware stack levels used:    1
 32341 ;; Hardware stack levels required when called:    7
 32342 ;; This function calls:
 32343 ;;		Nothing
 32344 ;; This function is called by:
 32345 ;;		_ExecuteNewChannel
 32346 ;;		_ExecuteRxParamSetupReq
 32347 ;;		_UpdateCfList
 32348 ;;		_LORAWAN_SetReceiveWindow2Parameters
 32349 ;;		_LORAWAN_SetFrequency
 32350 ;; This function uses a non-reentrant model
 32351 ;;
 32352                           
 32353                           	psect	text181
 32354  00A902                     __ptext181:
 32355                           	opt stack 0
 32356  00A902                     _ValidateFrequency:
 32357                           	opt stack 18
 32358                           
 32359                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 32360                           
 32361                           ; BSR set to: 2
 32362                           ;incstack = 0
 32363  00A902  0E00               	movlw	0
 32364  00A904  0100               	movlb	0	; () banked
 32365  00A906  6F64               	movwf	ValidateFrequency@result& (0+255),b
 32366                           
 32367                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 32368  00A908  0102               	movlb	2	; () banked
 32369  00A90A  51A8               	movf	(_loRa+164)& (0+255),w,b
 32370  00A90C  A4D8               	btfss	status,2,c
 32371  00A90E  D013               	goto	l1565
 32372                           
 32373                           ; BSR set to: 2
 32374                           ;lorawan_eu.c: 1093: {
 32375                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 32376  00A910  0E81               	movlw	129
 32377  00A912  0100               	movlb	0	; () banked
 32378  00A914  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32379  00A916  0E25               	movlw	37
 32380  00A918  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32381  00A91A  0EDB               	movlw	219
 32382  00A91C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32383  00A91E  0E33               	movlw	51
 32384  00A920  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32385  00A922  B0D8               	btfsc	status,0,c
 32386  00A924  D01D               	goto	u20570
 32387                           
 32388                           ; BSR set to: 0
 32389  00A926  0EC0               	movlw	192
 32390  00A928  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32391  00A92A  0E55               	movlw	85
 32392  00A92C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32393  00A92E  0E70               	movlw	112
 32394  00A930  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32395  00A932  0E33               	movlw	51
 32396  00A934  D012               	goto	L33
 32397  00A936                     l1565:
 32398                           
 32399                           ;lorawan_eu.c: 1099: else
 32400                           ;lorawan_eu.c: 1100: {
 32401                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 32402                           
 32403                           ; BSR set to: 0
 32404  00A936  0E71               	movlw	113
 32405  00A938  0100               	movlb	0	; () banked
 32406  00A93A  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32407  00A93C  0E5E               	movlw	94
 32408  00A93E  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32409  00A940  0EEA               	movlw	234
 32410  00A942  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32411  00A944  0E19               	movlw	25
 32412  00A946  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32413  00A948  B0D8               	btfsc	status,0,c
 32414  00A94A  D00A               	goto	u20570
 32415                           
 32416                           ; BSR set to: 0
 32417  00A94C  0E90               	movlw	144
 32418  00A94E  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 32419  00A950  0ED1               	movlw	209
 32420  00A952  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 32421  00A954  0ECF               	movlw	207
 32422  00A956  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 32423  00A958  0E19               	movlw	25
 32424  00A95A                     L33:
 32425  00A95A  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 32426  00A95C  B0D8               	btfsc	status,0,c
 32427  00A95E  D002               	goto	l1570
 32428  00A960                     u20570:
 32429                           
 32430                           ; BSR set to: 0
 32431                           ;lorawan_eu.c: 1102: {
 32432                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 32433                           
 32434                           ; BSR set to: 0
 32435  00A960  0E03               	movlw	3
 32436  00A962  6F64               	movwf	ValidateFrequency@result& (0+255),b
 32437  00A964                     l1570:
 32438                           
 32439                           ; BSR set to: 0
 32440                           ;lorawan_eu.c: 1104: }
 32441                           ;lorawan_eu.c: 1105: }
 32442                           ;lorawan_eu.c: 1107: return result;
 32443                           
 32444                           ; BSR set to: 0
 32445  00A964  5164               	movf	ValidateFrequency@result& (0+255),w,b
 32446  00A966  0012               	return	
 32447  00A968                     __end_of_ValidateFrequency:
 32448                           	opt stack 0
 32449                           tosu	equ	0xFFF
 32450                           tosh	equ	0xFFE
 32451                           tosl	equ	0xFFD
 32452                           pclath	equ	0xFFA
 32453                           tblptru	equ	0xFF8
 32454                           tblptrh	equ	0xFF7
 32455                           tblptrl	equ	0xFF6
 32456                           tablat	equ	0xFF5
 32457                           prodh	equ	0xFF4
 32458                           prodl	equ	0xFF3
 32459                           intcon	equ	0xFF2
 32460                           intcon2	equ	0xFF1
 32461                           intcon3	equ	0xFF0
 32462                           indf0	equ	0xFEF
 32463                           postinc0	equ	0xFEE
 32464                           fsr0h	equ	0xFEA
 32465                           fsr0l	equ	0xFE9
 32466                           wreg	equ	0xFE8
 32467                           postinc1	equ	0xFE6
 32468                           postdec1	equ	0xFE5
 32469                           plusw1	equ	0xFE3
 32470                           fsr1h	equ	0xFE2
 32471                           fsr1l	equ	0xFE1
 32472                           indf2	equ	0xFDF
 32473                           postinc2	equ	0xFDE
 32474                           postdec2	equ	0xFDD
 32475                           fsr2h	equ	0xFDA
 32476                           fsr2l	equ	0xFD9
 32477                           status	equ	0xFD8
 32478                           
 32479 ;; *************** function _ValidateDataRange *****************
 32480 ;; Defined at:
 32481 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32482 ;; Parameters:    Size  Location     Type
 32483 ;;  dataRangeNew    1    wreg     unsigned char 
 32484 ;; Auto vars:     Size  Location     Type
 32485 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 32486 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 32487 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 32488 ;;  result          1    2[BANK0 ] enum E7249
 32489 ;; Return value:  Size  Location     Type
 32490 ;;                  1    wreg      enum E7249
 32491 ;; Registers used:
 32492 ;;		wreg, status,2, status,0, cstack
 32493 ;; Tracked objects:
 32494 ;;		On entry : 0/0
 32495 ;;		On exit  : 0/0
 32496 ;;		Unchanged: 0/0
 32497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32499 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32502 ;;Total ram usage:        4 bytes
 32503 ;; Hardware stack levels used:    1
 32504 ;; Hardware stack levels required when called:    8
 32505 ;; This function calls:
 32506 ;;		_ValidateDataRate
 32507 ;; This function is called by:
 32508 ;;		_ExecuteNewChannel
 32509 ;;		_LORAWAN_SetDataRange
 32510 ;; This function uses a non-reentrant model
 32511 ;;
 32512                           
 32513                           	psect	text182
 32514  00B386                     __ptext182:
 32515                           	opt stack 0
 32516  00B386                     _ValidateDataRange:
 32517                           	opt stack 16
 32518                           
 32519                           ; BSR set to: 0
 32520                           ;incstack = 0
 32521                           ;ValidateDataRange@dataRangeNew stored from wreg
 32522  00B386  0100               	movlb	0	; () banked
 32523  00B388  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 32524                           
 32525                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 32526  00B38A  0E00               	movlw	0
 32527  00B38C  0100               	movlb	0	; () banked
 32528  00B38E  6F62               	movwf	ValidateDataRange@result& (0+255),b
 32529                           
 32530                           ; BSR set to: 0
 32531                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 32532                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 32533  00B390  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 32534  00B392  0B0F               	andlw	15
 32535  00B394  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 32536                           
 32537                           ; BSR set to: 0
 32538                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 32539  00B396  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 32540  00B398  0B0F               	andlw	15
 32541  00B39A  0B0F               	andlw	15
 32542  00B39C  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 32543                           
 32544                           ; BSR set to: 0
 32545                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 32546  00B39E  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 32547  00B3A0  EC26  F061         	call	_ValidateDataRate
 32548  00B3A4  0900               	iorlw	0
 32549  00B3A6  A4D8               	btfss	status,2,c
 32550  00B3A8  D00C               	goto	u20600
 32551  00B3AA  0100               	movlb	0	; () banked
 32552  00B3AC  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 32553  00B3AE  EC26  F061         	call	_ValidateDataRate
 32554  00B3B2  0900               	iorlw	0
 32555  00B3B4  A4D8               	btfss	status,2,c
 32556  00B3B6  D005               	goto	u20600
 32557  00B3B8  0100               	movlb	0	; () banked
 32558  00B3BA  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 32559  00B3BC  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 32560  00B3BE  B0D8               	btfsc	status,0,c
 32561  00B3C0  D003               	goto	l1576
 32562  00B3C2                     u20600:
 32563                           
 32564                           ;lorawan_eu.c: 1119: {
 32565                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 32566                           
 32567                           ; BSR set to: 0
 32568  00B3C2  0E03               	movlw	3
 32569  00B3C4  0100               	movlb	0	; () banked
 32570  00B3C6  6F62               	movwf	ValidateDataRange@result& (0+255),b
 32571  00B3C8                     l1576:
 32572                           
 32573                           ; BSR set to: 0
 32574                           ;lorawan_eu.c: 1121: }
 32575                           ;lorawan_eu.c: 1122: return result;
 32576  00B3C8  5162               	movf	ValidateDataRange@result& (0+255),w,b
 32577  00B3CA  0012               	return	
 32578  00B3CC                     __end_of_ValidateDataRange:
 32579                           	opt stack 0
 32580                           tosu	equ	0xFFF
 32581                           tosh	equ	0xFFE
 32582                           tosl	equ	0xFFD
 32583                           pclath	equ	0xFFA
 32584                           tblptru	equ	0xFF8
 32585                           tblptrh	equ	0xFF7
 32586                           tblptrl	equ	0xFF6
 32587                           tablat	equ	0xFF5
 32588                           prodh	equ	0xFF4
 32589                           prodl	equ	0xFF3
 32590                           intcon	equ	0xFF2
 32591                           intcon2	equ	0xFF1
 32592                           intcon3	equ	0xFF0
 32593                           indf0	equ	0xFEF
 32594                           postinc0	equ	0xFEE
 32595                           fsr0h	equ	0xFEA
 32596                           fsr0l	equ	0xFE9
 32597                           wreg	equ	0xFE8
 32598                           postinc1	equ	0xFE6
 32599                           postdec1	equ	0xFE5
 32600                           plusw1	equ	0xFE3
 32601                           fsr1h	equ	0xFE2
 32602                           fsr1l	equ	0xFE1
 32603                           indf2	equ	0xFDF
 32604                           postinc2	equ	0xFDE
 32605                           postdec2	equ	0xFDD
 32606                           fsr2h	equ	0xFDA
 32607                           fsr2l	equ	0xFD9
 32608                           status	equ	0xFD8
 32609                           
 32610 ;; *************** function _UpdateFrequency *****************
 32611 ;; Defined at:
 32612 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32613 ;; Parameters:    Size  Location     Type
 32614 ;;  channelId       1    wreg     unsigned char 
 32615 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 32616 ;; Auto vars:     Size  Location     Type
 32617 ;;  channelId       1    4[BANK0 ] unsigned char 
 32618 ;; Return value:  Size  Location     Type
 32619 ;;                  1    wreg      void 
 32620 ;; Registers used:
 32621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32622 ;; Tracked objects:
 32623 ;;		On entry : 0/0
 32624 ;;		On exit  : 0/0
 32625 ;;		Unchanged: 0/0
 32626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32630 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32631 ;;Total ram usage:        5 bytes
 32632 ;; Hardware stack levels used:    1
 32633 ;; Hardware stack levels required when called:    7
 32634 ;; This function calls:
 32635 ;;		Nothing
 32636 ;; This function is called by:
 32637 ;;		_ExecuteNewChannel
 32638 ;;		_LORAWAN_SetFrequency
 32639 ;; This function uses a non-reentrant model
 32640 ;;
 32641                           
 32642                           	psect	text183
 32643  00B49A                     __ptext183:
 32644                           	opt stack 0
 32645  00B49A                     _UpdateFrequency:
 32646                           	opt stack 17
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;incstack = 0
 32650                           ;UpdateFrequency@channelId stored from wreg
 32651  00B49A  0100               	movlb	0	; () banked
 32652  00B49C  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 32653                           
 32654                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 32655  00B49E  0100               	movlb	0	; () banked
 32656  00B4A0  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 32657  00B4A2  0D0E               	mullw	14
 32658  00B4A4  0E00               	movlw	low _Channels
 32659  00B4A6  24F3               	addwf	prodl,w,c
 32660  00B4A8  6ED9               	movwf	fsr2l,c
 32661  00B4AA  0E04               	movlw	high _Channels
 32662  00B4AC  20F4               	addwfc	prodh,w,c
 32663  00B4AE  6EDA               	movwf	fsr2h,c
 32664  00B4B0  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 32665  00B4B4  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 32666  00B4B8  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 32667  00B4BC  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 32668                           
 32669                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 32670  00B4C0  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 32671  00B4C2  0D0E               	mullw	14
 32672  00B4C4  0E0D               	movlw	13
 32673  00B4C6  26F3               	addwf	prodl,f,c
 32674  00B4C8  0E00               	movlw	0
 32675  00B4CA  22F4               	addwfc	prodh,f,c
 32676  00B4CC  0E00               	movlw	low _Channels
 32677  00B4CE  24F3               	addwf	prodl,w,c
 32678  00B4D0  6ED9               	movwf	fsr2l,c
 32679  00B4D2  0E04               	movlw	high _Channels
 32680  00B4D4  20F4               	addwfc	prodh,w,c
 32681  00B4D6  6EDA               	movwf	fsr2h,c
 32682  00B4D8  0E00               	movlw	0
 32683  00B4DA  80DB               	bsf	plusw2,0,c
 32684                           
 32685                           ; BSR set to: 0
 32686  00B4DC  0012               	return		;funcret
 32687  00B4DE                     __end_of_UpdateFrequency:
 32688                           	opt stack 0
 32689                           tosu	equ	0xFFF
 32690                           tosh	equ	0xFFE
 32691                           tosl	equ	0xFFD
 32692                           pclath	equ	0xFFA
 32693                           tblptru	equ	0xFF8
 32694                           tblptrh	equ	0xFF7
 32695                           tblptrl	equ	0xFF6
 32696                           tablat	equ	0xFF5
 32697                           prodh	equ	0xFF4
 32698                           prodl	equ	0xFF3
 32699                           intcon	equ	0xFF2
 32700                           intcon2	equ	0xFF1
 32701                           intcon3	equ	0xFF0
 32702                           indf0	equ	0xFEF
 32703                           postinc0	equ	0xFEE
 32704                           fsr0h	equ	0xFEA
 32705                           fsr0l	equ	0xFE9
 32706                           wreg	equ	0xFE8
 32707                           postinc1	equ	0xFE6
 32708                           postdec1	equ	0xFE5
 32709                           plusw1	equ	0xFE3
 32710                           fsr1h	equ	0xFE2
 32711                           fsr1l	equ	0xFE1
 32712                           indf2	equ	0xFDF
 32713                           postinc2	equ	0xFDE
 32714                           postdec2	equ	0xFDD
 32715                           plusw2	equ	0xFDB
 32716                           fsr2h	equ	0xFDA
 32717                           fsr2l	equ	0xFD9
 32718                           status	equ	0xFD8
 32719                           
 32720 ;; *************** function _UpdateDutyCycle *****************
 32721 ;; Defined at:
 32722 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32723 ;; Parameters:    Size  Location     Type
 32724 ;;  channelId       1    wreg     unsigned char 
 32725 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 32726 ;; Auto vars:     Size  Location     Type
 32727 ;;  channelId       1    2[BANK0 ] unsigned char 
 32728 ;; Return value:  Size  Location     Type
 32729 ;;                  1    wreg      void 
 32730 ;; Registers used:
 32731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32732 ;; Tracked objects:
 32733 ;;		On entry : 0/0
 32734 ;;		On exit  : 0/0
 32735 ;;		Unchanged: 0/0
 32736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32741 ;;Total ram usage:        3 bytes
 32742 ;; Hardware stack levels used:    1
 32743 ;; Hardware stack levels required when called:    7
 32744 ;; This function calls:
 32745 ;;		Nothing
 32746 ;; This function is called by:
 32747 ;;		_ExecuteNewChannel
 32748 ;;		_LORAWAN_SetDutyCycle
 32749 ;; This function uses a non-reentrant model
 32750 ;;
 32751                           
 32752                           	psect	text184
 32753  00B4DE                     __ptext184:
 32754                           	opt stack 0
 32755  00B4DE                     _UpdateDutyCycle:
 32756                           	opt stack 17
 32757                           
 32758                           ; BSR set to: 0
 32759                           ;incstack = 0
 32760                           ;UpdateDutyCycle@channelId stored from wreg
 32761  00B4DE  0100               	movlb	0	; () banked
 32762  00B4E0  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 32763                           
 32764                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 32765  00B4E2  0100               	movlb	0	; () banked
 32766  00B4E4  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 32767  00B4E6  0D0E               	mullw	14
 32768  00B4E8  0E06               	movlw	6
 32769  00B4EA  26F3               	addwf	prodl,f,c
 32770  00B4EC  0E00               	movlw	0
 32771  00B4EE  22F4               	addwfc	prodh,f,c
 32772  00B4F0  0E00               	movlw	low _Channels
 32773  00B4F2  24F3               	addwf	prodl,w,c
 32774  00B4F4  6ED9               	movwf	fsr2l,c
 32775  00B4F6  0E04               	movlw	high _Channels
 32776  00B4F8  20F4               	addwfc	prodh,w,c
 32777  00B4FA  6EDA               	movwf	fsr2h,c
 32778  00B4FC  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 32779  00B500  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 32780                           
 32781                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 32782  00B504  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 32783  00B506  0D0E               	mullw	14
 32784  00B508  0E0D               	movlw	13
 32785  00B50A  26F3               	addwf	prodl,f,c
 32786  00B50C  0E00               	movlw	0
 32787  00B50E  22F4               	addwfc	prodh,f,c
 32788  00B510  0E00               	movlw	low _Channels
 32789  00B512  24F3               	addwf	prodl,w,c
 32790  00B514  6ED9               	movwf	fsr2l,c
 32791  00B516  0E04               	movlw	high _Channels
 32792  00B518  20F4               	addwfc	prodh,w,c
 32793  00B51A  6EDA               	movwf	fsr2h,c
 32794  00B51C  0E00               	movlw	0
 32795  00B51E  84DB               	bsf	plusw2,2,c
 32796                           
 32797                           ; BSR set to: 0
 32798  00B520  0012               	return		;funcret
 32799  00B522                     __end_of_UpdateDutyCycle:
 32800                           	opt stack 0
 32801                           tosu	equ	0xFFF
 32802                           tosh	equ	0xFFE
 32803                           tosl	equ	0xFFD
 32804                           pclath	equ	0xFFA
 32805                           tblptru	equ	0xFF8
 32806                           tblptrh	equ	0xFF7
 32807                           tblptrl	equ	0xFF6
 32808                           tablat	equ	0xFF5
 32809                           prodh	equ	0xFF4
 32810                           prodl	equ	0xFF3
 32811                           intcon	equ	0xFF2
 32812                           intcon2	equ	0xFF1
 32813                           intcon3	equ	0xFF0
 32814                           indf0	equ	0xFEF
 32815                           postinc0	equ	0xFEE
 32816                           fsr0h	equ	0xFEA
 32817                           fsr0l	equ	0xFE9
 32818                           wreg	equ	0xFE8
 32819                           postinc1	equ	0xFE6
 32820                           postdec1	equ	0xFE5
 32821                           plusw1	equ	0xFE3
 32822                           fsr1h	equ	0xFE2
 32823                           fsr1l	equ	0xFE1
 32824                           indf2	equ	0xFDF
 32825                           postinc2	equ	0xFDE
 32826                           postdec2	equ	0xFDD
 32827                           plusw2	equ	0xFDB
 32828                           fsr2h	equ	0xFDA
 32829                           fsr2l	equ	0xFD9
 32830                           status	equ	0xFD8
 32831                           
 32832 ;; *************** function _UpdateDataRange *****************
 32833 ;; Defined at:
 32834 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32835 ;; Parameters:    Size  Location     Type
 32836 ;;  channelId       1    wreg     unsigned char 
 32837 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 32838 ;; Auto vars:     Size  Location     Type
 32839 ;;  channelId       1    2[BANK0 ] unsigned char 
 32840 ;;  i               1    3[BANK0 ] unsigned char 
 32841 ;; Return value:  Size  Location     Type
 32842 ;;                  1    wreg      void 
 32843 ;; Registers used:
 32844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32845 ;; Tracked objects:
 32846 ;;		On entry : 0/0
 32847 ;;		On exit  : 0/0
 32848 ;;		Unchanged: 0/0
 32849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32850 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32853 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32854 ;;Total ram usage:        4 bytes
 32855 ;; Hardware stack levels used:    1
 32856 ;; Hardware stack levels required when called:    7
 32857 ;; This function calls:
 32858 ;;		Nothing
 32859 ;; This function is called by:
 32860 ;;		_ExecuteNewChannel
 32861 ;;		_LORAWAN_SetDataRange
 32862 ;; This function uses a non-reentrant model
 32863 ;;
 32864                           
 32865                           	psect	text185
 32866  00788A                     __ptext185:
 32867                           	opt stack 0
 32868  00788A                     _UpdateDataRange:
 32869                           	opt stack 17
 32870                           
 32871                           ; BSR set to: 0
 32872                           ;incstack = 0
 32873                           ;UpdateDataRange@channelId stored from wreg
 32874  00788A  0100               	movlb	0	; () banked
 32875  00788C  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 32876                           
 32877                           ;lorawan_eu.c: 1011: uint8_t i;
 32878                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 32879  00788E  0E07               	movlw	7
 32880  007890  0102               	movlb	2	; () banked
 32881  007892  6FEF               	movwf	(_loRa+235)& (0+255),b
 32882                           
 32883                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 32884  007894  0E00               	movlw	0
 32885  007896  6FF0               	movwf	(_loRa+236)& (0+255),b
 32886                           
 32887                           ; BSR set to: 2
 32888                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 32889  007898  0100               	movlb	0	; () banked
 32890  00789A  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 32891  00789C  0D0E               	mullw	14
 32892  00789E  0E05               	movlw	5
 32893  0078A0  26F3               	addwf	prodl,f,c
 32894  0078A2  0E00               	movlw	0
 32895  0078A4  22F4               	addwfc	prodh,f,c
 32896  0078A6  0E00               	movlw	low _Channels
 32897  0078A8  24F3               	addwf	prodl,w,c
 32898  0078AA  6ED9               	movwf	fsr2l,c
 32899  0078AC  0E04               	movlw	high _Channels
 32900  0078AE  20F4               	addwfc	prodh,w,c
 32901  0078B0  6EDA               	movwf	fsr2h,c
 32902  0078B2  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 32903                           
 32904                           ; BSR set to: 0
 32905                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 32906  0078B6  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 32907  0078B8  0D0E               	mullw	14
 32908  0078BA  0E0D               	movlw	13
 32909  0078BC  26F3               	addwf	prodl,f,c
 32910  0078BE  0E00               	movlw	0
 32911  0078C0  22F4               	addwfc	prodh,f,c
 32912  0078C2  0E00               	movlw	low _Channels
 32913  0078C4  24F3               	addwf	prodl,w,c
 32914  0078C6  6ED9               	movwf	fsr2l,c
 32915  0078C8  0E04               	movlw	high _Channels
 32916  0078CA  20F4               	addwfc	prodh,w,c
 32917  0078CC  6EDA               	movwf	fsr2h,c
 32918  0078CE  0E00               	movlw	0
 32919  0078D0  82DB               	bsf	plusw2,1,c
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 32923  0078D2  0E00               	movlw	0
 32924  0078D4  6F63               	movwf	UpdateDataRange@i& (0+255),b
 32925  0078D6  D06D               	goto	l1540
 32926  0078D8                     
 32927                           ; BSR set to: 0
 32928                           ;lorawan_eu.c: 1020: {
 32929                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 32930                           
 32931                           ; BSR set to: 0
 32932  0078D8  5163               	movf	UpdateDataRange@i& (0+255),w,b
 32933  0078DA  0D0E               	mullw	14
 32934  0078DC  0E05               	movlw	5
 32935  0078DE  26F3               	addwf	prodl,f,c
 32936  0078E0  0E00               	movlw	0
 32937  0078E2  22F4               	addwfc	prodh,f,c
 32938  0078E4  0E00               	movlw	low _Channels
 32939  0078E6  24F3               	addwf	prodl,w,c
 32940  0078E8  6ED9               	movwf	fsr2l,c
 32941  0078EA  0E04               	movlw	high _Channels
 32942  0078EC  20F4               	addwfc	prodh,w,c
 32943  0078EE  6EDA               	movwf	fsr2h,c
 32944  0078F0  0104               	movlb	4	; () banked
 32945  0078F2  50DF               	movf	223,w,c
 32946  0078F4  0B0F               	andlw	15
 32947  0078F6  0100               	movlb	0	; () banked
 32948  0078F8  6F61               	movwf	??_UpdateDataRange& (0+255),b
 32949  0078FA  0102               	movlb	2	; () banked
 32950  0078FC  51EF               	movf	(_loRa+235)& (0+255),w,b
 32951  0078FE  0100               	movlb	0	; () banked
 32952  007900  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 32953  007902  B0D8               	btfsc	status,0,c
 32954  007904  D020               	goto	l1542
 32955                           
 32956                           ; BSR set to: 0
 32957  007906  5163               	movf	UpdateDataRange@i& (0+255),w,b
 32958  007908  0D0E               	mullw	14
 32959  00790A  0E04               	movlw	4
 32960  00790C  26F3               	addwf	prodl,f,c
 32961  00790E  0E00               	movlw	0
 32962  007910  22F4               	addwfc	prodh,f,c
 32963  007912  0E00               	movlw	low _Channels
 32964  007914  24F3               	addwf	prodl,w,c
 32965  007916  6ED9               	movwf	fsr2l,c
 32966  007918  0E04               	movlw	high _Channels
 32967  00791A  20F4               	addwfc	prodh,w,c
 32968  00791C  6EDA               	movwf	fsr2h,c
 32969  00791E  04DE               	decf	postinc2,w,c
 32970  007920  A4D8               	btfss	status,2,c
 32971  007922  D011               	goto	l1542
 32972                           
 32973                           ; BSR set to: 0
 32974                           ;lorawan_eu.c: 1022: {
 32975                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 32976  007924  5163               	movf	UpdateDataRange@i& (0+255),w,b
 32977  007926  0D0E               	mullw	14
 32978  007928  0E05               	movlw	5
 32979  00792A  26F3               	addwf	prodl,f,c
 32980  00792C  0E00               	movlw	0
 32981  00792E  22F4               	addwfc	prodh,f,c
 32982  007930  0E00               	movlw	low _Channels
 32983  007932  24F3               	addwf	prodl,w,c
 32984  007934  6ED9               	movwf	fsr2l,c
 32985  007936  0E04               	movlw	high _Channels
 32986  007938  20F4               	addwfc	prodh,w,c
 32987  00793A  6EDA               	movwf	fsr2h,c
 32988  00793C  0104               	movlb	4	; () banked
 32989  00793E  50DF               	movf	223,w,c
 32990  007940  0B0F               	andlw	15
 32991  007942  0102               	movlb	2	; () banked
 32992  007944  6FEF               	movwf	(_loRa+235)& (0+255),b
 32993  007946                     l1542:
 32994                           
 32995                           ;lorawan_eu.c: 1024: }
 32996                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 32997  007946  0100               	movlb	0	; () banked
 32998  007948  5163               	movf	UpdateDataRange@i& (0+255),w,b
 32999  00794A  0D0E               	mullw	14
 33000  00794C  0E05               	movlw	5
 33001  00794E  26F3               	addwf	prodl,f,c
 33002  007950  0E00               	movlw	0
 33003  007952  22F4               	addwfc	prodh,f,c
 33004  007954  0E00               	movlw	low _Channels
 33005  007956  24F3               	addwf	prodl,w,c
 33006  007958  6ED9               	movwf	fsr2l,c
 33007  00795A  0E04               	movlw	high _Channels
 33008  00795C  20F4               	addwfc	prodh,w,c
 33009  00795E  6EDA               	movwf	fsr2h,c
 33010  007960  0104               	movlb	4	; () banked
 33011  007962  38DF               	swapf	223,w,c
 33012  007964  0B0F               	andlw	15
 33013  007966  0102               	movlb	2	; () banked
 33014  007968  61F0               	cpfslt	(_loRa+236)& (0+255),b
 33015  00796A  D021               	goto	l1543
 33016                           
 33017                           ; BSR set to: 2
 33018  00796C  0100               	movlb	0	; () banked
 33019  00796E  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33020  007970  0D0E               	mullw	14
 33021  007972  0E04               	movlw	4
 33022  007974  26F3               	addwf	prodl,f,c
 33023  007976  0E00               	movlw	0
 33024  007978  22F4               	addwfc	prodh,f,c
 33025  00797A  0E00               	movlw	low _Channels
 33026  00797C  24F3               	addwf	prodl,w,c
 33027  00797E  6ED9               	movwf	fsr2l,c
 33028  007980  0E04               	movlw	high _Channels
 33029  007982  20F4               	addwfc	prodh,w,c
 33030  007984  6EDA               	movwf	fsr2h,c
 33031  007986  04DE               	decf	postinc2,w,c
 33032  007988  A4D8               	btfss	status,2,c
 33033  00798A  D011               	goto	l1543
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;lorawan_eu.c: 1026: {
 33037                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 33038  00798C  5163               	movf	UpdateDataRange@i& (0+255),w,b
 33039  00798E  0D0E               	mullw	14
 33040  007990  0E05               	movlw	5
 33041  007992  26F3               	addwf	prodl,f,c
 33042  007994  0E00               	movlw	0
 33043  007996  22F4               	addwfc	prodh,f,c
 33044  007998  0E00               	movlw	low _Channels
 33045  00799A  24F3               	addwf	prodl,w,c
 33046  00799C  6ED9               	movwf	fsr2l,c
 33047  00799E  0E04               	movlw	high _Channels
 33048  0079A0  20F4               	addwfc	prodh,w,c
 33049  0079A2  6EDA               	movwf	fsr2h,c
 33050  0079A4  0104               	movlb	4	; () banked
 33051  0079A6  38DF               	swapf	223,w,c
 33052  0079A8  0B0F               	andlw	15
 33053  0079AA  0102               	movlb	2	; () banked
 33054  0079AC  6FF0               	movwf	(_loRa+236)& (0+255),b
 33055  0079AE                     l1543:
 33056                           
 33057                           ; BSR set to: 2
 33058  0079AE  0100               	movlb	0	; () banked
 33059  0079B0  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 33060  0079B2                     l1540:
 33061                           
 33062                           ; BSR set to: 0
 33063                           
 33064                           ; BSR set to: 0
 33065  0079B2  0102               	movlb	2	; () banked
 33066  0079B4  51F1               	movf	(_loRa+237)& (0+255),w,b
 33067  0079B6  0100               	movlb	0	; () banked
 33068  0079B8  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 33069  0079BA  A0D8               	btfss	status,0,c
 33070  0079BC  D78D               	goto	l1541
 33071                           
 33072                           ; BSR set to: 0
 33073                           ;lorawan_eu.c: 1028: }
 33074                           ;lorawan_eu.c: 1029: }
 33075                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 33076                           
 33077                           ; BSR set to: 0
 33078  0079BE  0102               	movlb	2	; () banked
 33079  0079C0  51E3               	movf	(_loRa+223)& (0+255),w,b
 33080  0079C2  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 33081  0079C4  A0D8               	btfss	status,0,c
 33082                           
 33083                           ; BSR set to: 2
 33084                           ;lorawan_eu.c: 1032: {
 33085                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 33086  0079C6  C2F0  F2E3         	movff	_loRa+236,_loRa+223
 33087                           
 33088                           ; BSR set to: 2
 33089                           ;lorawan_eu.c: 1034: }
 33090                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 33091                           
 33092                           ; BSR set to: 2
 33093  0079CA  51EF               	movf	(_loRa+235)& (0+255),w,b
 33094  0079CC  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 33095  0079CE  B0D8               	btfsc	status,0,c
 33096  0079D0  0012               	return	
 33097                           
 33098                           ; BSR set to: 2
 33099                           ;lorawan_eu.c: 1037: {
 33100                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 33101  0079D2  C2EF  F2E3         	movff	_loRa+235,_loRa+223
 33102  0079D6  0012               	return	
 33103  0079D8                     __end_of_UpdateDataRange:
 33104                           	opt stack 0
 33105                           tosu	equ	0xFFF
 33106                           tosh	equ	0xFFE
 33107                           tosl	equ	0xFFD
 33108                           pclath	equ	0xFFA
 33109                           tblptru	equ	0xFF8
 33110                           tblptrh	equ	0xFF7
 33111                           tblptrl	equ	0xFF6
 33112                           tablat	equ	0xFF5
 33113                           prodh	equ	0xFF4
 33114                           prodl	equ	0xFF3
 33115                           intcon	equ	0xFF2
 33116                           intcon2	equ	0xFF1
 33117                           intcon3	equ	0xFF0
 33118                           indf0	equ	0xFEF
 33119                           postinc0	equ	0xFEE
 33120                           fsr0h	equ	0xFEA
 33121                           fsr0l	equ	0xFE9
 33122                           wreg	equ	0xFE8
 33123                           postinc1	equ	0xFE6
 33124                           postdec1	equ	0xFE5
 33125                           plusw1	equ	0xFE3
 33126                           fsr1h	equ	0xFE2
 33127                           fsr1l	equ	0xFE1
 33128                           indf2	equ	0xFDF
 33129                           postinc2	equ	0xFDE
 33130                           postdec2	equ	0xFDD
 33131                           plusw2	equ	0xFDB
 33132                           fsr2h	equ	0xFDA
 33133                           fsr2l	equ	0xFD9
 33134                           status	equ	0xFD8
 33135                           
 33136 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 33137 ;; Defined at:
 33138 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33139 ;; Parameters:    Size  Location     Type
 33140 ;;  channelId       1    wreg     unsigned char 
 33141 ;;  statusNew       1    4[BANK0 ] unsigned char 
 33142 ;; Auto vars:     Size  Location     Type
 33143 ;;  channelId       1    6[BANK0 ] unsigned char 
 33144 ;;  result          1    5[BANK0 ] enum E7249
 33145 ;; Return value:  Size  Location     Type
 33146 ;;                  1    wreg      enum E7249
 33147 ;; Registers used:
 33148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33149 ;; Tracked objects:
 33150 ;;		On entry : 0/0
 33151 ;;		On exit  : 0/0
 33152 ;;		Unchanged: 0/0
 33153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33154 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33158 ;;Total ram usage:        3 bytes
 33159 ;; Hardware stack levels used:    1
 33160 ;; Hardware stack levels required when called:    8
 33161 ;; This function calls:
 33162 ;;		_UpdateChannelIdStatus
 33163 ;;		_ValidateChannelId
 33164 ;; This function is called by:
 33165 ;;		_ExecuteNewChannel
 33166 ;;		_UpdateCfList
 33167 ;; This function uses a non-reentrant model
 33168 ;;
 33169                           
 33170                           	psect	text186
 33171  00AD82                     __ptext186:
 33172                           	opt stack 0
 33173  00AD82                     _LORAWAN_SetChannelIdStatus:
 33174                           	opt stack 17
 33175                           
 33176                           ; BSR set to: 2
 33177                           ;incstack = 0
 33178                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 33179  00AD82  0100               	movlb	0	; () banked
 33180  00AD84  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 33181                           
 33182                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 33183  00AD86  0E00               	movlw	0
 33184  00AD88  0100               	movlb	0	; () banked
 33185  00AD8A  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 33189  00AD8C  0E01               	movlw	1
 33190  00AD8E  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 33191  00AD90  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33192  00AD92  ECF3  F05E         	call	_ValidateChannelId
 33193  00AD96  0900               	iorlw	0
 33194  00AD98  B4D8               	btfsc	status,2,c
 33195  00AD9A  D004               	goto	l1328
 33196                           
 33197                           ;lorawan_eu.c: 288: {
 33198                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 33199  00AD9C  0E03               	movlw	3
 33200  00AD9E  0100               	movlb	0	; () banked
 33201  00ADA0  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33202                           
 33203                           ;lorawan_eu.c: 290: }
 33204  00ADA2  0012               	return	
 33205  00ADA4                     l1328:
 33206                           
 33207                           ;lorawan_eu.c: 292: else
 33208                           ;lorawan_eu.c: 293: {
 33209                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 33210                           
 33211                           ; BSR set to: 0
 33212  00ADA4  0100               	movlb	0	; () banked
 33213  00ADA6  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33214  00ADA8  0D0E               	mullw	14
 33215  00ADAA  0E0D               	movlw	13
 33216  00ADAC  26F3               	addwf	prodl,f,c
 33217  00ADAE  0E00               	movlw	0
 33218  00ADB0  22F4               	addwfc	prodh,f,c
 33219  00ADB2  0E00               	movlw	low _Channels
 33220  00ADB4  24F3               	addwf	prodl,w,c
 33221  00ADB6  6ED9               	movwf	fsr2l,c
 33222  00ADB8  0E04               	movlw	high _Channels
 33223  00ADBA  20F4               	addwfc	prodh,w,c
 33224  00ADBC  6EDA               	movwf	fsr2h,c
 33225  00ADBE  50DF               	movf	indf2,w,c
 33226  00ADC0  0B07               	andlw	7
 33227  00ADC2  0A07               	xorlw	7
 33228  00ADC4  A4D8               	btfss	status,2,c
 33229  00ADC6  D006               	goto	l1330
 33230                           
 33231                           ; BSR set to: 0
 33232                           ;lorawan_eu.c: 295: {
 33233                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 33234  00ADC8  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 33235  00ADCC  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 33236  00ADCE  EC31  F03A         	call	_UpdateChannelIdStatus
 33237                           
 33238                           ;lorawan_eu.c: 297: }
 33239  00ADD2  0012               	return	
 33240  00ADD4                     l1330:
 33241                           
 33242                           ;lorawan_eu.c: 298: else
 33243                           ;lorawan_eu.c: 299: {
 33244                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 33245  00ADD4  0E03               	movlw	3
 33246  00ADD6  0100               	movlb	0	; () banked
 33247  00ADD8  6F65               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 33248                           
 33249                           ; BSR set to: 0
 33250                           
 33251                           ; BSR set to: 0
 33252  00ADDA  0012               	return	
 33253  00ADDC                     __end_of_LORAWAN_SetChannelIdStatus:
 33254                           	opt stack 0
 33255                           tosu	equ	0xFFF
 33256                           tosh	equ	0xFFE
 33257                           tosl	equ	0xFFD
 33258                           pclath	equ	0xFFA
 33259                           tblptru	equ	0xFF8
 33260                           tblptrh	equ	0xFF7
 33261                           tblptrl	equ	0xFF6
 33262                           tablat	equ	0xFF5
 33263                           prodh	equ	0xFF4
 33264                           prodl	equ	0xFF3
 33265                           intcon	equ	0xFF2
 33266                           intcon2	equ	0xFF1
 33267                           intcon3	equ	0xFF0
 33268                           indf0	equ	0xFEF
 33269                           postinc0	equ	0xFEE
 33270                           fsr0h	equ	0xFEA
 33271                           fsr0l	equ	0xFE9
 33272                           wreg	equ	0xFE8
 33273                           postinc1	equ	0xFE6
 33274                           postdec1	equ	0xFE5
 33275                           plusw1	equ	0xFE3
 33276                           fsr1h	equ	0xFE2
 33277                           fsr1l	equ	0xFE1
 33278                           indf2	equ	0xFDF
 33279                           postinc2	equ	0xFDE
 33280                           postdec2	equ	0xFDD
 33281                           plusw2	equ	0xFDB
 33282                           fsr2h	equ	0xFDA
 33283                           fsr2l	equ	0xFD9
 33284                           status	equ	0xFD8
 33285                           
 33286 ;; *************** function _ValidateChannelId *****************
 33287 ;; Defined at:
 33288 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33289 ;; Parameters:    Size  Location     Type
 33290 ;;  channelId       1    wreg     unsigned char 
 33291 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 33292 ;; Auto vars:     Size  Location     Type
 33293 ;;  channelId       1    2[BANK0 ] unsigned char 
 33294 ;;  result          1    1[BANK0 ] enum E7249
 33295 ;; Return value:  Size  Location     Type
 33296 ;;                  1    wreg      enum E7249
 33297 ;; Registers used:
 33298 ;;		wreg, status,2, status,0
 33299 ;; Tracked objects:
 33300 ;;		On entry : 0/0
 33301 ;;		On exit  : 0/0
 33302 ;;		Unchanged: 0/0
 33303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33304 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33307 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33308 ;;Total ram usage:        3 bytes
 33309 ;; Hardware stack levels used:    1
 33310 ;; Hardware stack levels required when called:    7
 33311 ;; This function calls:
 33312 ;;		Nothing
 33313 ;; This function is called by:
 33314 ;;		_LORAWAN_SetChannelIdStatus
 33315 ;;		_ExecuteNewChannel
 33316 ;;		_LORAWAN_SetDataRange
 33317 ;;		_LORAWAN_GetDataRange
 33318 ;;		_LORAWAN_GetChannelIdStatus
 33319 ;;		_LORAWAN_SetFrequency
 33320 ;;		_LORAWAN_SetDutyCycle
 33321 ;;		_LORAWAN_GetDutyCycle
 33322 ;; This function uses a non-reentrant model
 33323 ;;
 33324                           
 33325                           	psect	text187
 33326  00BDE6                     __ptext187:
 33327                           	opt stack 0
 33328  00BDE6                     _ValidateChannelId:
 33329                           	opt stack 17
 33330                           
 33331                           ;incstack = 0
 33332                           ;ValidateChannelId@channelId stored from wreg
 33333  00BDE6  0100               	movlb	0	; () banked
 33334  00BDE8  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 33335                           
 33336                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 33337  00BDEA  0E00               	movlw	0
 33338  00BDEC  0100               	movlb	0	; () banked
 33339  00BDEE  6F61               	movwf	ValidateChannelId@result& (0+255),b
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 33343  00BDF0  0E10               	movlw	16
 33344  00BDF2  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 33345  00BDF4  D006               	goto	u20070
 33346                           
 33347                           ; BSR set to: 0
 33348  00BDF6  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 33349  00BDF8  A4D8               	btfss	status,2,c
 33350  00BDFA  D005               	goto	l1582
 33351                           
 33352                           ; BSR set to: 0
 33353  00BDFC  0E03               	movlw	3
 33354  00BDFE  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 33355  00BE00  D002               	goto	l1582
 33356  00BE02                     u20070:
 33357                           
 33358                           ; BSR set to: 0
 33359                           ;lorawan_eu.c: 1130: {
 33360                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 33361                           
 33362                           ; BSR set to: 0
 33363  00BE02  0E03               	movlw	3
 33364  00BE04  6F61               	movwf	ValidateChannelId@result& (0+255),b
 33365  00BE06                     l1582:
 33366                           
 33367                           ; BSR set to: 0
 33368                           ;lorawan_eu.c: 1132: }
 33369                           ;lorawan_eu.c: 1134: return result;
 33370  00BE06  5161               	movf	ValidateChannelId@result& (0+255),w,b
 33371  00BE08  0012               	return	
 33372  00BE0A                     __end_of_ValidateChannelId:
 33373                           	opt stack 0
 33374                           tosu	equ	0xFFF
 33375                           tosh	equ	0xFFE
 33376                           tosl	equ	0xFFD
 33377                           pclath	equ	0xFFA
 33378                           tblptru	equ	0xFF8
 33379                           tblptrh	equ	0xFF7
 33380                           tblptrl	equ	0xFF6
 33381                           tablat	equ	0xFF5
 33382                           prodh	equ	0xFF4
 33383                           prodl	equ	0xFF3
 33384                           intcon	equ	0xFF2
 33385                           intcon2	equ	0xFF1
 33386                           intcon3	equ	0xFF0
 33387                           indf0	equ	0xFEF
 33388                           postinc0	equ	0xFEE
 33389                           fsr0h	equ	0xFEA
 33390                           fsr0l	equ	0xFE9
 33391                           wreg	equ	0xFE8
 33392                           postinc1	equ	0xFE6
 33393                           postdec1	equ	0xFE5
 33394                           plusw1	equ	0xFE3
 33395                           fsr1h	equ	0xFE2
 33396                           fsr1l	equ	0xFE1
 33397                           indf2	equ	0xFDF
 33398                           postinc2	equ	0xFDE
 33399                           postdec2	equ	0xFDD
 33400                           plusw2	equ	0xFDB
 33401                           fsr2h	equ	0xFDA
 33402                           fsr2l	equ	0xFD9
 33403                           status	equ	0xFD8
 33404                           
 33405 ;; *************** function _ExecuteLinkCheck *****************
 33406 ;; Defined at:
 33407 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 33408 ;; Parameters:    Size  Location     Type
 33409 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 33410 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33411 ;; Auto vars:     Size  Location     Type
 33412 ;;		None
 33413 ;; Return value:  Size  Location     Type
 33414 ;;                  2    0[BANK0 ] PTR unsigned char 
 33415 ;; Registers used:
 33416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33417 ;; Tracked objects:
 33418 ;;		On entry : 0/0
 33419 ;;		On exit  : 0/0
 33420 ;;		Unchanged: 0/0
 33421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33426 ;;Total ram usage:        2 bytes
 33427 ;; Hardware stack levels used:    1
 33428 ;; Hardware stack levels required when called:    7
 33429 ;; This function calls:
 33430 ;;		Nothing
 33431 ;; This function is called by:
 33432 ;;		_MacExecuteCommands
 33433 ;; This function uses a non-reentrant model
 33434 ;;
 33435                           
 33436                           	psect	text188
 33437  00B8BC                     __ptext188:
 33438                           	opt stack 0
 33439  00B8BC                     _ExecuteLinkCheck:
 33440                           	opt stack 18
 33441                           
 33442                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 33443                           
 33444                           ; BSR set to: 0
 33445                           ;incstack = 0
 33446  00B8BC  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 33447  00B8C0  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 33448  00B8C4  50DF               	movf	indf2,w,c
 33449  00B8C6  0102               	movlb	2	; () banked
 33450  00B8C8  6FE1               	movwf	(_loRa+221)& (0+255),b
 33451                           
 33452                           ; BSR set to: 2
 33453  00B8CA  0100               	movlb	0	; () banked
 33454  00B8CC  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 33455  00B8CE  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 33456                           
 33457                           ; BSR set to: 0
 33458                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 33459  00B8D0  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 33460  00B8D4  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 33461  00B8D8  50DF               	movf	indf2,w,c
 33462  00B8DA  0102               	movlb	2	; () banked
 33463  00B8DC  6FE2               	movwf	(_loRa+222)& (0+255),b
 33464  00B8DE  0100               	movlb	0	; () banked
 33465  00B8E0  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 33466  00B8E2  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 33467                           
 33468                           ; BSR set to: 0
 33469                           ;lorawan.c: 1656: return ptr;
 33470  00B8E4  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 33471  00B8E8  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 33472  00B8EC  0012               	return	
 33473  00B8EE                     __end_of_ExecuteLinkCheck:
 33474                           	opt stack 0
 33475                           tosu	equ	0xFFF
 33476                           tosh	equ	0xFFE
 33477                           tosl	equ	0xFFD
 33478                           pclath	equ	0xFFA
 33479                           tblptru	equ	0xFF8
 33480                           tblptrh	equ	0xFF7
 33481                           tblptrl	equ	0xFF6
 33482                           tablat	equ	0xFF5
 33483                           prodh	equ	0xFF4
 33484                           prodl	equ	0xFF3
 33485                           intcon	equ	0xFF2
 33486                           intcon2	equ	0xFF1
 33487                           intcon3	equ	0xFF0
 33488                           indf0	equ	0xFEF
 33489                           postinc0	equ	0xFEE
 33490                           fsr0h	equ	0xFEA
 33491                           fsr0l	equ	0xFE9
 33492                           wreg	equ	0xFE8
 33493                           postinc1	equ	0xFE6
 33494                           postdec1	equ	0xFE5
 33495                           plusw1	equ	0xFE3
 33496                           fsr1h	equ	0xFE2
 33497                           fsr1l	equ	0xFE1
 33498                           indf2	equ	0xFDF
 33499                           postinc2	equ	0xFDE
 33500                           postdec2	equ	0xFDD
 33501                           plusw2	equ	0xFDB
 33502                           fsr2h	equ	0xFDA
 33503                           fsr2l	equ	0xFD9
 33504                           status	equ	0xFD8
 33505                           
 33506 ;; *************** function _ExecuteLinkAdr *****************
 33507 ;; Defined at:
 33508 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 33511 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33512 ;; Auto vars:     Size  Location     Type
 33513 ;;  redundancy      2   22[BANK0 ] PTR struct .
 33514 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 33515 ;;  channelMask     2   19[BANK0 ] unsigned int 
 33516 ;;  dataRate        1   24[BANK0 ] unsigned char 
 33517 ;;  txPower         1   21[BANK0 ] unsigned char 
 33518 ;; Return value:  Size  Location     Type
 33519 ;;                  2   15[BANK0 ] PTR unsigned char 
 33520 ;; Registers used:
 33521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33522 ;; Tracked objects:
 33523 ;;		On entry : 0/0
 33524 ;;		On exit  : 0/0
 33525 ;;		Unchanged: 0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33528 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33530 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33531 ;;Total ram usage:       10 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:   10
 33534 ;; This function calls:
 33535 ;;		_EnableChannels
 33536 ;;		_UpdateCurrentDataRate
 33537 ;;		_UpdateTxPower
 33538 ;;		_ValidateChannelMask
 33539 ;;		_ValidateChannelMaskCntl
 33540 ;;		_ValidateDataRate
 33541 ;;		_ValidateTxPower
 33542 ;; This function is called by:
 33543 ;;		_MacExecuteCommands
 33544 ;; This function uses a non-reentrant model
 33545 ;;
 33546                           
 33547                           	psect	text189
 33548  004EA2                     __ptext189:
 33549                           	opt stack 0
 33550  004EA2                     _ExecuteLinkAdr:
 33551                           	opt stack 15
 33552                           
 33553                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 33554                           ;lorawan_eu.c: 616: uint16_t channelMask;
 33555                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 33556                           
 33557                           ; BSR set to: 0
 33558                           ;incstack = 0
 33559  004EA2  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33560  004EA6  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33561  004EAA  50DF               	movf	indf2,w,c
 33562  004EAC  0B0F               	andlw	15
 33563  004EAE  0100               	movlb	0	; () banked
 33564  004EB0  6F75               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 33565                           
 33566                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 33567  004EB2  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33568  004EB6  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33569  004EBA  50DF               	movf	indf2,w,c
 33570  004EBC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33571  004EBE  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 33572  004EC0  0B0F               	andlw	15
 33573  004EC2  0B0F               	andlw	15
 33574  004EC4  6F78               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 33575                           
 33576                           ; BSR set to: 0
 33577                           ;lorawan_eu.c: 620: ptr++;
 33578  004EC6  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 33579  004EC8  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 33580                           
 33581                           ; BSR set to: 0
 33582                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 33583  004ECA  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 33584  004ECE  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 33585  004ED2  CFDE F073          	movff	postinc2,ExecuteLinkAdr@channelMask
 33586  004ED6  CFDD F074          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 33587                           
 33588                           ; BSR set to: 0
 33589                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 33590  004EDA  0E02               	movlw	2
 33591  004EDC  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 33592  004EDE  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 33593  004EE0  0E00               	movlw	0
 33594  004EE2  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 33595  004EE4  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 33596                           
 33597                           ; BSR set to: 0
 33598                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 33599                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 33600  004EE6  C06F  F076         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 33601  004EEA  C070  F077         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 33602                           
 33603                           ; BSR set to: 0
 33604  004EEE  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 33605  004EF0  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 33606                           
 33607                           ; BSR set to: 0
 33608                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 33609  004EF2  0102               	movlb	2	; () banked
 33610  004EF4  AD06               	btfss	(_loRa+2)& (0+255),6,b
 33611  004EF6  D0EF               	goto	l1434
 33612                           
 33613                           ; BSR set to: 2
 33614                           ;lorawan_eu.c: 627: {
 33615                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 33616  004EF8  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33617  004EFC  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33618  004F00  0100               	movlb	0	; () banked
 33619  004F02  38DF               	swapf	223,w,c
 33620  004F04  0B07               	andlw	7
 33621  004F06  ECCB  F05F         	call	_ValidateChannelMaskCntl
 33622  004F0A  0900               	iorlw	0
 33623  004F0C  A4D8               	btfss	status,2,c
 33624  004F0E  D021               	goto	l1435
 33625  004F10  C073  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 33626  004F14  C074  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 33627  004F18  EC08  F056         	call	_ValidateChannelMask	;wreg free
 33628  004F1C  0900               	iorlw	0
 33629  004F1E  A4D8               	btfss	status,2,c
 33630  004F20  D018               	goto	l1435
 33631                           
 33632                           ;lorawan_eu.c: 629: {
 33633                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 33634  004F22  0102               	movlb	2	; () banked
 33635  004F24  51AB               	movf	(_loRa+167)& (0+255),w,b
 33636  004F26  0D02               	mullw	2
 33637  004F28  0E04               	movlw	low _loRa
 33638  004F2A  0100               	movlb	0	; () banked
 33639  004F2C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33640  004F2E  0E02               	movlw	high _loRa
 33641  004F30  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33642  004F32  0EA8               	movlw	168
 33643  004F34  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33644  004F36  0E00               	movlw	0
 33645  004F38  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33646  004F3A  50F3               	movf	prodl,w,c
 33647  004F3C  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33648  004F3E  50F4               	movf	prodh,w,c
 33649  004F40  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33650  004F42  0E01               	movlw	1
 33651  004F44  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33652  004F46  6ED9               	movwf	fsr2l,c
 33653  004F48  0E00               	movlw	0
 33654  004F4A  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33655  004F4C  6EDA               	movwf	fsr2h,c
 33656  004F4E  0102               	movlb	2	; () banked
 33657  004F50  80DF               	bsf	indf2,0,c
 33658  004F52                     l1435:
 33659                           
 33660                           ;lorawan_eu.c: 631: }
 33661                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 33662                           
 33663                           ; BSR set to: 2
 33664  004F52  0100               	movlb	0	; () banked
 33665  004F54  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33666  004F56  EC26  F061         	call	_ValidateDataRate
 33667  004F5A  0900               	iorlw	0
 33668  004F5C  A4D8               	btfss	status,2,c
 33669  004F5E  D022               	goto	l1436
 33670  004F60  0102               	movlb	2	; () banked
 33671  004F62  51EF               	movf	(_loRa+235)& (0+255),w,b
 33672  004F64  0100               	movlb	0	; () banked
 33673  004F66  5D78               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33674  004F68  A0D8               	btfss	status,0,c
 33675  004F6A  D01C               	goto	l1436
 33676                           
 33677                           ; BSR set to: 0
 33678  004F6C  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33679  004F6E  0102               	movlb	2	; () banked
 33680  004F70  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 33681  004F72  A0D8               	btfss	status,0,c
 33682  004F74  D017               	goto	l1436
 33683                           
 33684                           ; BSR set to: 2
 33685                           ;lorawan_eu.c: 634: {
 33686                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 33687  004F76  51AB               	movf	(_loRa+167)& (0+255),w,b
 33688  004F78  0D02               	mullw	2
 33689  004F7A  0E04               	movlw	low _loRa
 33690  004F7C  0100               	movlb	0	; () banked
 33691  004F7E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33692  004F80  0E02               	movlw	high _loRa
 33693  004F82  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33694  004F84  0EA8               	movlw	168
 33695  004F86  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33696  004F88  0E00               	movlw	0
 33697  004F8A  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33698  004F8C  50F3               	movf	prodl,w,c
 33699  004F8E  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33700  004F90  50F4               	movf	prodh,w,c
 33701  004F92  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33702  004F94  0E01               	movlw	1
 33703  004F96  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33704  004F98  6ED9               	movwf	fsr2l,c
 33705  004F9A  0E00               	movlw	0
 33706  004F9C  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33707  004F9E  6EDA               	movwf	fsr2h,c
 33708  004FA0  0102               	movlb	2	; () banked
 33709  004FA2  82DF               	bsf	indf2,1,c
 33710  004FA4                     l1436:
 33711                           
 33712                           ;lorawan_eu.c: 636: }
 33713                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 33714                           
 33715                           ; BSR set to: 2
 33716  004FA4  0100               	movlb	0	; () banked
 33717  004FA6  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 33718  004FA8  EC03  F05E         	call	_ValidateTxPower
 33719  004FAC  0900               	iorlw	0
 33720  004FAE  A4D8               	btfss	status,2,c
 33721  004FB0  D018               	goto	l1437
 33722                           
 33723                           ;lorawan_eu.c: 639: {
 33724                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 33725  004FB2  0102               	movlb	2	; () banked
 33726  004FB4  51AB               	movf	(_loRa+167)& (0+255),w,b
 33727  004FB6  0D02               	mullw	2
 33728  004FB8  0E04               	movlw	low _loRa
 33729  004FBA  0100               	movlb	0	; () banked
 33730  004FBC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33731  004FBE  0E02               	movlw	high _loRa
 33732  004FC0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33733  004FC2  0EA8               	movlw	168
 33734  004FC4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33735  004FC6  0E00               	movlw	0
 33736  004FC8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33737  004FCA  50F3               	movf	prodl,w,c
 33738  004FCC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33739  004FCE  50F4               	movf	prodh,w,c
 33740  004FD0  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33741  004FD2  0E01               	movlw	1
 33742  004FD4  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33743  004FD6  6ED9               	movwf	fsr2l,c
 33744  004FD8  0E00               	movlw	0
 33745  004FDA  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33746  004FDC  6EDA               	movwf	fsr2h,c
 33747  004FDE  0102               	movlb	2	; () banked
 33748  004FE0  84DF               	bsf	indf2,2,c
 33749  004FE2                     l1437:
 33750                           
 33751                           ;lorawan_eu.c: 641: }
 33752                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 33753  004FE2  0102               	movlb	2	; () banked
 33754  004FE4  51AB               	movf	(_loRa+167)& (0+255),w,b
 33755  004FE6  0D02               	mullw	2
 33756  004FE8  0E04               	movlw	low _loRa
 33757  004FEA  0100               	movlb	0	; () banked
 33758  004FEC  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33759  004FEE  0E02               	movlw	high _loRa
 33760  004FF0  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33761  004FF2  0EA8               	movlw	168
 33762  004FF4  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33763  004FF6  0E00               	movlw	0
 33764  004FF8  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33765  004FFA  50F3               	movf	prodl,w,c
 33766  004FFC  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33767  004FFE  50F4               	movf	prodh,w,c
 33768  005000  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33769  005002  0E01               	movlw	1
 33770  005004  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33771  005006  6ED9               	movwf	fsr2l,c
 33772  005008  0E00               	movlw	0
 33773  00500A  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33774  00500C  6EDA               	movwf	fsr2h,c
 33775  00500E  0102               	movlb	2	; () banked
 33776  005010  A4DF               	btfss	indf2,2,c
 33777  005012  D0A6               	goto	l1441
 33778                           
 33779                           ; BSR set to: 2
 33780  005014  51AB               	movf	(_loRa+167)& (0+255),w,b
 33781  005016  0D02               	mullw	2
 33782  005018  0E04               	movlw	low _loRa
 33783  00501A  0100               	movlb	0	; () banked
 33784  00501C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33785  00501E  0E02               	movlw	high _loRa
 33786  005020  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33787  005022  0EA8               	movlw	168
 33788  005024  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33789  005026  0E00               	movlw	0
 33790  005028  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33791  00502A  50F3               	movf	prodl,w,c
 33792  00502C  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33793  00502E  50F4               	movf	prodh,w,c
 33794  005030  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33795  005032  0E01               	movlw	1
 33796  005034  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33797  005036  6ED9               	movwf	fsr2l,c
 33798  005038  0E00               	movlw	0
 33799  00503A  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33800  00503C  6EDA               	movwf	fsr2h,c
 33801  00503E  0102               	movlb	2	; () banked
 33802  005040  A2DF               	btfss	indf2,1,c
 33803  005042  D08E               	goto	l1441
 33804                           
 33805                           ; BSR set to: 2
 33806  005044  51AB               	movf	(_loRa+167)& (0+255),w,b
 33807  005046  0D02               	mullw	2
 33808  005048  0E04               	movlw	low _loRa
 33809  00504A  0100               	movlb	0	; () banked
 33810  00504C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33811  00504E  0E02               	movlw	high _loRa
 33812  005050  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33813  005052  0EA8               	movlw	168
 33814  005054  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33815  005056  0E00               	movlw	0
 33816  005058  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33817  00505A  50F3               	movf	prodl,w,c
 33818  00505C  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33819  00505E  50F4               	movf	prodh,w,c
 33820  005060  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33821  005062  0E01               	movlw	1
 33822  005064  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33823  005066  6ED9               	movwf	fsr2l,c
 33824  005068  0E00               	movlw	0
 33825  00506A  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33826  00506C  6EDA               	movwf	fsr2h,c
 33827  00506E  0102               	movlb	2	; () banked
 33828  005070  A0DF               	btfss	indf2,0,c
 33829  005072  D076               	goto	l1441
 33830                           
 33831                           ; BSR set to: 2
 33832                           ;lorawan_eu.c: 644: {
 33833                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 33834  005074  C073  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 33835  005078  C074  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 33836  00507C  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33837  005080  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33838  005084  0100               	movlb	0	; () banked
 33839  005086  38DF               	swapf	223,w,c
 33840  005088  0B07               	andlw	7
 33841  00508A  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 33842  00508C  ECB3  F060         	call	_EnableChannels	;wreg free
 33843                           
 33844                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 33845  005090  0100               	movlb	0	; () banked
 33846  005092  5175               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 33847  005094  ECC6  F062         	call	_UpdateTxPower
 33848                           
 33849                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 33850  005098  0102               	movlb	2	; () banked
 33851  00509A  8907               	bsf	(_loRa+3)& (0+255),4,b
 33852                           
 33853                           ; BSR set to: 2
 33854                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 33855  00509C  0100               	movlb	0	; () banked
 33856  00509E  5178               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 33857  0050A0  ECCB  F062         	call	_UpdateCurrentDataRate
 33858                           
 33859                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 33860  0050A4  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33861  0050A8  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33862  0050AC  0100               	movlb	0	; () banked
 33863  0050AE  50DF               	movf	223,w,c
 33864  0050B0  0B0F               	andlw	15
 33865  0050B2  0900               	iorlw	0
 33866  0050B4  A4D8               	btfss	status,2,c
 33867  0050B6  D002               	goto	l1439
 33868                           
 33869                           ; BSR set to: 0
 33870                           ;lorawan_eu.c: 652: {
 33871                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 33872  0050B8  0E00               	movlw	0
 33873  0050BA  D009               	goto	L13
 33874  0050BC                     l1439:
 33875                           
 33876                           ;lorawan_eu.c: 655: else
 33877                           ;lorawan_eu.c: 656: {
 33878                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 33879                           
 33880                           ; BSR set to: 2
 33881  0050BC  C076  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 33882  0050C0  C077  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 33883  0050C4  0100               	movlb	0	; () banked
 33884  0050C6  50DF               	movf	223,w,c
 33885  0050C8  0B0F               	andlw	15
 33886  0050CA  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33887  0050CC  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 33888  0050CE                     L13:
 33889  0050CE  0102               	movlb	2	; () banked
 33890  0050D0  6FDA               	movwf	(_loRa+214)& (0+255),b
 33891                           
 33892                           ; BSR set to: 2
 33893                           ;lorawan_eu.c: 658: }
 33894                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 33895                           
 33896                           ; BSR set to: 2
 33897  0050D2  8B07               	bsf	(_loRa+3)& (0+255),5,b
 33898                           
 33899                           ; BSR set to: 2
 33900                           ;lorawan_eu.c: 660: }
 33901                           ;lorawan_eu.c: 661: }
 33902  0050D4  D045               	goto	l1441
 33903  0050D6                     l1434:
 33904                           
 33905                           ; BSR set to: 2
 33906                           ;lorawan_eu.c: 662: else
 33907                           ;lorawan_eu.c: 663: {
 33908                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 33909                           
 33910                           ; BSR set to: 2
 33911  0050D6  51AB               	movf	(_loRa+167)& (0+255),w,b
 33912  0050D8  0D02               	mullw	2
 33913  0050DA  0E04               	movlw	low _loRa
 33914  0050DC  0100               	movlb	0	; () banked
 33915  0050DE  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33916  0050E0  0E02               	movlw	high _loRa
 33917  0050E2  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33918  0050E4  0EA8               	movlw	168
 33919  0050E6  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33920  0050E8  0E00               	movlw	0
 33921  0050EA  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33922  0050EC  50F3               	movf	prodl,w,c
 33923  0050EE  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33924  0050F0  50F4               	movf	prodh,w,c
 33925  0050F2  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33926  0050F4  0E01               	movlw	1
 33927  0050F6  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33928  0050F8  6ED9               	movwf	fsr2l,c
 33929  0050FA  0E00               	movlw	0
 33930  0050FC  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33931  0050FE  6EDA               	movwf	fsr2h,c
 33932  005100  0102               	movlb	2	; () banked
 33933  005102  90DF               	bcf	indf2,0,c
 33934                           
 33935                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 33936  005104  51AB               	movf	(_loRa+167)& (0+255),w,b
 33937  005106  0D02               	mullw	2
 33938  005108  0E04               	movlw	low _loRa
 33939  00510A  0100               	movlb	0	; () banked
 33940  00510C  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33941  00510E  0E02               	movlw	high _loRa
 33942  005110  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33943  005112  0EA8               	movlw	168
 33944  005114  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33945  005116  0E00               	movlw	0
 33946  005118  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33947  00511A  50F3               	movf	prodl,w,c
 33948  00511C  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33949  00511E  50F4               	movf	prodh,w,c
 33950  005120  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33951  005122  0E01               	movlw	1
 33952  005124  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33953  005126  6ED9               	movwf	fsr2l,c
 33954  005128  0E00               	movlw	0
 33955  00512A  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33956  00512C  6EDA               	movwf	fsr2h,c
 33957  00512E  0102               	movlb	2	; () banked
 33958  005130  92DF               	bcf	indf2,1,c
 33959                           
 33960                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 33961  005132  51AB               	movf	(_loRa+167)& (0+255),w,b
 33962  005134  0D02               	mullw	2
 33963  005136  0E04               	movlw	low _loRa
 33964  005138  0100               	movlb	0	; () banked
 33965  00513A  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 33966  00513C  0E02               	movlw	high _loRa
 33967  00513E  6F72               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 33968  005140  0EA8               	movlw	168
 33969  005142  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33970  005144  0E00               	movlw	0
 33971  005146  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33972  005148  50F3               	movf	prodl,w,c
 33973  00514A  2771               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 33974  00514C  50F4               	movf	prodh,w,c
 33975  00514E  2372               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 33976  005150  0E01               	movlw	1
 33977  005152  2571               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 33978  005154  6ED9               	movwf	fsr2l,c
 33979  005156  0E00               	movlw	0
 33980  005158  2172               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 33981  00515A  6EDA               	movwf	fsr2h,c
 33982  00515C  0102               	movlb	2	; () banked
 33983  00515E  94DF               	bcf	indf2,2,c
 33984  005160                     l1441:
 33985                           
 33986                           ; BSR set to: 2
 33987                           ;lorawan_eu.c: 667: }
 33988                           ;lorawan_eu.c: 669: return ptr;
 33989                           
 33990                           ; BSR set to: 2
 33991  005160  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 33992  005164  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 33993  005168  0012               	return	
 33994  00516A                     __end_of_ExecuteLinkAdr:
 33995                           	opt stack 0
 33996                           tosu	equ	0xFFF
 33997                           tosh	equ	0xFFE
 33998                           tosl	equ	0xFFD
 33999                           pclath	equ	0xFFA
 34000                           tblptru	equ	0xFF8
 34001                           tblptrh	equ	0xFF7
 34002                           tblptrl	equ	0xFF6
 34003                           tablat	equ	0xFF5
 34004                           prodh	equ	0xFF4
 34005                           prodl	equ	0xFF3
 34006                           intcon	equ	0xFF2
 34007                           intcon2	equ	0xFF1
 34008                           intcon3	equ	0xFF0
 34009                           indf0	equ	0xFEF
 34010                           postinc0	equ	0xFEE
 34011                           fsr0h	equ	0xFEA
 34012                           fsr0l	equ	0xFE9
 34013                           wreg	equ	0xFE8
 34014                           postinc1	equ	0xFE6
 34015                           postdec1	equ	0xFE5
 34016                           plusw1	equ	0xFE3
 34017                           fsr1h	equ	0xFE2
 34018                           fsr1l	equ	0xFE1
 34019                           indf2	equ	0xFDF
 34020                           postinc2	equ	0xFDE
 34021                           postdec2	equ	0xFDD
 34022                           plusw2	equ	0xFDB
 34023                           fsr2h	equ	0xFDA
 34024                           fsr2l	equ	0xFD9
 34025                           status	equ	0xFD8
 34026                           
 34027 ;; *************** function _ValidateTxPower *****************
 34028 ;; Defined at:
 34029 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34030 ;; Parameters:    Size  Location     Type
 34031 ;;  txPowerNew      1    wreg     unsigned char 
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 34034 ;;  result          1    0[BANK0 ] enum E7249
 34035 ;; Return value:  Size  Location     Type
 34036 ;;                  1    wreg      enum E7249
 34037 ;; Registers used:
 34038 ;;		wreg, status,2, status,0
 34039 ;; Tracked objects:
 34040 ;;		On entry : 0/0
 34041 ;;		On exit  : 0/0
 34042 ;;		Unchanged: 0/0
 34043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34045 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34048 ;;Total ram usage:        2 bytes
 34049 ;; Hardware stack levels used:    1
 34050 ;; Hardware stack levels required when called:    7
 34051 ;; This function calls:
 34052 ;;		Nothing
 34053 ;; This function is called by:
 34054 ;;		_ExecuteLinkAdr
 34055 ;;		_LORAWAN_SetTxPower
 34056 ;; This function uses a non-reentrant model
 34057 ;;
 34058                           
 34059                           	psect	text190
 34060  00BC06                     __ptext190:
 34061                           	opt stack 0
 34062  00BC06                     _ValidateTxPower:
 34063                           	opt stack 17
 34064                           
 34065                           ; BSR set to: 2
 34066                           ;incstack = 0
 34067                           ;ValidateTxPower@txPowerNew stored from wreg
 34068  00BC06  0100               	movlb	0	; () banked
 34069  00BC08  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 34070                           
 34071                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 34072  00BC0A  0E00               	movlw	0
 34073  00BC0C  0100               	movlb	0	; () banked
 34074  00BC0E  6F60               	movwf	ValidateTxPower@result& (0+255),b
 34075                           
 34076                           ; BSR set to: 0
 34077                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 34078  00BC10  0102               	movlb	2	; () banked
 34079  00BC12  51A8               	movf	(_loRa+164)& (0+255),w,b
 34080  00BC14  A4D8               	btfss	status,2,c
 34081  00BC16  D004               	goto	u20710
 34082                           
 34083                           ; BSR set to: 2
 34084  00BC18  0100               	movlb	0	; () banked
 34085  00BC1A  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 34086  00BC1C  B4D8               	btfsc	status,2,c
 34087  00BC1E  D004               	goto	u20720
 34088  00BC20                     u20710:
 34089                           
 34090                           ; BSR set to: 0
 34091  00BC20  0E05               	movlw	5
 34092  00BC22  0100               	movlb	0	; () banked
 34093  00BC24  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 34094  00BC26  D002               	goto	l1421
 34095  00BC28                     u20720:
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;lorawan_eu.c: 587: {
 34099                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 34100                           
 34101                           ; BSR set to: 0
 34102  00BC28  0E03               	movlw	3
 34103  00BC2A  6F60               	movwf	ValidateTxPower@result& (0+255),b
 34104  00BC2C                     l1421:
 34105                           
 34106                           ; BSR set to: 0
 34107                           ;lorawan_eu.c: 589: }
 34108                           ;lorawan_eu.c: 591: return result;
 34109  00BC2C  5160               	movf	ValidateTxPower@result& (0+255),w,b
 34110  00BC2E  0012               	return	
 34111  00BC30                     __end_of_ValidateTxPower:
 34112                           	opt stack 0
 34113                           tosu	equ	0xFFF
 34114                           tosh	equ	0xFFE
 34115                           tosl	equ	0xFFD
 34116                           pclath	equ	0xFFA
 34117                           tblptru	equ	0xFF8
 34118                           tblptrh	equ	0xFF7
 34119                           tblptrl	equ	0xFF6
 34120                           tablat	equ	0xFF5
 34121                           prodh	equ	0xFF4
 34122                           prodl	equ	0xFF3
 34123                           intcon	equ	0xFF2
 34124                           intcon2	equ	0xFF1
 34125                           intcon3	equ	0xFF0
 34126                           indf0	equ	0xFEF
 34127                           postinc0	equ	0xFEE
 34128                           fsr0h	equ	0xFEA
 34129                           fsr0l	equ	0xFE9
 34130                           wreg	equ	0xFE8
 34131                           postinc1	equ	0xFE6
 34132                           postdec1	equ	0xFE5
 34133                           plusw1	equ	0xFE3
 34134                           fsr1h	equ	0xFE2
 34135                           fsr1l	equ	0xFE1
 34136                           indf2	equ	0xFDF
 34137                           postinc2	equ	0xFDE
 34138                           postdec2	equ	0xFDD
 34139                           plusw2	equ	0xFDB
 34140                           fsr2h	equ	0xFDA
 34141                           fsr2l	equ	0xFD9
 34142                           status	equ	0xFD8
 34143                           
 34144 ;; *************** function _ValidateDataRate *****************
 34145 ;; Defined at:
 34146 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34147 ;; Parameters:    Size  Location     Type
 34148 ;;  dataRate        1    wreg     unsigned char 
 34149 ;; Auto vars:     Size  Location     Type
 34150 ;;  dataRate        1    0[BANK0 ] unsigned char 
 34151 ;;  result          1    1[BANK0 ] enum E7249
 34152 ;; Return value:  Size  Location     Type
 34153 ;;                  1    wreg      enum E7249
 34154 ;; Registers used:
 34155 ;;		wreg, status,2, status,0
 34156 ;; Tracked objects:
 34157 ;;		On entry : 0/0
 34158 ;;		On exit  : 0/0
 34159 ;;		Unchanged: 0/0
 34160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34162 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34165 ;;Total ram usage:        2 bytes
 34166 ;; Hardware stack levels used:    1
 34167 ;; Hardware stack levels required when called:    7
 34168 ;; This function calls:
 34169 ;;		Nothing
 34170 ;; This function is called by:
 34171 ;;		_ExecuteLinkAdr
 34172 ;;		_ExecuteRxParamSetupReq
 34173 ;;		_ValidateDataRange
 34174 ;;		_LORAWAN_SetReceiveWindow2Parameters
 34175 ;;		_LORAWAN_SetCurrentDataRate
 34176 ;; This function uses a non-reentrant model
 34177 ;;
 34178                           
 34179                           	psect	text191
 34180  00C24C                     __ptext191:
 34181                           	opt stack 0
 34182  00C24C                     _ValidateDataRate:
 34183                           	opt stack 17
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;incstack = 0
 34187                           ;ValidateDataRate@dataRate stored from wreg
 34188  00C24C  0100               	movlb	0	; () banked
 34189  00C24E  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 34190                           
 34191                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 34192  00C250  0E00               	movlw	0
 34193  00C252  0100               	movlb	0	; () banked
 34194  00C254  6F61               	movwf	ValidateDataRate@result& (0+255),b
 34195                           
 34196                           ; BSR set to: 0
 34197                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 34198  00C256  0E07               	movlw	7
 34199  00C258  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 34200  00C25A  D002               	goto	l1417
 34201                           
 34202                           ; BSR set to: 0
 34203                           ;lorawan_eu.c: 575: {
 34204                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 34205  00C25C  0E03               	movlw	3
 34206  00C25E  6F61               	movwf	ValidateDataRate@result& (0+255),b
 34207  00C260                     l1417:
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;lorawan_eu.c: 577: }
 34211                           ;lorawan_eu.c: 579: return result;
 34212  00C260  5161               	movf	ValidateDataRate@result& (0+255),w,b
 34213  00C262  0012               	return	
 34214  00C264                     __end_of_ValidateDataRate:
 34215                           	opt stack 0
 34216                           tosu	equ	0xFFF
 34217                           tosh	equ	0xFFE
 34218                           tosl	equ	0xFFD
 34219                           pclath	equ	0xFFA
 34220                           tblptru	equ	0xFF8
 34221                           tblptrh	equ	0xFF7
 34222                           tblptrl	equ	0xFF6
 34223                           tablat	equ	0xFF5
 34224                           prodh	equ	0xFF4
 34225                           prodl	equ	0xFF3
 34226                           intcon	equ	0xFF2
 34227                           intcon2	equ	0xFF1
 34228                           intcon3	equ	0xFF0
 34229                           indf0	equ	0xFEF
 34230                           postinc0	equ	0xFEE
 34231                           fsr0h	equ	0xFEA
 34232                           fsr0l	equ	0xFE9
 34233                           wreg	equ	0xFE8
 34234                           postinc1	equ	0xFE6
 34235                           postdec1	equ	0xFE5
 34236                           plusw1	equ	0xFE3
 34237                           fsr1h	equ	0xFE2
 34238                           fsr1l	equ	0xFE1
 34239                           indf2	equ	0xFDF
 34240                           postinc2	equ	0xFDE
 34241                           postdec2	equ	0xFDD
 34242                           plusw2	equ	0xFDB
 34243                           fsr2h	equ	0xFDA
 34244                           fsr2l	equ	0xFD9
 34245                           status	equ	0xFD8
 34246                           
 34247 ;; *************** function _ValidateChannelMaskCntl *****************
 34248 ;; Defined at:
 34249 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34250 ;; Parameters:    Size  Location     Type
 34251 ;;  channelMaskC    1    wreg     unsigned char 
 34252 ;; Auto vars:     Size  Location     Type
 34253 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 34254 ;;  result          1    0[BANK0 ] enum E7249
 34255 ;; Return value:  Size  Location     Type
 34256 ;;                  1    wreg      enum E7249
 34257 ;; Registers used:
 34258 ;;		wreg, status,2, status,0
 34259 ;; Tracked objects:
 34260 ;;		On entry : 0/0
 34261 ;;		On exit  : 0/0
 34262 ;;		Unchanged: 0/0
 34263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34268 ;;Total ram usage:        2 bytes
 34269 ;; Hardware stack levels used:    1
 34270 ;; Hardware stack levels required when called:    7
 34271 ;; This function calls:
 34272 ;;		Nothing
 34273 ;; This function is called by:
 34274 ;;		_ExecuteLinkAdr
 34275 ;; This function uses a non-reentrant model
 34276 ;;
 34277                           
 34278                           	psect	text192
 34279  00BF96                     __ptext192:
 34280                           	opt stack 0
 34281  00BF96                     _ValidateChannelMaskCntl:
 34282                           	opt stack 17
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;incstack = 0
 34286                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 34287  00BF96  0100               	movlb	0	; () banked
 34288  00BF98  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 34289                           
 34290                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 34291  00BF9A  0E00               	movlw	0
 34292  00BF9C  0100               	movlb	0	; () banked
 34293  00BF9E  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 34294                           
 34295                           ; BSR set to: 0
 34296                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 34297  00BFA0  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 34298  00BFA2  B4D8               	btfsc	status,2,c
 34299  00BFA4  D006               	goto	l1588
 34300                           
 34301                           ; BSR set to: 0
 34302  00BFA6  0E06               	movlw	6
 34303  00BFA8  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 34304  00BFAA  B4D8               	btfsc	status,2,c
 34305  00BFAC  D002               	goto	l1588
 34306                           
 34307                           ; BSR set to: 0
 34308                           ;lorawan_eu.c: 1142: {
 34309                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 34310  00BFAE  0E03               	movlw	3
 34311  00BFB0  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 34312  00BFB2                     l1588:
 34313                           
 34314                           ; BSR set to: 0
 34315                           ;lorawan_eu.c: 1144: }
 34316                           ;lorawan_eu.c: 1146: return result;
 34317  00BFB2  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 34318  00BFB4  0012               	return	
 34319  00BFB6                     __end_of_ValidateChannelMaskCntl:
 34320                           	opt stack 0
 34321                           tosu	equ	0xFFF
 34322                           tosh	equ	0xFFE
 34323                           tosl	equ	0xFFD
 34324                           pclath	equ	0xFFA
 34325                           tblptru	equ	0xFF8
 34326                           tblptrh	equ	0xFF7
 34327                           tblptrl	equ	0xFF6
 34328                           tablat	equ	0xFF5
 34329                           prodh	equ	0xFF4
 34330                           prodl	equ	0xFF3
 34331                           intcon	equ	0xFF2
 34332                           intcon2	equ	0xFF1
 34333                           intcon3	equ	0xFF0
 34334                           indf0	equ	0xFEF
 34335                           postinc0	equ	0xFEE
 34336                           fsr0h	equ	0xFEA
 34337                           fsr0l	equ	0xFE9
 34338                           wreg	equ	0xFE8
 34339                           postinc1	equ	0xFE6
 34340                           postdec1	equ	0xFE5
 34341                           plusw1	equ	0xFE3
 34342                           fsr1h	equ	0xFE2
 34343                           fsr1l	equ	0xFE1
 34344                           indf2	equ	0xFDF
 34345                           postinc2	equ	0xFDE
 34346                           postdec2	equ	0xFDD
 34347                           plusw2	equ	0xFDB
 34348                           fsr2h	equ	0xFDA
 34349                           fsr2l	equ	0xFD9
 34350                           status	equ	0xFD8
 34351                           
 34352 ;; *************** function _ValidateChannelMask *****************
 34353 ;; Defined at:
 34354 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34355 ;; Parameters:    Size  Location     Type
 34356 ;;  channelMask     2    0[BANK0 ] unsigned int 
 34357 ;; Auto vars:     Size  Location     Type
 34358 ;;  i               1    4[BANK0 ] unsigned char 
 34359 ;; Return value:  Size  Location     Type
 34360 ;;                  1    wreg      enum E7249
 34361 ;; Registers used:
 34362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34363 ;; Tracked objects:
 34364 ;;		On entry : 0/0
 34365 ;;		On exit  : 0/0
 34366 ;;		Unchanged: 0/0
 34367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34371 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34372 ;;Total ram usage:        5 bytes
 34373 ;; Hardware stack levels used:    1
 34374 ;; Hardware stack levels required when called:    7
 34375 ;; This function calls:
 34376 ;;		Nothing
 34377 ;; This function is called by:
 34378 ;;		_ExecuteLinkAdr
 34379 ;; This function uses a non-reentrant model
 34380 ;;
 34381                           
 34382                           	psect	text193
 34383  00AC10                     __ptext193:
 34384                           	opt stack 0
 34385  00AC10                     _ValidateChannelMask:
 34386                           	opt stack 17
 34387                           
 34388                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 34389                           
 34390                           ; BSR set to: 0
 34391                           ;incstack = 0
 34392  00AC10  0E00               	movlw	0
 34393  00AC12  0100               	movlb	0	; () banked
 34394  00AC14  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 34395                           
 34396                           ; BSR set to: 0
 34397                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 34398  00AC16  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 34399  00AC18  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 34400  00AC1A  B4D8               	btfsc	status,2,c
 34401  00AC1C  D026               	goto	l1601
 34402                           
 34403                           ; BSR set to: 0
 34404                           ;lorawan_eu.c: 1171: {
 34405                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 34406  00AC1E  0E00               	movlw	0
 34407  00AC20  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 34408  00AC22                     l18540:
 34409                           
 34410                           ; BSR set to: 0
 34411  00AC22  0E0F               	movlw	15
 34412  00AC24  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 34413  00AC26  D001               	goto	l1602
 34414  00AC28  D01E               	goto	u20790
 34415  00AC2A                     l1602:
 34416                           
 34417                           ; BSR set to: 0
 34418                           ;lorawan_eu.c: 1173: {
 34419                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 34420  00AC2A  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 34421  00AC2C  D013               	goto	l1604
 34422                           
 34423                           ; BSR set to: 0
 34424  00AC2E  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 34425  00AC30  0D0E               	mullw	14
 34426  00AC32  0E0D               	movlw	13
 34427  00AC34  26F3               	addwf	prodl,f,c
 34428  00AC36  0E00               	movlw	0
 34429  00AC38  22F4               	addwfc	prodh,f,c
 34430  00AC3A  0E00               	movlw	low _Channels
 34431  00AC3C  24F3               	addwf	prodl,w,c
 34432  00AC3E  6ED9               	movwf	fsr2l,c
 34433  00AC40  0E04               	movlw	high _Channels
 34434  00AC42  20F4               	addwfc	prodh,w,c
 34435  00AC44  6EDA               	movwf	fsr2h,c
 34436  00AC46  50DF               	movf	indf2,w,c
 34437  00AC48  0B07               	andlw	7
 34438  00AC4A  0A07               	xorlw	7
 34439  00AC4C  B4D8               	btfsc	status,2,c
 34440  00AC4E  D002               	goto	l1604
 34441                           
 34442                           ; BSR set to: 0
 34443                           ;lorawan_eu.c: 1175: {
 34444                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 34445  00AC50  0E03               	movlw	3
 34446                           
 34447                           ; BSR set to: 0
 34448  00AC52  0012               	return	
 34449  00AC54                     l1604:
 34450                           
 34451                           ; BSR set to: 0
 34452                           ;lorawan_eu.c: 1178: else
 34453                           ;lorawan_eu.c: 1179: {
 34454                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 34455                           
 34456                           ; BSR set to: 0
 34457  00AC54  90D8               	bcf	status,0,c
 34458  00AC56  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 34459  00AC58  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 34460  00AC5A  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 34461  00AC5C  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 34462  00AC5E  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 34463                           
 34464                           ; BSR set to: 0
 34465                           
 34466                           ; BSR set to: 0
 34467  00AC62  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 34468  00AC64  D7DE               	goto	l18540
 34469  00AC66                     u20790:
 34470                           
 34471                           ; BSR set to: 0
 34472                           ;lorawan_eu.c: 1181: }
 34473                           ;lorawan_eu.c: 1182: }
 34474                           ;lorawan_eu.c: 1184: return OK;
 34475                           
 34476                           ; BSR set to: 0
 34477  00AC66  0E00               	movlw	0
 34478                           
 34479                           ; BSR set to: 0
 34480                           ;lorawan_eu.c: 1185: }
 34481                           
 34482                           ; BSR set to: 0
 34483  00AC68  0012               	return	
 34484  00AC6A                     l1601:
 34485                           
 34486                           ; BSR set to: 0
 34487                           ;lorawan_eu.c: 1186: else
 34488                           ;lorawan_eu.c: 1187: {
 34489                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 34490                           
 34491                           ; BSR set to: 0
 34492  00AC6A  0E03               	movlw	3
 34493                           
 34494                           ; BSR set to: 0
 34495  00AC6C  0012               	return	
 34496  00AC6E                     __end_of_ValidateChannelMask:
 34497                           	opt stack 0
 34498                           tosu	equ	0xFFF
 34499                           tosh	equ	0xFFE
 34500                           tosl	equ	0xFFD
 34501                           pclath	equ	0xFFA
 34502                           tblptru	equ	0xFF8
 34503                           tblptrh	equ	0xFF7
 34504                           tblptrl	equ	0xFF6
 34505                           tablat	equ	0xFF5
 34506                           prodh	equ	0xFF4
 34507                           prodl	equ	0xFF3
 34508                           intcon	equ	0xFF2
 34509                           intcon2	equ	0xFF1
 34510                           intcon3	equ	0xFF0
 34511                           indf0	equ	0xFEF
 34512                           postinc0	equ	0xFEE
 34513                           fsr0h	equ	0xFEA
 34514                           fsr0l	equ	0xFE9
 34515                           wreg	equ	0xFE8
 34516                           postinc1	equ	0xFE6
 34517                           postdec1	equ	0xFE5
 34518                           plusw1	equ	0xFE3
 34519                           fsr1h	equ	0xFE2
 34520                           fsr1l	equ	0xFE1
 34521                           indf2	equ	0xFDF
 34522                           postinc2	equ	0xFDE
 34523                           postdec2	equ	0xFDD
 34524                           plusw2	equ	0xFDB
 34525                           fsr2h	equ	0xFDA
 34526                           fsr2l	equ	0xFD9
 34527                           status	equ	0xFD8
 34528                           
 34529 ;; *************** function _UpdateTxPower *****************
 34530 ;; Defined at:
 34531 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34532 ;; Parameters:    Size  Location     Type
 34533 ;;  txPowerNew      1    wreg     unsigned char 
 34534 ;; Auto vars:     Size  Location     Type
 34535 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 34536 ;; Return value:  Size  Location     Type
 34537 ;;                  1    wreg      void 
 34538 ;; Registers used:
 34539 ;;		wreg
 34540 ;; Tracked objects:
 34541 ;;		On entry : 0/0
 34542 ;;		On exit  : 0/0
 34543 ;;		Unchanged: 0/0
 34544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34549 ;;Total ram usage:        1 bytes
 34550 ;; Hardware stack levels used:    1
 34551 ;; Hardware stack levels required when called:    7
 34552 ;; This function calls:
 34553 ;;		Nothing
 34554 ;; This function is called by:
 34555 ;;		_ExecuteLinkAdr
 34556 ;;		_LORAWAN_SetTxPower
 34557 ;; This function uses a non-reentrant model
 34558 ;;
 34559                           
 34560                           	psect	text194
 34561  00C58C                     __ptext194:
 34562                           	opt stack 0
 34563  00C58C                     _UpdateTxPower:
 34564                           	opt stack 17
 34565                           
 34566                           ; BSR set to: 0
 34567                           ;incstack = 0
 34568                           ;UpdateTxPower@txPowerNew stored from wreg
 34569  00C58C  0100               	movlb	0	; () banked
 34570  00C58E  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 34571                           
 34572                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 34573  00C590  C060  F2E5         	movff	UpdateTxPower@txPowerNew,_loRa+225
 34574  00C594  0012               	return		;funcret
 34575  00C596                     __end_of_UpdateTxPower:
 34576                           	opt stack 0
 34577                           tosu	equ	0xFFF
 34578                           tosh	equ	0xFFE
 34579                           tosl	equ	0xFFD
 34580                           pclath	equ	0xFFA
 34581                           tblptru	equ	0xFF8
 34582                           tblptrh	equ	0xFF7
 34583                           tblptrl	equ	0xFF6
 34584                           tablat	equ	0xFF5
 34585                           prodh	equ	0xFF4
 34586                           prodl	equ	0xFF3
 34587                           intcon	equ	0xFF2
 34588                           intcon2	equ	0xFF1
 34589                           intcon3	equ	0xFF0
 34590                           indf0	equ	0xFEF
 34591                           postinc0	equ	0xFEE
 34592                           fsr0h	equ	0xFEA
 34593                           fsr0l	equ	0xFE9
 34594                           wreg	equ	0xFE8
 34595                           postinc1	equ	0xFE6
 34596                           postdec1	equ	0xFE5
 34597                           plusw1	equ	0xFE3
 34598                           fsr1h	equ	0xFE2
 34599                           fsr1l	equ	0xFE1
 34600                           indf2	equ	0xFDF
 34601                           postinc2	equ	0xFDE
 34602                           postdec2	equ	0xFDD
 34603                           plusw2	equ	0xFDB
 34604                           fsr2h	equ	0xFDA
 34605                           fsr2l	equ	0xFD9
 34606                           status	equ	0xFD8
 34607                           
 34608 ;; *************** function _UpdateCurrentDataRate *****************
 34609 ;; Defined at:
 34610 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34611 ;; Parameters:    Size  Location     Type
 34612 ;;  valueNew        1    wreg     unsigned char 
 34613 ;; Auto vars:     Size  Location     Type
 34614 ;;  valueNew        1    0[BANK0 ] unsigned char 
 34615 ;; Return value:  Size  Location     Type
 34616 ;;                  1    wreg      void 
 34617 ;; Registers used:
 34618 ;;		wreg
 34619 ;; Tracked objects:
 34620 ;;		On entry : 0/0
 34621 ;;		On exit  : 0/0
 34622 ;;		Unchanged: 0/0
 34623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34627 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34628 ;;Total ram usage:        1 bytes
 34629 ;; Hardware stack levels used:    1
 34630 ;; Hardware stack levels required when called:    7
 34631 ;; This function calls:
 34632 ;;		Nothing
 34633 ;; This function is called by:
 34634 ;;		_ExecuteLinkAdr
 34635 ;;		_LORAWAN_SetCurrentDataRate
 34636 ;; This function uses a non-reentrant model
 34637 ;;
 34638                           
 34639                           	psect	text195
 34640  00C596                     __ptext195:
 34641                           	opt stack 0
 34642  00C596                     _UpdateCurrentDataRate:
 34643                           	opt stack 17
 34644                           
 34645                           ;incstack = 0
 34646                           ;UpdateCurrentDataRate@valueNew stored from wreg
 34647  00C596  0100               	movlb	0	; () banked
 34648  00C598  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 34649                           
 34650                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 34651  00C59A  C060  F2E3         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 34652  00C59E  0012               	return		;funcret
 34653  00C5A0                     __end_of_UpdateCurrentDataRate:
 34654                           	opt stack 0
 34655                           tosu	equ	0xFFF
 34656                           tosh	equ	0xFFE
 34657                           tosl	equ	0xFFD
 34658                           pclath	equ	0xFFA
 34659                           tblptru	equ	0xFF8
 34660                           tblptrh	equ	0xFF7
 34661                           tblptrl	equ	0xFF6
 34662                           tablat	equ	0xFF5
 34663                           prodh	equ	0xFF4
 34664                           prodl	equ	0xFF3
 34665                           intcon	equ	0xFF2
 34666                           intcon2	equ	0xFF1
 34667                           intcon3	equ	0xFF0
 34668                           indf0	equ	0xFEF
 34669                           postinc0	equ	0xFEE
 34670                           fsr0h	equ	0xFEA
 34671                           fsr0l	equ	0xFE9
 34672                           wreg	equ	0xFE8
 34673                           postinc1	equ	0xFE6
 34674                           postdec1	equ	0xFE5
 34675                           plusw1	equ	0xFE3
 34676                           fsr1h	equ	0xFE2
 34677                           fsr1l	equ	0xFE1
 34678                           indf2	equ	0xFDF
 34679                           postinc2	equ	0xFDE
 34680                           postdec2	equ	0xFDD
 34681                           plusw2	equ	0xFDB
 34682                           fsr2h	equ	0xFDA
 34683                           fsr2l	equ	0xFD9
 34684                           status	equ	0xFD8
 34685                           
 34686 ;; *************** function _EnableChannels *****************
 34687 ;; Defined at:
 34688 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34689 ;; Parameters:    Size  Location     Type
 34690 ;;  channelMask     2   12[BANK0 ] unsigned int 
 34691 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 34692 ;; Auto vars:     Size  Location     Type
 34693 ;;		None
 34694 ;; Return value:  Size  Location     Type
 34695 ;;                  1    wreg      void 
 34696 ;; Registers used:
 34697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34698 ;; Tracked objects:
 34699 ;;		On entry : 0/0
 34700 ;;		On exit  : 0/0
 34701 ;;		Unchanged: 0/0
 34702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34707 ;;Total ram usage:        3 bytes
 34708 ;; Hardware stack levels used:    1
 34709 ;; Hardware stack levels required when called:    9
 34710 ;; This function calls:
 34711 ;;		_EnableChannels1
 34712 ;; This function is called by:
 34713 ;;		_ExecuteLinkAdr
 34714 ;; This function uses a non-reentrant model
 34715 ;;
 34716                           
 34717                           	psect	text196
 34718  00C166                     __ptext196:
 34719                           	opt stack 0
 34720  00C166                     _EnableChannels:
 34721                           	opt stack 15
 34722                           
 34723                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 34724                           
 34725                           ;incstack = 0
 34726  00C166  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 34727  00C16A  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 34728  00C16E  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 34729  00C172  0E00               	movlw	0
 34730  00C174  0100               	movlb	0	; () banked
 34731  00C176  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 34732  00C178  0E10               	movlw	16
 34733  00C17A  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 34734  00C17C  EC45  F053         	call	_EnableChannels1	;wreg free
 34735  00C180  0012               	return		;funcret
 34736  00C182                     __end_of_EnableChannels:
 34737                           	opt stack 0
 34738                           tosu	equ	0xFFF
 34739                           tosh	equ	0xFFE
 34740                           tosl	equ	0xFFD
 34741                           pclath	equ	0xFFA
 34742                           tblptru	equ	0xFF8
 34743                           tblptrh	equ	0xFF7
 34744                           tblptrl	equ	0xFF6
 34745                           tablat	equ	0xFF5
 34746                           prodh	equ	0xFF4
 34747                           prodl	equ	0xFF3
 34748                           intcon	equ	0xFF2
 34749                           intcon2	equ	0xFF1
 34750                           intcon3	equ	0xFF0
 34751                           indf0	equ	0xFEF
 34752                           postinc0	equ	0xFEE
 34753                           fsr0h	equ	0xFEA
 34754                           fsr0l	equ	0xFE9
 34755                           wreg	equ	0xFE8
 34756                           postinc1	equ	0xFE6
 34757                           postdec1	equ	0xFE5
 34758                           plusw1	equ	0xFE3
 34759                           fsr1h	equ	0xFE2
 34760                           fsr1l	equ	0xFE1
 34761                           indf2	equ	0xFDF
 34762                           postinc2	equ	0xFDE
 34763                           postdec2	equ	0xFDD
 34764                           plusw2	equ	0xFDB
 34765                           fsr2h	equ	0xFDA
 34766                           fsr2l	equ	0xFD9
 34767                           status	equ	0xFD8
 34768                           
 34769 ;; *************** function _EnableChannels1 *****************
 34770 ;; Defined at:
 34771 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34772 ;; Parameters:    Size  Location     Type
 34773 ;;  channelMask     2    4[BANK0 ] unsigned int 
 34774 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 34775 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 34776 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 34777 ;; Auto vars:     Size  Location     Type
 34778 ;;  i               1   11[BANK0 ] unsigned char 
 34779 ;; Return value:  Size  Location     Type
 34780 ;;                  1    wreg      void 
 34781 ;; Registers used:
 34782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34783 ;; Tracked objects:
 34784 ;;		On entry : 0/0
 34785 ;;		On exit  : 0/0
 34786 ;;		Unchanged: 0/0
 34787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34788 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34791 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34792 ;;Total ram usage:        8 bytes
 34793 ;; Hardware stack levels used:    1
 34794 ;; Hardware stack levels required when called:    8
 34795 ;; This function calls:
 34796 ;;		_UpdateChannelIdStatus
 34797 ;; This function is called by:
 34798 ;;		_EnableChannels
 34799 ;; This function uses a non-reentrant model
 34800 ;;
 34801                           
 34802                           	psect	text197
 34803  00A68A                     __ptext197:
 34804                           	opt stack 0
 34805  00A68A                     _EnableChannels1:
 34806                           	opt stack 15
 34807                           
 34808                           ;lorawan_eu.c: 1195: uint8_t i;
 34809                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 34810                           
 34811                           ;incstack = 0
 34812  00A68A  0E06               	movlw	6
 34813  00A68C  0100               	movlb	0	; () banked
 34814  00A68E  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 34815  00A690  A4D8               	btfss	status,2,c
 34816  00A692  D00F               	goto	l1610
 34817                           
 34818                           ; BSR set to: 0
 34819                           ;lorawan_eu.c: 1198: {
 34820                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 34821  00A694  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 34822  00A698  D007               	goto	l1611
 34823  00A69A                     
 34824                           ; BSR set to: 0
 34825                           ;lorawan_eu.c: 1200: {
 34826                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 34827                           
 34828                           ; BSR set to: 0
 34829  00A69A  0E01               	movlw	1
 34830  00A69C  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34831  00A69E  516B               	movf	EnableChannels1@i& (0+255),w,b
 34832  00A6A0  EC31  F03A         	call	_UpdateChannelIdStatus
 34833  00A6A4  0100               	movlb	0	; () banked
 34834  00A6A6  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 34835  00A6A8                     l1611:
 34836                           
 34837                           ; BSR set to: 0
 34838                           
 34839                           ; BSR set to: 0
 34840  00A6A8  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 34841  00A6AA  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 34842  00A6AC  B0D8               	btfsc	status,0,c
 34843  00A6AE  0012               	return	
 34844  00A6B0  D7F4               	goto	l1612
 34845  00A6B2                     l1610:
 34846                           
 34847                           ; BSR set to: 0
 34848                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 34849                           
 34850                           ; BSR set to: 0
 34851  00A6B2  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 34852  00A6B4  A4D8               	btfss	status,2,c
 34853  00A6B6  0012               	return	
 34854                           
 34855                           ; BSR set to: 0
 34856                           ;lorawan_eu.c: 1205: {
 34857                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 34858  00A6B8  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 34859  00A6BC  D017               	goto	l1616
 34860  00A6BE                     l1617:
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;lorawan_eu.c: 1207: {
 34864                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 34865  00A6BE  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 34866  00A6C0  D006               	goto	l1618
 34867                           
 34868                           ; BSR set to: 0
 34869                           ;lorawan_eu.c: 1209: {
 34870                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 34871  00A6C2  0E01               	movlw	1
 34872  00A6C4  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34873  00A6C6  516B               	movf	EnableChannels1@i& (0+255),w,b
 34874  00A6C8  EC31  F03A         	call	_UpdateChannelIdStatus
 34875                           
 34876                           ;lorawan_eu.c: 1211: }
 34877  00A6CC  D006               	goto	l1619
 34878  00A6CE                     l1618:
 34879                           
 34880                           ;lorawan_eu.c: 1212: else
 34881                           ;lorawan_eu.c: 1213: {
 34882                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 34883  00A6CE  0E00               	movlw	0
 34884  00A6D0  0100               	movlb	0	; () banked
 34885  00A6D2  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 34886  00A6D4  516B               	movf	EnableChannels1@i& (0+255),w,b
 34887  00A6D6  EC31  F03A         	call	_UpdateChannelIdStatus
 34888  00A6DA                     l1619:
 34889                           
 34890                           ;lorawan_eu.c: 1215: }
 34891                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 34892  00A6DA  90D8               	bcf	status,0,c
 34893  00A6DC  0100               	movlb	0	; () banked
 34894  00A6DE  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 34895  00A6E0  6F69               	movwf	??_EnableChannels1& (0+255),b
 34896  00A6E2  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 34897  00A6E4  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 34898  00A6E6  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 34899                           
 34900                           ; BSR set to: 0
 34901  00A6EA  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 34902  00A6EC                     l1616:
 34903                           
 34904                           ; BSR set to: 0
 34905                           
 34906                           ; BSR set to: 0
 34907  00A6EC  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 34908  00A6EE  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 34909  00A6F0  B0D8               	btfsc	status,0,c
 34910  00A6F2  0012               	return	
 34911  00A6F4  D7E4               	goto	l1617
 34912  00A6F6                     __end_of_EnableChannels1:
 34913                           	opt stack 0
 34914                           tosu	equ	0xFFF
 34915                           tosh	equ	0xFFE
 34916                           tosl	equ	0xFFD
 34917                           pclath	equ	0xFFA
 34918                           tblptru	equ	0xFF8
 34919                           tblptrh	equ	0xFF7
 34920                           tblptrl	equ	0xFF6
 34921                           tablat	equ	0xFF5
 34922                           prodh	equ	0xFF4
 34923                           prodl	equ	0xFF3
 34924                           intcon	equ	0xFF2
 34925                           intcon2	equ	0xFF1
 34926                           intcon3	equ	0xFF0
 34927                           indf0	equ	0xFEF
 34928                           postinc0	equ	0xFEE
 34929                           fsr0h	equ	0xFEA
 34930                           fsr0l	equ	0xFE9
 34931                           wreg	equ	0xFE8
 34932                           postinc1	equ	0xFE6
 34933                           postdec1	equ	0xFE5
 34934                           plusw1	equ	0xFE3
 34935                           fsr1h	equ	0xFE2
 34936                           fsr1l	equ	0xFE1
 34937                           indf2	equ	0xFDF
 34938                           postinc2	equ	0xFDE
 34939                           postdec2	equ	0xFDD
 34940                           plusw2	equ	0xFDB
 34941                           fsr2h	equ	0xFDA
 34942                           fsr2l	equ	0xFD9
 34943                           status	equ	0xFD8
 34944                           
 34945 ;; *************** function _UpdateChannelIdStatus *****************
 34946 ;; Defined at:
 34947 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34948 ;; Parameters:    Size  Location     Type
 34949 ;;  channelId       1    wreg     unsigned char 
 34950 ;;  statusNew       1    0[BANK0 ] unsigned char 
 34951 ;; Auto vars:     Size  Location     Type
 34952 ;;  channelId       1    2[BANK0 ] unsigned char 
 34953 ;;  i               1    3[BANK0 ] unsigned char 
 34954 ;; Return value:  Size  Location     Type
 34955 ;;                  1    wreg      void 
 34956 ;; Registers used:
 34957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34958 ;; Tracked objects:
 34959 ;;		On entry : 0/0
 34960 ;;		On exit  : 0/0
 34961 ;;		Unchanged: 0/0
 34962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34963 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34967 ;;Total ram usage:        4 bytes
 34968 ;; Hardware stack levels used:    1
 34969 ;; Hardware stack levels required when called:    7
 34970 ;; This function calls:
 34971 ;;		Nothing
 34972 ;; This function is called by:
 34973 ;;		_LORAWAN_SetChannelIdStatus
 34974 ;;		_ExecuteNewChannel
 34975 ;;		_EnableChannels1
 34976 ;; This function uses a non-reentrant model
 34977 ;;
 34978                           
 34979                           	psect	text198
 34980  007462                     __ptext198:
 34981                           	opt stack 0
 34982  007462                     _UpdateChannelIdStatus:
 34983                           	opt stack 17
 34984                           
 34985                           ; BSR set to: 0
 34986                           ;incstack = 0
 34987                           ;UpdateChannelIdStatus@channelId stored from wreg
 34988  007462  0100               	movlb	0	; () banked
 34989  007464  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 34990                           
 34991                           ;lorawan_eu.c: 1044: uint8_t i;
 34992                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 34993  007466  0100               	movlb	0	; () banked
 34994  007468  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 34995  00746A  0D0E               	mullw	14
 34996  00746C  0E04               	movlw	4
 34997  00746E  26F3               	addwf	prodl,f,c
 34998  007470  0E00               	movlw	0
 34999  007472  22F4               	addwfc	prodh,f,c
 35000  007474  0E00               	movlw	low _Channels
 35001  007476  24F3               	addwf	prodl,w,c
 35002  007478  6ED9               	movwf	fsr2l,c
 35003  00747A  0E04               	movlw	high _Channels
 35004  00747C  20F4               	addwfc	prodh,w,c
 35005  00747E  6EDA               	movwf	fsr2h,c
 35006  007480  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 35007                           
 35008                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 35009  007484  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 35010  007486  0D0E               	mullw	14
 35011  007488  0E04               	movlw	4
 35012  00748A  26F3               	addwf	prodl,f,c
 35013  00748C  0E00               	movlw	0
 35014  00748E  22F4               	addwfc	prodh,f,c
 35015  007490  0E00               	movlw	low _Channels
 35016  007492  24F3               	addwf	prodl,w,c
 35017  007494  6ED9               	movwf	fsr2l,c
 35018  007496  0E04               	movlw	high _Channels
 35019  007498  20F4               	addwfc	prodh,w,c
 35020  00749A  6EDA               	movwf	fsr2h,c
 35021  00749C  50DF               	movf	indf2,w,c
 35022  00749E  A4D8               	btfss	status,2,c
 35023  0074A0  D010               	goto	l1550
 35024                           
 35025                           ; BSR set to: 0
 35026                           ;lorawan_eu.c: 1048: {
 35027                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 35028  0074A2  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 35029  0074A4  0D0E               	mullw	14
 35030  0074A6  0E08               	movlw	8
 35031  0074A8  26F3               	addwf	prodl,f,c
 35032  0074AA  0E00               	movlw	0
 35033  0074AC  22F4               	addwfc	prodh,f,c
 35034  0074AE  0E00               	movlw	low _Channels
 35035  0074B0  24F3               	addwf	prodl,w,c
 35036  0074B2  6ED9               	movwf	fsr2l,c
 35037  0074B4  0E04               	movlw	high _Channels
 35038  0074B6  20F4               	addwfc	prodh,w,c
 35039  0074B8  6EDA               	movwf	fsr2h,c
 35040  0074BA  6ADE               	clrf	postinc2,c
 35041  0074BC  6ADE               	clrf	postinc2,c
 35042  0074BE  6ADE               	clrf	postinc2,c
 35043  0074C0  6ADD               	clrf	postdec2,c
 35044  0074C2                     l1550:
 35045                           
 35046                           ; BSR set to: 0
 35047                           ;lorawan_eu.c: 1051: }
 35048                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 35049                           
 35050                           ; BSR set to: 0
 35051  0074C2  0E00               	movlw	0
 35052  0074C4  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 35053  0074C6  D06D               	goto	l1551
 35054  0074C8                     
 35055                           ; BSR set to: 0
 35056                           ;lorawan_eu.c: 1054: {
 35057                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 35058                           
 35059                           ; BSR set to: 0
 35060  0074C8  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35061  0074CA  0D0E               	mullw	14
 35062  0074CC  0E05               	movlw	5
 35063  0074CE  26F3               	addwf	prodl,f,c
 35064  0074D0  0E00               	movlw	0
 35065  0074D2  22F4               	addwfc	prodh,f,c
 35066  0074D4  0E00               	movlw	low _Channels
 35067  0074D6  24F3               	addwf	prodl,w,c
 35068  0074D8  6ED9               	movwf	fsr2l,c
 35069  0074DA  0E04               	movlw	high _Channels
 35070  0074DC  20F4               	addwfc	prodh,w,c
 35071  0074DE  6EDA               	movwf	fsr2h,c
 35072  0074E0  0104               	movlb	4	; () banked
 35073  0074E2  50DF               	movf	223,w,c
 35074  0074E4  0B0F               	andlw	15
 35075  0074E6  0100               	movlb	0	; () banked
 35076  0074E8  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 35077  0074EA  0102               	movlb	2	; () banked
 35078  0074EC  51EF               	movf	(_loRa+235)& (0+255),w,b
 35079  0074EE  0100               	movlb	0	; () banked
 35080  0074F0  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 35081  0074F2  B0D8               	btfsc	status,0,c
 35082  0074F4  D020               	goto	l1553
 35083                           
 35084                           ; BSR set to: 0
 35085  0074F6  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35086  0074F8  0D0E               	mullw	14
 35087  0074FA  0E04               	movlw	4
 35088  0074FC  26F3               	addwf	prodl,f,c
 35089  0074FE  0E00               	movlw	0
 35090  007500  22F4               	addwfc	prodh,f,c
 35091  007502  0E00               	movlw	low _Channels
 35092  007504  24F3               	addwf	prodl,w,c
 35093  007506  6ED9               	movwf	fsr2l,c
 35094  007508  0E04               	movlw	high _Channels
 35095  00750A  20F4               	addwfc	prodh,w,c
 35096  00750C  6EDA               	movwf	fsr2h,c
 35097  00750E  04DE               	decf	postinc2,w,c
 35098  007510  A4D8               	btfss	status,2,c
 35099  007512  D011               	goto	l1553
 35100                           
 35101                           ; BSR set to: 0
 35102                           ;lorawan_eu.c: 1056: {
 35103                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 35104  007514  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35105  007516  0D0E               	mullw	14
 35106  007518  0E05               	movlw	5
 35107  00751A  26F3               	addwf	prodl,f,c
 35108  00751C  0E00               	movlw	0
 35109  00751E  22F4               	addwfc	prodh,f,c
 35110  007520  0E00               	movlw	low _Channels
 35111  007522  24F3               	addwf	prodl,w,c
 35112  007524  6ED9               	movwf	fsr2l,c
 35113  007526  0E04               	movlw	high _Channels
 35114  007528  20F4               	addwfc	prodh,w,c
 35115  00752A  6EDA               	movwf	fsr2h,c
 35116  00752C  0104               	movlb	4	; () banked
 35117  00752E  50DF               	movf	223,w,c
 35118  007530  0B0F               	andlw	15
 35119  007532  0102               	movlb	2	; () banked
 35120  007534  6FEF               	movwf	(_loRa+235)& (0+255),b
 35121  007536                     l1553:
 35122                           
 35123                           ;lorawan_eu.c: 1058: }
 35124                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 35125  007536  0100               	movlb	0	; () banked
 35126  007538  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35127  00753A  0D0E               	mullw	14
 35128  00753C  0E05               	movlw	5
 35129  00753E  26F3               	addwf	prodl,f,c
 35130  007540  0E00               	movlw	0
 35131  007542  22F4               	addwfc	prodh,f,c
 35132  007544  0E00               	movlw	low _Channels
 35133  007546  24F3               	addwf	prodl,w,c
 35134  007548  6ED9               	movwf	fsr2l,c
 35135  00754A  0E04               	movlw	high _Channels
 35136  00754C  20F4               	addwfc	prodh,w,c
 35137  00754E  6EDA               	movwf	fsr2h,c
 35138  007550  0104               	movlb	4	; () banked
 35139  007552  38DF               	swapf	223,w,c
 35140  007554  0B0F               	andlw	15
 35141  007556  0102               	movlb	2	; () banked
 35142  007558  61F0               	cpfslt	(_loRa+236)& (0+255),b
 35143  00755A  D021               	goto	l1554
 35144                           
 35145                           ; BSR set to: 2
 35146  00755C  0100               	movlb	0	; () banked
 35147  00755E  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35148  007560  0D0E               	mullw	14
 35149  007562  0E04               	movlw	4
 35150  007564  26F3               	addwf	prodl,f,c
 35151  007566  0E00               	movlw	0
 35152  007568  22F4               	addwfc	prodh,f,c
 35153  00756A  0E00               	movlw	low _Channels
 35154  00756C  24F3               	addwf	prodl,w,c
 35155  00756E  6ED9               	movwf	fsr2l,c
 35156  007570  0E04               	movlw	high _Channels
 35157  007572  20F4               	addwfc	prodh,w,c
 35158  007574  6EDA               	movwf	fsr2h,c
 35159  007576  04DE               	decf	postinc2,w,c
 35160  007578  A4D8               	btfss	status,2,c
 35161  00757A  D011               	goto	l1554
 35162                           
 35163                           ; BSR set to: 0
 35164                           ;lorawan_eu.c: 1060: {
 35165                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 35166  00757C  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 35167  00757E  0D0E               	mullw	14
 35168  007580  0E05               	movlw	5
 35169  007582  26F3               	addwf	prodl,f,c
 35170  007584  0E00               	movlw	0
 35171  007586  22F4               	addwfc	prodh,f,c
 35172  007588  0E00               	movlw	low _Channels
 35173  00758A  24F3               	addwf	prodl,w,c
 35174  00758C  6ED9               	movwf	fsr2l,c
 35175  00758E  0E04               	movlw	high _Channels
 35176  007590  20F4               	addwfc	prodh,w,c
 35177  007592  6EDA               	movwf	fsr2h,c
 35178  007594  0104               	movlb	4	; () banked
 35179  007596  38DF               	swapf	223,w,c
 35180  007598  0B0F               	andlw	15
 35181  00759A  0102               	movlb	2	; () banked
 35182  00759C  6FF0               	movwf	(_loRa+236)& (0+255),b
 35183  00759E                     l1554:
 35184                           
 35185                           ; BSR set to: 2
 35186  00759E  0100               	movlb	0	; () banked
 35187  0075A0  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 35188  0075A2                     l1551:
 35189                           
 35190                           ; BSR set to: 0
 35191                           
 35192                           ; BSR set to: 0
 35193  0075A2  0102               	movlb	2	; () banked
 35194  0075A4  51F1               	movf	(_loRa+237)& (0+255),w,b
 35195  0075A6  0100               	movlb	0	; () banked
 35196  0075A8  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 35197  0075AA  A0D8               	btfss	status,0,c
 35198  0075AC  D78D               	goto	l1552
 35199                           
 35200                           ; BSR set to: 0
 35201                           ;lorawan_eu.c: 1062: }
 35202                           ;lorawan_eu.c: 1063: }
 35203                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 35204                           
 35205                           ; BSR set to: 0
 35206  0075AE  0102               	movlb	2	; () banked
 35207  0075B0  51E3               	movf	(_loRa+223)& (0+255),w,b
 35208  0075B2  5DF0               	subwf	(_loRa+236)& (0+255),w,b
 35209  0075B4  A0D8               	btfss	status,0,c
 35210                           
 35211                           ; BSR set to: 2
 35212                           ;lorawan_eu.c: 1066: {
 35213                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 35214  0075B6  C2F0  F2E3         	movff	_loRa+236,_loRa+223
 35215                           
 35216                           ; BSR set to: 2
 35217                           ;lorawan_eu.c: 1068: }
 35218                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 35219                           
 35220                           ; BSR set to: 2
 35221  0075BA  51EF               	movf	(_loRa+235)& (0+255),w,b
 35222  0075BC  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 35223  0075BE  B0D8               	btfsc	status,0,c
 35224  0075C0  0012               	return	
 35225                           
 35226                           ; BSR set to: 2
 35227                           ;lorawan_eu.c: 1071: {
 35228                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 35229  0075C2  C2EF  F2E3         	movff	_loRa+235,_loRa+223
 35230  0075C6  0012               	return	
 35231  0075C8                     __end_of_UpdateChannelIdStatus:
 35232                           	opt stack 0
 35233                           tosu	equ	0xFFF
 35234                           tosh	equ	0xFFE
 35235                           tosl	equ	0xFFD
 35236                           pclath	equ	0xFFA
 35237                           tblptru	equ	0xFF8
 35238                           tblptrh	equ	0xFF7
 35239                           tblptrl	equ	0xFF6
 35240                           tablat	equ	0xFF5
 35241                           prodh	equ	0xFF4
 35242                           prodl	equ	0xFF3
 35243                           intcon	equ	0xFF2
 35244                           intcon2	equ	0xFF1
 35245                           intcon3	equ	0xFF0
 35246                           indf0	equ	0xFEF
 35247                           postinc0	equ	0xFEE
 35248                           fsr0h	equ	0xFEA
 35249                           fsr0l	equ	0xFE9
 35250                           wreg	equ	0xFE8
 35251                           postinc1	equ	0xFE6
 35252                           postdec1	equ	0xFE5
 35253                           plusw1	equ	0xFE3
 35254                           fsr1h	equ	0xFE2
 35255                           fsr1l	equ	0xFE1
 35256                           indf2	equ	0xFDF
 35257                           postinc2	equ	0xFDE
 35258                           postdec2	equ	0xFDD
 35259                           plusw2	equ	0xFDB
 35260                           fsr2h	equ	0xFDA
 35261                           fsr2l	equ	0xFD9
 35262                           status	equ	0xFD8
 35263                           
 35264 ;; *************** function _ExecuteDutyCycle *****************
 35265 ;; Defined at:
 35266 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35267 ;; Parameters:    Size  Location     Type
 35268 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 35269 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 35270 ;; Auto vars:     Size  Location     Type
 35271 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 35272 ;; Return value:  Size  Location     Type
 35273 ;;                  2    0[BANK0 ] PTR unsigned char 
 35274 ;; Registers used:
 35275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35276 ;; Tracked objects:
 35277 ;;		On entry : 0/0
 35278 ;;		On exit  : 0/0
 35279 ;;		Unchanged: 0/0
 35280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35283 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35285 ;;Total ram usage:        6 bytes
 35286 ;; Hardware stack levels used:    1
 35287 ;; Hardware stack levels required when called:    7
 35288 ;; This function calls:
 35289 ;;		Nothing
 35290 ;; This function is called by:
 35291 ;;		_MacExecuteCommands
 35292 ;; This function uses a non-reentrant model
 35293 ;;
 35294                           
 35295                           	psect	text199
 35296  00AFE2                     __ptext199:
 35297                           	opt stack 0
 35298  00AFE2                     _ExecuteDutyCycle:
 35299                           	opt stack 18
 35300                           
 35301                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 35302                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 35303                           
 35304                           ; BSR set to: 2
 35305                           ;incstack = 0
 35306  00AFE2  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 35307  00AFE6  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 35308  00AFEA  50DF               	movf	indf2,w,c
 35309  00AFEC  0100               	movlb	0	; () banked
 35310  00AFEE  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 35311                           
 35312                           ; BSR set to: 0
 35313  00AFF0  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 35314  00AFF2  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 35315                           
 35316                           ; BSR set to: 0
 35317                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 35318  00AFF4  0E0F               	movlw	15
 35319  00AFF6  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 35320  00AFF8  D013               	goto	l1429
 35321                           
 35322                           ; BSR set to: 0
 35323                           ;lorawan_eu.c: 600: {
 35324                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 35325  00AFFA  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 35326  00AFFE  0E01               	movlw	1
 35327  00B000  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 35328  00B002  0E00               	movlw	0
 35329  00B004  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 35330  00B006  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 35331  00B008  D003               	goto	u21434
 35332  00B00A                     u21435:
 35333  00B00A  90D8               	bcf	status,0,c
 35334  00B00C  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 35335  00B00E  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 35336  00B010                     u21434:
 35337  00B010  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 35338  00B012  D7FB               	goto	u21435
 35339  00B014  C063  F2DF         	movff	??_ExecuteDutyCycle+1,_loRa+219
 35340  00B018  C064  F2E0         	movff	??_ExecuteDutyCycle+2,_loRa+220
 35341                           
 35342                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 35343  00B01C  0102               	movlb	2	; () banked
 35344  00B01E  8D07               	bsf	(_loRa+3)& (0+255),6,b
 35345  00B020                     l1429:
 35346                           
 35347                           ;lorawan_eu.c: 603: }
 35348                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 35349  00B020  0100               	movlb	0	; () banked
 35350  00B022  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 35351  00B024  A4D8               	btfss	status,2,c
 35352  00B026  D002               	goto	l1430
 35353                           
 35354                           ; BSR set to: 0
 35355                           ;lorawan_eu.c: 606: {
 35356                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 35357  00B028  0102               	movlb	2	; () banked
 35358  00B02A  8F06               	bsf	(_loRa+2)& (0+255),7,b
 35359  00B02C                     l1430:
 35360                           
 35361                           ;lorawan_eu.c: 608: }
 35362                           ;lorawan_eu.c: 610: return ptr;
 35363                           
 35364                           ; BSR set to: 2
 35365  00B02C  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 35366  00B030  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 35367  00B034  0012               	return	
 35368  00B036                     __end_of_ExecuteDutyCycle:
 35369                           	opt stack 0
 35370                           tosu	equ	0xFFF
 35371                           tosh	equ	0xFFE
 35372                           tosl	equ	0xFFD
 35373                           pclath	equ	0xFFA
 35374                           tblptru	equ	0xFF8
 35375                           tblptrh	equ	0xFF7
 35376                           tblptrl	equ	0xFF6
 35377                           tablat	equ	0xFF5
 35378                           prodh	equ	0xFF4
 35379                           prodl	equ	0xFF3
 35380                           intcon	equ	0xFF2
 35381                           intcon2	equ	0xFF1
 35382                           intcon3	equ	0xFF0
 35383                           indf0	equ	0xFEF
 35384                           postinc0	equ	0xFEE
 35385                           fsr0h	equ	0xFEA
 35386                           fsr0l	equ	0xFE9
 35387                           wreg	equ	0xFE8
 35388                           postinc1	equ	0xFE6
 35389                           postdec1	equ	0xFE5
 35390                           plusw1	equ	0xFE3
 35391                           fsr1h	equ	0xFE2
 35392                           fsr1l	equ	0xFE1
 35393                           indf2	equ	0xFDF
 35394                           postinc2	equ	0xFDE
 35395                           postdec2	equ	0xFDD
 35396                           plusw2	equ	0xFDB
 35397                           fsr2h	equ	0xFDA
 35398                           fsr2l	equ	0xFD9
 35399                           status	equ	0xFD8
 35400                           
 35401 ;; *************** function _ExecuteDevStatus *****************
 35402 ;; Defined at:
 35403 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35404 ;; Parameters:    Size  Location     Type
 35405 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 35406 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 35407 ;; Auto vars:     Size  Location     Type
 35408 ;;		None
 35409 ;; Return value:  Size  Location     Type
 35410 ;;                  2    0[BANK0 ] PTR unsigned char 
 35411 ;; Registers used:
 35412 ;;		wreg, status,2, status,0
 35413 ;; Tracked objects:
 35414 ;;		On entry : 0/0
 35415 ;;		On exit  : 0/0
 35416 ;;		Unchanged: 0/0
 35417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35422 ;;Total ram usage:        2 bytes
 35423 ;; Hardware stack levels used:    1
 35424 ;; Hardware stack levels required when called:    7
 35425 ;; This function calls:
 35426 ;;		Nothing
 35427 ;; This function is called by:
 35428 ;;		_MacExecuteCommands
 35429 ;; This function uses a non-reentrant model
 35430 ;;
 35431                           
 35432                           	psect	text200
 35433  00C5A0                     __ptext200:
 35434                           	opt stack 0
 35435  00C5A0                     _ExecuteDevStatus:
 35436                           	opt stack 18
 35437                           
 35438                           ;lorawan_eu.c: 674: return ptr;
 35439                           
 35440                           ;incstack = 0
 35441  00C5A0  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 35442  00C5A4  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 35443  00C5A8  0012               	return	
 35444  00C5AA                     __end_of_ExecuteDevStatus:
 35445                           	opt stack 0
 35446                           tosu	equ	0xFFF
 35447                           tosh	equ	0xFFE
 35448                           tosl	equ	0xFFD
 35449                           pclath	equ	0xFFA
 35450                           tblptru	equ	0xFF8
 35451                           tblptrh	equ	0xFF7
 35452                           tblptrl	equ	0xFF6
 35453                           tablat	equ	0xFF5
 35454                           prodh	equ	0xFF4
 35455                           prodl	equ	0xFF3
 35456                           intcon	equ	0xFF2
 35457                           intcon2	equ	0xFF1
 35458                           intcon3	equ	0xFF0
 35459                           indf0	equ	0xFEF
 35460                           postinc0	equ	0xFEE
 35461                           fsr0h	equ	0xFEA
 35462                           fsr0l	equ	0xFE9
 35463                           wreg	equ	0xFE8
 35464                           postinc1	equ	0xFE6
 35465                           postdec1	equ	0xFE5
 35466                           plusw1	equ	0xFE3
 35467                           fsr1h	equ	0xFE2
 35468                           fsr1l	equ	0xFE1
 35469                           indf2	equ	0xFDF
 35470                           postinc2	equ	0xFDE
 35471                           postdec2	equ	0xFDD
 35472                           plusw2	equ	0xFDB
 35473                           fsr2h	equ	0xFDA
 35474                           fsr2l	equ	0xFD9
 35475                           status	equ	0xFD8
 35476                           
 35477 ;; *************** function _LORAWAN_Send *****************
 35478 ;; Defined at:
 35479 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35480 ;; Parameters:    Size  Location     Type
 35481 ;;  confirmed       1    wreg     enum E7217
 35482 ;;  port            1  115[BANK0 ] unsigned char 
 35483 ;;  buffer          2  116[BANK0 ] PTR void 
 35484 ;;		 -> data(8), NULL(0), 
 35485 ;;  bufferLength    1  118[BANK0 ] unsigned char 
 35486 ;; Auto vars:     Size  Location     Type
 35487 ;;  confirmed       1  121[BANK0 ] enum E7217
 35488 ;;  result          1  120[BANK0 ] enum E7190
 35489 ;; Return value:  Size  Location     Type
 35490 ;;                  1    wreg      enum E7190
 35491 ;; Registers used:
 35492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35493 ;; Tracked objects:
 35494 ;;		On entry : 0/0
 35495 ;;		On exit  : 0/0
 35496 ;;		Unchanged: 0/0
 35497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35499 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35501 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35502 ;;Total ram usage:        7 bytes
 35503 ;; Hardware stack levels used:    1
 35504 ;; Hardware stack levels required when called:   13
 35505 ;; This function calls:
 35506 ;;		_AssemblePacket
 35507 ;;		_LORAWAN_GetMaxPayloadSize
 35508 ;;		_RADIO_ReceiveStop
 35509 ;;		_RADIO_Transmit
 35510 ;;		_SelectChannelForTransmission
 35511 ;; This function is called by:
 35512 ;;		_AutomaticReplyCallback
 35513 ;;		_LORAWAN_RxDone
 35514 ;;		_main
 35515 ;; This function uses a non-reentrant model
 35516 ;;
 35517                           
 35518                           	psect	text201
 35519  0093B8                     __ptext201:
 35520                           	opt stack 0
 35521  0093B8                     _LORAWAN_Send:
 35522                           	opt stack 17
 35523                           
 35524                           ;incstack = 0
 35525                           ;LORAWAN_Send@confirmed stored from wreg
 35526  0093B8  0100               	movlb	0	; () banked
 35527  0093BA  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 35528                           
 35529                           ;lorawan.c: 187: LorawanError_t result;
 35530                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 35531  0093BC  0102               	movlb	2	; () banked
 35532  0093BE  B107               	btfsc	(_loRa+3)& (0+255),0,b
 35533  0093C0  0012               	return	
 35534                           
 35535                           ; BSR set to: 2
 35536                           ;lorawan.c: 192: }
 35537                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 35538                           
 35539                           ; BSR set to: 2
 35540                           ;lorawan.c: 190: {
 35541                           ;lorawan.c: 191: return MAC_PAUSED;
 35542                           ;	Return value of _LORAWAN_Send is never used
 35543  0093C2  BF06               	btfsc	(_loRa+2)& (0+255),7,b
 35544  0093C4  0012               	return	
 35545                           
 35546                           ; BSR set to: 2
 35547                           ;lorawan.c: 197: }
 35548                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 35549                           
 35550                           ; BSR set to: 2
 35551                           ;lorawan.c: 195: {
 35552                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 35553                           ;	Return value of _LORAWAN_Send is never used
 35554  0093C6  A906               	btfss	(_loRa+2)& (0+255),4,b
 35555  0093C8  0012               	return	
 35556                           
 35557                           ; BSR set to: 2
 35558                           ;lorawan.c: 202: }
 35559                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 35560                           
 35561                           ; BSR set to: 2
 35562                           
 35563                           ; BSR set to: 2
 35564                           ;lorawan.c: 200: {
 35565                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 35566                           ;	Return value of _LORAWAN_Send is never used
 35567  0093CA  0100               	movlb	0	; () banked
 35568  0093CC  51D3               	movf	LORAWAN_Send@port& (0+255),w,b
 35569  0093CE  A4D8               	btfss	status,2,c
 35570  0093D0  D003               	goto	l1851
 35571                           
 35572                           ; BSR set to: 0
 35573  0093D2  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 35574  0093D4  A4D8               	btfss	status,2,c
 35575  0093D6  0012               	return	
 35576  0093D8                     l1851:
 35577                           
 35578                           ; BSR set to: 0
 35579                           ;lorawan.c: 207: }
 35580                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 35581                           
 35582                           ; BSR set to: 0
 35583  0093D8  EC79  F055         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 35584  0093DC  0100               	movlb	0	; () banked
 35585  0093DE  6FD7               	movwf	??_LORAWAN_Send& (0+255),b
 35586  0093E0  51D6               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 35587  0093E2  5DD7               	subwf	??_LORAWAN_Send& (0+255),w,b
 35588  0093E4  A0D8               	btfss	status,0,c
 35589  0093E6  0012               	return	
 35590                           
 35591                           ; BSR set to: 0
 35592                           ;lorawan.c: 213: }
 35593                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 35594                           
 35595                           ; BSR set to: 0
 35596                           
 35597                           ; BSR set to: 0
 35598                           ;lorawan.c: 211: {
 35599                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 35600                           ;	Return value of _LORAWAN_Send is never used
 35601  0093E8  0102               	movlb	2	; () banked
 35602  0093EA  290A               	incf	(_loRa+6)& (0+255),w,b
 35603  0093EC  E109               	bnz	l19558
 35604  0093EE  290B               	incf	(_loRa+7)& (0+255),w,b
 35605  0093F0  E107               	bnz	l19558
 35606  0093F2  290C               	incf	(_loRa+8)& (0+255),w,b
 35607  0093F4  E105               	bnz	l19558
 35608  0093F6  290D               	incf	(_loRa+9)& (0+255),w,b
 35609  0093F8  A4D8               	btfss	status,2,c
 35610  0093FA  D002               	goto	l1853
 35611                           
 35612                           ; BSR set to: 2
 35613                           ;lorawan.c: 216: {
 35614                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 35615  0093FC  8308               	bsf	(_loRa+4)& (0+255),1,b
 35616                           
 35617                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 35618                           ;	Return value of _LORAWAN_Send is never used
 35619  0093FE  0012               	return	
 35620  009400                     l1853:
 35621  009400                     l19558:
 35622                           
 35623                           ; BSR set to: 2
 35624                           ;lorawan.c: 220: }
 35625                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 35626  009400  5106               	movf	(_loRa+2)& (0+255),w,b
 35627  009402  0B0F               	andlw	15
 35628  009404  0900               	iorlw	0
 35629  009406  B4D8               	btfsc	status,2,c
 35630  009408  D003               	goto	l1854
 35631                           
 35632                           ; BSR set to: 2
 35633  00940A  5116               	movf	(_loRa+18)& (0+255),w,b
 35634  00940C  B4D8               	btfsc	status,2,c
 35635  00940E  0012               	return	
 35636  009410                     l1854:
 35637                           
 35638                           ; BSR set to: 2
 35639                           ;lorawan.c: 225: }
 35640                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 35641                           
 35642                           ; BSR set to: 2
 35643  009410  0E01               	movlw	1
 35644  009412  EC7B  F053         	call	_SelectChannelForTransmission
 35645  009416  0100               	movlb	0	; () banked
 35646  009418  6FD8               	movwf	LORAWAN_Send@result& (0+255),b
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;lorawan.c: 228: if (result != OK)
 35650  00941A  51D8               	movf	LORAWAN_Send@result& (0+255),w,b
 35651  00941C  A4D8               	btfss	status,2,c
 35652  00941E  0012               	return	
 35653                           
 35654                           ; BSR set to: 0
 35655                           ;lorawan.c: 232: else
 35656                           ;lorawan.c: 233: {
 35657                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 35658                           
 35659                           ; BSR set to: 0
 35660                           
 35661                           ; BSR set to: 0
 35662                           ;lorawan.c: 231: }
 35663                           
 35664                           ; BSR set to: 0
 35665                           ;lorawan.c: 229: {
 35666                           ;lorawan.c: 230: return result;
 35667                           ;	Return value of _LORAWAN_Send is never used
 35668  009420  0E02               	movlw	2
 35669  009422  0102               	movlb	2	; () banked
 35670  009424  1916               	xorwf	(_loRa+18)& (0+255),w,b
 35671  009426  B4D8               	btfsc	status,2,c
 35672                           
 35673                           ; BSR set to: 2
 35674                           ;lorawan.c: 235: {
 35675                           ;lorawan.c: 236: RADIO_ReceiveStop();
 35676  009428  ECDB  F05F         	call	_RADIO_ReceiveStop	;wreg free
 35677                           
 35678                           ;lorawan.c: 237: }
 35679                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 35680  00942C  C0D3  F0C7         	movff	LORAWAN_Send@port,AssemblePacket@port
 35681  009430  C0D4  F0C8         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 35682  009434  C0D5  F0C9         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 35683  009438  C0D6  F0CA         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 35684  00943C  0100               	movlb	0	; () banked
 35685  00943E  6BCB               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 35686  009440  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 35687  009442  ECA8  F01B         	call	_AssemblePacket
 35688                           
 35689                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 35690  009446  0E30               	movlw	low (_macBuffer+16)
 35691  009448  0100               	movlb	0	; () banked
 35692  00944A  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 35693  00944C  0E05               	movlw	high (_macBuffer+16)
 35694  00944E  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 35695  009450  C2D8  F0B3         	movff	_loRa+212,RADIO_Transmit@bufferLen
 35696  009454  ECE2  F02D         	call	_RADIO_Transmit	;wreg free
 35697  009458  0100               	movlb	0	; () banked
 35698  00945A  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 35699  00945C  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 35700  00945E  A4D8               	btfss	status,2,c
 35701  009460  0012               	return	
 35702                           
 35703                           ; BSR set to: 0
 35704                           ;lorawan.c: 242: {
 35705                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 35706  009462  0E01               	movlw	1
 35707  009464  0102               	movlb	2	; () banked
 35708  009466  270A               	addwf	(_loRa+6)& (0+255),f,b
 35709  009468  0E00               	movlw	0
 35710  00946A  230B               	addwfc	(_loRa+7)& (0+255),f,b
 35711  00946C  230C               	addwfc	(_loRa+8)& (0+255),f,b
 35712  00946E  230D               	addwfc	(_loRa+9)& (0+255),f,b
 35713                           
 35714                           ;lorawan.c: 245: if (CNF == confirmed)
 35715  009470  0100               	movlb	0	; () banked
 35716  009472  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 35717  009474  A4D8               	btfss	status,2,c
 35718  009476  D002               	goto	l1859
 35719                           
 35720                           ; BSR set to: 0
 35721                           ;lorawan.c: 246: {
 35722                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 35723  009478  0102               	movlb	2	; () banked
 35724  00947A  8104               	bsf	_loRa& (0+255),0,b
 35725  00947C                     l1859:
 35726                           
 35727                           ;lorawan.c: 248: }
 35728                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 35729  00947C  0102               	movlb	2	; () banked
 35730  00947E  8B04               	bsf	_loRa& (0+255),5,b
 35731                           
 35732                           ; BSR set to: 2
 35733                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 35734  009480  5106               	movf	(_loRa+2)& (0+255),w,b
 35735  009482  0BF0               	andlw	-16
 35736  009484  0901               	iorlw	1
 35737  009486  6F06               	movwf	(_loRa+2)& (0+255),b
 35738                           
 35739                           ; BSR set to: 2
 35740                           
 35741                           ; BSR set to: 2
 35742                           ;lorawan.c: 252: else
 35743                           ;lorawan.c: 253: {
 35744                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 35745                           ;	Return value of _LORAWAN_Send is never used
 35746                           
 35747                           ;lorawan.c: 251: }
 35748  009488  0012               	return	
 35749  00948A                     __end_of_LORAWAN_Send:
 35750                           	opt stack 0
 35751                           tosu	equ	0xFFF
 35752                           tosh	equ	0xFFE
 35753                           tosl	equ	0xFFD
 35754                           pclath	equ	0xFFA
 35755                           tblptru	equ	0xFF8
 35756                           tblptrh	equ	0xFF7
 35757                           tblptrl	equ	0xFF6
 35758                           tablat	equ	0xFF5
 35759                           prodh	equ	0xFF4
 35760                           prodl	equ	0xFF3
 35761                           intcon	equ	0xFF2
 35762                           intcon2	equ	0xFF1
 35763                           intcon3	equ	0xFF0
 35764                           indf0	equ	0xFEF
 35765                           postinc0	equ	0xFEE
 35766                           fsr0h	equ	0xFEA
 35767                           fsr0l	equ	0xFE9
 35768                           wreg	equ	0xFE8
 35769                           postinc1	equ	0xFE6
 35770                           postdec1	equ	0xFE5
 35771                           plusw1	equ	0xFE3
 35772                           fsr1h	equ	0xFE2
 35773                           fsr1l	equ	0xFE1
 35774                           indf2	equ	0xFDF
 35775                           postinc2	equ	0xFDE
 35776                           postdec2	equ	0xFDD
 35777                           plusw2	equ	0xFDB
 35778                           fsr2h	equ	0xFDA
 35779                           fsr2l	equ	0xFD9
 35780                           status	equ	0xFD8
 35781                           
 35782 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 35783 ;; Defined at:
 35784 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35785 ;; Parameters:    Size  Location     Type
 35786 ;;		None
 35787 ;; Auto vars:     Size  Location     Type
 35788 ;;  result          1   10[BANK0 ] unsigned char 
 35789 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 35790 ;; Return value:  Size  Location     Type
 35791 ;;                  1    wreg      unsigned char 
 35792 ;; Registers used:
 35793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35794 ;; Tracked objects:
 35795 ;;		On entry : 0/0
 35796 ;;		On exit  : 0/0
 35797 ;;		Unchanged: 0/0
 35798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35801 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35802 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35803 ;;Total ram usage:        3 bytes
 35804 ;; Hardware stack levels used:    1
 35805 ;; Hardware stack levels required when called:    8
 35806 ;; This function calls:
 35807 ;;		_CountfOptsLength
 35808 ;; This function is called by:
 35809 ;;		_LORAWAN_Send
 35810 ;;		_AckRetransmissionCallback
 35811 ;; This function uses a non-reentrant model
 35812 ;;
 35813                           
 35814                           	psect	text202
 35815  00AAF2                     __ptext202:
 35816                           	opt stack 0
 35817  00AAF2                     _LORAWAN_GetMaxPayloadSize:
 35818                           	opt stack 21
 35819                           
 35820                           ;lorawan.c: 1558: uint8_t result = 0;
 35821                           
 35822                           ;incstack = 0
 35823  00AAF2  0E00               	movlw	0
 35824  00AAF4  0100               	movlb	0	; () banked
 35825  00AAF6  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 35826                           
 35827                           ; BSR set to: 0
 35828                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 35829                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 35830  00AAF8  EC45  F04A         	call	_CountfOptsLength	;wreg free
 35831  00AAFC  0100               	movlb	0	; () banked
 35832  00AAFE  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 35833                           
 35834                           ; BSR set to: 0
 35835                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 35836  00AB00  0102               	movlb	2	; () banked
 35837  00AB02  51AB               	movf	(_loRa+167)& (0+255),w,b
 35838  00AB04  A4D8               	btfss	status,2,c
 35839  00AB06  D00F               	goto	l2313
 35840                           
 35841                           ; BSR set to: 2
 35842                           ;lorawan.c: 1564: {
 35843                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 35844  00AB08  51E3               	movf	(_loRa+223)& (0+255),w,b
 35845  00AB0A  0D01               	mullw	1
 35846  00AB0C  0EE5               	movlw	low _maxPayloadSize
 35847  00AB0E  24F3               	addwf	prodl,w,c
 35848  00AB10  6EF6               	movwf	tblptrl,c
 35849  00AB12  0EFE               	movlw	high _maxPayloadSize
 35850  00AB14  20F4               	addwfc	prodh,w,c
 35851  00AB16  6EF7               	movwf	tblptrh,c
 35852  00AB18                     	if	1	;There are 3 active tblptr bytes
 35853  00AB18  6AF8               	clrf	tblptru,c
 35854  00AB1A  0E00               	movlw	low (__mediumconst shr (0+16))
 35855  00AB1C  22F8               	addwfc	tblptru,f,c
 35856  00AB1E                     	endif
 35857  00AB1E  0008               	tblrd		*
 35858  00AB20  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 35859                           
 35860                           ;lorawan.c: 1566: }
 35861  00AB24  D013               	goto	l2314
 35862  00AB26                     l2313:
 35863                           
 35864                           ; BSR set to: 2
 35865                           ;lorawan.c: 1567: else
 35866                           ;lorawan.c: 1568: {
 35867                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 35868                           
 35869                           ; BSR set to: 2
 35870  00AB26  51E3               	movf	(_loRa+223)& (0+255),w,b
 35871  00AB28  0D01               	mullw	1
 35872  00AB2A  0EE5               	movlw	low _maxPayloadSize
 35873  00AB2C  24F3               	addwf	prodl,w,c
 35874  00AB2E  6EF6               	movwf	tblptrl,c
 35875  00AB30  0EFE               	movlw	high _maxPayloadSize
 35876  00AB32  20F4               	addwfc	prodh,w,c
 35877  00AB34  6EF7               	movwf	tblptrh,c
 35878  00AB36                     	if	1	;There are 3 active tblptr bytes
 35879  00AB36  6AF8               	clrf	tblptru,c
 35880  00AB38  0E00               	movlw	low (__mediumconst shr (0+16))
 35881  00AB3A  22F8               	addwfc	tblptru,f,c
 35882  00AB3C                     	endif
 35883  00AB3C  0008               	tblrd		*
 35884  00AB3E  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 35885  00AB42  0100               	movlb	0	; () banked
 35886  00AB44  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 35887  00AB46  0800               	sublw	0
 35888  00AB48  2568               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 35889  00AB4A  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 35890  00AB4C                     l2314:
 35891                           
 35892                           ;lorawan.c: 1570: }
 35893                           ;lorawan.c: 1572: return result;
 35894                           
 35895                           ; BSR set to: 0
 35896  00AB4C  0100               	movlb	0	; () banked
 35897  00AB4E  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 35898  00AB50  0012               	return	
 35899  00AB52                     __end_of_LORAWAN_GetMaxPayloadSize:
 35900                           	opt stack 0
 35901                           tosu	equ	0xFFF
 35902                           tosh	equ	0xFFE
 35903                           tosl	equ	0xFFD
 35904                           pclath	equ	0xFFA
 35905                           tblptru	equ	0xFF8
 35906                           tblptrh	equ	0xFF7
 35907                           tblptrl	equ	0xFF6
 35908                           tablat	equ	0xFF5
 35909                           prodh	equ	0xFF4
 35910                           prodl	equ	0xFF3
 35911                           intcon	equ	0xFF2
 35912                           intcon2	equ	0xFF1
 35913                           intcon3	equ	0xFF0
 35914                           indf0	equ	0xFEF
 35915                           postinc0	equ	0xFEE
 35916                           fsr0h	equ	0xFEA
 35917                           fsr0l	equ	0xFE9
 35918                           wreg	equ	0xFE8
 35919                           postinc1	equ	0xFE6
 35920                           postdec1	equ	0xFE5
 35921                           plusw1	equ	0xFE3
 35922                           fsr1h	equ	0xFE2
 35923                           fsr1l	equ	0xFE1
 35924                           indf2	equ	0xFDF
 35925                           postinc2	equ	0xFDE
 35926                           postdec2	equ	0xFDD
 35927                           plusw2	equ	0xFDB
 35928                           fsr2h	equ	0xFDA
 35929                           fsr2l	equ	0xFD9
 35930                           status	equ	0xFD8
 35931                           
 35932 ;; *************** function _AssemblePacket *****************
 35933 ;; Defined at:
 35934 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35935 ;; Parameters:    Size  Location     Type
 35936 ;;  confirmed       1    wreg     unsigned char 
 35937 ;;  port            1  103[BANK0 ] unsigned char 
 35938 ;;  buffer          2  104[BANK0 ] PTR unsigned char 
 35939 ;;		 -> data(8), NULL(0), 
 35940 ;;  bufferLength    2  106[BANK0 ] unsigned int 
 35941 ;; Auto vars:     Size  Location     Type
 35942 ;;  confirmed       1  110[BANK0 ] unsigned char 
 35943 ;;  bufferIndex     1  114[BANK0 ] unsigned char 
 35944 ;;  macCmdIdx       1  113[BANK0 ] unsigned char 
 35945 ;;  fCtrl           1  112[BANK0 ] struct .
 35946 ;;  mhdr            1  111[BANK0 ] struct .
 35947 ;; Return value:  Size  Location     Type
 35948 ;;                  1    wreg      void 
 35949 ;; Registers used:
 35950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35951 ;; Tracked objects:
 35952 ;;		On entry : 0/0
 35953 ;;		On exit  : 0/0
 35954 ;;		Unchanged: 0/0
 35955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35956 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35957 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35958 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35959 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35960 ;;Total ram usage:       12 bytes
 35961 ;; Hardware stack levels used:    1
 35962 ;; Hardware stack levels required when called:   12
 35963 ;; This function calls:
 35964 ;;		_AESCmac
 35965 ;;		_AssembleEncryptionBlock
 35966 ;;		_CountfOptsLength
 35967 ;;		_EncryptFRMPayload
 35968 ;;		_FindSmallestDataRate
 35969 ;;		_IncludeMacCommandsResponse
 35970 ;;		_memcpy
 35971 ;;		_memset
 35972 ;; This function is called by:
 35973 ;;		_LORAWAN_Send
 35974 ;; This function uses a non-reentrant model
 35975 ;;
 35976                           
 35977                           	psect	text203
 35978  003750                     __ptext203:
 35979                           	opt stack 0
 35980  003750                     _AssemblePacket:
 35981                           	opt stack 17
 35982                           
 35983                           ; BSR set to: 0
 35984                           ;incstack = 0
 35985                           ;AssemblePacket@confirmed stored from wreg
 35986  003750  0100               	movlb	0	; () banked
 35987  003752  6FCE               	movwf	AssemblePacket@confirmed& (0+255),b
 35988                           
 35989                           ;lorawan.c: 1674: Mhdr_t mhdr;
 35990                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 35991  003754  0E10               	movlw	16
 35992  003756  0100               	movlb	0	; () banked
 35993  003758  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 35994                           
 35995                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 35996                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 35997  00375A  0E00               	movlw	0
 35998  00375C  6FD1               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 36002  00375E  0ECF               	movlw	low AssemblePacket@mhdr
 36003  003760  6F60               	movwf	memset@p1& (0+255),b
 36004  003762  0E00               	movlw	high AssemblePacket@mhdr
 36005  003764  6F61               	movwf	(memset@p1+1)& (0+255),b
 36006  003766  0E00               	movlw	0
 36007  003768  6F63               	movwf	(memset@c+1)& (0+255),b
 36008  00376A  0E00               	movlw	0
 36009  00376C  6F62               	movwf	memset@c& (0+255),b
 36010  00376E  0E00               	movlw	0
 36011  003770  6F65               	movwf	(memset@n+1)& (0+255),b
 36012  003772  0E01               	movlw	1
 36013  003774  6F64               	movwf	memset@n& (0+255),b
 36014  003776  EC1F  F05D         	call	_memset	;wreg free
 36015                           
 36016                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 36017  00377A  0E20               	movlw	low _macBuffer
 36018  00377C  0100               	movlb	0	; () banked
 36019  00377E  6F60               	movwf	memset@p1& (0+255),b
 36020  003780  0E05               	movlw	high _macBuffer
 36021  003782  6F61               	movwf	(memset@p1+1)& (0+255),b
 36022  003784  0E00               	movlw	0
 36023  003786  6F63               	movwf	(memset@c+1)& (0+255),b
 36024  003788  0E00               	movlw	0
 36025  00378A  6F62               	movwf	memset@c& (0+255),b
 36026  00378C  0E01               	movlw	1
 36027  00378E  6F65               	movwf	(memset@n+1)& (0+255),b
 36028  003790  0E0F               	movlw	15
 36029  003792  6F64               	movwf	memset@n& (0+255),b
 36030  003794  EC1F  F05D         	call	_memset	;wreg free
 36031                           
 36032                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 36033  003798  0EC8               	movlw	low _aesBuffer
 36034  00379A  0100               	movlb	0	; () banked
 36035  00379C  6F60               	movwf	memset@p1& (0+255),b
 36036  00379E  0E03               	movlw	high _aesBuffer
 36037  0037A0  6F61               	movwf	(memset@p1+1)& (0+255),b
 36038  0037A2  0E00               	movlw	0
 36039  0037A4  6F63               	movwf	(memset@c+1)& (0+255),b
 36040  0037A6  0E00               	movlw	0
 36041  0037A8  6F62               	movwf	memset@c& (0+255),b
 36042  0037AA  0E00               	movlw	0
 36043  0037AC  6F65               	movwf	(memset@n+1)& (0+255),b
 36044  0037AE  0E10               	movlw	16
 36045  0037B0  6F64               	movwf	memset@n& (0+255),b
 36046  0037B2  EC1F  F05D         	call	_memset	;wreg free
 36047                           
 36048                           ;lorawan.c: 1683: if (confirmed == 1)
 36049  0037B6  0100               	movlb	0	; () banked
 36050  0037B8  05CE               	decf	AssemblePacket@confirmed& (0+255),w,b
 36051  0037BA  A4D8               	btfss	status,2,c
 36052  0037BC  D007               	goto	l2343
 36053                           
 36054                           ; BSR set to: 0
 36055                           ;lorawan.c: 1684: {
 36056                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 36057  0037BE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 36058  0037C0  0B1F               	andlw	-225
 36059  0037C2  0980               	iorlw	128
 36060  0037C4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 36061                           
 36062                           ; BSR set to: 0
 36063                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 36064  0037C6  0102               	movlb	2	; () banked
 36065  0037C8  8104               	bsf	_loRa& (0+255),0,b
 36066                           
 36067                           ;lorawan.c: 1687: }
 36068  0037CA  D005               	goto	l2344
 36069  0037CC                     l2343:
 36070                           
 36071                           ;lorawan.c: 1688: else
 36072                           ;lorawan.c: 1689: {
 36073                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 36074                           
 36075                           ; BSR set to: 2
 36076  0037CC  0100               	movlb	0	; () banked
 36077  0037CE  51CF               	movf	AssemblePacket@mhdr& (0+255),w,b
 36078  0037D0  0B1F               	andlw	-225
 36079  0037D2  0940               	iorlw	64
 36080  0037D4  6FCF               	movwf	AssemblePacket@mhdr& (0+255),b
 36081  0037D6                     l2344:
 36082                           
 36083                           ;lorawan.c: 1691: }
 36084                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 36085  0037D6  0EFC               	movlw	-4
 36086  0037D8  0100               	movlb	0	; () banked
 36087  0037DA  17CF               	andwf	AssemblePacket@mhdr& (0+255),f,b
 36088                           
 36089                           ; BSR set to: 0
 36090                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 36091  0037DC  95CF               	bcf	AssemblePacket@mhdr& (0+255),2,b
 36092  0037DE  97CF               	bcf	AssemblePacket@mhdr& (0+255),3,b
 36093  0037E0  99CF               	bcf	AssemblePacket@mhdr& (0+255),4,b
 36094                           
 36095                           ; BSR set to: 0
 36096                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 36097  0037E2  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36098  0037E4  0D01               	mullw	1
 36099  0037E6  0E20               	movlw	low _macBuffer
 36100  0037E8  24F3               	addwf	prodl,w,c
 36101  0037EA  6ED9               	movwf	fsr2l,c
 36102  0037EC  0E05               	movlw	high _macBuffer
 36103  0037EE  20F4               	addwfc	prodh,w,c
 36104  0037F0  6EDA               	movwf	fsr2h,c
 36105  0037F2  C0CF  FFDF         	movff	AssemblePacket@mhdr,indf2
 36106                           
 36107                           ; BSR set to: 0
 36108  0037F6  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36109                           
 36110                           ; BSR set to: 0
 36111                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 36112  0037F8  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36113  0037FA  0D01               	mullw	1
 36114  0037FC  0E20               	movlw	low _macBuffer
 36115  0037FE  24F3               	addwf	prodl,w,c
 36116  003800  6F60               	movwf	memcpy@d1& (0+255),b
 36117  003802  0E05               	movlw	high _macBuffer
 36118  003804  20F4               	addwfc	prodh,w,c
 36119  003806  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36120  003808  0E22               	movlw	low (_loRa+30)
 36121  00380A  6F62               	movwf	memcpy@s1& (0+255),b
 36122  00380C  0E02               	movlw	high (_loRa+30)
 36123  00380E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36124  003810  0E00               	movlw	0
 36125  003812  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36126  003814  0E04               	movlw	4
 36127  003816  6F64               	movwf	memcpy@n& (0+255),b
 36128  003818  ECA9  F055         	call	_memcpy	;wreg free
 36129                           
 36130                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 36131  00381C  0100               	movlb	0	; () banked
 36132  00381E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36133  003820  0F04               	addlw	4
 36134  003822  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36135                           
 36136                           ; BSR set to: 0
 36137                           ;lorawan.c: 1699: fCtrl.value = 0;
 36138  003824  0E00               	movlw	0
 36139  003826  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 36140                           
 36141                           ; BSR set to: 0
 36142                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 36143  003828  0102               	movlb	2	; () banked
 36144  00382A  AD06               	btfss	(_loRa+2)& (0+255),6,b
 36145  00382C  D047               	goto	l2353
 36146                           
 36147                           ; BSR set to: 2
 36148                           ;lorawan.c: 1702: {
 36149                           ;lorawan.c: 1703: fCtrl.adr = 1;
 36150  00382E  0100               	movlb	0	; () banked
 36151  003830  8FD0               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 36152                           
 36153                           ; BSR set to: 0
 36154                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 36155  003832  0102               	movlb	2	; () banked
 36156  003834  51E3               	movf	(_loRa+223)& (0+255),w,b
 36157  003836  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 36158  003838  B0D8               	btfsc	status,0,c
 36159  00383A  D03F               	goto	l2346
 36160                           
 36161                           ; BSR set to: 2
 36162                           ;lorawan.c: 1705: {
 36163                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 36164  00383C  0100               	movlb	0	; () banked
 36165  00383E  8DD0               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 36166                           
 36167                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 36168  003840  0102               	movlb	2	; () banked
 36169  003842  8904               	bsf	_loRa& (0+255),4,b
 36170                           
 36171                           ; BSR set to: 2
 36172                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 36173  003844  4BD4               	infsnz	(_loRa+208)& (0+255),f,b
 36174  003846  2BD5               	incf	(_loRa+209)& (0+255),f,b
 36175                           
 36176                           ; BSR set to: 2
 36177                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 36178  003848  51A6               	movf	(_loRa+162)& (0+255),w,b
 36179  00384A  0100               	movlb	0	; () banked
 36180  00384C  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36181  00384E  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 36182  003850  0102               	movlb	2	; () banked
 36183  003852  51D4               	movf	(_loRa+208)& (0+255),w,b
 36184  003854  0100               	movlb	0	; () banked
 36185  003856  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36186  003858  E10C               	bnz	l19252
 36187  00385A  0102               	movlb	2	; () banked
 36188  00385C  51D5               	movf	(_loRa+209)& (0+255),w,b
 36189  00385E  0100               	movlb	0	; () banked
 36190  003860  19CD               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 36191  003862  A4D8               	btfss	status,2,c
 36192  003864  D006               	goto	l2347
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;lorawan.c: 1711: {
 36196                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 36197  003866  0E00               	movlw	0
 36198  003868  0102               	movlb	2	; () banked
 36199  00386A  6FF2               	movwf	(_loRa+238)& (0+255),b
 36200  00386C  D023               	goto	l19264
 36201  00386E                     l19250:
 36202                           
 36203                           ; BSR set to: 0
 36204                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 36205  00386E  0102               	movlb	2	; () banked
 36206  003870  D024               	goto	l2346
 36207  003872                     l2347:
 36208  003872                     l19252:
 36209                           
 36210                           ;lorawan.c: 1716: else
 36211                           ;lorawan.c: 1717: {
 36212                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 36213  003872  0102               	movlb	2	; () banked
 36214  003874  51A6               	movf	(_loRa+162)& (0+255),w,b
 36215  003876  0100               	movlb	0	; () banked
 36216  003878  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36217  00387A  6BCD               	clrf	(??_AssemblePacket+1)& (0+255),b
 36218  00387C  0102               	movlb	2	; () banked
 36219  00387E  51D4               	movf	(_loRa+208)& (0+255),w,b
 36220  003880  0100               	movlb	0	; () banked
 36221  003882  5DCC               	subwf	??_AssemblePacket& (0+255),w,b
 36222  003884  0102               	movlb	2	; () banked
 36223  003886  51D5               	movf	(_loRa+209)& (0+255),w,b
 36224  003888  0100               	movlb	0	; () banked
 36225  00388A  59CD               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 36226  00388C  B0D8               	btfsc	status,0,c
 36227  00388E  D013               	goto	l2349
 36228                           
 36229                           ; BSR set to: 0
 36230                           ;lorawan.c: 1719: {
 36231                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 36232  003890  0102               	movlb	2	; () banked
 36233  003892  2BF2               	incf	(_loRa+238)& (0+255),f,b
 36234                           
 36235                           ; BSR set to: 2
 36236                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 36237  003894  51F2               	movf	(_loRa+238)& (0+255),w,b
 36238  003896  5DA7               	subwf	(_loRa+163)& (0+255),w,b
 36239  003898  B0D8               	btfsc	status,0,c
 36240  00389A  D010               	goto	l2353
 36241                           
 36242                           ; BSR set to: 2
 36243                           ;lorawan.c: 1725: {
 36244                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 36245  00389C  0E00               	movlw	0
 36246  00389E  6FF2               	movwf	(_loRa+238)& (0+255),b
 36247                           
 36248                           ; BSR set to: 2
 36249                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 36250  0038A0  EC92  F048         	call	_FindSmallestDataRate	;wreg free
 36251  0038A4  0900               	iorlw	0
 36252  0038A6  A4D8               	btfss	status,2,c
 36253  0038A8  D009               	goto	l2353
 36254                           
 36255                           ;lorawan.c: 1729: {
 36256                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 36257  0038AA  0E00               	movlw	0
 36258  0038AC  0102               	movlb	2	; () banked
 36259  0038AE  6FD5               	movwf	(_loRa+209)& (0+255),b
 36260  0038B0  0E00               	movlw	0
 36261  0038B2  6FD4               	movwf	(_loRa+208)& (0+255),b
 36262  0038B4                     l19264:
 36263                           
 36264                           ; BSR set to: 2
 36265                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 36266  0038B4  0100               	movlb	0	; () banked
 36267  0038B6                     l2349:
 36268                           
 36269                           ; BSR set to: 0
 36270                           ;lorawan.c: 1737: else
 36271                           ;lorawan.c: 1738: {
 36272                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 36273  0038B6  9DD0               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 36274  0038B8  D7DA               	goto	l19250
 36275  0038BA                     l2346:
 36276                           
 36277                           ; BSR set to: 2
 36278                           ;lorawan.c: 1744: else
 36279                           ;lorawan.c: 1745: {
 36280                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 36281  0038BA  9904               	bcf	_loRa& (0+255),4,b
 36282  0038BC                     l2353:
 36283                           
 36284                           ;lorawan.c: 1747: }
 36285                           ;lorawan.c: 1748: }
 36286                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 36287                           
 36288                           ; BSR set to: 2
 36289  0038BC  0102               	movlb	2	; () banked
 36290  0038BE  A304               	btfss	_loRa& (0+255),1,b
 36291  0038C0  D004               	goto	l2354
 36292                           
 36293                           ; BSR set to: 2
 36294                           ;lorawan.c: 1751: {
 36295                           ;lorawan.c: 1752: fCtrl.ack = 1;
 36296  0038C2  0100               	movlb	0	; () banked
 36297  0038C4  8BD0               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 36298                           
 36299                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 36300  0038C6  0102               	movlb	2	; () banked
 36301  0038C8  9304               	bcf	_loRa& (0+255),1,b
 36302  0038CA                     l2354:
 36303                           
 36304                           ; BSR set to: 2
 36305                           ;lorawan.c: 1754: }
 36306                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 36307  0038CA  0100               	movlb	0	; () banked
 36308  0038CC  99D0               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 36309                           
 36310                           ; BSR set to: 0
 36311                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 36312  0038CE  0102               	movlb	2	; () banked
 36313  0038D0  51AB               	movf	(_loRa+167)& (0+255),w,b
 36314  0038D2  B4D8               	btfsc	status,2,c
 36315  0038D4  D005               	goto	u21810
 36316                           
 36317                           ; BSR set to: 2
 36318  0038D6  0100               	movlb	0	; () banked
 36319  0038D8  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36320  0038DA  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36321  0038DC  A4D8               	btfss	status,2,c
 36322  0038DE  D006               	goto	l2355
 36323  0038E0                     u21810:
 36324                           
 36325                           ;lorawan.c: 1759: {
 36326                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 36327  0038E0  0100               	movlb	0	; () banked
 36328  0038E2  91D0               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 36329  0038E4  93D0               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 36330  0038E6  95D0               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 36331  0038E8  97D0               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 36332                           
 36333                           ;lorawan.c: 1761: }
 36334  0038EA  D009               	goto	l2358
 36335  0038EC                     l2355:
 36336                           
 36337                           ; BSR set to: 0
 36338                           ;lorawan.c: 1763: else
 36339                           ;lorawan.c: 1764: {
 36340                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 36341                           
 36342                           ; BSR set to: 0
 36343  0038EC  EC45  F04A         	call	_CountfOptsLength	;wreg free
 36344  0038F0  0100               	movlb	0	; () banked
 36345  0038F2  6FCC               	movwf	??_AssemblePacket& (0+255),b
 36346  0038F4  51D0               	movf	AssemblePacket@fCtrl& (0+255),w,b
 36347  0038F6  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36348  0038F8  0BF0               	andlw	-16
 36349  0038FA  19CC               	xorwf	??_AssemblePacket& (0+255),w,b
 36350  0038FC  6FD0               	movwf	AssemblePacket@fCtrl& (0+255),b
 36351  0038FE                     l2358:
 36352                           
 36353                           ; BSR set to: 0
 36354                           ;lorawan.c: 1766: }
 36355                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 36356                           
 36357                           ; BSR set to: 0
 36358  0038FE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36359  003900  0D01               	mullw	1
 36360  003902  0E20               	movlw	low _macBuffer
 36361  003904  24F3               	addwf	prodl,w,c
 36362  003906  6ED9               	movwf	fsr2l,c
 36363  003908  0E05               	movlw	high _macBuffer
 36364  00390A  20F4               	addwfc	prodh,w,c
 36365  00390C  6EDA               	movwf	fsr2h,c
 36366  00390E  C0D0  FFDF         	movff	AssemblePacket@fCtrl,indf2
 36367                           
 36368                           ; BSR set to: 0
 36369  003912  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36370                           
 36371                           ; BSR set to: 0
 36372                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 36373  003914  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36374  003916  0D01               	mullw	1
 36375  003918  0E20               	movlw	low _macBuffer
 36376  00391A  24F3               	addwf	prodl,w,c
 36377  00391C  6F60               	movwf	memcpy@d1& (0+255),b
 36378  00391E  0E05               	movlw	high _macBuffer
 36379  003920  20F4               	addwfc	prodh,w,c
 36380  003922  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36381  003924  0E0A               	movlw	low (_loRa+6)
 36382  003926  6F62               	movwf	memcpy@s1& (0+255),b
 36383  003928  0E02               	movlw	high (_loRa+6)
 36384  00392A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36385  00392C  0E00               	movlw	0
 36386  00392E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36387  003930  0E02               	movlw	2
 36388  003932  6F64               	movwf	memcpy@n& (0+255),b
 36389  003934  ECA9  F055         	call	_memcpy	;wreg free
 36390                           
 36391                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 36392  003938  0100               	movlb	0	; () banked
 36393  00393A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36394  00393C  0F02               	addlw	2
 36395  00393E  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36396                           
 36397                           ; BSR set to: 0
 36398                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 36399  003940  0102               	movlb	2	; () banked
 36400  003942  51AB               	movf	(_loRa+167)& (0+255),w,b
 36401  003944  B4D8               	btfsc	status,2,c
 36402  003946  D011               	goto	l2359
 36403                           
 36404                           ; BSR set to: 2
 36405  003948  0100               	movlb	0	; () banked
 36406  00394A  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36407  00394C  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36408  00394E  B4D8               	btfsc	status,2,c
 36409  003950  D00C               	goto	l2359
 36410                           
 36411                           ; BSR set to: 0
 36412                           ;lorawan.c: 1774: {
 36413                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 36414  003952  0E20               	movlw	low _macBuffer
 36415  003954  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 36416  003956  0E05               	movlw	high _macBuffer
 36417  003958  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 36418  00395A  0ED2               	movlw	low AssemblePacket@bufferIndex
 36419  00395C  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 36420  00395E  0E00               	movlw	high AssemblePacket@bufferIndex
 36421  003960  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 36422  003962  0E01               	movlw	1
 36423  003964  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 36424  003966  EC47  F017         	call	_IncludeMacCommandsResponse	;wreg free
 36425  00396A                     l2359:
 36426                           
 36427                           ;lorawan.c: 1776: }
 36428                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 36429  00396A  0100               	movlb	0	; () banked
 36430  00396C  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36431  00396E  0D01               	mullw	1
 36432  003970  0E20               	movlw	low _macBuffer
 36433  003972  24F3               	addwf	prodl,w,c
 36434  003974  6ED9               	movwf	fsr2l,c
 36435  003976  0E05               	movlw	high _macBuffer
 36436  003978  20F4               	addwfc	prodh,w,c
 36437  00397A  6EDA               	movwf	fsr2h,c
 36438  00397C  C0C7  FFDF         	movff	AssemblePacket@port,indf2
 36439                           
 36440                           ; BSR set to: 0
 36441  003980  2BD2               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 36442                           
 36443                           ; BSR set to: 0
 36444                           ;lorawan.c: 1780: if (bufferLength != 0)
 36445  003982  51CA               	movf	AssemblePacket@bufferLength& (0+255),w,b
 36446  003984  11CB               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 36447  003986  B4D8               	btfsc	status,2,c
 36448  003988  D035               	goto	l2360
 36449                           
 36450                           ; BSR set to: 0
 36451                           ;lorawan.c: 1781: {
 36452                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 36453  00398A  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36454  00398C  0D01               	mullw	1
 36455  00398E  0E20               	movlw	low _macBuffer
 36456  003990  24F3               	addwf	prodl,w,c
 36457  003992  6F60               	movwf	memcpy@d1& (0+255),b
 36458  003994  0E05               	movlw	high _macBuffer
 36459  003996  20F4               	addwfc	prodh,w,c
 36460  003998  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36461  00399A  C0C8  F062         	movff	AssemblePacket@buffer,memcpy@s1
 36462  00399E  C0C9  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 36463  0039A2  C0CA  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 36464  0039A6  C0CB  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 36465  0039AA  ECA9  F055         	call	_memcpy	;wreg free
 36466                           
 36467                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 36468  0039AE  C0C8  F091         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 36469  0039B2  C0C9  F092         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 36470  0039B6  C0CA  F093         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 36471  0039BA  0E00               	movlw	0
 36472  0039BC  0100               	movlb	0	; () banked
 36473  0039BE  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 36474  0039C0  C20A  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 36475  0039C4  C20B  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 36476  0039C8  C20C  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 36477  0039CC  C20D  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 36478  0039D0  0E36               	movlw	low (_loRa+50)
 36479  0039D2  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 36480  0039D4  0E02               	movlw	high (_loRa+50)
 36481  0039D6  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 36482  0039D8  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 36483  0039DC  0E20               	movlw	low _macBuffer
 36484  0039DE  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 36485  0039E0  0E05               	movlw	high _macBuffer
 36486  0039E2  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 36487  0039E4  0E00               	movlw	0
 36488  0039E6  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 36489  0039E8  EC3E  F037         	call	_EncryptFRMPayload	;wreg free
 36490                           
 36491                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 36492  0039EC  0100               	movlb	0	; () banked
 36493  0039EE  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36494  0039F0  25CA               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 36495  0039F2  D033               	goto	L14
 36496  0039F4                     l2360:
 36497                           
 36498                           ; BSR set to: 0
 36499                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 36500                           
 36501                           ; BSR set to: 0
 36502  0039F4  0102               	movlb	2	; () banked
 36503  0039F6  51AB               	movf	(_loRa+167)& (0+255),w,b
 36504  0039F8  B4D8               	btfsc	status,2,c
 36505  0039FA  D030               	goto	l2362
 36506                           
 36507                           ; BSR set to: 2
 36508                           ;lorawan.c: 1787: {
 36509                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 36510  0039FC  0E2F               	movlw	low _radioBuffer
 36511  0039FE  0100               	movlb	0	; () banked
 36512  003A00  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 36513  003A02  0E06               	movlw	high _radioBuffer
 36514  003A04  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 36515  003A06  0ED1               	movlw	low AssemblePacket@macCmdIdx
 36516  003A08  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 36517  003A0A  0E00               	movlw	high AssemblePacket@macCmdIdx
 36518  003A0C  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 36519  003A0E  0E00               	movlw	0
 36520  003A10  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 36521  003A12  EC47  F017         	call	_IncludeMacCommandsResponse	;wreg free
 36522                           
 36523                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 36524  003A16  0E2F               	movlw	low _radioBuffer
 36525  003A18  0100               	movlb	0	; () banked
 36526  003A1A  6F91               	movwf	EncryptFRMPayload@buffer& (0+255),b
 36527  003A1C  0E06               	movlw	high _radioBuffer
 36528  003A1E  6F92               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 36529  003A20  C0D1  F093         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 36530  003A24  0E00               	movlw	0
 36531  003A26  6F94               	movwf	EncryptFRMPayload@dir& (0+255),b
 36532  003A28  C20A  F095         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 36533  003A2C  C20B  F096         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 36534  003A30  C20C  F097         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 36535  003A34  C20D  F098         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 36536  003A38  0E26               	movlw	low (_loRa+34)
 36537  003A3A  6F99               	movwf	EncryptFRMPayload@key& (0+255),b
 36538  003A3C  0E02               	movlw	high (_loRa+34)
 36539  003A3E  6F9A               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 36540  003A40  C0D2  F09B         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 36541  003A44  0E20               	movlw	low _macBuffer
 36542  003A46  6F9C               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 36543  003A48  0E05               	movlw	high _macBuffer
 36544  003A4A  6F9D               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 36545  003A4C  0E00               	movlw	0
 36546  003A4E  6F9E               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 36547  003A50  EC3E  F037         	call	_EncryptFRMPayload	;wreg free
 36548                           
 36549                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 36550  003A54  0100               	movlb	0	; () banked
 36551  003A56  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36552  003A58  25D1               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 36553  003A5A                     L14:
 36554  003A5A  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36555  003A5C                     l2362:
 36556                           
 36557                           ;lorawan.c: 1793: }
 36558                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 36559                           
 36560                           ; BSR set to: 0
 36561                           
 36562                           ; BSR set to: 0
 36563  003A5C  C20A  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 36564  003A60  C20B  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 36565  003A64  C20C  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 36566  003A68  C20D  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 36567  003A6C  0100               	movlb	0	; () banked
 36568  003A6E  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36569  003A70  0FF0               	addlw	240
 36570  003A72  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 36571  003A74  0E49               	movlw	73
 36572  003A76  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 36573  003A78  0E00               	movlw	0
 36574  003A7A  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 36575  003A7C  0E00               	movlw	0
 36576  003A7E  ECCF  F045         	call	_AssembleEncryptionBlock
 36577                           
 36578                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 36579  003A82  0E20               	movlw	low _macBuffer
 36580  003A84  0100               	movlb	0	; () banked
 36581  003A86  6F60               	movwf	memcpy@d1& (0+255),b
 36582  003A88  0E05               	movlw	high _macBuffer
 36583  003A8A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36584  003A8C  0EC8               	movlw	low _aesBuffer
 36585  003A8E  6F62               	movwf	memcpy@s1& (0+255),b
 36586  003A90  0E03               	movlw	high _aesBuffer
 36587  003A92  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36588  003A94  0E00               	movlw	0
 36589  003A96  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36590  003A98  0E10               	movlw	16
 36591  003A9A  6F64               	movwf	memcpy@n& (0+255),b
 36592  003A9C  ECA9  F055         	call	_memcpy	;wreg free
 36593                           
 36594                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 36595  003AA0  0E26               	movlw	low (_loRa+34)
 36596  003AA2  0100               	movlb	0	; () banked
 36597  003AA4  6FB9               	movwf	AESCmac@key& (0+255),b
 36598  003AA6  0E02               	movlw	high (_loRa+34)
 36599  003AA8  6FBA               	movwf	(AESCmac@key+1)& (0+255),b
 36600  003AAA  0EC8               	movlw	low _aesBuffer
 36601  003AAC  6FBB               	movwf	AESCmac@output& (0+255),b
 36602  003AAE  0E03               	movlw	high _aesBuffer
 36603  003AB0  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 36604  003AB2  0E20               	movlw	low _macBuffer
 36605  003AB4  6FBD               	movwf	AESCmac@input& (0+255),b
 36606  003AB6  0E05               	movlw	high _macBuffer
 36607  003AB8  6FBE               	movwf	(AESCmac@input+1)& (0+255),b
 36608  003ABA  C0D2  F0BF         	movff	AssemblePacket@bufferIndex,AESCmac@size
 36609  003ABE  EC80  F01D         	call	_AESCmac	;wreg free
 36610                           
 36611                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 36612  003AC2  0100               	movlb	0	; () banked
 36613  003AC4  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36614  003AC6  0D01               	mullw	1
 36615  003AC8  0E20               	movlw	low _macBuffer
 36616  003ACA  24F3               	addwf	prodl,w,c
 36617  003ACC  6F60               	movwf	memcpy@d1& (0+255),b
 36618  003ACE  0E05               	movlw	high _macBuffer
 36619  003AD0  20F4               	addwfc	prodh,w,c
 36620  003AD2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 36621  003AD4  0EC8               	movlw	low _aesBuffer
 36622  003AD6  6F62               	movwf	memcpy@s1& (0+255),b
 36623  003AD8  0E03               	movlw	high _aesBuffer
 36624  003ADA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 36625  003ADC  0E00               	movlw	0
 36626  003ADE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 36627  003AE0  0E04               	movlw	4
 36628  003AE2  6F64               	movwf	memcpy@n& (0+255),b
 36629  003AE4  ECA9  F055         	call	_memcpy	;wreg free
 36630                           
 36631                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 36632  003AE8  0100               	movlb	0	; () banked
 36633  003AEA  51D2               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 36634  003AEC  0F04               	addlw	4
 36635  003AEE  6FD2               	movwf	AssemblePacket@bufferIndex& (0+255),b
 36636                           
 36637                           ; BSR set to: 0
 36638                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 36639  003AF0  0EF0               	movlw	240
 36640  003AF2  25D2               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 36641  003AF4  0102               	movlb	2	; () banked
 36642  003AF6  6FD8               	movwf	(_loRa+212)& (0+255),b
 36643  003AF8  6BD9               	clrf	(_loRa+213)& (0+255),b
 36644  003AFA  0EFF               	movlw	255
 36645  003AFC  23D9               	addwfc	(_loRa+213)& (0+255),f,b
 36646                           
 36647                           ; BSR set to: 2
 36648  003AFE  0012               	return		;funcret
 36649  003B00                     __end_of_AssemblePacket:
 36650                           	opt stack 0
 36651                           tosu	equ	0xFFF
 36652                           tosh	equ	0xFFE
 36653                           tosl	equ	0xFFD
 36654                           pclath	equ	0xFFA
 36655                           tblptru	equ	0xFF8
 36656                           tblptrh	equ	0xFF7
 36657                           tblptrl	equ	0xFF6
 36658                           tablat	equ	0xFF5
 36659                           prodh	equ	0xFF4
 36660                           prodl	equ	0xFF3
 36661                           intcon	equ	0xFF2
 36662                           intcon2	equ	0xFF1
 36663                           intcon3	equ	0xFF0
 36664                           indf0	equ	0xFEF
 36665                           postinc0	equ	0xFEE
 36666                           fsr0h	equ	0xFEA
 36667                           fsr0l	equ	0xFE9
 36668                           wreg	equ	0xFE8
 36669                           postinc1	equ	0xFE6
 36670                           postdec1	equ	0xFE5
 36671                           plusw1	equ	0xFE3
 36672                           fsr1h	equ	0xFE2
 36673                           fsr1l	equ	0xFE1
 36674                           indf2	equ	0xFDF
 36675                           postinc2	equ	0xFDE
 36676                           postdec2	equ	0xFDD
 36677                           plusw2	equ	0xFDB
 36678                           fsr2h	equ	0xFDA
 36679                           fsr2l	equ	0xFD9
 36680                           status	equ	0xFD8
 36681                           
 36682 ;; *************** function _IncludeMacCommandsResponse *****************
 36683 ;; Defined at:
 36684 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 36685 ;; Parameters:    Size  Location     Type
 36686 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 36687 ;;		 -> macBuffer(271), radioBuffer(271), 
 36688 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 36689 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 36690 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 36691 ;; Auto vars:     Size  Location     Type
 36692 ;;  bufferIndex     1   14[BANK0 ] unsigned char 
 36693 ;;  i               1   13[BANK0 ] unsigned char 
 36694 ;; Return value:  Size  Location     Type
 36695 ;;                  1    wreg      void 
 36696 ;; Registers used:
 36697 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36698 ;; Tracked objects:
 36699 ;;		On entry : 0/0
 36700 ;;		On exit  : 0/0
 36701 ;;		Unchanged: 0/0
 36702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36703 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36705 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36706 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36707 ;;Total ram usage:       15 bytes
 36708 ;; Hardware stack levels used:    1
 36709 ;; Hardware stack levels required when called:    8
 36710 ;; This function calls:
 36711 ;;		_RADIO_GetPacketSnr
 36712 ;; This function is called by:
 36713 ;;		_AssemblePacket
 36714 ;; This function uses a non-reentrant model
 36715 ;;
 36716                           
 36717                           	psect	text204
 36718  002E8E                     __ptext204:
 36719                           	opt stack 0
 36720  002E8E                     _IncludeMacCommandsResponse:
 36721                           	opt stack 20
 36722                           
 36723                           ;lorawan.c: 1847: uint8_t i = 0;
 36724                           
 36725                           ; BSR set to: 2
 36726                           ;incstack = 0
 36727  002E8E  0E00               	movlw	0
 36728  002E90  0100               	movlb	0	; () banked
 36729  002E92  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 36730                           
 36731                           ; BSR set to: 0
 36732                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 36733  002E94  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 36734  002E98  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 36735  002E9C  50DF               	movf	indf2,w,c
 36736  002E9E  6F6E               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 36737                           
 36738                           ; BSR set to: 0
 36739                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 36740  002EA0  0E00               	movlw	0
 36741  002EA2  6F6D               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 36742  002EA4  D218               	goto	l2373
 36743  002EA6                     
 36744                           ; BSR set to: 0
 36745                           ;lorawan.c: 1851: {
 36746                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 36747                           
 36748                           ; BSR set to: 0
 36749  002EA6  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 36750  002EA8  B4D8               	btfsc	status,2,c
 36751  002EAA  D1F6               	goto	l2378
 36752                           
 36753                           ; BSR set to: 0
 36754  002EAC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36755  002EAE  0D02               	mullw	2
 36756  002EB0  0EAC               	movlw	low (_loRa+168)
 36757  002EB2  24F3               	addwf	prodl,w,c
 36758  002EB4  6ED9               	movwf	fsr2l,c
 36759  002EB6  0E02               	movlw	high (_loRa+168)
 36760  002EB8  20F4               	addwfc	prodh,w,c
 36761  002EBA  6EDA               	movwf	fsr2h,c
 36762  002EBC  28DE               	incf	postinc2,w,c
 36763  002EBE  B4D8               	btfsc	status,2,c
 36764  002EC0  D1EB               	goto	l2378
 36765                           
 36766                           ; BSR set to: 0
 36767                           ;lorawan.c: 1853: {
 36768                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 36769  002EC2  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 36770  002EC6  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 36771  002ECA  50DF               	movf	indf2,w,c
 36772  002ECC  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36773  002ECE  6B66               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36774  002ED0  1F65               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 36775  002ED2  1F66               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36776  002ED4  4B65               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 36777  002ED6  2B66               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36778  002ED8  0EFE               	movlw	254
 36779  002EDA  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 36780  002EDC  0EFF               	movlw	255
 36781  002EDE  6F68               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 36782  002EE0  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36783  002EE2  0D02               	mullw	2
 36784  002EE4  0EAC               	movlw	low (_loRa+168)
 36785  002EE6  24F3               	addwf	prodl,w,c
 36786  002EE8  6ED9               	movwf	fsr2l,c
 36787  002EEA  0E02               	movlw	high (_loRa+168)
 36788  002EEC  20F4               	addwfc	prodh,w,c
 36789  002EEE  6EDA               	movwf	fsr2h,c
 36790  002EF0  50DF               	movf	indf2,w,c
 36791  002EF2  6F69               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 36792  002EF4  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 36793  002EF6  5167               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 36794  002EF8  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 36795  002EFA  5168               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 36796  002EFC  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 36797  002EFE  0EF5               	movlw	low _macEndDevCmdReplyLen
 36798  002F00  2569               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 36799  002F02  6EF6               	movwf	tblptrl,c
 36800  002F04  0EFE               	movlw	high _macEndDevCmdReplyLen
 36801  002F06  216A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 36802  002F08  6EF7               	movwf	tblptrh,c
 36803  002F0A                     	if	1	;There are 3 active tblptr bytes
 36804  002F0A  6AF8               	clrf	tblptru,c
 36805  002F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 36806  002F0E  22F8               	addwfc	tblptru,f,c
 36807  002F10                     	endif
 36808  002F10  0008               	tblrd		*
 36809  002F12  50F5               	movf	tablat,w,c
 36810  002F14  C06E  F06B         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 36811  002F18  6B6C               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 36812  002F1A  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 36813  002F1C  0E00               	movlw	0
 36814  002F1E  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 36815  002F20  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 36816  002F22  276B               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 36817  002F24  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36818  002F26  236C               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 36819  002F28  BF6C               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 36820  002F2A  D1B6               	goto	l2378
 36821  002F2C  516C               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 36822  002F2E  E105               	bnz	u21140
 36823  002F30  0E10               	movlw	16
 36824  002F32  5D6B               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 36825  002F34  B0D8               	btfsc	status,0,c
 36826  002F36  D1D5               	goto	u21250
 36827  002F38  D1AF               	goto	l2378
 36828  002F3A                     u21140:
 36829                           
 36830                           ; BSR set to: 0
 36831                           ;lorawan.c: 1855: {
 36832                           ;lorawan.c: 1856: break;
 36833  002F3A  D1D3               	goto	u21250
 36834  002F3C                     
 36835                           ; BSR set to: 0
 36836                           ;lorawan.c: 1862: {
 36837                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 36838                           
 36839                           ; BSR set to: 0
 36840  002F3C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36841  002F3E  0D01               	mullw	1
 36842  002F40  50F3               	movf	prodl,w,c
 36843  002F42  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36844  002F44  6ED9               	movwf	fsr2l,c
 36845  002F46  50F4               	movf	prodh,w,c
 36846  002F48  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36847  002F4A  6EDA               	movwf	fsr2h,c
 36848  002F4C  0E03               	movlw	3
 36849  002F4E  6EDF               	movwf	indf2,c
 36850                           
 36851                           ; BSR set to: 0
 36852  002F50  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 36853                           
 36854                           ; BSR set to: 0
 36855                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 36856  002F52  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36857  002F54  0D01               	mullw	1
 36858  002F56  50F3               	movf	prodl,w,c
 36859  002F58  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36860  002F5A  6ED9               	movwf	fsr2l,c
 36861  002F5C  50F4               	movf	prodh,w,c
 36862  002F5E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36863  002F60  6EDA               	movwf	fsr2h,c
 36864  002F62  0E00               	movlw	0
 36865  002F64  6EDF               	movwf	indf2,c
 36866                           
 36867                           ; BSR set to: 0
 36868                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 36869  002F66  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36870  002F68  0D02               	mullw	2
 36871  002F6A  0E04               	movlw	low _loRa
 36872  002F6C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36873  002F6E  0E02               	movlw	high _loRa
 36874  002F70  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36875  002F72  0EA8               	movlw	168
 36876  002F74  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36877  002F76  0E00               	movlw	0
 36878  002F78  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36879  002F7A  50F3               	movf	prodl,w,c
 36880  002F7C  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36881  002F7E  50F4               	movf	prodh,w,c
 36882  002F80  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36883  002F82  0E01               	movlw	1
 36884  002F84  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 36885  002F86  6ED9               	movwf	fsr2l,c
 36886  002F88  0E00               	movlw	0
 36887  002F8A  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36888  002F8C  6EDA               	movwf	fsr2h,c
 36889  002F8E  0102               	movlb	2	; () banked
 36890  002F90  A0DF               	btfss	indf2,0,c
 36891  002F92  D00B               	goto	l2380
 36892                           
 36893                           ; BSR set to: 2
 36894                           ;lorawan.c: 1866: {
 36895                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 36896  002F94  0100               	movlb	0	; () banked
 36897  002F96  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36898  002F98  0D01               	mullw	1
 36899  002F9A  50F3               	movf	prodl,w,c
 36900  002F9C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36901  002F9E  6ED9               	movwf	fsr2l,c
 36902  002FA0  50F4               	movf	prodh,w,c
 36903  002FA2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36904  002FA4  6EDA               	movwf	fsr2h,c
 36905  002FA6  0E00               	movlw	0
 36906  002FA8  80DB               	bsf	plusw2,0,c
 36907  002FAA                     l2380:
 36908                           
 36909                           ;lorawan.c: 1868: }
 36910                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 36911  002FAA  0100               	movlb	0	; () banked
 36912  002FAC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36913  002FAE  0D02               	mullw	2
 36914  002FB0  0E04               	movlw	low _loRa
 36915  002FB2  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36916  002FB4  0E02               	movlw	high _loRa
 36917  002FB6  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36918  002FB8  0EA8               	movlw	168
 36919  002FBA  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36920  002FBC  0E00               	movlw	0
 36921  002FBE  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36922  002FC0  50F3               	movf	prodl,w,c
 36923  002FC2  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36924  002FC4  50F4               	movf	prodh,w,c
 36925  002FC6  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36926  002FC8  0E01               	movlw	1
 36927  002FCA  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 36928  002FCC  6ED9               	movwf	fsr2l,c
 36929  002FCE  0E00               	movlw	0
 36930  002FD0  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36931  002FD2  6EDA               	movwf	fsr2h,c
 36932  002FD4  0102               	movlb	2	; () banked
 36933  002FD6  A2DF               	btfss	indf2,1,c
 36934  002FD8  D00B               	goto	l2381
 36935                           
 36936                           ; BSR set to: 2
 36937                           ;lorawan.c: 1871: {
 36938                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 36939  002FDA  0100               	movlb	0	; () banked
 36940  002FDC  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36941  002FDE  0D01               	mullw	1
 36942  002FE0  50F3               	movf	prodl,w,c
 36943  002FE2  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36944  002FE4  6ED9               	movwf	fsr2l,c
 36945  002FE6  50F4               	movf	prodh,w,c
 36946  002FE8  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36947  002FEA  6EDA               	movwf	fsr2h,c
 36948  002FEC  0E00               	movlw	0
 36949  002FEE  82DB               	bsf	plusw2,1,c
 36950  002FF0                     l2381:
 36951                           
 36952                           ;lorawan.c: 1873: }
 36953                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 36954  002FF0  0100               	movlb	0	; () banked
 36955  002FF2  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 36956  002FF4  0D02               	mullw	2
 36957  002FF6  0E04               	movlw	low _loRa
 36958  002FF8  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 36959  002FFA  0E02               	movlw	high _loRa
 36960  002FFC  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 36961  002FFE  0EA8               	movlw	168
 36962  003000  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36963  003002  0E00               	movlw	0
 36964  003004  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36965  003006  50F3               	movf	prodl,w,c
 36966  003008  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 36967  00300A  50F4               	movf	prodh,w,c
 36968  00300C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 36969  00300E  0E01               	movlw	1
 36970  003010  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 36971  003012  6ED9               	movwf	fsr2l,c
 36972  003014  0E00               	movlw	0
 36973  003016  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 36974  003018  6EDA               	movwf	fsr2h,c
 36975  00301A  0102               	movlb	2	; () banked
 36976  00301C  A4DF               	btfss	indf2,2,c
 36977  00301E  D089               	goto	l2387
 36978                           
 36979                           ; BSR set to: 2
 36980                           ;lorawan.c: 1876: {
 36981                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 36982  003020  0100               	movlb	0	; () banked
 36983  003022  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 36984  003024  0D01               	mullw	1
 36985  003026  50F3               	movf	prodl,w,c
 36986  003028  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 36987  00302A  6ED9               	movwf	fsr2l,c
 36988  00302C  50F4               	movf	prodh,w,c
 36989  00302E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 36990  003030  6EDA               	movwf	fsr2h,c
 36991  003032  0E00               	movlw	0
 36992  003034  84DB               	bsf	plusw2,2,c
 36993                           
 36994                           ; BSR set to: 0
 36995  003036  D07D               	goto	l2387
 36996  003038                     
 36997                           ; BSR set to: 0
 36998                           ;lorawan.c: 1884: {
 36999                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 37000                           
 37001                           ; BSR set to: 0
 37002  003038  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37003  00303A  0D01               	mullw	1
 37004  00303C  50F3               	movf	prodl,w,c
 37005  00303E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37006  003040  6ED9               	movwf	fsr2l,c
 37007  003042  50F4               	movf	prodh,w,c
 37008  003044  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37009  003046  6EDA               	movwf	fsr2h,c
 37010  003048  0E05               	movlw	5
 37011  00304A  6EDF               	movwf	indf2,c
 37012                           
 37013                           ; BSR set to: 0
 37014  00304C  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37015                           
 37016                           ; BSR set to: 0
 37017                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 37018  00304E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37019  003050  0D01               	mullw	1
 37020  003052  50F3               	movf	prodl,w,c
 37021  003054  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37022  003056  6ED9               	movwf	fsr2l,c
 37023  003058  50F4               	movf	prodh,w,c
 37024  00305A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37025  00305C  6EDA               	movwf	fsr2h,c
 37026  00305E  0E00               	movlw	0
 37027  003060  6EDF               	movwf	indf2,c
 37028                           
 37029                           ; BSR set to: 0
 37030                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 37031  003062  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37032  003064  0D02               	mullw	2
 37033  003066  0E04               	movlw	low _loRa
 37034  003068  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37035  00306A  0E02               	movlw	high _loRa
 37036  00306C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37037  00306E  0EA8               	movlw	168
 37038  003070  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37039  003072  0E00               	movlw	0
 37040  003074  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37041  003076  50F3               	movf	prodl,w,c
 37042  003078  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37043  00307A  50F4               	movf	prodh,w,c
 37044  00307C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37045  00307E  0E01               	movlw	1
 37046  003080  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37047  003082  6ED9               	movwf	fsr2l,c
 37048  003084  0E00               	movlw	0
 37049  003086  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37050  003088  6EDA               	movwf	fsr2h,c
 37051  00308A  0102               	movlb	2	; () banked
 37052  00308C  A6DF               	btfss	indf2,3,c
 37053  00308E  D00B               	goto	l2385
 37054                           
 37055                           ; BSR set to: 2
 37056                           ;lorawan.c: 1888: {
 37057                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 37058  003090  0100               	movlb	0	; () banked
 37059  003092  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37060  003094  0D01               	mullw	1
 37061  003096  50F3               	movf	prodl,w,c
 37062  003098  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37063  00309A  6ED9               	movwf	fsr2l,c
 37064  00309C  50F4               	movf	prodh,w,c
 37065  00309E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37066  0030A0  6EDA               	movwf	fsr2h,c
 37067  0030A2  0E00               	movlw	0
 37068  0030A4  80DB               	bsf	plusw2,0,c
 37069  0030A6                     l2385:
 37070                           
 37071                           ;lorawan.c: 1890: }
 37072                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 37073  0030A6  0100               	movlb	0	; () banked
 37074  0030A8  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37075  0030AA  0D02               	mullw	2
 37076  0030AC  0E04               	movlw	low _loRa
 37077  0030AE  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37078  0030B0  0E02               	movlw	high _loRa
 37079  0030B2  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37080  0030B4  0EA8               	movlw	168
 37081  0030B6  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37082  0030B8  0E00               	movlw	0
 37083  0030BA  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37084  0030BC  50F3               	movf	prodl,w,c
 37085  0030BE  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37086  0030C0  50F4               	movf	prodh,w,c
 37087  0030C2  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37088  0030C4  0E01               	movlw	1
 37089  0030C6  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37090  0030C8  6ED9               	movwf	fsr2l,c
 37091  0030CA  0E00               	movlw	0
 37092  0030CC  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37093  0030CE  6EDA               	movwf	fsr2h,c
 37094  0030D0  0102               	movlb	2	; () banked
 37095  0030D2  A8DF               	btfss	indf2,4,c
 37096  0030D4  D00B               	goto	l2386
 37097                           
 37098                           ; BSR set to: 2
 37099                           ;lorawan.c: 1893: {
 37100                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 37101  0030D6  0100               	movlb	0	; () banked
 37102  0030D8  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37103  0030DA  0D01               	mullw	1
 37104  0030DC  50F3               	movf	prodl,w,c
 37105  0030DE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37106  0030E0  6ED9               	movwf	fsr2l,c
 37107  0030E2  50F4               	movf	prodh,w,c
 37108  0030E4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37109  0030E6  6EDA               	movwf	fsr2h,c
 37110  0030E8  0E00               	movlw	0
 37111  0030EA  82DB               	bsf	plusw2,1,c
 37112  0030EC                     l2386:
 37113                           
 37114                           ;lorawan.c: 1895: }
 37115                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 37116  0030EC  0100               	movlb	0	; () banked
 37117  0030EE  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37118  0030F0  0D02               	mullw	2
 37119  0030F2  0E04               	movlw	low _loRa
 37120  0030F4  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37121  0030F6  0E02               	movlw	high _loRa
 37122  0030F8  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37123  0030FA  0EA8               	movlw	168
 37124  0030FC  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37125  0030FE  0E00               	movlw	0
 37126  003100  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37127  003102  50F3               	movf	prodl,w,c
 37128  003104  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37129  003106  50F4               	movf	prodh,w,c
 37130  003108  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37131  00310A  0E01               	movlw	1
 37132  00310C  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37133  00310E  6ED9               	movwf	fsr2l,c
 37134  003110  0E00               	movlw	0
 37135  003112  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37136  003114  6EDA               	movwf	fsr2h,c
 37137  003116  0102               	movlb	2	; () banked
 37138  003118  AADF               	btfss	indf2,5,c
 37139  00311A  D00B               	goto	l2387
 37140                           
 37141                           ; BSR set to: 2
 37142                           ;lorawan.c: 1898: {
 37143                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 37144  00311C  0100               	movlb	0	; () banked
 37145  00311E  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37146  003120  0D01               	mullw	1
 37147  003122  50F3               	movf	prodl,w,c
 37148  003124  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37149  003126  6ED9               	movwf	fsr2l,c
 37150  003128  50F4               	movf	prodh,w,c
 37151  00312A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37152  00312C  6EDA               	movwf	fsr2h,c
 37153  00312E  0E00               	movlw	0
 37154  003130  84DB               	bsf	plusw2,2,c
 37155  003132                     l2387:
 37156                           
 37157                           ;lorawan.c: 1900: }
 37158                           ;lorawan.c: 1902: bufferIndex ++;
 37159                           
 37160                           ; BSR set to: 0
 37161  003132  0100               	movlb	0	; () banked
 37162  003134  D03C               	goto	L15
 37163  003136                     
 37164                           ; BSR set to: 0
 37165                           ;lorawan.c: 1907: {
 37166                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 37167                           
 37168                           ; BSR set to: 0
 37169  003136  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37170  003138  0D01               	mullw	1
 37171  00313A  50F3               	movf	prodl,w,c
 37172  00313C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37173  00313E  6ED9               	movwf	fsr2l,c
 37174  003140  50F4               	movf	prodh,w,c
 37175  003142  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37176  003144  6EDA               	movwf	fsr2h,c
 37177  003146  0E06               	movlw	6
 37178  003148  6EDF               	movwf	indf2,c
 37179                           
 37180                           ; BSR set to: 0
 37181  00314A  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37182                           
 37183                           ; BSR set to: 0
 37184                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 37185  00314C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37186  00314E  0D01               	mullw	1
 37187  003150  50F3               	movf	prodl,w,c
 37188  003152  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37189  003154  6ED9               	movwf	fsr2l,c
 37190  003156  50F4               	movf	prodh,w,c
 37191  003158  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37192  00315A  6EDA               	movwf	fsr2h,c
 37193  00315C  C2E4  FFDF         	movff	_loRa+224,indf2
 37194  003160  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37195                           
 37196                           ; BSR set to: 0
 37197                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 37198  003162  EC34  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37199  003166  0A80               	xorlw	128
 37200  003168  0FA0               	addlw	160
 37201  00316A  A0D8               	btfss	status,0,c
 37202  00316C  D006               	goto	u21220
 37203  00316E  EC34  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37204  003172  0A80               	xorlw	128
 37205  003174  0F60               	addlw	-160
 37206  003176  A0D8               	btfss	status,0,c
 37207  003178  D00C               	goto	l2389
 37208  00317A                     u21220:
 37209                           
 37210                           ;lorawan.c: 1911: {
 37211                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 37212  00317A  0100               	movlb	0	; () banked
 37213  00317C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37214  00317E  0D01               	mullw	1
 37215  003180  50F3               	movf	prodl,w,c
 37216  003182  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37217  003184  6ED9               	movwf	fsr2l,c
 37218  003186  50F4               	movf	prodh,w,c
 37219  003188  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37220  00318A  6EDA               	movwf	fsr2h,c
 37221  00318C  0E20               	movlw	32
 37222  00318E  6EDF               	movwf	indf2,c
 37223  003190  D00E               	goto	L15
 37224  003192                     l2389:
 37225                           
 37226                           ;lorawan.c: 1914: else
 37227                           ;lorawan.c: 1915: {
 37228                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 37229                           
 37230                           ; BSR set to: 0
 37231  003192  0100               	movlb	0	; () banked
 37232  003194  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37233  003196  0D01               	mullw	1
 37234  003198  50F3               	movf	prodl,w,c
 37235  00319A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37236  00319C  6ED9               	movwf	fsr2l,c
 37237  00319E  50F4               	movf	prodh,w,c
 37238  0031A0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37239  0031A2  6EDA               	movwf	fsr2h,c
 37240  0031A4  EC34  F063         	call	_RADIO_GetPacketSnr	;wreg free
 37241  0031A8  0B3F               	andlw	63
 37242  0031AA  6EDF               	movwf	indf2,c
 37243  0031AC  D7C2               	goto	l2387
 37244  0031AE                     L15:
 37245  0031AE  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37246                           
 37247                           ; BSR set to: 0
 37248                           ;lorawan.c: 1917: }
 37249                           ;lorawan.c: 1918: }
 37250                           ;lorawan.c: 1919: break;
 37251  0031B0  D091               	goto	l2383
 37252  0031B2                     
 37253                           ; BSR set to: 0
 37254                           ;lorawan.c: 1922: {
 37255                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 37256                           
 37257                           ; BSR set to: 0
 37258  0031B2  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37259  0031B4  0D01               	mullw	1
 37260  0031B6  50F3               	movf	prodl,w,c
 37261  0031B8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37262  0031BA  6ED9               	movwf	fsr2l,c
 37263  0031BC  50F4               	movf	prodh,w,c
 37264  0031BE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37265  0031C0  6EDA               	movwf	fsr2h,c
 37266  0031C2  0E07               	movlw	7
 37267  0031C4  6EDF               	movwf	indf2,c
 37268                           
 37269                           ; BSR set to: 0
 37270  0031C6  2B6E               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 37271                           
 37272                           ; BSR set to: 0
 37273                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 37274  0031C8  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37275  0031CA  0D01               	mullw	1
 37276  0031CC  50F3               	movf	prodl,w,c
 37277  0031CE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37278  0031D0  6ED9               	movwf	fsr2l,c
 37279  0031D2  50F4               	movf	prodh,w,c
 37280  0031D4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37281  0031D6  6EDA               	movwf	fsr2h,c
 37282  0031D8  0E00               	movlw	0
 37283  0031DA  6EDF               	movwf	indf2,c
 37284                           
 37285                           ; BSR set to: 0
 37286                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 37287  0031DC  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37288  0031DE  0D02               	mullw	2
 37289  0031E0  0E04               	movlw	low _loRa
 37290  0031E2  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37291  0031E4  0E02               	movlw	high _loRa
 37292  0031E6  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37293  0031E8  0EA8               	movlw	168
 37294  0031EA  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37295  0031EC  0E00               	movlw	0
 37296  0031EE  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37297  0031F0  50F3               	movf	prodl,w,c
 37298  0031F2  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37299  0031F4  50F4               	movf	prodh,w,c
 37300  0031F6  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37301  0031F8  0E01               	movlw	1
 37302  0031FA  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37303  0031FC  6ED9               	movwf	fsr2l,c
 37304  0031FE  0E00               	movlw	0
 37305  003200  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37306  003202  6EDA               	movwf	fsr2h,c
 37307  003204  0102               	movlb	2	; () banked
 37308  003206  AEDF               	btfss	indf2,7,c
 37309  003208  D00B               	goto	l2394
 37310                           
 37311                           ; BSR set to: 2
 37312                           ;lorawan.c: 1926: {
 37313                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 37314  00320A  0100               	movlb	0	; () banked
 37315  00320C  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37316  00320E  0D01               	mullw	1
 37317  003210  50F3               	movf	prodl,w,c
 37318  003212  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37319  003214  6ED9               	movwf	fsr2l,c
 37320  003216  50F4               	movf	prodh,w,c
 37321  003218  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37322  00321A  6EDA               	movwf	fsr2h,c
 37323  00321C  0E00               	movlw	0
 37324  00321E  80DB               	bsf	plusw2,0,c
 37325  003220                     l2394:
 37326                           
 37327                           ;lorawan.c: 1928: }
 37328                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 37329  003220  0100               	movlb	0	; () banked
 37330  003222  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37331  003224  0D02               	mullw	2
 37332  003226  0E04               	movlw	low _loRa
 37333  003228  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 37334  00322A  0E02               	movlw	high _loRa
 37335  00322C  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 37336  00322E  0EA8               	movlw	168
 37337  003230  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37338  003232  0E00               	movlw	0
 37339  003234  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37340  003236  50F3               	movf	prodl,w,c
 37341  003238  2765               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 37342  00323A  50F4               	movf	prodh,w,c
 37343  00323C  2366               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 37344  00323E  0E01               	movlw	1
 37345  003240  2565               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 37346  003242  6ED9               	movwf	fsr2l,c
 37347  003244  0E00               	movlw	0
 37348  003246  2166               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 37349  003248  6EDA               	movwf	fsr2h,c
 37350  00324A  0102               	movlb	2	; () banked
 37351  00324C  ACDF               	btfss	indf2,6,c
 37352  00324E  D771               	goto	l2387
 37353                           
 37354                           ; BSR set to: 2
 37355                           ;lorawan.c: 1931: {
 37356                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 37357  003250  0100               	movlb	0	; () banked
 37358  003252  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37359  003254  0D01               	mullw	1
 37360  003256  50F3               	movf	prodl,w,c
 37361  003258  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37362  00325A  6ED9               	movwf	fsr2l,c
 37363  00325C  50F4               	movf	prodh,w,c
 37364  00325E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37365  003260  6EDA               	movwf	fsr2h,c
 37366  003262  0E00               	movlw	0
 37367  003264  82DB               	bsf	plusw2,1,c
 37368                           
 37369                           ; BSR set to: 0
 37370  003266  D765               	goto	l2387
 37371  003268                     l2396:
 37372                           
 37373                           ; BSR set to: 0
 37374                           ;lorawan.c: 1939: {
 37375                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 37376  003268  0102               	movlb	2	; () banked
 37377  00326A  69E1               	setf	(_loRa+221)& (0+255),b
 37378                           
 37379                           ; BSR set to: 2
 37380                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 37381  00326C  0E00               	movlw	0
 37382  00326E  6FE2               	movwf	(_loRa+222)& (0+255),b
 37383                           
 37384                           ; BSR set to: 2
 37385                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 37386  003270  0100               	movlb	0	; () banked
 37387  003272                     
 37388                           ; BSR set to: 0
 37389                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 37390                           ;lorawan.c: 1948: {
 37391                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 37392                           
 37393                           ; BSR set to: 0
 37394                           
 37395                           ; BSR set to: 0
 37396  003272  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37397  003274  0D02               	mullw	2
 37398  003276  0EAC               	movlw	low (_loRa+168)
 37399  003278  24F3               	addwf	prodl,w,c
 37400  00327A  6ED9               	movwf	fsr2l,c
 37401  00327C  0E02               	movlw	high (_loRa+168)
 37402  00327E  20F4               	addwfc	prodh,w,c
 37403  003280  6EDA               	movwf	fsr2h,c
 37404  003282  516E               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 37405  003284  0D01               	mullw	1
 37406  003286  50F3               	movf	prodl,w,c
 37407  003288  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 37408  00328A  6EE9               	movwf	fsr0l,c
 37409  00328C  50F4               	movf	prodh,w,c
 37410  00328E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 37411  003290  6EEA               	movwf	fsr0h,c
 37412  003292  CFDF FFEF          	movff	indf2,indf0
 37413  003296  D78B               	goto	L15
 37414  003298                     l2378:
 37415                           
 37416                           ; BSR set to: 0
 37417                           
 37418                           ; BSR set to: 0
 37419  003298  516D               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 37420  00329A  0D02               	mullw	2
 37421  00329C  0EAC               	movlw	low (_loRa+168)
 37422  00329E  24F3               	addwf	prodl,w,c
 37423  0032A0  6ED9               	movwf	fsr2l,c
 37424  0032A2  0E02               	movlw	high (_loRa+168)
 37425  0032A4  20F4               	addwfc	prodh,w,c
 37426  0032A6  6EDA               	movwf	fsr2h,c
 37427  0032A8  50DF               	movf	indf2,w,c
 37428                           
 37429                           ; Switch size 1, requested type "space"
 37430                           ; Number of cases is 7, Range of values is 2 to 8
 37431                           ; switch strategies available:
 37432                           ; Name         Instructions Cycles
 37433                           ; simple_byte           22    12 (average)
 37434                           ;	Chosen strategy is simple_byte
 37435  0032AA  0A02               	xorlw	2	; case 2
 37436  0032AC  B4D8               	btfsc	status,2,c
 37437  0032AE  D7DC               	goto	l2396
 37438  0032B0  0A01               	xorlw	1	; case 3
 37439  0032B2  B4D8               	btfsc	status,2,c
 37440  0032B4  D643               	goto	l2379
 37441  0032B6  0A07               	xorlw	7	; case 4
 37442  0032B8  B4D8               	btfsc	status,2,c
 37443  0032BA  D7DB               	goto	l2397
 37444  0032BC  0A01               	xorlw	1	; case 5
 37445  0032BE  B4D8               	btfsc	status,2,c
 37446  0032C0  D6BB               	goto	l2384
 37447  0032C2  0A03               	xorlw	3	; case 6
 37448  0032C4  B4D8               	btfsc	status,2,c
 37449  0032C6  D737               	goto	l2388
 37450  0032C8  0A01               	xorlw	1	; case 7
 37451  0032CA  B4D8               	btfsc	status,2,c
 37452  0032CC  D772               	goto	l2393
 37453  0032CE  0A0F               	xorlw	15	; case 8
 37454  0032D0  B4D8               	btfsc	status,2,c
 37455  0032D2  D7CF               	goto	l2397
 37456  0032D4                     l2383:
 37457                           
 37458                           ; BSR set to: 0
 37459                           
 37460                           ; BSR set to: 0
 37461  0032D4  2B6D               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 37462  0032D6                     l2373:
 37463                           
 37464                           ; BSR set to: 0
 37465                           
 37466                           ; BSR set to: 0
 37467  0032D6  0102               	movlb	2	; () banked
 37468  0032D8  51AB               	movf	(_loRa+167)& (0+255),w,b
 37469  0032DA  0100               	movlb	0	; () banked
 37470  0032DC  5D6D               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 37471  0032DE  A0D8               	btfss	status,0,c
 37472  0032E0  D5E2               	goto	l2374
 37473  0032E2                     u21250:
 37474                           
 37475                           ; BSR set to: 0
 37476                           ;lorawan.c: 1957: }
 37477                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 37478                           
 37479                           ; BSR set to: 0
 37480  0032E2  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 37481  0032E6  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 37482  0032EA  C06E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 37483                           
 37484                           ; BSR set to: 0
 37485  0032EE  0012               	return		;funcret
 37486  0032F0                     __end_of_IncludeMacCommandsResponse:
 37487                           	opt stack 0
 37488                           tosu	equ	0xFFF
 37489                           tosh	equ	0xFFE
 37490                           tosl	equ	0xFFD
 37491                           pclath	equ	0xFFA
 37492                           tblptru	equ	0xFF8
 37493                           tblptrh	equ	0xFF7
 37494                           tblptrl	equ	0xFF6
 37495                           tablat	equ	0xFF5
 37496                           prodh	equ	0xFF4
 37497                           prodl	equ	0xFF3
 37498                           intcon	equ	0xFF2
 37499                           intcon2	equ	0xFF1
 37500                           intcon3	equ	0xFF0
 37501                           indf0	equ	0xFEF
 37502                           postinc0	equ	0xFEE
 37503                           fsr0h	equ	0xFEA
 37504                           fsr0l	equ	0xFE9
 37505                           wreg	equ	0xFE8
 37506                           postinc1	equ	0xFE6
 37507                           postdec1	equ	0xFE5
 37508                           plusw1	equ	0xFE3
 37509                           fsr1h	equ	0xFE2
 37510                           fsr1l	equ	0xFE1
 37511                           indf2	equ	0xFDF
 37512                           postinc2	equ	0xFDE
 37513                           postdec2	equ	0xFDD
 37514                           plusw2	equ	0xFDB
 37515                           fsr2h	equ	0xFDA
 37516                           fsr2l	equ	0xFD9
 37517                           status	equ	0xFD8
 37518                           
 37519 ;; *************** function _RADIO_GetPacketSnr *****************
 37520 ;; Defined at:
 37521 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37522 ;; Parameters:    Size  Location     Type
 37523 ;;		None
 37524 ;; Auto vars:     Size  Location     Type
 37525 ;;		None
 37526 ;; Return value:  Size  Location     Type
 37527 ;;                  1    wreg      char 
 37528 ;; Registers used:
 37529 ;;		wreg, status,2
 37530 ;; Tracked objects:
 37531 ;;		On entry : 0/0
 37532 ;;		On exit  : 0/0
 37533 ;;		Unchanged: 0/0
 37534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37539 ;;Total ram usage:        0 bytes
 37540 ;; Hardware stack levels used:    1
 37541 ;; Hardware stack levels required when called:    7
 37542 ;; This function calls:
 37543 ;;		Nothing
 37544 ;; This function is called by:
 37545 ;;		_IncludeMacCommandsResponse
 37546 ;; This function uses a non-reentrant model
 37547 ;;
 37548                           
 37549                           	psect	text205
 37550  00C668                     __ptext205:
 37551                           	opt stack 0
 37552  00C668                     _RADIO_GetPacketSnr:
 37553                           	opt stack 20
 37554                           
 37555                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 37556                           
 37557                           ; BSR set to: 0
 37558                           ;incstack = 0
 37559  00C668  0101               	movlb	1	; () banked
 37560  00C66A  5167               	movf	(_RadioConfiguration+50)& (0+255),w,b
 37561  00C66C  0012               	return	
 37562  00C66E                     __end_of_RADIO_GetPacketSnr:
 37563                           	opt stack 0
 37564                           tosu	equ	0xFFF
 37565                           tosh	equ	0xFFE
 37566                           tosl	equ	0xFFD
 37567                           pclath	equ	0xFFA
 37568                           tblptru	equ	0xFF8
 37569                           tblptrh	equ	0xFF7
 37570                           tblptrl	equ	0xFF6
 37571                           tablat	equ	0xFF5
 37572                           prodh	equ	0xFF4
 37573                           prodl	equ	0xFF3
 37574                           intcon	equ	0xFF2
 37575                           intcon2	equ	0xFF1
 37576                           intcon3	equ	0xFF0
 37577                           indf0	equ	0xFEF
 37578                           postinc0	equ	0xFEE
 37579                           fsr0h	equ	0xFEA
 37580                           fsr0l	equ	0xFE9
 37581                           wreg	equ	0xFE8
 37582                           postinc1	equ	0xFE6
 37583                           postdec1	equ	0xFE5
 37584                           plusw1	equ	0xFE3
 37585                           fsr1h	equ	0xFE2
 37586                           fsr1l	equ	0xFE1
 37587                           indf2	equ	0xFDF
 37588                           postinc2	equ	0xFDE
 37589                           postdec2	equ	0xFDD
 37590                           plusw2	equ	0xFDB
 37591                           fsr2h	equ	0xFDA
 37592                           fsr2l	equ	0xFD9
 37593                           status	equ	0xFD8
 37594                           
 37595 ;; *************** function _FindSmallestDataRate *****************
 37596 ;; Defined at:
 37597 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37598 ;; Parameters:    Size  Location     Type
 37599 ;;		None
 37600 ;; Auto vars:     Size  Location     Type
 37601 ;;  dataRate        1    3[BANK0 ] unsigned char 
 37602 ;;  i               1    2[BANK0 ] unsigned char 
 37603 ;;  found           1    1[BANK0 ] unsigned char 
 37604 ;; Return value:  Size  Location     Type
 37605 ;;                  1    wreg      unsigned char 
 37606 ;; Registers used:
 37607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37608 ;; Tracked objects:
 37609 ;;		On entry : 0/0
 37610 ;;		On exit  : 0/0
 37611 ;;		Unchanged: 0/0
 37612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37614 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37616 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37617 ;;Total ram usage:        4 bytes
 37618 ;; Hardware stack levels used:    1
 37619 ;; Hardware stack levels required when called:    7
 37620 ;; This function calls:
 37621 ;;		Nothing
 37622 ;; This function is called by:
 37623 ;;		_AckRetransmissionCallback
 37624 ;;		_AssemblePacket
 37625 ;; This function uses a non-reentrant model
 37626 ;;
 37627                           
 37628                           	psect	text206
 37629  009124                     __ptext206:
 37630                           	opt stack 0
 37631  009124                     _FindSmallestDataRate:
 37632                           	opt stack 21
 37633                           
 37634                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 37635                           
 37636                           ; BSR set to: 1
 37637                           ;incstack = 0
 37638  009124  0E00               	movlw	0
 37639  009126  0100               	movlb	0	; () banked
 37640  009128  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 37641                           
 37642                           ;lorawan.c: 1966: bool found = 0;
 37643  00912A  0E00               	movlw	0
 37644  00912C  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 37645                           
 37646                           ; BSR set to: 0
 37647                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 37648  00912E  0102               	movlb	2	; () banked
 37649  009130  51E3               	movf	(_loRa+223)& (0+255),w,b
 37650  009132  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 37651  009134  B0D8               	btfsc	status,0,c
 37652  009136  D062               	goto	l2414
 37653                           
 37654                           ; BSR set to: 2
 37655                           ;lorawan.c: 1969: {
 37656                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 37657  009138  05E3               	decf	(_loRa+223)& (0+255),w,b
 37658  00913A  0100               	movlb	0	; () banked
 37659  00913C  D050               	goto	L16
 37660  00913E                     
 37661                           ; BSR set to: 0
 37662                           ;lorawan.c: 1973: {
 37663                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 37664                           
 37665                           ; BSR set to: 0
 37666  00913E  0E00               	movlw	0
 37667  009140  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 37668  009142  D03D               	goto	l2406
 37669  009144                     
 37670                           ; BSR set to: 0
 37671                           ;lorawan.c: 1975: {
 37672                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 37673                           
 37674                           ; BSR set to: 0
 37675  009144  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37676  009146  0D0E               	mullw	14
 37677  009148  0E05               	movlw	5
 37678  00914A  26F3               	addwf	prodl,f,c
 37679  00914C  0E00               	movlw	0
 37680  00914E  22F4               	addwfc	prodh,f,c
 37681  009150  0E00               	movlw	low _Channels
 37682  009152  24F3               	addwf	prodl,w,c
 37683  009154  6ED9               	movwf	fsr2l,c
 37684  009156  0E04               	movlw	high _Channels
 37685  009158  20F4               	addwfc	prodh,w,c
 37686  00915A  6EDA               	movwf	fsr2h,c
 37687  00915C  0104               	movlb	4	; () banked
 37688  00915E  50DF               	movf	223,w,c
 37689  009160  0B0F               	andlw	15
 37690  009162  0100               	movlb	0	; () banked
 37691  009164  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 37692  009166  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 37693  009168  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 37694  00916A  A0D8               	btfss	status,0,c
 37695  00916C  D027               	goto	l2408
 37696                           
 37697                           ; BSR set to: 0
 37698  00916E  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37699  009170  0D0E               	mullw	14
 37700  009172  0E05               	movlw	5
 37701  009174  26F3               	addwf	prodl,f,c
 37702  009176  0E00               	movlw	0
 37703  009178  22F4               	addwfc	prodh,f,c
 37704  00917A  0E00               	movlw	low _Channels
 37705  00917C  24F3               	addwf	prodl,w,c
 37706  00917E  6ED9               	movwf	fsr2l,c
 37707  009180  0E04               	movlw	high _Channels
 37708  009182  20F4               	addwfc	prodh,w,c
 37709  009184  6EDA               	movwf	fsr2h,c
 37710  009186  0104               	movlb	4	; () banked
 37711  009188  38DF               	swapf	223,w,c
 37712  00918A  0B0F               	andlw	15
 37713  00918C  0100               	movlb	0	; () banked
 37714  00918E  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 37715  009190  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 37716  009192  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 37717  009194  A0D8               	btfss	status,0,c
 37718  009196  D012               	goto	l2408
 37719                           
 37720                           ; BSR set to: 0
 37721  009198  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 37722  00919A  0D0E               	mullw	14
 37723  00919C  0E04               	movlw	4
 37724  00919E  26F3               	addwf	prodl,f,c
 37725  0091A0  0E00               	movlw	0
 37726  0091A2  22F4               	addwfc	prodh,f,c
 37727  0091A4  0E00               	movlw	low _Channels
 37728  0091A6  24F3               	addwf	prodl,w,c
 37729  0091A8  6ED9               	movwf	fsr2l,c
 37730  0091AA  0E04               	movlw	high _Channels
 37731  0091AC  20F4               	addwfc	prodh,w,c
 37732  0091AE  6EDA               	movwf	fsr2h,c
 37733  0091B0  04DE               	decf	postinc2,w,c
 37734  0091B2  A4D8               	btfss	status,2,c
 37735  0091B4  D003               	goto	l2408
 37736                           
 37737                           ; BSR set to: 0
 37738                           ;lorawan.c: 1977: {
 37739                           ;lorawan.c: 1978: found = 1;
 37740  0091B6  0E01               	movlw	1
 37741  0091B8  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 37742                           
 37743                           ;lorawan.c: 1979: break;
 37744  0091BA  D007               	goto	u20970
 37745  0091BC                     l2408:
 37746                           
 37747                           ; BSR set to: 0
 37748                           
 37749                           ; BSR set to: 0
 37750  0091BC  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 37751  0091BE                     l2406:
 37752                           
 37753                           ; BSR set to: 0
 37754                           
 37755                           ; BSR set to: 0
 37756  0091BE  0102               	movlb	2	; () banked
 37757  0091C0  51F1               	movf	(_loRa+237)& (0+255),w,b
 37758  0091C2  0100               	movlb	0	; () banked
 37759  0091C4  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 37760  0091C6  A0D8               	btfss	status,0,c
 37761  0091C8  D7BD               	goto	l2407
 37762  0091CA                     u20970:
 37763                           
 37764                           ; BSR set to: 0
 37765                           ;lorawan.c: 1980: }
 37766                           ;lorawan.c: 1981: }
 37767                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 37768                           
 37769                           ; BSR set to: 0
 37770  0091CA  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37771  0091CC  A4D8               	btfss	status,2,c
 37772  0091CE  D008               	goto	l2410
 37773                           
 37774                           ; BSR set to: 0
 37775  0091D0  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 37776  0091D2  0102               	movlb	2	; () banked
 37777  0091D4  5DEF               	subwf	(_loRa+235)& (0+255),w,b
 37778  0091D6  B0D8               	btfsc	status,0,c
 37779  0091D8  D003               	goto	l2410
 37780                           
 37781                           ; BSR set to: 2
 37782                           ;lorawan.c: 1983: {
 37783                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 37784  0091DA  0100               	movlb	0	; () banked
 37785  0091DC  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 37786  0091DE                     L16:
 37787  0091DE  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 37788  0091E0                     l2410:
 37789                           
 37790                           ; BSR set to: 0
 37791                           
 37792                           ; BSR set to: 0
 37793  0091E0  0100               	movlb	0	; () banked
 37794  0091E2  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37795  0091E4  A4D8               	btfss	status,2,c
 37796  0091E6  D006               	goto	u21010
 37797                           
 37798                           ; BSR set to: 0
 37799  0091E8  0102               	movlb	2	; () banked
 37800  0091EA  51EF               	movf	(_loRa+235)& (0+255),w,b
 37801  0091EC  0100               	movlb	0	; () banked
 37802  0091EE  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 37803  0091F0  B0D8               	btfsc	status,0,c
 37804  0091F2  D7A5               	goto	l2405
 37805  0091F4                     u21010:
 37806                           
 37807                           ; BSR set to: 0
 37808                           ;lorawan.c: 1985: }
 37809                           ;lorawan.c: 1986: }
 37810                           ;lorawan.c: 1988: if (found == 1)
 37811                           
 37812                           ; BSR set to: 0
 37813                           
 37814                           ; BSR set to: 0
 37815  0091F4  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 37816  0091F6  B4D8               	btfsc	status,2,c
 37817                           
 37818                           ; BSR set to: 0
 37819                           ;lorawan.c: 1989: {
 37820                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 37821  0091F8  C063  F2E3         	movff	FindSmallestDataRate@dataRate,_loRa+223
 37822  0091FC                     l2414:
 37823                           
 37824                           ;lorawan.c: 1991: }
 37825                           ;lorawan.c: 1992: }
 37826                           ;lorawan.c: 1994: return found;
 37827                           
 37828                           ; BSR set to: 0
 37829                           
 37830                           ; BSR set to: 0
 37831  0091FC  0100               	movlb	0	; () banked
 37832  0091FE  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 37833  009200  0012               	return	
 37834  009202                     __end_of_FindSmallestDataRate:
 37835                           	opt stack 0
 37836                           tosu	equ	0xFFF
 37837                           tosh	equ	0xFFE
 37838                           tosl	equ	0xFFD
 37839                           pclath	equ	0xFFA
 37840                           tblptru	equ	0xFF8
 37841                           tblptrh	equ	0xFF7
 37842                           tblptrl	equ	0xFF6
 37843                           tablat	equ	0xFF5
 37844                           prodh	equ	0xFF4
 37845                           prodl	equ	0xFF3
 37846                           intcon	equ	0xFF2
 37847                           intcon2	equ	0xFF1
 37848                           intcon3	equ	0xFF0
 37849                           indf0	equ	0xFEF
 37850                           postinc0	equ	0xFEE
 37851                           fsr0h	equ	0xFEA
 37852                           fsr0l	equ	0xFE9
 37853                           wreg	equ	0xFE8
 37854                           postinc1	equ	0xFE6
 37855                           postdec1	equ	0xFE5
 37856                           plusw1	equ	0xFE3
 37857                           fsr1h	equ	0xFE2
 37858                           fsr1l	equ	0xFE1
 37859                           indf2	equ	0xFDF
 37860                           postinc2	equ	0xFDE
 37861                           postdec2	equ	0xFDD
 37862                           plusw2	equ	0xFDB
 37863                           fsr2h	equ	0xFDA
 37864                           fsr2l	equ	0xFD9
 37865                           status	equ	0xFD8
 37866                           
 37867 ;; *************** function _EncryptFRMPayload *****************
 37868 ;; Defined at:
 37869 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37870 ;; Parameters:    Size  Location     Type
 37871 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 37872 ;;		 -> data(8), sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 37873 ;;		 -> NULL(0), 
 37874 ;;  bufferLength    1   51[BANK0 ] unsigned char 
 37875 ;;  dir             1   52[BANK0 ] unsigned char 
 37876 ;;  frameCounter    4   53[BANK0 ] unsigned long 
 37877 ;;  key             2   57[BANK0 ] PTR unsigned char 
 37878 ;;		 -> loRa.activationParameters(105), loRa(245), 
 37879 ;;  macBufferInd    1   59[BANK0 ] unsigned char 
 37880 ;;  bufferToBeEn    2   60[BANK0 ] PTR unsigned char 
 37881 ;;		 -> macBuffer(271), radioBuffer(271), 
 37882 ;;  multicastSta    1   62[BANK0 ] unsigned char 
 37883 ;; Auto vars:     Size  Location     Type
 37884 ;;  j               1   70[BANK0 ] unsigned char 
 37885 ;;  i               1   69[BANK0 ] unsigned char 
 37886 ;;  k               1   68[BANK0 ] unsigned char 
 37887 ;; Return value:  Size  Location     Type
 37888 ;;                  1    wreg      void 
 37889 ;; Registers used:
 37890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37891 ;; Tracked objects:
 37892 ;;		On entry : 0/0
 37893 ;;		On exit  : 0/0
 37894 ;;		Unchanged: 0/0
 37895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37896 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37897 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37898 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37899 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37900 ;;Total ram usage:       22 bytes
 37901 ;; Hardware stack levels used:    1
 37902 ;; Hardware stack levels required when called:   10
 37903 ;; This function calls:
 37904 ;;		_AESEncodeLoRa
 37905 ;;		_AssembleEncryptionBlock
 37906 ;;		___awdiv
 37907 ;; This function is called by:
 37908 ;;		_LORAWAN_RxDone
 37909 ;;		_AssemblePacket
 37910 ;; This function uses a non-reentrant model
 37911 ;;
 37912                           
 37913                           	psect	text207
 37914  006E7C                     __ptext207:
 37915                           	opt stack 0
 37916  006E7C                     _EncryptFRMPayload:
 37917                           	opt stack 18
 37918                           
 37919                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;incstack = 0
 37923  006E7C  0E00               	movlw	0
 37924  006E7E  0100               	movlb	0	; () banked
 37925  006E80  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 37926  006E82  0E00               	movlw	0
 37927  006E84  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 37928  006E86  0E00               	movlw	0
 37929  006E88  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 37930                           
 37931                           ; BSR set to: 0
 37932                           ;lorawan.c: 2209: k = bufferLength / 16;
 37933  006E8A  C093  F066         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 37934  006E8E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 37935  006E90  0E00               	movlw	0
 37936  006E92  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 37937  006E94  0E10               	movlw	16
 37938  006E96  6F68               	movwf	___awdiv@divisor& (0+255),b
 37939  006E98  EC28  F050         	call	___awdiv	;wreg free
 37940  006E9C  0100               	movlb	0	; () banked
 37941  006E9E  5166               	movf	?___awdiv& (0+255),w,b
 37942  006EA0  6FA4               	movwf	EncryptFRMPayload@k& (0+255),b
 37943                           
 37944                           ; BSR set to: 0
 37945                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 37946  006EA2  0E01               	movlw	1
 37947  006EA4  6FA5               	movwf	EncryptFRMPayload@i& (0+255),b
 37948  006EA6  D05A               	goto	l2479
 37949  006EA8                     
 37950                           ; BSR set to: 0
 37951                           ;lorawan.c: 2211: {
 37952                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 37953                           
 37954                           ; BSR set to: 0
 37955  006EA8  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 37956  006EAC  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 37957  006EB0  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 37958  006EB4  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 37959  006EB8  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 37960  006EBC  0E01               	movlw	1
 37961  006EBE  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 37962  006EC0  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 37963  006EC4  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 37964  006EC6  ECCF  F045         	call	_AssembleEncryptionBlock
 37965                           
 37966                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 37967  006ECA  0EC8               	movlw	low _aesBuffer
 37968  006ECC  0100               	movlb	0	; () banked
 37969  006ECE  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 37970  006ED0  0E03               	movlw	high _aesBuffer
 37971  006ED2  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 37972  006ED4  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 37973  006ED8  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 37974  006EDC  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 37975                           
 37976                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 37977  006EE0  0E00               	movlw	0
 37978  006EE2  0100               	movlb	0	; () banked
 37979  006EE4  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 37980  006EE6                     l18700:
 37981                           
 37982                           ; BSR set to: 0
 37983  006EE6  0E0F               	movlw	15
 37984  006EE8  65A6               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 37985  006EEA  D001               	goto	l2481
 37986  006EEC  D036               	goto	u21050
 37987  006EEE                     l2481:
 37988                           
 37989                           ; BSR set to: 0
 37990                           ;lorawan.c: 2216: {
 37991                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 37992                           
 37993                           ; BSR set to: 0
 37994  006EEE  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 37995  006EF0  0D01               	mullw	1
 37996  006EF2  50F3               	movf	prodl,w,c
 37997  006EF4  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 37998  006EF6  6ED9               	movwf	fsr2l,c
 37999  006EF8  50F4               	movf	prodh,w,c
 38000  006EFA  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 38001  006EFC  6EDA               	movwf	fsr2h,c
 38002  006EFE  0EF0               	movlw	240
 38003  006F00  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 38004  006F02  0EFF               	movlw	255
 38005  006F04  6FA0               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 38006  006F06  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 38007  006F08  6FA1               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 38008  006F0A  6BA2               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 38009  006F0C  3BA1               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38010  006F0E  3BA2               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38011  006F10  0EF0               	movlw	240
 38012  006F12  17A2               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38013  006F14  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 38014  006F16  0B0F               	andlw	15
 38015  006F18  13A2               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 38016  006F1A  0EF0               	movlw	240
 38017  006F1C  17A1               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38018  006F1E  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38019  006F20  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38020  006F22  0E00               	movlw	0
 38021  006F24  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 38022  006F26  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 38023  006F28  27A1               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 38024  006F2A  51A0               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 38025  006F2C  23A2               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 38026  006F2E  51A1               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 38027  006F30  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 38028  006F32  6EE9               	movwf	fsr0l,c
 38029  006F34  51A2               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 38030  006F36  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 38031  006F38  6EEA               	movwf	fsr0h,c
 38032  006F3A  50EF               	movf	indf0,w,c
 38033  006F3C  6FA3               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 38034  006F3E  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38035  006F40  0D01               	mullw	1
 38036  006F42  0EC8               	movlw	low _aesBuffer
 38037  006F44  24F3               	addwf	prodl,w,c
 38038  006F46  6EE9               	movwf	fsr0l,c
 38039  006F48  0E03               	movlw	high _aesBuffer
 38040  006F4A  20F4               	addwfc	prodh,w,c
 38041  006F4C  6EEA               	movwf	fsr0h,c
 38042  006F4E  50EF               	movf	indf0,w,c
 38043  006F50  19A3               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 38044  006F52  6EDF               	movwf	indf2,c
 38045                           
 38046                           ; BSR set to: 0
 38047  006F54  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 38048                           
 38049                           ; BSR set to: 0
 38050  006F56  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 38051  006F58  D7C6               	goto	l18700
 38052  006F5A                     u21050:
 38053                           
 38054                           ; BSR set to: 0
 38055                           
 38056                           ; BSR set to: 0
 38057  006F5A  2BA5               	incf	EncryptFRMPayload@i& (0+255),f,b
 38058  006F5C                     l2479:
 38059                           
 38060                           ; BSR set to: 0
 38061                           
 38062                           ; BSR set to: 0
 38063  006F5C  51A5               	movf	EncryptFRMPayload@i& (0+255),w,b
 38064  006F5E  5DA4               	subwf	EncryptFRMPayload@k& (0+255),w,b
 38065  006F60  B0D8               	btfsc	status,0,c
 38066  006F62  D7A2               	goto	l2480
 38067                           
 38068                           ; BSR set to: 0
 38069                           ;lorawan.c: 2218: }
 38070                           ;lorawan.c: 2219: }
 38071                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 38072                           
 38073                           ; BSR set to: 0
 38074  006F64  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 38075  006F68  0E0F               	movlw	15
 38076  006F6A  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 38077  006F6C  B4D8               	btfsc	status,2,c
 38078  006F6E  0012               	return	
 38079                           
 38080                           ; BSR set to: 0
 38081                           ;lorawan.c: 2222: {
 38082                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 38083  006F70  C095  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 38084  006F74  C096  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 38085  006F78  C097  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 38086  006F7C  C098  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 38087  006F80  C0A5  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 38088  006F84  0E01               	movlw	1
 38089  006F86  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 38090  006F88  C09E  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 38091  006F8C  5194               	movf	EncryptFRMPayload@dir& (0+255),w,b
 38092  006F8E  ECCF  F045         	call	_AssembleEncryptionBlock
 38093                           
 38094                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 38095  006F92  0EC8               	movlw	low _aesBuffer
 38096  006F94  0100               	movlb	0	; () banked
 38097  006F96  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 38098  006F98  0E03               	movlw	high _aesBuffer
 38099  006F9A  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 38100  006F9C  C099  F07F         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 38101  006FA0  C09A  F080         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 38102  006FA4  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 38103                           
 38104                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 38105  006FA8  0E00               	movlw	0
 38106  006FAA  0100               	movlb	0	; () banked
 38107  006FAC  6FA6               	movwf	EncryptFRMPayload@j& (0+255),b
 38108  006FAE  D023               	goto	l2485
 38109  006FB0                     
 38110                           ; BSR set to: 0
 38111                           ;lorawan.c: 2227: {
 38112                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 38113                           
 38114                           ; BSR set to: 0
 38115  006FB0  519B               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 38116  006FB2  0D01               	mullw	1
 38117  006FB4  50F3               	movf	prodl,w,c
 38118  006FB6  259C               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 38119  006FB8  6ED9               	movwf	fsr2l,c
 38120  006FBA  50F4               	movf	prodh,w,c
 38121  006FBC  219D               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 38122  006FBE  6EDA               	movwf	fsr2h,c
 38123  006FC0  51A4               	movf	EncryptFRMPayload@k& (0+255),w,b
 38124  006FC2  0D10               	mullw	16
 38125  006FC4  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38126  006FC6  26F3               	addwf	prodl,f,c
 38127  006FC8  0E00               	movlw	0
 38128  006FCA  22F4               	addwfc	prodh,f,c
 38129  006FCC  50F3               	movf	prodl,w,c
 38130  006FCE  2591               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 38131  006FD0  6EE9               	movwf	fsr0l,c
 38132  006FD2  50F4               	movf	prodh,w,c
 38133  006FD4  2192               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 38134  006FD6  6EEA               	movwf	fsr0h,c
 38135  006FD8  50EF               	movf	indf0,w,c
 38136  006FDA  6F9F               	movwf	??_EncryptFRMPayload& (0+255),b
 38137  006FDC  51A6               	movf	EncryptFRMPayload@j& (0+255),w,b
 38138  006FDE  0D01               	mullw	1
 38139  006FE0  0EC8               	movlw	low _aesBuffer
 38140  006FE2  24F3               	addwf	prodl,w,c
 38141  006FE4  6EE9               	movwf	fsr0l,c
 38142  006FE6  0E03               	movlw	high _aesBuffer
 38143  006FE8  20F4               	addwfc	prodh,w,c
 38144  006FEA  6EEA               	movwf	fsr0h,c
 38145  006FEC  50EF               	movf	indf0,w,c
 38146  006FEE  199F               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 38147  006FF0  6EDF               	movwf	indf2,c
 38148                           
 38149                           ; BSR set to: 0
 38150  006FF2  2B9B               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 38151                           
 38152                           ; BSR set to: 0
 38153  006FF4  2BA6               	incf	EncryptFRMPayload@j& (0+255),f,b
 38154  006FF6                     l2485:
 38155                           
 38156                           ; BSR set to: 0
 38157                           
 38158                           ; BSR set to: 0
 38159  006FF6  C093  F09F         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 38160  006FFA  0E0F               	movlw	15
 38161  006FFC  179F               	andwf	??_EncryptFRMPayload& (0+255),f,b
 38162  006FFE  519F               	movf	??_EncryptFRMPayload& (0+255),w,b
 38163  007000  5DA6               	subwf	EncryptFRMPayload@j& (0+255),w,b
 38164  007002  B0D8               	btfsc	status,0,c
 38165  007004  0012               	return	
 38166  007006  D7D4               	goto	l2486
 38167  007008                     __end_of_EncryptFRMPayload:
 38168                           	opt stack 0
 38169                           tosu	equ	0xFFF
 38170                           tosh	equ	0xFFE
 38171                           tosl	equ	0xFFD
 38172                           pclath	equ	0xFFA
 38173                           tblptru	equ	0xFF8
 38174                           tblptrh	equ	0xFF7
 38175                           tblptrl	equ	0xFF6
 38176                           tablat	equ	0xFF5
 38177                           prodh	equ	0xFF4
 38178                           prodl	equ	0xFF3
 38179                           intcon	equ	0xFF2
 38180                           intcon2	equ	0xFF1
 38181                           intcon3	equ	0xFF0
 38182                           indf0	equ	0xFEF
 38183                           postinc0	equ	0xFEE
 38184                           fsr0h	equ	0xFEA
 38185                           fsr0l	equ	0xFE9
 38186                           wreg	equ	0xFE8
 38187                           postinc1	equ	0xFE6
 38188                           postdec1	equ	0xFE5
 38189                           plusw1	equ	0xFE3
 38190                           fsr1h	equ	0xFE2
 38191                           fsr1l	equ	0xFE1
 38192                           indf2	equ	0xFDF
 38193                           postinc2	equ	0xFDE
 38194                           postdec2	equ	0xFDD
 38195                           plusw2	equ	0xFDB
 38196                           fsr2h	equ	0xFDA
 38197                           fsr2l	equ	0xFD9
 38198                           status	equ	0xFD8
 38199                           
 38200 ;; *************** function ___awdiv *****************
 38201 ;; Defined at:
 38202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 38203 ;; Parameters:    Size  Location     Type
 38204 ;;  dividend        2    6[BANK0 ] int 
 38205 ;;  divisor         2    8[BANK0 ] int 
 38206 ;; Auto vars:     Size  Location     Type
 38207 ;;  quotient        2   12[BANK0 ] int 
 38208 ;;  sign            1   11[BANK0 ] unsigned char 
 38209 ;;  counter         1   10[BANK0 ] unsigned char 
 38210 ;; Return value:  Size  Location     Type
 38211 ;;                  2    6[BANK0 ] int 
 38212 ;; Registers used:
 38213 ;;		wreg, status,2, status,0
 38214 ;; Tracked objects:
 38215 ;;		On entry : 0/0
 38216 ;;		On exit  : 0/0
 38217 ;;		Unchanged: 0/0
 38218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38222 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38223 ;;Total ram usage:        8 bytes
 38224 ;; Hardware stack levels used:    1
 38225 ;; Hardware stack levels required when called:    7
 38226 ;; This function calls:
 38227 ;;		Nothing
 38228 ;; This function is called by:
 38229 ;;		_EncryptFRMPayload
 38230 ;;		_fround
 38231 ;;		_scale
 38232 ;;		_printf
 38233 ;; This function uses a non-reentrant model
 38234 ;;
 38235                           
 38236                           	psect	text208
 38237  00A050                     __ptext208:
 38238                           	opt stack 0
 38239  00A050                     ___awdiv:
 38240                           	opt stack 21
 38241                           
 38242                           ; BSR set to: 0
 38243                           ;incstack = 0
 38244  00A050  0E00               	movlw	0
 38245  00A052  0100               	movlb	0	; () banked
 38246  00A054  6F6B               	movwf	___awdiv@sign& (0+255),b
 38247                           
 38248                           ; BSR set to: 0
 38249  00A056  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38250  00A058  D006               	goto	l3713
 38251                           
 38252                           ; BSR set to: 0
 38253  00A05A  6D68               	negf	___awdiv@divisor& (0+255),b
 38254  00A05C  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 38255  00A05E  B0D8               	btfsc	status,0,c
 38256  00A060  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 38257                           
 38258                           ; BSR set to: 0
 38259  00A062  0E01               	movlw	1
 38260  00A064  6F6B               	movwf	___awdiv@sign& (0+255),b
 38261  00A066                     l3713:
 38262                           
 38263                           ; BSR set to: 0
 38264                           
 38265                           ; BSR set to: 0
 38266  00A066  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 38267  00A068  D006               	goto	l3714
 38268                           
 38269                           ; BSR set to: 0
 38270  00A06A  6D66               	negf	___awdiv@dividend& (0+255),b
 38271  00A06C  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 38272  00A06E  B0D8               	btfsc	status,0,c
 38273  00A070  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 38274                           
 38275                           ; BSR set to: 0
 38276  00A072  0E01               	movlw	1
 38277  00A074  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 38278  00A076                     l3714:
 38279                           
 38280                           ; BSR set to: 0
 38281                           
 38282                           ; BSR set to: 0
 38283  00A076  0E00               	movlw	0
 38284  00A078  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 38285  00A07A  0E00               	movlw	0
 38286  00A07C  6F6C               	movwf	___awdiv@quotient& (0+255),b
 38287                           
 38288                           ; BSR set to: 0
 38289  00A07E  5168               	movf	___awdiv@divisor& (0+255),w,b
 38290  00A080  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 38291  00A082  B4D8               	btfsc	status,2,c
 38292  00A084  D01C               	goto	l3721
 38293                           
 38294                           ; BSR set to: 0
 38295  00A086  0E01               	movlw	1
 38296  00A088  6F6A               	movwf	___awdiv@counter& (0+255),b
 38297  00A08A  D004               	goto	l3716
 38298  00A08C                     
 38299                           ; BSR set to: 0
 38300                           
 38301                           ; BSR set to: 0
 38302  00A08C  90D8               	bcf	status,0,c
 38303  00A08E  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 38304  00A090  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 38305  00A092  2B6A               	incf	___awdiv@counter& (0+255),f,b
 38306  00A094                     l3716:
 38307                           
 38308                           ; BSR set to: 0
 38309                           
 38310                           ; BSR set to: 0
 38311  00A094  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38312  00A096  D7FA               	goto	l3717
 38313  00A098                     u20180:
 38314                           
 38315                           ; BSR set to: 0
 38316                           
 38317                           ; BSR set to: 0
 38318                           
 38319                           ; BSR set to: 0
 38320  00A098  90D8               	bcf	status,0,c
 38321  00A09A  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 38322  00A09C  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 38323                           
 38324                           ; BSR set to: 0
 38325  00A09E  5168               	movf	___awdiv@divisor& (0+255),w,b
 38326  00A0A0  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 38327  00A0A2  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38328  00A0A4  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 38329  00A0A6  A0D8               	btfss	status,0,c
 38330  00A0A8  D005               	goto	l3720
 38331                           
 38332                           ; BSR set to: 0
 38333  00A0AA  5168               	movf	___awdiv@divisor& (0+255),w,b
 38334  00A0AC  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 38335  00A0AE  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38336  00A0B0  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 38337                           
 38338                           ; BSR set to: 0
 38339  00A0B2  816C               	bsf	___awdiv@quotient& (0+255),0,b
 38340  00A0B4                     l3720:
 38341                           
 38342                           ; BSR set to: 0
 38343                           
 38344                           ; BSR set to: 0
 38345  00A0B4  90D8               	bcf	status,0,c
 38346  00A0B6  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 38347  00A0B8  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 38348                           
 38349                           ; BSR set to: 0
 38350  00A0BA  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 38351  00A0BC  D7ED               	goto	u20180
 38352  00A0BE                     l3721:
 38353                           
 38354                           ; BSR set to: 0
 38355                           
 38356                           ; BSR set to: 0
 38357                           
 38358                           ; BSR set to: 0
 38359  00A0BE  516B               	movf	___awdiv@sign& (0+255),w,b
 38360  00A0C0  B4D8               	btfsc	status,2,c
 38361  00A0C2  D004               	goto	l3722
 38362                           
 38363                           ; BSR set to: 0
 38364  00A0C4  6D6C               	negf	___awdiv@quotient& (0+255),b
 38365  00A0C6  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 38366  00A0C8  B0D8               	btfsc	status,0,c
 38367  00A0CA  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 38368  00A0CC                     l3722:
 38369                           
 38370                           ; BSR set to: 0
 38371                           
 38372                           ; BSR set to: 0
 38373  00A0CC  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 38374  00A0D0  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 38375  00A0D4  0012               	return	
 38376  00A0D6                     __end_of___awdiv:
 38377                           	opt stack 0
 38378                           tosu	equ	0xFFF
 38379                           tosh	equ	0xFFE
 38380                           tosl	equ	0xFFD
 38381                           pclath	equ	0xFFA
 38382                           tblptru	equ	0xFF8
 38383                           tblptrh	equ	0xFF7
 38384                           tblptrl	equ	0xFF6
 38385                           tablat	equ	0xFF5
 38386                           prodh	equ	0xFF4
 38387                           prodl	equ	0xFF3
 38388                           intcon	equ	0xFF2
 38389                           intcon2	equ	0xFF1
 38390                           intcon3	equ	0xFF0
 38391                           indf0	equ	0xFEF
 38392                           postinc0	equ	0xFEE
 38393                           fsr0h	equ	0xFEA
 38394                           fsr0l	equ	0xFE9
 38395                           wreg	equ	0xFE8
 38396                           postinc1	equ	0xFE6
 38397                           postdec1	equ	0xFE5
 38398                           plusw1	equ	0xFE3
 38399                           fsr1h	equ	0xFE2
 38400                           fsr1l	equ	0xFE1
 38401                           indf2	equ	0xFDF
 38402                           postinc2	equ	0xFDE
 38403                           postdec2	equ	0xFDD
 38404                           plusw2	equ	0xFDB
 38405                           fsr2h	equ	0xFDA
 38406                           fsr2l	equ	0xFD9
 38407                           status	equ	0xFD8
 38408                           
 38409 ;; *************** function _AssembleEncryptionBlock *****************
 38410 ;; Defined at:
 38411 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38412 ;; Parameters:    Size  Location     Type
 38413 ;;  dir             1    wreg     unsigned char 
 38414 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 38415 ;;  blockId         1   15[BANK0 ] unsigned char 
 38416 ;;  firstByte       1   16[BANK0 ] unsigned char 
 38417 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 38418 ;; Auto vars:     Size  Location     Type
 38419 ;;  dir             1   18[BANK0 ] unsigned char 
 38420 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 38421 ;; Return value:  Size  Location     Type
 38422 ;;                  1    wreg      void 
 38423 ;; Registers used:
 38424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38425 ;; Tracked objects:
 38426 ;;		On entry : 0/0
 38427 ;;		On exit  : 0/0
 38428 ;;		Unchanged: 0/0
 38429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38430 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38433 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38434 ;;Total ram usage:        9 bytes
 38435 ;; Hardware stack levels used:    1
 38436 ;; Hardware stack levels required when called:    8
 38437 ;; This function calls:
 38438 ;;		_memcpy
 38439 ;;		_memset
 38440 ;; This function is called by:
 38441 ;;		_LORAWAN_RxDone
 38442 ;;		_AssemblePacket
 38443 ;;		_EncryptFRMPayload
 38444 ;; This function uses a non-reentrant model
 38445 ;;
 38446                           
 38447                           	psect	text209
 38448  008B9E                     __ptext209:
 38449                           	opt stack 0
 38450  008B9E                     _AssembleEncryptionBlock:
 38451                           	opt stack 19
 38452                           
 38453                           ; BSR set to: 0
 38454                           ;incstack = 0
 38455                           ;AssembleEncryptionBlock@dir stored from wreg
 38456  008B9E  0100               	movlb	0	; () banked
 38457  008BA0  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 38458                           
 38459                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 38460  008BA2  0E00               	movlw	0
 38461  008BA4  0100               	movlb	0	; () banked
 38462  008BA6  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38463                           
 38464                           ; BSR set to: 0
 38465                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 38466  008BA8  0EC8               	movlw	low _aesBuffer
 38467  008BAA  6F60               	movwf	memset@p1& (0+255),b
 38468  008BAC  0E03               	movlw	high _aesBuffer
 38469  008BAE  6F61               	movwf	(memset@p1+1)& (0+255),b
 38470  008BB0  0E00               	movlw	0
 38471  008BB2  6F63               	movwf	(memset@c+1)& (0+255),b
 38472  008BB4  0E00               	movlw	0
 38473  008BB6  6F62               	movwf	memset@c& (0+255),b
 38474  008BB8  0E00               	movlw	0
 38475  008BBA  6F65               	movwf	(memset@n+1)& (0+255),b
 38476  008BBC  0E10               	movlw	16
 38477  008BBE  6F64               	movwf	memset@n& (0+255),b
 38478  008BC0  EC1F  F05D         	call	_memset	;wreg free
 38479                           
 38480                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 38481  008BC4  0100               	movlb	0	; () banked
 38482  008BC6  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38483  008BC8  0D01               	mullw	1
 38484  008BCA  0EC8               	movlw	low _aesBuffer
 38485  008BCC  24F3               	addwf	prodl,w,c
 38486  008BCE  6ED9               	movwf	fsr2l,c
 38487  008BD0  0E03               	movlw	high _aesBuffer
 38488  008BD2  20F4               	addwfc	prodh,w,c
 38489  008BD4  6EDA               	movwf	fsr2h,c
 38490  008BD6  C070  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 38491                           
 38492                           ; BSR set to: 0
 38493                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 38494  008BDA  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38495  008BDC  0F05               	addlw	5
 38496  008BDE  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38497                           
 38498                           ; BSR set to: 0
 38499                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 38500  008BE0  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38501  008BE2  0D01               	mullw	1
 38502  008BE4  0EC8               	movlw	low _aesBuffer
 38503  008BE6  24F3               	addwf	prodl,w,c
 38504  008BE8  6ED9               	movwf	fsr2l,c
 38505  008BEA  0E03               	movlw	high _aesBuffer
 38506  008BEC  20F4               	addwfc	prodh,w,c
 38507  008BEE  6EDA               	movwf	fsr2h,c
 38508  008BF0  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 38509                           
 38510                           ; BSR set to: 0
 38511  008BF4  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;lorawan.c: 2168: if (0 == multicastStatus)
 38515  008BF6  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 38516  008BF8  A4D8               	btfss	status,2,c
 38517  008BFA  D013               	goto	l2468
 38518                           
 38519                           ; BSR set to: 0
 38520                           ;lorawan.c: 2169: {
 38521                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 38522  008BFC  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38523  008BFE  0D01               	mullw	1
 38524  008C00  0EC8               	movlw	low _aesBuffer
 38525  008C02  24F3               	addwf	prodl,w,c
 38526  008C04  6F60               	movwf	memcpy@d1& (0+255),b
 38527  008C06  0E03               	movlw	high _aesBuffer
 38528  008C08  20F4               	addwfc	prodh,w,c
 38529  008C0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38530  008C0C  0E22               	movlw	low (_loRa+30)
 38531  008C0E  6F62               	movwf	memcpy@s1& (0+255),b
 38532  008C10  0E02               	movlw	high (_loRa+30)
 38533  008C12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38534  008C14  0E00               	movlw	0
 38535  008C16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38536  008C18  0E04               	movlw	4
 38537  008C1A  6F64               	movwf	memcpy@n& (0+255),b
 38538  008C1C  ECA9  F055         	call	_memcpy	;wreg free
 38539  008C20  D012               	goto	l18166
 38540  008C22                     l2468:
 38541                           
 38542                           ; BSR set to: 0
 38543                           ;lorawan.c: 2173: else
 38544                           ;lorawan.c: 2174: {
 38545                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 38546                           
 38547                           ; BSR set to: 0
 38548  008C22  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38549  008C24  0D01               	mullw	1
 38550  008C26  0EC8               	movlw	low _aesBuffer
 38551  008C28  24F3               	addwf	prodl,w,c
 38552  008C2A  6F60               	movwf	memcpy@d1& (0+255),b
 38553  008C2C  0E03               	movlw	high _aesBuffer
 38554  008C2E  20F4               	addwfc	prodh,w,c
 38555  008C30  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38556  008C32  0E66               	movlw	low (_loRa+98)
 38557  008C34  6F62               	movwf	memcpy@s1& (0+255),b
 38558  008C36  0E02               	movlw	high (_loRa+98)
 38559  008C38  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38560  008C3A  0E00               	movlw	0
 38561  008C3C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38562  008C3E  0E04               	movlw	4
 38563  008C40  6F64               	movwf	memcpy@n& (0+255),b
 38564  008C42  ECA9  F055         	call	_memcpy	;wreg free
 38565  008C46                     l18166:
 38566                           
 38567                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 38568  008C46  0100               	movlb	0	; () banked
 38569  008C48  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38570  008C4A  0F04               	addlw	4
 38571  008C4C  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38572                           
 38573                           ; BSR set to: 0
 38574                           ;lorawan.c: 2177: }
 38575                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 38576                           
 38577                           ; BSR set to: 0
 38578  008C4E  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38579  008C50  0D01               	mullw	1
 38580  008C52  0EC8               	movlw	low _aesBuffer
 38581  008C54  24F3               	addwf	prodl,w,c
 38582  008C56  6F60               	movwf	memcpy@d1& (0+255),b
 38583  008C58  0E03               	movlw	high _aesBuffer
 38584  008C5A  20F4               	addwfc	prodh,w,c
 38585  008C5C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38586  008C5E  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 38587  008C60  6F62               	movwf	memcpy@s1& (0+255),b
 38588  008C62  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 38589  008C64  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38590  008C66  0E00               	movlw	0
 38591  008C68  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38592  008C6A  0E04               	movlw	4
 38593  008C6C  6F64               	movwf	memcpy@n& (0+255),b
 38594  008C6E  ECA9  F055         	call	_memcpy	;wreg free
 38595                           
 38596                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 38597  008C72  0100               	movlb	0	; () banked
 38598  008C74  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38599  008C76  0F04               	addlw	4
 38600  008C78  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 38601                           
 38602                           ; BSR set to: 0
 38603                           ;lorawan.c: 2182: bufferIndex ++;
 38604  008C7A  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 38605                           
 38606                           ; BSR set to: 0
 38607                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 38608  008C7C  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 38609  008C7E  0D01               	mullw	1
 38610  008C80  0EC8               	movlw	low _aesBuffer
 38611  008C82  24F3               	addwf	prodl,w,c
 38612  008C84  6ED9               	movwf	fsr2l,c
 38613  008C86  0E03               	movlw	high _aesBuffer
 38614  008C88  20F4               	addwfc	prodh,w,c
 38615  008C8A  6EDA               	movwf	fsr2h,c
 38616  008C8C  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 38617                           
 38618                           ; BSR set to: 0
 38619  008C90  0012               	return		;funcret
 38620  008C92                     __end_of_AssembleEncryptionBlock:
 38621                           	opt stack 0
 38622                           tosu	equ	0xFFF
 38623                           tosh	equ	0xFFE
 38624                           tosl	equ	0xFFD
 38625                           pclath	equ	0xFFA
 38626                           tblptru	equ	0xFF8
 38627                           tblptrh	equ	0xFF7
 38628                           tblptrl	equ	0xFF6
 38629                           tablat	equ	0xFF5
 38630                           prodh	equ	0xFF4
 38631                           prodl	equ	0xFF3
 38632                           intcon	equ	0xFF2
 38633                           intcon2	equ	0xFF1
 38634                           intcon3	equ	0xFF0
 38635                           indf0	equ	0xFEF
 38636                           postinc0	equ	0xFEE
 38637                           fsr0h	equ	0xFEA
 38638                           fsr0l	equ	0xFE9
 38639                           wreg	equ	0xFE8
 38640                           postinc1	equ	0xFE6
 38641                           postdec1	equ	0xFE5
 38642                           plusw1	equ	0xFE3
 38643                           fsr1h	equ	0xFE2
 38644                           fsr1l	equ	0xFE1
 38645                           indf2	equ	0xFDF
 38646                           postinc2	equ	0xFDE
 38647                           postdec2	equ	0xFDD
 38648                           plusw2	equ	0xFDB
 38649                           fsr2h	equ	0xFDA
 38650                           fsr2l	equ	0xFD9
 38651                           status	equ	0xFD8
 38652                           
 38653 ;; *************** function _CountfOptsLength *****************
 38654 ;; Defined at:
 38655 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38656 ;; Parameters:    Size  Location     Type
 38657 ;;		None
 38658 ;; Auto vars:     Size  Location     Type
 38659 ;;  i               1    7[BANK0 ] unsigned char 
 38660 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 38661 ;; Return value:  Size  Location     Type
 38662 ;;                  1    wreg      unsigned char 
 38663 ;; Registers used:
 38664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 38665 ;; Tracked objects:
 38666 ;;		On entry : 0/0
 38667 ;;		On exit  : 0/0
 38668 ;;		Unchanged: 0/0
 38669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38671 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38672 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38673 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38674 ;;Total ram usage:        8 bytes
 38675 ;; Hardware stack levels used:    1
 38676 ;; Hardware stack levels required when called:    7
 38677 ;; This function calls:
 38678 ;;		Nothing
 38679 ;; This function is called by:
 38680 ;;		_LORAWAN_GetMaxPayloadSize
 38681 ;;		_AssemblePacket
 38682 ;; This function uses a non-reentrant model
 38683 ;;
 38684                           
 38685                           	psect	text210
 38686  00948A                     __ptext210:
 38687                           	opt stack 0
 38688  00948A                     _CountfOptsLength:
 38689                           	opt stack 21
 38690                           
 38691                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 38692                           
 38693                           ; BSR set to: 0
 38694                           ;incstack = 0
 38695  00948A  0E00               	movlw	0
 38696  00948C  0100               	movlb	0	; () banked
 38697  00948E  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 38698                           
 38699                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 38700  009490  0E00               	movlw	0
 38701  009492  6F67               	movwf	CountfOptsLength@i& (0+255),b
 38702  009494  D057               	goto	l2459
 38703  009496                     
 38704                           ; BSR set to: 0
 38705                           ;lorawan.c: 2139: {
 38706                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 38707                           
 38708                           ; BSR set to: 0
 38709  009496  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38710  009498  0D02               	mullw	2
 38711  00949A  0EAC               	movlw	low (_loRa+168)
 38712  00949C  24F3               	addwf	prodl,w,c
 38713  00949E  6ED9               	movwf	fsr2l,c
 38714  0094A0  0E02               	movlw	high (_loRa+168)
 38715  0094A2  20F4               	addwfc	prodh,w,c
 38716  0094A4  6EDA               	movwf	fsr2h,c
 38717  0094A6  28DE               	incf	postinc2,w,c
 38718  0094A8  B4D8               	btfsc	status,2,c
 38719  0094AA  D04B               	goto	l2463
 38720                           
 38721                           ; BSR set to: 0
 38722                           ;lorawan.c: 2141: {
 38723                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 38724  0094AC  0EFE               	movlw	254
 38725  0094AE  6F60               	movwf	??_CountfOptsLength& (0+255),b
 38726  0094B0  0EFF               	movlw	255
 38727  0094B2  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 38728  0094B4  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38729  0094B6  0D02               	mullw	2
 38730  0094B8  0EAC               	movlw	low (_loRa+168)
 38731  0094BA  24F3               	addwf	prodl,w,c
 38732  0094BC  6ED9               	movwf	fsr2l,c
 38733  0094BE  0E02               	movlw	high (_loRa+168)
 38734  0094C0  20F4               	addwfc	prodh,w,c
 38735  0094C2  6EDA               	movwf	fsr2h,c
 38736  0094C4  50DF               	movf	indf2,w,c
 38737  0094C6  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 38738  0094C8  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 38739  0094CA  5160               	movf	??_CountfOptsLength& (0+255),w,b
 38740  0094CC  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 38741  0094CE  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 38742  0094D0  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 38743  0094D2  0EF5               	movlw	low _macEndDevCmdReplyLen
 38744  0094D4  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 38745  0094D6  6EF6               	movwf	tblptrl,c
 38746  0094D8  0EFE               	movlw	high _macEndDevCmdReplyLen
 38747  0094DA  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 38748  0094DC  6EF7               	movwf	tblptrh,c
 38749  0094DE                     	if	1	;There are 3 active tblptr bytes
 38750  0094DE  6AF8               	clrf	tblptru,c
 38751  0094E0  0E00               	movlw	low (__mediumconst shr (0+16))
 38752  0094E2  22F8               	addwfc	tblptru,f,c
 38753  0094E4                     	endif
 38754  0094E4  0008               	tblrd		*
 38755  0094E6  50F5               	movf	tablat,w,c
 38756  0094E8  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 38757  0094EC  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 38758  0094EE  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 38759  0094F0  0E00               	movlw	0
 38760  0094F2  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 38761  0094F4  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 38762  0094F6  D006               	goto	u21100
 38763  0094F8  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 38764  0094FA  E12A               	bnz	l18742
 38765  0094FC  0E10               	movlw	16
 38766  0094FE  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 38767  009500  B0D8               	btfsc	status,0,c
 38768  009502  D026               	goto	u21110
 38769  009504                     u21100:
 38770                           
 38771                           ; BSR set to: 0
 38772                           ;lorawan.c: 2143: {
 38773                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 38774  009504  0EFE               	movlw	254
 38775  009506  6F60               	movwf	??_CountfOptsLength& (0+255),b
 38776  009508  0EFF               	movlw	255
 38777  00950A  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 38778  00950C  5167               	movf	CountfOptsLength@i& (0+255),w,b
 38779  00950E  0D02               	mullw	2
 38780  009510  0EAC               	movlw	low (_loRa+168)
 38781  009512  24F3               	addwf	prodl,w,c
 38782  009514  6ED9               	movwf	fsr2l,c
 38783  009516  0E02               	movlw	high (_loRa+168)
 38784  009518  20F4               	addwfc	prodh,w,c
 38785  00951A  6EDA               	movwf	fsr2h,c
 38786  00951C  50DF               	movf	indf2,w,c
 38787  00951E  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 38788  009520  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 38789  009522  5160               	movf	??_CountfOptsLength& (0+255),w,b
 38790  009524  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 38791  009526  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 38792  009528  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 38793  00952A  0EF5               	movlw	low _macEndDevCmdReplyLen
 38794  00952C  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 38795  00952E  6EF6               	movwf	tblptrl,c
 38796  009530  0EFE               	movlw	high _macEndDevCmdReplyLen
 38797  009532  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 38798  009534  6EF7               	movwf	tblptrh,c
 38799  009536                     	if	1	;There are 3 active tblptr bytes
 38800  009536  6AF8               	clrf	tblptru,c
 38801  009538  0E00               	movlw	low (__mediumconst shr (0+16))
 38802  00953A  22F8               	addwfc	tblptru,f,c
 38803  00953C                     	endif
 38804  00953C  0008               	tblrd		*
 38805  00953E  50F5               	movf	tablat,w,c
 38806  009540  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 38807  009542                     l2463:
 38808                           
 38809                           ; BSR set to: 0
 38810                           
 38811                           ; BSR set to: 0
 38812                           
 38813                           ; BSR set to: 0
 38814  009542  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 38815  009544                     l2459:
 38816                           
 38817                           ; BSR set to: 0
 38818                           
 38819                           ; BSR set to: 0
 38820  009544  0102               	movlb	2	; () banked
 38821  009546  51AB               	movf	(_loRa+167)& (0+255),w,b
 38822  009548  0100               	movlb	0	; () banked
 38823  00954A  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 38824  00954C  A0D8               	btfss	status,0,c
 38825  00954E  D7A3               	goto	l2460
 38826  009550                     u21110:
 38827  009550                     l18742:
 38828                           
 38829                           ; BSR set to: 0
 38830                           ;lorawan.c: 2149: }
 38831                           ;lorawan.c: 2150: }
 38832                           ;lorawan.c: 2151: }
 38833                           ;lorawan.c: 2153: return macCommandLength;
 38834  009550  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 38835  009552  0012               	return	
 38836  009554                     __end_of_CountfOptsLength:
 38837                           	opt stack 0
 38838                           tosu	equ	0xFFF
 38839                           tosh	equ	0xFFE
 38840                           tosl	equ	0xFFD
 38841                           pclath	equ	0xFFA
 38842                           tblptru	equ	0xFF8
 38843                           tblptrh	equ	0xFF7
 38844                           tblptrl	equ	0xFF6
 38845                           tablat	equ	0xFF5
 38846                           prodh	equ	0xFF4
 38847                           prodl	equ	0xFF3
 38848                           intcon	equ	0xFF2
 38849                           intcon2	equ	0xFF1
 38850                           intcon3	equ	0xFF0
 38851                           indf0	equ	0xFEF
 38852                           postinc0	equ	0xFEE
 38853                           fsr0h	equ	0xFEA
 38854                           fsr0l	equ	0xFE9
 38855                           wreg	equ	0xFE8
 38856                           postinc1	equ	0xFE6
 38857                           postdec1	equ	0xFE5
 38858                           plusw1	equ	0xFE3
 38859                           fsr1h	equ	0xFE2
 38860                           fsr1l	equ	0xFE1
 38861                           indf2	equ	0xFDF
 38862                           postinc2	equ	0xFDE
 38863                           postdec2	equ	0xFDD
 38864                           plusw2	equ	0xFDB
 38865                           fsr2h	equ	0xFDA
 38866                           fsr2l	equ	0xFD9
 38867                           status	equ	0xFD8
 38868                           
 38869 ;; *************** function _ExtractMic *****************
 38870 ;; Defined at:
 38871 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38872 ;; Parameters:    Size  Location     Type
 38873 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 38874 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 38875 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 38876 ;; Auto vars:     Size  Location     Type
 38877 ;;  mic             4   19[BANK0 ] unsigned long 
 38878 ;; Return value:  Size  Location     Type
 38879 ;;                  4   11[BANK0 ] unsigned long 
 38880 ;; Registers used:
 38881 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38882 ;; Tracked objects:
 38883 ;;		On entry : 0/0
 38884 ;;		On exit  : 0/0
 38885 ;;		Unchanged: 0/0
 38886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38888 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38890 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38891 ;;Total ram usage:       12 bytes
 38892 ;; Hardware stack levels used:    1
 38893 ;; Hardware stack levels required when called:    8
 38894 ;; This function calls:
 38895 ;;		_memcpy
 38896 ;; This function is called by:
 38897 ;;		_LORAWAN_RxDone
 38898 ;; This function uses a non-reentrant model
 38899 ;;
 38900                           
 38901                           	psect	text211
 38902  00ADDC                     __ptext211:
 38903                           	opt stack 0
 38904  00ADDC                     _ExtractMic:
 38905                           	opt stack 18
 38906                           
 38907                           ;lorawan.c: 2189: uint32_t mic = 0;
 38908                           
 38909                           ; BSR set to: 0
 38910                           ;incstack = 0
 38911  00ADDC  0E00               	movlw	0
 38912  00ADDE  0100               	movlb	0	; () banked
 38913  00ADE0  6F73               	movwf	ExtractMic@mic& (0+255),b
 38914  00ADE2  0E00               	movlw	0
 38915  00ADE4  6F74               	movwf	(ExtractMic@mic+1)& (0+255),b
 38916  00ADE6  0E00               	movlw	0
 38917  00ADE8  6F75               	movwf	(ExtractMic@mic+2)& (0+255),b
 38918  00ADEA  0E00               	movlw	0
 38919  00ADEC  6F76               	movwf	(ExtractMic@mic+3)& (0+255),b
 38920                           
 38921                           ; BSR set to: 0
 38922                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 38923  00ADEE  0E73               	movlw	low ExtractMic@mic
 38924  00ADF0  6F60               	movwf	memcpy@d1& (0+255),b
 38925  00ADF2  0E00               	movlw	high ExtractMic@mic
 38926  00ADF4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38927  00ADF6  0EFC               	movlw	252
 38928  00ADF8  6F6F               	movwf	??_ExtractMic& (0+255),b
 38929  00ADFA  0EFF               	movlw	255
 38930  00ADFC  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 38931  00ADFE  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 38932  00AE00  6F71               	movwf	(??_ExtractMic+2)& (0+255),b
 38933  00AE02  6B72               	clrf	(??_ExtractMic+3)& (0+255),b
 38934  00AE04  516F               	movf	??_ExtractMic& (0+255),w,b
 38935  00AE06  2771               	addwf	(??_ExtractMic+2)& (0+255),f,b
 38936  00AE08  5170               	movf	(??_ExtractMic+1)& (0+255),w,b
 38937  00AE0A  2372               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 38938  00AE0C  5171               	movf	(??_ExtractMic+2)& (0+255),w,b
 38939  00AE0E  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 38940  00AE10  6F62               	movwf	memcpy@s1& (0+255),b
 38941  00AE12  5172               	movf	(??_ExtractMic+3)& (0+255),w,b
 38942  00AE14  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 38943  00AE16  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38944  00AE18  0E00               	movlw	0
 38945  00AE1A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38946  00AE1C  0E04               	movlw	4
 38947  00AE1E  6F64               	movwf	memcpy@n& (0+255),b
 38948  00AE20  ECA9  F055         	call	_memcpy	;wreg free
 38949                           
 38950                           ;lorawan.c: 2191: return mic;
 38951  00AE24  C073  F06B         	movff	ExtractMic@mic,?_ExtractMic
 38952  00AE28  C074  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 38953  00AE2C  C075  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 38954  00AE30  C076  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 38955  00AE34  0012               	return	
 38956  00AE36                     __end_of_ExtractMic:
 38957                           	opt stack 0
 38958                           tosu	equ	0xFFF
 38959                           tosh	equ	0xFFE
 38960                           tosl	equ	0xFFD
 38961                           pclath	equ	0xFFA
 38962                           tblptru	equ	0xFF8
 38963                           tblptrh	equ	0xFF7
 38964                           tblptrl	equ	0xFF6
 38965                           tablat	equ	0xFF5
 38966                           prodh	equ	0xFF4
 38967                           prodl	equ	0xFF3
 38968                           intcon	equ	0xFF2
 38969                           intcon2	equ	0xFF1
 38970                           intcon3	equ	0xFF0
 38971                           indf0	equ	0xFEF
 38972                           postinc0	equ	0xFEE
 38973                           fsr0h	equ	0xFEA
 38974                           fsr0l	equ	0xFE9
 38975                           wreg	equ	0xFE8
 38976                           postinc1	equ	0xFE6
 38977                           postdec1	equ	0xFE5
 38978                           plusw1	equ	0xFE3
 38979                           fsr1h	equ	0xFE2
 38980                           fsr1l	equ	0xFE1
 38981                           indf2	equ	0xFDF
 38982                           postinc2	equ	0xFDE
 38983                           postdec2	equ	0xFDD
 38984                           plusw2	equ	0xFDB
 38985                           fsr2h	equ	0xFDA
 38986                           fsr2l	equ	0xFD9
 38987                           status	equ	0xFD8
 38988                           
 38989 ;; *************** function _ComputeSessionKeys *****************
 38990 ;; Defined at:
 38991 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38992 ;; Parameters:    Size  Location     Type
 38993 ;;  joinAcceptBu    2   49[BANK0 ] PTR struct .
 38994 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 38995 ;; Auto vars:     Size  Location     Type
 38996 ;;		None
 38997 ;; Return value:  Size  Location     Type
 38998 ;;                  1    wreg      void 
 38999 ;; Registers used:
 39000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39001 ;; Tracked objects:
 39002 ;;		On entry : 0/0
 39003 ;;		On exit  : 0/0
 39004 ;;		Unchanged: 0/0
 39005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39010 ;;Total ram usage:        2 bytes
 39011 ;; Hardware stack levels used:    1
 39012 ;; Hardware stack levels required when called:   10
 39013 ;; This function calls:
 39014 ;;		_AESEncodeLoRa
 39015 ;;		_PrepareSessionKeys
 39016 ;; This function is called by:
 39017 ;;		_LORAWAN_RxDone
 39018 ;; This function uses a non-reentrant model
 39019 ;;
 39020                           
 39021                           	psect	text212
 39022  00A0D6                     __ptext212:
 39023                           	opt stack 0
 39024  00A0D6                     _ComputeSessionKeys:
 39025                           	opt stack 16
 39026                           
 39027                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 39028                           
 39029                           ;incstack = 0
 39030  00A0D6  0E36               	movlw	low (_loRa+50)
 39031  00A0D8  0100               	movlb	0	; () banked
 39032  00A0DA  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 39033  00A0DC  0E02               	movlw	high (_loRa+50)
 39034  00A0DE  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 39035  00A0E0  0E01               	movlw	1
 39036  00A0E2  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39037  00A0E4  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 39038  00A0E6  0E00               	movlw	0
 39039  00A0E8  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39040  00A0EA  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 39041  00A0EC  0E04               	movlw	4
 39042  00A0EE  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39043  00A0F0  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 39044  00A0F2  0E00               	movlw	0
 39045  00A0F4  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39046  00A0F6  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 39047  00A0F8  ECB8  F04B         	call	_PrepareSessionKeys	;wreg free
 39048                           
 39049                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 39050  00A0FC  0E02               	movlw	2
 39051  00A0FE  0102               	movlb	2	; () banked
 39052  00A100  6F36               	movwf	(_loRa+50)& (0+255),b
 39053                           
 39054                           ; BSR set to: 2
 39055                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 39056  00A102  0E36               	movlw	low (_loRa+50)
 39057  00A104  0100               	movlb	0	; () banked
 39058  00A106  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 39059  00A108  0E02               	movlw	high (_loRa+50)
 39060  00A10A  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 39061  00A10C  0E46               	movlw	low (_loRa+66)
 39062  00A10E  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 39063  00A110  0E02               	movlw	high (_loRa+66)
 39064  00A112  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 39065  00A114  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 39066                           
 39067                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 39068  00A118  0E26               	movlw	low (_loRa+34)
 39069  00A11A  0100               	movlb	0	; () banked
 39070  00A11C  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 39071  00A11E  0E02               	movlw	high (_loRa+34)
 39072  00A120  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 39073  00A122  0E01               	movlw	1
 39074  00A124  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39075  00A126  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 39076  00A128  0E00               	movlw	0
 39077  00A12A  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39078  00A12C  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 39079  00A12E  0E04               	movlw	4
 39080  00A130  2591               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 39081  00A132  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 39082  00A134  0E00               	movlw	0
 39083  00A136  2192               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 39084  00A138  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 39085  00A13A  ECB8  F04B         	call	_PrepareSessionKeys	;wreg free
 39086                           
 39087                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 39088  00A13E  0E01               	movlw	1
 39089  00A140  0102               	movlb	2	; () banked
 39090  00A142  6F26               	movwf	(_loRa+34)& (0+255),b
 39091                           
 39092                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 39093  00A144  0E26               	movlw	low (_loRa+34)
 39094  00A146  0100               	movlb	0	; () banked
 39095  00A148  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 39096  00A14A  0E02               	movlw	high (_loRa+34)
 39097  00A14C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 39098  00A14E  0E46               	movlw	low (_loRa+66)
 39099  00A150  6F7F               	movwf	AESEncodeLoRa@key& (0+255),b
 39100  00A152  0E02               	movlw	high (_loRa+66)
 39101  00A154  6F80               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 39102  00A156  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 39103  00A15A  0012               	return		;funcret
 39104  00A15C                     __end_of_ComputeSessionKeys:
 39105                           	opt stack 0
 39106                           tosu	equ	0xFFF
 39107                           tosh	equ	0xFFE
 39108                           tosl	equ	0xFFD
 39109                           pclath	equ	0xFFA
 39110                           tblptru	equ	0xFF8
 39111                           tblptrh	equ	0xFF7
 39112                           tblptrl	equ	0xFF6
 39113                           tablat	equ	0xFF5
 39114                           prodh	equ	0xFF4
 39115                           prodl	equ	0xFF3
 39116                           intcon	equ	0xFF2
 39117                           intcon2	equ	0xFF1
 39118                           intcon3	equ	0xFF0
 39119                           indf0	equ	0xFEF
 39120                           postinc0	equ	0xFEE
 39121                           fsr0h	equ	0xFEA
 39122                           fsr0l	equ	0xFE9
 39123                           wreg	equ	0xFE8
 39124                           postinc1	equ	0xFE6
 39125                           postdec1	equ	0xFE5
 39126                           plusw1	equ	0xFE3
 39127                           fsr1h	equ	0xFE2
 39128                           fsr1l	equ	0xFE1
 39129                           indf2	equ	0xFDF
 39130                           postinc2	equ	0xFDE
 39131                           postdec2	equ	0xFDD
 39132                           plusw2	equ	0xFDB
 39133                           fsr2h	equ	0xFDA
 39134                           fsr2l	equ	0xFD9
 39135                           status	equ	0xFD8
 39136                           
 39137 ;; *************** function _PrepareSessionKeys *****************
 39138 ;; Defined at:
 39139 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39140 ;; Parameters:    Size  Location     Type
 39141 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 39142 ;;		 -> loRa.activationParameters(105), loRa(245), 
 39143 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 39144 ;;		 -> sp__ADC_GetConversion(2), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39145 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 39146 ;;		 -> sp__ADC_GetConversion(2), ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39147 ;; Auto vars:     Size  Location     Type
 39148 ;;  index           1   17[BANK0 ] unsigned char 
 39149 ;; Return value:  Size  Location     Type
 39150 ;;                  1    wreg      void 
 39151 ;; Registers used:
 39152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39153 ;; Tracked objects:
 39154 ;;		On entry : 0/0
 39155 ;;		On exit  : 0/0
 39156 ;;		Unchanged: 0/0
 39157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39161 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39162 ;;Total ram usage:        7 bytes
 39163 ;; Hardware stack levels used:    1
 39164 ;; Hardware stack levels required when called:    8
 39165 ;; This function calls:
 39166 ;;		_memcpy
 39167 ;;		_memset
 39168 ;; This function is called by:
 39169 ;;		_ComputeSessionKeys
 39170 ;; This function uses a non-reentrant model
 39171 ;;
 39172                           
 39173                           	psect	text213
 39174  009770                     __ptext213:
 39175                           	opt stack 0
 39176  009770                     _PrepareSessionKeys:
 39177                           	opt stack 17
 39178                           
 39179                           ;lorawan.c: 2047: uint8_t index = 0;
 39180                           
 39181                           ;incstack = 0
 39182  009770  0E00               	movlw	0
 39183  009772  0100               	movlb	0	; () banked
 39184  009774  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39185                           
 39186                           ; BSR set to: 0
 39187                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 39188  009776  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39189  009778  0D01               	mullw	1
 39190  00977A  50F3               	movf	prodl,w,c
 39191  00977C  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39192  00977E  6F60               	movwf	memset@p1& (0+255),b
 39193  009780  50F4               	movf	prodh,w,c
 39194  009782  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39195  009784  6F61               	movwf	(memset@p1+1)& (0+255),b
 39196  009786  0E00               	movlw	0
 39197  009788  6F63               	movwf	(memset@c+1)& (0+255),b
 39198  00978A  0E00               	movlw	0
 39199  00978C  6F62               	movwf	memset@c& (0+255),b
 39200  00978E  0E00               	movlw	0
 39201  009790  6F65               	movwf	(memset@n+1)& (0+255),b
 39202  009792  0E10               	movlw	16
 39203  009794  6F64               	movwf	memset@n& (0+255),b
 39204  009796  EC1F  F05D         	call	_memset	;wreg free
 39205                           
 39206                           ;lorawan.c: 2050: index ++;
 39207  00979A  0100               	movlb	0	; () banked
 39208  00979C  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 39209                           
 39210                           ; BSR set to: 0
 39211                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 39212  00979E  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39213  0097A0  0D01               	mullw	1
 39214  0097A2  50F3               	movf	prodl,w,c
 39215  0097A4  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39216  0097A6  6F60               	movwf	memcpy@d1& (0+255),b
 39217  0097A8  50F4               	movf	prodh,w,c
 39218  0097AA  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39219  0097AC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39220  0097AE  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 39221  0097B2  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 39222  0097B6  0E00               	movlw	0
 39223  0097B8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39224  0097BA  0E03               	movlw	3
 39225  0097BC  6F64               	movwf	memcpy@n& (0+255),b
 39226  0097BE  ECA9  F055         	call	_memcpy	;wreg free
 39227                           
 39228                           ;lorawan.c: 2053: index = index + 3;
 39229  0097C2  0100               	movlb	0	; () banked
 39230  0097C4  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39231  0097C6  0F03               	addlw	3
 39232  0097C8  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39233                           
 39234                           ; BSR set to: 0
 39235                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 39236  0097CA  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39237  0097CC  0D01               	mullw	1
 39238  0097CE  50F3               	movf	prodl,w,c
 39239  0097D0  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39240  0097D2  6F60               	movwf	memcpy@d1& (0+255),b
 39241  0097D4  50F4               	movf	prodh,w,c
 39242  0097D6  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39243  0097D8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39244  0097DA  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 39245  0097DE  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 39246  0097E2  0E00               	movlw	0
 39247  0097E4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39248  0097E6  0E03               	movlw	3
 39249  0097E8  6F64               	movwf	memcpy@n& (0+255),b
 39250  0097EA  ECA9  F055         	call	_memcpy	;wreg free
 39251                           
 39252                           ;lorawan.c: 2056: index = index + 3;
 39253  0097EE  0100               	movlb	0	; () banked
 39254  0097F0  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39255  0097F2  0F03               	addlw	3
 39256  0097F4  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 39257                           
 39258                           ; BSR set to: 0
 39259                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 39260  0097F6  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 39261  0097F8  0D01               	mullw	1
 39262  0097FA  50F3               	movf	prodl,w,c
 39263  0097FC  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 39264  0097FE  6F60               	movwf	memcpy@d1& (0+255),b
 39265  009800  50F4               	movf	prodh,w,c
 39266  009802  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 39267  009804  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 39268  009806  0ED6               	movlw	low (_loRa+210)
 39269  009808  6F62               	movwf	memcpy@s1& (0+255),b
 39270  00980A  0E02               	movlw	high (_loRa+210)
 39271  00980C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 39272  00980E  0E00               	movlw	0
 39273  009810  6F65               	movwf	(memcpy@n+1)& (0+255),b
 39274  009812  0E02               	movlw	2
 39275  009814  6F64               	movwf	memcpy@n& (0+255),b
 39276  009816  ECA9  F055         	call	_memcpy	;wreg free
 39277  00981A  0012               	return		;funcret
 39278  00981C                     __end_of_PrepareSessionKeys:
 39279                           	opt stack 0
 39280                           tosu	equ	0xFFF
 39281                           tosh	equ	0xFFE
 39282                           tosl	equ	0xFFD
 39283                           pclath	equ	0xFFA
 39284                           tblptru	equ	0xFF8
 39285                           tblptrh	equ	0xFF7
 39286                           tblptrl	equ	0xFF6
 39287                           tablat	equ	0xFF5
 39288                           prodh	equ	0xFF4
 39289                           prodl	equ	0xFF3
 39290                           intcon	equ	0xFF2
 39291                           intcon2	equ	0xFF1
 39292                           intcon3	equ	0xFF0
 39293                           indf0	equ	0xFEF
 39294                           postinc0	equ	0xFEE
 39295                           fsr0h	equ	0xFEA
 39296                           fsr0l	equ	0xFE9
 39297                           wreg	equ	0xFE8
 39298                           postinc1	equ	0xFE6
 39299                           postdec1	equ	0xFE5
 39300                           plusw1	equ	0xFE3
 39301                           fsr1h	equ	0xFE2
 39302                           fsr1l	equ	0xFE1
 39303                           indf2	equ	0xFDF
 39304                           postinc2	equ	0xFDE
 39305                           postdec2	equ	0xFDD
 39306                           plusw2	equ	0xFDB
 39307                           fsr2h	equ	0xFDA
 39308                           fsr2l	equ	0xFD9
 39309                           status	equ	0xFD8
 39310                           
 39311 ;; *************** function _CheckMcastFlags *****************
 39312 ;; Defined at:
 39313 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39314 ;; Parameters:    Size  Location     Type
 39315 ;;  hdr             2    0[BANK0 ] PTR struct .
 39316 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39317 ;; Auto vars:     Size  Location     Type
 39318 ;;		None
 39319 ;; Return value:  Size  Location     Type
 39320 ;;                  1    wreg      unsigned char 
 39321 ;; Registers used:
 39322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39323 ;; Tracked objects:
 39324 ;;		On entry : 0/0
 39325 ;;		On exit  : 0/0
 39326 ;;		Unchanged: 0/0
 39327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39332 ;;Total ram usage:        2 bytes
 39333 ;; Hardware stack levels used:    1
 39334 ;; Hardware stack levels required when called:    7
 39335 ;; This function calls:
 39336 ;;		Nothing
 39337 ;; This function is called by:
 39338 ;;		_LORAWAN_RxDone
 39339 ;; This function uses a non-reentrant model
 39340 ;;
 39341                           
 39342                           	psect	text214
 39343  00A1E0                     __ptext214:
 39344                           	opt stack 0
 39345  00A1E0                     _CheckMcastFlags:
 39346                           	opt stack 19
 39347                           
 39348                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 39349                           
 39350                           ;incstack = 0
 39351  00A1E0  0100               	movlb	0	; () banked
 39352  00A1E2  EE20 F005          	lfsr	2,5
 39353  00A1E6  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39354  00A1E8  26D9               	addwf	fsr2l,f,c
 39355  00A1EA  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39356  00A1EC  22DA               	addwfc	fsr2h,f,c
 39357  00A1EE  BADF               	btfsc	indf2,5,c
 39358  00A1F0  D012               	goto	u22400
 39359                           
 39360                           ; BSR set to: 0
 39361  00A1F2  EE20 F005          	lfsr	2,5
 39362  00A1F6  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39363  00A1F8  26D9               	addwf	fsr2l,f,c
 39364  00A1FA  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39365  00A1FC  22DA               	addwfc	fsr2h,f,c
 39366  00A1FE  BCDF               	btfsc	indf2,6,c
 39367  00A200  D00A               	goto	u22400
 39368                           
 39369                           ; BSR set to: 0
 39370  00A202  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 39371  00A206  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 39372  00A20A  38DF               	swapf	223,w,c
 39373  00A20C  32E8               	rrcf	wreg,f,c
 39374  00A20E  0B07               	andlw	7
 39375  00A210  0A03               	xorlw	3
 39376  00A212  B4D8               	btfsc	status,2,c
 39377  00A214  D002               	goto	l2449
 39378  00A216                     u22400:
 39379                           
 39380                           ; BSR set to: 0
 39381                           ;lorawan.c: 2110: {
 39382                           ;lorawan.c: 2111: return 0;
 39383                           
 39384                           ; BSR set to: 0
 39385  00A216  0E00               	movlw	0
 39386                           
 39387                           ; BSR set to: 0
 39388  00A218  0012               	return	
 39389  00A21A                     l2449:
 39390                           
 39391                           ; BSR set to: 0
 39392                           ;lorawan.c: 2112: }
 39393                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 39394                           
 39395                           ; BSR set to: 0
 39396  00A21A  EE20 F005          	lfsr	2,5
 39397  00A21E  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39398  00A220  26D9               	addwf	fsr2l,f,c
 39399  00A222  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39400  00A224  22DA               	addwfc	fsr2h,f,c
 39401  00A226  50DF               	movf	223,w,c
 39402  00A228  0B0F               	andlw	15
 39403  00A22A  0900               	iorlw	0
 39404  00A22C  B4D8               	btfsc	status,2,c
 39405  00A22E  D002               	goto	l2453
 39406                           
 39407                           ; BSR set to: 0
 39408                           ;lorawan.c: 2115: {
 39409                           ;lorawan.c: 2116: return 0;
 39410  00A230  0E00               	movlw	0
 39411                           
 39412                           ; BSR set to: 0
 39413  00A232  0012               	return	
 39414  00A234                     l2453:
 39415                           
 39416                           ; BSR set to: 0
 39417                           ;lorawan.c: 2118: else
 39418                           ;lorawan.c: 2119: {
 39419                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 39420                           
 39421                           ; BSR set to: 0
 39422  00A234  EE20 F008          	lfsr	2,8
 39423  00A238  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39424  00A23A  26D9               	addwf	fsr2l,f,c
 39425  00A23C  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39426  00A23E  22DA               	addwfc	fsr2h,f,c
 39427  00A240  50DF               	movf	indf2,w,c
 39428  00A242  A4D8               	btfss	status,2,c
 39429  00A244  D002               	goto	l2455
 39430                           
 39431                           ; BSR set to: 0
 39432                           ;lorawan.c: 2121: {
 39433                           ;lorawan.c: 2122: return 0;
 39434  00A246  0E00               	movlw	0
 39435                           
 39436                           ; BSR set to: 0
 39437  00A248  0012               	return	
 39438  00A24A                     l2455:
 39439                           
 39440                           ; BSR set to: 0
 39441                           ;lorawan.c: 2123: }
 39442                           ;lorawan.c: 2124: }
 39443                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 39444                           
 39445                           ; BSR set to: 0
 39446                           
 39447                           ; BSR set to: 0
 39448  00A24A  EE20 F005          	lfsr	2,5
 39449  00A24E  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 39450  00A250  26D9               	addwf	fsr2l,f,c
 39451  00A252  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 39452  00A254  22DA               	addwfc	fsr2h,f,c
 39453  00A256  A8DF               	btfss	indf2,4,c
 39454  00A258  D002               	goto	l2456
 39455                           
 39456                           ; BSR set to: 0
 39457                           ;lorawan.c: 2127: {
 39458                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 39459  00A25A  0102               	movlb	2	; () banked
 39460  00A25C  8704               	bsf	_loRa& (0+255),3,b
 39461  00A25E                     l2456:
 39462                           
 39463                           ;lorawan.c: 2129: }
 39464                           ;lorawan.c: 2131: return 1;
 39465                           
 39466                           ; BSR set to: 2
 39467  00A25E  0E01               	movlw	1
 39468  00A260  0012               	return	
 39469  00A262                     __end_of_CheckMcastFlags:
 39470                           	opt stack 0
 39471                           tosu	equ	0xFFF
 39472                           tosh	equ	0xFFE
 39473                           tosl	equ	0xFFD
 39474                           pclath	equ	0xFFA
 39475                           tblptru	equ	0xFF8
 39476                           tblptrh	equ	0xFF7
 39477                           tblptrl	equ	0xFF6
 39478                           tablat	equ	0xFF5
 39479                           prodh	equ	0xFF4
 39480                           prodl	equ	0xFF3
 39481                           intcon	equ	0xFF2
 39482                           intcon2	equ	0xFF1
 39483                           intcon3	equ	0xFF0
 39484                           indf0	equ	0xFEF
 39485                           postinc0	equ	0xFEE
 39486                           fsr0h	equ	0xFEA
 39487                           fsr0l	equ	0xFE9
 39488                           wreg	equ	0xFE8
 39489                           postinc1	equ	0xFE6
 39490                           postdec1	equ	0xFE5
 39491                           plusw1	equ	0xFE3
 39492                           fsr1h	equ	0xFE2
 39493                           fsr1l	equ	0xFE1
 39494                           indf2	equ	0xFDF
 39495                           postinc2	equ	0xFDE
 39496                           postdec2	equ	0xFDD
 39497                           plusw2	equ	0xFDB
 39498                           fsr2h	equ	0xFDA
 39499                           fsr2l	equ	0xFD9
 39500                           status	equ	0xFD8
 39501                           
 39502 ;; *************** function _CheckFlags *****************
 39503 ;; Defined at:
 39504 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39505 ;; Parameters:    Size  Location     Type
 39506 ;;  hdr             2    0[BANK0 ] PTR struct .
 39507 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 39508 ;; Auto vars:     Size  Location     Type
 39509 ;;		None
 39510 ;; Return value:  Size  Location     Type
 39511 ;;                  1    wreg      void 
 39512 ;; Registers used:
 39513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39514 ;; Tracked objects:
 39515 ;;		On entry : 0/0
 39516 ;;		On exit  : 0/0
 39517 ;;		Unchanged: 0/0
 39518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39523 ;;Total ram usage:        2 bytes
 39524 ;; Hardware stack levels used:    1
 39525 ;; Hardware stack levels required when called:    7
 39526 ;; This function calls:
 39527 ;;		Nothing
 39528 ;; This function is called by:
 39529 ;;		_LORAWAN_RxDone
 39530 ;; This function uses a non-reentrant model
 39531 ;;
 39532                           
 39533                           	psect	text215
 39534  00AC6E                     __ptext215:
 39535                           	opt stack 0
 39536  00AC6E                     _CheckFlags:
 39537                           	opt stack 19
 39538                           
 39539                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 39540                           
 39541                           ;incstack = 0
 39542  00AC6E  0100               	movlb	0	; () banked
 39543  00AC70  EE20 F005          	lfsr	2,5
 39544  00AC74  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39545  00AC76  26D9               	addwf	fsr2l,f,c
 39546  00AC78  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39547  00AC7A  22DA               	addwfc	fsr2h,f,c
 39548  00AC7C  AEDF               	btfss	indf2,7,c
 39549  00AC7E  D002               	goto	l2442
 39550                           
 39551                           ; BSR set to: 0
 39552                           ;lorawan.c: 2077: {
 39553                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 39554  00AC80  0102               	movlb	2	; () banked
 39555  00AC82  8D06               	bsf	(_loRa+2)& (0+255),6,b
 39556  00AC84                     l2442:
 39557                           
 39558                           ;lorawan.c: 2079: }
 39559                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 39560                           
 39561                           ; BSR set to: 2
 39562  00AC84  0100               	movlb	0	; () banked
 39563  00AC86  EE20 F005          	lfsr	2,5
 39564  00AC8A  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39565  00AC8C  26D9               	addwf	fsr2l,f,c
 39566  00AC8E  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39567  00AC90  22DA               	addwfc	fsr2h,f,c
 39568  00AC92  A8DF               	btfss	indf2,4,c
 39569  00AC94  D002               	goto	l2443
 39570                           
 39571                           ; BSR set to: 0
 39572                           ;lorawan.c: 2082: {
 39573                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 39574  00AC96  0102               	movlb	2	; () banked
 39575  00AC98  8704               	bsf	_loRa& (0+255),3,b
 39576  00AC9A                     l2443:
 39577                           
 39578                           ;lorawan.c: 2084: }
 39579                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 39580                           
 39581                           ; BSR set to: 2
 39582  00AC9A  0100               	movlb	0	; () banked
 39583  00AC9C  EE20 F005          	lfsr	2,5
 39584  00ACA0  5160               	movf	CheckFlags@hdr& (0+255),w,b
 39585  00ACA2  26D9               	addwf	fsr2l,f,c
 39586  00ACA4  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 39587  00ACA6  22DA               	addwfc	fsr2h,f,c
 39588  00ACA8  ACDF               	btfss	indf2,6,c
 39589  00ACAA  D002               	goto	l2444
 39590                           
 39591                           ; BSR set to: 0
 39592                           ;lorawan.c: 2087: {
 39593                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 39594  00ACAC  0102               	movlb	2	; () banked
 39595  00ACAE  8904               	bsf	_loRa& (0+255),4,b
 39596  00ACB0                     l2444:
 39597                           
 39598                           ;lorawan.c: 2089: }
 39599                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 39600                           
 39601                           ; BSR set to: 2
 39602  00ACB0  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 39603  00ACB4  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 39604  00ACB8  0100               	movlb	0	; () banked
 39605  00ACBA  38DF               	swapf	223,w,c
 39606  00ACBC  32E8               	rrcf	wreg,f,c
 39607  00ACBE  0B07               	andlw	7
 39608  00ACC0  0A05               	xorlw	5
 39609  00ACC2  A4D8               	btfss	status,2,c
 39610  00ACC4  0012               	return	
 39611                           
 39612                           ; BSR set to: 0
 39613                           ;lorawan.c: 2092: {
 39614                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 39615  00ACC6  0102               	movlb	2	; () banked
 39616  00ACC8  8304               	bsf	_loRa& (0+255),1,b
 39617  00ACCA  0012               	return	
 39618  00ACCC                     __end_of_CheckFlags:
 39619                           	opt stack 0
 39620                           tosu	equ	0xFFF
 39621                           tosh	equ	0xFFE
 39622                           tosl	equ	0xFFD
 39623                           pclath	equ	0xFFA
 39624                           tblptru	equ	0xFF8
 39625                           tblptrh	equ	0xFF7
 39626                           tblptrl	equ	0xFF6
 39627                           tablat	equ	0xFF5
 39628                           prodh	equ	0xFF4
 39629                           prodl	equ	0xFF3
 39630                           intcon	equ	0xFF2
 39631                           intcon2	equ	0xFF1
 39632                           intcon3	equ	0xFF0
 39633                           indf0	equ	0xFEF
 39634                           postinc0	equ	0xFEE
 39635                           fsr0h	equ	0xFEA
 39636                           fsr0l	equ	0xFE9
 39637                           wreg	equ	0xFE8
 39638                           postinc1	equ	0xFE6
 39639                           postdec1	equ	0xFE5
 39640                           plusw1	equ	0xFE3
 39641                           fsr1h	equ	0xFE2
 39642                           fsr1l	equ	0xFE1
 39643                           indf2	equ	0xFDF
 39644                           postinc2	equ	0xFDE
 39645                           postdec2	equ	0xFDD
 39646                           plusw2	equ	0xFDB
 39647                           fsr2h	equ	0xFDA
 39648                           fsr2l	equ	0xFD9
 39649                           status	equ	0xFD8
 39650                           
 39651 ;; *************** function _RADIO_FSKPacketSent *****************
 39652 ;; Defined at:
 39653 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 39654 ;; Parameters:    Size  Location     Type
 39655 ;;		None
 39656 ;; Auto vars:     Size  Location     Type
 39657 ;;  timeOnAir       4  135[BANK0 ] unsigned long 
 39658 ;;  irqFlags        1  143[BANK0 ] unsigned char 
 39659 ;; Return value:  Size  Location     Type
 39660 ;;                  1    wreg      void 
 39661 ;; Registers used:
 39662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39663 ;; Tracked objects:
 39664 ;;		On entry : 0/0
 39665 ;;		On exit  : 0/0
 39666 ;;		Unchanged: 0/0
 39667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39669 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39670 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39671 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39672 ;;Total ram usage:       13 bytes
 39673 ;; Hardware stack levels used:    1
 39674 ;; Hardware stack levels required when called:   15
 39675 ;; This function calls:
 39676 ;;		_LORAWAN_TxDone
 39677 ;;		_RADIO_RegisterRead
 39678 ;;		_RADIO_WriteMode
 39679 ;;		_SwTimerReadValue
 39680 ;;		_SwTimerStop
 39681 ;;		___lmul
 39682 ;; This function is called by:
 39683 ;;		_RADIO_DIO0
 39684 ;; This function uses a non-reentrant model
 39685 ;;
 39686                           
 39687                           	psect	text216
 39688  007ED6                     __ptext216:
 39689                           	opt stack 0
 39690  007ED6                     _RADIO_FSKPacketSent:
 39691                           	opt stack 13
 39692                           
 39693                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 39694                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 39695                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 39696                           
 39697                           ;incstack = 0
 39698  007ED6  0E3F               	movlw	63
 39699  007ED8  EC92  F05E         	call	_RADIO_RegisterRead
 39700  007EDC  0100               	movlb	0	; () banked
 39701  007EDE  6FEF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 39702                           
 39703                           ; BSR set to: 0
 39704                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 39705  007EE0  A7EF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 39706  007EE2  0012               	return	
 39707                           
 39708                           ; BSR set to: 0
 39709                           ;radio_driver_SX1276.c: 1100: {
 39710                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 39711  007EE4  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 39712  007EE8  0E00               	movlw	0
 39713  007EEA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 39714  007EEC  0E00               	movlw	0
 39715  007EEE  ECDC  F043         	call	_RADIO_WriteMode
 39716                           
 39717                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 39718  007EF2  0101               	movlb	1	; () banked
 39719  007EF4  9158               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 39720                           
 39721                           ; BSR set to: 1
 39722                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 39723  007EF6  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 39724  007EF8  ECA6  F05E         	call	_SwTimerStop
 39725                           
 39726                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 39727  007EFC  0101               	movlb	1	; () banked
 39728  007EFE  B958               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 39729  007F00  0012               	return	
 39730                           
 39731                           ; BSR set to: 1
 39732                           ;radio_driver_SX1276.c: 1107: {
 39733                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 39734  007F02  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39735  007F04  EC7B  F05B         	call	_SwTimerReadValue
 39736  007F08  0100               	movlb	0	; () banked
 39737  007F0A  5194               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 39738  007F0C  E108               	bnz	u24110
 39739  007F0E  0E1F               	movlw	31
 39740  007F10  5D91               	subwf	?_SwTimerReadValue& (0+255),w,b
 39741  007F12  0EAC               	movlw	172
 39742  007F14  5992               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 39743  007F16  0EDF               	movlw	223
 39744  007F18  5993               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 39745  007F1A  A0D8               	btfss	status,0,c
 39746  007F1C  D021               	goto	l909
 39747  007F1E                     u24110:
 39748                           
 39749                           ; BSR set to: 0
 39750  007F1E  0101               	movlb	1	; () banked
 39751  007F20  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39752  007F22  EC7B  F05B         	call	_SwTimerReadValue
 39753  007F26  0E0D               	movlw	13
 39754  007F28  D006               	goto	u24120
 39755  007F2A                     u24125:
 39756  007F2A  0100               	movlb	0	; () banked
 39757  007F2C  90D8               	bcf	status,0,c
 39758  007F2E  3394               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 39759  007F30  3393               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 39760  007F32  3392               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 39761  007F34  3391               	rrcf	?_SwTimerReadValue& (0+255),f,b
 39762  007F36                     u24120:
 39763  007F36  2EE8               	decfsz	wreg,f,c
 39764  007F38  D7F8               	goto	u24125
 39765  007F3A  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 39766  007F3E  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 39767  007F42  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 39768  007F46  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 39769  007F4A  0E7D               	movlw	125
 39770  007F4C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 39771  007F4E  0E00               	movlw	0
 39772  007F50  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39773  007F52  0E00               	movlw	0
 39774  007F54  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39775  007F56  0E00               	movlw	0
 39776  007F58  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39777  007F5A  EC1B  F057         	call	___lmul	;wreg free
 39778  007F5E  D021               	goto	L17
 39779  007F60                     l909:
 39780  007F60  0101               	movlb	1	; () banked
 39781  007F62  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39782  007F64  EC7B  F05B         	call	_SwTimerReadValue
 39783  007F68  C091  F09A         	movff	?_SwTimerReadValue,___lmul@multiplier
 39784  007F6C  C092  F09B         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 39785  007F70  C093  F09C         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 39786  007F74  C094  F09D         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 39787  007F78  0E7D               	movlw	125
 39788  007F7A  0100               	movlb	0	; () banked
 39789  007F7C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 39790  007F7E  0E00               	movlw	0
 39791  007F80  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39792  007F82  0E00               	movlw	0
 39793  007F84  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39794  007F86  0E00               	movlw	0
 39795  007F88  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39796  007F8A  EC1B  F057         	call	___lmul	;wreg free
 39797  007F8E  0E0D               	movlw	13
 39798  007F90  D006               	goto	u24130
 39799  007F92                     u24135:
 39800  007F92  0100               	movlb	0	; () banked
 39801  007F94  90D8               	bcf	status,0,c
 39802  007F96  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 39803  007F98  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 39804  007F9A  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 39805  007F9C  339A               	rrcf	?___lmul& (0+255),f,b
 39806  007F9E                     u24130:
 39807  007F9E  2EE8               	decfsz	wreg,f,c
 39808  007FA0  D7F8               	goto	u24135
 39809  007FA2                     L17:
 39810  007FA2  C09A  F0EB         	movff	?___lmul,_RADIO_FSKPacketSent$1193
 39811  007FA6  C09B  F0EC         	movff	?___lmul+1,_RADIO_FSKPacketSent$1193+1
 39812  007FAA  C09C  F0ED         	movff	?___lmul+2,_RADIO_FSKPacketSent$1193+2
 39813  007FAE  C09D  F0EE         	movff	?___lmul+3,_RADIO_FSKPacketSent$1193+3
 39814                           
 39815                           ; BSR set to: 0
 39816  007FB2  C0EB  F0E3         	movff	_RADIO_FSKPacketSent$1193,??_RADIO_FSKPacketSent
 39817  007FB6  C0EC  F0E4         	movff	_RADIO_FSKPacketSent$1193+1,??_RADIO_FSKPacketSent+1
 39818  007FBA  C0ED  F0E5         	movff	_RADIO_FSKPacketSent$1193+2,??_RADIO_FSKPacketSent+2
 39819  007FBE  C0EE  F0E6         	movff	_RADIO_FSKPacketSent$1193+3,??_RADIO_FSKPacketSent+3
 39820  007FC2  0100               	movlb	0	; () banked
 39821  007FC4  1FE3               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 39822  007FC6  1FE4               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 39823  007FC8  1FE5               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 39824  007FCA  1FE6               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 39825  007FCC  2BE3               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 39826  007FCE  0E00               	movlw	0
 39827  007FD0  23E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 39828  007FD2  23E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 39829  007FD4  23E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 39830  007FD6  0E20               	movlw	32
 39831  007FD8  25E3               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 39832  007FDA  6FE7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 39833  007FDC  0E4E               	movlw	78
 39834  007FDE  21E4               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 39835  007FE0  6FE8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 39836  007FE2  0E00               	movlw	0
 39837  007FE4  21E5               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 39838  007FE6  6FE9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 39839  007FE8  0E00               	movlw	0
 39840  007FEA  21E6               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 39841  007FEC  6FEA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 39842                           
 39843                           ; BSR set to: 0
 39844                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 39845  007FEE  0101               	movlb	1	; () banked
 39846  007FF0  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 39847  007FF2  ECA6  F05E         	call	_SwTimerStop
 39848                           
 39849                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 39850  007FF6  C0E7  F0BB         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 39851  007FFA  C0E8  F0BC         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 39852  007FFE  EC5B  F00B         	call	_LORAWAN_TxDone	;wreg free
 39853  008002  0012               	return	
 39854  008004                     __end_of_RADIO_FSKPacketSent:
 39855                           	opt stack 0
 39856                           tosu	equ	0xFFF
 39857                           tosh	equ	0xFFE
 39858                           tosl	equ	0xFFD
 39859                           pclath	equ	0xFFA
 39860                           tblptru	equ	0xFF8
 39861                           tblptrh	equ	0xFF7
 39862                           tblptrl	equ	0xFF6
 39863                           tablat	equ	0xFF5
 39864                           prodh	equ	0xFF4
 39865                           prodl	equ	0xFF3
 39866                           intcon	equ	0xFF2
 39867                           intcon2	equ	0xFF1
 39868                           intcon3	equ	0xFF0
 39869                           indf0	equ	0xFEF
 39870                           postinc0	equ	0xFEE
 39871                           fsr0h	equ	0xFEA
 39872                           fsr0l	equ	0xFE9
 39873                           wreg	equ	0xFE8
 39874                           postinc1	equ	0xFE6
 39875                           postdec1	equ	0xFE5
 39876                           plusw1	equ	0xFE3
 39877                           fsr1h	equ	0xFE2
 39878                           fsr1l	equ	0xFE1
 39879                           indf2	equ	0xFDF
 39880                           postinc2	equ	0xFDE
 39881                           postdec2	equ	0xFDD
 39882                           plusw2	equ	0xFDB
 39883                           fsr2h	equ	0xFDA
 39884                           fsr2l	equ	0xFD9
 39885                           status	equ	0xFD8
 39886                           
 39887 ;; *************** function _LORAWAN_TxDone *****************
 39888 ;; Defined at:
 39889 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39890 ;; Parameters:    Size  Location     Type
 39891 ;;  timeOnAir       2   91[BANK0 ] unsigned int 
 39892 ;; Auto vars:     Size  Location     Type
 39893 ;;  minim           4  126[BANK0 ] unsigned long 
 39894 ;;  ticks           4  122[BANK0 ] unsigned long 
 39895 ;;  delta           4  114[BANK0 ] unsigned long 
 39896 ;;  i               1  130[BANK0 ] unsigned char 
 39897 ;;  found           1  113[BANK0 ] unsigned char 
 39898 ;; Return value:  Size  Location     Type
 39899 ;;                  1    wreg      void 
 39900 ;; Registers used:
 39901 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39902 ;; Tracked objects:
 39903 ;;		On entry : 0/0
 39904 ;;		On exit  : 0/0
 39905 ;;		Unchanged: 0/0
 39906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39908 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39909 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39910 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39911 ;;Total ram usage:       40 bytes
 39912 ;; Hardware stack levels used:    1
 39913 ;; Hardware stack levels required when called:   14
 39914 ;; This function calls:
 39915 ;;		_LORAWAN_EnterContinuousReceive
 39916 ;;		_RADIO_GetStatus
 39917 ;;		_RxData
 39918 ;;		_SwTimerIsRunning
 39919 ;;		_SwTimerReadValue
 39920 ;;		_SwTimerSetTimeout
 39921 ;;		_SwTimerStart
 39922 ;;		_SwTimerStop
 39923 ;;		___lldiv
 39924 ;;		___lmul
 39925 ;; This function is called by:
 39926 ;;		_RADIO_TxDone
 39927 ;;		_RADIO_FSKPacketSent
 39928 ;;		_RADIO_WatchdogTimeout
 39929 ;; This function uses a non-reentrant model
 39930 ;;
 39931                           
 39932                           	psect	text217
 39933  0016B6                     __ptext217:
 39934                           	opt stack 0
 39935  0016B6                     _LORAWAN_TxDone:
 39936                           	opt stack 13
 39937                           
 39938                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 39939                           
 39940                           ;incstack = 0
 39941  0016B6  0102               	movlb	2	; () banked
 39942  0016B8  B107               	btfsc	(_loRa+3)& (0+255),0,b
 39943  0016BA  D3A2               	goto	l1357
 39944                           
 39945                           ; BSR set to: 2
 39946                           ;lorawan_eu.c: 368: {
 39947                           ;lorawan_eu.c: 369: bool found = 0;
 39948  0016BC  0E00               	movlw	0
 39949  0016BE  0100               	movlb	0	; () banked
 39950  0016C0  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 39951                           
 39952                           ;lorawan_eu.c: 370: uint8_t i;
 39953                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 39954  0016C2  0E00               	movlw	0
 39955  0016C4  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 39956  0016C6  0E00               	movlw	0
 39957  0016C8  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 39958  0016CA  0E00               	movlw	0
 39959  0016CC  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 39960  0016CE  0E00               	movlw	0
 39961  0016D0  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 39962                           
 39963                           ; BSR set to: 0
 39964  0016D2  69DE               	setf	LORAWAN_TxDone@minim& (0+255),b
 39965  0016D4  69DF               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 39966  0016D6  69E0               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 39967  0016D8  69E1               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 39968                           
 39969                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 39970  0016DA  0E00               	movlw	0
 39971  0016DC  0102               	movlb	2	; () banked
 39972  0016DE  6FF5               	movwf	(_loRa+241)& (0+255),b
 39973                           
 39974                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 39975  0016E0  5106               	movf	(_loRa+2)& (0+255),w,b
 39976  0016E2  0BF0               	andlw	-16
 39977  0016E4  0902               	iorlw	2
 39978  0016E6  6F06               	movwf	(_loRa+2)& (0+255),b
 39979                           
 39980                           ; BSR set to: 2
 39981                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 39982  0016E8  C2DE  F0E2         	movff	_loRa+218,LORAWAN_TxDone@i
 39983                           
 39984                           ; BSR set to: 2
 39985                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 39986  0016EC  A504               	btfss	_loRa& (0+255),2,b
 39987  0016EE  D0BA               	goto	l1358
 39988                           
 39989                           ; BSR set to: 2
 39990                           ;lorawan_eu.c: 382: {
 39991                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 39992  0016F0  511B               	movf	(_loRa+23)& (0+255),w,b
 39993  0016F2  0D01               	mullw	1
 39994  0016F4  0EDD               	movlw	low _rxWindowOffset
 39995  0016F6  24F3               	addwf	prodl,w,c
 39996  0016F8  6EF6               	movwf	tblptrl,c
 39997  0016FA  0EFE               	movlw	high _rxWindowOffset
 39998  0016FC  20F4               	addwfc	prodh,w,c
 39999  0016FE  6EF7               	movwf	tblptrh,c
 40000  001700                     	if	1	;There are 3 active tblptr bytes
 40001  001700  6AF8               	clrf	tblptru,c
 40002  001702  0E00               	movlw	low (__mediumconst shr (0+16))
 40003  001704  22F8               	addwfc	tblptru,f,c
 40004  001706                     	endif
 40005  001706  0008               	tblrd		*
 40006  001708  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40007  00170C  519C               	movf	(_loRa+152)& (0+255),w,b
 40008  00170E  0100               	movlb	0	; () banked
 40009  001710  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40010  001712  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40011  001714  0E00               	movlw	0
 40012  001716  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40013  001718  0EFF               	movlw	255
 40014  00171A  0102               	movlb	2	; () banked
 40015  00171C  219D               	addwfc	(_loRa+153)& (0+255),w,b
 40016  00171E  0100               	movlb	0	; () banked
 40017  001720  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40018  001722  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40019  001724  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40020  001726  0E0C               	movlw	12
 40021  001728                     u23615:
 40022  001728  90D8               	bcf	status,0,c
 40023  00172A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40024  00172C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40025  00172E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40026  001730  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40027  001732  2EE8               	decfsz	wreg,f,c
 40028  001734  D7F9               	goto	u23615
 40029  001736  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40030  00173A  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40031  00173E  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40032  001742  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40033  001746  0E7D               	movlw	125
 40034  001748  6F64               	movwf	___lldiv@divisor& (0+255),b
 40035  00174A  0E00               	movlw	0
 40036  00174C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40037  00174E  0E00               	movlw	0
 40038  001750  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40039  001752  0E00               	movlw	0
 40040  001754  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40041  001756  ECAE  F050         	call	___lldiv	;wreg free
 40042  00175A  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40043  00175E  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40044  001762  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40045  001766  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40046  00176A  0102               	movlb	2	; () banked
 40047  00176C  51E6               	movf	(_loRa+226)& (0+255),w,b
 40048  00176E  ECD5  F05A         	call	_SwTimerSetTimeout
 40049                           
 40050                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40051  001772  0102               	movlb	2	; () banked
 40052  001774  5120               	movf	(_loRa+28)& (0+255),w,b
 40053  001776  0D01               	mullw	1
 40054  001778  0EDD               	movlw	low _rxWindowOffset
 40055  00177A  24F3               	addwf	prodl,w,c
 40056  00177C  6EF6               	movwf	tblptrl,c
 40057  00177E  0EFE               	movlw	high _rxWindowOffset
 40058  001780  20F4               	addwfc	prodh,w,c
 40059  001782  6EF7               	movwf	tblptrh,c
 40060  001784                     	if	1	;There are 3 active tblptr bytes
 40061  001784  6AF8               	clrf	tblptru,c
 40062  001786  0E00               	movlw	low (__mediumconst shr (0+16))
 40063  001788  22F8               	addwfc	tblptru,f,c
 40064  00178A                     	endif
 40065  00178A  0008               	tblrd		*
 40066  00178C  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40067  001790  519E               	movf	(_loRa+154)& (0+255),w,b
 40068  001792  0100               	movlb	0	; () banked
 40069  001794  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40070  001796  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40071  001798  0E00               	movlw	0
 40072  00179A  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40073  00179C  0EFF               	movlw	255
 40074  00179E  0102               	movlb	2	; () banked
 40075  0017A0  219F               	addwfc	(_loRa+155)& (0+255),w,b
 40076  0017A2  0100               	movlb	0	; () banked
 40077  0017A4  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40078  0017A6  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40079  0017A8  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40080  0017AA  0E0C               	movlw	12
 40081  0017AC                     u23625:
 40082  0017AC  90D8               	bcf	status,0,c
 40083  0017AE  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40084  0017B0  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40085  0017B2  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40086  0017B4  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40087  0017B6  2EE8               	decfsz	wreg,f,c
 40088  0017B8  D7F9               	goto	u23625
 40089  0017BA  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40090  0017BE  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40091  0017C2  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40092  0017C6  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40093  0017CA  0E7D               	movlw	125
 40094  0017CC  6F64               	movwf	___lldiv@divisor& (0+255),b
 40095  0017CE  0E00               	movlw	0
 40096  0017D0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40097  0017D2  0E00               	movlw	0
 40098  0017D4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40099  0017D6  0E00               	movlw	0
 40100  0017D8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40101  0017DA  ECAE  F050         	call	___lldiv	;wreg free
 40102  0017DE  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40103  0017E2  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40104  0017E6  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40105  0017EA  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40106  0017EE  0102               	movlb	2	; () banked
 40107  0017F0  51E7               	movf	(_loRa+227)& (0+255),w,b
 40108  0017F2  ECD5  F05A         	call	_SwTimerSetTimeout
 40109                           
 40110                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 40111  0017F6  0102               	movlb	2	; () banked
 40112  0017F8  51E6               	movf	(_loRa+226)& (0+255),w,b
 40113  0017FA  EC5A  F04D         	call	_SwTimerStart
 40114                           
 40115                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 40116  0017FE  0102               	movlb	2	; () banked
 40117  001800  51E7               	movf	(_loRa+227)& (0+255),w,b
 40118  001802  EC5A  F04D         	call	_SwTimerStart
 40119                           
 40120                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 40121  001806  C2DF  F09A         	movff	_loRa+219,___lmul@multiplier
 40122  00180A  C2E0  F09B         	movff	_loRa+220,___lmul@multiplier+1
 40123  00180E  0100               	movlb	0	; () banked
 40124  001810  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 40125  001812  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 40126  001814  0ED6               	movlw	214
 40127  001816  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40128  001818  0E0B               	movlw	11
 40129  00181A  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40130  00181C  0E00               	movlw	0
 40131  00181E  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40132  001820  0E00               	movlw	0
 40133  001822  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40134  001824  EC1B  F057         	call	___lmul	;wreg free
 40135  001828  0EFF               	movlw	255
 40136  00182A  0100               	movlb	0	; () banked
 40137  00182C  259A               	addwf	?___lmul& (0+255),w,b
 40138  00182E  6FD6               	movwf	_LORAWAN_TxDone$7023& (0+255),b
 40139  001830  0EFF               	movlw	255
 40140  001832  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 40141  001834  6FD7               	movwf	(_LORAWAN_TxDone$7023+1)& (0+255),b
 40142  001836  0EFF               	movlw	255
 40143  001838  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 40144  00183A  6FD8               	movwf	(_LORAWAN_TxDone$7023+2)& (0+255),b
 40145  00183C  0EFF               	movlw	255
 40146  00183E  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 40147  001840  6FD9               	movwf	(_LORAWAN_TxDone$7023+3)& (0+255),b
 40148                           
 40149                           ; BSR set to: 0
 40150                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 40151  001842  C0D6  F09A         	movff	_LORAWAN_TxDone$7023,___lmul@multiplier
 40152  001846  C0D7  F09B         	movff	_LORAWAN_TxDone$7023+1,___lmul@multiplier+1
 40153  00184A  C0D8  F09C         	movff	_LORAWAN_TxDone$7023+2,___lmul@multiplier+2
 40154  00184E  C0D9  F09D         	movff	_LORAWAN_TxDone$7023+3,___lmul@multiplier+3
 40155  001852  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 40156  001856  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 40157  00185A  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40158  00185C  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40159  00185E  EC1B  F057         	call	___lmul	;wreg free
 40160  001862  D0D7               	goto	L18
 40161  001864                     l1358:
 40162                           
 40163                           ;lorawan_eu.c: 390: else
 40164                           ;lorawan_eu.c: 391: {
 40165                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40166                           
 40167                           ; BSR set to: 0
 40168  001864  0102               	movlb	2	; () banked
 40169  001866  511B               	movf	(_loRa+23)& (0+255),w,b
 40170  001868  0D01               	mullw	1
 40171  00186A  0EDD               	movlw	low _rxWindowOffset
 40172  00186C  24F3               	addwf	prodl,w,c
 40173  00186E  6EF6               	movwf	tblptrl,c
 40174  001870  0EFE               	movlw	high _rxWindowOffset
 40175  001872  20F4               	addwfc	prodh,w,c
 40176  001874  6EF7               	movwf	tblptrh,c
 40177  001876                     	if	1	;There are 3 active tblptr bytes
 40178  001876  6AF8               	clrf	tblptru,c
 40179  001878  0E00               	movlw	low (__mediumconst shr (0+16))
 40180  00187A  22F8               	addwfc	tblptru,f,c
 40181  00187C                     	endif
 40182  00187C  0008               	tblrd		*
 40183  00187E  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40184  001882  5198               	movf	(_loRa+148)& (0+255),w,b
 40185  001884  0100               	movlb	0	; () banked
 40186  001886  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40187  001888  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40188  00188A  0E00               	movlw	0
 40189  00188C  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40190  00188E  0EFF               	movlw	255
 40191  001890  0102               	movlb	2	; () banked
 40192  001892  2199               	addwfc	(_loRa+149)& (0+255),w,b
 40193  001894  0100               	movlb	0	; () banked
 40194  001896  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40195  001898  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40196  00189A  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40197  00189C  0E0C               	movlw	12
 40198  00189E                     u23635:
 40199  00189E  90D8               	bcf	status,0,c
 40200  0018A0  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40201  0018A2  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40202  0018A4  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40203  0018A6  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40204  0018A8  2EE8               	decfsz	wreg,f,c
 40205  0018AA  D7F9               	goto	u23635
 40206  0018AC  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40207  0018B0  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40208  0018B4  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40209  0018B8  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40210  0018BC  0E7D               	movlw	125
 40211  0018BE  6F64               	movwf	___lldiv@divisor& (0+255),b
 40212  0018C0  0E00               	movlw	0
 40213  0018C2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40214  0018C4  0E00               	movlw	0
 40215  0018C6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40216  0018C8  0E00               	movlw	0
 40217  0018CA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40218  0018CC  ECAE  F050         	call	___lldiv	;wreg free
 40219  0018D0  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40220  0018D4  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40221  0018D8  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40222  0018DC  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40223  0018E0  0102               	movlb	2	; () banked
 40224  0018E2  51E8               	movf	(_loRa+228)& (0+255),w,b
 40225  0018E4  ECD5  F05A         	call	_SwTimerSetTimeout
 40226                           
 40227                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 40228  0018E8  0102               	movlb	2	; () banked
 40229  0018EA  5120               	movf	(_loRa+28)& (0+255),w,b
 40230  0018EC  0D01               	mullw	1
 40231  0018EE  0EDD               	movlw	low _rxWindowOffset
 40232  0018F0  24F3               	addwf	prodl,w,c
 40233  0018F2  6EF6               	movwf	tblptrl,c
 40234  0018F4  0EFE               	movlw	high _rxWindowOffset
 40235  0018F6  20F4               	addwfc	prodh,w,c
 40236  0018F8  6EF7               	movwf	tblptrh,c
 40237  0018FA                     	if	1	;There are 3 active tblptr bytes
 40238  0018FA  6AF8               	clrf	tblptru,c
 40239  0018FC  0E00               	movlw	low (__mediumconst shr (0+16))
 40240  0018FE  22F8               	addwfc	tblptru,f,c
 40241  001900                     	endif
 40242  001900  0008               	tblrd		*
 40243  001902  CFF5 F0BD          	movff	tablat,??_LORAWAN_TxDone
 40244  001906  519A               	movf	(_loRa+150)& (0+255),w,b
 40245  001908  0100               	movlb	0	; () banked
 40246  00190A  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40247  00190C  6FBE               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 40248  00190E  0E00               	movlw	0
 40249  001910  BFBD               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 40250  001912  0EFF               	movlw	255
 40251  001914  0102               	movlb	2	; () banked
 40252  001916  219B               	addwfc	(_loRa+151)& (0+255),w,b
 40253  001918  0100               	movlb	0	; () banked
 40254  00191A  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40255  00191C  6BC0               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 40256  00191E  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40257  001920  0E0C               	movlw	12
 40258  001922                     u23645:
 40259  001922  90D8               	bcf	status,0,c
 40260  001924  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40261  001926  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40262  001928  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40263  00192A  37C1               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40264  00192C  2EE8               	decfsz	wreg,f,c
 40265  00192E  D7F9               	goto	u23645
 40266  001930  C0BE  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 40267  001934  C0BF  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 40268  001938  C0C0  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 40269  00193C  C0C1  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 40270  001940  0E7D               	movlw	125
 40271  001942  6F64               	movwf	___lldiv@divisor& (0+255),b
 40272  001944  0E00               	movlw	0
 40273  001946  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40274  001948  0E00               	movlw	0
 40275  00194A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40276  00194C  0E00               	movlw	0
 40277  00194E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40278  001950  ECAE  F050         	call	___lldiv	;wreg free
 40279  001954  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 40280  001958  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 40281  00195C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 40282  001960  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 40283  001964  0102               	movlb	2	; () banked
 40284  001966  51E9               	movf	(_loRa+229)& (0+255),w,b
 40285  001968  ECD5  F05A         	call	_SwTimerSetTimeout
 40286                           
 40287                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 40288  00196C  0102               	movlb	2	; () banked
 40289  00196E  51E8               	movf	(_loRa+228)& (0+255),w,b
 40290  001970  EC5A  F04D         	call	_SwTimerStart
 40291                           
 40292                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 40293  001974  0102               	movlb	2	; () banked
 40294  001976  5116               	movf	(_loRa+18)& (0+255),w,b
 40295  001978  A4D8               	btfss	status,2,c
 40296  00197A  D003               	goto	l1360
 40297                           
 40298                           ; BSR set to: 2
 40299                           ;lorawan_eu.c: 396: {
 40300                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 40301  00197C  51E9               	movf	(_loRa+229)& (0+255),w,b
 40302  00197E  EC5A  F04D         	call	_SwTimerStart
 40303  001982                     l1360:
 40304                           
 40305                           ;lorawan_eu.c: 398: }
 40306                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 40307  001982  0100               	movlb	0	; () banked
 40308  001984  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40309  001986  0D0E               	mullw	14
 40310  001988  0E06               	movlw	6
 40311  00198A  26F3               	addwf	prodl,f,c
 40312  00198C  0E00               	movlw	0
 40313  00198E  22F4               	addwfc	prodh,f,c
 40314  001990  0E00               	movlw	low _Channels
 40315  001992  24F3               	addwf	prodl,w,c
 40316  001994  6ED9               	movwf	fsr2l,c
 40317  001996  0E04               	movlw	high _Channels
 40318  001998  20F4               	addwfc	prodh,w,c
 40319  00199A  6EDA               	movwf	fsr2h,c
 40320  00199C  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 40321  0019A0  CFDD F0BE          	movff	postdec2,??_LORAWAN_TxDone+1
 40322  0019A4  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 40323  0019A6  6FBF               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 40324  0019A8  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40325  0019AA  6FC0               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 40326  0019AC  6BC1               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 40327  0019AE  6BC2               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 40328  0019B0  0E01               	movlw	1
 40329  0019B2  25BF               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40330  0019B4  6F9A               	movwf	___lmul@multiplier& (0+255),b
 40331  0019B6  0E00               	movlw	0
 40332  0019B8  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40333  0019BA  6F9B               	movwf	(___lmul@multiplier+1)& (0+255),b
 40334  0019BC  0E00               	movlw	0
 40335  0019BE  21C1               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 40336  0019C0  6F9C               	movwf	(___lmul@multiplier+2)& (0+255),b
 40337  0019C2  0E00               	movlw	0
 40338  0019C4  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 40339  0019C6  6F9D               	movwf	(___lmul@multiplier+3)& (0+255),b
 40340  0019C8  C2DF  F09E         	movff	_loRa+219,___lmul@multiplicand
 40341  0019CC  C2E0  F09F         	movff	_loRa+220,___lmul@multiplicand+1
 40342  0019D0  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40343  0019D2  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40344  0019D4  EC1B  F057         	call	___lmul	;wreg free
 40345  0019D8  0EFF               	movlw	255
 40346  0019DA  0100               	movlb	0	; () banked
 40347  0019DC  259A               	addwf	?___lmul& (0+255),w,b
 40348  0019DE  6FD6               	movwf	_LORAWAN_TxDone$7023& (0+255),b
 40349  0019E0  0EFF               	movlw	255
 40350  0019E2  219B               	addwfc	(?___lmul+1)& (0+255),w,b
 40351  0019E4  6FD7               	movwf	(_LORAWAN_TxDone$7023+1)& (0+255),b
 40352  0019E6  0EFF               	movlw	255
 40353  0019E8  219C               	addwfc	(?___lmul+2)& (0+255),w,b
 40354  0019EA  6FD8               	movwf	(_LORAWAN_TxDone$7023+2)& (0+255),b
 40355  0019EC  0EFF               	movlw	255
 40356  0019EE  219D               	addwfc	(?___lmul+3)& (0+255),w,b
 40357  0019F0  6FD9               	movwf	(_LORAWAN_TxDone$7023+3)& (0+255),b
 40358                           
 40359                           ;lorawan_eu.c: 398: }
 40360                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 40361  0019F2  C0D6  F09A         	movff	_LORAWAN_TxDone$7023,___lmul@multiplier
 40362  0019F6  C0D7  F09B         	movff	_LORAWAN_TxDone$7023+1,___lmul@multiplier+1
 40363  0019FA  C0D8  F09C         	movff	_LORAWAN_TxDone$7023+2,___lmul@multiplier+2
 40364  0019FE  C0D9  F09D         	movff	_LORAWAN_TxDone$7023+3,___lmul@multiplier+3
 40365  001A02  C0BB  F09E         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 40366  001A06  C0BC  F09F         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 40367  001A0A  6BA0               	clrf	(___lmul@multiplicand+2)& (0+255),b
 40368  001A0C  6BA1               	clrf	(___lmul@multiplicand+3)& (0+255),b
 40369  001A0E  EC1B  F057         	call	___lmul	;wreg free
 40370  001A12                     L18:
 40371  001A12  0100               	movlb	0	; () banked
 40372  001A14  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40373  001A16  0D0E               	mullw	14
 40374  001A18  0E08               	movlw	8
 40375  001A1A  26F3               	addwf	prodl,f,c
 40376  001A1C  0E00               	movlw	0
 40377  001A1E  22F4               	addwfc	prodh,f,c
 40378  001A20  0E00               	movlw	low _Channels
 40379  001A22  24F3               	addwf	prodl,w,c
 40380  001A24  6ED9               	movwf	fsr2l,c
 40381  001A26  0E04               	movlw	high _Channels
 40382  001A28  20F4               	addwfc	prodh,w,c
 40383  001A2A  6EDA               	movwf	fsr2h,c
 40384  001A2C  C09A  FFDE         	movff	?___lmul,postinc2
 40385  001A30  C09B  FFDE         	movff	?___lmul+1,postinc2
 40386  001A34  C09C  FFDE         	movff	?___lmul+2,postinc2
 40387  001A38  C09D  FFDE         	movff	?___lmul+3,postinc2
 40388                           
 40389                           ; BSR set to: 0
 40390                           ;lorawan_eu.c: 401: }
 40391                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 40392  001A3C  0102               	movlb	2	; () banked
 40393  001A3E  51ED               	movf	(_loRa+233)& (0+255),w,b
 40394  001A40  EC18  F05E         	call	_SwTimerIsRunning
 40395  001A44  0900               	iorlw	0
 40396  001A46  B4D8               	btfsc	status,2,c
 40397  001A48  D08A               	goto	l1361
 40398                           
 40399                           ;lorawan_eu.c: 404: {
 40400                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 40401  001A4A  0102               	movlb	2	; () banked
 40402  001A4C  51ED               	movf	(_loRa+233)& (0+255),w,b
 40403  001A4E  ECA6  F05E         	call	_SwTimerStop
 40404                           
 40405                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 40406  001A52  0102               	movlb	2	; () banked
 40407  001A54  51ED               	movf	(_loRa+233)& (0+255),w,b
 40408  001A56  EC7B  F05B         	call	_SwTimerReadValue
 40409  001A5A  C091  F0DA         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 40410  001A5E  C092  F0DB         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 40411  001A62  C093  F0DC         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 40412  001A66  C094  F0DD         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 40413                           
 40414                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 40415  001A6A  0100               	movlb	0	; () banked
 40416  001A6C  51DD               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 40417  001A6E  E108               	bnz	u23670
 40418  001A70  0E1F               	movlw	31
 40419  001A72  5DDA               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 40420  001A74  0EAC               	movlw	172
 40421  001A76  59DB               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 40422  001A78  0EDF               	movlw	223
 40423  001A7A  59DC               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 40424  001A7C  A0D8               	btfss	status,0,c
 40425  001A7E  D024               	goto	l1363
 40426  001A80                     u23670:
 40427                           
 40428                           ; BSR set to: 0
 40429  001A80  C0DA  F0BD         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 40430  001A84  C0DB  F0BE         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 40431  001A88  C0DC  F0BF         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 40432  001A8C  C0DD  F0C0         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 40433  001A90  0E0D               	movlw	13
 40434  001A92  D005               	goto	u23680
 40435  001A94                     u23685:
 40436  001A94  90D8               	bcf	status,0,c
 40437  001A96  33C0               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40438  001A98  33BF               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40439  001A9A  33BE               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40440  001A9C  33BD               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 40441  001A9E                     u23680:
 40442  001A9E  2EE8               	decfsz	wreg,f,c
 40443  001AA0  D7F9               	goto	u23685
 40444  001AA2  C0BD  F09A         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 40445  001AA6  C0BE  F09B         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 40446  001AAA  C0BF  F09C         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 40447  001AAE  C0C0  F09D         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 40448  001AB2  0E7D               	movlw	125
 40449  001AB4  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40450  001AB6  0E00               	movlw	0
 40451  001AB8  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40452  001ABA  0E00               	movlw	0
 40453  001ABC  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40454  001ABE  0E00               	movlw	0
 40455  001AC0  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40456  001AC2  EC1B  F057         	call	___lmul	;wreg free
 40457  001AC6  D01D               	goto	L19
 40458  001AC8                     l1363:
 40459  001AC8  C0DA  F09A         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 40460  001ACC  C0DB  F09B         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 40461  001AD0  C0DC  F09C         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 40462  001AD4  C0DD  F09D         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 40463  001AD8  0E7D               	movlw	125
 40464  001ADA  0100               	movlb	0	; () banked
 40465  001ADC  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 40466  001ADE  0E00               	movlw	0
 40467  001AE0  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40468  001AE2  0E00               	movlw	0
 40469  001AE4  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40470  001AE6  0E00               	movlw	0
 40471  001AE8  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40472  001AEA  EC1B  F057         	call	___lmul	;wreg free
 40473  001AEE  0E0D               	movlw	13
 40474  001AF0  D006               	goto	u23690
 40475  001AF2                     u23695:
 40476  001AF2  0100               	movlb	0	; () banked
 40477  001AF4  90D8               	bcf	status,0,c
 40478  001AF6  339D               	rrcf	(?___lmul+3)& (0+255),f,b
 40479  001AF8  339C               	rrcf	(?___lmul+2)& (0+255),f,b
 40480  001AFA  339B               	rrcf	(?___lmul+1)& (0+255),f,b
 40481  001AFC  339A               	rrcf	?___lmul& (0+255),f,b
 40482  001AFE                     u23690:
 40483  001AFE  2EE8               	decfsz	wreg,f,c
 40484  001B00  D7F8               	goto	u23695
 40485  001B02                     L19:
 40486  001B02  C09A  F0C9         	movff	?___lmul,_LORAWAN_TxDone$2066
 40487  001B06  C09B  F0CA         	movff	?___lmul+1,_LORAWAN_TxDone$2066+1
 40488  001B0A  C09C  F0CB         	movff	?___lmul+2,_LORAWAN_TxDone$2066+2
 40489  001B0E  C09D  F0CC         	movff	?___lmul+3,_LORAWAN_TxDone$2066+3
 40490                           
 40491                           ; BSR set to: 0
 40492  001B12  C0C9  F0BD         	movff	_LORAWAN_TxDone$2066,??_LORAWAN_TxDone
 40493  001B16  C0CA  F0BE         	movff	_LORAWAN_TxDone$2066+1,??_LORAWAN_TxDone+1
 40494  001B1A  C0CB  F0BF         	movff	_LORAWAN_TxDone$2066+2,??_LORAWAN_TxDone+2
 40495  001B1E  C0CC  F0C0         	movff	_LORAWAN_TxDone$2066+3,??_LORAWAN_TxDone+3
 40496  001B22  0100               	movlb	0	; () banked
 40497  001B24  1FBD               	comf	??_LORAWAN_TxDone& (0+255),f,b
 40498  001B26  1FBE               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40499  001B28  1FBF               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40500  001B2A  1FC0               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40501  001B2C  2BBD               	incf	??_LORAWAN_TxDone& (0+255),f,b
 40502  001B2E  0E00               	movlw	0
 40503  001B30  23BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40504  001B32  23BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40505  001B34  23C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40506  001B36  0102               	movlb	2	; () banked
 40507  001B38  51CC               	movf	(_loRa+200)& (0+255),w,b
 40508  001B3A  0100               	movlb	0	; () banked
 40509  001B3C  25BD               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 40510  001B3E  6FD2               	movwf	LORAWAN_TxDone@delta& (0+255),b
 40511  001B40  0102               	movlb	2	; () banked
 40512  001B42  51CD               	movf	(_loRa+201)& (0+255),w,b
 40513  001B44  0100               	movlb	0	; () banked
 40514  001B46  21BE               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40515  001B48  6FD3               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 40516  001B4A  0102               	movlb	2	; () banked
 40517  001B4C  51CE               	movf	(_loRa+202)& (0+255),w,b
 40518  001B4E  0100               	movlb	0	; () banked
 40519  001B50  21BF               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40520  001B52  6FD4               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 40521  001B54  0102               	movlb	2	; () banked
 40522  001B56  51CF               	movf	(_loRa+203)& (0+255),w,b
 40523  001B58  0100               	movlb	0	; () banked
 40524  001B5A  21C0               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40525  001B5C  6FD5               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 40526  001B5E                     l1361:
 40527                           
 40528                           ;lorawan_eu.c: 409: }
 40529                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 40530                           
 40531                           ; BSR set to: 0
 40532  001B5E  0E00               	movlw	0
 40533  001B60  0100               	movlb	0	; () banked
 40534  001B62  6FE2               	movwf	LORAWAN_TxDone@i& (0+255),b
 40535  001B64                     l20302:
 40536                           
 40537                           ; BSR set to: 0
 40538  001B64  0E0F               	movlw	15
 40539  001B66  65E2               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 40540  001B68  D001               	goto	l1366
 40541  001B6A  D0D4               	goto	u23770
 40542  001B6C                     l1366:
 40543                           
 40544                           ; BSR set to: 0
 40545                           ;lorawan_eu.c: 412: {
 40546                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 40547                           
 40548                           ; BSR set to: 0
 40549  001B6C  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40550  001B6E  0D0E               	mullw	14
 40551  001B70  0E04               	movlw	4
 40552  001B72  26F3               	addwf	prodl,f,c
 40553  001B74  0E00               	movlw	0
 40554  001B76  22F4               	addwfc	prodh,f,c
 40555  001B78  0E00               	movlw	low _Channels
 40556  001B7A  24F3               	addwf	prodl,w,c
 40557  001B7C  6ED9               	movwf	fsr2l,c
 40558  001B7E  0E04               	movlw	high _Channels
 40559  001B80  20F4               	addwfc	prodh,w,c
 40560  001B82  6EDA               	movwf	fsr2h,c
 40561  001B84  04DE               	decf	postinc2,w,c
 40562  001B86  A4D8               	btfss	status,2,c
 40563  001B88  D0C3               	goto	l1372
 40564                           
 40565                           ; BSR set to: 0
 40566  001B8A  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40567  001B8C  0D0E               	mullw	14
 40568  001B8E  0E08               	movlw	8
 40569  001B90  26F3               	addwf	prodl,f,c
 40570  001B92  0E00               	movlw	0
 40571  001B94  22F4               	addwfc	prodh,f,c
 40572  001B96  0E00               	movlw	low _Channels
 40573  001B98  24F3               	addwf	prodl,w,c
 40574  001B9A  6ED9               	movwf	fsr2l,c
 40575  001B9C  0E04               	movlw	high _Channels
 40576  001B9E  20F4               	addwfc	prodh,w,c
 40577  001BA0  6EDA               	movwf	fsr2h,c
 40578  001BA2  50DE               	movf	postinc2,w,c
 40579  001BA4  10DE               	iorwf	postinc2,w,c
 40580  001BA6  10DE               	iorwf	postinc2,w,c
 40581  001BA8  10DE               	iorwf	postinc2,w,c
 40582  001BAA  B4D8               	btfsc	status,2,c
 40583  001BAC  D0B1               	goto	l1372
 40584                           
 40585                           ; BSR set to: 0
 40586                           ;lorawan_eu.c: 414: {
 40587                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 40588  001BAE  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40589  001BB0  0102               	movlb	2	; () banked
 40590  001BB2  19DE               	xorwf	(_loRa+218)& (0+255),w,b
 40591  001BB4  B4D8               	btfsc	status,2,c
 40592  001BB6  D06D               	goto	l1371
 40593                           
 40594                           ; BSR set to: 2
 40595                           ;lorawan_eu.c: 416: {
 40596                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 40597  001BB8  0100               	movlb	0	; () banked
 40598  001BBA  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40599  001BBC  0D0E               	mullw	14
 40600  001BBE  0E08               	movlw	8
 40601  001BC0  26F3               	addwf	prodl,f,c
 40602  001BC2  0E00               	movlw	0
 40603  001BC4  22F4               	addwfc	prodh,f,c
 40604  001BC6  0E00               	movlw	low _Channels
 40605  001BC8  24F3               	addwf	prodl,w,c
 40606  001BCA  6ED9               	movwf	fsr2l,c
 40607  001BCC  0E04               	movlw	high _Channels
 40608  001BCE  20F4               	addwfc	prodh,w,c
 40609  001BD0  6EDA               	movwf	fsr2h,c
 40610  001BD2  50DE               	movf	postinc2,w,c
 40611  001BD4  5DD2               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 40612  001BD6  50DE               	movf	postinc2,w,c
 40613  001BD8  59D3               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 40614  001BDA  50DE               	movf	postinc2,w,c
 40615  001BDC  59D4               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 40616  001BDE  50DE               	movf	postinc2,w,c
 40617  001BE0  59D5               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 40618  001BE2  B0D8               	btfsc	status,0,c
 40619  001BE4  D046               	goto	l1370
 40620                           
 40621                           ; BSR set to: 0
 40622                           ;lorawan_eu.c: 418: {
 40623                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 40624  001BE6  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40625  001BE8  0D0E               	mullw	14
 40626  001BEA  0E08               	movlw	8
 40627  001BEC  26F3               	addwf	prodl,f,c
 40628  001BEE  0E00               	movlw	0
 40629  001BF0  22F4               	addwfc	prodh,f,c
 40630  001BF2  0E00               	movlw	low _Channels
 40631  001BF4  24F3               	addwf	prodl,w,c
 40632  001BF6  6ED9               	movwf	fsr2l,c
 40633  001BF8  0E04               	movlw	high _Channels
 40634  001BFA  20F4               	addwfc	prodh,w,c
 40635  001BFC  6EDA               	movwf	fsr2h,c
 40636  001BFE  CFDE F0BD          	movff	postinc2,??_LORAWAN_TxDone
 40637  001C02  CFDE F0BE          	movff	postinc2,??_LORAWAN_TxDone+1
 40638  001C06  CFDE F0BF          	movff	postinc2,??_LORAWAN_TxDone+2
 40639  001C0A  CFDE F0C0          	movff	postinc2,??_LORAWAN_TxDone+3
 40640  001C0E  C0D2  F0C1         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 40641  001C12  C0D3  F0C2         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 40642  001C16  C0D4  F0C3         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 40643  001C1A  C0D5  F0C4         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 40644  001C1E  1FC1               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40645  001C20  1FC2               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 40646  001C22  1FC3               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 40647  001C24  1FC4               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 40648  001C26  2BC1               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 40649  001C28  0E00               	movlw	0
 40650  001C2A  23C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 40651  001C2C  23C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 40652  001C2E  23C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 40653  001C30  51BD               	movf	??_LORAWAN_TxDone& (0+255),w,b
 40654  001C32  25C1               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 40655  001C34  6FC5               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 40656  001C36  51BE               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 40657  001C38  21C2               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 40658  001C3A  6FC6               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 40659  001C3C  51BF               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 40660  001C3E  21C3               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 40661  001C40  6FC7               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 40662  001C42  51C0               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 40663  001C44  21C4               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 40664  001C46  6FC8               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 40665  001C48  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40666  001C4A  0D0E               	mullw	14
 40667  001C4C  0E08               	movlw	8
 40668  001C4E  26F3               	addwf	prodl,f,c
 40669  001C50  0E00               	movlw	0
 40670  001C52  22F4               	addwfc	prodh,f,c
 40671  001C54  0E00               	movlw	low _Channels
 40672  001C56  24F3               	addwf	prodl,w,c
 40673  001C58  6ED9               	movwf	fsr2l,c
 40674  001C5A  0E04               	movlw	high _Channels
 40675  001C5C  20F4               	addwfc	prodh,w,c
 40676  001C5E  6EDA               	movwf	fsr2h,c
 40677  001C60  C0C5  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 40678  001C64  C0C6  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 40679  001C68  C0C7  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 40680  001C6C  C0C8  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 40681                           
 40682                           ;lorawan_eu.c: 420: }
 40683  001C70  D010               	goto	l1371
 40684  001C72                     l1370:
 40685                           
 40686                           ; BSR set to: 0
 40687                           ;lorawan_eu.c: 421: else
 40688                           ;lorawan_eu.c: 422: {
 40689                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 40690                           
 40691                           ; BSR set to: 0
 40692  001C72  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40693  001C74  0D0E               	mullw	14
 40694  001C76  0E08               	movlw	8
 40695  001C78  26F3               	addwf	prodl,f,c
 40696  001C7A  0E00               	movlw	0
 40697  001C7C  22F4               	addwfc	prodh,f,c
 40698  001C7E  0E00               	movlw	low _Channels
 40699  001C80  24F3               	addwf	prodl,w,c
 40700  001C82  6ED9               	movwf	fsr2l,c
 40701  001C84  0E04               	movlw	high _Channels
 40702  001C86  20F4               	addwfc	prodh,w,c
 40703  001C88  6EDA               	movwf	fsr2h,c
 40704  001C8A  6ADE               	clrf	postinc2,c
 40705  001C8C  6ADE               	clrf	postinc2,c
 40706  001C8E  6ADE               	clrf	postinc2,c
 40707  001C90  6ADD               	clrf	postdec2,c
 40708  001C92                     l1371:
 40709                           
 40710                           ;lorawan_eu.c: 424: }
 40711                           ;lorawan_eu.c: 425: }
 40712                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 40713                           
 40714                           ; BSR set to: 0
 40715  001C92  0100               	movlb	0	; () banked
 40716  001C94  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40717  001C96  0D0E               	mullw	14
 40718  001C98  0E08               	movlw	8
 40719  001C9A  26F3               	addwf	prodl,f,c
 40720  001C9C  0E00               	movlw	0
 40721  001C9E  22F4               	addwfc	prodh,f,c
 40722  001CA0  0E00               	movlw	low _Channels
 40723  001CA2  24F3               	addwf	prodl,w,c
 40724  001CA4  6ED9               	movwf	fsr2l,c
 40725  001CA6  0E04               	movlw	high _Channels
 40726  001CA8  20F4               	addwfc	prodh,w,c
 40727  001CAA  6EDA               	movwf	fsr2h,c
 40728  001CAC  50DE               	movf	postinc2,w,c
 40729  001CAE  5DDE               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 40730  001CB0  50DE               	movf	postinc2,w,c
 40731  001CB2  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 40732  001CB4  50DE               	movf	postinc2,w,c
 40733  001CB6  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 40734  001CB8  50DE               	movf	postinc2,w,c
 40735  001CBA  59E1               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 40736  001CBC  A0D8               	btfss	status,0,c
 40737  001CBE  D028               	goto	l1372
 40738                           
 40739                           ; BSR set to: 0
 40740  001CC0  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40741  001CC2  0D0E               	mullw	14
 40742  001CC4  0E08               	movlw	8
 40743  001CC6  26F3               	addwf	prodl,f,c
 40744  001CC8  0E00               	movlw	0
 40745  001CCA  22F4               	addwfc	prodh,f,c
 40746  001CCC  0E00               	movlw	low _Channels
 40747  001CCE  24F3               	addwf	prodl,w,c
 40748  001CD0  6ED9               	movwf	fsr2l,c
 40749  001CD2  0E04               	movlw	high _Channels
 40750  001CD4  20F4               	addwfc	prodh,w,c
 40751  001CD6  6EDA               	movwf	fsr2h,c
 40752  001CD8  50DE               	movf	postinc2,w,c
 40753  001CDA  10DE               	iorwf	postinc2,w,c
 40754  001CDC  10DE               	iorwf	postinc2,w,c
 40755  001CDE  10DE               	iorwf	postinc2,w,c
 40756  001CE0  B4D8               	btfsc	status,2,c
 40757  001CE2  D016               	goto	l1372
 40758                           
 40759                           ; BSR set to: 0
 40760                           ;lorawan_eu.c: 427: {
 40761                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 40762  001CE4  51E2               	movf	LORAWAN_TxDone@i& (0+255),w,b
 40763  001CE6  0D0E               	mullw	14
 40764  001CE8  0E08               	movlw	8
 40765  001CEA  26F3               	addwf	prodl,f,c
 40766  001CEC  0E00               	movlw	0
 40767  001CEE  22F4               	addwfc	prodh,f,c
 40768  001CF0  0E00               	movlw	low _Channels
 40769  001CF2  24F3               	addwf	prodl,w,c
 40770  001CF4  6ED9               	movwf	fsr2l,c
 40771  001CF6  0E04               	movlw	high _Channels
 40772  001CF8  20F4               	addwfc	prodh,w,c
 40773  001CFA  6EDA               	movwf	fsr2h,c
 40774  001CFC  CFDE F0DE          	movff	postinc2,LORAWAN_TxDone@minim
 40775  001D00  CFDE F0DF          	movff	postinc2,LORAWAN_TxDone@minim+1
 40776  001D04  CFDE F0E0          	movff	postinc2,LORAWAN_TxDone@minim+2
 40777  001D08  CFDE F0E1          	movff	postinc2,LORAWAN_TxDone@minim+3
 40778                           
 40779                           ; BSR set to: 0
 40780                           ;lorawan_eu.c: 429: found = 1;
 40781  001D0C  0E01               	movlw	1
 40782  001D0E  6FD1               	movwf	LORAWAN_TxDone@found& (0+255),b
 40783  001D10                     l1372:
 40784                           
 40785                           ; BSR set to: 0
 40786                           
 40787                           ; BSR set to: 0
 40788                           
 40789                           ; BSR set to: 0
 40790  001D10  2BE2               	incf	LORAWAN_TxDone@i& (0+255),f,b
 40791  001D12  D728               	goto	l20302
 40792  001D14                     u23770:
 40793                           
 40794                           ; BSR set to: 0
 40795                           ;lorawan_eu.c: 430: }
 40796                           ;lorawan_eu.c: 431: }
 40797                           ;lorawan_eu.c: 432: }
 40798                           ;lorawan_eu.c: 433: if (found == 1)
 40799                           
 40800                           ; BSR set to: 0
 40801  001D14  05D1               	decf	LORAWAN_TxDone@found& (0+255),w,b
 40802  001D16  A4D8               	btfss	status,2,c
 40803  001D18  D067               	goto	l1373
 40804                           
 40805                           ; BSR set to: 0
 40806                           ;lorawan_eu.c: 434: {
 40807                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 40808  001D1A  C0DE  F2CC         	movff	LORAWAN_TxDone@minim,_loRa+200
 40809  001D1E  C0DF  F2CD         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 40810  001D22  C0E0  F2CE         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 40811  001D26  C0E1  F2CF         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 40812                           
 40813                           ; BSR set to: 0
 40814                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 40815  001D2A  51E1               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 40816  001D2C  E107               	bnz	u23790
 40817  001D2E  29DE               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 40818  001D30  0EFF               	movlw	255
 40819  001D32  59DF               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 40820  001D34  0E0F               	movlw	15
 40821  001D36  59E0               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 40822  001D38  A0D8               	btfss	status,0,c
 40823  001D3A  D01C               	goto	l1375
 40824  001D3C                     u23790:
 40825                           
 40826                           ; BSR set to: 0
 40827  001D3C  C0DE  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 40828  001D40  C0DF  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 40829  001D44  C0E0  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 40830  001D48  C0E1  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 40831  001D4C  0E7D               	movlw	125
 40832  001D4E  6F64               	movwf	___lldiv@divisor& (0+255),b
 40833  001D50  0E00               	movlw	0
 40834  001D52  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40835  001D54  0E00               	movlw	0
 40836  001D56  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40837  001D58  0E00               	movlw	0
 40838  001D5A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40839  001D5C  ECAE  F050         	call	___lldiv	;wreg free
 40840  001D60  0E0C               	movlw	12
 40841  001D62                     u23805:
 40842  001D62  90D8               	bcf	status,0,c
 40843  001D64  0100               	movlb	0	; () banked
 40844  001D66  3760               	rlcf	?___lldiv& (0+255),f,b
 40845  001D68  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 40846  001D6A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 40847  001D6C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 40848  001D6E  2EE8               	decfsz	wreg,f,c
 40849  001D70  D7F8               	goto	u23805
 40850  001D72  D022               	goto	L20
 40851  001D74                     l1375:
 40852                           
 40853                           ; BSR set to: 0
 40854                           
 40855                           ; BSR set to: 0
 40856  001D74  C0DE  F0BD         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 40857  001D78  C0DF  F0BE         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 40858  001D7C  C0E0  F0BF         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 40859  001D80  C0E1  F0C0         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 40860  001D84  0E0C               	movlw	12
 40861  001D86                     u23815:
 40862  001D86  90D8               	bcf	status,0,c
 40863  001D88  37BD               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 40864  001D8A  37BE               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 40865  001D8C  37BF               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 40866  001D8E  37C0               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 40867  001D90  2EE8               	decfsz	wreg,f,c
 40868  001D92  D7F9               	goto	u23815
 40869  001D94  C0BD  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 40870  001D98  C0BE  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 40871  001D9C  C0BF  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 40872  001DA0  C0C0  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 40873  001DA4  0E7D               	movlw	125
 40874  001DA6  6F64               	movwf	___lldiv@divisor& (0+255),b
 40875  001DA8  0E00               	movlw	0
 40876  001DAA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 40877  001DAC  0E00               	movlw	0
 40878  001DAE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 40879  001DB0  0E00               	movlw	0
 40880  001DB2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 40881  001DB4  ECAE  F050         	call	___lldiv	;wreg free
 40882  001DB8                     L20:
 40883  001DB8  C060  F0CD         	movff	?___lldiv,_LORAWAN_TxDone$2067
 40884  001DBC  C061  F0CE         	movff	?___lldiv+1,_LORAWAN_TxDone$2067+1
 40885  001DC0  C062  F0CF         	movff	?___lldiv+2,_LORAWAN_TxDone$2067+2
 40886  001DC4  C063  F0D0         	movff	?___lldiv+3,_LORAWAN_TxDone$2067+3
 40887  001DC8  C0CD  F06D         	movff	_LORAWAN_TxDone$2067,SwTimerSetTimeout@timeout
 40888  001DCC  C0CE  F06E         	movff	_LORAWAN_TxDone$2067+1,SwTimerSetTimeout@timeout+1
 40889  001DD0  C0CF  F06F         	movff	_LORAWAN_TxDone$2067+2,SwTimerSetTimeout@timeout+2
 40890  001DD4  C0D0  F070         	movff	_LORAWAN_TxDone$2067+3,SwTimerSetTimeout@timeout+3
 40891  001DD8  0102               	movlb	2	; () banked
 40892  001DDA  51ED               	movf	(_loRa+233)& (0+255),w,b
 40893  001DDC  ECD5  F05A         	call	_SwTimerSetTimeout
 40894                           
 40895                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 40896  001DE0  0102               	movlb	2	; () banked
 40897  001DE2  51ED               	movf	(_loRa+233)& (0+255),w,b
 40898  001DE4  EC5A  F04D         	call	_SwTimerStart
 40899  001DE8                     l1373:
 40900                           
 40901                           ;lorawan_eu.c: 438: }
 40902                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 40903  001DE8  0E02               	movlw	2
 40904  001DEA  0102               	movlb	2	; () banked
 40905  001DEC  1916               	xorwf	(_loRa+18)& (0+255),w,b
 40906  001DEE  A4D8               	btfss	status,2,c
 40907  001DF0  0012               	return	
 40908                           
 40909                           ; BSR set to: 2
 40910                           ;lorawan_eu.c: 440: {
 40911                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 40912  001DF2  5106               	movf	(_loRa+2)& (0+255),w,b
 40913  001DF4  0BF0               	andlw	-16
 40914  001DF6  0908               	iorlw	8
 40915  001DF8  6F06               	movwf	(_loRa+2)& (0+255),b
 40916                           
 40917                           ; BSR set to: 2
 40918                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 40919  001DFA  EC70  F051         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 40920                           
 40921                           ;lorawan_eu.c: 443: }
 40922                           ;lorawan_eu.c: 444: }
 40923  001DFE  0012               	return	
 40924  001E00                     l1357:
 40925                           
 40926                           ;lorawan_eu.c: 445: else
 40927                           ;lorawan_eu.c: 446: {
 40928                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 40929  001E00  EC37  F063         	call	_RADIO_GetStatus	;wreg free
 40930  001E04  0100               	movlb	0	; () banked
 40931  001E06  6FBD               	movwf	??_LORAWAN_TxDone& (0+255),b
 40932  001E08  A9BD               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 40933  001E0A  D014               	goto	l1380
 40934                           
 40935                           ; BSR set to: 0
 40936                           ;lorawan_eu.c: 448: {
 40937                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 40938  001E0C  0E00               	movlw	0
 40939  001E0E  6F60               	movwf	RxData@pData& (0+255),b
 40940  001E10  0E00               	movlw	0
 40941  001E12  6F61               	movwf	(RxData@pData+1)& (0+255),b
 40942  001E14  0E00               	movlw	0
 40943  001E16  6F62               	movwf	RxData@dataLength& (0+255),b
 40944  001E18  0E02               	movlw	2
 40945  001E1A  6F63               	movwf	RxData@status& (0+255),b
 40946  001E1C  D801               	call	u23848
 40947  001E1E  0012               	return	
 40948  001E20                     u23848:
 40949  001E20  0005               	push	
 40950  001E22  6EFA               	movwf	pclath,c
 40951  001E24  0101               	movlb	1	; () banked
 40952  001E26  510C               	movf	_rxPayload& (0+255),w,b
 40953  001E28  6EFD               	movwf	tosl,c
 40954  001E2A  510D               	movf	(_rxPayload+1)& (0+255),w,b
 40955  001E2C  6EFE               	movwf	tosh,c
 40956  001E2E  6AFF               	clrf	tosu,c
 40957  001E30  50FA               	movf	pclath,w,c
 40958  001E32  0012               	return		;indir
 40959  001E34                     l1380:
 40960                           
 40961                           ;lorawan_eu.c: 452: else
 40962                           ;lorawan_eu.c: 453: {
 40963                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 40964  001E34  0101               	movlb	1	; () banked
 40965  001E36  510C               	movf	_rxPayload& (0+255),w,b
 40966  001E38  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 40967  001E3A  B4D8               	btfsc	status,2,c
 40968  001E3C  0012               	return	
 40969                           
 40970                           ; BSR set to: 1
 40971                           ;lorawan_eu.c: 456: {
 40972                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 40973  001E3E  0E00               	movlw	0
 40974  001E40  0100               	movlb	0	; () banked
 40975  001E42  6F60               	movwf	RxData@pData& (0+255),b
 40976  001E44  0E00               	movlw	0
 40977  001E46  6F61               	movwf	(RxData@pData+1)& (0+255),b
 40978  001E48  0E00               	movlw	0
 40979  001E4A  6F62               	movwf	RxData@dataLength& (0+255),b
 40980  001E4C  0E03               	movlw	3
 40981  001E4E  6F63               	movwf	RxData@status& (0+255),b
 40982  001E50  D801               	call	u23868
 40983  001E52  0012               	return	
 40984  001E54                     u23868:
 40985  001E54  0005               	push	
 40986  001E56  6EFA               	movwf	pclath,c
 40987  001E58  0101               	movlb	1	; () banked
 40988  001E5A  510C               	movf	_rxPayload& (0+255),w,b
 40989  001E5C  6EFD               	movwf	tosl,c
 40990  001E5E  510D               	movf	(_rxPayload+1)& (0+255),w,b
 40991  001E60  6EFE               	movwf	tosh,c
 40992  001E62  6AFF               	clrf	tosu,c
 40993  001E64  50FA               	movf	pclath,w,c
 40994  001E66  0012               	return		;indir
 40995  001E68                     __end_of_LORAWAN_TxDone:
 40996                           	opt stack 0
 40997                           tosu	equ	0xFFF
 40998                           tosh	equ	0xFFE
 40999                           tosl	equ	0xFFD
 41000                           pclath	equ	0xFFA
 41001                           tblptru	equ	0xFF8
 41002                           tblptrh	equ	0xFF7
 41003                           tblptrl	equ	0xFF6
 41004                           tablat	equ	0xFF5
 41005                           prodh	equ	0xFF4
 41006                           prodl	equ	0xFF3
 41007                           intcon	equ	0xFF2
 41008                           intcon2	equ	0xFF1
 41009                           intcon3	equ	0xFF0
 41010                           indf0	equ	0xFEF
 41011                           postinc0	equ	0xFEE
 41012                           fsr0h	equ	0xFEA
 41013                           fsr0l	equ	0xFE9
 41014                           wreg	equ	0xFE8
 41015                           postinc1	equ	0xFE6
 41016                           postdec1	equ	0xFE5
 41017                           plusw1	equ	0xFE3
 41018                           fsr1h	equ	0xFE2
 41019                           fsr1l	equ	0xFE1
 41020                           indf2	equ	0xFDF
 41021                           postinc2	equ	0xFDE
 41022                           postdec2	equ	0xFDD
 41023                           plusw2	equ	0xFDB
 41024                           fsr2h	equ	0xFDA
 41025                           fsr2l	equ	0xFD9
 41026                           status	equ	0xFD8
 41027                           
 41028 ;; *************** function _SwTimerReadValue *****************
 41029 ;; Defined at:
 41030 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41031 ;; Parameters:    Size  Location     Type
 41032 ;;  timerId         1    wreg     unsigned char 
 41033 ;; Auto vars:     Size  Location     Type
 41034 ;;  timerId         1   57[BANK0 ] unsigned char 
 41035 ;;  ticksCount      4   53[BANK0 ] unsigned long 
 41036 ;; Return value:  Size  Location     Type
 41037 ;;                  4   49[BANK0 ] unsigned long 
 41038 ;; Registers used:
 41039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41040 ;; Tracked objects:
 41041 ;;		On entry : 0/0
 41042 ;;		On exit  : 0/0
 41043 ;;		Unchanged: 0/0
 41044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41046 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41048 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41049 ;;Total ram usage:        9 bytes
 41050 ;; Hardware stack levels used:    1
 41051 ;; Hardware stack levels required when called:   10
 41052 ;; This function calls:
 41053 ;;		_SwTimersInterrupt
 41054 ;; This function is called by:
 41055 ;;		_RADIO_TxDone
 41056 ;;		_RADIO_FSKPacketSent
 41057 ;;		_LORAWAN_TxDone
 41058 ;;		_LORAWAN_Pause
 41059 ;; This function uses a non-reentrant model
 41060 ;;
 41061                           
 41062                           	psect	text218
 41063  00B6F6                     __ptext218:
 41064                           	opt stack 0
 41065  00B6F6                     _SwTimerReadValue:
 41066                           	opt stack 16
 41067                           
 41068                           ;incstack = 0
 41069                           ;SwTimerReadValue@timerId stored from wreg
 41070  00B6F6  0100               	movlb	0	; () banked
 41071  00B6F8  6F99               	movwf	SwTimerReadValue@timerId& (0+255),b
 41072                           
 41073                           ;sw_timer.c: 195: uint32_t ticksCount;
 41074                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 41075  00B6FA  9EF2               	bcf	intcon,7,c	;volatile
 41076                           
 41077                           ;sw_timer.c: 200: SwTimersInterrupt();
 41078  00B6FC  ECDB  F042         	call	_SwTimersInterrupt	;wreg free
 41079                           
 41080                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 41081  00B700  0100               	movlb	0	; () banked
 41082  00B702  5199               	movf	SwTimerReadValue@timerId& (0+255),w,b
 41083  00B704  0D08               	mullw	8
 41084  00B706  0E00               	movlw	low _swTimers
 41085  00B708  24F3               	addwf	prodl,w,c
 41086  00B70A  6ED9               	movwf	fsr2l,c
 41087  00B70C  0E03               	movlw	high _swTimers
 41088  00B70E  20F4               	addwfc	prodh,w,c
 41089  00B710  6EDA               	movwf	fsr2h,c
 41090  00B712  CFDE F095          	movff	postinc2,SwTimerReadValue@ticksCount
 41091  00B716  CFDE F096          	movff	postinc2,SwTimerReadValue@ticksCount+1
 41092  00B71A  CFDE F097          	movff	postinc2,SwTimerReadValue@ticksCount+2
 41093  00B71E  CFDE F098          	movff	postinc2,SwTimerReadValue@ticksCount+3
 41094                           
 41095                           ; BSR set to: 0
 41096                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 41097  00B722  8EF2               	bsf	intcon,7,c	;volatile
 41098                           
 41099                           ; BSR set to: 0
 41100                           ;sw_timer.c: 204: return ticksCount;
 41101  00B724  C095  F091         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 41102  00B728  C096  F092         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 41103  00B72C  C097  F093         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 41104  00B730  C098  F094         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 41105  00B734  0012               	return	
 41106  00B736                     __end_of_SwTimerReadValue:
 41107                           	opt stack 0
 41108                           tosu	equ	0xFFF
 41109                           tosh	equ	0xFFE
 41110                           tosl	equ	0xFFD
 41111                           pclath	equ	0xFFA
 41112                           tblptru	equ	0xFF8
 41113                           tblptrh	equ	0xFF7
 41114                           tblptrl	equ	0xFF6
 41115                           tablat	equ	0xFF5
 41116                           prodh	equ	0xFF4
 41117                           prodl	equ	0xFF3
 41118                           intcon	equ	0xFF2
 41119                           intcon2	equ	0xFF1
 41120                           intcon3	equ	0xFF0
 41121                           indf0	equ	0xFEF
 41122                           postinc0	equ	0xFEE
 41123                           fsr0h	equ	0xFEA
 41124                           fsr0l	equ	0xFE9
 41125                           wreg	equ	0xFE8
 41126                           postinc1	equ	0xFE6
 41127                           postdec1	equ	0xFE5
 41128                           plusw1	equ	0xFE3
 41129                           fsr1h	equ	0xFE2
 41130                           fsr1l	equ	0xFE1
 41131                           indf2	equ	0xFDF
 41132                           postinc2	equ	0xFDE
 41133                           postdec2	equ	0xFDD
 41134                           plusw2	equ	0xFDB
 41135                           fsr2h	equ	0xFDA
 41136                           fsr2l	equ	0xFD9
 41137                           status	equ	0xFD8
 41138                           
 41139 ;; *************** function _SwTimerIsRunning *****************
 41140 ;; Defined at:
 41141 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41142 ;; Parameters:    Size  Location     Type
 41143 ;;  timerId         1    wreg     unsigned char 
 41144 ;; Auto vars:     Size  Location     Type
 41145 ;;  timerId         1    0[BANK0 ] unsigned char 
 41146 ;;  isRunning       1    1[BANK0 ] unsigned char 
 41147 ;; Return value:  Size  Location     Type
 41148 ;;                  1    wreg      unsigned char 
 41149 ;; Registers used:
 41150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41151 ;; Tracked objects:
 41152 ;;		On entry : 0/0
 41153 ;;		On exit  : 0/0
 41154 ;;		Unchanged: 0/0
 41155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41160 ;;Total ram usage:        2 bytes
 41161 ;; Hardware stack levels used:    1
 41162 ;; Hardware stack levels required when called:    7
 41163 ;; This function calls:
 41164 ;;		Nothing
 41165 ;; This function is called by:
 41166 ;;		_LORAWAN_TxDone
 41167 ;; This function uses a non-reentrant model
 41168 ;;
 41169                           
 41170                           	psect	text219
 41171  00BC30                     __ptext219:
 41172                           	opt stack 0
 41173  00BC30                     _SwTimerIsRunning:
 41174                           	opt stack 19
 41175                           
 41176                           ; BSR set to: 0
 41177                           ;incstack = 0
 41178                           ;SwTimerIsRunning@timerId stored from wreg
 41179  00BC30  0100               	movlb	0	; () banked
 41180  00BC32  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 41181                           
 41182                           ;sw_timer.c: 209: uint8_t isRunning;
 41183                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 41184  00BC34  9EF2               	bcf	intcon,7,c	;volatile
 41185                           
 41186                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 41187  00BC36  0100               	movlb	0	; () banked
 41188  00BC38  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 41189  00BC3A  0D08               	mullw	8
 41190  00BC3C  0E04               	movlw	4
 41191  00BC3E  26F3               	addwf	prodl,f,c
 41192  00BC40  0E00               	movlw	0
 41193  00BC42  22F4               	addwfc	prodh,f,c
 41194  00BC44  0E00               	movlw	low _swTimers
 41195  00BC46  24F3               	addwf	prodl,w,c
 41196  00BC48  6ED9               	movwf	fsr2l,c
 41197  00BC4A  0E03               	movlw	high _swTimers
 41198  00BC4C  20F4               	addwfc	prodh,w,c
 41199  00BC4E  6EDA               	movwf	fsr2h,c
 41200  00BC50  50DF               	movf	indf2,w,c
 41201  00BC52  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 41202                           
 41203                           ; BSR set to: 0
 41204                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 41205  00BC54  8EF2               	bsf	intcon,7,c	;volatile
 41206                           
 41207                           ; BSR set to: 0
 41208                           ;sw_timer.c: 215: return isRunning;
 41209  00BC56  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 41210  00BC58  0012               	return	
 41211  00BC5A                     __end_of_SwTimerIsRunning:
 41212                           	opt stack 0
 41213                           tosu	equ	0xFFF
 41214                           tosh	equ	0xFFE
 41215                           tosl	equ	0xFFD
 41216                           pclath	equ	0xFFA
 41217                           tblptru	equ	0xFF8
 41218                           tblptrh	equ	0xFF7
 41219                           tblptrl	equ	0xFF6
 41220                           tablat	equ	0xFF5
 41221                           prodh	equ	0xFF4
 41222                           prodl	equ	0xFF3
 41223                           intcon	equ	0xFF2
 41224                           intcon2	equ	0xFF1
 41225                           intcon3	equ	0xFF0
 41226                           indf0	equ	0xFEF
 41227                           postinc0	equ	0xFEE
 41228                           fsr0h	equ	0xFEA
 41229                           fsr0l	equ	0xFE9
 41230                           wreg	equ	0xFE8
 41231                           postinc1	equ	0xFE6
 41232                           postdec1	equ	0xFE5
 41233                           plusw1	equ	0xFE3
 41234                           fsr1h	equ	0xFE2
 41235                           fsr1l	equ	0xFE1
 41236                           indf2	equ	0xFDF
 41237                           postinc2	equ	0xFDE
 41238                           postdec2	equ	0xFDD
 41239                           plusw2	equ	0xFDB
 41240                           fsr2h	equ	0xFDA
 41241                           fsr2l	equ	0xFD9
 41242                           status	equ	0xFD8
 41243                           
 41244 ;; *************** function _RADIO_GetStatus *****************
 41245 ;; Defined at:
 41246 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41247 ;; Parameters:    Size  Location     Type
 41248 ;;		None
 41249 ;; Auto vars:     Size  Location     Type
 41250 ;;		None
 41251 ;; Return value:  Size  Location     Type
 41252 ;;                  1    wreg      unsigned char 
 41253 ;; Registers used:
 41254 ;;		wreg, status,2
 41255 ;; Tracked objects:
 41256 ;;		On entry : 0/0
 41257 ;;		On exit  : 0/0
 41258 ;;		Unchanged: 0/0
 41259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41264 ;;Total ram usage:        0 bytes
 41265 ;; Hardware stack levels used:    1
 41266 ;; Hardware stack levels required when called:    7
 41267 ;; This function calls:
 41268 ;;		Nothing
 41269 ;; This function is called by:
 41270 ;;		_LORAWAN_TxDone
 41271 ;;		_LORAWAN_ReceiveWindow2Callback
 41272 ;;		_LORAWAN_RxDone
 41273 ;; This function uses a non-reentrant model
 41274 ;;
 41275                           
 41276                           	psect	text220
 41277  00C66E                     __ptext220:
 41278                           	opt stack 0
 41279  00C66E                     _RADIO_GetStatus:
 41280                           	opt stack 19
 41281                           
 41282                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 41283                           
 41284                           ; BSR set to: 0
 41285                           ;incstack = 0
 41286  00C66E  0101               	movlb	1	; () banked
 41287  00C670  5158               	movf	(_RadioConfiguration+35)& (0+255),w,b
 41288  00C672  0012               	return	
 41289  00C674                     __end_of_RADIO_GetStatus:
 41290                           	opt stack 0
 41291                           tosu	equ	0xFFF
 41292                           tosh	equ	0xFFE
 41293                           tosl	equ	0xFFD
 41294                           pclath	equ	0xFFA
 41295                           tblptru	equ	0xFF8
 41296                           tblptrh	equ	0xFF7
 41297                           tblptrl	equ	0xFF6
 41298                           tablat	equ	0xFF5
 41299                           prodh	equ	0xFF4
 41300                           prodl	equ	0xFF3
 41301                           intcon	equ	0xFF2
 41302                           intcon2	equ	0xFF1
 41303                           intcon3	equ	0xFF0
 41304                           indf0	equ	0xFEF
 41305                           postinc0	equ	0xFEE
 41306                           fsr0h	equ	0xFEA
 41307                           fsr0l	equ	0xFE9
 41308                           wreg	equ	0xFE8
 41309                           postinc1	equ	0xFE6
 41310                           postdec1	equ	0xFE5
 41311                           plusw1	equ	0xFE3
 41312                           fsr1h	equ	0xFE2
 41313                           fsr1l	equ	0xFE1
 41314                           indf2	equ	0xFDF
 41315                           postinc2	equ	0xFDE
 41316                           postdec2	equ	0xFDD
 41317                           plusw2	equ	0xFDB
 41318                           fsr2h	equ	0xFDA
 41319                           fsr2l	equ	0xFD9
 41320                           status	equ	0xFD8
 41321                           
 41322 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 41323 ;; Defined at:
 41324 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41325 ;; Parameters:    Size  Location     Type
 41326 ;;		None
 41327 ;; Auto vars:     Size  Location     Type
 41328 ;;		None
 41329 ;; Return value:  Size  Location     Type
 41330 ;;                  1    wreg      void 
 41331 ;; Registers used:
 41332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41333 ;; Tracked objects:
 41334 ;;		On entry : 0/0
 41335 ;;		On exit  : 0/0
 41336 ;;		Unchanged: 0/0
 41337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41342 ;;Total ram usage:        0 bytes
 41343 ;; Hardware stack levels used:    1
 41344 ;; Hardware stack levels required when called:   13
 41345 ;; This function calls:
 41346 ;;		_ConfigureRadioRx
 41347 ;;		_RADIO_ReceiveStart
 41348 ;;		_RADIO_ReceiveStop
 41349 ;;		_RADIO_ReleaseData
 41350 ;;		_ResetParametersForConfirmedTransmission
 41351 ;;		_ResetParametersForUnconfirmedTransmission
 41352 ;;		_RxData
 41353 ;; This function is called by:
 41354 ;;		_LORAWAN_TxDone
 41355 ;;		_LORAWAN_ReceiveWindow2Callback
 41356 ;;		_LORAWAN_RxDone
 41357 ;;		_SetReceptionNotOkState
 41358 ;; This function uses a non-reentrant model
 41359 ;;
 41360                           
 41361                           	psect	text221
 41362  00A2E0                     __ptext221:
 41363                           	opt stack 0
 41364  00A2E0                     _LORAWAN_EnterContinuousReceive:
 41365                           	opt stack 13
 41366                           
 41367                           ;lorawan.c: 917: RADIO_ReceiveStop();
 41368                           
 41369                           ; BSR set to: 1
 41370                           ;incstack = 0
 41371  00A2E0  ECDB  F05F         	call	_RADIO_ReceiveStop	;wreg free
 41372                           
 41373                           ;lorawan.c: 918: RADIO_ReleaseData();
 41374  00A2E4  EC3A  F063         	call	_RADIO_ReleaseData	;wreg free
 41375                           
 41376                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 41377  00A2E8  C21C  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 41378  00A2EC  C21D  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 41379  00A2F0  C21E  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 41380  00A2F4  C21F  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 41381  00A2F8  0102               	movlb	2	; () banked
 41382  00A2FA  5120               	movf	(_loRa+28)& (0+255),w,b
 41383  00A2FC  EC2D  F05E         	call	_ConfigureRadioRx
 41384                           
 41385                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 41386  00A300  0E00               	movlw	0
 41387  00A302  0100               	movlb	0	; () banked
 41388  00A304  6FB2               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 41389  00A306  0E00               	movlw	0
 41390  00A308  6FB1               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 41391  00A30A  ECFE  F02E         	call	_RADIO_ReceiveStart	;wreg free
 41392  00A30E  0100               	movlb	0	; () banked
 41393  00A310  51B1               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 41394  00A312  11B2               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 41395  00A314  B4D8               	btfsc	status,2,c
 41396  00A316  0012               	return	
 41397                           
 41398                           ; BSR set to: 0
 41399                           ;lorawan.c: 923: {
 41400                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 41401  00A318  ECDC  F061         	call	_ResetParametersForConfirmedTransmission	;wreg free
 41402                           
 41403                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 41404  00A31C  EC91  F061         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 41405                           
 41406                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 41407  00A320  0102               	movlb	2	; () banked
 41408  00A322  9106               	bcf	(_loRa+2)& (0+255),0,b
 41409  00A324  9306               	bcf	(_loRa+2)& (0+255),1,b
 41410  00A326  9506               	bcf	(_loRa+2)& (0+255),2,b
 41411  00A328  9706               	bcf	(_loRa+2)& (0+255),3,b
 41412                           
 41413                           ; BSR set to: 2
 41414                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 41415  00A32A  0101               	movlb	1	; () banked
 41416  00A32C  510C               	movf	_rxPayload& (0+255),w,b
 41417  00A32E  110D               	iorwf	(_rxPayload+1)& (0+255),w,b
 41418  00A330  B4D8               	btfsc	status,2,c
 41419  00A332  0012               	return	
 41420                           
 41421                           ; BSR set to: 1
 41422                           ;lorawan.c: 928: {
 41423                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 41424  00A334  0E00               	movlw	0
 41425  00A336  0100               	movlb	0	; () banked
 41426  00A338  6F60               	movwf	RxData@pData& (0+255),b
 41427  00A33A  0E00               	movlw	0
 41428  00A33C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 41429  00A33E  0E00               	movlw	0
 41430  00A340  6F62               	movwf	RxData@dataLength& (0+255),b
 41431  00A342  0E00               	movlw	0
 41432  00A344  6F63               	movwf	RxData@status& (0+255),b
 41433  00A346  D801               	call	u21408
 41434  00A348  0012               	return	
 41435  00A34A                     u21408:
 41436  00A34A  0005               	push	
 41437  00A34C  6EFA               	movwf	pclath,c
 41438  00A34E  0101               	movlb	1	; () banked
 41439  00A350  510C               	movf	_rxPayload& (0+255),w,b
 41440  00A352  6EFD               	movwf	tosl,c
 41441  00A354  510D               	movf	(_rxPayload+1)& (0+255),w,b
 41442  00A356  6EFE               	movwf	tosh,c
 41443  00A358  6AFF               	clrf	tosu,c
 41444  00A35A  50FA               	movf	pclath,w,c
 41445  00A35C  0012               	return		;indir
 41446  00A35E                     __end_of_LORAWAN_EnterContinuousReceive:
 41447                           	opt stack 0
 41448                           tosu	equ	0xFFF
 41449                           tosh	equ	0xFFE
 41450                           tosl	equ	0xFFD
 41451                           pclath	equ	0xFFA
 41452                           tblptru	equ	0xFF8
 41453                           tblptrh	equ	0xFF7
 41454                           tblptrl	equ	0xFF6
 41455                           tablat	equ	0xFF5
 41456                           prodh	equ	0xFF4
 41457                           prodl	equ	0xFF3
 41458                           intcon	equ	0xFF2
 41459                           intcon2	equ	0xFF1
 41460                           intcon3	equ	0xFF0
 41461                           indf0	equ	0xFEF
 41462                           postinc0	equ	0xFEE
 41463                           fsr0h	equ	0xFEA
 41464                           fsr0l	equ	0xFE9
 41465                           wreg	equ	0xFE8
 41466                           postinc1	equ	0xFE6
 41467                           postdec1	equ	0xFE5
 41468                           plusw1	equ	0xFE3
 41469                           fsr1h	equ	0xFE2
 41470                           fsr1l	equ	0xFE1
 41471                           indf2	equ	0xFDF
 41472                           postinc2	equ	0xFDE
 41473                           postdec2	equ	0xFDD
 41474                           plusw2	equ	0xFDB
 41475                           fsr2h	equ	0xFDA
 41476                           fsr2l	equ	0xFD9
 41477                           status	equ	0xFD8
 41478                           
 41479 ;; *************** function _RxData *****************
 41480 ;; Defined at:
 41481 ;;		line 76 in file "main.c"
 41482 ;; Parameters:    Size  Location     Type
 41483 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 41484 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 41485 ;;  dataLength      1    2[BANK0 ] unsigned char 
 41486 ;;  status          1    3[BANK0 ] enum E7645
 41487 ;; Auto vars:     Size  Location     Type
 41488 ;;		None
 41489 ;; Return value:  Size  Location     Type
 41490 ;;                  1    wreg      void 
 41491 ;; Registers used:
 41492 ;;		None
 41493 ;; Tracked objects:
 41494 ;;		On entry : 0/0
 41495 ;;		On exit  : 0/0
 41496 ;;		Unchanged: 0/0
 41497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41502 ;;Total ram usage:        4 bytes
 41503 ;; Hardware stack levels used:    1
 41504 ;; Hardware stack levels required when called:    7
 41505 ;; This function calls:
 41506 ;;		Nothing
 41507 ;; This function is called by:
 41508 ;;		_main
 41509 ;;		_LORAWAN_EnterContinuousReceive
 41510 ;;		_LORAWAN_ReceiveWindow2Callback
 41511 ;;		_SetReceptionNotOkState
 41512 ;;		_LORAWAN_RxDone
 41513 ;;		_LORAWAN_RxTimeout
 41514 ;;		_LORAWAN_TxDone
 41515 ;;		_AckRetransmissionCallback
 41516 ;;		_UnconfirmedTransmissionCallback
 41517 ;; This function uses a non-reentrant model
 41518 ;;
 41519                           
 41520                           	psect	text222
 41521  00C6E2                     __ptext222:
 41522                           	opt stack 0
 41523  00C6E2                     _RxData:
 41524                           	opt stack 20
 41525                           
 41526                           ;incstack = 0
 41527  00C6E2  0012               	return		;funcret
 41528  00C6E4                     __end_of_RxData:
 41529                           	opt stack 0
 41530                           tosu	equ	0xFFF
 41531                           tosh	equ	0xFFE
 41532                           tosl	equ	0xFFD
 41533                           pclath	equ	0xFFA
 41534                           tblptru	equ	0xFF8
 41535                           tblptrh	equ	0xFF7
 41536                           tblptrl	equ	0xFF6
 41537                           tablat	equ	0xFF5
 41538                           prodh	equ	0xFF4
 41539                           prodl	equ	0xFF3
 41540                           intcon	equ	0xFF2
 41541                           intcon2	equ	0xFF1
 41542                           intcon3	equ	0xFF0
 41543                           indf0	equ	0xFEF
 41544                           postinc0	equ	0xFEE
 41545                           fsr0h	equ	0xFEA
 41546                           fsr0l	equ	0xFE9
 41547                           wreg	equ	0xFE8
 41548                           postinc1	equ	0xFE6
 41549                           postdec1	equ	0xFE5
 41550                           plusw1	equ	0xFE3
 41551                           fsr1h	equ	0xFE2
 41552                           fsr1l	equ	0xFE1
 41553                           indf2	equ	0xFDF
 41554                           postinc2	equ	0xFDE
 41555                           postdec2	equ	0xFDD
 41556                           plusw2	equ	0xFDB
 41557                           fsr2h	equ	0xFDA
 41558                           fsr2l	equ	0xFD9
 41559                           status	equ	0xFD8
 41560                           
 41561 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 41562 ;; Defined at:
 41563 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41564 ;; Parameters:    Size  Location     Type
 41565 ;;		None
 41566 ;; Auto vars:     Size  Location     Type
 41567 ;;		None
 41568 ;; Return value:  Size  Location     Type
 41569 ;;                  1    wreg      void 
 41570 ;; Registers used:
 41571 ;;		wreg, status,2
 41572 ;; Tracked objects:
 41573 ;;		On entry : 0/0
 41574 ;;		On exit  : 0/0
 41575 ;;		Unchanged: 0/0
 41576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41581 ;;Total ram usage:        0 bytes
 41582 ;; Hardware stack levels used:    1
 41583 ;; Hardware stack levels required when called:    7
 41584 ;; This function calls:
 41585 ;;		Nothing
 41586 ;; This function is called by:
 41587 ;;		_LORAWAN_RxTimeout
 41588 ;;		_LORAWAN_ReceiveWindow2Callback
 41589 ;;		_LORAWAN_EnterContinuousReceive
 41590 ;;		_UnconfirmedTransmissionCallback
 41591 ;; This function uses a non-reentrant model
 41592 ;;
 41593                           
 41594                           	psect	text223
 41595  00C322                     __ptext223:
 41596                           	opt stack 0
 41597  00C322                     _ResetParametersForUnconfirmedTransmission:
 41598                           	opt stack 20
 41599                           
 41600                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 41601                           
 41602                           ;incstack = 0
 41603  00C322  0102               	movlb	2	; () banked
 41604  00C324  9106               	bcf	(_loRa+2)& (0+255),0,b
 41605  00C326  9306               	bcf	(_loRa+2)& (0+255),1,b
 41606  00C328  9506               	bcf	(_loRa+2)& (0+255),2,b
 41607  00C32A  9706               	bcf	(_loRa+2)& (0+255),3,b
 41608                           
 41609                           ; BSR set to: 2
 41610                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 41611  00C32C  0E01               	movlw	1
 41612  00C32E  6FDC               	movwf	(_loRa+216)& (0+255),b
 41613                           
 41614                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 41615  00C330  0E00               	movlw	0
 41616  00C332  6FAB               	movwf	(_loRa+167)& (0+255),b
 41617                           
 41618                           ; BSR set to: 2
 41619  00C334  0012               	return		;funcret
 41620  00C336                     __end_of_ResetParametersForUnconfirmedTransmission:
 41621                           	opt stack 0
 41622                           tosu	equ	0xFFF
 41623                           tosh	equ	0xFFE
 41624                           tosl	equ	0xFFD
 41625                           pclath	equ	0xFFA
 41626                           tblptru	equ	0xFF8
 41627                           tblptrh	equ	0xFF7
 41628                           tblptrl	equ	0xFF6
 41629                           tablat	equ	0xFF5
 41630                           prodh	equ	0xFF4
 41631                           prodl	equ	0xFF3
 41632                           intcon	equ	0xFF2
 41633                           intcon2	equ	0xFF1
 41634                           intcon3	equ	0xFF0
 41635                           indf0	equ	0xFEF
 41636                           postinc0	equ	0xFEE
 41637                           fsr0h	equ	0xFEA
 41638                           fsr0l	equ	0xFE9
 41639                           wreg	equ	0xFE8
 41640                           postinc1	equ	0xFE6
 41641                           postdec1	equ	0xFE5
 41642                           plusw1	equ	0xFE3
 41643                           fsr1h	equ	0xFE2
 41644                           fsr1l	equ	0xFE1
 41645                           indf2	equ	0xFDF
 41646                           postinc2	equ	0xFDE
 41647                           postdec2	equ	0xFDD
 41648                           plusw2	equ	0xFDB
 41649                           fsr2h	equ	0xFDA
 41650                           fsr2l	equ	0xFD9
 41651                           status	equ	0xFD8
 41652                           
 41653 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 41654 ;; Defined at:
 41655 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 41656 ;; Parameters:    Size  Location     Type
 41657 ;;		None
 41658 ;; Auto vars:     Size  Location     Type
 41659 ;;		None
 41660 ;; Return value:  Size  Location     Type
 41661 ;;                  1    wreg      void 
 41662 ;; Registers used:
 41663 ;;		wreg, status,2
 41664 ;; Tracked objects:
 41665 ;;		On entry : 0/0
 41666 ;;		On exit  : 0/0
 41667 ;;		Unchanged: 0/0
 41668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41673 ;;Total ram usage:        0 bytes
 41674 ;; Hardware stack levels used:    1
 41675 ;; Hardware stack levels required when called:    7
 41676 ;; This function calls:
 41677 ;;		Nothing
 41678 ;; This function is called by:
 41679 ;;		_LORAWAN_RxTimeout
 41680 ;;		_LORAWAN_ReceiveWindow2Callback
 41681 ;;		_LORAWAN_EnterContinuousReceive
 41682 ;;		_AckRetransmissionCallback
 41683 ;; This function uses a non-reentrant model
 41684 ;;
 41685                           
 41686                           	psect	text224
 41687  00C3B8                     __ptext224:
 41688                           	opt stack 0
 41689  00C3B8                     _ResetParametersForConfirmedTransmission:
 41690                           	opt stack 18
 41691                           
 41692                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 41693                           
 41694                           ; BSR set to: 2
 41695                           ;incstack = 0
 41696  00C3B8  0102               	movlb	2	; () banked
 41697  00C3BA  9106               	bcf	(_loRa+2)& (0+255),0,b
 41698  00C3BC  9306               	bcf	(_loRa+2)& (0+255),1,b
 41699  00C3BE  9506               	bcf	(_loRa+2)& (0+255),2,b
 41700  00C3C0  9706               	bcf	(_loRa+2)& (0+255),3,b
 41701                           
 41702                           ; BSR set to: 2
 41703                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 41704  00C3C2  0E01               	movlw	1
 41705  00C3C4  6FDD               	movwf	(_loRa+217)& (0+255),b
 41706                           
 41707                           ; BSR set to: 2
 41708                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 41709  00C3C6  9104               	bcf	_loRa& (0+255),0,b
 41710                           
 41711                           ; BSR set to: 2
 41712  00C3C8  0012               	return		;funcret
 41713  00C3CA                     __end_of_ResetParametersForConfirmedTransmission:
 41714                           	opt stack 0
 41715                           tosu	equ	0xFFF
 41716                           tosh	equ	0xFFE
 41717                           tosl	equ	0xFFD
 41718                           pclath	equ	0xFFA
 41719                           tblptru	equ	0xFF8
 41720                           tblptrh	equ	0xFF7
 41721                           tblptrl	equ	0xFF6
 41722                           tablat	equ	0xFF5
 41723                           prodh	equ	0xFF4
 41724                           prodl	equ	0xFF3
 41725                           intcon	equ	0xFF2
 41726                           intcon2	equ	0xFF1
 41727                           intcon3	equ	0xFF0
 41728                           indf0	equ	0xFEF
 41729                           postinc0	equ	0xFEE
 41730                           fsr0h	equ	0xFEA
 41731                           fsr0l	equ	0xFE9
 41732                           wreg	equ	0xFE8
 41733                           postinc1	equ	0xFE6
 41734                           postdec1	equ	0xFE5
 41735                           plusw1	equ	0xFE3
 41736                           fsr1h	equ	0xFE2
 41737                           fsr1l	equ	0xFE1
 41738                           indf2	equ	0xFDF
 41739                           postinc2	equ	0xFDE
 41740                           postdec2	equ	0xFDD
 41741                           plusw2	equ	0xFDB
 41742                           fsr2h	equ	0xFDA
 41743                           fsr2l	equ	0xFD9
 41744                           status	equ	0xFD8
 41745                           
 41746 ;; *************** function _RADIO_ReleaseData *****************
 41747 ;; Defined at:
 41748 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41749 ;; Parameters:    Size  Location     Type
 41750 ;;		None
 41751 ;; Auto vars:     Size  Location     Type
 41752 ;;		None
 41753 ;; Return value:  Size  Location     Type
 41754 ;;                  1    wreg      void 
 41755 ;; Registers used:
 41756 ;;		status,2, status,0
 41757 ;; Tracked objects:
 41758 ;;		On entry : 0/0
 41759 ;;		On exit  : 0/0
 41760 ;;		Unchanged: 0/0
 41761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41766 ;;Total ram usage:        0 bytes
 41767 ;; Hardware stack levels used:    1
 41768 ;; Hardware stack levels required when called:    7
 41769 ;; This function calls:
 41770 ;;		Nothing
 41771 ;; This function is called by:
 41772 ;;		_LORAWAN_ReceiveWindow1Callback
 41773 ;;		_LORAWAN_ReceiveWindow2Callback
 41774 ;;		_LORAWAN_EnterContinuousReceive
 41775 ;;		_LORAWAN_RxDone
 41776 ;; This function uses a non-reentrant model
 41777 ;;
 41778                           
 41779                           	psect	text225
 41780  00C674                     __ptext225:
 41781                           	opt stack 0
 41782  00C674                     _RADIO_ReleaseData:
 41783                           	opt stack 18
 41784                           
 41785                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 41786                           
 41787                           ; BSR set to: 2
 41788                           ;incstack = 0
 41789  00C674  0101               	movlb	1	; () banked
 41790  00C676  9558               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 41791                           
 41792                           ; BSR set to: 1
 41793  00C678  0012               	return		;funcret
 41794  00C67A                     __end_of_RADIO_ReleaseData:
 41795                           	opt stack 0
 41796                           tosu	equ	0xFFF
 41797                           tosh	equ	0xFFE
 41798                           tosl	equ	0xFFD
 41799                           pclath	equ	0xFFA
 41800                           tblptru	equ	0xFF8
 41801                           tblptrh	equ	0xFF7
 41802                           tblptrl	equ	0xFF6
 41803                           tablat	equ	0xFF5
 41804                           prodh	equ	0xFF4
 41805                           prodl	equ	0xFF3
 41806                           intcon	equ	0xFF2
 41807                           intcon2	equ	0xFF1
 41808                           intcon3	equ	0xFF0
 41809                           indf0	equ	0xFEF
 41810                           postinc0	equ	0xFEE
 41811                           fsr0h	equ	0xFEA
 41812                           fsr0l	equ	0xFE9
 41813                           wreg	equ	0xFE8
 41814                           postinc1	equ	0xFE6
 41815                           postdec1	equ	0xFE5
 41816                           plusw1	equ	0xFE3
 41817                           fsr1h	equ	0xFE2
 41818                           fsr1l	equ	0xFE1
 41819                           indf2	equ	0xFDF
 41820                           postinc2	equ	0xFDE
 41821                           postdec2	equ	0xFDD
 41822                           plusw2	equ	0xFDB
 41823                           fsr2h	equ	0xFDA
 41824                           fsr2l	equ	0xFD9
 41825                           status	equ	0xFD8
 41826                           
 41827 ;; *************** function _RADIO_ReceiveStop *****************
 41828 ;; Defined at:
 41829 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41830 ;; Parameters:    Size  Location     Type
 41831 ;;		None
 41832 ;; Auto vars:     Size  Location     Type
 41833 ;;		None
 41834 ;; Return value:  Size  Location     Type
 41835 ;;                  1    wreg      void 
 41836 ;; Registers used:
 41837 ;;		wreg, status,2, status,0, cstack
 41838 ;; Tracked objects:
 41839 ;;		On entry : 0/0
 41840 ;;		On exit  : 0/0
 41841 ;;		Unchanged: 0/0
 41842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41847 ;;Total ram usage:        0 bytes
 41848 ;; Hardware stack levels used:    1
 41849 ;; Hardware stack levels required when called:   11
 41850 ;; This function calls:
 41851 ;;		_RADIO_WriteMode
 41852 ;; This function is called by:
 41853 ;;		_LORAWAN_Send
 41854 ;;		_LORAWAN_ReceiveWindow1Callback
 41855 ;;		_LORAWAN_ReceiveWindow2Callback
 41856 ;;		_LORAWAN_EnterContinuousReceive
 41857 ;;		_LORAWAN_SetClass
 41858 ;; This function uses a non-reentrant model
 41859 ;;
 41860                           
 41861                           	psect	text226
 41862  00BFB6                     __ptext226:
 41863                           	opt stack 0
 41864  00BFB6                     _RADIO_ReceiveStop:
 41865                           	opt stack 18
 41866                           
 41867                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 41868                           
 41869                           ; BSR set to: 1
 41870                           ;incstack = 0
 41871  00BFB6  0E02               	movlw	2
 41872  00BFB8  0101               	movlb	1	; () banked
 41873  00BFBA  1958               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 41874  00BFBC  A4D8               	btfss	status,2,c
 41875  00BFBE  0012               	return	
 41876                           
 41877                           ; BSR set to: 1
 41878                           ;radio_driver_SX1276.c: 954: {
 41879                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 41880  00BFC0  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 41881  00BFC4  0E00               	movlw	0
 41882  00BFC6  0100               	movlb	0	; () banked
 41883  00BFC8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 41884  00BFCA  0E00               	movlw	0
 41885  00BFCC  ECDC  F043         	call	_RADIO_WriteMode
 41886                           
 41887                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 41888  00BFD0  0101               	movlb	1	; () banked
 41889  00BFD2  9358               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 41890  00BFD4  0012               	return	
 41891  00BFD6                     __end_of_RADIO_ReceiveStop:
 41892                           	opt stack 0
 41893                           tosu	equ	0xFFF
 41894                           tosh	equ	0xFFE
 41895                           tosl	equ	0xFFD
 41896                           pclath	equ	0xFFA
 41897                           tblptru	equ	0xFF8
 41898                           tblptrh	equ	0xFF7
 41899                           tblptrl	equ	0xFF6
 41900                           tablat	equ	0xFF5
 41901                           prodh	equ	0xFF4
 41902                           prodl	equ	0xFF3
 41903                           intcon	equ	0xFF2
 41904                           intcon2	equ	0xFF1
 41905                           intcon3	equ	0xFF0
 41906                           indf0	equ	0xFEF
 41907                           postinc0	equ	0xFEE
 41908                           fsr0h	equ	0xFEA
 41909                           fsr0l	equ	0xFE9
 41910                           wreg	equ	0xFE8
 41911                           postinc1	equ	0xFE6
 41912                           postdec1	equ	0xFE5
 41913                           plusw1	equ	0xFE3
 41914                           fsr1h	equ	0xFE2
 41915                           fsr1l	equ	0xFE1
 41916                           indf2	equ	0xFDF
 41917                           postinc2	equ	0xFDE
 41918                           postdec2	equ	0xFDD
 41919                           plusw2	equ	0xFDB
 41920                           fsr2h	equ	0xFDA
 41921                           fsr2l	equ	0xFD9
 41922                           status	equ	0xFD8
 41923                           
 41924 ;; *************** function _RADIO_ReceiveStart *****************
 41925 ;; Defined at:
 41926 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 41927 ;; Parameters:    Size  Location     Type
 41928 ;;  rxWindowSize    2   81[BANK0 ] unsigned int 
 41929 ;; Auto vars:     Size  Location     Type
 41930 ;;		None
 41931 ;; Return value:  Size  Location     Type
 41932 ;;                  2   81[BANK0 ] enum E7038
 41933 ;; Registers used:
 41934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41935 ;; Tracked objects:
 41936 ;;		On entry : 0/0
 41937 ;;		On exit  : 0/0
 41938 ;;		Unchanged: 0/0
 41939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41941 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41942 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41943 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41944 ;;Total ram usage:       10 bytes
 41945 ;; Hardware stack levels used:    1
 41946 ;; Hardware stack levels required when called:   12
 41947 ;; This function calls:
 41948 ;;		_RADIO_RegisterWrite
 41949 ;;		_RADIO_WriteConfiguration
 41950 ;;		_RADIO_WriteMode
 41951 ;;		_SwTimerSetTimeout
 41952 ;;		_SwTimerStart
 41953 ;;		___lldiv
 41954 ;; This function is called by:
 41955 ;;		_LORAWAN_ReceiveWindow1Callback
 41956 ;;		_LORAWAN_ReceiveWindow2Callback
 41957 ;;		_LORAWAN_EnterContinuousReceive
 41958 ;; This function uses a non-reentrant model
 41959 ;;
 41960                           
 41961                           	psect	text227
 41962  005DFC                     __ptext227:
 41963                           	opt stack 0
 41964  005DFC                     _RADIO_ReceiveStart:
 41965                           	opt stack 13
 41966                           
 41967                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 41968                           
 41969                           ; BSR set to: 1
 41970                           ;incstack = 0
 41971  005DFC  0101               	movlb	1	; () banked
 41972  005DFE  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 41973  005E00  D006               	goto	l849
 41974                           
 41975                           ; BSR set to: 1
 41976                           ;radio_driver_SX1276.c: 878: {
 41977                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 41978  005E02  0E80               	movlw	128
 41979  005E04  0100               	movlb	0	; () banked
 41980  005E06  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 41981  005E08  0E03               	movlw	3
 41982  005E0A  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 41983                           
 41984                           ; BSR set to: 0
 41985  005E0C  0012               	return	
 41986  005E0E                     l849:
 41987                           
 41988                           ;radio_driver_SX1276.c: 880: }
 41989                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 41990                           
 41991                           ; BSR set to: 0
 41992  005E0E  C158  F0B3         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 41993  005E12  0E03               	movlw	3
 41994  005E14  0100               	movlb	0	; () banked
 41995  005E16  17B3               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 41996  005E18  B4D8               	btfsc	status,2,c
 41997  005E1A  D005               	goto	l851
 41998                           
 41999                           ; BSR set to: 0
 42000                           ;radio_driver_SX1276.c: 883: {
 42001                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 42002  005E1C  0E80               	movlw	128
 42003  005E1E  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 42004  005E20  0E04               	movlw	4
 42005  005E22  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 42006                           
 42007                           ; BSR set to: 0
 42008  005E24  0012               	return	
 42009  005E26                     l851:
 42010                           
 42011                           ; BSR set to: 0
 42012                           ;radio_driver_SX1276.c: 885: }
 42013                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 42014                           
 42015                           ; BSR set to: 0
 42016  005E26  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42017  005E28  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42018  005E2A  A4D8               	btfss	status,2,c
 42019  005E2C  D007               	goto	l852
 42020                           
 42021                           ; BSR set to: 0
 42022                           ;radio_driver_SX1276.c: 888: {
 42023                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 42024  005E2E  0E00               	movlw	0
 42025  005E30  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 42026  005E32  0E04               	movlw	4
 42027  005E34  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 42028  005E36  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 42029                           
 42030                           ;radio_driver_SX1276.c: 890: }
 42031  005E3A  D006               	goto	l853
 42032  005E3C                     l852:
 42033                           
 42034                           ;radio_driver_SX1276.c: 891: else
 42035                           ;radio_driver_SX1276.c: 892: {
 42036                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 42037  005E3C  C0B1  F0A6         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 42038  005E40  C0B2  F0A7         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 42039  005E44  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 42040  005E48                     l853:
 42041                           
 42042                           ;radio_driver_SX1276.c: 894: }
 42043                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 42044  005E48  0101               	movlb	1	; () banked
 42045  005E4A  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 42046  005E4C  A4D8               	btfss	status,2,c
 42047  005E4E  D013               	goto	l854
 42048                           
 42049                           ; BSR set to: 1
 42050                           ;radio_driver_SX1276.c: 897: {
 42051                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 42052  005E50  0E01               	movlw	1
 42053  005E52  0100               	movlb	0	; () banked
 42054  005E54  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42055  005E56  0E22               	movlw	34
 42056  005E58  ECEB  F05F         	call	_RADIO_RegisterWrite
 42057                           
 42058                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 42059  005E5C  0E00               	movlw	0
 42060  005E5E  0100               	movlb	0	; () banked
 42061  005E60  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42062  005E62  0E40               	movlw	64
 42063  005E64  ECEB  F05F         	call	_RADIO_RegisterWrite
 42064                           
 42065                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 42066  005E68  0E00               	movlw	0
 42067  005E6A  0100               	movlb	0	; () banked
 42068  005E6C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42069  005E6E  0E41               	movlw	65
 42070  005E70  ECEB  F05F         	call	_RADIO_RegisterWrite
 42071                           
 42072                           ;radio_driver_SX1276.c: 908: }
 42073  005E74  D016               	goto	l855
 42074  005E76                     l854:
 42075                           
 42076                           ;radio_driver_SX1276.c: 909: else
 42077                           ;radio_driver_SX1276.c: 910: {
 42078                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 42079  005E76  C169  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 42080  005E7A  0E12               	movlw	18
 42081  005E7C  ECEB  F05F         	call	_RADIO_RegisterWrite
 42082                           
 42083                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 42084  005E80  C16A  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 42085  005E84  0E13               	movlw	19
 42086  005E86  ECEB  F05F         	call	_RADIO_RegisterWrite
 42087                           
 42088                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 42089  005E8A  0E00               	movlw	0
 42090  005E8C  0100               	movlb	0	; () banked
 42091  005E8E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42092  005E90  0E40               	movlw	64
 42093  005E92  ECEB  F05F         	call	_RADIO_RegisterWrite
 42094                           
 42095                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 42096  005E96  0E00               	movlw	0
 42097  005E98  0100               	movlb	0	; () banked
 42098  005E9A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 42099  005E9C  0E41               	movlw	65
 42100  005E9E  ECEB  F05F         	call	_RADIO_RegisterWrite
 42101  005EA2                     l855:
 42102                           
 42103                           ;radio_driver_SX1276.c: 917: }
 42104                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 42105  005EA2  0101               	movlb	1	; () banked
 42106  005EA4  8358               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 42107                           
 42108                           ; BSR set to: 1
 42109                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 42110  005EA6  0EE7               	movlw	231
 42111  005EA8  1758               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 42112                           
 42113                           ; BSR set to: 1
 42114                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 42115  005EAA  0100               	movlb	0	; () banked
 42116  005EAC  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42117  005EAE  11B2               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42118  005EB0  A4D8               	btfss	status,2,c
 42119  005EB2  D008               	goto	l856
 42120                           
 42121                           ; BSR set to: 0
 42122                           ;radio_driver_SX1276.c: 925: {
 42123                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 42124  005EB4  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 42125  005EB8  0E00               	movlw	0
 42126  005EBA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42127  005EBC  0E05               	movlw	5
 42128  005EBE  ECDC  F043         	call	_RADIO_WriteMode
 42129                           
 42130                           ;radio_driver_SX1276.c: 927: }
 42131  005EC2  D046               	goto	l859
 42132  005EC4                     l856:
 42133                           
 42134                           ;radio_driver_SX1276.c: 928: else
 42135                           ;radio_driver_SX1276.c: 929: {
 42136                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 42137  005EC4  0101               	movlb	1	; () banked
 42138  005EC6  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 42139  005EC8  A4D8               	btfss	status,2,c
 42140  005ECA  D009               	goto	l858
 42141                           
 42142                           ; BSR set to: 1
 42143                           ;radio_driver_SX1276.c: 931: {
 42144                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 42145  005ECC  0E01               	movlw	1
 42146  005ECE  0100               	movlb	0	; () banked
 42147  005ED0  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 42148  005ED2  0E00               	movlw	0
 42149  005ED4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42150  005ED6  0E06               	movlw	6
 42151  005ED8  ECDC  F043         	call	_RADIO_WriteMode
 42152                           
 42153                           ;radio_driver_SX1276.c: 933: }
 42154  005EDC  D039               	goto	l859
 42155  005EDE                     l858:
 42156                           
 42157                           ;radio_driver_SX1276.c: 934: else
 42158                           ;radio_driver_SX1276.c: 935: {
 42159                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 42160  005EDE  0E00               	movlw	0
 42161  005EE0  0100               	movlb	0	; () banked
 42162  005EE2  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 42163  005EE4  0E00               	movlw	0
 42164  005EE6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 42165  005EE8  0E05               	movlw	5
 42166  005EEA  ECDC  F043         	call	_RADIO_WriteMode
 42167                           
 42168                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 42169  005EEE  0100               	movlb	0	; () banked
 42170  005EF0  51B1               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 42171  005EF2  6FB3               	movwf	??_RADIO_ReceiveStart& (0+255),b
 42172  005EF4  51B2               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 42173  005EF6  6FB4               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 42174  005EF8  6BB5               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 42175  005EFA  6BB6               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 42176  005EFC  0E0C               	movlw	12
 42177  005EFE                     u20475:
 42178  005EFE  90D8               	bcf	status,0,c
 42179  005F00  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 42180  005F02  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 42181  005F04  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 42182  005F06  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 42183  005F08  2EE8               	decfsz	wreg,f,c
 42184  005F0A  D7F9               	goto	u20475
 42185  005F0C  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 42186  005F10  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 42187  005F14  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 42188  005F18  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 42189  005F1C  0E7D               	movlw	125
 42190  005F1E  6F64               	movwf	___lldiv@divisor& (0+255),b
 42191  005F20  0E00               	movlw	0
 42192  005F22  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42193  005F24  0E00               	movlw	0
 42194  005F26  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42195  005F28  0E00               	movlw	0
 42196  005F2A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42197  005F2C  ECAE  F050         	call	___lldiv	;wreg free
 42198  005F30  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 42199  005F34  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 42200  005F38  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 42201  005F3C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 42202  005F40  0101               	movlb	1	; () banked
 42203  005F42  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 42204  005F44  ECD5  F05A         	call	_SwTimerSetTimeout
 42205                           
 42206                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 42207  005F48  0101               	movlb	1	; () banked
 42208  005F4A  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 42209  005F4C  EC5A  F04D         	call	_SwTimerStart
 42210  005F50                     l859:
 42211                           
 42212                           ;radio_driver_SX1276.c: 939: }
 42213                           ;radio_driver_SX1276.c: 940: }
 42214                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 42215  005F50  0101               	movlb	1	; () banked
 42216  005F52  515F               	movf	(_RadioConfiguration+42)& (0+255),w,b
 42217  005F54  1160               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 42218  005F56  1161               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 42219  005F58  1162               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 42220  005F5A  B4D8               	btfsc	status,2,c
 42221  005F5C  D061               	goto	l860
 42222                           
 42223                           ; BSR set to: 1
 42224                           ;radio_driver_SX1276.c: 943: {
 42225                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 42226  005F5E  5162               	movf	(_RadioConfiguration+45)& (0+255),w,b
 42227  005F60  E107               	bnz	u20490
 42228  005F62  295F               	incf	(_RadioConfiguration+42)& (0+255),w,b
 42229  005F64  0EFF               	movlw	255
 42230  005F66  5960               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 42231  005F68  0E0F               	movlw	15
 42232  005F6A  5961               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 42233  005F6C  A0D8               	btfss	status,0,c
 42234  005F6E  D01D               	goto	l862
 42235  005F70                     u20490:
 42236                           
 42237                           ; BSR set to: 1
 42238  005F70  C15F  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 42239  005F74  C160  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 42240  005F78  C161  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 42241  005F7C  C162  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 42242  005F80  0E7D               	movlw	125
 42243  005F82  0100               	movlb	0	; () banked
 42244  005F84  6F64               	movwf	___lldiv@divisor& (0+255),b
 42245  005F86  0E00               	movlw	0
 42246  005F88  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42247  005F8A  0E00               	movlw	0
 42248  005F8C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42249  005F8E  0E00               	movlw	0
 42250  005F90  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42251  005F92  ECAE  F050         	call	___lldiv	;wreg free
 42252  005F96  0E0C               	movlw	12
 42253  005F98                     u20505:
 42254  005F98  90D8               	bcf	status,0,c
 42255  005F9A  0100               	movlb	0	; () banked
 42256  005F9C  3760               	rlcf	?___lldiv& (0+255),f,b
 42257  005F9E  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 42258  005FA0  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 42259  005FA2  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 42260  005FA4  2EE8               	decfsz	wreg,f,c
 42261  005FA6  D7F8               	goto	u20505
 42262  005FA8  D023               	goto	L21
 42263  005FAA                     l862:
 42264                           
 42265                           ; BSR set to: 0
 42266  005FAA  C15F  F0B3         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 42267  005FAE  C160  F0B4         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 42268  005FB2  C161  F0B5         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 42269  005FB6  C162  F0B6         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 42270  005FBA  0E0C               	movlw	12
 42271  005FBC                     u20515:
 42272  005FBC  90D8               	bcf	status,0,c
 42273  005FBE  0100               	movlb	0	; () banked
 42274  005FC0  37B3               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 42275  005FC2  37B4               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 42276  005FC4  37B5               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 42277  005FC6  37B6               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 42278  005FC8  2EE8               	decfsz	wreg,f,c
 42279  005FCA  D7F8               	goto	u20515
 42280  005FCC  C0B3  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 42281  005FD0  C0B4  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 42282  005FD4  C0B5  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 42283  005FD8  C0B6  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 42284  005FDC  0E7D               	movlw	125
 42285  005FDE  6F64               	movwf	___lldiv@divisor& (0+255),b
 42286  005FE0  0E00               	movlw	0
 42287  005FE2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 42288  005FE4  0E00               	movlw	0
 42289  005FE6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 42290  005FE8  0E00               	movlw	0
 42291  005FEA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 42292  005FEC  ECAE  F050         	call	___lldiv	;wreg free
 42293  005FF0                     L21:
 42294  005FF0  C060  F0B7         	movff	?___lldiv,_RADIO_ReceiveStart$1177
 42295  005FF4  C061  F0B8         	movff	?___lldiv+1,_RADIO_ReceiveStart$1177+1
 42296  005FF8  C062  F0B9         	movff	?___lldiv+2,_RADIO_ReceiveStart$1177+2
 42297  005FFC  C063  F0BA         	movff	?___lldiv+3,_RADIO_ReceiveStart$1177+3
 42298  006000  C0B7  F06D         	movff	_RADIO_ReceiveStart$1177,SwTimerSetTimeout@timeout
 42299  006004  C0B8  F06E         	movff	_RADIO_ReceiveStart$1177+1,SwTimerSetTimeout@timeout+1
 42300  006008  C0B9  F06F         	movff	_RADIO_ReceiveStart$1177+2,SwTimerSetTimeout@timeout+2
 42301  00600C  C0BA  F070         	movff	_RADIO_ReceiveStart$1177+3,SwTimerSetTimeout@timeout+3
 42302  006010  0101               	movlb	1	; () banked
 42303  006012  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 42304  006014  ECD5  F05A         	call	_SwTimerSetTimeout
 42305                           
 42306                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 42307  006018  0101               	movlb	1	; () banked
 42308  00601A  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 42309  00601C  EC5A  F04D         	call	_SwTimerStart
 42310  006020                     l860:
 42311                           
 42312                           ;radio_driver_SX1276.c: 946: }
 42313                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 42314  006020  0E00               	movlw	0
 42315  006022  0100               	movlb	0	; () banked
 42316  006024  6FB2               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 42317  006026  0E00               	movlw	0
 42318  006028  6FB1               	movwf	?_RADIO_ReceiveStart& (0+255),b
 42319  00602A  0012               	return	
 42320  00602C                     __end_of_RADIO_ReceiveStart:
 42321                           	opt stack 0
 42322                           tosu	equ	0xFFF
 42323                           tosh	equ	0xFFE
 42324                           tosl	equ	0xFFD
 42325                           pclath	equ	0xFFA
 42326                           tblptru	equ	0xFF8
 42327                           tblptrh	equ	0xFF7
 42328                           tblptrl	equ	0xFF6
 42329                           tablat	equ	0xFF5
 42330                           prodh	equ	0xFF4
 42331                           prodl	equ	0xFF3
 42332                           intcon	equ	0xFF2
 42333                           intcon2	equ	0xFF1
 42334                           intcon3	equ	0xFF0
 42335                           indf0	equ	0xFEF
 42336                           postinc0	equ	0xFEE
 42337                           fsr0h	equ	0xFEA
 42338                           fsr0l	equ	0xFE9
 42339                           wreg	equ	0xFE8
 42340                           postinc1	equ	0xFE6
 42341                           postdec1	equ	0xFE5
 42342                           plusw1	equ	0xFE3
 42343                           fsr1h	equ	0xFE2
 42344                           fsr1l	equ	0xFE1
 42345                           indf2	equ	0xFDF
 42346                           postinc2	equ	0xFDE
 42347                           postdec2	equ	0xFDD
 42348                           plusw2	equ	0xFDB
 42349                           fsr2h	equ	0xFDA
 42350                           fsr2l	equ	0xFD9
 42351                           status	equ	0xFD8
 42352                           
 42353 ;; *************** function _ConfigureRadioRx *****************
 42354 ;; Defined at:
 42355 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42356 ;; Parameters:    Size  Location     Type
 42357 ;;  dataRate        1    wreg     unsigned char 
 42358 ;;  freq            4   19[BANK0 ] unsigned long 
 42359 ;; Auto vars:     Size  Location     Type
 42360 ;;  dataRate        1   23[BANK0 ] unsigned char 
 42361 ;; Return value:  Size  Location     Type
 42362 ;;                  1    wreg      void 
 42363 ;; Registers used:
 42364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42365 ;; Tracked objects:
 42366 ;;		On entry : 0/0
 42367 ;;		On exit  : 0/0
 42368 ;;		Unchanged: 0/0
 42369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42374 ;;Total ram usage:        5 bytes
 42375 ;; Hardware stack levels used:    1
 42376 ;; Hardware stack levels required when called:   10
 42377 ;; This function calls:
 42378 ;;		_ConfigureRadio
 42379 ;;		_RADIO_SetCRC
 42380 ;;		_RADIO_SetIQInverted
 42381 ;; This function is called by:
 42382 ;;		_LORAWAN_ReceiveWindow1Callback
 42383 ;;		_LORAWAN_ReceiveWindow2Callback
 42384 ;;		_LORAWAN_EnterContinuousReceive
 42385 ;; This function uses a non-reentrant model
 42386 ;;
 42387                           
 42388                           	psect	text228
 42389  00BC5A                     __ptext228:
 42390                           	opt stack 0
 42391  00BC5A                     _ConfigureRadioRx:
 42392                           	opt stack 15
 42393                           
 42394                           ; BSR set to: 0
 42395                           ;incstack = 0
 42396                           ;ConfigureRadioRx@dataRate stored from wreg
 42397  00BC5A  0100               	movlb	0	; () banked
 42398  00BC5C  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 42399                           
 42400                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 42401  00BC5E  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 42402  00BC62  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 42403  00BC66  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 42404  00BC6A  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 42405  00BC6E  0100               	movlb	0	; () banked
 42406  00BC70  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 42407  00BC72  EC62  F04C         	call	_ConfigureRadio
 42408                           
 42409                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 42410  00BC76  0E00               	movlw	0
 42411  00BC78  ECDF  F062         	call	_RADIO_SetCRC
 42412                           
 42413                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 42414  00BC7C  0E01               	movlw	1
 42415  00BC7E  ECDA  F062         	call	_RADIO_SetIQInverted
 42416  00BC82  0012               	return		;funcret
 42417  00BC84                     __end_of_ConfigureRadioRx:
 42418                           	opt stack 0
 42419                           tosu	equ	0xFFF
 42420                           tosh	equ	0xFFE
 42421                           tosl	equ	0xFFD
 42422                           pclath	equ	0xFFA
 42423                           tblptru	equ	0xFF8
 42424                           tblptrh	equ	0xFF7
 42425                           tblptrl	equ	0xFF6
 42426                           tablat	equ	0xFF5
 42427                           prodh	equ	0xFF4
 42428                           prodl	equ	0xFF3
 42429                           intcon	equ	0xFF2
 42430                           intcon2	equ	0xFF1
 42431                           intcon3	equ	0xFF0
 42432                           indf0	equ	0xFEF
 42433                           postinc0	equ	0xFEE
 42434                           fsr0h	equ	0xFEA
 42435                           fsr0l	equ	0xFE9
 42436                           wreg	equ	0xFE8
 42437                           postinc1	equ	0xFE6
 42438                           postdec1	equ	0xFE5
 42439                           plusw1	equ	0xFE3
 42440                           fsr1h	equ	0xFE2
 42441                           fsr1l	equ	0xFE1
 42442                           indf2	equ	0xFDF
 42443                           postinc2	equ	0xFDE
 42444                           postdec2	equ	0xFDD
 42445                           plusw2	equ	0xFDB
 42446                           fsr2h	equ	0xFDA
 42447                           fsr2l	equ	0xFD9
 42448                           status	equ	0xFD8
 42449                           
 42450 ;; *************** function _INTERRUPT_GetDioStatus *****************
 42451 ;; Defined at:
 42452 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42453 ;; Parameters:    Size  Location     Type
 42454 ;;		None
 42455 ;; Auto vars:     Size  Location     Type
 42456 ;;  a               1    0[BANK0 ] unsigned char 
 42457 ;; Return value:  Size  Location     Type
 42458 ;;                  1    wreg      unsigned char 
 42459 ;; Registers used:
 42460 ;;		wreg, status,2
 42461 ;; Tracked objects:
 42462 ;;		On entry : 0/0
 42463 ;;		On exit  : 0/0
 42464 ;;		Unchanged: 0/0
 42465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42470 ;;Total ram usage:        1 bytes
 42471 ;; Hardware stack levels used:    1
 42472 ;; Hardware stack levels required when called:    7
 42473 ;; This function calls:
 42474 ;;		Nothing
 42475 ;; This function is called by:
 42476 ;;		_LORAWAN_Mainloop
 42477 ;; This function uses a non-reentrant model
 42478 ;;
 42479                           
 42480                           	psect	text229
 42481  00C336                     __ptext229:
 42482                           	opt stack 0
 42483  00C336                     _INTERRUPT_GetDioStatus:
 42484                           	opt stack 22
 42485                           
 42486                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 42487                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 42488                           
 42489                           ;incstack = 0
 42490  00C336  9EF2               	bcf	intcon,7,c	;volatile
 42491                           
 42492                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 42493  00C338  C134  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 42494                           
 42495                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 42496  00C33C  0E00               	movlw	0
 42497  00C33E  0101               	movlb	1	; () banked
 42498  00C340  6F34               	movwf	_dioStatus& (0+255),b	;volatile
 42499                           
 42500                           ; BSR set to: 1
 42501                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 42502  00C342  8EF2               	bsf	intcon,7,c	;volatile
 42503                           
 42504                           ;interrupt_manager_lora_addons.c: 55: return a;
 42505  00C344  0100               	movlb	0	; () banked
 42506  00C346  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 42507  00C348  0012               	return	
 42508  00C34A                     __end_of_INTERRUPT_GetDioStatus:
 42509                           	opt stack 0
 42510                           tosu	equ	0xFFF
 42511                           tosh	equ	0xFFE
 42512                           tosl	equ	0xFFD
 42513                           pclath	equ	0xFFA
 42514                           tblptru	equ	0xFF8
 42515                           tblptrh	equ	0xFF7
 42516                           tblptrl	equ	0xFF6
 42517                           tablat	equ	0xFF5
 42518                           prodh	equ	0xFF4
 42519                           prodl	equ	0xFF3
 42520                           intcon	equ	0xFF2
 42521                           intcon2	equ	0xFF1
 42522                           intcon3	equ	0xFF0
 42523                           indf0	equ	0xFEF
 42524                           postinc0	equ	0xFEE
 42525                           fsr0h	equ	0xFEA
 42526                           fsr0l	equ	0xFE9
 42527                           wreg	equ	0xFE8
 42528                           postinc1	equ	0xFE6
 42529                           postdec1	equ	0xFE5
 42530                           plusw1	equ	0xFE3
 42531                           fsr1h	equ	0xFE2
 42532                           fsr1l	equ	0xFE1
 42533                           indf2	equ	0xFDF
 42534                           postinc2	equ	0xFDE
 42535                           postdec2	equ	0xFDD
 42536                           plusw2	equ	0xFDB
 42537                           fsr2h	equ	0xFDA
 42538                           fsr2l	equ	0xFD9
 42539                           status	equ	0xFD8
 42540                           
 42541 ;; *************** function _LORAWAN_Join *****************
 42542 ;; Defined at:
 42543 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42544 ;; Parameters:    Size  Location     Type
 42545 ;;  activationTy    1    wreg     enum E7213
 42546 ;; Auto vars:     Size  Location     Type
 42547 ;;  activationTy    1  125[BANK0 ] enum E7213
 42548 ;;  result          1  124[BANK0 ] enum E7190
 42549 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
 42550 ;; Return value:  Size  Location     Type
 42551 ;;                  1    wreg      enum E7190
 42552 ;; Registers used:
 42553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42554 ;; Tracked objects:
 42555 ;;		On entry : 0/0
 42556 ;;		On exit  : 0/0
 42557 ;;		Unchanged: 0/0
 42558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42562 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42563 ;;Total ram usage:        3 bytes
 42564 ;; Hardware stack levels used:    1
 42565 ;; Hardware stack levels required when called:   14
 42566 ;; This function calls:
 42567 ;;		_PrepareJoinRequestFrame
 42568 ;;		_RADIO_Transmit
 42569 ;;		_SelectChannelForTransmission
 42570 ;;		_SwTimerSetTimeout
 42571 ;;		_SwTimerStart
 42572 ;;		_UpdateJoinInProgress
 42573 ;; This function is called by:
 42574 ;;		_main
 42575 ;; This function uses a non-reentrant model
 42576 ;;
 42577                           
 42578                           	psect	text230
 42579  00996C                     __ptext230:
 42580                           	opt stack 0
 42581  00996C                     _LORAWAN_Join:
 42582                           	opt stack 16
 42583                           
 42584                           ; BSR set to: 0
 42585                           ;incstack = 0
 42586                           ;LORAWAN_Join@activationTypeNew stored from wreg
 42587  00996C  0100               	movlb	0	; () banked
 42588  00996E  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 42589                           
 42590                           ;lorawan.c: 117: uint8_t bufferIndex;
 42591                           ;lorawan.c: 118: LorawanError_t result;
 42592                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 42593  009970  0102               	movlb	2	; () banked
 42594  009972  B107               	btfsc	(_loRa+3)& (0+255),0,b
 42595  009974  0012               	return	
 42596                           
 42597                           ; BSR set to: 2
 42598                           ;lorawan.c: 123: }
 42599                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 42600                           
 42601                           ; BSR set to: 2
 42602                           ;lorawan.c: 121: {
 42603                           ;lorawan.c: 122: return MAC_PAUSED;
 42604                           ;	Return value of _LORAWAN_Join is never used
 42605  009976  BF06               	btfsc	(_loRa+2)& (0+255),7,b
 42606  009978  0012               	return	
 42607                           
 42608                           ; BSR set to: 2
 42609                           ;lorawan.c: 128: }
 42610                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 42611                           
 42612                           ; BSR set to: 2
 42613                           
 42614                           ; BSR set to: 2
 42615                           ;lorawan.c: 126: {
 42616                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 42617                           ;	Return value of _LORAWAN_Join is never used
 42618  00997A  5106               	movf	(_loRa+2)& (0+255),w,b
 42619  00997C  0B0F               	andlw	15
 42620  00997E  0900               	iorlw	0
 42621  009980  A4D8               	btfss	status,2,c
 42622  009982  0012               	return	
 42623                           
 42624                           ; BSR set to: 2
 42625                           ;lorawan.c: 133: }
 42626                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 42627                           
 42628                           ; BSR set to: 2
 42629                           ;lorawan.c: 131: {
 42630                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 42631                           ;	Return value of _LORAWAN_Join is never used
 42632  009984  C0DD  F221         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 42633                           
 42634                           ; BSR set to: 2
 42635                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 42636  009988  0100               	movlb	0	; () banked
 42637  00998A  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 42638  00998C  A4D8               	btfss	status,2,c
 42639  00998E  D024               	goto	l1831
 42640                           
 42641                           ; BSR set to: 0
 42642                           ;lorawan.c: 138: {
 42643                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 42644  009990  0102               	movlb	2	; () banked
 42645  009992  A1A9               	btfss	(_loRa+165)& (0+255),0,b
 42646  009994  0012               	return	
 42647                           
 42648                           ; BSR set to: 2
 42649  009996  A3A9               	btfss	(_loRa+165)& (0+255),1,b
 42650  009998  0012               	return	
 42651                           
 42652                           ; BSR set to: 2
 42653  00999A  A7A9               	btfss	(_loRa+165)& (0+255),3,b
 42654  00999C  0012               	return	
 42655                           
 42656                           ; BSR set to: 2
 42657                           ;lorawan.c: 144: else
 42658                           ;lorawan.c: 145: {
 42659                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 42660                           
 42661                           ; BSR set to: 2
 42662                           
 42663                           ; BSR set to: 2
 42664                           ;lorawan.c: 143: }
 42665                           
 42666                           ; BSR set to: 2
 42667                           ;lorawan.c: 141: {
 42668                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 42669                           ;	Return value of _LORAWAN_Join is never used
 42670  00999E  EC76  F036         	call	_PrepareJoinRequestFrame	;wreg free
 42671  0099A2  0100               	movlb	0	; () banked
 42672  0099A4  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 42673                           
 42674                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 42675  0099A6  0E00               	movlw	0
 42676  0099A8  EC7B  F053         	call	_SelectChannelForTransmission
 42677  0099AC  0100               	movlb	0	; () banked
 42678  0099AE  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
 42679                           
 42680                           ; BSR set to: 0
 42681                           ;lorawan.c: 149: if (result == OK)
 42682  0099B0  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
 42683  0099B2  A4D8               	btfss	status,2,c
 42684  0099B4  0012               	return	
 42685                           
 42686                           ; BSR set to: 0
 42687                           ;lorawan.c: 150: {
 42688                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 42689  0099B6  0E20               	movlw	low _macBuffer
 42690  0099B8  6FB1               	movwf	RADIO_Transmit@buffer& (0+255),b
 42691  0099BA  0E05               	movlw	high _macBuffer
 42692  0099BC  6FB2               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 42693  0099BE  C0DB  F0B3         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 42694  0099C2  ECE2  F02D         	call	_RADIO_Transmit	;wreg free
 42695  0099C6  0100               	movlb	0	; () banked
 42696  0099C8  51B1               	movf	?_RADIO_Transmit& (0+255),w,b
 42697  0099CA  11B2               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 42698  0099CC  A4D8               	btfss	status,2,c
 42699  0099CE  0012               	return	
 42700                           
 42701                           ; BSR set to: 0
 42702                           ;lorawan.c: 152: {
 42703                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 42704  0099D0  0E01               	movlw	1
 42705  0099D2  ECDC  F060         	call	_UpdateJoinInProgress
 42706                           
 42707                           ;lorawan.c: 164: }
 42708                           ;lorawan.c: 165: }
 42709                           ;lorawan.c: 166: }
 42710                           
 42711                           ;lorawan.c: 161: else
 42712                           ;lorawan.c: 162: {
 42713                           ;lorawan.c: 163: return result;
 42714                           ;	Return value of _LORAWAN_Join is never used
 42715                           
 42716                           ;lorawan.c: 159: }
 42717                           ;lorawan.c: 160: }
 42718                           
 42719                           ;lorawan.c: 156: else
 42720                           ;lorawan.c: 157: {
 42721                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 42722                           ;	Return value of _LORAWAN_Join is never used
 42723                           
 42724                           ;lorawan.c: 155: }
 42725                           
 42726                           ;lorawan.c: 154: return OK;
 42727                           ;	Return value of _LORAWAN_Join is never used
 42728  0099D6  0012               	return	
 42729  0099D8                     l1831:
 42730                           
 42731                           ; BSR set to: 0
 42732                           ;lorawan.c: 167: else
 42733                           ;lorawan.c: 168: {
 42734                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 42735  0099D8  0102               	movlb	2	; () banked
 42736  0099DA  ABA9               	btfss	(_loRa+165)& (0+255),5,b
 42737  0099DC  0012               	return	
 42738                           
 42739                           ; BSR set to: 2
 42740  0099DE  A9A9               	btfss	(_loRa+165)& (0+255),4,b
 42741  0099E0  0012               	return	
 42742                           
 42743                           ; BSR set to: 2
 42744  0099E2  A5A9               	btfss	(_loRa+165)& (0+255),2,b
 42745  0099E4  0012               	return	
 42746                           
 42747                           ; BSR set to: 2
 42748                           ;lorawan.c: 174: else
 42749                           ;lorawan.c: 175: {
 42750                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 42751                           
 42752                           ; BSR set to: 2
 42753                           
 42754                           ; BSR set to: 2
 42755                           ;lorawan.c: 173: }
 42756                           
 42757                           ; BSR set to: 2
 42758                           ;lorawan.c: 171: {
 42759                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 42760                           ;	Return value of _LORAWAN_Join is never used
 42761  0099E6  0E07               	movlw	7
 42762  0099E8  ECDC  F060         	call	_UpdateJoinInProgress
 42763                           
 42764                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 42765  0099EC  0E8F               	movlw	143
 42766  0099EE  0100               	movlb	0	; () banked
 42767  0099F0  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 42768  0099F2  0E02               	movlw	2
 42769  0099F4  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 42770  0099F6  0E00               	movlw	0
 42771  0099F8  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 42772  0099FA  0E00               	movlw	0
 42773  0099FC  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 42774  0099FE  0102               	movlb	2	; () banked
 42775  009A00  51F7               	movf	(_loRa+243)& (0+255),w,b
 42776  009A02  ECD5  F05A         	call	_SwTimerSetTimeout
 42777                           
 42778                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 42779  009A06  0102               	movlb	2	; () banked
 42780  009A08  51F7               	movf	(_loRa+243)& (0+255),w,b
 42781  009A0A  EC5A  F04D         	call	_SwTimerStart
 42782                           
 42783                           ;lorawan.c: 180: return OK;
 42784                           ;	Return value of _LORAWAN_Join is never used
 42785  009A0E  0012               	return	
 42786  009A10                     __end_of_LORAWAN_Join:
 42787                           	opt stack 0
 42788                           tosu	equ	0xFFF
 42789                           tosh	equ	0xFFE
 42790                           tosl	equ	0xFFD
 42791                           pclath	equ	0xFFA
 42792                           tblptru	equ	0xFF8
 42793                           tblptrh	equ	0xFF7
 42794                           tblptrl	equ	0xFF6
 42795                           tablat	equ	0xFF5
 42796                           prodh	equ	0xFF4
 42797                           prodl	equ	0xFF3
 42798                           intcon	equ	0xFF2
 42799                           intcon2	equ	0xFF1
 42800                           intcon3	equ	0xFF0
 42801                           indf0	equ	0xFEF
 42802                           postinc0	equ	0xFEE
 42803                           fsr0h	equ	0xFEA
 42804                           fsr0l	equ	0xFE9
 42805                           wreg	equ	0xFE8
 42806                           postinc1	equ	0xFE6
 42807                           postdec1	equ	0xFE5
 42808                           plusw1	equ	0xFE3
 42809                           fsr1h	equ	0xFE2
 42810                           fsr1l	equ	0xFE1
 42811                           indf2	equ	0xFDF
 42812                           postinc2	equ	0xFDE
 42813                           postdec2	equ	0xFDD
 42814                           plusw2	equ	0xFDB
 42815                           fsr2h	equ	0xFDA
 42816                           fsr2l	equ	0xFD9
 42817                           status	equ	0xFD8
 42818                           
 42819 ;; *************** function _UpdateJoinInProgress *****************
 42820 ;; Defined at:
 42821 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42822 ;; Parameters:    Size  Location     Type
 42823 ;;  state           1    wreg     unsigned char 
 42824 ;; Auto vars:     Size  Location     Type
 42825 ;;  state           1    0[BANK0 ] unsigned char 
 42826 ;; Return value:  Size  Location     Type
 42827 ;;                  1    wreg      void 
 42828 ;; Registers used:
 42829 ;;		wreg, status,2, status,0
 42830 ;; Tracked objects:
 42831 ;;		On entry : 0/0
 42832 ;;		On exit  : 0/0
 42833 ;;		Unchanged: 0/0
 42834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42839 ;;Total ram usage:        1 bytes
 42840 ;; Hardware stack levels used:    1
 42841 ;; Hardware stack levels required when called:    7
 42842 ;; This function calls:
 42843 ;;		Nothing
 42844 ;; This function is called by:
 42845 ;;		_LORAWAN_Join
 42846 ;; This function uses a non-reentrant model
 42847 ;;
 42848                           
 42849                           	psect	text231
 42850  00C1B8                     __ptext231:
 42851                           	opt stack 0
 42852  00C1B8                     _UpdateJoinInProgress:
 42853                           	opt stack 22
 42854                           
 42855                           ;incstack = 0
 42856                           ;UpdateJoinInProgress@state stored from wreg
 42857  00C1B8  0100               	movlb	0	; () banked
 42858  00C1BA  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 42859                           
 42860                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 42861  00C1BC  0102               	movlb	2	; () banked
 42862  00C1BE  9906               	bcf	(_loRa+2)& (0+255),4,b
 42863                           
 42864                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 42865  00C1C0  8504               	bsf	_loRa& (0+255),2,b
 42866                           
 42867                           ; BSR set to: 2
 42868                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 42869  00C1C2  5106               	movf	(_loRa+2)& (0+255),w,b
 42870  00C1C4  0100               	movlb	0	; () banked
 42871  00C1C6  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 42872  00C1C8  0BF0               	andlw	-16
 42873  00C1CA  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 42874  00C1CC  0102               	movlb	2	; () banked
 42875  00C1CE  6F06               	movwf	(_loRa+2)& (0+255),b
 42876                           
 42877                           ; BSR set to: 2
 42878  00C1D0  0012               	return		;funcret
 42879  00C1D2                     __end_of_UpdateJoinInProgress:
 42880                           	opt stack 0
 42881                           tosu	equ	0xFFF
 42882                           tosh	equ	0xFFE
 42883                           tosl	equ	0xFFD
 42884                           pclath	equ	0xFFA
 42885                           tblptru	equ	0xFF8
 42886                           tblptrh	equ	0xFF7
 42887                           tblptrl	equ	0xFF6
 42888                           tablat	equ	0xFF5
 42889                           prodh	equ	0xFF4
 42890                           prodl	equ	0xFF3
 42891                           intcon	equ	0xFF2
 42892                           intcon2	equ	0xFF1
 42893                           intcon3	equ	0xFF0
 42894                           indf0	equ	0xFEF
 42895                           postinc0	equ	0xFEE
 42896                           fsr0h	equ	0xFEA
 42897                           fsr0l	equ	0xFE9
 42898                           wreg	equ	0xFE8
 42899                           postinc1	equ	0xFE6
 42900                           postdec1	equ	0xFE5
 42901                           plusw1	equ	0xFE3
 42902                           fsr1h	equ	0xFE2
 42903                           fsr1l	equ	0xFE1
 42904                           indf2	equ	0xFDF
 42905                           postinc2	equ	0xFDE
 42906                           postdec2	equ	0xFDD
 42907                           plusw2	equ	0xFDB
 42908                           fsr2h	equ	0xFDA
 42909                           fsr2l	equ	0xFD9
 42910                           status	equ	0xFD8
 42911                           
 42912 ;; *************** function _SelectChannelForTransmission *****************
 42913 ;; Defined at:
 42914 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42915 ;; Parameters:    Size  Location     Type
 42916 ;;  transmission    1    wreg     unsigned char 
 42917 ;; Auto vars:     Size  Location     Type
 42918 ;;  transmission    1   91[BANK0 ] unsigned char 
 42919 ;;  channelIndex    1   93[BANK0 ] unsigned char 
 42920 ;;  result          1   92[BANK0 ] enum E7249
 42921 ;; Return value:  Size  Location     Type
 42922 ;;                  1    wreg      enum E7249
 42923 ;; Registers used:
 42924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42925 ;; Tracked objects:
 42926 ;;		On entry : 0/0
 42927 ;;		On exit  : 0/0
 42928 ;;		Unchanged: 0/0
 42929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42933 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42934 ;;Total ram usage:        3 bytes
 42935 ;; Hardware stack levels used:    1
 42936 ;; Hardware stack levels required when called:   11
 42937 ;; This function calls:
 42938 ;;		_ConfigureRadioTx
 42939 ;;		_SearchAvailableChannel
 42940 ;; This function is called by:
 42941 ;;		_LORAWAN_RxTimeout
 42942 ;;		_LORAWAN_Join
 42943 ;;		_LORAWAN_Send
 42944 ;;		_AckRetransmissionCallback
 42945 ;;		_UnconfirmedTransmissionCallback
 42946 ;; This function uses a non-reentrant model
 42947 ;;
 42948                           
 42949                           	psect	text232
 42950  00A6F6                     __ptext232:
 42951                           	opt stack 0
 42952  00A6F6                     _SelectChannelForTransmission:
 42953                           	opt stack 18
 42954                           
 42955                           ; BSR set to: 2
 42956                           ;incstack = 0
 42957                           ;SelectChannelForTransmission@transmissionType stored from wreg
 42958  00A6F6  0100               	movlb	0	; () banked
 42959  00A6F8  6FBB               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 42960                           
 42961                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 42962  00A6FA  0E00               	movlw	0
 42963  00A6FC  0100               	movlb	0	; () banked
 42964  00A6FE  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 42965                           
 42966                           ; BSR set to: 0
 42967                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 42968                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 42969  00A700  C0BB  F0AF         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 42970  00A704  0EBD               	movlw	low SelectChannelForTransmission@channelIndex
 42971  00A706  6FB0               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 42972  00A708  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 42973  00A70A  6FB1               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 42974  00A70C  0E10               	movlw	16
 42975  00A70E  EC97  F040         	call	_SearchAvailableChannel
 42976  00A712  0100               	movlb	0	; () banked
 42977  00A714  6FBC               	movwf	SelectChannelForTransmission@result& (0+255),b
 42978                           
 42979                           ; BSR set to: 0
 42980                           ;lorawan_eu.c: 926: if (result == OK)
 42981  00A716  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 42982  00A718  A4D8               	btfss	status,2,c
 42983  00A71A  D020               	goto	l1517
 42984                           
 42985                           ; BSR set to: 0
 42986                           ;lorawan_eu.c: 927: {
 42987                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 42988  00A71C  C0BD  F2DE         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 42989                           
 42990                           ; BSR set to: 0
 42991                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 42992  00A720  51BD               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 42993  00A722  0D0E               	mullw	14
 42994  00A724  0E00               	movlw	low _Channels
 42995  00A726  24F3               	addwf	prodl,w,c
 42996  00A728  6ED9               	movwf	fsr2l,c
 42997  00A72A  0E04               	movlw	high _Channels
 42998  00A72C  20F4               	addwfc	prodh,w,c
 42999  00A72E  6EDA               	movwf	fsr2h,c
 43000  00A730  CFDE F217          	movff	postinc2,_loRa+19
 43001  00A734  CFDE F218          	movff	postinc2,_loRa+20
 43002  00A738  CFDE F219          	movff	postinc2,_loRa+21
 43003  00A73C  CFDE F21A          	movff	postinc2,_loRa+22
 43004                           
 43005                           ; BSR set to: 0
 43006                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 43007  00A740  C2E3  F21B         	movff	_loRa+223,_loRa+23
 43008                           
 43009                           ; BSR set to: 0
 43010                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 43011  00A744  C217  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 43012  00A748  C218  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 43013  00A74C  C219  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 43014  00A750  C21A  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 43015  00A754  0102               	movlb	2	; () banked
 43016  00A756  511B               	movf	(_loRa+23)& (0+255),w,b
 43017  00A758  EC1B  F058         	call	_ConfigureRadioTx
 43018  00A75C                     l1517:
 43019                           
 43020                           ;lorawan_eu.c: 933: }
 43021                           ;lorawan_eu.c: 934: return result;
 43022  00A75C  0100               	movlb	0	; () banked
 43023  00A75E  51BC               	movf	SelectChannelForTransmission@result& (0+255),w,b
 43024  00A760  0012               	return	
 43025  00A762                     __end_of_SelectChannelForTransmission:
 43026                           	opt stack 0
 43027                           tosu	equ	0xFFF
 43028                           tosh	equ	0xFFE
 43029                           tosl	equ	0xFFD
 43030                           pclath	equ	0xFFA
 43031                           tblptru	equ	0xFF8
 43032                           tblptrh	equ	0xFF7
 43033                           tblptrl	equ	0xFF6
 43034                           tablat	equ	0xFF5
 43035                           prodh	equ	0xFF4
 43036                           prodl	equ	0xFF3
 43037                           intcon	equ	0xFF2
 43038                           intcon2	equ	0xFF1
 43039                           intcon3	equ	0xFF0
 43040                           indf0	equ	0xFEF
 43041                           postinc0	equ	0xFEE
 43042                           fsr0h	equ	0xFEA
 43043                           fsr0l	equ	0xFE9
 43044                           wreg	equ	0xFE8
 43045                           postinc1	equ	0xFE6
 43046                           postdec1	equ	0xFE5
 43047                           plusw1	equ	0xFE3
 43048                           fsr1h	equ	0xFE2
 43049                           fsr1l	equ	0xFE1
 43050                           indf2	equ	0xFDF
 43051                           postinc2	equ	0xFDE
 43052                           postdec2	equ	0xFDD
 43053                           plusw2	equ	0xFDB
 43054                           fsr2h	equ	0xFDA
 43055                           fsr2l	equ	0xFD9
 43056                           status	equ	0xFD8
 43057                           
 43058 ;; *************** function _SearchAvailableChannel *****************
 43059 ;; Defined at:
 43060 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43061 ;; Parameters:    Size  Location     Type
 43062 ;;  maxChannels     1    wreg     unsigned char 
 43063 ;;  transmission    1   79[BANK0 ] unsigned char 
 43064 ;;  channelIndex    2   80[BANK0 ] PTR unsigned char 
 43065 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 43066 ;; Auto vars:     Size  Location     Type
 43067 ;;  maxChannels     1   88[BANK0 ] unsigned char 
 43068 ;;  i               1   90[BANK0 ] unsigned char 
 43069 ;;  randomNumber    1   89[BANK0 ] unsigned char 
 43070 ;;  result          1   87[BANK0 ] enum E7249
 43071 ;;  randomNumber    1   86[BANK0 ] unsigned char 
 43072 ;; Return value:  Size  Location     Type
 43073 ;;                  1    wreg      enum E7249
 43074 ;; Registers used:
 43075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43076 ;; Tracked objects:
 43077 ;;		On entry : 0/0
 43078 ;;		On exit  : 0/0
 43079 ;;		Unchanged: 0/0
 43080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43081 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43082 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43084 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43085 ;;Total ram usage:       12 bytes
 43086 ;; Hardware stack levels used:    1
 43087 ;; Hardware stack levels required when called:   10
 43088 ;; This function calls:
 43089 ;;		_Random
 43090 ;; This function is called by:
 43091 ;;		_SelectChannelForTransmission
 43092 ;;		_LORAWAN_RxDone
 43093 ;; This function uses a non-reentrant model
 43094 ;;
 43095                           
 43096                           	psect	text233
 43097  00812E                     __ptext233:
 43098                           	opt stack 0
 43099  00812E                     _SearchAvailableChannel:
 43100                           	opt stack 18
 43101                           
 43102                           ; BSR set to: 0
 43103                           ;incstack = 0
 43104                           ;SearchAvailableChannel@maxChannels stored from wreg
 43105  00812E  0100               	movlb	0	; () banked
 43106  008130  6FB8               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 43107                           
 43108                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 43109                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 43110  008132  0E00               	movlw	0
 43111  008134  0100               	movlb	0	; () banked
 43112  008136  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43113                           
 43114                           ; BSR set to: 0
 43115                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 43116  008138  C0B8  F0AD         	movff	SearchAvailableChannel@maxChannels,Random@max
 43117  00813C  6BAE               	clrf	(Random@max+1)& (0+255),b
 43118  00813E  EC49  F05F         	call	_Random	;wreg free
 43119  008142  0100               	movlb	0	; () banked
 43120  008144  29AD               	incf	?_Random& (0+255),w,b
 43121  008146  6FB9               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 43122                           
 43123                           ; BSR set to: 0
 43124                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 43125  008148  C0B9  F0B6         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 43126                           
 43127                           ;lorawan_eu.c: 786: while (randomNumber)
 43128  00814C  D074               	goto	l1481
 43129  00814E                     
 43130                           ; BSR set to: 0
 43131                           ;lorawan_eu.c: 787: {
 43132                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 43133                           
 43134                           ; BSR set to: 0
 43135  00814E  0E00               	movlw	0
 43136  008150  6FBA               	movwf	SearchAvailableChannel@i& (0+255),b
 43137  008152  D063               	goto	l1472
 43138  008154                     
 43139                           ; BSR set to: 0
 43140                           ;lorawan_eu.c: 789: {
 43141                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 43142                           
 43143                           ; BSR set to: 0
 43144  008154  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43145  008156  0D0E               	mullw	14
 43146  008158  0E04               	movlw	4
 43147  00815A  26F3               	addwf	prodl,f,c
 43148  00815C  0E00               	movlw	0
 43149  00815E  22F4               	addwfc	prodh,f,c
 43150  008160  0E00               	movlw	low _Channels
 43151  008162  24F3               	addwf	prodl,w,c
 43152  008164  6ED9               	movwf	fsr2l,c
 43153  008166  0E04               	movlw	high _Channels
 43154  008168  20F4               	addwfc	prodh,w,c
 43155  00816A  6EDA               	movwf	fsr2h,c
 43156  00816C  04DE               	decf	postinc2,w,c
 43157  00816E  A4D8               	btfss	status,2,c
 43158  008170  D052               	goto	l1477
 43159                           
 43160                           ; BSR set to: 0
 43161  008172  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43162  008174  0D0E               	mullw	14
 43163  008176  0E08               	movlw	8
 43164  008178  26F3               	addwf	prodl,f,c
 43165  00817A  0E00               	movlw	0
 43166  00817C  22F4               	addwfc	prodh,f,c
 43167  00817E  0E00               	movlw	low _Channels
 43168  008180  24F3               	addwf	prodl,w,c
 43169  008182  6ED9               	movwf	fsr2l,c
 43170  008184  0E04               	movlw	high _Channels
 43171  008186  20F4               	addwfc	prodh,w,c
 43172  008188  6EDA               	movwf	fsr2h,c
 43173  00818A  50DE               	movf	postinc2,w,c
 43174  00818C  10DE               	iorwf	postinc2,w,c
 43175  00818E  10DE               	iorwf	postinc2,w,c
 43176  008190  10DE               	iorwf	postinc2,w,c
 43177  008192  A4D8               	btfss	status,2,c
 43178  008194  D040               	goto	l1477
 43179                           
 43180                           ; BSR set to: 0
 43181  008196  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43182  008198  0D0E               	mullw	14
 43183  00819A  0E05               	movlw	5
 43184  00819C  26F3               	addwf	prodl,f,c
 43185  00819E  0E00               	movlw	0
 43186  0081A0  22F4               	addwfc	prodh,f,c
 43187  0081A2  0E00               	movlw	low _Channels
 43188  0081A4  24F3               	addwf	prodl,w,c
 43189  0081A6  6ED9               	movwf	fsr2l,c
 43190  0081A8  0E04               	movlw	high _Channels
 43191  0081AA  20F4               	addwfc	prodh,w,c
 43192  0081AC  6EDA               	movwf	fsr2h,c
 43193  0081AE  0104               	movlb	4	; () banked
 43194  0081B0  50DF               	movf	223,w,c
 43195  0081B2  0B0F               	andlw	15
 43196  0081B4  0100               	movlb	0	; () banked
 43197  0081B6  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 43198  0081B8  51B2               	movf	??_SearchAvailableChannel& (0+255),w,b
 43199  0081BA  0102               	movlb	2	; () banked
 43200  0081BC  5DE3               	subwf	(_loRa+223)& (0+255),w,b
 43201  0081BE  A0D8               	btfss	status,0,c
 43202  0081C0  D02A               	goto	l1477
 43203                           
 43204                           ; BSR set to: 2
 43205  0081C2  0100               	movlb	0	; () banked
 43206  0081C4  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43207  0081C6  0D0E               	mullw	14
 43208  0081C8  0E05               	movlw	5
 43209  0081CA  26F3               	addwf	prodl,f,c
 43210  0081CC  0E00               	movlw	0
 43211  0081CE  22F4               	addwfc	prodh,f,c
 43212  0081D0  0E00               	movlw	low _Channels
 43213  0081D2  24F3               	addwf	prodl,w,c
 43214  0081D4  6ED9               	movwf	fsr2l,c
 43215  0081D6  0E04               	movlw	high _Channels
 43216  0081D8  20F4               	addwfc	prodh,w,c
 43217  0081DA  6EDA               	movwf	fsr2h,c
 43218  0081DC  0104               	movlb	4	; () banked
 43219  0081DE  38DF               	swapf	223,w,c
 43220  0081E0  0B0F               	andlw	15
 43221  0081E2  0100               	movlb	0	; () banked
 43222  0081E4  6FB2               	movwf	??_SearchAvailableChannel& (0+255),b
 43223  0081E6  0102               	movlb	2	; () banked
 43224  0081E8  51E3               	movf	(_loRa+223)& (0+255),w,b
 43225  0081EA  0100               	movlb	0	; () banked
 43226  0081EC  5DB2               	subwf	??_SearchAvailableChannel& (0+255),w,b
 43227  0081EE  A0D8               	btfss	status,0,c
 43228  0081F0  D012               	goto	l1477
 43229                           
 43230                           ; BSR set to: 0
 43231                           ;lorawan_eu.c: 791: {
 43232                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 43233  0081F2  51AF               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 43234  0081F4  A4D8               	btfss	status,2,c
 43235  0081F6  D00E               	goto	l1475
 43236                           
 43237                           ; BSR set to: 0
 43238                           ;lorawan_eu.c: 793: {
 43239                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 43240  0081F8  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43241  0081FA  0D0E               	mullw	14
 43242  0081FC  0E0C               	movlw	12
 43243  0081FE  26F3               	addwf	prodl,f,c
 43244  008200  0E00               	movlw	0
 43245  008202  22F4               	addwfc	prodh,f,c
 43246  008204  0E00               	movlw	low _Channels
 43247  008206  24F3               	addwf	prodl,w,c
 43248  008208  6ED9               	movwf	fsr2l,c
 43249  00820A  0E04               	movlw	high _Channels
 43250  00820C  20F4               	addwfc	prodh,w,c
 43251  00820E  6EDA               	movwf	fsr2h,c
 43252  008210  04DE               	decf	postinc2,w,c
 43253  008212  B4D8               	btfsc	status,2,c
 43254  008214                     l1475:
 43255                           
 43256                           ; BSR set to: 0
 43257                           ;lorawan_eu.c: 799: else
 43258                           ;lorawan_eu.c: 800: {
 43259                           ;lorawan_eu.c: 801: randomNumber --;
 43260                           
 43261                           ; BSR set to: 0
 43262  008214  07B9               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 43263  008216                     l1477:
 43264                           
 43265                           ; BSR set to: 0
 43266  008216  0100               	movlb	0	; () banked
 43267  008218  2BBA               	incf	SearchAvailableChannel@i& (0+255),f,b
 43268  00821A                     l1472:
 43269                           
 43270                           ; BSR set to: 0
 43271                           
 43272                           ; BSR set to: 0
 43273  00821A  51B8               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 43274  00821C  5DBA               	subwf	SearchAvailableChannel@i& (0+255),w,b
 43275  00821E  B0D8               	btfsc	status,0,c
 43276  008220  D003               	goto	u20880
 43277                           
 43278                           ; BSR set to: 0
 43279  008222  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43280  008224  A4D8               	btfss	status,2,c
 43281  008226  D796               	goto	l1473
 43282  008228                     u20880:
 43283                           
 43284                           ; BSR set to: 0
 43285                           ;lorawan_eu.c: 802: }
 43286                           ;lorawan_eu.c: 803: }
 43287                           ;lorawan_eu.c: 804: }
 43288                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 43289                           
 43290                           ; BSR set to: 0
 43291                           
 43292                           ; BSR set to: 0
 43293  008228  51B6               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 43294  00822A  19B9               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43295  00822C  A4D8               	btfss	status,2,c
 43296  00822E  D003               	goto	l1481
 43297                           
 43298                           ; BSR set to: 0
 43299                           ;lorawan_eu.c: 807: {
 43300                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 43301  008230  0E09               	movlw	9
 43302  008232  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43303                           
 43304                           ;lorawan_eu.c: 809: break;
 43305  008234  D003               	goto	u20900
 43306  008236                     l1481:
 43307                           
 43308                           ; BSR set to: 0
 43309                           
 43310                           ; BSR set to: 0
 43311                           
 43312                           ; BSR set to: 0
 43313  008236  51B9               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 43314  008238  A4D8               	btfss	status,2,c
 43315  00823A  D789               	goto	l1471
 43316  00823C                     u20900:
 43317                           
 43318                           ; BSR set to: 0
 43319                           ;lorawan_eu.c: 810: }
 43320                           ;lorawan_eu.c: 811: }
 43321                           ;lorawan_eu.c: 813: if ( i != 0)
 43322                           
 43323                           ; BSR set to: 0
 43324  00823C  51BA               	movf	SearchAvailableChannel@i& (0+255),w,b
 43325  00823E  B4D8               	btfsc	status,2,c
 43326  008240  D007               	goto	l1483
 43327                           
 43328                           ; BSR set to: 0
 43329                           ;lorawan_eu.c: 814: {
 43330                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 43331  008242  05BA               	decf	SearchAvailableChannel@i& (0+255),w,b
 43332  008244  C0B0  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 43333  008248  C0B1  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 43334  00824C  6EDF               	movwf	indf2,c
 43335                           
 43336                           ;lorawan_eu.c: 816: }
 43337  00824E  D002               	goto	l1484
 43338  008250                     l1483:
 43339                           
 43340                           ; BSR set to: 0
 43341                           ;lorawan_eu.c: 817: else
 43342                           ;lorawan_eu.c: 818: {
 43343                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 43344                           
 43345                           ; BSR set to: 0
 43346  008250  0E09               	movlw	9
 43347  008252  6FB7               	movwf	SearchAvailableChannel@result& (0+255),b
 43348  008254                     l1484:
 43349                           
 43350                           ; BSR set to: 0
 43351                           ;lorawan_eu.c: 820: }
 43352                           ;lorawan_eu.c: 821: return result;
 43353  008254  51B7               	movf	SearchAvailableChannel@result& (0+255),w,b
 43354  008256  0012               	return	
 43355  008258                     __end_of_SearchAvailableChannel:
 43356                           	opt stack 0
 43357                           tosu	equ	0xFFF
 43358                           tosh	equ	0xFFE
 43359                           tosl	equ	0xFFD
 43360                           pclath	equ	0xFFA
 43361                           tblptru	equ	0xFF8
 43362                           tblptrh	equ	0xFF7
 43363                           tblptrl	equ	0xFF6
 43364                           tablat	equ	0xFF5
 43365                           prodh	equ	0xFF4
 43366                           prodl	equ	0xFF3
 43367                           intcon	equ	0xFF2
 43368                           intcon2	equ	0xFF1
 43369                           intcon3	equ	0xFF0
 43370                           indf0	equ	0xFEF
 43371                           postinc0	equ	0xFEE
 43372                           fsr0h	equ	0xFEA
 43373                           fsr0l	equ	0xFE9
 43374                           wreg	equ	0xFE8
 43375                           postinc1	equ	0xFE6
 43376                           postdec1	equ	0xFE5
 43377                           plusw1	equ	0xFE3
 43378                           fsr1h	equ	0xFE2
 43379                           fsr1l	equ	0xFE1
 43380                           indf2	equ	0xFDF
 43381                           postinc2	equ	0xFDE
 43382                           postdec2	equ	0xFDD
 43383                           plusw2	equ	0xFDB
 43384                           fsr2h	equ	0xFDA
 43385                           fsr2l	equ	0xFD9
 43386                           status	equ	0xFD8
 43387                           
 43388 ;; *************** function _ConfigureRadioTx *****************
 43389 ;; Defined at:
 43390 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43391 ;; Parameters:    Size  Location     Type
 43392 ;;  dataRate        1    wreg     unsigned char 
 43393 ;;  freq            4   19[BANK0 ] unsigned long 
 43394 ;; Auto vars:     Size  Location     Type
 43395 ;;  dataRate        1   23[BANK0 ] unsigned char 
 43396 ;;  txPower         1   24[BANK0 ] char 
 43397 ;; Return value:  Size  Location     Type
 43398 ;;                  1    wreg      void 
 43399 ;; Registers used:
 43400 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43401 ;; Tracked objects:
 43402 ;;		On entry : 0/0
 43403 ;;		On exit  : 0/0
 43404 ;;		Unchanged: 0/0
 43405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43407 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43409 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43410 ;;Total ram usage:        6 bytes
 43411 ;; Hardware stack levels used:    1
 43412 ;; Hardware stack levels required when called:   10
 43413 ;; This function calls:
 43414 ;;		_ConfigureRadio
 43415 ;;		_RADIO_SetCRC
 43416 ;;		_RADIO_SetIQInverted
 43417 ;;		_RADIO_SetOutputPower
 43418 ;; This function is called by:
 43419 ;;		_SelectChannelForTransmission
 43420 ;; This function uses a non-reentrant model
 43421 ;;
 43422                           
 43423                           	psect	text234
 43424  00B036                     __ptext234:
 43425                           	opt stack 0
 43426  00B036                     _ConfigureRadioTx:
 43427                           	opt stack 18
 43428                           
 43429                           ; BSR set to: 0
 43430                           ;incstack = 0
 43431                           ;ConfigureRadioTx@dataRate stored from wreg
 43432  00B036  0100               	movlb	0	; () banked
 43433  00B038  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 43434                           
 43435                           ;lorawan_eu.c: 1257: int8_t txPower;
 43436                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 43437  00B03A  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 43438  00B03E  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 43439  00B042  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 43440  00B046  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 43441  00B04A  0100               	movlb	0	; () banked
 43442  00B04C  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 43443  00B04E  EC62  F04C         	call	_ConfigureRadio
 43444                           
 43445                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 43446  00B052  0102               	movlb	2	; () banked
 43447  00B054  51A8               	movf	(_loRa+164)& (0+255),w,b
 43448                           
 43449                           ; BSR set to: 2
 43450                           ;lorawan_eu.c: 1265: else
 43451                           ;lorawan_eu.c: 1266: {
 43452                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 43453                           
 43454                           ; BSR set to: 2
 43455                           
 43456                           ;lorawan_eu.c: 1264: }
 43457                           
 43458                           ; BSR set to: 2
 43459                           ;lorawan_eu.c: 1262: {
 43460                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 43461  00B056  51E5               	movf	(_loRa+225)& (0+255),w,b
 43462  00B058  0D01               	mullw	1
 43463  00B05A  0E10               	movlw	low _txPower868
 43464  00B05C  24F3               	addwf	prodl,w,c
 43465  00B05E  6EF6               	movwf	tblptrl,c
 43466  00B060  0EFF               	movlw	high _txPower868
 43467  00B062  20F4               	addwfc	prodh,w,c
 43468  00B064  6EF7               	movwf	tblptrh,c
 43469  00B066                     	if	1	;There are 3 active tblptr bytes
 43470  00B066  6AF8               	clrf	tblptru,c
 43471  00B068  0E00               	movlw	low (__mediumconst shr (0+16))
 43472  00B06A  22F8               	addwfc	tblptru,f,c
 43473  00B06C                     	endif
 43474  00B06C  0008               	tblrd		*
 43475  00B06E  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 43476                           
 43477                           ; BSR set to: 2
 43478                           ;lorawan_eu.c: 1268: }
 43479                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 43480                           
 43481                           ; BSR set to: 2
 43482  00B072  0100               	movlb	0	; () banked
 43483  00B074  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 43484  00B076  ECD5  F062         	call	_RADIO_SetOutputPower
 43485                           
 43486                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 43487  00B07A  0E01               	movlw	1
 43488  00B07C  ECDF  F062         	call	_RADIO_SetCRC
 43489                           
 43490                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 43491  00B080  0E00               	movlw	0
 43492  00B082  ECDA  F062         	call	_RADIO_SetIQInverted
 43493  00B086  0012               	return		;funcret
 43494  00B088                     __end_of_ConfigureRadioTx:
 43495                           	opt stack 0
 43496                           tosu	equ	0xFFF
 43497                           tosh	equ	0xFFE
 43498                           tosl	equ	0xFFD
 43499                           pclath	equ	0xFFA
 43500                           tblptru	equ	0xFF8
 43501                           tblptrh	equ	0xFF7
 43502                           tblptrl	equ	0xFF6
 43503                           tablat	equ	0xFF5
 43504                           prodh	equ	0xFF4
 43505                           prodl	equ	0xFF3
 43506                           intcon	equ	0xFF2
 43507                           intcon2	equ	0xFF1
 43508                           intcon3	equ	0xFF0
 43509                           indf0	equ	0xFEF
 43510                           postinc0	equ	0xFEE
 43511                           fsr0h	equ	0xFEA
 43512                           fsr0l	equ	0xFE9
 43513                           wreg	equ	0xFE8
 43514                           postinc1	equ	0xFE6
 43515                           postdec1	equ	0xFE5
 43516                           plusw1	equ	0xFE3
 43517                           fsr1h	equ	0xFE2
 43518                           fsr1l	equ	0xFE1
 43519                           indf2	equ	0xFDF
 43520                           postinc2	equ	0xFDE
 43521                           postdec2	equ	0xFDD
 43522                           plusw2	equ	0xFDB
 43523                           fsr2h	equ	0xFDA
 43524                           fsr2l	equ	0xFD9
 43525                           status	equ	0xFD8
 43526                           
 43527 ;; *************** function _RADIO_SetOutputPower *****************
 43528 ;; Defined at:
 43529 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43530 ;; Parameters:    Size  Location     Type
 43531 ;;  power           1    wreg     char 
 43532 ;; Auto vars:     Size  Location     Type
 43533 ;;  power           1    0[BANK0 ] char 
 43534 ;; Return value:  Size  Location     Type
 43535 ;;                  1    wreg      void 
 43536 ;; Registers used:
 43537 ;;		wreg
 43538 ;; Tracked objects:
 43539 ;;		On entry : 0/0
 43540 ;;		On exit  : 0/0
 43541 ;;		Unchanged: 0/0
 43542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43547 ;;Total ram usage:        1 bytes
 43548 ;; Hardware stack levels used:    1
 43549 ;; Hardware stack levels required when called:    7
 43550 ;; This function calls:
 43551 ;;		Nothing
 43552 ;; This function is called by:
 43553 ;;		_ConfigureRadioTx
 43554 ;; This function uses a non-reentrant model
 43555 ;;
 43556                           
 43557                           	psect	text235
 43558  00C5AA                     __ptext235:
 43559                           	opt stack 0
 43560  00C5AA                     _RADIO_SetOutputPower:
 43561                           	opt stack 20
 43562                           
 43563                           ;incstack = 0
 43564                           ;RADIO_SetOutputPower@power stored from wreg
 43565  00C5AA  0100               	movlb	0	; () banked
 43566  00C5AC  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 43567                           
 43568                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 43569  00C5AE  C060  F150         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 43570  00C5B2  0012               	return		;funcret
 43571  00C5B4                     __end_of_RADIO_SetOutputPower:
 43572                           	opt stack 0
 43573                           tosu	equ	0xFFF
 43574                           tosh	equ	0xFFE
 43575                           tosl	equ	0xFFD
 43576                           pclath	equ	0xFFA
 43577                           tblptru	equ	0xFF8
 43578                           tblptrh	equ	0xFF7
 43579                           tblptrl	equ	0xFF6
 43580                           tablat	equ	0xFF5
 43581                           prodh	equ	0xFF4
 43582                           prodl	equ	0xFF3
 43583                           intcon	equ	0xFF2
 43584                           intcon2	equ	0xFF1
 43585                           intcon3	equ	0xFF0
 43586                           indf0	equ	0xFEF
 43587                           postinc0	equ	0xFEE
 43588                           fsr0h	equ	0xFEA
 43589                           fsr0l	equ	0xFE9
 43590                           wreg	equ	0xFE8
 43591                           postinc1	equ	0xFE6
 43592                           postdec1	equ	0xFE5
 43593                           plusw1	equ	0xFE3
 43594                           fsr1h	equ	0xFE2
 43595                           fsr1l	equ	0xFE1
 43596                           indf2	equ	0xFDF
 43597                           postinc2	equ	0xFDE
 43598                           postdec2	equ	0xFDD
 43599                           plusw2	equ	0xFDB
 43600                           fsr2h	equ	0xFDA
 43601                           fsr2l	equ	0xFD9
 43602                           status	equ	0xFD8
 43603                           
 43604 ;; *************** function _RADIO_SetIQInverted *****************
 43605 ;; Defined at:
 43606 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43607 ;; Parameters:    Size  Location     Type
 43608 ;;  iqInverted      1    wreg     unsigned char 
 43609 ;; Auto vars:     Size  Location     Type
 43610 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 43611 ;; Return value:  Size  Location     Type
 43612 ;;                  1    wreg      void 
 43613 ;; Registers used:
 43614 ;;		wreg
 43615 ;; Tracked objects:
 43616 ;;		On entry : 0/0
 43617 ;;		On exit  : 0/0
 43618 ;;		Unchanged: 0/0
 43619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43624 ;;Total ram usage:        1 bytes
 43625 ;; Hardware stack levels used:    1
 43626 ;; Hardware stack levels required when called:    7
 43627 ;; This function calls:
 43628 ;;		Nothing
 43629 ;; This function is called by:
 43630 ;;		_ConfigureRadioTx
 43631 ;;		_ConfigureRadioRx
 43632 ;; This function uses a non-reentrant model
 43633 ;;
 43634                           
 43635                           	psect	text236
 43636  00C5B4                     __ptext236:
 43637                           	opt stack 0
 43638  00C5B4                     _RADIO_SetIQInverted:
 43639                           	opt stack 20
 43640                           
 43641                           ;incstack = 0
 43642                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 43643  00C5B4  0100               	movlb	0	; () banked
 43644  00C5B6  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 43645                           
 43646                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 43647  00C5B8  C060  F155         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 43648  00C5BC  0012               	return		;funcret
 43649  00C5BE                     __end_of_RADIO_SetIQInverted:
 43650                           	opt stack 0
 43651                           tosu	equ	0xFFF
 43652                           tosh	equ	0xFFE
 43653                           tosl	equ	0xFFD
 43654                           pclath	equ	0xFFA
 43655                           tblptru	equ	0xFF8
 43656                           tblptrh	equ	0xFF7
 43657                           tblptrl	equ	0xFF6
 43658                           tablat	equ	0xFF5
 43659                           prodh	equ	0xFF4
 43660                           prodl	equ	0xFF3
 43661                           intcon	equ	0xFF2
 43662                           intcon2	equ	0xFF1
 43663                           intcon3	equ	0xFF0
 43664                           indf0	equ	0xFEF
 43665                           postinc0	equ	0xFEE
 43666                           fsr0h	equ	0xFEA
 43667                           fsr0l	equ	0xFE9
 43668                           wreg	equ	0xFE8
 43669                           postinc1	equ	0xFE6
 43670                           postdec1	equ	0xFE5
 43671                           plusw1	equ	0xFE3
 43672                           fsr1h	equ	0xFE2
 43673                           fsr1l	equ	0xFE1
 43674                           indf2	equ	0xFDF
 43675                           postinc2	equ	0xFDE
 43676                           postdec2	equ	0xFDD
 43677                           plusw2	equ	0xFDB
 43678                           fsr2h	equ	0xFDA
 43679                           fsr2l	equ	0xFD9
 43680                           status	equ	0xFD8
 43681                           
 43682 ;; *************** function _RADIO_SetCRC *****************
 43683 ;; Defined at:
 43684 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43685 ;; Parameters:    Size  Location     Type
 43686 ;;  crc             1    wreg     unsigned char 
 43687 ;; Auto vars:     Size  Location     Type
 43688 ;;  crc             1    0[BANK0 ] unsigned char 
 43689 ;; Return value:  Size  Location     Type
 43690 ;;                  1    wreg      void 
 43691 ;; Registers used:
 43692 ;;		wreg
 43693 ;; Tracked objects:
 43694 ;;		On entry : 0/0
 43695 ;;		On exit  : 0/0
 43696 ;;		Unchanged: 0/0
 43697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43702 ;;Total ram usage:        1 bytes
 43703 ;; Hardware stack levels used:    1
 43704 ;; Hardware stack levels required when called:    7
 43705 ;; This function calls:
 43706 ;;		Nothing
 43707 ;; This function is called by:
 43708 ;;		_ConfigureRadioTx
 43709 ;;		_ConfigureRadioRx
 43710 ;; This function uses a non-reentrant model
 43711 ;;
 43712                           
 43713                           	psect	text237
 43714  00C5BE                     __ptext237:
 43715                           	opt stack 0
 43716  00C5BE                     _RADIO_SetCRC:
 43717                           	opt stack 20
 43718                           
 43719                           ;incstack = 0
 43720                           ;RADIO_SetCRC@crc stored from wreg
 43721  00C5BE  0100               	movlb	0	; () banked
 43722  00C5C0  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 43723                           
 43724                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 43725  00C5C2  C060  F151         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 43726  00C5C6  0012               	return		;funcret
 43727  00C5C8                     __end_of_RADIO_SetCRC:
 43728                           	opt stack 0
 43729                           tosu	equ	0xFFF
 43730                           tosh	equ	0xFFE
 43731                           tosl	equ	0xFFD
 43732                           pclath	equ	0xFFA
 43733                           tblptru	equ	0xFF8
 43734                           tblptrh	equ	0xFF7
 43735                           tblptrl	equ	0xFF6
 43736                           tablat	equ	0xFF5
 43737                           prodh	equ	0xFF4
 43738                           prodl	equ	0xFF3
 43739                           intcon	equ	0xFF2
 43740                           intcon2	equ	0xFF1
 43741                           intcon3	equ	0xFF0
 43742                           indf0	equ	0xFEF
 43743                           postinc0	equ	0xFEE
 43744                           fsr0h	equ	0xFEA
 43745                           fsr0l	equ	0xFE9
 43746                           wreg	equ	0xFE8
 43747                           postinc1	equ	0xFE6
 43748                           postdec1	equ	0xFE5
 43749                           plusw1	equ	0xFE3
 43750                           fsr1h	equ	0xFE2
 43751                           fsr1l	equ	0xFE1
 43752                           indf2	equ	0xFDF
 43753                           postinc2	equ	0xFDE
 43754                           postdec2	equ	0xFDD
 43755                           plusw2	equ	0xFDB
 43756                           fsr2h	equ	0xFDA
 43757                           fsr2l	equ	0xFD9
 43758                           status	equ	0xFD8
 43759                           
 43760 ;; *************** function _ConfigureRadio *****************
 43761 ;; Defined at:
 43762 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 43763 ;; Parameters:    Size  Location     Type
 43764 ;;  dataRate        1    wreg     unsigned char 
 43765 ;;  freq            4   14[BANK0 ] unsigned long 
 43766 ;; Auto vars:     Size  Location     Type
 43767 ;;  dataRate        1   18[BANK0 ] unsigned char 
 43768 ;; Return value:  Size  Location     Type
 43769 ;;                  1    wreg      void 
 43770 ;; Registers used:
 43771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43772 ;; Tracked objects:
 43773 ;;		On entry : 0/0
 43774 ;;		On exit  : 0/0
 43775 ;;		Unchanged: 0/0
 43776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43780 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43781 ;;Total ram usage:        5 bytes
 43782 ;; Hardware stack levels used:    1
 43783 ;; Hardware stack levels required when called:    9
 43784 ;; This function calls:
 43785 ;;		_RADIO_SetBandwidth
 43786 ;;		_RADIO_SetChannelFrequency
 43787 ;;		_RADIO_SetFSKSyncWord
 43788 ;;		_RADIO_SetFrequencyHopPeriod
 43789 ;;		_RADIO_SetLoRaSyncWord
 43790 ;;		_RADIO_SetModulation
 43791 ;;		_RADIO_SetSpreadingFactor
 43792 ;; This function is called by:
 43793 ;;		_ConfigureRadioTx
 43794 ;;		_ConfigureRadioRx
 43795 ;; This function uses a non-reentrant model
 43796 ;;
 43797                           
 43798                           	psect	text238
 43799  0098C4                     __ptext238:
 43800                           	opt stack 0
 43801  0098C4                     _ConfigureRadio:
 43802                           	opt stack 18
 43803                           
 43804                           ;incstack = 0
 43805                           ;ConfigureRadio@dataRate stored from wreg
 43806  0098C4  0100               	movlb	0	; () banked
 43807  0098C6  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 43808                           
 43809                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 43810  0098C8  0100               	movlb	0	; () banked
 43811  0098CA  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43812  0098CC  0D01               	mullw	1
 43813  0098CE  0ED5               	movlw	low _modulation
 43814  0098D0  24F3               	addwf	prodl,w,c
 43815  0098D2  6EF6               	movwf	tblptrl,c
 43816  0098D4  0EFE               	movlw	high _modulation
 43817  0098D6  20F4               	addwfc	prodh,w,c
 43818  0098D8  6EF7               	movwf	tblptrh,c
 43819  0098DA                     	if	1	;There are 3 active tblptr bytes
 43820  0098DA  6AF8               	clrf	tblptru,c
 43821  0098DC  0E00               	movlw	low (__mediumconst shr (0+16))
 43822  0098DE  22F8               	addwfc	tblptru,f,c
 43823  0098E0                     	endif
 43824  0098E0  0008               	tblrd		*
 43825  0098E2  50F5               	movf	tablat,w,c
 43826  0098E4  ECE9  F062         	call	_RADIO_SetModulation
 43827                           
 43828                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 43829  0098E8  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 43830  0098EC  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 43831  0098F0  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 43832  0098F4  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 43833  0098F8  EC59  F04F         	call	_RADIO_SetChannelFrequency	;wreg free
 43834                           
 43835                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 43836  0098FC  0E00               	movlw	0
 43837  0098FE  0100               	movlb	0	; () banked
 43838  009900  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 43839  009902  0E00               	movlw	0
 43840  009904  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 43841  009906  ECEE  F062         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 43842                           
 43843                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 43844  00990A  0E07               	movlw	7
 43845  00990C  0100               	movlb	0	; () banked
 43846  00990E  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 43847  009910  D024               	goto	l1497
 43848                           
 43849                           ; BSR set to: 0
 43850                           ;lorawan_eu.c: 870: {
 43851                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 43852  009912  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43853  009914  0D01               	mullw	1
 43854  009916  0E03               	movlw	low _spreadingFactor
 43855  009918  24F3               	addwf	prodl,w,c
 43856  00991A  6EF6               	movwf	tblptrl,c
 43857  00991C  0EFF               	movlw	high _spreadingFactor
 43858  00991E  20F4               	addwfc	prodh,w,c
 43859  009920  6EF7               	movwf	tblptrh,c
 43860  009922                     	if	1	;There are 3 active tblptr bytes
 43861  009922  6AF8               	clrf	tblptru,c
 43862  009924  0E00               	movlw	low (__mediumconst shr (0+16))
 43863  009926  22F8               	addwfc	tblptru,f,c
 43864  009928                     	endif
 43865  009928  0008               	tblrd		*
 43866  00992A  50F5               	movf	tablat,w,c
 43867  00992C  ECE4  F062         	call	_RADIO_SetSpreadingFactor
 43868                           
 43869                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 43870  009930  0100               	movlb	0	; () banked
 43871  009932  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
 43872  009934  0D01               	mullw	1
 43873  009936  0EFC               	movlw	low _bandwidth
 43874  009938  24F3               	addwf	prodl,w,c
 43875  00993A  6EF6               	movwf	tblptrl,c
 43876  00993C  0EFE               	movlw	high _bandwidth
 43877  00993E  20F4               	addwfc	prodh,w,c
 43878  009940  6EF7               	movwf	tblptrh,c
 43879  009942                     	if	1	;There are 3 active tblptr bytes
 43880  009942  6AF8               	clrf	tblptru,c
 43881  009944  0E00               	movlw	low (__mediumconst shr (0+16))
 43882  009946  22F8               	addwfc	tblptru,f,c
 43883  009948                     	endif
 43884  009948  0008               	tblrd		*
 43885  00994A  50F5               	movf	tablat,w,c
 43886  00994C  ECF3  F062         	call	_RADIO_SetBandwidth
 43887                           
 43888                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 43889  009950  0102               	movlb	2	; () banked
 43890  009952  51F8               	movf	(_loRa+244)& (0+255),w,b
 43891  009954  ECF8  F062         	call	_RADIO_SetLoRaSyncWord
 43892                           
 43893                           ;lorawan_eu.c: 875: }
 43894  009958  0012               	return	
 43895  00995A                     l1497:
 43896                           
 43897                           ;lorawan_eu.c: 876: else
 43898                           ;lorawan_eu.c: 877: {
 43899                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 43900  00995A  0E6A               	movlw	low _FskSyncWordBuff
 43901  00995C  0100               	movlb	0	; () banked
 43902  00995E  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 43903  009960  0EFF               	movlw	high _FskSyncWordBuff
 43904  009962  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 43905  009964  0E03               	movlw	3
 43906  009966  ECEF  F05C         	call	_RADIO_SetFSKSyncWord
 43907  00996A  0012               	return	
 43908  00996C                     __end_of_ConfigureRadio:
 43909                           	opt stack 0
 43910                           tosu	equ	0xFFF
 43911                           tosh	equ	0xFFE
 43912                           tosl	equ	0xFFD
 43913                           pclath	equ	0xFFA
 43914                           tblptru	equ	0xFF8
 43915                           tblptrh	equ	0xFF7
 43916                           tblptrl	equ	0xFF6
 43917                           tablat	equ	0xFF5
 43918                           prodh	equ	0xFF4
 43919                           prodl	equ	0xFF3
 43920                           intcon	equ	0xFF2
 43921                           intcon2	equ	0xFF1
 43922                           intcon3	equ	0xFF0
 43923                           indf0	equ	0xFEF
 43924                           postinc0	equ	0xFEE
 43925                           fsr0h	equ	0xFEA
 43926                           fsr0l	equ	0xFE9
 43927                           wreg	equ	0xFE8
 43928                           postinc1	equ	0xFE6
 43929                           postdec1	equ	0xFE5
 43930                           plusw1	equ	0xFE3
 43931                           fsr1h	equ	0xFE2
 43932                           fsr1l	equ	0xFE1
 43933                           indf2	equ	0xFDF
 43934                           postinc2	equ	0xFDE
 43935                           postdec2	equ	0xFDD
 43936                           plusw2	equ	0xFDB
 43937                           fsr2h	equ	0xFDA
 43938                           fsr2l	equ	0xFD9
 43939                           status	equ	0xFD8
 43940                           
 43941 ;; *************** function _RADIO_SetSpreadingFactor *****************
 43942 ;; Defined at:
 43943 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 43944 ;; Parameters:    Size  Location     Type
 43945 ;;  spreadingFac    1    wreg     enum E6994
 43946 ;; Auto vars:     Size  Location     Type
 43947 ;;  spreadingFac    1    0[BANK0 ] enum E6994
 43948 ;; Return value:  Size  Location     Type
 43949 ;;                  1    wreg      void 
 43950 ;; Registers used:
 43951 ;;		wreg
 43952 ;; Tracked objects:
 43953 ;;		On entry : 0/0
 43954 ;;		On exit  : 0/0
 43955 ;;		Unchanged: 0/0
 43956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43960 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43961 ;;Total ram usage:        1 bytes
 43962 ;; Hardware stack levels used:    1
 43963 ;; Hardware stack levels required when called:    7
 43964 ;; This function calls:
 43965 ;;		Nothing
 43966 ;; This function is called by:
 43967 ;;		_ConfigureRadio
 43968 ;; This function uses a non-reentrant model
 43969 ;;
 43970                           
 43971                           	psect	text239
 43972  00C5C8                     __ptext239:
 43973                           	opt stack 0
 43974  00C5C8                     _RADIO_SetSpreadingFactor:
 43975                           	opt stack 19
 43976                           
 43977                           ;incstack = 0
 43978                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 43979  00C5C8  0100               	movlb	0	; () banked
 43980  00C5CA  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 43981                           
 43982                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 43983  00C5CC  C060  F14E         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 43984  00C5D0  0012               	return		;funcret
 43985  00C5D2                     __end_of_RADIO_SetSpreadingFactor:
 43986                           	opt stack 0
 43987                           tosu	equ	0xFFF
 43988                           tosh	equ	0xFFE
 43989                           tosl	equ	0xFFD
 43990                           pclath	equ	0xFFA
 43991                           tblptru	equ	0xFF8
 43992                           tblptrh	equ	0xFF7
 43993                           tblptrl	equ	0xFF6
 43994                           tablat	equ	0xFF5
 43995                           prodh	equ	0xFF4
 43996                           prodl	equ	0xFF3
 43997                           intcon	equ	0xFF2
 43998                           intcon2	equ	0xFF1
 43999                           intcon3	equ	0xFF0
 44000                           indf0	equ	0xFEF
 44001                           postinc0	equ	0xFEE
 44002                           fsr0h	equ	0xFEA
 44003                           fsr0l	equ	0xFE9
 44004                           wreg	equ	0xFE8
 44005                           postinc1	equ	0xFE6
 44006                           postdec1	equ	0xFE5
 44007                           plusw1	equ	0xFE3
 44008                           fsr1h	equ	0xFE2
 44009                           fsr1l	equ	0xFE1
 44010                           indf2	equ	0xFDF
 44011                           postinc2	equ	0xFDE
 44012                           postdec2	equ	0xFDD
 44013                           plusw2	equ	0xFDB
 44014                           fsr2h	equ	0xFDA
 44015                           fsr2l	equ	0xFD9
 44016                           status	equ	0xFD8
 44017                           
 44018 ;; *************** function _RADIO_SetModulation *****************
 44019 ;; Defined at:
 44020 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44021 ;; Parameters:    Size  Location     Type
 44022 ;;  modulation      1    wreg     enum E6984
 44023 ;; Auto vars:     Size  Location     Type
 44024 ;;  modulation      1    0[BANK0 ] enum E6984
 44025 ;; Return value:  Size  Location     Type
 44026 ;;                  1    wreg      void 
 44027 ;; Registers used:
 44028 ;;		wreg
 44029 ;; Tracked objects:
 44030 ;;		On entry : 0/0
 44031 ;;		On exit  : 0/0
 44032 ;;		Unchanged: 0/0
 44033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44038 ;;Total ram usage:        1 bytes
 44039 ;; Hardware stack levels used:    1
 44040 ;; Hardware stack levels required when called:    7
 44041 ;; This function calls:
 44042 ;;		Nothing
 44043 ;; This function is called by:
 44044 ;;		_ConfigureRadio
 44045 ;; This function uses a non-reentrant model
 44046 ;;
 44047                           
 44048                           	psect	text240
 44049  00C5D2                     __ptext240:
 44050                           	opt stack 0
 44051  00C5D2                     _RADIO_SetModulation:
 44052                           	opt stack 19
 44053                           
 44054                           ;incstack = 0
 44055                           ;RADIO_SetModulation@modulation stored from wreg
 44056  00C5D2  0100               	movlb	0	; () banked
 44057  00C5D4  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 44058                           
 44059                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 44060  00C5D6  C060  F14D         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 44061  00C5DA  0012               	return		;funcret
 44062  00C5DC                     __end_of_RADIO_SetModulation:
 44063                           	opt stack 0
 44064                           tosu	equ	0xFFF
 44065                           tosh	equ	0xFFE
 44066                           tosl	equ	0xFFD
 44067                           pclath	equ	0xFFA
 44068                           tblptru	equ	0xFF8
 44069                           tblptrh	equ	0xFF7
 44070                           tblptrl	equ	0xFF6
 44071                           tablat	equ	0xFF5
 44072                           prodh	equ	0xFF4
 44073                           prodl	equ	0xFF3
 44074                           intcon	equ	0xFF2
 44075                           intcon2	equ	0xFF1
 44076                           intcon3	equ	0xFF0
 44077                           indf0	equ	0xFEF
 44078                           postinc0	equ	0xFEE
 44079                           fsr0h	equ	0xFEA
 44080                           fsr0l	equ	0xFE9
 44081                           wreg	equ	0xFE8
 44082                           postinc1	equ	0xFE6
 44083                           postdec1	equ	0xFE5
 44084                           plusw1	equ	0xFE3
 44085                           fsr1h	equ	0xFE2
 44086                           fsr1l	equ	0xFE1
 44087                           indf2	equ	0xFDF
 44088                           postinc2	equ	0xFDE
 44089                           postdec2	equ	0xFDD
 44090                           plusw2	equ	0xFDB
 44091                           fsr2h	equ	0xFDA
 44092                           fsr2l	equ	0xFD9
 44093                           status	equ	0xFD8
 44094                           
 44095 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 44096 ;; Defined at:
 44097 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44098 ;; Parameters:    Size  Location     Type
 44099 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 44100 ;; Auto vars:     Size  Location     Type
 44101 ;;		None
 44102 ;; Return value:  Size  Location     Type
 44103 ;;                  1    wreg      void 
 44104 ;; Registers used:
 44105 ;;		None
 44106 ;; Tracked objects:
 44107 ;;		On entry : 0/0
 44108 ;;		On exit  : 0/0
 44109 ;;		Unchanged: 0/0
 44110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44115 ;;Total ram usage:        2 bytes
 44116 ;; Hardware stack levels used:    1
 44117 ;; Hardware stack levels required when called:    7
 44118 ;; This function calls:
 44119 ;;		Nothing
 44120 ;; This function is called by:
 44121 ;;		_ConfigureRadio
 44122 ;; This function uses a non-reentrant model
 44123 ;;
 44124                           
 44125                           	psect	text241
 44126  00C5DC                     __ptext241:
 44127                           	opt stack 0
 44128  00C5DC                     _RADIO_SetFrequencyHopPeriod:
 44129                           	opt stack 19
 44130                           
 44131                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 44132                           
 44133                           ;incstack = 0
 44134  00C5DC  C060  F153         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 44135  00C5E0  C061  F154         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 44136  00C5E4  0012               	return		;funcret
 44137  00C5E6                     __end_of_RADIO_SetFrequencyHopPeriod:
 44138                           	opt stack 0
 44139                           tosu	equ	0xFFF
 44140                           tosh	equ	0xFFE
 44141                           tosl	equ	0xFFD
 44142                           pclath	equ	0xFFA
 44143                           tblptru	equ	0xFF8
 44144                           tblptrh	equ	0xFF7
 44145                           tblptrl	equ	0xFF6
 44146                           tablat	equ	0xFF5
 44147                           prodh	equ	0xFF4
 44148                           prodl	equ	0xFF3
 44149                           intcon	equ	0xFF2
 44150                           intcon2	equ	0xFF1
 44151                           intcon3	equ	0xFF0
 44152                           indf0	equ	0xFEF
 44153                           postinc0	equ	0xFEE
 44154                           fsr0h	equ	0xFEA
 44155                           fsr0l	equ	0xFE9
 44156                           wreg	equ	0xFE8
 44157                           postinc1	equ	0xFE6
 44158                           postdec1	equ	0xFE5
 44159                           plusw1	equ	0xFE3
 44160                           fsr1h	equ	0xFE2
 44161                           fsr1l	equ	0xFE1
 44162                           indf2	equ	0xFDF
 44163                           postinc2	equ	0xFDE
 44164                           postdec2	equ	0xFDD
 44165                           plusw2	equ	0xFDB
 44166                           fsr2h	equ	0xFDA
 44167                           fsr2l	equ	0xFD9
 44168                           status	equ	0xFD8
 44169                           
 44170 ;; *************** function _RADIO_SetFSKSyncWord *****************
 44171 ;; Defined at:
 44172 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44173 ;; Parameters:    Size  Location     Type
 44174 ;;  syncWordLen     1    wreg     unsigned char 
 44175 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 44176 ;;		 -> FskSyncWordBuff(3), 
 44177 ;; Auto vars:     Size  Location     Type
 44178 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 44179 ;; Return value:  Size  Location     Type
 44180 ;;                  1    wreg      void 
 44181 ;; Registers used:
 44182 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44183 ;; Tracked objects:
 44184 ;;		On entry : 0/0
 44185 ;;		On exit  : 0/0
 44186 ;;		Unchanged: 0/0
 44187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44192 ;;Total ram usage:        3 bytes
 44193 ;; Hardware stack levels used:    1
 44194 ;; Hardware stack levels required when called:    8
 44195 ;; This function calls:
 44196 ;;		_memcpy
 44197 ;; This function is called by:
 44198 ;;		_ConfigureRadio
 44199 ;; This function uses a non-reentrant model
 44200 ;;
 44201                           
 44202                           	psect	text242
 44203  00B9DE                     __ptext242:
 44204                           	opt stack 0
 44205  00B9DE                     _RADIO_SetFSKSyncWord:
 44206                           	opt stack 18
 44207                           
 44208                           ;incstack = 0
 44209                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 44210  00B9DE  0100               	movlb	0	; () banked
 44211  00B9E0  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44212                           
 44213                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 44214  00B9E2  0E08               	movlw	8
 44215  00B9E4  0100               	movlb	0	; () banked
 44216  00B9E6  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44217  00B9E8  D002               	goto	l1133
 44218                           
 44219                           ; BSR set to: 0
 44220                           ;radio_driver_SX1276.c: 1627: {
 44221                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 44222  00B9EA  0E08               	movlw	8
 44223  00B9EC  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 44224  00B9EE                     l1133:
 44225                           
 44226                           ; BSR set to: 0
 44227                           ;radio_driver_SX1276.c: 1629: }
 44228                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 44229                           
 44230                           ; BSR set to: 0
 44231  00B9EE  0E44               	movlw	low (_RadioConfiguration+15)
 44232  00B9F0  6F60               	movwf	memcpy@d1& (0+255),b
 44233  00B9F2  0E01               	movlw	high (_RadioConfiguration+15)
 44234  00B9F4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44235  00B9F6  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 44236  00B9FA  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 44237  00B9FE  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 44238  00BA02  6B65               	clrf	(memcpy@n+1)& (0+255),b
 44239  00BA04  ECA9  F055         	call	_memcpy	;wreg free
 44240                           
 44241                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 44242  00BA08  C06D  F14C         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 44243  00BA0C  0012               	return		;funcret
 44244  00BA0E                     __end_of_RADIO_SetFSKSyncWord:
 44245                           	opt stack 0
 44246                           tosu	equ	0xFFF
 44247                           tosh	equ	0xFFE
 44248                           tosl	equ	0xFFD
 44249                           pclath	equ	0xFFA
 44250                           tblptru	equ	0xFF8
 44251                           tblptrh	equ	0xFF7
 44252                           tblptrl	equ	0xFF6
 44253                           tablat	equ	0xFF5
 44254                           prodh	equ	0xFF4
 44255                           prodl	equ	0xFF3
 44256                           intcon	equ	0xFF2
 44257                           intcon2	equ	0xFF1
 44258                           intcon3	equ	0xFF0
 44259                           indf0	equ	0xFEF
 44260                           postinc0	equ	0xFEE
 44261                           fsr0h	equ	0xFEA
 44262                           fsr0l	equ	0xFE9
 44263                           wreg	equ	0xFE8
 44264                           postinc1	equ	0xFE6
 44265                           postdec1	equ	0xFE5
 44266                           plusw1	equ	0xFE3
 44267                           fsr1h	equ	0xFE2
 44268                           fsr1l	equ	0xFE1
 44269                           indf2	equ	0xFDF
 44270                           postinc2	equ	0xFDE
 44271                           postdec2	equ	0xFDD
 44272                           plusw2	equ	0xFDB
 44273                           fsr2h	equ	0xFDA
 44274                           fsr2l	equ	0xFD9
 44275                           status	equ	0xFD8
 44276                           
 44277 ;; *************** function _RADIO_SetChannelFrequency *****************
 44278 ;; Defined at:
 44279 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44280 ;; Parameters:    Size  Location     Type
 44281 ;;  frequency       4    0[BANK0 ] unsigned long 
 44282 ;; Auto vars:     Size  Location     Type
 44283 ;;		None
 44284 ;; Return value:  Size  Location     Type
 44285 ;;                  2    0[BANK0 ] enum E7038
 44286 ;; Registers used:
 44287 ;;		wreg, status,2, status,0
 44288 ;; Tracked objects:
 44289 ;;		On entry : 0/0
 44290 ;;		On exit  : 0/0
 44291 ;;		Unchanged: 0/0
 44292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44296 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44297 ;;Total ram usage:        4 bytes
 44298 ;; Hardware stack levels used:    1
 44299 ;; Hardware stack levels required when called:    7
 44300 ;; This function calls:
 44301 ;;		Nothing
 44302 ;; This function is called by:
 44303 ;;		_ConfigureRadio
 44304 ;; This function uses a non-reentrant model
 44305 ;;
 44306                           
 44307                           	psect	text243
 44308  009EB2                     __ptext243:
 44309                           	opt stack 0
 44310  009EB2                     _RADIO_SetChannelFrequency:
 44311                           	opt stack 19
 44312                           
 44313                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 44314                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 44315                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 44316                           
 44317                           ;incstack = 0
 44318  009EB2  0E40               	movlw	64
 44319  009EB4  0100               	movlb	0	; () banked
 44320  009EB6  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44321  009EB8  0E74               	movlw	116
 44322  009EBA  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44323  009EBC  0E2A               	movlw	42
 44324  009EBE  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44325  009EC0  0E08               	movlw	8
 44326  009EC2  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44327  009EC4  A0D8               	btfss	status,0,c
 44328  009EC6  D00A               	goto	u19530
 44329                           
 44330                           ; BSR set to: 0
 44331  009EC8  0EC1               	movlw	193
 44332  009ECA  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44333  009ECC  0E49               	movlw	73
 44334  009ECE  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44335  009ED0  0E6E               	movlw	110
 44336  009ED2  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44337  009ED4  0E0A               	movlw	10
 44338  009ED6  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44339  009ED8  A0D8               	btfss	status,0,c
 44340  009EDA  D027               	goto	u19570
 44341  009EDC                     u19530:
 44342                           
 44343                           ; BSR set to: 0
 44344                           
 44345                           ; BSR set to: 0
 44346  009EDC  0E80               	movlw	128
 44347  009EDE  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44348  009EE0  0E1A               	movlw	26
 44349  009EE2  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44350  009EE4  0E70               	movlw	112
 44351  009EE6  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44352  009EE8  0E18               	movlw	24
 44353  009EEA  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44354  009EEC  A0D8               	btfss	status,0,c
 44355  009EEE  D00A               	goto	u19550
 44356                           
 44357                           ; BSR set to: 0
 44358  009EF0  0E41               	movlw	65
 44359  009EF2  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44360  009EF4  0EDD               	movlw	221
 44361  009EF6  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44362  009EF8  0E4A               	movlw	74
 44363  009EFA  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44364  009EFC  0E1F               	movlw	31
 44365  009EFE  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44366  009F00  A0D8               	btfss	status,0,c
 44367  009F02  D013               	goto	u19570
 44368  009F04                     u19550:
 44369                           
 44370                           ; BSR set to: 0
 44371                           
 44372                           ; BSR set to: 0
 44373  009F04  0E80               	movlw	128
 44374  009F06  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44375  009F08  0E13               	movlw	19
 44376  009F0A  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44377  009F0C  0E61               	movlw	97
 44378  009F0E  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44379  009F10  0E33               	movlw	51
 44380  009F12  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44381  009F14  A0D8               	btfss	status,0,c
 44382  009F16  0012               	return	
 44383                           
 44384                           ; BSR set to: 0
 44385  009F18  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 44386  009F1A  0EF7               	movlw	247
 44387  009F1C  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 44388  009F1E  0ECB               	movlw	203
 44389  009F20  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 44390  009F22  0E3C               	movlw	60
 44391  009F24  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 44392  009F26  B0D8               	btfsc	status,0,c
 44393  009F28  0012               	return	
 44394  009F2A                     u19570:
 44395                           
 44396                           ; BSR set to: 0
 44397                           ;radio_driver_SX1276.c: 1449: {
 44398                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 44399  009F2A  C060  F135         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 44400  009F2E  C061  F136         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 44401  009F32  C062  F137         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 44402  009F36  C063  F138         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 44403                           
 44404                           ; BSR set to: 0
 44405                           ;radio_driver_SX1276.c: 1453: else
 44406                           ;radio_driver_SX1276.c: 1454: {
 44407                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 44408                           ;	Return value of _RADIO_SetChannelFrequency is never used
 44409                           
 44410                           ; BSR set to: 0
 44411                           ;radio_driver_SX1276.c: 1452: }
 44412                           
 44413                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 44414                           ;	Return value of _RADIO_SetChannelFrequency is never used
 44415  009F3A  0012               	return	
 44416  009F3C                     __end_of_RADIO_SetChannelFrequency:
 44417                           	opt stack 0
 44418                           tosu	equ	0xFFF
 44419                           tosh	equ	0xFFE
 44420                           tosl	equ	0xFFD
 44421                           pclath	equ	0xFFA
 44422                           tblptru	equ	0xFF8
 44423                           tblptrh	equ	0xFF7
 44424                           tblptrl	equ	0xFF6
 44425                           tablat	equ	0xFF5
 44426                           prodh	equ	0xFF4
 44427                           prodl	equ	0xFF3
 44428                           intcon	equ	0xFF2
 44429                           intcon2	equ	0xFF1
 44430                           intcon3	equ	0xFF0
 44431                           indf0	equ	0xFEF
 44432                           postinc0	equ	0xFEE
 44433                           fsr0h	equ	0xFEA
 44434                           fsr0l	equ	0xFE9
 44435                           wreg	equ	0xFE8
 44436                           postinc1	equ	0xFE6
 44437                           postdec1	equ	0xFE5
 44438                           plusw1	equ	0xFE3
 44439                           fsr1h	equ	0xFE2
 44440                           fsr1l	equ	0xFE1
 44441                           indf2	equ	0xFDF
 44442                           postinc2	equ	0xFDE
 44443                           postdec2	equ	0xFDD
 44444                           plusw2	equ	0xFDB
 44445                           fsr2h	equ	0xFDA
 44446                           fsr2l	equ	0xFD9
 44447                           status	equ	0xFD8
 44448                           
 44449 ;; *************** function _RADIO_SetBandwidth *****************
 44450 ;; Defined at:
 44451 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44452 ;; Parameters:    Size  Location     Type
 44453 ;;  bandwidth       1    wreg     enum E7002
 44454 ;; Auto vars:     Size  Location     Type
 44455 ;;  bandwidth       1    0[BANK0 ] enum E7002
 44456 ;; Return value:  Size  Location     Type
 44457 ;;                  1    wreg      void 
 44458 ;; Registers used:
 44459 ;;		wreg
 44460 ;; Tracked objects:
 44461 ;;		On entry : 0/0
 44462 ;;		On exit  : 0/0
 44463 ;;		Unchanged: 0/0
 44464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44469 ;;Total ram usage:        1 bytes
 44470 ;; Hardware stack levels used:    1
 44471 ;; Hardware stack levels required when called:    7
 44472 ;; This function calls:
 44473 ;;		Nothing
 44474 ;; This function is called by:
 44475 ;;		_ConfigureRadio
 44476 ;; This function uses a non-reentrant model
 44477 ;;
 44478                           
 44479                           	psect	text244
 44480  00C5E6                     __ptext244:
 44481                           	opt stack 0
 44482  00C5E6                     _RADIO_SetBandwidth:
 44483                           	opt stack 19
 44484                           
 44485                           ; BSR set to: 0
 44486                           ;incstack = 0
 44487                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 44488  00C5E6  0100               	movlb	0	; () banked
 44489  00C5E8  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 44490                           
 44491                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 44492  00C5EA  C060  F14F         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 44493  00C5EE  0012               	return		;funcret
 44494  00C5F0                     __end_of_RADIO_SetBandwidth:
 44495                           	opt stack 0
 44496                           tosu	equ	0xFFF
 44497                           tosh	equ	0xFFE
 44498                           tosl	equ	0xFFD
 44499                           pclath	equ	0xFFA
 44500                           tblptru	equ	0xFF8
 44501                           tblptrh	equ	0xFF7
 44502                           tblptrl	equ	0xFF6
 44503                           tablat	equ	0xFF5
 44504                           prodh	equ	0xFF4
 44505                           prodl	equ	0xFF3
 44506                           intcon	equ	0xFF2
 44507                           intcon2	equ	0xFF1
 44508                           intcon3	equ	0xFF0
 44509                           indf0	equ	0xFEF
 44510                           postinc0	equ	0xFEE
 44511                           fsr0h	equ	0xFEA
 44512                           fsr0l	equ	0xFE9
 44513                           wreg	equ	0xFE8
 44514                           postinc1	equ	0xFE6
 44515                           postdec1	equ	0xFE5
 44516                           plusw1	equ	0xFE3
 44517                           fsr1h	equ	0xFE2
 44518                           fsr1l	equ	0xFE1
 44519                           indf2	equ	0xFDF
 44520                           postinc2	equ	0xFDE
 44521                           postdec2	equ	0xFDD
 44522                           plusw2	equ	0xFDB
 44523                           fsr2h	equ	0xFDA
 44524                           fsr2l	equ	0xFD9
 44525                           status	equ	0xFD8
 44526                           
 44527 ;; *************** function _RADIO_Transmit *****************
 44528 ;; Defined at:
 44529 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44530 ;; Parameters:    Size  Location     Type
 44531 ;;  buffer          2   81[BANK0 ] PTR unsigned char 
 44532 ;;		 -> macBuffer(271), 
 44533 ;;  bufferLen       1   83[BANK0 ] unsigned char 
 44534 ;; Auto vars:     Size  Location     Type
 44535 ;;  i               1   97[BANK0 ] unsigned char 
 44536 ;;  regValue        1   96[BANK0 ] unsigned char 
 44537 ;; Return value:  Size  Location     Type
 44538 ;;                  2   81[BANK0 ] enum E7038
 44539 ;; Registers used:
 44540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44541 ;; Tracked objects:
 44542 ;;		On entry : 0/0
 44543 ;;		On exit  : 0/0
 44544 ;;		Unchanged: 0/0
 44545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44546 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44547 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44549 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44550 ;;Total ram usage:       17 bytes
 44551 ;; Hardware stack levels used:    1
 44552 ;; Hardware stack levels required when called:   12
 44553 ;; This function calls:
 44554 ;;		_HALSPICSAssert
 44555 ;;		_HALSPICSDeassert
 44556 ;;		_HALSPISend
 44557 ;;		_RADIO_RegisterRead
 44558 ;;		_RADIO_RegisterWrite
 44559 ;;		_RADIO_WriteConfiguration
 44560 ;;		_RADIO_WriteMode
 44561 ;;		_SwTimerSetTimeout
 44562 ;;		_SwTimerStart
 44563 ;;		_SwTimerStop
 44564 ;;		___lldiv
 44565 ;; This function is called by:
 44566 ;;		_LORAWAN_RxTimeout
 44567 ;;		_LORAWAN_Join
 44568 ;;		_LORAWAN_Send
 44569 ;;		_AckRetransmissionCallback
 44570 ;;		_UnconfirmedTransmissionCallback
 44571 ;; This function uses a non-reentrant model
 44572 ;;
 44573                           
 44574                           	psect	text245
 44575  005BC4                     __ptext245:
 44576                           	opt stack 0
 44577  005BC4                     _RADIO_Transmit:
 44578                           	opt stack 17
 44579                           
 44580                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 44581                           ;radio_driver_SX1276.c: 789: uint8_t i;
 44582                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 44583                           
 44584                           ;incstack = 0
 44585  005BC4  0101               	movlb	1	; () banked
 44586  005BC6  A558               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 44587  005BC8  D006               	goto	l828
 44588                           
 44589                           ; BSR set to: 1
 44590                           ;radio_driver_SX1276.c: 792: {
 44591                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 44592  005BCA  0E80               	movlw	128
 44593  005BCC  0100               	movlb	0	; () banked
 44594  005BCE  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44595  005BD0  0E03               	movlw	3
 44596  005BD2  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44597                           
 44598                           ; BSR set to: 0
 44599  005BD4  0012               	return	
 44600  005BD6                     l828:
 44601                           
 44602                           ;radio_driver_SX1276.c: 794: }
 44603                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 44604                           
 44605                           ; BSR set to: 0
 44606  005BD6  C158  F0B4         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 44607  005BDA  0E03               	movlw	3
 44608  005BDC  0100               	movlb	0	; () banked
 44609  005BDE  17B4               	andwf	??_RADIO_Transmit& (0+255),f,b
 44610  005BE0  B4D8               	btfsc	status,2,c
 44611  005BE2  D005               	goto	l830
 44612                           
 44613                           ; BSR set to: 0
 44614                           ;radio_driver_SX1276.c: 797: {
 44615                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 44616  005BE4  0E80               	movlw	128
 44617  005BE6  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44618  005BE8  0E04               	movlw	4
 44619  005BEA  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44620                           
 44621                           ; BSR set to: 0
 44622  005BEC  0012               	return	
 44623  005BEE                     l830:
 44624                           
 44625                           ; BSR set to: 0
 44626                           ;radio_driver_SX1276.c: 799: }
 44627                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 44628                           
 44629                           ; BSR set to: 0
 44630  005BEE  0101               	movlb	1	; () banked
 44631  005BF0  514D               	movf	(_RadioConfiguration+24)& (0+255),w,b
 44632  005BF2  A4D8               	btfss	status,2,c
 44633  005BF4  D009               	goto	l831
 44634                           
 44635                           ; BSR set to: 1
 44636  005BF6  0E40               	movlw	64
 44637  005BF8  0100               	movlb	0	; () banked
 44638  005BFA  65B3               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 44639  005BFC  D005               	goto	l831
 44640                           
 44641                           ; BSR set to: 0
 44642                           ;radio_driver_SX1276.c: 802: {
 44643                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 44644  005BFE  0E80               	movlw	128
 44645  005C00  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44646  005C02  0E02               	movlw	2
 44647  005C04  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44648                           
 44649                           ; BSR set to: 0
 44650  005C06  0012               	return	
 44651  005C08                     l831:
 44652                           
 44653                           ;radio_driver_SX1276.c: 804: }
 44654                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 44655                           
 44656                           ; BSR set to: 0
 44657  005C08  0101               	movlb	1	; () banked
 44658  005C0A  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44659  005C0C  ECA6  F05E         	call	_SwTimerStop
 44660                           
 44661                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 44662  005C10  0E00               	movlw	0
 44663  005C12  0100               	movlb	0	; () banked
 44664  005C14  6FA7               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 44665  005C16  0E04               	movlw	4
 44666  005C18  6FA6               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 44667  005C1A  EC87  F012         	call	_RADIO_WriteConfiguration	;wreg free
 44668                           
 44669                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 44670  005C1E  0101               	movlb	1	; () banked
 44671  005C20  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 44672  005C22  A4D8               	btfss	status,2,c
 44673  005C24  D027               	goto	l832
 44674                           
 44675                           ; BSR set to: 1
 44676                           ;radio_driver_SX1276.c: 813: {
 44677                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 44678  005C26  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 44679  005C2A  0E22               	movlw	34
 44680  005C2C  ECEB  F05F         	call	_RADIO_RegisterWrite
 44681                           
 44682                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 44683  005C30  0E0A               	movlw	10
 44684  005C32  EC92  F05E         	call	_RADIO_RegisterRead
 44685  005C36  0100               	movlb	0	; () banked
 44686  005C38  6FC0               	movwf	RADIO_Transmit@regValue& (0+255),b
 44687                           
 44688                           ; BSR set to: 0
 44689                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 44690  005C3A  0EF0               	movlw	240
 44691  005C3C  17C0               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 44692                           
 44693                           ; BSR set to: 0
 44694                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 44695  005C3E  87C0               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 44696                           
 44697                           ; BSR set to: 0
 44698                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 44699  005C40  C0C0  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 44700  005C44  0E0A               	movlw	10
 44701  005C46  ECEB  F05F         	call	_RADIO_RegisterWrite
 44702                           
 44703                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 44704  005C4A  0E40               	movlw	64
 44705  005C4C  0100               	movlb	0	; () banked
 44706  005C4E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44707  005C50  0E40               	movlw	64
 44708  005C52  ECEB  F05F         	call	_RADIO_RegisterWrite
 44709                           
 44710                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 44711  005C56  0E00               	movlw	0
 44712  005C58  0100               	movlb	0	; () banked
 44713  005C5A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44714  005C5C  0E41               	movlw	65
 44715  005C5E  ECEB  F05F         	call	_RADIO_RegisterWrite
 44716                           
 44717                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 44718  005C62  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 44719  005C66  0E01               	movlw	1
 44720  005C68  0100               	movlb	0	; () banked
 44721  005C6A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 44722  005C6C  0E01               	movlw	1
 44723  005C6E  ECDC  F043         	call	_RADIO_WriteMode
 44724                           
 44725                           ;radio_driver_SX1276.c: 828: }
 44726  005C72  D00C               	goto	l833
 44727  005C74                     l832:
 44728                           
 44729                           ;radio_driver_SX1276.c: 829: else
 44730                           ;radio_driver_SX1276.c: 830: {
 44731                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 44732  005C74  0E00               	movlw	0
 44733  005C76  0100               	movlb	0	; () banked
 44734  005C78  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44735  005C7A  0E40               	movlw	64
 44736  005C7C  ECEB  F05F         	call	_RADIO_RegisterWrite
 44737                           
 44738                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 44739  005C80  0E00               	movlw	0
 44740  005C82  0100               	movlb	0	; () banked
 44741  005C84  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 44742  005C86  0E41               	movlw	65
 44743  005C88  ECEB  F05F         	call	_RADIO_RegisterWrite
 44744  005C8C                     l833:
 44745                           
 44746                           ;radio_driver_SX1276.c: 834: }
 44747                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 44748  005C8C  0101               	movlb	1	; () banked
 44749  005C8E  514D               	movf	(_RadioConfiguration+24)& (0+255),w,b
 44750  005C90  A4D8               	btfss	status,2,c
 44751  005C92  D005               	goto	l834
 44752                           
 44753                           ; BSR set to: 1
 44754                           ;radio_driver_SX1276.c: 837: {
 44755                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 44756  005C94  C0B3  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 44757  005C98  0E00               	movlw	0
 44758  005C9A  ECEB  F05F         	call	_RADIO_RegisterWrite
 44759  005C9E                     l834:
 44760                           
 44761                           ;radio_driver_SX1276.c: 840: }
 44762                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 44763  005C9E  EC66  F063         	call	_HALSPICSAssert	;wreg free
 44764                           
 44765                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 44766  005CA2  0E80               	movlw	128
 44767  005CA4  EC70  F062         	call	_HALSPISend
 44768                           
 44769                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 44770  005CA8  0E00               	movlw	0
 44771  005CAA  0100               	movlb	0	; () banked
 44772  005CAC  6FC1               	movwf	RADIO_Transmit@i& (0+255),b
 44773  005CAE  D00D               	goto	l835
 44774  005CB0                     
 44775                           ; BSR set to: 0
 44776                           ;radio_driver_SX1276.c: 846: {
 44777                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 44778                           
 44779                           ; BSR set to: 0
 44780  005CB0  51C1               	movf	RADIO_Transmit@i& (0+255),w,b
 44781  005CB2  0D01               	mullw	1
 44782  005CB4  50F3               	movf	prodl,w,c
 44783  005CB6  25B1               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 44784  005CB8  6ED9               	movwf	fsr2l,c
 44785  005CBA  50F4               	movf	prodh,w,c
 44786  005CBC  21B2               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 44787  005CBE  6EDA               	movwf	fsr2h,c
 44788  005CC0  50DF               	movf	indf2,w,c
 44789  005CC2  EC70  F062         	call	_HALSPISend
 44790  005CC6  0100               	movlb	0	; () banked
 44791  005CC8  2BC1               	incf	RADIO_Transmit@i& (0+255),f,b
 44792  005CCA                     l835:
 44793                           
 44794                           ; BSR set to: 0
 44795                           
 44796                           ; BSR set to: 0
 44797  005CCA  51B3               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 44798  005CCC  5DC1               	subwf	RADIO_Transmit@i& (0+255),w,b
 44799  005CCE  A0D8               	btfss	status,0,c
 44800  005CD0  D7EF               	goto	l836
 44801                           
 44802                           ; BSR set to: 0
 44803                           ;radio_driver_SX1276.c: 848: }
 44804                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 44805                           
 44806                           ; BSR set to: 0
 44807  005CD2  EC64  F063         	call	_HALSPICSDeassert	;wreg free
 44808                           
 44809                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 44810  005CD6  0101               	movlb	1	; () banked
 44811  005CD8  8158               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 44812                           
 44813                           ; BSR set to: 1
 44814                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 44815  005CDA  0EE7               	movlw	231
 44816  005CDC  1758               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 44817                           
 44818                           ; BSR set to: 1
 44819                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 44820  005CDE  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 44821  005CE2  0E00               	movlw	0
 44822  005CE4  0100               	movlb	0	; () banked
 44823  005CE6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 44824  005CE8  0E03               	movlw	3
 44825  005CEA  ECDC  F043         	call	_RADIO_WriteMode
 44826                           
 44827                           ; BSR set to: 0
 44828                           
 44829                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 44830  005CEE  0E00               	movlw	0
 44831  005CF0  0100               	movlb	0	; () banked
 44832  005CF2  6FB8               	movwf	_RADIO_Transmit$1172& (0+255),b
 44833  005CF4  0E00               	movlw	0
 44834  005CF6  6FB9               	movwf	(_RADIO_Transmit$1172+1)& (0+255),b
 44835  005CF8  0E0A               	movlw	10
 44836  005CFA  6FBA               	movwf	(_RADIO_Transmit$1172+2)& (0+255),b
 44837  005CFC  0E00               	movlw	0
 44838  005CFE  6FBB               	movwf	(_RADIO_Transmit$1172+3)& (0+255),b
 44839                           
 44840                           ; BSR set to: 0
 44841                           
 44842                           ; BSR set to: 0
 44843  005D00  C0B8  F06D         	movff	_RADIO_Transmit$1172,SwTimerSetTimeout@timeout
 44844  005D04  C0B9  F06E         	movff	_RADIO_Transmit$1172+1,SwTimerSetTimeout@timeout+1
 44845  005D08  C0BA  F06F         	movff	_RADIO_Transmit$1172+2,SwTimerSetTimeout@timeout+2
 44846  005D0C  C0BB  F070         	movff	_RADIO_Transmit$1172+3,SwTimerSetTimeout@timeout+3
 44847  005D10  0101               	movlb	1	; () banked
 44848  005D12  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44849  005D14  ECD5  F05A         	call	_SwTimerSetTimeout
 44850                           
 44851                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 44852  005D18  0101               	movlb	1	; () banked
 44853  005D1A  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 44854  005D1C  EC5A  F04D         	call	_SwTimerStart
 44855                           
 44856                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 44857  005D20  0101               	movlb	1	; () banked
 44858  005D22  515F               	movf	(_RadioConfiguration+42)& (0+255),w,b
 44859  005D24  1160               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 44860  005D26  1161               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 44861  005D28  1162               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 44862  005D2A  B4D8               	btfsc	status,2,c
 44863  005D2C  D061               	goto	l842
 44864                           
 44865                           ; BSR set to: 1
 44866                           ;radio_driver_SX1276.c: 866: {
 44867                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 44868  005D2E  5162               	movf	(_RadioConfiguration+45)& (0+255),w,b
 44869  005D30  E107               	bnz	u21350
 44870  005D32  295F               	incf	(_RadioConfiguration+42)& (0+255),w,b
 44871  005D34  0EFF               	movlw	255
 44872  005D36  5960               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 44873  005D38  0E0F               	movlw	15
 44874  005D3A  5961               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 44875  005D3C  A0D8               	btfss	status,0,c
 44876  005D3E  D01D               	goto	l844
 44877  005D40                     u21350:
 44878                           
 44879                           ; BSR set to: 1
 44880  005D40  C15F  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 44881  005D44  C160  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 44882  005D48  C161  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 44883  005D4C  C162  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 44884  005D50  0E7D               	movlw	125
 44885  005D52  0100               	movlb	0	; () banked
 44886  005D54  6F64               	movwf	___lldiv@divisor& (0+255),b
 44887  005D56  0E00               	movlw	0
 44888  005D58  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 44889  005D5A  0E00               	movlw	0
 44890  005D5C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 44891  005D5E  0E00               	movlw	0
 44892  005D60  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 44893  005D62  ECAE  F050         	call	___lldiv	;wreg free
 44894  005D66  0E0C               	movlw	12
 44895  005D68                     u21365:
 44896  005D68  90D8               	bcf	status,0,c
 44897  005D6A  0100               	movlb	0	; () banked
 44898  005D6C  3760               	rlcf	?___lldiv& (0+255),f,b
 44899  005D6E  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 44900  005D70  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 44901  005D72  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 44902  005D74  2EE8               	decfsz	wreg,f,c
 44903  005D76  D7F8               	goto	u21365
 44904  005D78  D023               	goto	L22
 44905  005D7A                     l844:
 44906                           
 44907                           ; BSR set to: 0
 44908  005D7A  C15F  F0B4         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 44909  005D7E  C160  F0B5         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 44910  005D82  C161  F0B6         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 44911  005D86  C162  F0B7         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 44912  005D8A  0E0C               	movlw	12
 44913  005D8C                     u21375:
 44914  005D8C  90D8               	bcf	status,0,c
 44915  005D8E  0100               	movlb	0	; () banked
 44916  005D90  37B4               	rlcf	??_RADIO_Transmit& (0+255),f,b
 44917  005D92  37B5               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 44918  005D94  37B6               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 44919  005D96  37B7               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 44920  005D98  2EE8               	decfsz	wreg,f,c
 44921  005D9A  D7F8               	goto	u21375
 44922  005D9C  C0B4  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 44923  005DA0  C0B5  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 44924  005DA4  C0B6  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 44925  005DA8  C0B7  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 44926  005DAC  0E7D               	movlw	125
 44927  005DAE  6F64               	movwf	___lldiv@divisor& (0+255),b
 44928  005DB0  0E00               	movlw	0
 44929  005DB2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 44930  005DB4  0E00               	movlw	0
 44931  005DB6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 44932  005DB8  0E00               	movlw	0
 44933  005DBA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 44934  005DBC  ECAE  F050         	call	___lldiv	;wreg free
 44935  005DC0                     L22:
 44936  005DC0  C060  F0BC         	movff	?___lldiv,_RADIO_Transmit$1174
 44937  005DC4  C061  F0BD         	movff	?___lldiv+1,_RADIO_Transmit$1174+1
 44938  005DC8  C062  F0BE         	movff	?___lldiv+2,_RADIO_Transmit$1174+2
 44939  005DCC  C063  F0BF         	movff	?___lldiv+3,_RADIO_Transmit$1174+3
 44940  005DD0  C0BC  F06D         	movff	_RADIO_Transmit$1174,SwTimerSetTimeout@timeout
 44941  005DD4  C0BD  F06E         	movff	_RADIO_Transmit$1174+1,SwTimerSetTimeout@timeout+1
 44942  005DD8  C0BE  F06F         	movff	_RADIO_Transmit$1174+2,SwTimerSetTimeout@timeout+2
 44943  005DDC  C0BF  F070         	movff	_RADIO_Transmit$1174+3,SwTimerSetTimeout@timeout+3
 44944  005DE0  0101               	movlb	1	; () banked
 44945  005DE2  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 44946  005DE4  ECD5  F05A         	call	_SwTimerSetTimeout
 44947                           
 44948                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 44949  005DE8  0101               	movlb	1	; () banked
 44950  005DEA  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 44951  005DEC  EC5A  F04D         	call	_SwTimerStart
 44952  005DF0                     l842:
 44953                           
 44954                           ;radio_driver_SX1276.c: 869: }
 44955                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 44956  005DF0  0E00               	movlw	0
 44957  005DF2  0100               	movlb	0	; () banked
 44958  005DF4  6FB2               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 44959  005DF6  0E00               	movlw	0
 44960  005DF8  6FB1               	movwf	?_RADIO_Transmit& (0+255),b
 44961  005DFA  0012               	return	
 44962  005DFC                     __end_of_RADIO_Transmit:
 44963                           	opt stack 0
 44964                           tosu	equ	0xFFF
 44965                           tosh	equ	0xFFE
 44966                           tosl	equ	0xFFD
 44967                           pclath	equ	0xFFA
 44968                           tblptru	equ	0xFF8
 44969                           tblptrh	equ	0xFF7
 44970                           tblptrl	equ	0xFF6
 44971                           tablat	equ	0xFF5
 44972                           prodh	equ	0xFF4
 44973                           prodl	equ	0xFF3
 44974                           intcon	equ	0xFF2
 44975                           intcon2	equ	0xFF1
 44976                           intcon3	equ	0xFF0
 44977                           indf0	equ	0xFEF
 44978                           postinc0	equ	0xFEE
 44979                           fsr0h	equ	0xFEA
 44980                           fsr0l	equ	0xFE9
 44981                           wreg	equ	0xFE8
 44982                           postinc1	equ	0xFE6
 44983                           postdec1	equ	0xFE5
 44984                           plusw1	equ	0xFE3
 44985                           fsr1h	equ	0xFE2
 44986                           fsr1l	equ	0xFE1
 44987                           indf2	equ	0xFDF
 44988                           postinc2	equ	0xFDE
 44989                           postdec2	equ	0xFDD
 44990                           plusw2	equ	0xFDB
 44991                           fsr2h	equ	0xFDA
 44992                           fsr2l	equ	0xFD9
 44993                           status	equ	0xFD8
 44994                           
 44995 ;; *************** function _RADIO_WriteConfiguration *****************
 44996 ;; Defined at:
 44997 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 44998 ;; Parameters:    Size  Location     Type
 44999 ;;  symbolTimeou    2   70[BANK0 ] unsigned int 
 45000 ;; Auto vars:     Size  Location     Type
 45001 ;;  tempValue       4   76[BANK0 ] unsigned long 
 45002 ;;  regValue        1   80[BANK0 ] unsigned char 
 45003 ;;  i               1   75[BANK0 ] unsigned char 
 45004 ;; Return value:  Size  Location     Type
 45005 ;;                  1    wreg      void 
 45006 ;; Registers used:
 45007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45008 ;; Tracked objects:
 45009 ;;		On entry : 0/0
 45010 ;;		On exit  : 0/0
 45011 ;;		Unchanged: 0/0
 45012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45014 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45015 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45016 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45017 ;;Total ram usage:       11 bytes
 45018 ;; Hardware stack levels used:    1
 45019 ;; Hardware stack levels required when called:   11
 45020 ;; This function calls:
 45021 ;;		_RADIO_RegisterRead
 45022 ;;		_RADIO_RegisterWrite
 45023 ;;		_RADIO_WriteFSKBitRate
 45024 ;;		_RADIO_WriteFSKFrequencyDeviation
 45025 ;;		_RADIO_WriteFrequency
 45026 ;;		_RADIO_WriteMode
 45027 ;;		_RADIO_WritePower
 45028 ;;		___lmul
 45029 ;; This function is called by:
 45030 ;;		_RADIO_Transmit
 45031 ;;		_RADIO_ReceiveStart
 45032 ;;		_RADIO_TransmitCW
 45033 ;; This function uses a non-reentrant model
 45034 ;;
 45035                           
 45036                           	psect	text246
 45037  00250E                     __ptext246:
 45038                           	opt stack 0
 45039  00250E                     _RADIO_WriteConfiguration:
 45040                           	opt stack 17
 45041                           
 45042                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 45043                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 45044                           ;radio_driver_SX1276.c: 537: uint8_t i;
 45045                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 45046                           
 45047                           ; BSR set to: 0
 45048                           ;incstack = 0
 45049  00250E  C14D  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 45050  002512  0E00               	movlw	0
 45051  002514  0100               	movlb	0	; () banked
 45052  002516  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 45053  002518  0E00               	movlw	0
 45054  00251A  ECDC  F043         	call	_RADIO_WriteMode
 45055                           
 45056                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 45057  00251E  C135  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 45058  002522  C136  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 45059  002526  C137  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 45060  00252A  C138  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 45061  00252E  ECC1  F046         	call	_RADIO_WriteFrequency	;wreg free
 45062                           
 45063                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 45064  002532  0101               	movlb	1	; () banked
 45065  002534  5150               	movf	(_RadioConfiguration+27)& (0+255),w,b
 45066  002536  EC49  F046         	call	_RADIO_WritePower
 45067                           
 45068                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 45069  00253A  0101               	movlb	1	; () banked
 45070  00253C  054D               	decf	(_RadioConfiguration+24)& (0+255),w,b
 45071  00253E  A4D8               	btfss	status,2,c
 45072  002540  D1ED               	goto	l784
 45073                           
 45074                           ; BSR set to: 1
 45075                           ;radio_driver_SX1276.c: 545: {
 45076                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 45077  002542  C143  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 45078  002546  0E39               	movlw	57
 45079  002548  ECEB  F05F         	call	_RADIO_RegisterWrite
 45080                           
 45081                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 45082                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 45083                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 45084                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 45085  00254C  C157  F0A8         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 45086  002550  0E01               	movlw	1
 45087  002552  0100               	movlb	0	; () banked
 45088  002554  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45089  002556  0101               	movlb	1	; () banked
 45090  002558  90D8               	bcf	status,0,c
 45091  00255A  3556               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 45092  00255C  0100               	movlb	0	; () banked
 45093  00255E  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45094  002560  0101               	movlb	1	; () banked
 45095  002562  394F               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 45096  002564  0BF0               	andlw	240
 45097  002566  0100               	movlb	0	; () banked
 45098  002568  11A9               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 45099  00256A  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 45100  00256C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45101  00256E  0E1D               	movlw	29
 45102  002570  ECEB  F05F         	call	_RADIO_RegisterWrite
 45103                           
 45104                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 45105                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 45106                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 45107                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 45108  002574  C0A6  F0A8         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 45109  002578  C0A7  F0A9         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 45110  00257C  C0A9  F0A8         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 45111  002580  0100               	movlb	0	; () banked
 45112  002582  6BA9               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45113  002584  0E03               	movlw	3
 45114  002586  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45115  002588  C151  F0AA         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 45116  00258C  0E01               	movlw	1
 45117  00258E  17AA               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45118  002590  90D8               	bcf	status,0,c
 45119  002592  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45120  002594  90D8               	bcf	status,0,c
 45121  002596  37AA               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 45122  002598  0101               	movlb	1	; () banked
 45123  00259A  394E               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 45124  00259C  0BF0               	andlw	240
 45125  00259E  0100               	movlb	0	; () banked
 45126  0025A0  11AA               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 45127  0025A2  11A8               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 45128  0025A4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45129  0025A6  0E1E               	movlw	30
 45130  0025A8  ECEB  F05F         	call	_RADIO_RegisterWrite
 45131                           
 45132                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 45133  0025AC  0101               	movlb	1	; () banked
 45134  0025AE  5153               	movf	(_RadioConfiguration+30)& (0+255),w,b
 45135  0025B0  1154               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 45136  0025B2  B4D8               	btfsc	status,2,c
 45137  0025B4  D06F               	goto	l785
 45138                           
 45139                           ; BSR set to: 1
 45140                           ;radio_driver_SX1276.c: 561: {
 45141                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 45142  0025B6  C153  F0AC         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 45143  0025BA  C154  F0AD         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 45144  0025BE  0100               	movlb	0	; () banked
 45145  0025C0  6BAE               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45146  0025C2  6BAF               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45147                           
 45148                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 45149  0025C4  D04E               	goto	l786
 45150  0025C6                     
 45151                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 45152                           
 45153                           ; BSR set to: 0
 45154  0025C6  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45155  0025CA  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45156  0025CE  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45157  0025D2  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45158  0025D6  0E7D               	movlw	125
 45159  0025D8  0100               	movlb	0	; () banked
 45160  0025DA  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45161  0025DC  0E00               	movlw	0
 45162  0025DE  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45163  0025E0  0E00               	movlw	0
 45164  0025E2  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45165  0025E4  0E00               	movlw	0
 45166  0025E6  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45167  0025E8  EC1B  F057         	call	___lmul	;wreg free
 45168  0025EC  D027               	goto	L24
 45169  0025EE                     
 45170                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 45171  0025EE  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45172  0025F2  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45173  0025F6  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45174  0025FA  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45175  0025FE  0EFA               	movlw	250
 45176  002600  0100               	movlb	0	; () banked
 45177  002602  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45178  002604  0E00               	movlw	0
 45179  002606  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45180  002608  0E00               	movlw	0
 45181  00260A  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45182  00260C  0E00               	movlw	0
 45183  00260E  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45184  002610  EC1B  F057         	call	___lmul	;wreg free
 45185  002614  D013               	goto	L24
 45186  002616                     
 45187                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 45188  002616  C0AC  F09A         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 45189  00261A  C0AD  F09B         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 45190  00261E  C0AE  F09C         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 45191  002622  C0AF  F09D         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 45192  002626  0EF4               	movlw	244
 45193  002628  0100               	movlb	0	; () banked
 45194  00262A  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 45195  00262C  0E01               	movlw	1
 45196  00262E  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 45197  002630  0E00               	movlw	0
 45198  002632  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 45199  002634  0E00               	movlw	0
 45200  002636  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 45201  002638  EC1B  F057         	call	___lmul	;wreg free
 45202  00263C                     L24:
 45203  00263C  C09A  F0AC         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 45204  002640  C09B  F0AD         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 45205  002644  C09C  F0AE         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 45206  002648  C09D  F0AF         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 45207                           
 45208                           ;radio_driver_SX1276.c: 574: break;
 45209  00264C  D016               	goto	l788
 45210  00264E                     
 45211                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 45212  00264E  0E00               	movlw	0
 45213  002650  0100               	movlb	0	; () banked
 45214  002652  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 45215  002654  0E00               	movlw	0
 45216  002656  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 45217  002658  0E00               	movlw	0
 45218  00265A  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45219  00265C  0E00               	movlw	0
 45220  00265E  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45221                           
 45222                           ; BSR set to: 0
 45223                           ;radio_driver_SX1276.c: 579: }
 45224                           
 45225                           ;radio_driver_SX1276.c: 578: break;
 45226  002660  D00C               	goto	l788
 45227  002662                     l786:
 45228                           
 45229                           ; BSR set to: 0
 45230                           
 45231                           ; BSR set to: 0
 45232  002662  0101               	movlb	1	; () banked
 45233  002664  514F               	movf	(_RadioConfiguration+26)& (0+255),w,b
 45234                           
 45235                           ; Switch size 1, requested type "space"
 45236                           ; Number of cases is 3, Range of values is 7 to 9
 45237                           ; switch strategies available:
 45238                           ; Name         Instructions Cycles
 45239                           ; simple_byte           10     6 (average)
 45240                           ;	Chosen strategy is simple_byte
 45241  002666  0A07               	xorlw	7	; case 7
 45242  002668  B4D8               	btfsc	status,2,c
 45243  00266A  D7AD               	goto	l787
 45244  00266C  0A0F               	xorlw	15	; case 8
 45245  00266E  B4D8               	btfsc	status,2,c
 45246  002670  D7BE               	goto	l789
 45247  002672  0A01               	xorlw	1	; case 9
 45248  002674  B4D8               	btfsc	status,2,c
 45249  002676  D7CF               	goto	l790
 45250  002678  D7EA               	goto	l791
 45251  00267A                     l788:
 45252                           
 45253                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 45254                           
 45255                           ; BSR set to: 1
 45256  00267A  0101               	movlb	1	; () banked
 45257  00267C  294E               	incf	(_RadioConfiguration+25)& (0+255),w,b
 45258  00267E  0100               	movlb	0	; () banked
 45259  002680  6FA8               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 45260  002682  D005               	goto	u19810
 45261  002684                     u19815:
 45262  002684  90D8               	bcf	status,0,c
 45263  002686  33AF               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 45264  002688  33AE               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 45265  00268A  33AD               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 45266  00268C  33AC               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 45267  00268E                     u19810:
 45268  00268E  2FA8               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 45269  002690  D7F9               	goto	u19815
 45270                           
 45271                           ;radio_driver_SX1276.c: 582: }
 45272  002692  D009               	goto	l792
 45273  002694                     l785:
 45274                           
 45275                           ;radio_driver_SX1276.c: 583: else
 45276                           ;radio_driver_SX1276.c: 584: {
 45277                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 45278  002694  0E00               	movlw	0
 45279  002696  0100               	movlb	0	; () banked
 45280  002698  6FAC               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 45281  00269A  0E00               	movlw	0
 45282  00269C  6FAD               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 45283  00269E  0E00               	movlw	0
 45284  0026A0  6FAE               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 45285  0026A2  0E00               	movlw	0
 45286  0026A4  6FAF               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 45287  0026A6                     l792:
 45288                           
 45289                           ;radio_driver_SX1276.c: 586: }
 45290                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 45291                           
 45292                           ; BSR set to: 0
 45293  0026A6  C0AC  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 45294  0026AA  0E24               	movlw	36
 45295  0026AC  ECEB  F05F         	call	_RADIO_RegisterWrite
 45296                           
 45297                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 45298  0026B0  C0A6  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 45299  0026B4  0E1F               	movlw	31
 45300  0026B6  ECEB  F05F         	call	_RADIO_RegisterWrite
 45301                           
 45302                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 45303  0026BA  0E26               	movlw	38
 45304  0026BC  EC92  F05E         	call	_RADIO_RegisterRead
 45305  0026C0  0100               	movlb	0	; () banked
 45306  0026C2  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45307                           
 45308                           ; BSR set to: 0
 45309                           ;radio_driver_SX1276.c: 596: if (
 45310                           ;radio_driver_SX1276.c: 597: (
 45311                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 45312                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 45313                           ;radio_driver_SX1276.c: 600: ) ||
 45314                           ;radio_driver_SX1276.c: 601: (
 45315                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 45316                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 45317                           ;radio_driver_SX1276.c: 604: )
 45318                           ;radio_driver_SX1276.c: 605: )
 45319  0026C4  0E0C               	movlw	12
 45320  0026C6  0101               	movlb	1	; () banked
 45321  0026C8  194E               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 45322  0026CA  A4D8               	btfss	status,2,c
 45323  0026CC  D008               	goto	u19840
 45324                           
 45325                           ; BSR set to: 1
 45326  0026CE  0E07               	movlw	7
 45327  0026D0  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45328  0026D2  B4D8               	btfsc	status,2,c
 45329  0026D4  D00C               	goto	u19860
 45330                           
 45331                           ; BSR set to: 1
 45332  0026D6  0E08               	movlw	8
 45333  0026D8  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45334  0026DA  B4D8               	btfsc	status,2,c
 45335  0026DC  D008               	goto	u19860
 45336  0026DE                     u19840:
 45337                           
 45338                           ; BSR set to: 1
 45339                           
 45340                           ; BSR set to: 1
 45341  0026DE  0E0B               	movlw	11
 45342  0026E0  194E               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 45343  0026E2  A4D8               	btfss	status,2,c
 45344  0026E4  D007               	goto	l793
 45345                           
 45346                           ; BSR set to: 1
 45347  0026E6  0E07               	movlw	7
 45348  0026E8  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45349  0026EA  A4D8               	btfss	status,2,c
 45350  0026EC  D003               	goto	l793
 45351  0026EE                     u19860:
 45352                           
 45353                           ; BSR set to: 1
 45354                           ;radio_driver_SX1276.c: 606: {
 45355                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 45356                           
 45357                           ; BSR set to: 1
 45358  0026EE  0100               	movlb	0	; () banked
 45359  0026F0  87B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 45360                           
 45361                           ;radio_driver_SX1276.c: 608: }
 45362  0026F2  D002               	goto	l798
 45363  0026F4                     l793:
 45364                           
 45365                           ;radio_driver_SX1276.c: 609: else
 45366                           ;radio_driver_SX1276.c: 610: {
 45367                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 45368                           
 45369                           ; BSR set to: 0
 45370  0026F4  0100               	movlb	0	; () banked
 45371  0026F6  97B0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 45372  0026F8                     l798:
 45373                           
 45374                           ; BSR set to: 0
 45375                           ;radio_driver_SX1276.c: 612: }
 45376                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 45377  0026F8  85B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 45378                           
 45379                           ; BSR set to: 0
 45380                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 45381  0026FA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45382  0026FE  0E26               	movlw	38
 45383  002700  ECEB  F05F         	call	_RADIO_RegisterWrite
 45384                           
 45385                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 45386  002704  0E31               	movlw	49
 45387  002706  EC92  F05E         	call	_RADIO_RegisterRead
 45388  00270A  0100               	movlb	0	; () banked
 45389  00270C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45390                           
 45391                           ; BSR set to: 0
 45392                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 45393  00270E  0EF8               	movlw	248
 45394  002710  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45395                           
 45396                           ; BSR set to: 0
 45397                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 45398  002712  0E03               	movlw	3
 45399  002714  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45400                           
 45401                           ; BSR set to: 0
 45402                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 45403  002716  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45404  00271A  0E31               	movlw	49
 45405  00271C  ECEB  F05F         	call	_RADIO_RegisterWrite
 45406                           
 45407                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 45408  002720  0E0A               	movlw	10
 45409  002722  0100               	movlb	0	; () banked
 45410  002724  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45411  002726  0E37               	movlw	55
 45412  002728  ECEB  F05F         	call	_RADIO_RegisterWrite
 45413                           
 45414                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 45415  00272C  0E12               	movlw	18
 45416  00272E  0101               	movlb	1	; () banked
 45417  002730  1966               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 45418  002732  A4D8               	btfss	status,2,c
 45419  002734  D02F               	goto	l803
 45420                           
 45421                           ; BSR set to: 1
 45422                           ;radio_driver_SX1276.c: 626: {
 45423                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 45424                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 45425  002736  0E07               	movlw	7
 45426  002738  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45427  00273A  B4D8               	btfsc	status,2,c
 45428  00273C  D004               	goto	u19890
 45429                           
 45430                           ; BSR set to: 1
 45431  00273E  0E08               	movlw	8
 45432  002740  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45433  002742  A4D8               	btfss	status,2,c
 45434  002744  D017               	goto	l800
 45435  002746                     u19890:
 45436                           
 45437                           ; BSR set to: 1
 45438                           ;radio_driver_SX1276.c: 631: {
 45439                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 45440                           
 45441                           ; BSR set to: 1
 45442  002746  0E31               	movlw	49
 45443  002748  EC92  F05E         	call	_RADIO_RegisterRead
 45444  00274C  0100               	movlb	0	; () banked
 45445  00274E  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45446                           
 45447                           ; BSR set to: 0
 45448                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 45449  002750  9FB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 45450                           
 45451                           ; BSR set to: 0
 45452                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 45453  002752  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45454  002756  0E31               	movlw	49
 45455  002758  ECEB  F05F         	call	_RADIO_RegisterWrite
 45456                           
 45457                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 45458  00275C  0E40               	movlw	64
 45459  00275E  0100               	movlb	0	; () banked
 45460  002760  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45461  002762  0E2F               	movlw	47
 45462  002764  ECEB  F05F         	call	_RADIO_RegisterWrite
 45463                           
 45464                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 45465  002768  0E00               	movlw	0
 45466  00276A  0100               	movlb	0	; () banked
 45467  00276C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45468  00276E  0E30               	movlw	48
 45469  002770  ECEB  F05F         	call	_RADIO_RegisterWrite
 45470  002774                     l800:
 45471                           
 45472                           ;radio_driver_SX1276.c: 637: }
 45473                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 45474  002774  0E09               	movlw	9
 45475  002776  0101               	movlb	1	; () banked
 45476  002778  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45477  00277A  A4D8               	btfss	status,2,c
 45478  00277C  D00B               	goto	l803
 45479                           
 45480                           ; BSR set to: 1
 45481                           ;radio_driver_SX1276.c: 640: {
 45482                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 45483  00277E  0E31               	movlw	49
 45484  002780  EC92  F05E         	call	_RADIO_RegisterRead
 45485  002784  0100               	movlb	0	; () banked
 45486  002786  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45487                           
 45488                           ; BSR set to: 0
 45489                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 45490  002788  8FB0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 45491                           
 45492                           ; BSR set to: 0
 45493                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 45494  00278A  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45495  00278E  0E31               	movlw	49
 45496  002790  ECEB  F05F         	call	_RADIO_RegisterWrite
 45497  002794                     l803:
 45498                           
 45499                           ;radio_driver_SX1276.c: 644: }
 45500                           ;radio_driver_SX1276.c: 645: }
 45501                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 45502  002794  0E33               	movlw	51
 45503  002796  EC92  F05E         	call	_RADIO_RegisterRead
 45504  00279A  0100               	movlb	0	; () banked
 45505  00279C  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45506                           
 45507                           ; BSR set to: 0
 45508                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 45509  00279E  9DB0               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 45510                           
 45511                           ; BSR set to: 0
 45512                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 45513  0027A0  81B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 45514                           
 45515                           ; BSR set to: 0
 45516                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 45517  0027A2  C155  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 45518  0027A6  0E01               	movlw	1
 45519  0027A8  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45520  0027AA  0E06               	movlw	6
 45521  0027AC  6FA9               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 45522  0027AE                     u19915:
 45523  0027AE  90D8               	bcf	status,0,c
 45524  0027B0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 45525  0027B2  2FA9               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 45526  0027B4  D7FC               	goto	u19915
 45527  0027B6  51A8               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 45528  0027B8  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45529                           
 45530                           ; BSR set to: 0
 45531                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 45532  0027BA  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45533  0027BE  0E33               	movlw	51
 45534  0027C0  ECEB  F05F         	call	_RADIO_RegisterWrite
 45535                           
 45536                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 45537  0027C4  C155  F0A8         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 45538  0027C8  0E01               	movlw	1
 45539  0027CA  0100               	movlb	0	; () banked
 45540  0027CC  17A8               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 45541  0027CE  90D8               	bcf	status,0,c
 45542  0027D0  37A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 45543  0027D2  90D8               	bcf	status,0,c
 45544  0027D4  35A8               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 45545  0027D6  0AFF               	xorlw	255
 45546  0027D8  0B1D               	andlw	29
 45547  0027DA  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45548                           
 45549                           ; BSR set to: 0
 45550                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 45551  0027DC  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45552  0027E0  0E3B               	movlw	59
 45553  0027E2  ECEB  F05F         	call	_RADIO_RegisterWrite
 45554                           
 45555                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 45556  0027E6  0101               	movlb	1	; () banked
 45557  0027E8  5142               	movf	(_RadioConfiguration+13)& (0+255),w,b
 45558  0027EA  0100               	movlb	0	; () banked
 45559  0027EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45560  0027EE  0E20               	movlw	32
 45561  0027F0  ECEB  F05F         	call	_RADIO_RegisterWrite
 45562                           
 45563                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 45564  0027F4  C141  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 45565  0027F8  0E21               	movlw	33
 45566  0027FA  ECEB  F05F         	call	_RADIO_RegisterWrite
 45567                           
 45568                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 45569  0027FE  0E00               	movlw	0
 45570  002800  0100               	movlb	0	; () banked
 45571  002802  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45572  002804  0E0D               	movlw	13
 45573  002806  ECEB  F05F         	call	_RADIO_RegisterWrite
 45574                           
 45575                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 45576  00280A  0E00               	movlw	0
 45577  00280C  0100               	movlb	0	; () banked
 45578  00280E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45579  002810  0E0E               	movlw	14
 45580  002812  ECEB  F05F         	call	_RADIO_RegisterWrite
 45581                           
 45582                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 45583  002816  0E00               	movlw	0
 45584  002818  0100               	movlb	0	; () banked
 45585  00281A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45586  00281C  0E0F               	movlw	15
 45587  00281E  ECEB  F05F         	call	_RADIO_RegisterWrite
 45588                           
 45589                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 45590  002822  0E12               	movlw	18
 45591  002824  0101               	movlb	1	; () banked
 45592  002826  1966               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 45593  002828  A4D8               	btfss	status,2,c
 45594  00282A  D071               	goto	l810
 45595                           
 45596                           ; BSR set to: 1
 45597                           ;radio_driver_SX1276.c: 665: {
 45598                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 45599                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 45600                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 45601                           ;radio_driver_SX1276.c: 669: )
 45602  00282C  0E09               	movlw	9
 45603  00282E  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45604  002830  A4D8               	btfss	status,2,c
 45605  002832  D020               	goto	l805
 45606                           
 45607                           ; BSR set to: 1
 45608  002834  0E80               	movlw	128
 45609  002836  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45610  002838  0E13               	movlw	19
 45611  00283A  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45612  00283C  0E61               	movlw	97
 45613  00283E  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45614  002840  0E33               	movlw	51
 45615  002842  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45616  002844  A0D8               	btfss	status,0,c
 45617  002846  D016               	goto	l805
 45618                           
 45619                           ; BSR set to: 1
 45620  002848  0535               	decf	_RadioConfiguration& (0+255),w,b
 45621  00284A  0EF7               	movlw	247
 45622  00284C  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45623  00284E  0ECB               	movlw	203
 45624  002850  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45625  002852  0E3C               	movlw	60
 45626  002854  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45627  002856  B0D8               	btfsc	status,0,c
 45628  002858  D00D               	goto	l805
 45629                           
 45630                           ; BSR set to: 1
 45631                           ;radio_driver_SX1276.c: 670: {
 45632                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 45633  00285A  0E02               	movlw	2
 45634  00285C  0100               	movlb	0	; () banked
 45635  00285E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45636  002860  0E36               	movlw	54
 45637  002862  ECEB  F05F         	call	_RADIO_RegisterWrite
 45638                           
 45639                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 45640  002866  0E64               	movlw	100
 45641  002868  0100               	movlb	0	; () banked
 45642  00286A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45643  00286C  0E3A               	movlw	58
 45644  00286E  ECEB  F05F         	call	_RADIO_RegisterWrite
 45645                           
 45646                           ;radio_driver_SX1276.c: 673: }
 45647  002872  D02C               	goto	l808
 45648  002874                     l805:
 45649                           
 45650                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 45651                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 45652                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 45653                           ;radio_driver_SX1276.c: 677: )
 45654  002874  0E09               	movlw	9
 45655  002876  0101               	movlb	1	; () banked
 45656  002878  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45657  00287A  A4D8               	btfss	status,2,c
 45658  00287C  D021               	goto	l807
 45659                           
 45660                           ; BSR set to: 1
 45661  00287E  0E80               	movlw	128
 45662  002880  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45663  002882  0E1A               	movlw	26
 45664  002884  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45665  002886  0E70               	movlw	112
 45666  002888  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45667  00288A  0E18               	movlw	24
 45668  00288C  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45669  00288E  A0D8               	btfss	status,0,c
 45670  002890  D017               	goto	l807
 45671                           
 45672                           ; BSR set to: 1
 45673  002892  0E41               	movlw	65
 45674  002894  5D35               	subwf	_RadioConfiguration& (0+255),w,b
 45675  002896  0EDD               	movlw	221
 45676  002898  5936               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 45677  00289A  0E4A               	movlw	74
 45678  00289C  5937               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 45679  00289E  0E1F               	movlw	31
 45680  0028A0  5938               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 45681  0028A2  B0D8               	btfsc	status,0,c
 45682  0028A4  D00D               	goto	l807
 45683                           
 45684                           ; BSR set to: 1
 45685                           ;radio_driver_SX1276.c: 678: {
 45686                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 45687  0028A6  0E02               	movlw	2
 45688  0028A8  0100               	movlb	0	; () banked
 45689  0028AA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45690  0028AC  0E36               	movlw	54
 45691  0028AE  ECEB  F05F         	call	_RADIO_RegisterWrite
 45692                           
 45693                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 45694  0028B2  0E7F               	movlw	127
 45695  0028B4  0100               	movlb	0	; () banked
 45696  0028B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45697  0028B8  0E3A               	movlw	58
 45698  0028BA  ECEB  F05F         	call	_RADIO_RegisterWrite
 45699                           
 45700                           ;radio_driver_SX1276.c: 681: }
 45701  0028BE  D006               	goto	l808
 45702  0028C0                     l807:
 45703                           
 45704                           ;radio_driver_SX1276.c: 682: else
 45705                           ;radio_driver_SX1276.c: 683: {
 45706                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 45707  0028C0  0E03               	movlw	3
 45708  0028C2  0100               	movlb	0	; () banked
 45709  0028C4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45710  0028C6  0E36               	movlw	54
 45711  0028C8  ECEB  F05F         	call	_RADIO_RegisterWrite
 45712  0028CC                     l808:
 45713                           
 45714                           ;radio_driver_SX1276.c: 685: }
 45715                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 45716  0028CC  0E09               	movlw	9
 45717  0028CE  0101               	movlb	1	; () banked
 45718  0028D0  194F               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 45719  0028D2  A4D8               	btfss	status,2,c
 45720  0028D4  D010               	goto	l809
 45721                           
 45722                           ; BSR set to: 1
 45723  0028D6  0555               	decf	(_RadioConfiguration+32)& (0+255),w,b
 45724  0028D8  A4D8               	btfss	status,2,c
 45725  0028DA  D00D               	goto	l809
 45726                           
 45727                           ; BSR set to: 1
 45728                           ;radio_driver_SX1276.c: 689: {
 45729                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 45730  0028DC  0E65               	movlw	101
 45731  0028DE  0100               	movlb	0	; () banked
 45732  0028E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45733  0028E2  0E3A               	movlw	58
 45734  0028E4  ECEB  F05F         	call	_RADIO_RegisterWrite
 45735                           
 45736                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 45737  0028E8  0E19               	movlw	25
 45738  0028EA  0100               	movlb	0	; () banked
 45739  0028EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45740  0028EE  0E3B               	movlw	59
 45741  0028F0  ECEB  F05F         	call	_RADIO_RegisterWrite
 45742                           
 45743                           ;radio_driver_SX1276.c: 692: }
 45744  0028F4  D00C               	goto	l810
 45745  0028F6                     l809:
 45746                           
 45747                           ;radio_driver_SX1276.c: 693: else
 45748                           ;radio_driver_SX1276.c: 694: {
 45749                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 45750  0028F6  0E65               	movlw	101
 45751  0028F8  0100               	movlb	0	; () banked
 45752  0028FA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45753  0028FC  0E3A               	movlw	58
 45754  0028FE  ECEB  F05F         	call	_RADIO_RegisterWrite
 45755                           
 45756                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 45757  002902  0E1D               	movlw	29
 45758  002904  0100               	movlb	0	; () banked
 45759  002906  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45760  002908  0E3B               	movlw	59
 45761  00290A  ECEB  F05F         	call	_RADIO_RegisterWrite
 45762  00290E                     l810:
 45763                           
 45764                           ;radio_driver_SX1276.c: 697: }
 45765                           ;radio_driver_SX1276.c: 698: }
 45766                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 45767  00290E  0EFF               	movlw	255
 45768  002910  0100               	movlb	0	; () banked
 45769  002912  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45770  002914  0E12               	movlw	18
 45771  002916  ECEB  F05F         	call	_RADIO_RegisterWrite
 45772                           
 45773                           ;radio_driver_SX1276.c: 702: }
 45774  00291A  0012               	return	
 45775  00291C                     l784:
 45776                           
 45777                           ;radio_driver_SX1276.c: 703: else
 45778                           ;radio_driver_SX1276.c: 704: {
 45779                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 45780  00291C  C139  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 45781  002920  C13A  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 45782  002924  C13B  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 45783  002928  C13C  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 45784  00292C  ECB1  F053         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 45785                           
 45786                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 45787  002930  C13D  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 45788  002934  C13E  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 45789  002938  C13F  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 45790  00293C  C140  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 45791  002940  ECE6  F053         	call	_RADIO_WriteFSKBitRate	;wreg free
 45792                           
 45793                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 45794  002944  0101               	movlb	1	; () banked
 45795  002946  5142               	movf	(_RadioConfiguration+13)& (0+255),w,b
 45796  002948  0100               	movlb	0	; () banked
 45797  00294A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45798  00294C  0E25               	movlw	37
 45799  00294E  ECEB  F05F         	call	_RADIO_RegisterWrite
 45800                           
 45801                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 45802  002952  C141  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 45803  002956  0E26               	movlw	38
 45804  002958  ECEB  F05F         	call	_RADIO_RegisterWrite
 45805                           
 45806                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 45807  00295C  0E0A               	movlw	10
 45808  00295E  EC92  F05E         	call	_RADIO_RegisterRead
 45809  002962  0100               	movlb	0	; () banked
 45810  002964  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45811                           
 45812                           ; BSR set to: 0
 45813                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 45814  002966  0E9F               	movlw	159
 45815  002968  17B0               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45816                           
 45817                           ; BSR set to: 0
 45818                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 45819  00296A  0101               	movlb	1	; () banked
 45820  00296C  3968               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 45821  00296E  46E8               	rlncf	wreg,f,c
 45822  002970  0BE0               	andlw	224
 45823  002972  0100               	movlb	0	; () banked
 45824  002974  13B0               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 45825                           
 45826                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 45827  002976  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45828  00297A  0E0A               	movlw	10
 45829  00297C  ECEB  F05F         	call	_RADIO_RegisterWrite
 45830                           
 45831                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 45832  002980  0EC8               	movlw	200
 45833  002982  0100               	movlb	0	; () banked
 45834  002984  6FB0               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 45835                           
 45836                           ; BSR set to: 0
 45837                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 45838  002986  0101               	movlb	1	; () banked
 45839  002988  5151               	movf	(_RadioConfiguration+28)& (0+255),w,b
 45840  00298A  B4D8               	btfsc	status,2,c
 45841  00298C  D002               	goto	l812
 45842                           
 45843                           ; BSR set to: 1
 45844                           ;radio_driver_SX1276.c: 722: {
 45845                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 45846  00298E  0100               	movlb	0	; () banked
 45847  002990  89B0               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 45848  002992                     l812:
 45849                           
 45850                           ;radio_driver_SX1276.c: 724: }
 45851                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 45852                           
 45853                           ; BSR set to: 0
 45854  002992  C0B0  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 45855  002996  0E30               	movlw	48
 45856  002998  ECEB  F05F         	call	_RADIO_RegisterWrite
 45857                           
 45858                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 45859  00299C  0E00               	movlw	0
 45860  00299E  0100               	movlb	0	; () banked
 45861  0029A0  6FAB               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 45862  0029A2  D010               	goto	l813
 45863  0029A4                     
 45864                           ; BSR set to: 0
 45865                           ;radio_driver_SX1276.c: 729: {
 45866                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 45867                           
 45868                           ; BSR set to: 0
 45869  0029A4  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 45870  0029A6  0D01               	mullw	1
 45871  0029A8  0E44               	movlw	low (_RadioConfiguration+15)
 45872  0029AA  24F3               	addwf	prodl,w,c
 45873  0029AC  6ED9               	movwf	fsr2l,c
 45874  0029AE  0E01               	movlw	high (_RadioConfiguration+15)
 45875  0029B0  20F4               	addwfc	prodh,w,c
 45876  0029B2  6EDA               	movwf	fsr2h,c
 45877  0029B4  50DF               	movf	indf2,w,c
 45878  0029B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45879  0029B8  51AB               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 45880  0029BA  0F28               	addlw	40
 45881  0029BC  ECEB  F05F         	call	_RADIO_RegisterWrite
 45882  0029C0  0100               	movlb	0	; () banked
 45883  0029C2  2BAB               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 45884  0029C4                     l813:
 45885                           
 45886                           ; BSR set to: 0
 45887                           
 45888                           ; BSR set to: 0
 45889  0029C4  0101               	movlb	1	; () banked
 45890  0029C6  514C               	movf	(_RadioConfiguration+23)& (0+255),w,b
 45891  0029C8  0100               	movlb	0	; () banked
 45892  0029CA  5DAB               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 45893  0029CC  A0D8               	btfss	status,0,c
 45894  0029CE  D7EA               	goto	l814
 45895                           
 45896                           ; BSR set to: 0
 45897                           ;radio_driver_SX1276.c: 733: }
 45898                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 45899                           
 45900                           ; BSR set to: 0
 45901  0029D0  0101               	movlb	1	; () banked
 45902  0029D2  514C               	movf	(_RadioConfiguration+23)& (0+255),w,b
 45903  0029D4  B4D8               	btfsc	status,2,c
 45904  0029D6  D008               	goto	l816
 45905                           
 45906                           ; BSR set to: 1
 45907                           ;radio_driver_SX1276.c: 737: {
 45908                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 45909  0029D8  054C               	decf	(_RadioConfiguration+23)& (0+255),w,b
 45910  0029DA  0910               	iorlw	16
 45911  0029DC  0100               	movlb	0	; () banked
 45912  0029DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45913  0029E0  0E27               	movlw	39
 45914  0029E2  ECEB  F05F         	call	_RADIO_RegisterWrite
 45915                           
 45916                           ;radio_driver_SX1276.c: 739: }
 45917  0029E6  D006               	goto	l817
 45918  0029E8                     l816:
 45919                           
 45920                           ;radio_driver_SX1276.c: 740: else
 45921                           ;radio_driver_SX1276.c: 741: {
 45922                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 45923  0029E8  0E00               	movlw	0
 45924  0029EA  0100               	movlb	0	; () banked
 45925  0029EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45926  0029EE  0E27               	movlw	39
 45927  0029F0  ECEB  F05F         	call	_RADIO_RegisterWrite
 45928  0029F4                     l817:
 45929                           
 45930                           ;radio_driver_SX1276.c: 743: }
 45931                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 45932  0029F4  0EFF               	movlw	255
 45933  0029F6  0100               	movlb	0	; () banked
 45934  0029F8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45935  0029FA  0E3E               	movlw	62
 45936  0029FC  ECEB  F05F         	call	_RADIO_RegisterWrite
 45937                           
 45938                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 45939  002A00  0EFF               	movlw	255
 45940  002A02  0100               	movlb	0	; () banked
 45941  002A04  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 45942  002A06  0E3F               	movlw	63
 45943  002A08  ECEB  F05F         	call	_RADIO_RegisterWrite
 45944  002A0C  0012               	return	
 45945  002A0E                     __end_of_RADIO_WriteConfiguration:
 45946                           	opt stack 0
 45947                           tosu	equ	0xFFF
 45948                           tosh	equ	0xFFE
 45949                           tosl	equ	0xFFD
 45950                           pclath	equ	0xFFA
 45951                           tblptru	equ	0xFF8
 45952                           tblptrh	equ	0xFF7
 45953                           tblptrl	equ	0xFF6
 45954                           tablat	equ	0xFF5
 45955                           prodh	equ	0xFF4
 45956                           prodl	equ	0xFF3
 45957                           intcon	equ	0xFF2
 45958                           intcon2	equ	0xFF1
 45959                           intcon3	equ	0xFF0
 45960                           indf0	equ	0xFEF
 45961                           postinc0	equ	0xFEE
 45962                           fsr0h	equ	0xFEA
 45963                           fsr0l	equ	0xFE9
 45964                           wreg	equ	0xFE8
 45965                           postinc1	equ	0xFE6
 45966                           postdec1	equ	0xFE5
 45967                           plusw1	equ	0xFE3
 45968                           fsr1h	equ	0xFE2
 45969                           fsr1l	equ	0xFE1
 45970                           indf2	equ	0xFDF
 45971                           postinc2	equ	0xFDE
 45972                           postdec2	equ	0xFDD
 45973                           plusw2	equ	0xFDB
 45974                           fsr2h	equ	0xFDA
 45975                           fsr2l	equ	0xFD9
 45976                           status	equ	0xFD8
 45977                           
 45978 ;; *************** function _RADIO_WritePower *****************
 45979 ;; Defined at:
 45980 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 45981 ;; Parameters:    Size  Location     Type
 45982 ;;  power           1    wreg     char 
 45983 ;; Auto vars:     Size  Location     Type
 45984 ;;  power           1    6[BANK0 ] char 
 45985 ;;  paDac           1    5[BANK0 ] unsigned char 
 45986 ;;  ocp             1    4[BANK0 ] unsigned char 
 45987 ;; Return value:  Size  Location     Type
 45988 ;;                  1    wreg      void 
 45989 ;; Registers used:
 45990 ;;		wreg, status,2, status,0, cstack
 45991 ;; Tracked objects:
 45992 ;;		On entry : 0/0
 45993 ;;		On exit  : 0/0
 45994 ;;		Unchanged: 0/0
 45995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46000 ;;Total ram usage:        3 bytes
 46001 ;; Hardware stack levels used:    1
 46002 ;; Hardware stack levels required when called:   10
 46003 ;; This function calls:
 46004 ;;		_RADIO_RegisterRead
 46005 ;;		_RADIO_RegisterWrite
 46006 ;; This function is called by:
 46007 ;;		_RADIO_WriteConfiguration
 46008 ;; This function uses a non-reentrant model
 46009 ;;
 46010                           
 46011                           	psect	text247
 46012  008C92                     __ptext247:
 46013                           	opt stack 0
 46014  008C92                     _RADIO_WritePower:
 46015                           	opt stack 17
 46016                           
 46017                           ;incstack = 0
 46018                           ;RADIO_WritePower@power stored from wreg
 46019  008C92  0100               	movlb	0	; () banked
 46020  008C94  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46021                           
 46022                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 46023                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 46024                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 46025  008C96  0101               	movlb	1	; () banked
 46026  008C98  5152               	movf	(_RadioConfiguration+29)& (0+255),w,b
 46027  008C9A  A4D8               	btfss	status,2,c
 46028  008C9C  D030               	goto	l755
 46029                           
 46030                           ; BSR set to: 1
 46031                           ;radio_driver_SX1276.c: 348: {
 46032                           ;radio_driver_SX1276.c: 350: if (power < -3)
 46033  008C9E  0100               	movlb	0	; () banked
 46034  008CA0  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46035  008CA2  0A80               	xorlw	128
 46036  008CA4  0F83               	addlw	131
 46037  008CA6  B0D8               	btfsc	status,0,c
 46038  008CA8  D002               	goto	l756
 46039                           
 46040                           ; BSR set to: 0
 46041                           ;radio_driver_SX1276.c: 351: {
 46042                           ;radio_driver_SX1276.c: 352: power = -3;
 46043  008CAA  0EFD               	movlw	253
 46044  008CAC  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46045  008CAE                     l756:
 46046                           
 46047                           ; BSR set to: 0
 46048                           ;radio_driver_SX1276.c: 353: }
 46049                           ;radio_driver_SX1276.c: 354: if (power > 15)
 46050                           
 46051                           ; BSR set to: 0
 46052  008CAE  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46053  008CB0  0A80               	xorlw	128
 46054  008CB2  0F70               	addlw	-144
 46055  008CB4  A0D8               	btfss	status,0,c
 46056  008CB6  D002               	goto	l757
 46057                           
 46058                           ; BSR set to: 0
 46059                           ;radio_driver_SX1276.c: 355: {
 46060                           ;radio_driver_SX1276.c: 356: power = 15;
 46061  008CB8  0E0F               	movlw	15
 46062  008CBA  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46063  008CBC                     l757:
 46064                           
 46065                           ; BSR set to: 0
 46066                           ;radio_driver_SX1276.c: 357: }
 46067                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 46068                           
 46069                           ; BSR set to: 0
 46070  008CBC  0E4D               	movlw	77
 46071  008CBE  EC92  F05E         	call	_RADIO_RegisterRead
 46072  008CC2  0100               	movlb	0	; () banked
 46073  008CC4  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 46074                           
 46075                           ; BSR set to: 0
 46076                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 46077  008CC6  0EF8               	movlw	248
 46078  008CC8  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 46079                           
 46080                           ; BSR set to: 0
 46081                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 46082  008CCA  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 46083                           
 46084                           ; BSR set to: 0
 46085                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 46086  008CCC  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 46087  008CD0  0E4D               	movlw	77
 46088  008CD2  ECEB  F05F         	call	_RADIO_RegisterWrite
 46089                           
 46090                           ;radio_driver_SX1276.c: 364: if (power < 0)
 46091  008CD6  0100               	movlb	0	; () banked
 46092  008CD8  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 46093  008CDA  D009               	goto	l758
 46094                           
 46095                           ; BSR set to: 0
 46096                           ;radio_driver_SX1276.c: 365: {
 46097                           ;radio_driver_SX1276.c: 369: power += 3;
 46098  008CDC  0E03               	movlw	3
 46099  008CDE  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 46100                           
 46101                           ; BSR set to: 0
 46102                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 46103  008CE0  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46104  008CE2  0920               	iorlw	32
 46105  008CE4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46106  008CE6  0E09               	movlw	9
 46107  008CE8  ECEB  F05F         	call	_RADIO_RegisterWrite
 46108                           
 46109                           ;radio_driver_SX1276.c: 371: }
 46110  008CEC  0012               	return	
 46111  008CEE                     l758:
 46112                           
 46113                           ;radio_driver_SX1276.c: 372: else
 46114                           ;radio_driver_SX1276.c: 373: {
 46115                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 46116  008CEE  0100               	movlb	0	; () banked
 46117  008CF0  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46118  008CF2  0970               	iorlw	112
 46119  008CF4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46120  008CF6  0E09               	movlw	9
 46121  008CF8  ECEB  F05F         	call	_RADIO_RegisterWrite
 46122                           
 46123                           ;radio_driver_SX1276.c: 378: }
 46124                           ;radio_driver_SX1276.c: 379: }
 46125  008CFC  0012               	return	
 46126  008CFE                     l755:
 46127                           
 46128                           ;radio_driver_SX1276.c: 380: else
 46129                           ;radio_driver_SX1276.c: 381: {
 46130                           ;radio_driver_SX1276.c: 385: if (power < 2)
 46131  008CFE  0100               	movlb	0	; () banked
 46132  008D00  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46133  008D02  0A80               	xorlw	128
 46134  008D04  0F7E               	addlw	-130
 46135  008D06  B0D8               	btfsc	status,0,c
 46136  008D08  D002               	goto	l761
 46137                           
 46138                           ; BSR set to: 0
 46139                           ;radio_driver_SX1276.c: 386: {
 46140                           ;radio_driver_SX1276.c: 387: power = 2;
 46141  008D0A  0E02               	movlw	2
 46142  008D0C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46143  008D0E                     l761:
 46144                           
 46145                           ; BSR set to: 0
 46146                           ;radio_driver_SX1276.c: 388: }
 46147                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 46148                           
 46149                           ; BSR set to: 0
 46150  008D0E  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46151  008D10  0A80               	xorlw	128
 46152  008D12  0F6C               	addlw	-148
 46153  008D14  A0D8               	btfss	status,0,c
 46154  008D16  D002               	goto	l762
 46155                           
 46156                           ; BSR set to: 0
 46157                           ;radio_driver_SX1276.c: 392: {
 46158                           ;radio_driver_SX1276.c: 393: power = 20;
 46159  008D18  0E14               	movlw	20
 46160  008D1A  D006               	goto	L25
 46161  008D1C                     l762:
 46162                           
 46163                           ; BSR set to: 0
 46164                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 46165                           
 46166                           ; BSR set to: 0
 46167  008D1C  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46168  008D1E  0A80               	xorlw	128
 46169  008D20  0F6E               	addlw	-146
 46170  008D22  A0D8               	btfss	status,0,c
 46171  008D24  D002               	goto	l764
 46172                           
 46173                           ; BSR set to: 0
 46174                           ;radio_driver_SX1276.c: 396: {
 46175                           ;radio_driver_SX1276.c: 397: power = 17;
 46176  008D26  0E11               	movlw	17
 46177  008D28                     L25:
 46178  008D28  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46179  008D2A                     l764:
 46180                           
 46181                           ; BSR set to: 0
 46182                           ;radio_driver_SX1276.c: 398: }
 46183                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 46184                           
 46185                           ; BSR set to: 0
 46186                           
 46187                           ; BSR set to: 0
 46188  008D2A  0E0B               	movlw	11
 46189  008D2C  EC92  F05E         	call	_RADIO_RegisterRead
 46190  008D30  0100               	movlb	0	; () banked
 46191  008D32  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 46192                           
 46193                           ; BSR set to: 0
 46194                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 46195  008D34  0E4D               	movlw	77
 46196  008D36  EC92  F05E         	call	_RADIO_RegisterRead
 46197  008D3A  0100               	movlb	0	; () banked
 46198  008D3C  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 46199                           
 46200                           ; BSR set to: 0
 46201                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 46202  008D3E  0EF8               	movlw	248
 46203  008D40  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 46204                           
 46205                           ; BSR set to: 0
 46206                           ;radio_driver_SX1276.c: 403: if (power == 20)
 46207  008D42  0E14               	movlw	20
 46208  008D44  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 46209  008D46  A4D8               	btfss	status,2,c
 46210  008D48  D006               	goto	l765
 46211                           
 46212                           ; BSR set to: 0
 46213                           ;radio_driver_SX1276.c: 404: {
 46214                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 46215  008D4A  0E07               	movlw	7
 46216  008D4C  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 46217                           
 46218                           ; BSR set to: 0
 46219                           ;radio_driver_SX1276.c: 406: power = 15;
 46220  008D4E  0E0F               	movlw	15
 46221  008D50  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 46222                           
 46223                           ; BSR set to: 0
 46224                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 46225  008D52  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 46226                           
 46227                           ;radio_driver_SX1276.c: 408: }
 46228  008D54  D004               	goto	l766
 46229  008D56                     l765:
 46230                           
 46231                           ; BSR set to: 0
 46232                           ;radio_driver_SX1276.c: 409: else
 46233                           ;radio_driver_SX1276.c: 410: {
 46234                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 46235                           
 46236                           ; BSR set to: 0
 46237  008D56  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 46238                           
 46239                           ; BSR set to: 0
 46240                           ;radio_driver_SX1276.c: 412: power -= 2;
 46241  008D58  0EFE               	movlw	254
 46242  008D5A  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 46243                           
 46244                           ; BSR set to: 0
 46245                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 46246  008D5C  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 46247  008D5E                     l766:
 46248                           
 46249                           ; BSR set to: 0
 46250                           ;radio_driver_SX1276.c: 414: }
 46251                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 46252                           
 46253                           ; BSR set to: 0
 46254  008D5E  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 46255  008D62  0E4D               	movlw	77
 46256  008D64  ECEB  F05F         	call	_RADIO_RegisterWrite
 46257                           
 46258                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 46259  008D68  0100               	movlb	0	; () banked
 46260  008D6A  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 46261  008D6C  0980               	iorlw	128
 46262  008D6E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46263  008D70  0E09               	movlw	9
 46264  008D72  ECEB  F05F         	call	_RADIO_RegisterWrite
 46265                           
 46266                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 46267  008D76  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 46268  008D7A  0E0B               	movlw	11
 46269  008D7C  ECEB  F05F         	call	_RADIO_RegisterWrite
 46270  008D80  0012               	return	
 46271  008D82                     __end_of_RADIO_WritePower:
 46272                           	opt stack 0
 46273                           tosu	equ	0xFFF
 46274                           tosh	equ	0xFFE
 46275                           tosl	equ	0xFFD
 46276                           pclath	equ	0xFFA
 46277                           tblptru	equ	0xFF8
 46278                           tblptrh	equ	0xFF7
 46279                           tblptrl	equ	0xFF6
 46280                           tablat	equ	0xFF5
 46281                           prodh	equ	0xFF4
 46282                           prodl	equ	0xFF3
 46283                           intcon	equ	0xFF2
 46284                           intcon2	equ	0xFF1
 46285                           intcon3	equ	0xFF0
 46286                           indf0	equ	0xFEF
 46287                           postinc0	equ	0xFEE
 46288                           fsr0h	equ	0xFEA
 46289                           fsr0l	equ	0xFE9
 46290                           wreg	equ	0xFE8
 46291                           postinc1	equ	0xFE6
 46292                           postdec1	equ	0xFE5
 46293                           plusw1	equ	0xFE3
 46294                           fsr1h	equ	0xFE2
 46295                           fsr1l	equ	0xFE1
 46296                           indf2	equ	0xFDF
 46297                           postinc2	equ	0xFDE
 46298                           postdec2	equ	0xFDD
 46299                           plusw2	equ	0xFDB
 46300                           fsr2h	equ	0xFDA
 46301                           fsr2l	equ	0xFD9
 46302                           status	equ	0xFD8
 46303                           
 46304 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 46305 ;; Defined at:
 46306 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 46307 ;; Parameters:    Size  Location     Type
 46308 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 46309 ;; Auto vars:     Size  Location     Type
 46310 ;;  num             4   17[BANK0 ] unsigned long 
 46311 ;; Return value:  Size  Location     Type
 46312 ;;                  1    wreg      void 
 46313 ;; Registers used:
 46314 ;;		wreg, status,2, status,0, cstack
 46315 ;; Tracked objects:
 46316 ;;		On entry : 0/0
 46317 ;;		On exit  : 0/0
 46318 ;;		Unchanged: 0/0
 46319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46321 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46323 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46324 ;;Total ram usage:        8 bytes
 46325 ;; Hardware stack levels used:    1
 46326 ;; Hardware stack levels required when called:   10
 46327 ;; This function calls:
 46328 ;;		_RADIO_RegisterWrite
 46329 ;;		___lldiv
 46330 ;; This function is called by:
 46331 ;;		_RADIO_WriteConfiguration
 46332 ;; This function uses a non-reentrant model
 46333 ;;
 46334                           
 46335                           	psect	text248
 46336  00A762                     __ptext248:
 46337                           	opt stack 0
 46338  00A762                     _RADIO_WriteFSKFrequencyDeviation:
 46339                           	opt stack 17
 46340                           
 46341                           ;radio_driver_SX1276.c: 296: uint32_t num;
 46342                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 46343                           
 46344                           ;incstack = 0
 46345  00A762  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 46346  00A766  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 46347  00A76A  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 46348  00A76E  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 46349                           
 46350                           ;radio_driver_SX1276.c: 304: num <<= (8);
 46351  00A772  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 46352  00A776  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 46353  00A77A  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 46354  00A77E  0100               	movlb	0	; () banked
 46355  00A780  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 46356                           
 46357                           ; BSR set to: 0
 46358                           ;radio_driver_SX1276.c: 305: num /= 15625;
 46359  00A782  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 46360  00A786  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 46361  00A78A  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 46362  00A78E  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 46363  00A792  0E09               	movlw	9
 46364  00A794  6F64               	movwf	___lldiv@divisor& (0+255),b
 46365  00A796  0E3D               	movlw	61
 46366  00A798  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 46367  00A79A  0E00               	movlw	0
 46368  00A79C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 46369  00A79E  0E00               	movlw	0
 46370  00A7A0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 46371  00A7A2  ECAE  F050         	call	___lldiv	;wreg free
 46372  00A7A6  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 46373  00A7AA  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 46374  00A7AE  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 46375  00A7B2  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 46376                           
 46377                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 46378  00A7B6  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 46379  00A7BA  0E04               	movlw	4
 46380  00A7BC  ECEB  F05F         	call	_RADIO_RegisterWrite
 46381                           
 46382                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 46383  00A7C0  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 46384  00A7C4  0E05               	movlw	5
 46385  00A7C6  ECEB  F05F         	call	_RADIO_RegisterWrite
 46386  00A7CA  0012               	return		;funcret
 46387  00A7CC                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 46388                           	opt stack 0
 46389                           tosu	equ	0xFFF
 46390                           tosh	equ	0xFFE
 46391                           tosl	equ	0xFFD
 46392                           pclath	equ	0xFFA
 46393                           tblptru	equ	0xFF8
 46394                           tblptrh	equ	0xFF7
 46395                           tblptrl	equ	0xFF6
 46396                           tablat	equ	0xFF5
 46397                           prodh	equ	0xFF4
 46398                           prodl	equ	0xFF3
 46399                           intcon	equ	0xFF2
 46400                           intcon2	equ	0xFF1
 46401                           intcon3	equ	0xFF0
 46402                           indf0	equ	0xFEF
 46403                           postinc0	equ	0xFEE
 46404                           fsr0h	equ	0xFEA
 46405                           fsr0l	equ	0xFE9
 46406                           wreg	equ	0xFE8
 46407                           postinc1	equ	0xFE6
 46408                           postdec1	equ	0xFE5
 46409                           plusw1	equ	0xFE3
 46410                           fsr1h	equ	0xFE2
 46411                           fsr1l	equ	0xFE1
 46412                           indf2	equ	0xFDF
 46413                           postinc2	equ	0xFDE
 46414                           postdec2	equ	0xFDD
 46415                           plusw2	equ	0xFDB
 46416                           fsr2h	equ	0xFDA
 46417                           fsr2l	equ	0xFD9
 46418                           status	equ	0xFD8
 46419                           
 46420 ;; *************** function _RADIO_WriteFSKBitRate *****************
 46421 ;; Defined at:
 46422 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 46423 ;; Parameters:    Size  Location     Type
 46424 ;;  bitRate         4   13[BANK0 ] unsigned long 
 46425 ;; Auto vars:     Size  Location     Type
 46426 ;;  num             4   17[BANK0 ] unsigned long 
 46427 ;; Return value:  Size  Location     Type
 46428 ;;                  1    wreg      void 
 46429 ;; Registers used:
 46430 ;;		wreg, status,2, status,0, cstack
 46431 ;; Tracked objects:
 46432 ;;		On entry : 0/0
 46433 ;;		On exit  : 0/0
 46434 ;;		Unchanged: 0/0
 46435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46437 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46439 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46440 ;;Total ram usage:        8 bytes
 46441 ;; Hardware stack levels used:    1
 46442 ;; Hardware stack levels required when called:   10
 46443 ;; This function calls:
 46444 ;;		_RADIO_RegisterWrite
 46445 ;;		___lldiv
 46446 ;; This function is called by:
 46447 ;;		_RADIO_WriteConfiguration
 46448 ;; This function uses a non-reentrant model
 46449 ;;
 46450                           
 46451                           	psect	text249
 46452  00A7CC                     __ptext249:
 46453                           	opt stack 0
 46454  00A7CC                     _RADIO_WriteFSKBitRate:
 46455                           	opt stack 17
 46456                           
 46457                           ;radio_driver_SX1276.c: 318: uint32_t num;
 46458                           ;radio_driver_SX1276.c: 320: num = 32000000;
 46459                           
 46460                           ;incstack = 0
 46461  00A7CC  0E00               	movlw	0
 46462  00A7CE  0100               	movlb	0	; () banked
 46463  00A7D0  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 46464  00A7D2  0E48               	movlw	72
 46465  00A7D4  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 46466  00A7D6  0EE8               	movlw	232
 46467  00A7D8  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 46468  00A7DA  0E01               	movlw	1
 46469  00A7DC  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 46470                           
 46471                           ; BSR set to: 0
 46472                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 46473  00A7DE  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 46474  00A7E2  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 46475  00A7E6  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 46476  00A7EA  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 46477  00A7EE  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 46478  00A7F2  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 46479  00A7F6  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 46480  00A7FA  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 46481  00A7FE  ECAE  F050         	call	___lldiv	;wreg free
 46482  00A802  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 46483  00A806  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 46484  00A80A  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 46485  00A80E  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 46486                           
 46487                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 46488  00A812  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 46489  00A816  0E02               	movlw	2
 46490  00A818  ECEB  F05F         	call	_RADIO_RegisterWrite
 46491                           
 46492                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 46493  00A81C  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 46494  00A820  0E03               	movlw	3
 46495  00A822  ECEB  F05F         	call	_RADIO_RegisterWrite
 46496                           
 46497                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 46498  00A826  0E00               	movlw	0
 46499  00A828  0100               	movlb	0	; () banked
 46500  00A82A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 46501  00A82C  0E5D               	movlw	93
 46502  00A82E  ECEB  F05F         	call	_RADIO_RegisterWrite
 46503  00A832  0012               	return		;funcret
 46504  00A834                     __end_of_RADIO_WriteFSKBitRate:
 46505                           	opt stack 0
 46506                           tosu	equ	0xFFF
 46507                           tosh	equ	0xFFE
 46508                           tosl	equ	0xFFD
 46509                           pclath	equ	0xFFA
 46510                           tblptru	equ	0xFF8
 46511                           tblptrh	equ	0xFF7
 46512                           tblptrl	equ	0xFF6
 46513                           tablat	equ	0xFF5
 46514                           prodh	equ	0xFF4
 46515                           prodl	equ	0xFF3
 46516                           intcon	equ	0xFF2
 46517                           intcon2	equ	0xFF1
 46518                           intcon3	equ	0xFF0
 46519                           indf0	equ	0xFEF
 46520                           postinc0	equ	0xFEE
 46521                           fsr0h	equ	0xFEA
 46522                           fsr0l	equ	0xFE9
 46523                           wreg	equ	0xFE8
 46524                           postinc1	equ	0xFE6
 46525                           postdec1	equ	0xFE5
 46526                           plusw1	equ	0xFE3
 46527                           fsr1h	equ	0xFE2
 46528                           fsr1l	equ	0xFE1
 46529                           indf2	equ	0xFDF
 46530                           postinc2	equ	0xFDE
 46531                           postdec2	equ	0xFDD
 46532                           plusw2	equ	0xFDB
 46533                           fsr2h	equ	0xFDA
 46534                           fsr2l	equ	0xFD9
 46535                           status	equ	0xFD8
 46536                           
 46537 ;; *************** function _PrepareJoinRequestFrame *****************
 46538 ;; Defined at:
 46539 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 46540 ;; Parameters:    Size  Location     Type
 46541 ;;		None
 46542 ;; Auto vars:     Size  Location     Type
 46543 ;;  mic             4  116[BANK0 ] unsigned long 
 46544 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 46545 ;;  iCtr            1  121[BANK0 ] unsigned char 
 46546 ;;  mhdr            1  120[BANK0 ] struct .
 46547 ;; Return value:  Size  Location     Type
 46548 ;;                  1    wreg      unsigned char 
 46549 ;; Registers used:
 46550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46551 ;; Tracked objects:
 46552 ;;		On entry : 0/0
 46553 ;;		On exit  : 0/0
 46554 ;;		Unchanged: 0/0
 46555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46557 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46558 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46559 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46560 ;;Total ram usage:       11 bytes
 46561 ;; Hardware stack levels used:    1
 46562 ;; Hardware stack levels required when called:   13
 46563 ;; This function calls:
 46564 ;;		_ComputeMic
 46565 ;;		_Random
 46566 ;;		_memcpy
 46567 ;;		_memset
 46568 ;; This function is called by:
 46569 ;;		_LORAWAN_Join
 46570 ;; This function uses a non-reentrant model
 46571 ;;
 46572                           
 46573                           	psect	text250
 46574  006CEC                     __ptext250:
 46575                           	opt stack 0
 46576  006CEC                     _PrepareJoinRequestFrame:
 46577                           	opt stack 16
 46578                           
 46579                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 46580                           
 46581                           ;incstack = 0
 46582  006CEC  0E00               	movlw	0
 46583  006CEE  0100               	movlb	0	; () banked
 46584  006CF0  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46585                           
 46586                           ; BSR set to: 0
 46587                           ;lorawan.c: 1809: Mhdr_t mhdr;
 46588                           ;lorawan.c: 1810: uint32_t mic;
 46589                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 46590  006CF2  0E20               	movlw	low _macBuffer
 46591  006CF4  6F60               	movwf	memset@p1& (0+255),b
 46592  006CF6  0E05               	movlw	high _macBuffer
 46593  006CF8  6F61               	movwf	(memset@p1+1)& (0+255),b
 46594  006CFA  0E00               	movlw	0
 46595  006CFC  6F63               	movwf	(memset@c+1)& (0+255),b
 46596  006CFE  0E00               	movlw	0
 46597  006D00  6F62               	movwf	memset@c& (0+255),b
 46598  006D02  0E01               	movlw	1
 46599  006D04  6F65               	movwf	(memset@n+1)& (0+255),b
 46600  006D06  0E0F               	movlw	15
 46601  006D08  6F64               	movwf	memset@n& (0+255),b
 46602  006D0A  EC1F  F05D         	call	_memset	;wreg free
 46603                           
 46604                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 46605  006D0E  0100               	movlb	0	; () banked
 46606  006D10  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 46607  006D12  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 46608  006D14  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 46609                           
 46610                           ; BSR set to: 0
 46611                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 46612  006D16  0EFC               	movlw	-4
 46613  006D18  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 46614                           
 46615                           ; BSR set to: 0
 46616                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 46617  006D1A  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 46618  006D1C  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 46619  006D1E  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 46620                           
 46621                           ; BSR set to: 0
 46622                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 46623  006D20  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46624  006D22  0D01               	mullw	1
 46625  006D24  0E20               	movlw	low _macBuffer
 46626  006D26  24F3               	addwf	prodl,w,c
 46627  006D28  6ED9               	movwf	fsr2l,c
 46628  006D2A  0E05               	movlw	high _macBuffer
 46629  006D2C  20F4               	addwfc	prodh,w,c
 46630  006D2E  6EDA               	movwf	fsr2h,c
 46631  006D30  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 46632                           
 46633                           ; BSR set to: 0
 46634  006D34  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 46635                           
 46636                           ; BSR set to: 0
 46637                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 46638  006D36  0E00               	movlw	0
 46639  006D38  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 46640  006D3A                     l21248:
 46641                           
 46642                           ; BSR set to: 0
 46643  006D3A  0E07               	movlw	7
 46644  006D3C  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 46645  006D3E  D001               	goto	l2366
 46646  006D40  D022               	goto	u25320
 46647  006D42                     l2366:
 46648                           
 46649                           ; BSR set to: 0
 46650                           ;lorawan.c: 1821: {
 46651                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 46652                           
 46653                           ; BSR set to: 0
 46654  006D42  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46655  006D44  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 46656  006D46  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 46657  006D48  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 46658  006D4A  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46659  006D4C  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 46660  006D4E  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46661  006D50  0E07               	movlw	7
 46662  006D52  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 46663  006D54  0E00               	movlw	0
 46664  006D56  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46665  006D58  0E56               	movlw	low (_loRa+82)
 46666  006D5A  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 46667  006D5C  6ED9               	movwf	fsr2l,c
 46668  006D5E  0E02               	movlw	high (_loRa+82)
 46669  006D60  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 46670  006D62  6EDA               	movwf	fsr2h,c
 46671  006D64  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46672  006D66  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 46673  006D6A  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 46674  006D6C  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 46675  006D6E  0E00               	movlw	0
 46676  006D70  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 46677  006D72  0E20               	movlw	low _macBuffer
 46678  006D74  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 46679  006D76  6EE9               	movwf	fsr0l,c
 46680  006D78  0E05               	movlw	high _macBuffer
 46681  006D7A  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 46682  006D7C  6EEA               	movwf	fsr0h,c
 46683  006D7E  CFDF FFEF          	movff	indf2,indf0
 46684                           
 46685                           ; BSR set to: 0
 46686  006D82  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 46687  006D84  D7DA               	goto	l21248
 46688  006D86                     u25320:
 46689                           
 46690                           ; BSR set to: 0
 46691                           ;lorawan.c: 1823: }
 46692                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 46693                           
 46694                           ; BSR set to: 0
 46695  006D86  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46696  006D88  0F08               	addlw	8
 46697  006D8A  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46698                           
 46699                           ; BSR set to: 0
 46700                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 46701  006D8C  0E00               	movlw	0
 46702  006D8E  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 46703  006D90                     l21262:
 46704                           
 46705                           ; BSR set to: 0
 46706  006D90  0E07               	movlw	7
 46707  006D92  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 46708  006D94  D001               	goto	l2368
 46709  006D96  D022               	goto	u25340
 46710  006D98                     l2368:
 46711                           
 46712                           ; BSR set to: 0
 46713                           ;lorawan.c: 1828: {
 46714                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 46715                           
 46716                           ; BSR set to: 0
 46717  006D98  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46718  006D9A  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 46719  006D9C  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 46720  006D9E  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 46721  006DA0  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46722  006DA2  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 46723  006DA4  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46724  006DA6  0E07               	movlw	7
 46725  006DA8  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 46726  006DAA  0E00               	movlw	0
 46727  006DAC  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 46728  006DAE  0E5E               	movlw	low (_loRa+90)
 46729  006DB0  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 46730  006DB2  6ED9               	movwf	fsr2l,c
 46731  006DB4  0E02               	movlw	high (_loRa+90)
 46732  006DB6  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 46733  006DB8  6EDA               	movwf	fsr2h,c
 46734  006DBA  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 46735  006DBC  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 46736  006DC0  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 46737  006DC2  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 46738  006DC4  0E00               	movlw	0
 46739  006DC6  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 46740  006DC8  0E20               	movlw	low _macBuffer
 46741  006DCA  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 46742  006DCC  6EE9               	movwf	fsr0l,c
 46743  006DCE  0E05               	movlw	high _macBuffer
 46744  006DD0  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 46745  006DD2  6EEA               	movwf	fsr0h,c
 46746  006DD4  CFDF FFEF          	movff	indf2,indf0
 46747                           
 46748                           ; BSR set to: 0
 46749  006DD8  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 46750  006DDA  D7DA               	goto	l21262
 46751  006DDC                     u25340:
 46752                           
 46753                           ; BSR set to: 0
 46754                           ;lorawan.c: 1830: }
 46755                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 46756                           
 46757                           ; BSR set to: 0
 46758  006DDC  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46759  006DDE  0F08               	addlw	8
 46760  006DE0  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46761                           
 46762                           ; BSR set to: 0
 46763                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 46764  006DE2  0EFF               	movlw	255
 46765  006DE4  6FAE               	movwf	(Random@max+1)& (0+255),b
 46766  006DE6  69AD               	setf	Random@max& (0+255),b
 46767  006DE8  EC49  F05F         	call	_Random	;wreg free
 46768  006DEC  C0AD  F2D6         	movff	?_Random,_loRa+210
 46769  006DF0  C0AE  F2D7         	movff	?_Random+1,_loRa+211
 46770                           
 46771                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 46772  006DF4  0100               	movlb	0	; () banked
 46773  006DF6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46774  006DF8  0D01               	mullw	1
 46775  006DFA  0E20               	movlw	low _macBuffer
 46776  006DFC  24F3               	addwf	prodl,w,c
 46777  006DFE  6F60               	movwf	memcpy@d1& (0+255),b
 46778  006E00  0E05               	movlw	high _macBuffer
 46779  006E02  20F4               	addwfc	prodh,w,c
 46780  006E04  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 46781  006E06  0ED6               	movlw	low (_loRa+210)
 46782  006E08  6F62               	movwf	memcpy@s1& (0+255),b
 46783  006E0A  0E02               	movlw	high (_loRa+210)
 46784  006E0C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 46785  006E0E  0E00               	movlw	0
 46786  006E10  6F65               	movwf	(memcpy@n+1)& (0+255),b
 46787  006E12  0E02               	movlw	2
 46788  006E14  6F64               	movwf	memcpy@n& (0+255),b
 46789  006E16  ECA9  F055         	call	_memcpy	;wreg free
 46790                           
 46791                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 46792  006E1A  0100               	movlb	0	; () banked
 46793  006E1C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46794  006E1E  0F02               	addlw	2
 46795  006E20  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46796                           
 46797                           ; BSR set to: 0
 46798                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 46799  006E22  0E46               	movlw	low (_loRa+66)
 46800  006E24  6FC7               	movwf	ComputeMic@key& (0+255),b
 46801  006E26  0E02               	movlw	high (_loRa+66)
 46802  006E28  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
 46803  006E2A  0E20               	movlw	low _macBuffer
 46804  006E2C  6FC9               	movwf	ComputeMic@buffer& (0+255),b
 46805  006E2E  0E05               	movlw	high _macBuffer
 46806  006E30  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
 46807  006E32  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 46808  006E36  ECE6  F054         	call	_ComputeMic	;wreg free
 46809  006E3A  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 46810  006E3E  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 46811  006E42  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 46812  006E46  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 46813                           
 46814                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 46815  006E4A  0100               	movlb	0	; () banked
 46816  006E4C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46817  006E4E  0D01               	mullw	1
 46818  006E50  0E20               	movlw	low _macBuffer
 46819  006E52  24F3               	addwf	prodl,w,c
 46820  006E54  6F60               	movwf	memcpy@d1& (0+255),b
 46821  006E56  0E05               	movlw	high _macBuffer
 46822  006E58  20F4               	addwfc	prodh,w,c
 46823  006E5A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 46824  006E5C  0ED4               	movlw	low PrepareJoinRequestFrame@mic
 46825  006E5E  6F62               	movwf	memcpy@s1& (0+255),b
 46826  006E60  0E00               	movlw	high PrepareJoinRequestFrame@mic
 46827  006E62  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 46828  006E64  0E00               	movlw	0
 46829  006E66  6F65               	movwf	(memcpy@n+1)& (0+255),b
 46830  006E68  0E04               	movlw	4
 46831  006E6A  6F64               	movwf	memcpy@n& (0+255),b
 46832  006E6C  ECA9  F055         	call	_memcpy	;wreg free
 46833                           
 46834                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 46835  006E70  0100               	movlb	0	; () banked
 46836  006E72  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46837  006E74  0F04               	addlw	4
 46838  006E76  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 46839                           
 46840                           ; BSR set to: 0
 46841                           ;lorawan.c: 1842: return bufferIndex;
 46842  006E78  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 46843  006E7A  0012               	return	
 46844  006E7C                     __end_of_PrepareJoinRequestFrame:
 46845                           	opt stack 0
 46846                           tosu	equ	0xFFF
 46847                           tosh	equ	0xFFE
 46848                           tosl	equ	0xFFD
 46849                           pclath	equ	0xFFA
 46850                           tblptru	equ	0xFF8
 46851                           tblptrh	equ	0xFF7
 46852                           tblptrl	equ	0xFF6
 46853                           tablat	equ	0xFF5
 46854                           prodh	equ	0xFF4
 46855                           prodl	equ	0xFF3
 46856                           intcon	equ	0xFF2
 46857                           intcon2	equ	0xFF1
 46858                           intcon3	equ	0xFF0
 46859                           indf0	equ	0xFEF
 46860                           postinc0	equ	0xFEE
 46861                           fsr0h	equ	0xFEA
 46862                           fsr0l	equ	0xFE9
 46863                           wreg	equ	0xFE8
 46864                           postinc1	equ	0xFE6
 46865                           postdec1	equ	0xFE5
 46866                           plusw1	equ	0xFE3
 46867                           fsr1h	equ	0xFE2
 46868                           fsr1l	equ	0xFE1
 46869                           indf2	equ	0xFDF
 46870                           postinc2	equ	0xFDE
 46871                           postdec2	equ	0xFDD
 46872                           plusw2	equ	0xFDB
 46873                           fsr2h	equ	0xFDA
 46874                           fsr2l	equ	0xFD9
 46875                           status	equ	0xFD8
 46876                           
 46877 ;; *************** function _Random *****************
 46878 ;; Defined at:
 46879 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 46880 ;; Parameters:    Size  Location     Type
 46881 ;;  max             2   77[BANK0 ] unsigned int 
 46882 ;; Auto vars:     Size  Location     Type
 46883 ;;		None
 46884 ;; Return value:  Size  Location     Type
 46885 ;;                  2   77[BANK0 ] unsigned int 
 46886 ;; Registers used:
 46887 ;;		wreg, status,2, status,0, cstack
 46888 ;; Tracked objects:
 46889 ;;		On entry : 0/0
 46890 ;;		On exit  : 0/0
 46891 ;;		Unchanged: 0/0
 46892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46897 ;;Total ram usage:        2 bytes
 46898 ;; Hardware stack levels used:    1
 46899 ;; Hardware stack levels required when called:    9
 46900 ;; This function calls:
 46901 ;;		___lwmod
 46902 ;;		_rand
 46903 ;; This function is called by:
 46904 ;;		_SearchAvailableChannel
 46905 ;;		_PrepareJoinRequestFrame
 46906 ;; This function uses a non-reentrant model
 46907 ;;
 46908                           
 46909                           	psect	text251
 46910  00BE92                     __ptext251:
 46911                           	opt stack 0
 46912  00BE92                     _Random:
 46913                           	opt stack 18
 46914                           
 46915                           ;lorawan.c: 1118: return (rand () % max);
 46916                           
 46917                           ; BSR set to: 0
 46918                           ;incstack = 0
 46919  00BE92  EC66  F056         	call	_rand	;wreg free
 46920  00BE96  C0A6  F0A8         	movff	?_rand,___lwmod@dividend
 46921  00BE9A  C0A7  F0A9         	movff	?_rand+1,___lwmod@dividend+1
 46922  00BE9E  C0AD  F0AA         	movff	Random@max,___lwmod@divisor
 46923  00BEA2  C0AE  F0AB         	movff	Random@max+1,___lwmod@divisor+1
 46924  00BEA6  EC91  F05A         	call	___lwmod	;wreg free
 46925  00BEAA  C0A8  F0AD         	movff	?___lwmod,?_Random
 46926  00BEAE  C0A9  F0AE         	movff	?___lwmod+1,?_Random+1
 46927  00BEB2  0012               	return	
 46928  00BEB4                     __end_of_Random:
 46929                           	opt stack 0
 46930                           tosu	equ	0xFFF
 46931                           tosh	equ	0xFFE
 46932                           tosl	equ	0xFFD
 46933                           pclath	equ	0xFFA
 46934                           tblptru	equ	0xFF8
 46935                           tblptrh	equ	0xFF7
 46936                           tblptrl	equ	0xFF6
 46937                           tablat	equ	0xFF5
 46938                           prodh	equ	0xFF4
 46939                           prodl	equ	0xFF3
 46940                           intcon	equ	0xFF2
 46941                           intcon2	equ	0xFF1
 46942                           intcon3	equ	0xFF0
 46943                           indf0	equ	0xFEF
 46944                           postinc0	equ	0xFEE
 46945                           fsr0h	equ	0xFEA
 46946                           fsr0l	equ	0xFE9
 46947                           wreg	equ	0xFE8
 46948                           postinc1	equ	0xFE6
 46949                           postdec1	equ	0xFE5
 46950                           plusw1	equ	0xFE3
 46951                           fsr1h	equ	0xFE2
 46952                           fsr1l	equ	0xFE1
 46953                           indf2	equ	0xFDF
 46954                           postinc2	equ	0xFDE
 46955                           postdec2	equ	0xFDD
 46956                           plusw2	equ	0xFDB
 46957                           fsr2h	equ	0xFDA
 46958                           fsr2l	equ	0xFD9
 46959                           status	equ	0xFD8
 46960                           
 46961 ;; *************** function _rand *****************
 46962 ;; Defined at:
 46963 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 46964 ;; Parameters:    Size  Location     Type
 46965 ;;		None
 46966 ;; Auto vars:     Size  Location     Type
 46967 ;;		None
 46968 ;; Return value:  Size  Location     Type
 46969 ;;                  2   70[BANK0 ] int 
 46970 ;; Registers used:
 46971 ;;		wreg, status,2, status,0, cstack
 46972 ;; Tracked objects:
 46973 ;;		On entry : 0/0
 46974 ;;		On exit  : 0/0
 46975 ;;		Unchanged: 0/0
 46976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46981 ;;Total ram usage:        2 bytes
 46982 ;; Hardware stack levels used:    1
 46983 ;; Hardware stack levels required when called:    8
 46984 ;; This function calls:
 46985 ;;		___lmul
 46986 ;; This function is called by:
 46987 ;;		_Random
 46988 ;; This function uses a non-reentrant model
 46989 ;;
 46990                           
 46991                           	psect	text252
 46992  00ACCC                     __ptext252:
 46993                           	opt stack 0
 46994  00ACCC                     _rand:
 46995                           	opt stack 18
 46996                           
 46997                           ;incstack = 0
 46998  00ACCC  C1F9  F09A         	movff	_randx,___lmul@multiplier
 46999  00ACD0  C1FA  F09B         	movff	_randx+1,___lmul@multiplier+1
 47000  00ACD4  C1FB  F09C         	movff	_randx+2,___lmul@multiplier+2
 47001  00ACD8  C1FC  F09D         	movff	_randx+3,___lmul@multiplier+3
 47002  00ACDC  0E6D               	movlw	109
 47003  00ACDE  0100               	movlb	0	; () banked
 47004  00ACE0  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 47005  00ACE2  0E4E               	movlw	78
 47006  00ACE4  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 47007  00ACE6  0EC6               	movlw	198
 47008  00ACE8  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 47009  00ACEA  0E41               	movlw	65
 47010  00ACEC  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 47011  00ACEE  EC1B  F057         	call	___lmul	;wreg free
 47012  00ACF2  C09A  F1F9         	movff	?___lmul,_randx
 47013  00ACF6  C09B  F1FA         	movff	?___lmul+1,_randx+1
 47014  00ACFA  C09C  F1FB         	movff	?___lmul+2,_randx+2
 47015  00ACFE  C09D  F1FC         	movff	?___lmul+3,_randx+3
 47016  00AD02  0E39               	movlw	57
 47017  00AD04  0101               	movlb	1	; () banked
 47018  00AD06  27F9               	addwf	_randx& (0+255),f,b
 47019  00AD08  0E30               	movlw	48
 47020  00AD0A  23FA               	addwfc	(_randx+1)& (0+255),f,b
 47021  00AD0C  0E00               	movlw	0
 47022  00AD0E  23FB               	addwfc	(_randx+2)& (0+255),f,b
 47023  00AD10  0E00               	movlw	0
 47024  00AD12  23FC               	addwfc	(_randx+3)& (0+255),f,b
 47025                           
 47026                           ; BSR set to: 1
 47027  00AD14  0EFF               	movlw	255
 47028  00AD16  15FB               	andwf	(_randx+2)& (0+255),w,b
 47029  00AD18  0100               	movlb	0	; () banked
 47030  00AD1A  6FA6               	movwf	?_rand& (0+255),b
 47031  00AD1C  0E7F               	movlw	127
 47032  00AD1E  0101               	movlb	1	; () banked
 47033  00AD20  15FC               	andwf	(_randx+3)& (0+255),w,b
 47034  00AD22  0100               	movlb	0	; () banked
 47035  00AD24  6FA7               	movwf	(?_rand+1)& (0+255),b
 47036  00AD26  0012               	return	
 47037  00AD28                     __end_of_rand:
 47038                           	opt stack 0
 47039                           tosu	equ	0xFFF
 47040                           tosh	equ	0xFFE
 47041                           tosl	equ	0xFFD
 47042                           pclath	equ	0xFFA
 47043                           tblptru	equ	0xFF8
 47044                           tblptrh	equ	0xFF7
 47045                           tblptrl	equ	0xFF6
 47046                           tablat	equ	0xFF5
 47047                           prodh	equ	0xFF4
 47048                           prodl	equ	0xFF3
 47049                           intcon	equ	0xFF2
 47050                           intcon2	equ	0xFF1
 47051                           intcon3	equ	0xFF0
 47052                           indf0	equ	0xFEF
 47053                           postinc0	equ	0xFEE
 47054                           fsr0h	equ	0xFEA
 47055                           fsr0l	equ	0xFE9
 47056                           wreg	equ	0xFE8
 47057                           postinc1	equ	0xFE6
 47058                           postdec1	equ	0xFE5
 47059                           plusw1	equ	0xFE3
 47060                           fsr1h	equ	0xFE2
 47061                           fsr1l	equ	0xFE1
 47062                           indf2	equ	0xFDF
 47063                           postinc2	equ	0xFDE
 47064                           postdec2	equ	0xFDD
 47065                           plusw2	equ	0xFDB
 47066                           fsr2h	equ	0xFDA
 47067                           fsr2l	equ	0xFD9
 47068                           status	equ	0xFD8
 47069                           
 47070 ;; *************** function ___lwmod *****************
 47071 ;; Defined at:
 47072 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 47073 ;; Parameters:    Size  Location     Type
 47074 ;;  dividend        2   72[BANK0 ] unsigned int 
 47075 ;;  divisor         2   74[BANK0 ] unsigned int 
 47076 ;; Auto vars:     Size  Location     Type
 47077 ;;  counter         1   76[BANK0 ] unsigned char 
 47078 ;; Return value:  Size  Location     Type
 47079 ;;                  2   72[BANK0 ] unsigned int 
 47080 ;; Registers used:
 47081 ;;		wreg, status,2, status,0
 47082 ;; Tracked objects:
 47083 ;;		On entry : 0/0
 47084 ;;		On exit  : 0/0
 47085 ;;		Unchanged: 0/0
 47086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47090 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47091 ;;Total ram usage:        5 bytes
 47092 ;; Hardware stack levels used:    1
 47093 ;; Hardware stack levels required when called:    7
 47094 ;; This function calls:
 47095 ;;		Nothing
 47096 ;; This function is called by:
 47097 ;;		_Random
 47098 ;; This function uses a non-reentrant model
 47099 ;;
 47100                           
 47101                           	psect	text253
 47102  00B522                     __ptext253:
 47103                           	opt stack 0
 47104  00B522                     ___lwmod:
 47105                           	opt stack 19
 47106                           
 47107                           ; BSR set to: 0
 47108                           ;incstack = 0
 47109  00B522  0100               	movlb	0	; () banked
 47110  00B524  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47111  00B526  11AB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 47112  00B528  B4D8               	btfsc	status,2,c
 47113  00B52A  D018               	goto	l4003
 47114                           
 47115                           ; BSR set to: 0
 47116  00B52C  0E01               	movlw	1
 47117  00B52E  6FAC               	movwf	___lwmod@counter& (0+255),b
 47118  00B530  D004               	goto	l3998
 47119  00B532                     
 47120                           ; BSR set to: 0
 47121                           
 47122                           ; BSR set to: 0
 47123  00B532  90D8               	bcf	status,0,c
 47124  00B534  37AA               	rlcf	___lwmod@divisor& (0+255),f,b
 47125  00B536  37AB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 47126  00B538  2BAC               	incf	___lwmod@counter& (0+255),f,b
 47127  00B53A                     l3998:
 47128                           
 47129                           ; BSR set to: 0
 47130                           
 47131                           ; BSR set to: 0
 47132  00B53A  AFAB               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 47133  00B53C  D7FA               	goto	l3999
 47134  00B53E                     u19680:
 47135                           
 47136                           ; BSR set to: 0
 47137                           
 47138                           ; BSR set to: 0
 47139                           
 47140                           ; BSR set to: 0
 47141  00B53E  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47142  00B540  5DA8               	subwf	___lwmod@dividend& (0+255),w,b
 47143  00B542  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 47144  00B544  59A9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 47145  00B546  A0D8               	btfss	status,0,c
 47146  00B548  D004               	goto	l4002
 47147                           
 47148                           ; BSR set to: 0
 47149  00B54A  51AA               	movf	___lwmod@divisor& (0+255),w,b
 47150  00B54C  5FA8               	subwf	___lwmod@dividend& (0+255),f,b
 47151  00B54E  51AB               	movf	(___lwmod@divisor+1)& (0+255),w,b
 47152  00B550  5BA9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 47153  00B552                     l4002:
 47154                           
 47155                           ; BSR set to: 0
 47156                           
 47157                           ; BSR set to: 0
 47158  00B552  90D8               	bcf	status,0,c
 47159  00B554  33AB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 47160  00B556  33AA               	rrcf	___lwmod@divisor& (0+255),f,b
 47161                           
 47162                           ; BSR set to: 0
 47163  00B558  2FAC               	decfsz	___lwmod@counter& (0+255),f,b
 47164  00B55A  D7F1               	goto	u19680
 47165  00B55C                     l4003:
 47166                           
 47167                           ; BSR set to: 0
 47168                           
 47169                           ; BSR set to: 0
 47170  00B55C  C0A8  F0A8         	movff	___lwmod@dividend,?___lwmod
 47171  00B560  C0A9  F0A9         	movff	___lwmod@dividend+1,?___lwmod+1
 47172                           
 47173                           ; BSR set to: 0
 47174  00B564  0012               	return		;funcret
 47175  00B566                     __end_of___lwmod:
 47176                           	opt stack 0
 47177                           tosu	equ	0xFFF
 47178                           tosh	equ	0xFFE
 47179                           tosl	equ	0xFFD
 47180                           pclath	equ	0xFFA
 47181                           tblptru	equ	0xFF8
 47182                           tblptrh	equ	0xFF7
 47183                           tblptrl	equ	0xFF6
 47184                           tablat	equ	0xFF5
 47185                           prodh	equ	0xFF4
 47186                           prodl	equ	0xFF3
 47187                           intcon	equ	0xFF2
 47188                           intcon2	equ	0xFF1
 47189                           intcon3	equ	0xFF0
 47190                           indf0	equ	0xFEF
 47191                           postinc0	equ	0xFEE
 47192                           fsr0h	equ	0xFEA
 47193                           fsr0l	equ	0xFE9
 47194                           wreg	equ	0xFE8
 47195                           postinc1	equ	0xFE6
 47196                           postdec1	equ	0xFE5
 47197                           plusw1	equ	0xFE3
 47198                           fsr1h	equ	0xFE2
 47199                           fsr1l	equ	0xFE1
 47200                           indf2	equ	0xFDF
 47201                           postinc2	equ	0xFDE
 47202                           postdec2	equ	0xFDD
 47203                           plusw2	equ	0xFDB
 47204                           fsr2h	equ	0xFDA
 47205                           fsr2l	equ	0xFD9
 47206                           status	equ	0xFD8
 47207                           
 47208 ;; *************** function _ComputeMic *****************
 47209 ;; Defined at:
 47210 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 47211 ;; Parameters:    Size  Location     Type
 47212 ;;  key             2  103[BANK0 ] PTR unsigned char 
 47213 ;;		 -> loRa.activationParameters(105), loRa(245), 
 47214 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 47215 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47216 ;;  bufferLength    1  107[BANK0 ] unsigned char 
 47217 ;; Auto vars:     Size  Location     Type
 47218 ;;  mic             4  108[BANK0 ] unsigned long 
 47219 ;; Return value:  Size  Location     Type
 47220 ;;                  4  103[BANK0 ] unsigned long 
 47221 ;; Registers used:
 47222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47223 ;; Tracked objects:
 47224 ;;		On entry : 0/0
 47225 ;;		On exit  : 0/0
 47226 ;;		Unchanged: 0/0
 47227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47228 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47229 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47231 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47232 ;;Total ram usage:        9 bytes
 47233 ;; Hardware stack levels used:    1
 47234 ;; Hardware stack levels required when called:   12
 47235 ;; This function calls:
 47236 ;;		_AESCmac
 47237 ;;		_memcpy
 47238 ;; This function is called by:
 47239 ;;		_LORAWAN_RxDone
 47240 ;;		_PrepareJoinRequestFrame
 47241 ;; This function uses a non-reentrant model
 47242 ;;
 47243                           
 47244                           	psect	text254
 47245  00A9CC                     __ptext254:
 47246                           	opt stack 0
 47247  00A9CC                     _ComputeMic:
 47248                           	opt stack 14
 47249                           
 47250                           ;lorawan.c: 2196: uint32_t mic = 0;
 47251                           
 47252                           ; BSR set to: 0
 47253                           ;incstack = 0
 47254  00A9CC  0E00               	movlw	0
 47255  00A9CE  0100               	movlb	0	; () banked
 47256  00A9D0  6FCC               	movwf	ComputeMic@mic& (0+255),b
 47257  00A9D2  0E00               	movlw	0
 47258  00A9D4  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
 47259  00A9D6  0E00               	movlw	0
 47260  00A9D8  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
 47261  00A9DA  0E00               	movlw	0
 47262  00A9DC  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
 47263                           
 47264                           ; BSR set to: 0
 47265                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 47266  00A9DE  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
 47267  00A9E2  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
 47268  00A9E6  0EC8               	movlw	low _aesBuffer
 47269  00A9E8  6FBB               	movwf	AESCmac@output& (0+255),b
 47270  00A9EA  0E03               	movlw	high _aesBuffer
 47271  00A9EC  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
 47272  00A9EE  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
 47273  00A9F2  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
 47274  00A9F6  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
 47275  00A9FA  EC80  F01D         	call	_AESCmac	;wreg free
 47276                           
 47277                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 47278  00A9FE  0ECC               	movlw	low ComputeMic@mic
 47279  00AA00  0100               	movlb	0	; () banked
 47280  00AA02  6F60               	movwf	memcpy@d1& (0+255),b
 47281  00AA04  0E00               	movlw	high ComputeMic@mic
 47282  00AA06  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 47283  00AA08  0EC8               	movlw	low _aesBuffer
 47284  00AA0A  6F62               	movwf	memcpy@s1& (0+255),b
 47285  00AA0C  0E03               	movlw	high _aesBuffer
 47286  00AA0E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 47287  00AA10  0E00               	movlw	0
 47288  00AA12  6F65               	movwf	(memcpy@n+1)& (0+255),b
 47289  00AA14  0E04               	movlw	4
 47290  00AA16  6F64               	movwf	memcpy@n& (0+255),b
 47291  00AA18  ECA9  F055         	call	_memcpy	;wreg free
 47292                           
 47293                           ;lorawan.c: 2202: return mic;
 47294  00AA1C  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
 47295  00AA20  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
 47296  00AA24  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
 47297  00AA28  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
 47298  00AA2C  0012               	return	
 47299  00AA2E                     __end_of_ComputeMic:
 47300                           	opt stack 0
 47301                           tosu	equ	0xFFF
 47302                           tosh	equ	0xFFE
 47303                           tosl	equ	0xFFD
 47304                           pclath	equ	0xFFA
 47305                           tblptru	equ	0xFF8
 47306                           tblptrh	equ	0xFF7
 47307                           tblptrl	equ	0xFF6
 47308                           tablat	equ	0xFF5
 47309                           prodh	equ	0xFF4
 47310                           prodl	equ	0xFF3
 47311                           intcon	equ	0xFF2
 47312                           intcon2	equ	0xFF1
 47313                           intcon3	equ	0xFF0
 47314                           indf0	equ	0xFEF
 47315                           postinc0	equ	0xFEE
 47316                           fsr0h	equ	0xFEA
 47317                           fsr0l	equ	0xFE9
 47318                           wreg	equ	0xFE8
 47319                           postinc1	equ	0xFE6
 47320                           postdec1	equ	0xFE5
 47321                           plusw1	equ	0xFE3
 47322                           fsr1h	equ	0xFE2
 47323                           fsr1l	equ	0xFE1
 47324                           indf2	equ	0xFDF
 47325                           postinc2	equ	0xFDE
 47326                           postdec2	equ	0xFDD
 47327                           plusw2	equ	0xFDB
 47328                           fsr2h	equ	0xFDA
 47329                           fsr2l	equ	0xFD9
 47330                           status	equ	0xFD8
 47331                           
 47332 ;; *************** function _AESCmac *****************
 47333 ;; Defined at:
 47334 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 47335 ;; Parameters:    Size  Location     Type
 47336 ;;  key             2   89[BANK0 ] PTR unsigned char 
 47337 ;;		 -> loRa.activationParameters(105), loRa(245), 
 47338 ;;  output          2   91[BANK0 ] PTR unsigned char 
 47339 ;;		 -> aesBuffer(16), 
 47340 ;;  input           2   93[BANK0 ] PTR unsigned char 
 47341 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47342 ;;  size            1   95[BANK0 ] unsigned char 
 47343 ;; Auto vars:     Size  Location     Type
 47344 ;;  x              16   80[BANK1 ] unsigned char [16]
 47345 ;;  y              16   64[BANK1 ] unsigned char [16]
 47346 ;;  padded         16   48[BANK1 ] unsigned char [16]
 47347 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 47348 ;;  k1             16   16[BANK1 ] unsigned char [16]
 47349 ;;  k2             16    0[BANK1 ] unsigned char [16]
 47350 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 47351 ;;		 -> sp__ADC_GetConversion(2), LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 47352 ;;		 -> NULL(0), 
 47353 ;;  i               1  101[BANK1 ] unsigned char 
 47354 ;;  j               1  100[BANK1 ] unsigned char 
 47355 ;;  n               1   99[BANK1 ] unsigned char 
 47356 ;;  flag            1   98[BANK1 ] unsigned char 
 47357 ;; Return value:  Size  Location     Type
 47358 ;;                  1    wreg      void 
 47359 ;; Registers used:
 47360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47361 ;; Tracked objects:
 47362 ;;		On entry : 0/0
 47363 ;;		On exit  : 0/0
 47364 ;;		Unchanged: 0/0
 47365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47366 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47367 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47368 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47369 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47370 ;;Total ram usage:      116 bytes
 47371 ;; Hardware stack levels used:    1
 47372 ;; Hardware stack levels required when called:   11
 47373 ;; This function calls:
 47374 ;;		_AESEncodeLoRa
 47375 ;;		_GenerateSubkey
 47376 ;;		_memcpy
 47377 ;;		_memset
 47378 ;; This function is called by:
 47379 ;;		_LORAWAN_RxDone
 47380 ;;		_AssemblePacket
 47381 ;;		_ComputeMic
 47382 ;; This function uses a non-reentrant model
 47383 ;;
 47384                           
 47385                           	psect	text255
 47386  003B00                     __ptext255:
 47387                           	opt stack 0
 47388  003B00                     _AESCmac:
 47389                           	opt stack 17
 47390                           
 47391                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 47392                           
 47393                           ;incstack = 0
 47394  003B00  0E00               	movlw	0
 47395  003B02  0101               	movlb	1	; () banked
 47396  003B04  6FEF               	movwf	AESCmac@n& (0+255),b
 47397  003B06  0E00               	movlw	0
 47398  003B08  6FF1               	movwf	AESCmac@i& (0+255),b
 47399  003B0A  0E00               	movlw	0
 47400  003B0C  6FF0               	movwf	AESCmac@j& (0+255),b
 47401                           
 47402                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 47403  003B0E  0E00               	movlw	0
 47404  003B10  6FEE               	movwf	AESCmac@flag& (0+255),b
 47405                           
 47406                           ; BSR set to: 1
 47407                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 47408                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 47409                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 47410  003B12  0E00               	movlw	0
 47411  003B14  6FEC               	movwf	AESCmac@ptr& (0+255),b
 47412  003B16  0E00               	movlw	0
 47413  003B18  6FED               	movwf	(AESCmac@ptr+1)& (0+255),b
 47414                           
 47415                           ; BSR set to: 1
 47416                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 47417  003B1A  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
 47418  003B1E  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
 47419  003B22  0E9C               	movlw	low AESCmac@k1
 47420  003B24  0100               	movlb	0	; () banked
 47421  003B26  6F93               	movwf	GenerateSubkey@k1& (0+255),b
 47422  003B28  0E01               	movlw	high AESCmac@k1
 47423  003B2A  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 47424  003B2C  0E8C               	movlw	low AESCmac@k2
 47425  003B2E  6F95               	movwf	GenerateSubkey@k2& (0+255),b
 47426  003B30  0E01               	movlw	high AESCmac@k2
 47427  003B32  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 47428  003B34  ECEC  F03C         	call	_GenerateSubkey	;wreg free
 47429                           
 47430                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 47431  003B38  0100               	movlb	0	; () banked
 47432  003B3A  51BF               	movf	AESCmac@size& (0+255),w,b
 47433  003B3C  6FC0               	movwf	??_AESCmac& (0+255),b
 47434  003B3E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47435  003B40  0E0F               	movlw	15
 47436  003B42  27C0               	addwf	??_AESCmac& (0+255),f,b
 47437  003B44  0E00               	movlw	0
 47438  003B46  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 47439  003B48  0E04               	movlw	4
 47440  003B4A  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47441  003B4C                     u20245:
 47442  003B4C  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
 47443  003B4E  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
 47444  003B50  33C0               	rrcf	??_AESCmac& (0+255),f,b
 47445  003B52  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
 47446  003B54  D7FB               	goto	u20245
 47447  003B56  51C0               	movf	??_AESCmac& (0+255),w,b
 47448  003B58  0101               	movlb	1	; () banked
 47449  003B5A  6FEF               	movwf	AESCmac@n& (0+255),b
 47450                           
 47451                           ; BSR set to: 1
 47452                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 47453  003B5C  51EF               	movf	AESCmac@n& (0+255),w,b
 47454  003B5E  A4D8               	btfss	status,2,c
 47455  003B60  D004               	goto	l366
 47456                           
 47457                           ; BSR set to: 1
 47458                           ;lorawan_aes_cmac.c: 53: {
 47459                           ;lorawan_aes_cmac.c: 54: n = 1;
 47460  003B62  0E01               	movlw	1
 47461  003B64  6FEF               	movwf	AESCmac@n& (0+255),b
 47462                           
 47463                           ;lorawan_aes_cmac.c: 55: flag = 0;
 47464  003B66  0E00               	movlw	0
 47465  003B68  D00B               	goto	L26
 47466  003B6A                     l366:
 47467                           
 47468                           ; BSR set to: 1
 47469                           ;lorawan_aes_cmac.c: 57: else
 47470                           ;lorawan_aes_cmac.c: 58: {
 47471                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 47472                           
 47473                           ; BSR set to: 1
 47474  003B6A  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
 47475  003B6E  0E0F               	movlw	15
 47476  003B70  0100               	movlb	0	; () banked
 47477  003B72  17C0               	andwf	??_AESCmac& (0+255),f,b
 47478  003B74  A4D8               	btfss	status,2,c
 47479  003B76  D002               	goto	u20260
 47480  003B78  0E01               	movlw	1
 47481  003B7A  D001               	goto	u20270
 47482  003B7C                     u20260:
 47483  003B7C  0E00               	movlw	0
 47484  003B7E                     u20270:
 47485  003B7E  0101               	movlb	1	; () banked
 47486  003B80                     L26:
 47487  003B80  6FEE               	movwf	AESCmac@flag& (0+255),b
 47488                           
 47489                           ; BSR set to: 1
 47490                           ;lorawan_aes_cmac.c: 60: }
 47491                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 47492  003B82  05EE               	decf	AESCmac@flag& (0+255),w,b
 47493  003B84  A4D8               	btfss	status,2,c
 47494  003B86  D048               	goto	l368
 47495                           
 47496                           ; BSR set to: 1
 47497                           ;lorawan_aes_cmac.c: 63: {
 47498                           ;lorawan_aes_cmac.c: 64: j = 0;
 47499  003B88  0E00               	movlw	0
 47500  003B8A  6FF0               	movwf	AESCmac@j& (0+255),b
 47501                           
 47502                           ; BSR set to: 1
 47503                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 47504  003B8C  39EF               	swapf	AESCmac@n& (0+255),w,b
 47505  003B8E  0BF0               	andlw	240
 47506  003B90  0FF0               	addlw	240
 47507  003B92  6FF1               	movwf	AESCmac@i& (0+255),b
 47508  003B94  D024               	goto	l369
 47509  003B96                     
 47510                           ;lorawan_aes_cmac.c: 66: {
 47511                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 47512                           
 47513                           ; BSR set to: 1
 47514  003B96  0101               	movlb	1	; () banked
 47515  003B98  51F0               	movf	AESCmac@j& (0+255),w,b
 47516  003B9A  0D01               	mullw	1
 47517  003B9C  0EAC               	movlw	low AESCmac@mLast
 47518  003B9E  24F3               	addwf	prodl,w,c
 47519  003BA0  6ED9               	movwf	fsr2l,c
 47520  003BA2  0E01               	movlw	high AESCmac@mLast
 47521  003BA4  20F4               	addwfc	prodh,w,c
 47522  003BA6  6EDA               	movwf	fsr2h,c
 47523  003BA8  51F0               	movf	AESCmac@j& (0+255),w,b
 47524  003BAA  0D01               	mullw	1
 47525  003BAC  0E9C               	movlw	low AESCmac@k1
 47526  003BAE  24F3               	addwf	prodl,w,c
 47527  003BB0  6EE9               	movwf	fsr0l,c
 47528  003BB2  0E01               	movlw	high AESCmac@k1
 47529  003BB4  20F4               	addwfc	prodh,w,c
 47530  003BB6  6EEA               	movwf	fsr0h,c
 47531  003BB8  50EF               	movf	indf0,w,c
 47532  003BBA  0100               	movlb	0	; () banked
 47533  003BBC  6FC0               	movwf	??_AESCmac& (0+255),b
 47534  003BBE  0101               	movlb	1	; () banked
 47535  003BC0  51F1               	movf	AESCmac@i& (0+255),w,b
 47536  003BC2  0D01               	mullw	1
 47537  003BC4  50F3               	movf	prodl,w,c
 47538  003BC6  0100               	movlb	0	; () banked
 47539  003BC8  25BD               	addwf	AESCmac@input& (0+255),w,b
 47540  003BCA  6EE9               	movwf	fsr0l,c
 47541  003BCC  50F4               	movf	prodh,w,c
 47542  003BCE  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47543  003BD0  6EEA               	movwf	fsr0h,c
 47544  003BD2  50EF               	movf	indf0,w,c
 47545  003BD4  19C0               	xorwf	??_AESCmac& (0+255),w,b
 47546  003BD6  6EDF               	movwf	indf2,c
 47547                           
 47548                           ; BSR set to: 0
 47549                           ;lorawan_aes_cmac.c: 68: j++;
 47550  003BD8  0101               	movlb	1	; () banked
 47551  003BDA  2BF0               	incf	AESCmac@j& (0+255),f,b
 47552                           
 47553                           ; BSR set to: 1
 47554  003BDC  2BF1               	incf	AESCmac@i& (0+255),f,b
 47555  003BDE                     l369:
 47556                           
 47557                           ; BSR set to: 1
 47558                           
 47559                           ; BSR set to: 1
 47560  003BDE  51EF               	movf	AESCmac@n& (0+255),w,b
 47561  003BE0  0100               	movlb	0	; () banked
 47562  003BE2  6FC0               	movwf	??_AESCmac& (0+255),b
 47563  003BE4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47564  003BE6  3BC0               	swapf	??_AESCmac& (0+255),f,b
 47565  003BE8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 47566  003BEA  0EF0               	movlw	240
 47567  003BEC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 47568  003BEE  51C0               	movf	??_AESCmac& (0+255),w,b
 47569  003BF0  0B0F               	andlw	15
 47570  003BF2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 47571  003BF4  0EF0               	movlw	240
 47572  003BF6  17C0               	andwf	??_AESCmac& (0+255),f,b
 47573  003BF8  0101               	movlb	1	; () banked
 47574  003BFA  51F1               	movf	AESCmac@i& (0+255),w,b
 47575  003BFC  0100               	movlb	0	; () banked
 47576  003BFE  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47577  003C00  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 47578  003C02  51C0               	movf	??_AESCmac& (0+255),w,b
 47579  003C04  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
 47580  003C06  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 47581  003C08  0A80               	xorlw	128
 47582  003C0A  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 47583  003C0C  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47584  003C0E  0A80               	xorlw	128
 47585  003C10  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
 47586  003C12  B0D8               	btfsc	status,0,c
 47587  003C14  D07F               	goto	u20350
 47588  003C16  D7BF               	goto	l370
 47589  003C18                     l368:
 47590                           
 47591                           ;lorawan_aes_cmac.c: 71: else
 47592                           ;lorawan_aes_cmac.c: 72: {
 47593                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 47594                           
 47595                           ; BSR set to: 0
 47596  003C18  0100               	movlb	0	; () banked
 47597  003C1A  51BF               	movf	AESCmac@size& (0+255),w,b
 47598  003C1C  0B0F               	andlw	15
 47599  003C1E  6FC0               	movwf	??_AESCmac& (0+255),b
 47600  003C20  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47601  003C22  1FC0               	comf	??_AESCmac& (0+255),f,b
 47602  003C24  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
 47603  003C26  4BC0               	infsnz	??_AESCmac& (0+255),f,b
 47604  003C28  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
 47605  003C2A  51BF               	movf	AESCmac@size& (0+255),w,b
 47606  003C2C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47607  003C2E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 47608  003C30  51C0               	movf	??_AESCmac& (0+255),w,b
 47609  003C32  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 47610  003C34  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47611  003C36  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 47612  003C38  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 47613  003C3A  25BD               	addwf	AESCmac@input& (0+255),w,b
 47614  003C3C  0101               	movlb	1	; () banked
 47615  003C3E  6FEC               	movwf	AESCmac@ptr& (0+255),b
 47616  003C40  0100               	movlb	0	; () banked
 47617  003C42  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 47618  003C44  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47619  003C46  0101               	movlb	1	; () banked
 47620  003C48  6FED               	movwf	(AESCmac@ptr+1)& (0+255),b
 47621                           
 47622                           ; BSR set to: 1
 47623                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 47624  003C4A  0E00               	movlw	0
 47625  003C4C  6FF1               	movwf	AESCmac@i& (0+255),b
 47626  003C4E                     l18278:
 47627                           
 47628                           ; BSR set to: 1
 47629  003C4E  0E0F               	movlw	15
 47630  003C50  65F1               	cpfsgt	AESCmac@i& (0+255),b
 47631  003C52  D001               	goto	l373
 47632  003C54  D036               	goto	u20330
 47633  003C56                     l373:
 47634                           
 47635                           ; BSR set to: 1
 47636                           ;lorawan_aes_cmac.c: 76: {
 47637                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 47638                           
 47639                           ; BSR set to: 1
 47640  003C56  0100               	movlb	0	; () banked
 47641  003C58  51BF               	movf	AESCmac@size& (0+255),w,b
 47642  003C5A  0B0F               	andlw	15
 47643  003C5C  0101               	movlb	1	; () banked
 47644  003C5E  61F1               	cpfslt	AESCmac@i& (0+255),b
 47645  003C60  D013               	goto	l375
 47646                           
 47647                           ; BSR set to: 1
 47648                           ;lorawan_aes_cmac.c: 78: {
 47649                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 47650  003C62  51F1               	movf	AESCmac@i& (0+255),w,b
 47651  003C64  0D01               	mullw	1
 47652  003C66  50F3               	movf	prodl,w,c
 47653  003C68  25EC               	addwf	AESCmac@ptr& (0+255),w,b
 47654  003C6A  6ED9               	movwf	fsr2l,c
 47655  003C6C  50F4               	movf	prodh,w,c
 47656  003C6E  21ED               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 47657  003C70  6EDA               	movwf	fsr2h,c
 47658  003C72  51F1               	movf	AESCmac@i& (0+255),w,b
 47659  003C74  0D01               	mullw	1
 47660  003C76  0EBC               	movlw	low AESCmac@padded
 47661  003C78  24F3               	addwf	prodl,w,c
 47662  003C7A  6EE9               	movwf	fsr0l,c
 47663  003C7C  0E01               	movlw	high AESCmac@padded
 47664  003C7E  20F4               	addwfc	prodh,w,c
 47665  003C80  6EEA               	movwf	fsr0h,c
 47666  003C82  CFDF FFEF          	movff	indf2,indf0
 47667                           
 47668                           ;lorawan_aes_cmac.c: 80: }
 47669  003C86  D01B               	goto	l378
 47670  003C88                     l375:
 47671                           
 47672                           ; BSR set to: 1
 47673                           ;lorawan_aes_cmac.c: 81: else
 47674                           ;lorawan_aes_cmac.c: 82: {
 47675                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 47676                           
 47677                           ; BSR set to: 1
 47678  003C88  0100               	movlb	0	; () banked
 47679  003C8A  51BF               	movf	AESCmac@size& (0+255),w,b
 47680  003C8C  0B0F               	andlw	15
 47681  003C8E  0101               	movlb	1	; () banked
 47682  003C90  19F1               	xorwf	AESCmac@i& (0+255),w,b
 47683  003C92  A4D8               	btfss	status,2,c
 47684  003C94  D00A               	goto	l377
 47685                           
 47686                           ; BSR set to: 1
 47687                           ;lorawan_aes_cmac.c: 84: {
 47688                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 47689  003C96  51F1               	movf	AESCmac@i& (0+255),w,b
 47690  003C98  0D01               	mullw	1
 47691  003C9A  0EBC               	movlw	low AESCmac@padded
 47692  003C9C  24F3               	addwf	prodl,w,c
 47693  003C9E  6ED9               	movwf	fsr2l,c
 47694  003CA0  0E01               	movlw	high AESCmac@padded
 47695  003CA2  20F4               	addwfc	prodh,w,c
 47696  003CA4  6EDA               	movwf	fsr2h,c
 47697  003CA6  0E80               	movlw	128
 47698  003CA8  D009               	goto	L27
 47699  003CAA                     l377:
 47700                           
 47701                           ; BSR set to: 1
 47702                           ;lorawan_aes_cmac.c: 87: else
 47703                           ;lorawan_aes_cmac.c: 88: {
 47704                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 47705                           
 47706                           ; BSR set to: 1
 47707  003CAA  51F1               	movf	AESCmac@i& (0+255),w,b
 47708  003CAC  0D01               	mullw	1
 47709  003CAE  0EBC               	movlw	low AESCmac@padded
 47710  003CB0  24F3               	addwf	prodl,w,c
 47711  003CB2  6ED9               	movwf	fsr2l,c
 47712  003CB4  0E01               	movlw	high AESCmac@padded
 47713  003CB6  20F4               	addwfc	prodh,w,c
 47714  003CB8  6EDA               	movwf	fsr2h,c
 47715  003CBA  0E00               	movlw	0
 47716  003CBC                     L27:
 47717  003CBC  6EDF               	movwf	indf2,c
 47718  003CBE                     l378:
 47719                           
 47720                           ; BSR set to: 1
 47721                           
 47722                           ; BSR set to: 1
 47723                           
 47724                           ; BSR set to: 1
 47725  003CBE  2BF1               	incf	AESCmac@i& (0+255),f,b
 47726  003CC0  D7C6               	goto	l18278
 47727  003CC2                     u20330:
 47728                           
 47729                           ; BSR set to: 1
 47730                           ;lorawan_aes_cmac.c: 90: }
 47731                           ;lorawan_aes_cmac.c: 91: }
 47732                           ;lorawan_aes_cmac.c: 92: }
 47733                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 47734                           
 47735                           ; BSR set to: 1
 47736  003CC2  0E00               	movlw	0
 47737  003CC4  6FF1               	movwf	AESCmac@i& (0+255),b
 47738  003CC6                     l18298:
 47739                           
 47740                           ; BSR set to: 1
 47741  003CC6  0E0F               	movlw	15
 47742  003CC8  65F1               	cpfsgt	AESCmac@i& (0+255),b
 47743  003CCA  D001               	goto	l379
 47744  003CCC  D023               	goto	u20350
 47745  003CCE                     l379:
 47746                           
 47747                           ; BSR set to: 1
 47748                           ;lorawan_aes_cmac.c: 96: {
 47749                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 47750                           
 47751                           ; BSR set to: 1
 47752  003CCE  51F1               	movf	AESCmac@i& (0+255),w,b
 47753  003CD0  0D01               	mullw	1
 47754  003CD2  0EAC               	movlw	low AESCmac@mLast
 47755  003CD4  24F3               	addwf	prodl,w,c
 47756  003CD6  6ED9               	movwf	fsr2l,c
 47757  003CD8  0E01               	movlw	high AESCmac@mLast
 47758  003CDA  20F4               	addwfc	prodh,w,c
 47759  003CDC  6EDA               	movwf	fsr2h,c
 47760  003CDE  51F1               	movf	AESCmac@i& (0+255),w,b
 47761  003CE0  0D01               	mullw	1
 47762  003CE2  0E8C               	movlw	low AESCmac@k2
 47763  003CE4  24F3               	addwf	prodl,w,c
 47764  003CE6  6EE9               	movwf	fsr0l,c
 47765  003CE8  0E01               	movlw	high AESCmac@k2
 47766  003CEA  20F4               	addwfc	prodh,w,c
 47767  003CEC  6EEA               	movwf	fsr0h,c
 47768  003CEE  50EF               	movf	indf0,w,c
 47769  003CF0  0100               	movlb	0	; () banked
 47770  003CF2  6FC0               	movwf	??_AESCmac& (0+255),b
 47771  003CF4  0101               	movlb	1	; () banked
 47772  003CF6  51F1               	movf	AESCmac@i& (0+255),w,b
 47773  003CF8  0D01               	mullw	1
 47774  003CFA  0EBC               	movlw	low AESCmac@padded
 47775  003CFC  24F3               	addwf	prodl,w,c
 47776  003CFE  6EE9               	movwf	fsr0l,c
 47777  003D00  0E01               	movlw	high AESCmac@padded
 47778  003D02  20F4               	addwfc	prodh,w,c
 47779  003D04  6EEA               	movwf	fsr0h,c
 47780  003D06  50EF               	movf	indf0,w,c
 47781  003D08  0100               	movlb	0	; () banked
 47782  003D0A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 47783  003D0C  6EDF               	movwf	indf2,c
 47784                           
 47785                           ; BSR set to: 0
 47786  003D0E  0101               	movlb	1	; () banked
 47787  003D10  2BF1               	incf	AESCmac@i& (0+255),f,b
 47788  003D12  D7D9               	goto	l18298
 47789  003D14                     u20350:
 47790                           
 47791                           ;lorawan_aes_cmac.c: 98: }
 47792                           ;lorawan_aes_cmac.c: 99: }
 47793                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 47794                           
 47795                           ; BSR set to: 1
 47796                           
 47797                           ; BSR set to: 1
 47798  003D14  0EDC               	movlw	low AESCmac@x
 47799  003D16  0100               	movlb	0	; () banked
 47800  003D18  6F60               	movwf	memset@p1& (0+255),b
 47801  003D1A  0E01               	movlw	high AESCmac@x
 47802  003D1C  6F61               	movwf	(memset@p1+1)& (0+255),b
 47803  003D1E  0E00               	movlw	0
 47804  003D20  6F63               	movwf	(memset@c+1)& (0+255),b
 47805  003D22  0E00               	movlw	0
 47806  003D24  6F62               	movwf	memset@c& (0+255),b
 47807  003D26  0E00               	movlw	0
 47808  003D28  6F65               	movwf	(memset@n+1)& (0+255),b
 47809  003D2A  0E10               	movlw	16
 47810  003D2C  6F64               	movwf	memset@n& (0+255),b
 47811  003D2E  EC1F  F05D         	call	_memset	;wreg free
 47812                           
 47813                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 47814  003D32  0E00               	movlw	0
 47815  003D34  0101               	movlb	1	; () banked
 47816  003D36  6FF1               	movwf	AESCmac@i& (0+255),b
 47817  003D38  D056               	goto	l381
 47818  003D3A                     
 47819                           ;lorawan_aes_cmac.c: 104: {
 47820                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 47821                           
 47822                           ; BSR set to: 1
 47823  003D3A  0E00               	movlw	0
 47824  003D3C  0101               	movlb	1	; () banked
 47825  003D3E  6FF0               	movwf	AESCmac@j& (0+255),b
 47826  003D40                     l18314:
 47827                           
 47828                           ; BSR set to: 1
 47829  003D40  0E0F               	movlw	15
 47830  003D42  65F0               	cpfsgt	AESCmac@j& (0+255),b
 47831  003D44  D001               	goto	l383
 47832  003D46  D033               	goto	u20370
 47833  003D48                     l383:
 47834                           
 47835                           ; BSR set to: 1
 47836                           ;lorawan_aes_cmac.c: 106: {
 47837                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 47838                           
 47839                           ; BSR set to: 1
 47840  003D48  51F0               	movf	AESCmac@j& (0+255),w,b
 47841  003D4A  0D01               	mullw	1
 47842  003D4C  0ECC               	movlw	low AESCmac@y
 47843  003D4E  24F3               	addwf	prodl,w,c
 47844  003D50  6ED9               	movwf	fsr2l,c
 47845  003D52  0E01               	movlw	high AESCmac@y
 47846  003D54  20F4               	addwfc	prodh,w,c
 47847  003D56  6EDA               	movwf	fsr2h,c
 47848  003D58  51F1               	movf	AESCmac@i& (0+255),w,b
 47849  003D5A  0100               	movlb	0	; () banked
 47850  003D5C  6FC0               	movwf	??_AESCmac& (0+255),b
 47851  003D5E  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
 47852  003D60  3BC0               	swapf	??_AESCmac& (0+255),f,b
 47853  003D62  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
 47854  003D64  0EF0               	movlw	240
 47855  003D66  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
 47856  003D68  51C0               	movf	??_AESCmac& (0+255),w,b
 47857  003D6A  0B0F               	andlw	15
 47858  003D6C  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
 47859  003D6E  0EF0               	movlw	240
 47860  003D70  17C0               	andwf	??_AESCmac& (0+255),f,b
 47861  003D72  0101               	movlb	1	; () banked
 47862  003D74  51F0               	movf	AESCmac@j& (0+255),w,b
 47863  003D76  0100               	movlb	0	; () banked
 47864  003D78  27C0               	addwf	??_AESCmac& (0+255),f,b
 47865  003D7A  0E00               	movlw	0
 47866  003D7C  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
 47867  003D7E  51C0               	movf	??_AESCmac& (0+255),w,b
 47868  003D80  25BD               	addwf	AESCmac@input& (0+255),w,b
 47869  003D82  6EE9               	movwf	fsr0l,c
 47870  003D84  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47871  003D86  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
 47872  003D88  6EEA               	movwf	fsr0h,c
 47873  003D8A  50EF               	movf	indf0,w,c
 47874  003D8C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47875  003D8E  0101               	movlb	1	; () banked
 47876  003D90  51F0               	movf	AESCmac@j& (0+255),w,b
 47877  003D92  0D01               	mullw	1
 47878  003D94  0EDC               	movlw	low AESCmac@x
 47879  003D96  24F3               	addwf	prodl,w,c
 47880  003D98  6EE9               	movwf	fsr0l,c
 47881  003D9A  0E01               	movlw	high AESCmac@x
 47882  003D9C  20F4               	addwfc	prodh,w,c
 47883  003D9E  6EEA               	movwf	fsr0h,c
 47884  003DA0  50EF               	movf	indf0,w,c
 47885  003DA2  0100               	movlb	0	; () banked
 47886  003DA4  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
 47887  003DA6  6EDF               	movwf	indf2,c
 47888                           
 47889                           ; BSR set to: 0
 47890  003DA8  0101               	movlb	1	; () banked
 47891  003DAA  2BF0               	incf	AESCmac@j& (0+255),f,b
 47892  003DAC  D7C9               	goto	l18314
 47893  003DAE                     u20370:
 47894                           
 47895                           ; BSR set to: 1
 47896                           ;lorawan_aes_cmac.c: 108: }
 47897                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 47898                           
 47899                           ; BSR set to: 1
 47900  003DAE  0EDC               	movlw	low AESCmac@x
 47901  003DB0  0100               	movlb	0	; () banked
 47902  003DB2  6F60               	movwf	memcpy@d1& (0+255),b
 47903  003DB4  0E01               	movlw	high AESCmac@x
 47904  003DB6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 47905  003DB8  0ECC               	movlw	low AESCmac@y
 47906  003DBA  6F62               	movwf	memcpy@s1& (0+255),b
 47907  003DBC  0E01               	movlw	high AESCmac@y
 47908  003DBE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 47909  003DC0  0E00               	movlw	0
 47910  003DC2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 47911  003DC4  0E10               	movlw	16
 47912  003DC6  6F64               	movwf	memcpy@n& (0+255),b
 47913  003DC8  ECA9  F055         	call	_memcpy	;wreg free
 47914                           
 47915                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 47916  003DCC  0EDC               	movlw	low AESCmac@x
 47917  003DCE  0100               	movlb	0	; () banked
 47918  003DD0  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 47919  003DD2  0E01               	movlw	high AESCmac@x
 47920  003DD4  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 47921  003DD6  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 47922  003DDA  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 47923  003DDE  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 47924  003DE2  0101               	movlb	1	; () banked
 47925  003DE4  2BF1               	incf	AESCmac@i& (0+255),f,b
 47926  003DE6                     l381:
 47927                           
 47928                           ; BSR set to: 1
 47929                           
 47930                           ; BSR set to: 1
 47931  003DE6  0EFF               	movlw	255
 47932  003DE8  0100               	movlb	0	; () banked
 47933  003DEA  6FC0               	movwf	??_AESCmac& (0+255),b
 47934  003DEC  0EFF               	movlw	255
 47935  003DEE  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
 47936  003DF0  0101               	movlb	1	; () banked
 47937  003DF2  51EF               	movf	AESCmac@n& (0+255),w,b
 47938  003DF4  0100               	movlb	0	; () banked
 47939  003DF6  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
 47940  003DF8  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
 47941  003DFA  51C0               	movf	??_AESCmac& (0+255),w,b
 47942  003DFC  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
 47943  003DFE  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
 47944  003E00  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
 47945  003E02  0101               	movlb	1	; () banked
 47946  003E04  51F1               	movf	AESCmac@i& (0+255),w,b
 47947  003E06  0100               	movlb	0	; () banked
 47948  003E08  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
 47949  003E0A  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
 47950  003E0C  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
 47951  003E0E  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
 47952  003E10  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
 47953  003E12  0A80               	xorlw	128
 47954  003E14  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
 47955  003E16  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
 47956  003E18  0A80               	xorlw	128
 47957  003E1A  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
 47958  003E1C  A0D8               	btfss	status,0,c
 47959  003E1E  D78D               	goto	l382
 47960                           
 47961                           ; BSR set to: 0
 47962                           ;lorawan_aes_cmac.c: 111: }
 47963                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 47964                           
 47965                           ; BSR set to: 0
 47966  003E20  0E00               	movlw	0
 47967  003E22  0101               	movlb	1	; () banked
 47968  003E24  6FF1               	movwf	AESCmac@i& (0+255),b
 47969  003E26                     l18334:
 47970                           
 47971                           ; BSR set to: 1
 47972  003E26  0E0F               	movlw	15
 47973  003E28  65F1               	cpfsgt	AESCmac@i& (0+255),b
 47974  003E2A  D001               	goto	l386
 47975  003E2C  D023               	goto	u20400
 47976  003E2E                     l386:
 47977                           
 47978                           ; BSR set to: 1
 47979                           ;lorawan_aes_cmac.c: 114: {
 47980                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 47981                           
 47982                           ; BSR set to: 1
 47983  003E2E  51F1               	movf	AESCmac@i& (0+255),w,b
 47984  003E30  0D01               	mullw	1
 47985  003E32  0ECC               	movlw	low AESCmac@y
 47986  003E34  24F3               	addwf	prodl,w,c
 47987  003E36  6ED9               	movwf	fsr2l,c
 47988  003E38  0E01               	movlw	high AESCmac@y
 47989  003E3A  20F4               	addwfc	prodh,w,c
 47990  003E3C  6EDA               	movwf	fsr2h,c
 47991  003E3E  51F1               	movf	AESCmac@i& (0+255),w,b
 47992  003E40  0D01               	mullw	1
 47993  003E42  0EAC               	movlw	low AESCmac@mLast
 47994  003E44  24F3               	addwf	prodl,w,c
 47995  003E46  6EE9               	movwf	fsr0l,c
 47996  003E48  0E01               	movlw	high AESCmac@mLast
 47997  003E4A  20F4               	addwfc	prodh,w,c
 47998  003E4C  6EEA               	movwf	fsr0h,c
 47999  003E4E  50EF               	movf	indf0,w,c
 48000  003E50  0100               	movlb	0	; () banked
 48001  003E52  6FC0               	movwf	??_AESCmac& (0+255),b
 48002  003E54  0101               	movlb	1	; () banked
 48003  003E56  51F1               	movf	AESCmac@i& (0+255),w,b
 48004  003E58  0D01               	mullw	1
 48005  003E5A  0EDC               	movlw	low AESCmac@x
 48006  003E5C  24F3               	addwf	prodl,w,c
 48007  003E5E  6EE9               	movwf	fsr0l,c
 48008  003E60  0E01               	movlw	high AESCmac@x
 48009  003E62  20F4               	addwfc	prodh,w,c
 48010  003E64  6EEA               	movwf	fsr0h,c
 48011  003E66  50EF               	movf	indf0,w,c
 48012  003E68  0100               	movlb	0	; () banked
 48013  003E6A  19C0               	xorwf	??_AESCmac& (0+255),w,b
 48014  003E6C  6EDF               	movwf	indf2,c
 48015                           
 48016                           ; BSR set to: 0
 48017  003E6E  0101               	movlb	1	; () banked
 48018  003E70  2BF1               	incf	AESCmac@i& (0+255),f,b
 48019  003E72  D7D9               	goto	l18334
 48020  003E74                     u20400:
 48021                           
 48022                           ; BSR set to: 1
 48023                           ;lorawan_aes_cmac.c: 116: }
 48024                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 48025                           
 48026                           ; BSR set to: 1
 48027  003E74  0ECC               	movlw	low AESCmac@y
 48028  003E76  0100               	movlb	0	; () banked
 48029  003E78  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 48030  003E7A  0E01               	movlw	high AESCmac@y
 48031  003E7C  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 48032  003E7E  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
 48033  003E82  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 48034  003E86  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 48035                           
 48036                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 48037  003E8A  C0BB  F060         	movff	AESCmac@output,memcpy@d1
 48038  003E8E  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
 48039  003E92  0ECC               	movlw	low AESCmac@y
 48040  003E94  0100               	movlb	0	; () banked
 48041  003E96  6F62               	movwf	memcpy@s1& (0+255),b
 48042  003E98  0E01               	movlw	high AESCmac@y
 48043  003E9A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 48044  003E9C  0E00               	movlw	0
 48045  003E9E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 48046  003EA0  0E10               	movlw	16
 48047  003EA2  6F64               	movwf	memcpy@n& (0+255),b
 48048  003EA4  ECA9  F055         	call	_memcpy	;wreg free
 48049  003EA8  0012               	return		;funcret
 48050  003EAA                     __end_of_AESCmac:
 48051                           	opt stack 0
 48052                           tosu	equ	0xFFF
 48053                           tosh	equ	0xFFE
 48054                           tosl	equ	0xFFD
 48055                           pclath	equ	0xFFA
 48056                           tblptru	equ	0xFF8
 48057                           tblptrh	equ	0xFF7
 48058                           tblptrl	equ	0xFF6
 48059                           tablat	equ	0xFF5
 48060                           prodh	equ	0xFF4
 48061                           prodl	equ	0xFF3
 48062                           intcon	equ	0xFF2
 48063                           intcon2	equ	0xFF1
 48064                           intcon3	equ	0xFF0
 48065                           indf0	equ	0xFEF
 48066                           postinc0	equ	0xFEE
 48067                           fsr0h	equ	0xFEA
 48068                           fsr0l	equ	0xFE9
 48069                           wreg	equ	0xFE8
 48070                           postinc1	equ	0xFE6
 48071                           postdec1	equ	0xFE5
 48072                           plusw1	equ	0xFE3
 48073                           fsr1h	equ	0xFE2
 48074                           fsr1l	equ	0xFE1
 48075                           indf2	equ	0xFDF
 48076                           postinc2	equ	0xFDE
 48077                           postdec2	equ	0xFDD
 48078                           plusw2	equ	0xFDB
 48079                           fsr2h	equ	0xFDA
 48080                           fsr2l	equ	0xFD9
 48081                           status	equ	0xFD8
 48082                           
 48083 ;; *************** function _GenerateSubkey *****************
 48084 ;; Defined at:
 48085 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 48086 ;; Parameters:    Size  Location     Type
 48087 ;;  key             2   49[BANK0 ] PTR unsigned char 
 48088 ;;		 -> loRa.activationParameters(105), loRa(245), 
 48089 ;;  k1              2   51[BANK0 ] PTR unsigned char 
 48090 ;;		 -> AESCmac@k1(16), 
 48091 ;;  k2              2   53[BANK0 ] PTR unsigned char 
 48092 ;;		 -> AESCmac@k2(16), 
 48093 ;; Auto vars:     Size  Location     Type
 48094 ;;  l              16   72[BANK0 ] unsigned char [16]
 48095 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
 48096 ;;  i               1   88[BANK0 ] unsigned char 
 48097 ;; Return value:  Size  Location     Type
 48098 ;;                  1    wreg      void 
 48099 ;; Registers used:
 48100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48101 ;; Tracked objects:
 48102 ;;		On entry : 0/0
 48103 ;;		On exit  : 0/0
 48104 ;;		Unchanged: 0/0
 48105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48106 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48107 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48109 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48110 ;;Total ram usage:       40 bytes
 48111 ;; Hardware stack levels used:    1
 48112 ;; Hardware stack levels required when called:   10
 48113 ;; This function calls:
 48114 ;;		_AESEncodeLoRa
 48115 ;;		_FillSubKey
 48116 ;;		_memset
 48117 ;; This function is called by:
 48118 ;;		_AESCmac
 48119 ;; This function uses a non-reentrant model
 48120 ;;
 48121                           
 48122                           	psect	text256
 48123  0079D8                     __ptext256:
 48124                           	opt stack 0
 48125  0079D8                     _GenerateSubkey:
 48126                           	opt stack 17
 48127                           
 48128                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 48129                           
 48130                           ;incstack = 0
 48131  0079D8  0E00               	movlw	0
 48132  0079DA  0100               	movlb	0	; () banked
 48133  0079DC  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48134                           
 48135                           ; BSR set to: 0
 48136                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 48137                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 48138                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 48139  0079DE  EE24  F0E0         	lfsr	2,GenerateSubkey@F7103
 48140  0079E2  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
 48141  0079E6  0E0F               	movlw	15
 48142  0079E8                     u19711:
 48143  0079E8  CFDB FFEB          	movff	plusw2,plusw0
 48144  0079EC  06E8               	decf	wreg,f,c
 48145  0079EE  E2FC               	bc	u19711
 48146                           
 48147                           ; BSR set to: 0
 48148                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 48149  0079F0  0EA8               	movlw	low GenerateSubkey@l
 48150  0079F2  6F60               	movwf	memset@p1& (0+255),b
 48151  0079F4  0E00               	movlw	high GenerateSubkey@l
 48152  0079F6  6F61               	movwf	(memset@p1+1)& (0+255),b
 48153  0079F8  0E00               	movlw	0
 48154  0079FA  6F63               	movwf	(memset@c+1)& (0+255),b
 48155  0079FC  0E00               	movlw	0
 48156  0079FE  6F62               	movwf	memset@c& (0+255),b
 48157  007A00  0E00               	movlw	0
 48158  007A02  6F65               	movwf	(memset@n+1)& (0+255),b
 48159  007A04  0E10               	movlw	16
 48160  007A06  6F64               	movwf	memset@n& (0+255),b
 48161  007A08  EC1F  F05D         	call	_memset	;wreg free
 48162                           
 48163                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 48164  007A0C  0EA8               	movlw	low GenerateSubkey@l
 48165  007A0E  0100               	movlb	0	; () banked
 48166  007A10  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
 48167  007A12  0E00               	movlw	high GenerateSubkey@l
 48168  007A14  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 48169  007A16  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 48170  007A1A  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 48171  007A1E  ECF6  F05B         	call	_AESEncodeLoRa	;wreg free
 48172                           
 48173                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 48174  007A22  0100               	movlb	0	; () banked
 48175  007A24  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
 48176  007A26  D00D               	goto	l393
 48177                           
 48178                           ; BSR set to: 0
 48179                           ;lorawan_aes_cmac.c: 138: {
 48180                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 48181  007A28  0EA8               	movlw	low GenerateSubkey@l
 48182  007A2A  6F60               	movwf	FillSubKey@source& (0+255),b
 48183  007A2C  0E00               	movlw	high GenerateSubkey@l
 48184  007A2E  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 48185  007A30  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 48186  007A34  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 48187  007A38  0E10               	movlw	16
 48188  007A3A  6F64               	movwf	FillSubKey@size& (0+255),b
 48189  007A3C  EC17  F055         	call	_FillSubKey	;wreg free
 48190                           
 48191                           ;lorawan_aes_cmac.c: 140: }
 48192  007A40  D02A               	goto	u19740
 48193  007A42                     l393:
 48194                           
 48195                           ;lorawan_aes_cmac.c: 141: else
 48196                           ;lorawan_aes_cmac.c: 142: {
 48197                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 48198  007A42  0EA8               	movlw	low GenerateSubkey@l
 48199  007A44  0100               	movlb	0	; () banked
 48200  007A46  6F60               	movwf	FillSubKey@source& (0+255),b
 48201  007A48  0E00               	movlw	high GenerateSubkey@l
 48202  007A4A  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 48203  007A4C  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 48204  007A50  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 48205  007A54  0E10               	movlw	16
 48206  007A56  6F64               	movwf	FillSubKey@size& (0+255),b
 48207  007A58  EC17  F055         	call	_FillSubKey	;wreg free
 48208                           
 48209                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 48210  007A5C  0E00               	movlw	0
 48211  007A5E  0100               	movlb	0	; () banked
 48212  007A60  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48213  007A62                     l17864:
 48214                           
 48215                           ; BSR set to: 0
 48216  007A62  0E0F               	movlw	15
 48217  007A64  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 48218  007A66  D001               	goto	l395
 48219  007A68  D016               	goto	u19740
 48220  007A6A                     l395:
 48221                           
 48222                           ; BSR set to: 0
 48223                           ;lorawan_aes_cmac.c: 146: {
 48224                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 48225                           
 48226                           ; BSR set to: 0
 48227  007A6A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48228  007A6C  0D01               	mullw	1
 48229  007A6E  0E98               	movlw	low GenerateSubkey@const_Rb
 48230  007A70  24F3               	addwf	prodl,w,c
 48231  007A72  6ED9               	movwf	fsr2l,c
 48232  007A74  0E00               	movlw	high GenerateSubkey@const_Rb
 48233  007A76  20F4               	addwfc	prodh,w,c
 48234  007A78  6EDA               	movwf	fsr2h,c
 48235  007A7A  50DF               	movf	indf2,w,c
 48236  007A7C  6F97               	movwf	??_GenerateSubkey& (0+255),b
 48237  007A7E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48238  007A80  0D01               	mullw	1
 48239  007A82  50F3               	movf	prodl,w,c
 48240  007A84  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
 48241  007A86  6ED9               	movwf	fsr2l,c
 48242  007A88  50F4               	movf	prodh,w,c
 48243  007A8A  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 48244  007A8C  6EDA               	movwf	fsr2h,c
 48245  007A8E  5197               	movf	??_GenerateSubkey& (0+255),w,b
 48246  007A90  1ADF               	xorwf	indf2,f,c
 48247                           
 48248                           ; BSR set to: 0
 48249  007A92  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 48250  007A94  D7E6               	goto	l17864
 48251  007A96                     u19740:
 48252                           
 48253                           ;lorawan_aes_cmac.c: 148: }
 48254                           ;lorawan_aes_cmac.c: 149: }
 48255                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 48256                           
 48257                           ; BSR set to: 0
 48258                           
 48259                           ; BSR set to: 0
 48260  007A96  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
 48261  007A9A  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 48262  007A9E  0100               	movlb	0	; () banked
 48263  007AA0  BEDF               	btfsc	indf2,7,c
 48264  007AA2  D00D               	goto	l397
 48265                           
 48266                           ; BSR set to: 0
 48267                           ;lorawan_aes_cmac.c: 153: {
 48268                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 48269  007AA4  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 48270  007AA8  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 48271  007AAC  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 48272  007AB0  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 48273  007AB4  0E10               	movlw	16
 48274  007AB6  6F64               	movwf	FillSubKey@size& (0+255),b
 48275  007AB8  EC17  F055         	call	_FillSubKey	;wreg free
 48276                           
 48277                           ;lorawan_aes_cmac.c: 155: }
 48278  007ABC  0012               	return	
 48279  007ABE                     l397:
 48280                           
 48281                           ;lorawan_aes_cmac.c: 156: else
 48282                           ;lorawan_aes_cmac.c: 157: {
 48283                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 48284  007ABE  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 48285  007AC2  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 48286  007AC6  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 48287  007ACA  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 48288  007ACE  0E10               	movlw	16
 48289  007AD0  0100               	movlb	0	; () banked
 48290  007AD2  6F64               	movwf	FillSubKey@size& (0+255),b
 48291  007AD4  EC17  F055         	call	_FillSubKey	;wreg free
 48292                           
 48293                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 48294  007AD8  0E00               	movlw	0
 48295  007ADA  0100               	movlb	0	; () banked
 48296  007ADC  6FB8               	movwf	GenerateSubkey@i& (0+255),b
 48297  007ADE                     l17882:
 48298                           
 48299                           ; BSR set to: 0
 48300  007ADE  0E0F               	movlw	15
 48301  007AE0  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
 48302  007AE2  D001               	goto	l399
 48303  007AE4  0012               	return	
 48304  007AE6                     l399:
 48305                           
 48306                           ; BSR set to: 0
 48307                           ;lorawan_aes_cmac.c: 161: {
 48308                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 48309                           
 48310                           ; BSR set to: 0
 48311  007AE6  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48312  007AE8  0D01               	mullw	1
 48313  007AEA  50F3               	movf	prodl,w,c
 48314  007AEC  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 48315  007AEE  6ED9               	movwf	fsr2l,c
 48316  007AF0  50F4               	movf	prodh,w,c
 48317  007AF2  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 48318  007AF4  6EDA               	movwf	fsr2h,c
 48319  007AF6  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48320  007AF8  0D01               	mullw	1
 48321  007AFA  0E98               	movlw	low GenerateSubkey@const_Rb
 48322  007AFC  24F3               	addwf	prodl,w,c
 48323  007AFE  6EE9               	movwf	fsr0l,c
 48324  007B00  0E00               	movlw	high GenerateSubkey@const_Rb
 48325  007B02  20F4               	addwfc	prodh,w,c
 48326  007B04  6EEA               	movwf	fsr0h,c
 48327  007B06  50EF               	movf	indf0,w,c
 48328  007B08  6F97               	movwf	??_GenerateSubkey& (0+255),b
 48329  007B0A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
 48330  007B0C  0D01               	mullw	1
 48331  007B0E  50F3               	movf	prodl,w,c
 48332  007B10  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
 48333  007B12  6EE9               	movwf	fsr0l,c
 48334  007B14  50F4               	movf	prodh,w,c
 48335  007B16  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 48336  007B18  6EEA               	movwf	fsr0h,c
 48337  007B1A  50EF               	movf	indf0,w,c
 48338  007B1C  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
 48339  007B1E  6EDF               	movwf	indf2,c
 48340                           
 48341                           ; BSR set to: 0
 48342  007B20  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
 48343  007B22  D7DD               	goto	l17882
 48344  007B24                     __end_of_GenerateSubkey:
 48345                           	opt stack 0
 48346                           tosu	equ	0xFFF
 48347                           tosh	equ	0xFFE
 48348                           tosl	equ	0xFFD
 48349                           pclath	equ	0xFFA
 48350                           tblptru	equ	0xFF8
 48351                           tblptrh	equ	0xFF7
 48352                           tblptrl	equ	0xFF6
 48353                           tablat	equ	0xFF5
 48354                           prodh	equ	0xFF4
 48355                           prodl	equ	0xFF3
 48356                           intcon	equ	0xFF2
 48357                           intcon2	equ	0xFF1
 48358                           intcon3	equ	0xFF0
 48359                           indf0	equ	0xFEF
 48360                           postinc0	equ	0xFEE
 48361                           plusw0	equ	0xFEB
 48362                           fsr0h	equ	0xFEA
 48363                           fsr0l	equ	0xFE9
 48364                           wreg	equ	0xFE8
 48365                           postinc1	equ	0xFE6
 48366                           postdec1	equ	0xFE5
 48367                           plusw1	equ	0xFE3
 48368                           fsr1h	equ	0xFE2
 48369                           fsr1l	equ	0xFE1
 48370                           indf2	equ	0xFDF
 48371                           postinc2	equ	0xFDE
 48372                           postdec2	equ	0xFDD
 48373                           plusw2	equ	0xFDB
 48374                           fsr2h	equ	0xFDA
 48375                           fsr2l	equ	0xFD9
 48376                           status	equ	0xFD8
 48377                           
 48378 ;; *************** function _FillSubKey *****************
 48379 ;; Defined at:
 48380 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 48381 ;; Parameters:    Size  Location     Type
 48382 ;;  source          2    0[BANK0 ] PTR unsigned char 
 48383 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 48384 ;;  key             2    2[BANK0 ] PTR unsigned char 
 48385 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 48386 ;;  size            1    4[BANK0 ] unsigned char 
 48387 ;; Auto vars:     Size  Location     Type
 48388 ;;  i               1    7[BANK0 ] unsigned char 
 48389 ;;  carry           1    6[BANK0 ] unsigned char 
 48390 ;; Return value:  Size  Location     Type
 48391 ;;                  1    wreg      void 
 48392 ;; Registers used:
 48393 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48394 ;; Tracked objects:
 48395 ;;		On entry : 0/0
 48396 ;;		On exit  : 0/0
 48397 ;;		Unchanged: 0/0
 48398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48399 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48400 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48402 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48403 ;;Total ram usage:        8 bytes
 48404 ;; Hardware stack levels used:    1
 48405 ;; Hardware stack levels required when called:    7
 48406 ;; This function calls:
 48407 ;;		Nothing
 48408 ;; This function is called by:
 48409 ;;		_GenerateSubkey
 48410 ;; This function uses a non-reentrant model
 48411 ;;
 48412                           
 48413                           	psect	text257
 48414  00AA2E                     __ptext257:
 48415                           	opt stack 0
 48416  00AA2E                     _FillSubKey:
 48417                           	opt stack 19
 48418                           
 48419                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 48420                           
 48421                           ;incstack = 0
 48422  00AA2E  0E00               	movlw	0
 48423  00AA30  0100               	movlb	0	; () banked
 48424  00AA32  6F67               	movwf	FillSubKey@i& (0+255),b
 48425                           
 48426                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 48427  00AA34  0E00               	movlw	0
 48428  00AA36  6F66               	movwf	FillSubKey@carry& (0+255),b
 48429                           
 48430                           ; BSR set to: 0
 48431                           ;lorawan_aes_cmac.c: 172: i=size;
 48432  00AA38  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 48433                           
 48434                           ;lorawan_aes_cmac.c: 174: while(i--)
 48435  00AA3C  D024               	goto	l404
 48436  00AA3E                     
 48437                           ; BSR set to: 0
 48438                           ;lorawan_aes_cmac.c: 175: {
 48439                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 48440                           
 48441                           ; BSR set to: 0
 48442  00AA3E  5167               	movf	FillSubKey@i& (0+255),w,b
 48443  00AA40  0D01               	mullw	1
 48444  00AA42  50F3               	movf	prodl,w,c
 48445  00AA44  2562               	addwf	FillSubKey@key& (0+255),w,b
 48446  00AA46  6ED9               	movwf	fsr2l,c
 48447  00AA48  50F4               	movf	prodh,w,c
 48448  00AA4A  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 48449  00AA4C  6EDA               	movwf	fsr2h,c
 48450  00AA4E  5167               	movf	FillSubKey@i& (0+255),w,b
 48451  00AA50  0D01               	mullw	1
 48452  00AA52  50F3               	movf	prodl,w,c
 48453  00AA54  2560               	addwf	FillSubKey@source& (0+255),w,b
 48454  00AA56  6EE9               	movwf	fsr0l,c
 48455  00AA58  50F4               	movf	prodh,w,c
 48456  00AA5A  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 48457  00AA5C  6EEA               	movwf	fsr0h,c
 48458  00AA5E  50EF               	movf	indf0,w,c
 48459  00AA60  6F65               	movwf	??_FillSubKey& (0+255),b
 48460  00AA62  90D8               	bcf	status,0,c
 48461  00AA64  3565               	rlcf	??_FillSubKey& (0+255),w,b
 48462  00AA66  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 48463  00AA68  6EDF               	movwf	indf2,c
 48464                           
 48465                           ; BSR set to: 0
 48466                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 48467  00AA6A  5167               	movf	FillSubKey@i& (0+255),w,b
 48468  00AA6C  0D01               	mullw	1
 48469  00AA6E  50F3               	movf	prodl,w,c
 48470  00AA70  2560               	addwf	FillSubKey@source& (0+255),w,b
 48471  00AA72  6ED9               	movwf	fsr2l,c
 48472  00AA74  50F4               	movf	prodh,w,c
 48473  00AA76  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 48474  00AA78  6EDA               	movwf	fsr2h,c
 48475  00AA7A  AEDF               	btfss	indf2,7,c
 48476  00AA7C  D002               	goto	u19210
 48477  00AA7E  0E01               	movlw	1
 48478  00AA80  D001               	goto	u19220
 48479  00AA82                     u19210:
 48480  00AA82  0E00               	movlw	0
 48481  00AA84                     u19220:
 48482  00AA84  6F66               	movwf	FillSubKey@carry& (0+255),b
 48483  00AA86                     l404:
 48484                           
 48485                           ; BSR set to: 0
 48486                           
 48487                           ; BSR set to: 0
 48488  00AA86  0767               	decf	FillSubKey@i& (0+255),f,b
 48489  00AA88  2967               	incf	FillSubKey@i& (0+255),w,b
 48490  00AA8A  B4D8               	btfsc	status,2,c
 48491  00AA8C  0012               	return	
 48492  00AA8E  D7D7               	goto	l405
 48493  00AA90                     __end_of_FillSubKey:
 48494                           	opt stack 0
 48495                           tosu	equ	0xFFF
 48496                           tosh	equ	0xFFE
 48497                           tosl	equ	0xFFD
 48498                           pclath	equ	0xFFA
 48499                           tblptru	equ	0xFF8
 48500                           tblptrh	equ	0xFF7
 48501                           tblptrl	equ	0xFF6
 48502                           tablat	equ	0xFF5
 48503                           prodh	equ	0xFF4
 48504                           prodl	equ	0xFF3
 48505                           intcon	equ	0xFF2
 48506                           intcon2	equ	0xFF1
 48507                           intcon3	equ	0xFF0
 48508                           indf0	equ	0xFEF
 48509                           postinc0	equ	0xFEE
 48510                           plusw0	equ	0xFEB
 48511                           fsr0h	equ	0xFEA
 48512                           fsr0l	equ	0xFE9
 48513                           wreg	equ	0xFE8
 48514                           postinc1	equ	0xFE6
 48515                           postdec1	equ	0xFE5
 48516                           plusw1	equ	0xFE3
 48517                           fsr1h	equ	0xFE2
 48518                           fsr1l	equ	0xFE1
 48519                           indf2	equ	0xFDF
 48520                           postinc2	equ	0xFDE
 48521                           postdec2	equ	0xFDD
 48522                           plusw2	equ	0xFDB
 48523                           fsr2h	equ	0xFDA
 48524                           fsr2l	equ	0xFD9
 48525                           status	equ	0xFD8
 48526                           
 48527 ;; *************** function _AESEncodeLoRa *****************
 48528 ;; Defined at:
 48529 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 48530 ;; Parameters:    Size  Location     Type
 48531 ;;  block           2   29[BANK0 ] PTR unsigned char 
 48532 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 48533 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 48534 ;;		 -> AESCmac@x(16), 
 48535 ;;  key             2   31[BANK0 ] PTR unsigned char 
 48536 ;;		 -> loRa.activationParameters(105), loRa(245), 
 48537 ;; Auto vars:     Size  Location     Type
 48538 ;;  useKey         16   33[BANK0 ] unsigned char [16]
 48539 ;; Return value:  Size  Location     Type
 48540 ;;                  1    wreg      void 
 48541 ;; Registers used:
 48542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48543 ;; Tracked objects:
 48544 ;;		On entry : 0/0
 48545 ;;		On exit  : 0/0
 48546 ;;		Unchanged: 0/0
 48547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48549 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48551 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48552 ;;Total ram usage:       20 bytes
 48553 ;; Hardware stack levels used:    1
 48554 ;; Hardware stack levels required when called:    9
 48555 ;; This function calls:
 48556 ;;		_AESEncode
 48557 ;;		_memcpy
 48558 ;; This function is called by:
 48559 ;;		_AESCmac
 48560 ;;		_GenerateSubkey
 48561 ;;		_LORAWAN_RxDone
 48562 ;;		_ComputeSessionKeys
 48563 ;;		_EncryptFRMPayload
 48564 ;; This function uses a non-reentrant model
 48565 ;;
 48566                           
 48567                           	psect	text258
 48568  00B7EC                     __ptext258:
 48569                           	opt stack 0
 48570  00B7EC                     _AESEncodeLoRa:
 48571                           	opt stack 18
 48572                           
 48573                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 48574                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 48575                           
 48576                           ; BSR set to: 0
 48577                           ;incstack = 0
 48578  00B7EC  0E81               	movlw	low AESEncodeLoRa@useKey
 48579  00B7EE  0100               	movlb	0	; () banked
 48580  00B7F0  6F60               	movwf	memcpy@d1& (0+255),b
 48581  00B7F2  0E00               	movlw	high AESEncodeLoRa@useKey
 48582  00B7F4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 48583  00B7F6  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 48584  00B7FA  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 48585  00B7FE  0E00               	movlw	0
 48586  00B800  6F65               	movwf	(memcpy@n+1)& (0+255),b
 48587  00B802  0E10               	movlw	16
 48588  00B804  6F64               	movwf	memcpy@n& (0+255),b
 48589  00B806  ECA9  F055         	call	_memcpy	;wreg free
 48590                           
 48591                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 48592  00B80A  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
 48593  00B80E  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 48594  00B812  0E81               	movlw	low AESEncodeLoRa@useKey
 48595  00B814  0100               	movlb	0	; () banked
 48596  00B816  6F68               	movwf	AESEncode@key& (0+255),b
 48597  00B818  0E00               	movlw	high AESEncodeLoRa@useKey
 48598  00B81A  6F69               	movwf	(AESEncode@key+1)& (0+255),b
 48599  00B81C  ECAE  F022         	call	_AESEncode	;wreg free
 48600  00B820  0012               	return		;funcret
 48601  00B822                     __end_of_AESEncodeLoRa:
 48602                           	opt stack 0
 48603                           tosu	equ	0xFFF
 48604                           tosh	equ	0xFFE
 48605                           tosl	equ	0xFFD
 48606                           pclath	equ	0xFFA
 48607                           tblptru	equ	0xFF8
 48608                           tblptrh	equ	0xFF7
 48609                           tblptrl	equ	0xFF6
 48610                           tablat	equ	0xFF5
 48611                           prodh	equ	0xFF4
 48612                           prodl	equ	0xFF3
 48613                           intcon	equ	0xFF2
 48614                           intcon2	equ	0xFF1
 48615                           intcon3	equ	0xFF0
 48616                           indf0	equ	0xFEF
 48617                           postinc0	equ	0xFEE
 48618                           plusw0	equ	0xFEB
 48619                           fsr0h	equ	0xFEA
 48620                           fsr0l	equ	0xFE9
 48621                           wreg	equ	0xFE8
 48622                           postinc1	equ	0xFE6
 48623                           postdec1	equ	0xFE5
 48624                           plusw1	equ	0xFE3
 48625                           fsr1h	equ	0xFE2
 48626                           fsr1l	equ	0xFE1
 48627                           indf2	equ	0xFDF
 48628                           postinc2	equ	0xFDE
 48629                           postdec2	equ	0xFDD
 48630                           plusw2	equ	0xFDB
 48631                           fsr2h	equ	0xFDA
 48632                           fsr2l	equ	0xFD9
 48633                           status	equ	0xFD8
 48634                           
 48635 ;; *************** function _AESEncode *****************
 48636 ;; Defined at:
 48637 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 48638 ;; Parameters:    Size  Location     Type
 48639 ;;  block           2    6[BANK0 ] PTR unsigned char 
 48640 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 48641 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 48642 ;;		 -> AESCmac@x(16), 
 48643 ;;  key             2    8[BANK0 ] PTR unsigned char 
 48644 ;;		 -> AESEncodeLoRa@useKey(16), 
 48645 ;; Auto vars:     Size  Location     Type
 48646 ;;  aux3            1   27[BANK0 ] unsigned char 
 48647 ;;  aux1            1   26[BANK0 ] unsigned char 
 48648 ;;  aux2            1   25[BANK0 ] unsigned char 
 48649 ;;  aux             1   24[BANK0 ] unsigned char 
 48650 ;;  i               1   28[BANK0 ] unsigned char 
 48651 ;;  temp            1    0        unsigned char 
 48652 ;; Return value:  Size  Location     Type
 48653 ;;                  1    wreg      void 
 48654 ;; Registers used:
 48655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48656 ;; Tracked objects:
 48657 ;;		On entry : 0/0
 48658 ;;		On exit  : 0/0
 48659 ;;		Unchanged: 0/0
 48660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48662 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48663 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48664 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48665 ;;Total ram usage:       23 bytes
 48666 ;; Hardware stack levels used:    1
 48667 ;; Hardware stack levels required when called:    8
 48668 ;; This function calls:
 48669 ;;		_EncKeySchedule
 48670 ;;		_EncodeShiftRow
 48671 ;; This function is called by:
 48672 ;;		_AESEncodeLoRa
 48673 ;; This function uses a non-reentrant model
 48674 ;;
 48675                           
 48676                           	psect	text259
 48677  00455C                     __ptext259:
 48678                           	opt stack 0
 48679  00455C                     _AESEncode:
 48680                           	opt stack 18
 48681                           
 48682                           ;AES.c: 250: unsigned char i;
 48683                           ;AES.c: 251: unsigned char temp;
 48684                           ;AES.c: 254: _roundCounter = 10;
 48685                           
 48686                           ;incstack = 0
 48687  00455C  0E0A               	movlw	10
 48688  00455E  0101               	movlb	1	; () banked
 48689  004560  6F33               	movwf	__roundCounter& (0+255),b
 48690                           
 48691                           ;AES.c: 256: _rcon = 0x01;
 48692  004562  0E01               	movlw	1
 48693  004564  6E46               	movwf	__rcon,c
 48694                           
 48695                           ;AES.c: 259: for(i=0;i<16;i++)
 48696  004566  0E00               	movlw	0
 48697  004568  0100               	movlb	0	; () banked
 48698  00456A  6F7C               	movwf	AESEncode@i& (0+255),b
 48699  00456C                     l17380:
 48700                           
 48701                           ; BSR set to: 0
 48702  00456C  0E0F               	movlw	15
 48703  00456E  657C               	cpfsgt	AESEncode@i& (0+255),b
 48704  004570  D001               	goto	l632
 48705  004572  D016               	goto	u18970
 48706  004574                     l632:
 48707                           
 48708                           ; BSR set to: 0
 48709                           ;AES.c: 260: {
 48710                           ;AES.c: 261: block[i] ^= key[i];
 48711                           
 48712                           ; BSR set to: 0
 48713  004574  517C               	movf	AESEncode@i& (0+255),w,b
 48714  004576  0D01               	mullw	1
 48715  004578  50F3               	movf	prodl,w,c
 48716  00457A  2568               	addwf	AESEncode@key& (0+255),w,b
 48717  00457C  6ED9               	movwf	fsr2l,c
 48718  00457E  50F4               	movf	prodh,w,c
 48719  004580  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 48720  004582  6EDA               	movwf	fsr2h,c
 48721  004584  50DF               	movf	indf2,w,c
 48722  004586  6F6A               	movwf	??_AESEncode& (0+255),b
 48723  004588  517C               	movf	AESEncode@i& (0+255),w,b
 48724  00458A  0D01               	mullw	1
 48725  00458C  50F3               	movf	prodl,w,c
 48726  00458E  2566               	addwf	AESEncode@block& (0+255),w,b
 48727  004590  6ED9               	movwf	fsr2l,c
 48728  004592  50F4               	movf	prodh,w,c
 48729  004594  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48730  004596  6EDA               	movwf	fsr2h,c
 48731  004598  516A               	movf	??_AESEncode& (0+255),w,b
 48732  00459A  1ADF               	xorwf	indf2,f,c
 48733                           
 48734                           ; BSR set to: 0
 48735  00459C  2B7C               	incf	AESEncode@i& (0+255),f,b
 48736  00459E  D7E6               	goto	l17380
 48737  0045A0                     u18970:
 48738                           
 48739                           ;AES.c: 265: {
 48740                           ;AES.c: 268: for(i=0;i<16;i++)
 48741                           
 48742                           ; BSR set to: 0
 48743                           
 48744                           ;AES.c: 262: }
 48745                           ;AES.c: 264: do
 48746                           
 48747                           ; BSR set to: 0
 48748  0045A0  0E00               	movlw	0
 48749  0045A2  0100               	movlb	0	; () banked
 48750  0045A4  6F7C               	movwf	AESEncode@i& (0+255),b
 48751  0045A6                     l17392:
 48752                           
 48753                           ; BSR set to: 0
 48754  0045A6  0E0F               	movlw	15
 48755  0045A8  657C               	cpfsgt	AESEncode@i& (0+255),b
 48756  0045AA  D001               	goto	l635
 48757  0045AC  D022               	goto	u18990
 48758  0045AE                     l635:
 48759                           
 48760                           ; BSR set to: 0
 48761                           ;AES.c: 269: {
 48762                           ;AES.c: 270: block[i]=STable[block[i]];
 48763                           
 48764                           ; BSR set to: 0
 48765  0045AE  517C               	movf	AESEncode@i& (0+255),w,b
 48766  0045B0  0D01               	mullw	1
 48767  0045B2  50F3               	movf	prodl,w,c
 48768  0045B4  2566               	addwf	AESEncode@block& (0+255),w,b
 48769  0045B6  6ED9               	movwf	fsr2l,c
 48770  0045B8  50F4               	movf	prodh,w,c
 48771  0045BA  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48772  0045BC  6EDA               	movwf	fsr2h,c
 48773  0045BE  50DF               	movf	indf2,w,c
 48774  0045C0  6F6A               	movwf	??_AESEncode& (0+255),b
 48775  0045C2  516A               	movf	??_AESEncode& (0+255),w,b
 48776  0045C4  0D01               	mullw	1
 48777  0045C6  0E3F               	movlw	low _STable
 48778  0045C8  24F3               	addwf	prodl,w,c
 48779  0045CA  6EF6               	movwf	tblptrl,c
 48780  0045CC  0EFD               	movlw	high _STable
 48781  0045CE  20F4               	addwfc	prodh,w,c
 48782  0045D0  6EF7               	movwf	tblptrh,c
 48783  0045D2                     	if	1	;There are 3 active tblptr bytes
 48784  0045D2  6AF8               	clrf	tblptru,c
 48785  0045D4  0E00               	movlw	low (__mediumconst shr (0+16))
 48786  0045D6  22F8               	addwfc	tblptru,f,c
 48787  0045D8                     	endif
 48788  0045D8  517C               	movf	AESEncode@i& (0+255),w,b
 48789  0045DA  0D01               	mullw	1
 48790  0045DC  50F3               	movf	prodl,w,c
 48791  0045DE  2566               	addwf	AESEncode@block& (0+255),w,b
 48792  0045E0  6ED9               	movwf	fsr2l,c
 48793  0045E2  50F4               	movf	prodh,w,c
 48794  0045E4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48795  0045E6  6EDA               	movwf	fsr2h,c
 48796  0045E8  0008               	tblrd		*
 48797  0045EA  CFF5 FFDF          	movff	tablat,indf2
 48798                           
 48799                           ; BSR set to: 0
 48800  0045EE  2B7C               	incf	AESEncode@i& (0+255),f,b
 48801  0045F0  D7DA               	goto	l17392
 48802  0045F2                     u18990:
 48803                           
 48804                           ; BSR set to: 0
 48805                           ;AES.c: 271: }
 48806                           ;AES.c: 274: EncodeShiftRow(block);
 48807                           
 48808                           ; BSR set to: 0
 48809  0045F2  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 48810  0045F6  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 48811  0045FA  ECE4  F03A         	call	_EncodeShiftRow	;wreg free
 48812                           
 48813                           ;AES.c: 277: if(_roundCounter != 1)
 48814  0045FE  0101               	movlb	1	; () banked
 48815  004600  0533               	decf	__roundCounter& (0+255),w,b
 48816  004602  B4D8               	btfsc	status,2,c
 48817  004604  D127               	goto	u19050
 48818                           
 48819                           ; BSR set to: 1
 48820                           ;AES.c: 278: {
 48821                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
 48822                           ;AES.c: 281: for(i=0;i<16;i+=4)
 48823  004606  0E00               	movlw	0
 48824  004608  0100               	movlb	0	; () banked
 48825  00460A  6F7C               	movwf	AESEncode@i& (0+255),b
 48826  00460C                     l17408:
 48827                           
 48828                           ; BSR set to: 0
 48829  00460C  0E0F               	movlw	15
 48830  00460E  657C               	cpfsgt	AESEncode@i& (0+255),b
 48831  004610  D001               	goto	l638
 48832  004612  D120               	goto	u19050
 48833  004614                     l638:
 48834                           
 48835                           ; BSR set to: 0
 48836                           ;AES.c: 282: {
 48837                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 48838                           
 48839                           ; BSR set to: 0
 48840  004614  517C               	movf	AESEncode@i& (0+255),w,b
 48841  004616  6F6A               	movwf	??_AESEncode& (0+255),b
 48842  004618  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48843  00461A  0E01               	movlw	1
 48844  00461C  276A               	addwf	??_AESEncode& (0+255),f,b
 48845  00461E  0E00               	movlw	0
 48846  004620  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48847  004622  516A               	movf	??_AESEncode& (0+255),w,b
 48848  004624  2566               	addwf	AESEncode@block& (0+255),w,b
 48849  004626  6ED9               	movwf	fsr2l,c
 48850  004628  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48851  00462A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48852  00462C  6EDA               	movwf	fsr2h,c
 48853  00462E  50DF               	movf	indf2,w,c
 48854  004630  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 48855  004632  517C               	movf	AESEncode@i& (0+255),w,b
 48856  004634  2566               	addwf	AESEncode@block& (0+255),w,b
 48857  004636  6ED9               	movwf	fsr2l,c
 48858  004638  0E00               	movlw	0
 48859  00463A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48860  00463C  6EDA               	movwf	fsr2h,c
 48861  00463E  50DF               	movf	indf2,w,c
 48862  004640  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 48863  004642  6F7A               	movwf	AESEncode@aux1& (0+255),b
 48864                           
 48865                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 48866  004644  517C               	movf	AESEncode@i& (0+255),w,b
 48867  004646  6F6A               	movwf	??_AESEncode& (0+255),b
 48868  004648  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48869  00464A  0E03               	movlw	3
 48870  00464C  276A               	addwf	??_AESEncode& (0+255),f,b
 48871  00464E  0E00               	movlw	0
 48872  004650  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48873  004652  516A               	movf	??_AESEncode& (0+255),w,b
 48874  004654  2566               	addwf	AESEncode@block& (0+255),w,b
 48875  004656  6ED9               	movwf	fsr2l,c
 48876  004658  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48877  00465A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48878  00465C  6EDA               	movwf	fsr2h,c
 48879  00465E  50DF               	movf	indf2,w,c
 48880  004660  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 48881  004662  517C               	movf	AESEncode@i& (0+255),w,b
 48882  004664  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 48883  004666  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 48884  004668  0E02               	movlw	2
 48885  00466A  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 48886  00466C  0E00               	movlw	0
 48887  00466E  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 48888  004670  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 48889  004672  2566               	addwf	AESEncode@block& (0+255),w,b
 48890  004674  6ED9               	movwf	fsr2l,c
 48891  004676  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 48892  004678  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48893  00467A  6EDA               	movwf	fsr2h,c
 48894  00467C  50DF               	movf	indf2,w,c
 48895  00467E  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 48896  004680  6F7B               	movwf	AESEncode@aux3& (0+255),b
 48897                           
 48898                           ; BSR set to: 0
 48899                           ;AES.c: 285: aux = aux1 ^ aux3;
 48900  004682  517A               	movf	AESEncode@aux1& (0+255),w,b
 48901  004684  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 48902  004686  6F78               	movwf	AESEncode@aux& (0+255),b
 48903                           
 48904                           ; BSR set to: 0
 48905                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 48906  004688  517C               	movf	AESEncode@i& (0+255),w,b
 48907  00468A  6F6A               	movwf	??_AESEncode& (0+255),b
 48908  00468C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48909  00468E  0E01               	movlw	1
 48910  004690  276A               	addwf	??_AESEncode& (0+255),f,b
 48911  004692  0E00               	movlw	0
 48912  004694  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 48913  004696  516A               	movf	??_AESEncode& (0+255),w,b
 48914  004698  2566               	addwf	AESEncode@block& (0+255),w,b
 48915  00469A  6ED9               	movwf	fsr2l,c
 48916  00469C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48917  00469E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48918  0046A0  6EDA               	movwf	fsr2h,c
 48919  0046A2  50DF               	movf	indf2,w,c
 48920  0046A4  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 48921  0046A6  517C               	movf	AESEncode@i& (0+255),w,b
 48922  0046A8  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
 48923  0046AA  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
 48924  0046AC  0E02               	movlw	2
 48925  0046AE  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
 48926  0046B0  0E00               	movlw	0
 48927  0046B2  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
 48928  0046B4  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 48929  0046B6  2566               	addwf	AESEncode@block& (0+255),w,b
 48930  0046B8  6ED9               	movwf	fsr2l,c
 48931  0046BA  516E               	movf	(??_AESEncode+4)& (0+255),w,b
 48932  0046BC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 48933  0046BE  6EDA               	movwf	fsr2h,c
 48934  0046C0  50DF               	movf	indf2,w,c
 48935  0046C2  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
 48936  0046C4  6F79               	movwf	AESEncode@aux2& (0+255),b
 48937                           
 48938                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 48939  0046C6  0E7F               	movlw	127
 48940  0046C8  657A               	cpfsgt	AESEncode@aux1& (0+255),b
 48941  0046CA  D00C               	goto	l641
 48942                           
 48943                           ; BSR set to: 0
 48944  0046CC  0E1B               	movlw	27
 48945  0046CE  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
 48946  0046D2  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48947  0046D4  90D8               	bcf	status,0,c
 48948  0046D6  376A               	rlcf	??_AESEncode& (0+255),f,b
 48949  0046D8  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 48950  0046DA  196A               	xorwf	??_AESEncode& (0+255),w,b
 48951  0046DC  6F72               	movwf	_AESEncode$909& (0+255),b
 48952  0046DE  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48953  0046E0  6F73               	movwf	(_AESEncode$909+1)& (0+255),b
 48954  0046E2  D005               	goto	l643
 48955  0046E4                     l641:
 48956                           
 48957                           ; BSR set to: 0
 48958                           
 48959                           ; BSR set to: 0
 48960  0046E4  90D8               	bcf	status,0,c
 48961  0046E6  357A               	rlcf	AESEncode@aux1& (0+255),w,b
 48962  0046E8  6F72               	movwf	_AESEncode$909& (0+255),b
 48963  0046EA  6B73               	clrf	(_AESEncode$909+1)& (0+255),b
 48964  0046EC  3773               	rlcf	(_AESEncode$909+1)& (0+255),f,b
 48965  0046EE                     l643:
 48966                           
 48967                           ; BSR set to: 0
 48968                           
 48969                           ; BSR set to: 0
 48970  0046EE  C072  F07A         	movff	_AESEncode$909,AESEncode@aux1
 48971                           
 48972                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 48973  0046F2  0E7F               	movlw	127
 48974  0046F4  6579               	cpfsgt	AESEncode@aux2& (0+255),b
 48975  0046F6  D00C               	goto	l645
 48976                           
 48977                           ; BSR set to: 0
 48978  0046F8  0E1B               	movlw	27
 48979  0046FA  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
 48980  0046FE  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 48981  004700  90D8               	bcf	status,0,c
 48982  004702  376A               	rlcf	??_AESEncode& (0+255),f,b
 48983  004704  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 48984  004706  196A               	xorwf	??_AESEncode& (0+255),w,b
 48985  004708  6F74               	movwf	_AESEncode$910& (0+255),b
 48986  00470A  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 48987  00470C  6F75               	movwf	(_AESEncode$910+1)& (0+255),b
 48988  00470E  D005               	goto	l647
 48989  004710                     l645:
 48990                           
 48991                           ; BSR set to: 0
 48992                           
 48993                           ; BSR set to: 0
 48994  004710  90D8               	bcf	status,0,c
 48995  004712  3579               	rlcf	AESEncode@aux2& (0+255),w,b
 48996  004714  6F74               	movwf	_AESEncode$910& (0+255),b
 48997  004716  6B75               	clrf	(_AESEncode$910+1)& (0+255),b
 48998  004718  3775               	rlcf	(_AESEncode$910+1)& (0+255),f,b
 48999  00471A                     l647:
 49000                           
 49001                           ; BSR set to: 0
 49002                           
 49003                           ; BSR set to: 0
 49004  00471A  C074  F079         	movff	_AESEncode$910,AESEncode@aux2
 49005                           
 49006                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 49007  00471E  0E7F               	movlw	127
 49008  004720  657B               	cpfsgt	AESEncode@aux3& (0+255),b
 49009  004722  D00C               	goto	l649
 49010                           
 49011                           ; BSR set to: 0
 49012  004724  0E1B               	movlw	27
 49013  004726  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
 49014  00472A  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49015  00472C  90D8               	bcf	status,0,c
 49016  00472E  376A               	rlcf	??_AESEncode& (0+255),f,b
 49017  004730  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
 49018  004732  196A               	xorwf	??_AESEncode& (0+255),w,b
 49019  004734  6F76               	movwf	_AESEncode$911& (0+255),b
 49020  004736  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49021  004738  6F77               	movwf	(_AESEncode$911+1)& (0+255),b
 49022  00473A  D005               	goto	l651
 49023  00473C                     l649:
 49024                           
 49025                           ; BSR set to: 0
 49026                           
 49027                           ; BSR set to: 0
 49028  00473C  90D8               	bcf	status,0,c
 49029  00473E  357B               	rlcf	AESEncode@aux3& (0+255),w,b
 49030  004740  6F76               	movwf	_AESEncode$911& (0+255),b
 49031  004742  6B77               	clrf	(_AESEncode$911+1)& (0+255),b
 49032  004744  3777               	rlcf	(_AESEncode$911+1)& (0+255),f,b
 49033  004746                     l651:
 49034                           
 49035                           ; BSR set to: 0
 49036                           
 49037                           ; BSR set to: 0
 49038  004746  C076  F07B         	movff	_AESEncode$911,AESEncode@aux3
 49039                           
 49040                           ; BSR set to: 0
 49041                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 49042  00474A  517C               	movf	AESEncode@i& (0+255),w,b
 49043  00474C  2566               	addwf	AESEncode@block& (0+255),w,b
 49044  00474E  6ED9               	movwf	fsr2l,c
 49045  004750  0E00               	movlw	0
 49046  004752  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49047  004754  6EDA               	movwf	fsr2h,c
 49048  004756  517C               	movf	AESEncode@i& (0+255),w,b
 49049  004758  2566               	addwf	AESEncode@block& (0+255),w,b
 49050  00475A  6EE9               	movwf	fsr0l,c
 49051  00475C  0E00               	movlw	0
 49052  00475E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49053  004760  6EEA               	movwf	fsr0h,c
 49054  004762  50EF               	movf	indf0,w,c
 49055  004764  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49056  004766  197A               	xorwf	AESEncode@aux1& (0+255),w,b
 49057  004768  6EDF               	movwf	indf2,c
 49058                           
 49059                           ; BSR set to: 0
 49060                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 49061  00476A  517C               	movf	AESEncode@i& (0+255),w,b
 49062  00476C  6F6A               	movwf	??_AESEncode& (0+255),b
 49063  00476E  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49064  004770  0E01               	movlw	1
 49065  004772  276A               	addwf	??_AESEncode& (0+255),f,b
 49066  004774  0E00               	movlw	0
 49067  004776  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49068  004778  516A               	movf	??_AESEncode& (0+255),w,b
 49069  00477A  2566               	addwf	AESEncode@block& (0+255),w,b
 49070  00477C  6ED9               	movwf	fsr2l,c
 49071  00477E  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49072  004780  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49073  004782  6EDA               	movwf	fsr2h,c
 49074  004784  517C               	movf	AESEncode@i& (0+255),w,b
 49075  004786  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49076  004788  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49077  00478A  0E01               	movlw	1
 49078  00478C  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49079  00478E  0E00               	movlw	0
 49080  004790  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49081  004792  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49082  004794  2566               	addwf	AESEncode@block& (0+255),w,b
 49083  004796  6EE9               	movwf	fsr0l,c
 49084  004798  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49085  00479A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49086  00479C  6EEA               	movwf	fsr0h,c
 49087  00479E  50EF               	movf	indf0,w,c
 49088  0047A0  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49089  0047A2  1979               	xorwf	AESEncode@aux2& (0+255),w,b
 49090  0047A4  6EDF               	movwf	indf2,c
 49091                           
 49092                           ; BSR set to: 0
 49093                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 49094  0047A6  517C               	movf	AESEncode@i& (0+255),w,b
 49095  0047A8  6F6A               	movwf	??_AESEncode& (0+255),b
 49096  0047AA  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49097  0047AC  0E02               	movlw	2
 49098  0047AE  276A               	addwf	??_AESEncode& (0+255),f,b
 49099  0047B0  0E00               	movlw	0
 49100  0047B2  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49101  0047B4  516A               	movf	??_AESEncode& (0+255),w,b
 49102  0047B6  2566               	addwf	AESEncode@block& (0+255),w,b
 49103  0047B8  6ED9               	movwf	fsr2l,c
 49104  0047BA  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49105  0047BC  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49106  0047BE  6EDA               	movwf	fsr2h,c
 49107  0047C0  517C               	movf	AESEncode@i& (0+255),w,b
 49108  0047C2  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49109  0047C4  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49110  0047C6  0E02               	movlw	2
 49111  0047C8  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49112  0047CA  0E00               	movlw	0
 49113  0047CC  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49114  0047CE  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49115  0047D0  2566               	addwf	AESEncode@block& (0+255),w,b
 49116  0047D2  6EE9               	movwf	fsr0l,c
 49117  0047D4  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49118  0047D6  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49119  0047D8  6EEA               	movwf	fsr0h,c
 49120  0047DA  50EF               	movf	indf0,w,c
 49121  0047DC  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49122  0047DE  197B               	xorwf	AESEncode@aux3& (0+255),w,b
 49123  0047E0  6EDF               	movwf	indf2,c
 49124                           
 49125                           ; BSR set to: 0
 49126                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 49127  0047E2  517C               	movf	AESEncode@i& (0+255),w,b
 49128  0047E4  6F6A               	movwf	??_AESEncode& (0+255),b
 49129  0047E6  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
 49130  0047E8  0E03               	movlw	3
 49131  0047EA  276A               	addwf	??_AESEncode& (0+255),f,b
 49132  0047EC  0E00               	movlw	0
 49133  0047EE  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
 49134  0047F0  516A               	movf	??_AESEncode& (0+255),w,b
 49135  0047F2  2566               	addwf	AESEncode@block& (0+255),w,b
 49136  0047F4  6ED9               	movwf	fsr2l,c
 49137  0047F6  516B               	movf	(??_AESEncode+1)& (0+255),w,b
 49138  0047F8  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49139  0047FA  6EDA               	movwf	fsr2h,c
 49140  0047FC  517C               	movf	AESEncode@i& (0+255),w,b
 49141  0047FE  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
 49142  004800  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
 49143  004802  0E02               	movlw	2
 49144  004804  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
 49145  004806  0E00               	movlw	0
 49146  004808  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
 49147  00480A  516C               	movf	(??_AESEncode+2)& (0+255),w,b
 49148  00480C  2566               	addwf	AESEncode@block& (0+255),w,b
 49149  00480E  6EE9               	movwf	fsr0l,c
 49150  004810  516D               	movf	(??_AESEncode+3)& (0+255),w,b
 49151  004812  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49152  004814  6EEA               	movwf	fsr0h,c
 49153  004816  50EF               	movf	indf0,w,c
 49154  004818  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
 49155  00481A  517C               	movf	AESEncode@i& (0+255),w,b
 49156  00481C  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
 49157  00481E  6B70               	clrf	(??_AESEncode+6)& (0+255),b
 49158  004820  0E01               	movlw	1
 49159  004822  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
 49160  004824  0E00               	movlw	0
 49161  004826  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
 49162  004828  516F               	movf	(??_AESEncode+5)& (0+255),w,b
 49163  00482A  2566               	addwf	AESEncode@block& (0+255),w,b
 49164  00482C  6EE9               	movwf	fsr0l,c
 49165  00482E  5170               	movf	(??_AESEncode+6)& (0+255),w,b
 49166  004830  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49167  004832  6EEA               	movwf	fsr0h,c
 49168  004834  50EF               	movf	indf0,w,c
 49169  004836  6F71               	movwf	(??_AESEncode+7)& (0+255),b
 49170  004838  517C               	movf	AESEncode@i& (0+255),w,b
 49171  00483A  2566               	addwf	AESEncode@block& (0+255),w,b
 49172  00483C  6EE9               	movwf	fsr0l,c
 49173  00483E  0E00               	movlw	0
 49174  004840  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49175  004842  6EEA               	movwf	fsr0h,c
 49176  004844  50EF               	movf	indf0,w,c
 49177  004846  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
 49178  004848  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
 49179  00484A  1978               	xorwf	AESEncode@aux& (0+255),w,b
 49180  00484C  6EDF               	movwf	indf2,c
 49181  00484E  0E04               	movlw	4
 49182  004850  277C               	addwf	AESEncode@i& (0+255),f,b
 49183  004852  D6DC               	goto	l17408
 49184  004854                     u19050:
 49185                           
 49186                           ;AES.c: 296: }
 49187                           ;AES.c: 297: }
 49188                           ;AES.c: 299: EncKeySchedule(key);
 49189                           
 49190                           ; BSR set to: 0
 49191                           
 49192                           ; BSR set to: 0
 49193  004854  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
 49194  004858  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 49195  00485C  EC0E  F02A         	call	_EncKeySchedule	;wreg free
 49196                           
 49197                           ;AES.c: 302: for(i=0;i<16;i++)
 49198  004860  0E00               	movlw	0
 49199  004862  0100               	movlb	0	; () banked
 49200  004864  6F7C               	movwf	AESEncode@i& (0+255),b
 49201  004866                     l17448:
 49202                           
 49203                           ; BSR set to: 0
 49204  004866  0E0F               	movlw	15
 49205  004868  657C               	cpfsgt	AESEncode@i& (0+255),b
 49206  00486A  D001               	goto	l652
 49207  00486C  D016               	goto	u19070
 49208  00486E                     l652:
 49209                           
 49210                           ; BSR set to: 0
 49211                           ;AES.c: 303: {
 49212                           ;AES.c: 304: block[i] ^= key[i];
 49213                           
 49214                           ; BSR set to: 0
 49215  00486E  517C               	movf	AESEncode@i& (0+255),w,b
 49216  004870  0D01               	mullw	1
 49217  004872  50F3               	movf	prodl,w,c
 49218  004874  2568               	addwf	AESEncode@key& (0+255),w,b
 49219  004876  6ED9               	movwf	fsr2l,c
 49220  004878  50F4               	movf	prodh,w,c
 49221  00487A  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
 49222  00487C  6EDA               	movwf	fsr2h,c
 49223  00487E  50DF               	movf	indf2,w,c
 49224  004880  6F6A               	movwf	??_AESEncode& (0+255),b
 49225  004882  517C               	movf	AESEncode@i& (0+255),w,b
 49226  004884  0D01               	mullw	1
 49227  004886  50F3               	movf	prodl,w,c
 49228  004888  2566               	addwf	AESEncode@block& (0+255),w,b
 49229  00488A  6ED9               	movwf	fsr2l,c
 49230  00488C  50F4               	movf	prodh,w,c
 49231  00488E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
 49232  004890  6EDA               	movwf	fsr2h,c
 49233  004892  516A               	movf	??_AESEncode& (0+255),w,b
 49234  004894  1ADF               	xorwf	indf2,f,c
 49235                           
 49236                           ; BSR set to: 0
 49237  004896  2B7C               	incf	AESEncode@i& (0+255),f,b
 49238  004898  D7E6               	goto	l17448
 49239  00489A                     u19070:
 49240                           
 49241                           ; BSR set to: 0
 49242                           ;AES.c: 305: }
 49243                           ;AES.c: 307: _roundCounter--;
 49244                           
 49245                           ; BSR set to: 0
 49246  00489A  0101               	movlb	1	; () banked
 49247  00489C  0733               	decf	__roundCounter& (0+255),f,b
 49248                           
 49249                           ; BSR set to: 1
 49250                           ;AES.c: 308: }
 49251                           ;AES.c: 309: while(_roundCounter !=0);
 49252  00489E  5133               	movf	__roundCounter& (0+255),w,b
 49253  0048A0  B4D8               	btfsc	status,2,c
 49254  0048A2  0012               	return	
 49255  0048A4  D67D               	goto	u18970
 49256  0048A6                     __end_of_AESEncode:
 49257                           	opt stack 0
 49258                           tosu	equ	0xFFF
 49259                           tosh	equ	0xFFE
 49260                           tosl	equ	0xFFD
 49261                           pclath	equ	0xFFA
 49262                           tblptru	equ	0xFF8
 49263                           tblptrh	equ	0xFF7
 49264                           tblptrl	equ	0xFF6
 49265                           tablat	equ	0xFF5
 49266                           prodh	equ	0xFF4
 49267                           prodl	equ	0xFF3
 49268                           intcon	equ	0xFF2
 49269                           intcon2	equ	0xFF1
 49270                           intcon3	equ	0xFF0
 49271                           indf0	equ	0xFEF
 49272                           postinc0	equ	0xFEE
 49273                           plusw0	equ	0xFEB
 49274                           fsr0h	equ	0xFEA
 49275                           fsr0l	equ	0xFE9
 49276                           wreg	equ	0xFE8
 49277                           postinc1	equ	0xFE6
 49278                           postdec1	equ	0xFE5
 49279                           plusw1	equ	0xFE3
 49280                           fsr1h	equ	0xFE2
 49281                           fsr1l	equ	0xFE1
 49282                           indf2	equ	0xFDF
 49283                           postinc2	equ	0xFDE
 49284                           postdec2	equ	0xFDD
 49285                           plusw2	equ	0xFDB
 49286                           fsr2h	equ	0xFDA
 49287                           fsr2l	equ	0xFD9
 49288                           status	equ	0xFD8
 49289                           
 49290 ;; *************** function _EncodeShiftRow *****************
 49291 ;; Defined at:
 49292 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 49293 ;; Parameters:    Size  Location     Type
 49294 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 49295 ;;		 -> sp__ADC_GetConversion(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), 
 49296 ;;		 -> radioBuffer(271), loRa(245), GenerateSubkey@l(16), AESCmac@y(16), 
 49297 ;;		 -> AESCmac@x(16), 
 49298 ;; Auto vars:     Size  Location     Type
 49299 ;;  temp            1    2[BANK0 ] unsigned char 
 49300 ;; Return value:  Size  Location     Type
 49301 ;;                  1    wreg      void 
 49302 ;; Registers used:
 49303 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 49304 ;; Tracked objects:
 49305 ;;		On entry : 0/0
 49306 ;;		On exit  : 0/0
 49307 ;;		Unchanged: 0/0
 49308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49313 ;;Total ram usage:        3 bytes
 49314 ;; Hardware stack levels used:    1
 49315 ;; Hardware stack levels required when called:    7
 49316 ;; This function calls:
 49317 ;;		Nothing
 49318 ;; This function is called by:
 49319 ;;		_AESEncode
 49320 ;; This function uses a non-reentrant model
 49321 ;;
 49322                           
 49323                           	psect	text260
 49324  0075C8                     __ptext260:
 49325                           	opt stack 0
 49326  0075C8                     _EncodeShiftRow:
 49327                           	opt stack 18
 49328                           
 49329                           ;AES.c: 387: unsigned char temp;
 49330                           ;AES.c: 392: temp=stateTable[1];
 49331                           
 49332                           ; BSR set to: 1
 49333                           ;incstack = 0
 49334  0075C8  0100               	movlb	0	; () banked
 49335  0075CA  EE20 F001          	lfsr	2,1
 49336  0075CE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49337  0075D0  26D9               	addwf	fsr2l,f,c
 49338  0075D2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49339  0075D4  22DA               	addwfc	fsr2h,f,c
 49340  0075D6  50DF               	movf	indf2,w,c
 49341  0075D8  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49342                           
 49343                           ; BSR set to: 0
 49344                           ;AES.c: 393: stateTable[1]=stateTable[5];
 49345  0075DA  EE20 F005          	lfsr	2,5
 49346  0075DE  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49347  0075E0  26D9               	addwf	fsr2l,f,c
 49348  0075E2  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49349  0075E4  22DA               	addwfc	fsr2h,f,c
 49350  0075E6  EE00 F001          	lfsr	0,1
 49351  0075EA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49352  0075EC  26E9               	addwf	fsr0l,f,c
 49353  0075EE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49354  0075F0  22EA               	addwfc	fsr0h,f,c
 49355  0075F2  CFDF FFEF          	movff	indf2,indf0
 49356                           
 49357                           ; BSR set to: 0
 49358                           ;AES.c: 394: stateTable[5]=stateTable[9];
 49359  0075F6  EE20 F009          	lfsr	2,9
 49360  0075FA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49361  0075FC  26D9               	addwf	fsr2l,f,c
 49362  0075FE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49363  007600  22DA               	addwfc	fsr2h,f,c
 49364  007602  EE00 F005          	lfsr	0,5
 49365  007606  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49366  007608  26E9               	addwf	fsr0l,f,c
 49367  00760A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49368  00760C  22EA               	addwfc	fsr0h,f,c
 49369  00760E  CFDF FFEF          	movff	indf2,indf0
 49370                           
 49371                           ; BSR set to: 0
 49372                           ;AES.c: 395: stateTable[9]=stateTable[13];
 49373  007612  EE20 F00D          	lfsr	2,13
 49374  007616  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49375  007618  26D9               	addwf	fsr2l,f,c
 49376  00761A  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49377  00761C  22DA               	addwfc	fsr2h,f,c
 49378  00761E  EE00 F009          	lfsr	0,9
 49379  007622  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49380  007624  26E9               	addwf	fsr0l,f,c
 49381  007626  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49382  007628  22EA               	addwfc	fsr0h,f,c
 49383  00762A  CFDF FFEF          	movff	indf2,indf0
 49384                           
 49385                           ; BSR set to: 0
 49386                           ;AES.c: 396: stateTable[13]=temp;
 49387  00762E  EE20 F00D          	lfsr	2,13
 49388  007632  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49389  007634  26D9               	addwf	fsr2l,f,c
 49390  007636  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49391  007638  22DA               	addwfc	fsr2h,f,c
 49392  00763A  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49393                           
 49394                           ; BSR set to: 0
 49395                           ;AES.c: 399: temp=stateTable[2];
 49396  00763E  EE20 F002          	lfsr	2,2
 49397  007642  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49398  007644  26D9               	addwf	fsr2l,f,c
 49399  007646  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49400  007648  22DA               	addwfc	fsr2h,f,c
 49401  00764A  50DF               	movf	indf2,w,c
 49402  00764C  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49403                           
 49404                           ; BSR set to: 0
 49405                           ;AES.c: 400: stateTable[2]=stateTable[10];
 49406  00764E  EE20 F00A          	lfsr	2,10
 49407  007652  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49408  007654  26D9               	addwf	fsr2l,f,c
 49409  007656  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49410  007658  22DA               	addwfc	fsr2h,f,c
 49411  00765A  EE00 F002          	lfsr	0,2
 49412  00765E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49413  007660  26E9               	addwf	fsr0l,f,c
 49414  007662  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49415  007664  22EA               	addwfc	fsr0h,f,c
 49416  007666  CFDF FFEF          	movff	indf2,indf0
 49417                           
 49418                           ;AES.c: 401: stateTable[10]=temp;
 49419  00766A  EE20 F00A          	lfsr	2,10
 49420  00766E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49421  007670  26D9               	addwf	fsr2l,f,c
 49422  007672  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49423  007674  22DA               	addwfc	fsr2h,f,c
 49424  007676  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49425                           
 49426                           ;AES.c: 402: temp=stateTable[14];
 49427  00767A  EE20 F00E          	lfsr	2,14
 49428  00767E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49429  007680  26D9               	addwf	fsr2l,f,c
 49430  007682  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49431  007684  22DA               	addwfc	fsr2h,f,c
 49432  007686  50DF               	movf	indf2,w,c
 49433  007688  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49434                           
 49435                           ; BSR set to: 0
 49436                           ;AES.c: 403: stateTable[14]=stateTable[6];
 49437  00768A  EE20 F006          	lfsr	2,6
 49438  00768E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49439  007690  26D9               	addwf	fsr2l,f,c
 49440  007692  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49441  007694  22DA               	addwfc	fsr2h,f,c
 49442  007696  EE00 F00E          	lfsr	0,14
 49443  00769A  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49444  00769C  26E9               	addwf	fsr0l,f,c
 49445  00769E  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49446  0076A0  22EA               	addwfc	fsr0h,f,c
 49447  0076A2  CFDF FFEF          	movff	indf2,indf0
 49448                           
 49449                           ; BSR set to: 0
 49450                           ;AES.c: 404: stateTable[6]=temp;
 49451  0076A6  EE20 F006          	lfsr	2,6
 49452  0076AA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49453  0076AC  26D9               	addwf	fsr2l,f,c
 49454  0076AE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49455  0076B0  22DA               	addwfc	fsr2h,f,c
 49456  0076B2  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49457                           
 49458                           ; BSR set to: 0
 49459                           ;AES.c: 407: temp=stateTable[3];
 49460  0076B6  EE20 F003          	lfsr	2,3
 49461  0076BA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49462  0076BC  26D9               	addwf	fsr2l,f,c
 49463  0076BE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49464  0076C0  22DA               	addwfc	fsr2h,f,c
 49465  0076C2  50DF               	movf	indf2,w,c
 49466  0076C4  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 49467                           
 49468                           ; BSR set to: 0
 49469                           ;AES.c: 408: stateTable[3]=stateTable[15];
 49470  0076C6  EE20 F00F          	lfsr	2,15
 49471  0076CA  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49472  0076CC  26D9               	addwf	fsr2l,f,c
 49473  0076CE  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49474  0076D0  22DA               	addwfc	fsr2h,f,c
 49475  0076D2  EE00 F003          	lfsr	0,3
 49476  0076D6  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49477  0076D8  26E9               	addwf	fsr0l,f,c
 49478  0076DA  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49479  0076DC  22EA               	addwfc	fsr0h,f,c
 49480  0076DE  CFDF FFEF          	movff	indf2,indf0
 49481                           
 49482                           ; BSR set to: 0
 49483                           ;AES.c: 409: stateTable[15]=stateTable[11];
 49484  0076E2  EE20 F00B          	lfsr	2,11
 49485  0076E6  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49486  0076E8  26D9               	addwf	fsr2l,f,c
 49487  0076EA  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49488  0076EC  22DA               	addwfc	fsr2h,f,c
 49489  0076EE  EE00 F00F          	lfsr	0,15
 49490  0076F2  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49491  0076F4  26E9               	addwf	fsr0l,f,c
 49492  0076F6  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49493  0076F8  22EA               	addwfc	fsr0h,f,c
 49494  0076FA  CFDF FFEF          	movff	indf2,indf0
 49495                           
 49496                           ; BSR set to: 0
 49497                           ;AES.c: 410: stateTable[11]=stateTable[7];
 49498  0076FE  EE20 F007          	lfsr	2,7
 49499  007702  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49500  007704  26D9               	addwf	fsr2l,f,c
 49501  007706  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49502  007708  22DA               	addwfc	fsr2h,f,c
 49503  00770A  EE00 F00B          	lfsr	0,11
 49504  00770E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49505  007710  26E9               	addwf	fsr0l,f,c
 49506  007712  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49507  007714  22EA               	addwfc	fsr0h,f,c
 49508  007716  CFDF FFEF          	movff	indf2,indf0
 49509                           
 49510                           ;AES.c: 411: stateTable[7]=temp;
 49511  00771A  EE20 F007          	lfsr	2,7
 49512  00771E  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 49513  007720  26D9               	addwf	fsr2l,f,c
 49514  007722  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 49515  007724  22DA               	addwfc	fsr2h,f,c
 49516  007726  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 49517                           
 49518                           ; BSR set to: 0
 49519  00772A  0012               	return		;funcret
 49520  00772C                     __end_of_EncodeShiftRow:
 49521                           	opt stack 0
 49522                           tosu	equ	0xFFF
 49523                           tosh	equ	0xFFE
 49524                           tosl	equ	0xFFD
 49525                           pclath	equ	0xFFA
 49526                           tblptru	equ	0xFF8
 49527                           tblptrh	equ	0xFF7
 49528                           tblptrl	equ	0xFF6
 49529                           tablat	equ	0xFF5
 49530                           prodh	equ	0xFF4
 49531                           prodl	equ	0xFF3
 49532                           intcon	equ	0xFF2
 49533                           intcon2	equ	0xFF1
 49534                           intcon3	equ	0xFF0
 49535                           indf0	equ	0xFEF
 49536                           postinc0	equ	0xFEE
 49537                           plusw0	equ	0xFEB
 49538                           fsr0h	equ	0xFEA
 49539                           fsr0l	equ	0xFE9
 49540                           wreg	equ	0xFE8
 49541                           postinc1	equ	0xFE6
 49542                           postdec1	equ	0xFE5
 49543                           plusw1	equ	0xFE3
 49544                           fsr1h	equ	0xFE2
 49545                           fsr1l	equ	0xFE1
 49546                           indf2	equ	0xFDF
 49547                           postinc2	equ	0xFDE
 49548                           postdec2	equ	0xFDD
 49549                           plusw2	equ	0xFDB
 49550                           fsr2h	equ	0xFDA
 49551                           fsr2l	equ	0xFD9
 49552                           status	equ	0xFD8
 49553                           
 49554 ;; *************** function _EncKeySchedule *****************
 49555 ;; Defined at:
 49556 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 49557 ;; Parameters:    Size  Location     Type
 49558 ;;  key             2    0[BANK0 ] PTR unsigned char 
 49559 ;;		 -> AESEncodeLoRa@useKey(16), 
 49560 ;; Auto vars:     Size  Location     Type
 49561 ;;		None
 49562 ;; Return value:  Size  Location     Type
 49563 ;;                  1    wreg      void 
 49564 ;; Registers used:
 49565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 49566 ;; Tracked objects:
 49567 ;;		On entry : 0/0
 49568 ;;		On exit  : 0/0
 49569 ;;		Unchanged: 0/0
 49570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49575 ;;Total ram usage:        6 bytes
 49576 ;; Hardware stack levels used:    1
 49577 ;; Hardware stack levels required when called:    7
 49578 ;; This function calls:
 49579 ;;		Nothing
 49580 ;; This function is called by:
 49581 ;;		_AESEncode
 49582 ;; This function uses a non-reentrant model
 49583 ;;
 49584                           
 49585                           	psect	text261
 49586  00541C                     __ptext261:
 49587                           	opt stack 0
 49588  00541C                     _EncKeySchedule:
 49589                           	opt stack 18
 49590                           
 49591                           ;AES.c: 340: key[0]^=STable[key[13]];
 49592                           
 49593                           ; BSR set to: 0
 49594                           ;incstack = 0
 49595  00541C  0100               	movlb	0	; () banked
 49596  00541E  EE20 F00D          	lfsr	2,13
 49597  005422  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49598  005424  26D9               	addwf	fsr2l,f,c
 49599  005426  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49600  005428  22DA               	addwfc	fsr2h,f,c
 49601  00542A  50DF               	movf	indf2,w,c
 49602  00542C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49603  00542E  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49604  005430  0D01               	mullw	1
 49605  005432  0E3F               	movlw	low _STable
 49606  005434  24F3               	addwf	prodl,w,c
 49607  005436  6EF6               	movwf	tblptrl,c
 49608  005438  0EFD               	movlw	high _STable
 49609  00543A  20F4               	addwfc	prodh,w,c
 49610  00543C  6EF7               	movwf	tblptrh,c
 49611  00543E                     	if	1	;There are 3 active tblptr bytes
 49612  00543E  6AF8               	clrf	tblptru,c
 49613  005440  0E00               	movlw	low (__mediumconst shr (0+16))
 49614  005442  22F8               	addwfc	tblptru,f,c
 49615  005444                     	endif
 49616  005444  0008               	tblrd		*
 49617  005446  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49618  00544A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49619  00544E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49620  005452  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49621  005454  1ADF               	xorwf	indf2,f,c
 49622                           
 49623                           ;AES.c: 341: key[1]^=STable[key[14]];
 49624  005456  EE20 F00E          	lfsr	2,14
 49625  00545A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49626  00545C  26D9               	addwf	fsr2l,f,c
 49627  00545E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49628  005460  22DA               	addwfc	fsr2h,f,c
 49629  005462  50DF               	movf	indf2,w,c
 49630  005464  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49631  005466  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49632  005468  0D01               	mullw	1
 49633  00546A  0E3F               	movlw	low _STable
 49634  00546C  24F3               	addwf	prodl,w,c
 49635  00546E  6EF6               	movwf	tblptrl,c
 49636  005470  0EFD               	movlw	high _STable
 49637  005472  20F4               	addwfc	prodh,w,c
 49638  005474  6EF7               	movwf	tblptrh,c
 49639  005476                     	if	1	;There are 3 active tblptr bytes
 49640  005476  6AF8               	clrf	tblptru,c
 49641  005478  0E00               	movlw	low (__mediumconst shr (0+16))
 49642  00547A  22F8               	addwfc	tblptru,f,c
 49643  00547C                     	endif
 49644  00547C  0008               	tblrd		*
 49645  00547E  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49646  005482  EE20 F001          	lfsr	2,1
 49647  005486  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49648  005488  26D9               	addwf	fsr2l,f,c
 49649  00548A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49650  00548C  22DA               	addwfc	fsr2h,f,c
 49651  00548E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49652  005490  1ADF               	xorwf	indf2,f,c
 49653                           
 49654                           ;AES.c: 342: key[2]^=STable[key[15]];
 49655  005492  EE20 F00F          	lfsr	2,15
 49656  005496  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49657  005498  26D9               	addwf	fsr2l,f,c
 49658  00549A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49659  00549C  22DA               	addwfc	fsr2h,f,c
 49660  00549E  50DF               	movf	indf2,w,c
 49661  0054A0  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49662  0054A2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49663  0054A4  0D01               	mullw	1
 49664  0054A6  0E3F               	movlw	low _STable
 49665  0054A8  24F3               	addwf	prodl,w,c
 49666  0054AA  6EF6               	movwf	tblptrl,c
 49667  0054AC  0EFD               	movlw	high _STable
 49668  0054AE  20F4               	addwfc	prodh,w,c
 49669  0054B0  6EF7               	movwf	tblptrh,c
 49670  0054B2                     	if	1	;There are 3 active tblptr bytes
 49671  0054B2  6AF8               	clrf	tblptru,c
 49672  0054B4  0E00               	movlw	low (__mediumconst shr (0+16))
 49673  0054B6  22F8               	addwfc	tblptru,f,c
 49674  0054B8                     	endif
 49675  0054B8  0008               	tblrd		*
 49676  0054BA  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49677  0054BE  EE20 F002          	lfsr	2,2
 49678  0054C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49679  0054C4  26D9               	addwf	fsr2l,f,c
 49680  0054C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49681  0054C8  22DA               	addwfc	fsr2h,f,c
 49682  0054CA  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49683  0054CC  1ADF               	xorwf	indf2,f,c
 49684                           
 49685                           ;AES.c: 343: key[3]^=STable[key[12]];
 49686  0054CE  EE20 F00C          	lfsr	2,12
 49687  0054D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49688  0054D4  26D9               	addwf	fsr2l,f,c
 49689  0054D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49690  0054D8  22DA               	addwfc	fsr2h,f,c
 49691  0054DA  50DF               	movf	indf2,w,c
 49692  0054DC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49693  0054DE  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49694  0054E0  0D01               	mullw	1
 49695  0054E2  0E3F               	movlw	low _STable
 49696  0054E4  24F3               	addwf	prodl,w,c
 49697  0054E6  6EF6               	movwf	tblptrl,c
 49698  0054E8  0EFD               	movlw	high _STable
 49699  0054EA  20F4               	addwfc	prodh,w,c
 49700  0054EC  6EF7               	movwf	tblptrh,c
 49701  0054EE                     	if	1	;There are 3 active tblptr bytes
 49702  0054EE  6AF8               	clrf	tblptru,c
 49703  0054F0  0E00               	movlw	low (__mediumconst shr (0+16))
 49704  0054F2  22F8               	addwfc	tblptru,f,c
 49705  0054F4                     	endif
 49706  0054F4  0008               	tblrd		*
 49707  0054F6  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 49708  0054FA  EE20 F003          	lfsr	2,3
 49709  0054FE  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49710  005500  26D9               	addwf	fsr2l,f,c
 49711  005502  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49712  005504  22DA               	addwfc	fsr2h,f,c
 49713  005506  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49714  005508  1ADF               	xorwf	indf2,f,c
 49715                           
 49716                           ; BSR set to: 0
 49717                           ;AES.c: 345: key[0]^=_rcon;
 49718  00550A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49719  00550E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49720  005512  5046               	movf	__rcon,w,c
 49721  005514  1ADF               	xorwf	indf2,f,c
 49722                           
 49723                           ; BSR set to: 0
 49724                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 49725  005516  0E7F               	movlw	127
 49726  005518  6446               	cpfsgt	__rcon,c
 49727  00551A  D00C               	goto	l659
 49728                           
 49729                           ; BSR set to: 0
 49730  00551C  0E1B               	movlw	27
 49731  00551E  C046  F062         	movff	__rcon,??_EncKeySchedule
 49732  005522  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 49733  005524  90D8               	bcf	status,0,c
 49734  005526  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 49735  005528  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 49736  00552A  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 49737  00552C  6F64               	movwf	_EncKeySchedule$914& (0+255),b
 49738  00552E  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 49739  005530  6F65               	movwf	(_EncKeySchedule$914+1)& (0+255),b
 49740  005532  D005               	goto	l661
 49741  005534                     l659:
 49742                           
 49743                           ; BSR set to: 0
 49744                           
 49745                           ; BSR set to: 0
 49746  005534  90D8               	bcf	status,0,c
 49747  005536  3446               	rlcf	__rcon,w,c
 49748  005538  6F64               	movwf	_EncKeySchedule$914& (0+255),b
 49749  00553A  6B65               	clrf	(_EncKeySchedule$914+1)& (0+255),b
 49750  00553C  3765               	rlcf	(_EncKeySchedule$914+1)& (0+255),f,b
 49751  00553E                     l661:
 49752                           
 49753                           ; BSR set to: 0
 49754                           
 49755                           ; BSR set to: 0
 49756  00553E  C064  F046         	movff	_EncKeySchedule$914,__rcon
 49757                           
 49758                           ; BSR set to: 0
 49759                           ;AES.c: 349: key[4]^=key[0];
 49760  005542  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 49761  005546  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 49762  00554A  50DF               	movf	indf2,w,c
 49763  00554C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49764  00554E  EE20 F004          	lfsr	2,4
 49765  005552  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49766  005554  26D9               	addwf	fsr2l,f,c
 49767  005556  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49768  005558  22DA               	addwfc	fsr2h,f,c
 49769  00555A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49770  00555C  1ADF               	xorwf	indf2,f,c
 49771                           
 49772                           ; BSR set to: 0
 49773                           ;AES.c: 350: key[5]^=key[1];
 49774  00555E  EE20 F001          	lfsr	2,1
 49775  005562  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49776  005564  26D9               	addwf	fsr2l,f,c
 49777  005566  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49778  005568  22DA               	addwfc	fsr2h,f,c
 49779  00556A  50DF               	movf	indf2,w,c
 49780  00556C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49781  00556E  EE20 F005          	lfsr	2,5
 49782  005572  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49783  005574  26D9               	addwf	fsr2l,f,c
 49784  005576  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49785  005578  22DA               	addwfc	fsr2h,f,c
 49786  00557A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49787  00557C  1ADF               	xorwf	indf2,f,c
 49788                           
 49789                           ; BSR set to: 0
 49790                           ;AES.c: 351: key[6]^=key[2];
 49791  00557E  EE20 F002          	lfsr	2,2
 49792  005582  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49793  005584  26D9               	addwf	fsr2l,f,c
 49794  005586  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49795  005588  22DA               	addwfc	fsr2h,f,c
 49796  00558A  50DF               	movf	indf2,w,c
 49797  00558C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49798  00558E  EE20 F006          	lfsr	2,6
 49799  005592  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49800  005594  26D9               	addwf	fsr2l,f,c
 49801  005596  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49802  005598  22DA               	addwfc	fsr2h,f,c
 49803  00559A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49804  00559C  1ADF               	xorwf	indf2,f,c
 49805                           
 49806                           ; BSR set to: 0
 49807                           ;AES.c: 352: key[7]^=key[3];
 49808  00559E  EE20 F003          	lfsr	2,3
 49809  0055A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49810  0055A4  26D9               	addwf	fsr2l,f,c
 49811  0055A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49812  0055A8  22DA               	addwfc	fsr2h,f,c
 49813  0055AA  50DF               	movf	indf2,w,c
 49814  0055AC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49815  0055AE  EE20 F007          	lfsr	2,7
 49816  0055B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49817  0055B4  26D9               	addwf	fsr2l,f,c
 49818  0055B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49819  0055B8  22DA               	addwfc	fsr2h,f,c
 49820  0055BA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49821  0055BC  1ADF               	xorwf	indf2,f,c
 49822                           
 49823                           ; BSR set to: 0
 49824                           ;AES.c: 355: key[8]^=key[4];
 49825  0055BE  EE20 F004          	lfsr	2,4
 49826  0055C2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49827  0055C4  26D9               	addwf	fsr2l,f,c
 49828  0055C6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49829  0055C8  22DA               	addwfc	fsr2h,f,c
 49830  0055CA  50DF               	movf	indf2,w,c
 49831  0055CC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49832  0055CE  EE20 F008          	lfsr	2,8
 49833  0055D2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49834  0055D4  26D9               	addwf	fsr2l,f,c
 49835  0055D6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49836  0055D8  22DA               	addwfc	fsr2h,f,c
 49837  0055DA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49838  0055DC  1ADF               	xorwf	indf2,f,c
 49839                           
 49840                           ; BSR set to: 0
 49841                           ;AES.c: 356: key[9]^=key[5];
 49842  0055DE  EE20 F005          	lfsr	2,5
 49843  0055E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49844  0055E4  26D9               	addwf	fsr2l,f,c
 49845  0055E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49846  0055E8  22DA               	addwfc	fsr2h,f,c
 49847  0055EA  50DF               	movf	indf2,w,c
 49848  0055EC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49849  0055EE  EE20 F009          	lfsr	2,9
 49850  0055F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49851  0055F4  26D9               	addwf	fsr2l,f,c
 49852  0055F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49853  0055F8  22DA               	addwfc	fsr2h,f,c
 49854  0055FA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49855  0055FC  1ADF               	xorwf	indf2,f,c
 49856                           
 49857                           ; BSR set to: 0
 49858                           ;AES.c: 357: key[10]^=key[6];
 49859  0055FE  EE20 F006          	lfsr	2,6
 49860  005602  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49861  005604  26D9               	addwf	fsr2l,f,c
 49862  005606  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49863  005608  22DA               	addwfc	fsr2h,f,c
 49864  00560A  50DF               	movf	indf2,w,c
 49865  00560C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49866  00560E  EE20 F00A          	lfsr	2,10
 49867  005612  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49868  005614  26D9               	addwf	fsr2l,f,c
 49869  005616  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49870  005618  22DA               	addwfc	fsr2h,f,c
 49871  00561A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49872  00561C  1ADF               	xorwf	indf2,f,c
 49873                           
 49874                           ; BSR set to: 0
 49875                           ;AES.c: 358: key[11]^=key[7];
 49876  00561E  EE20 F007          	lfsr	2,7
 49877  005622  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49878  005624  26D9               	addwf	fsr2l,f,c
 49879  005626  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49880  005628  22DA               	addwfc	fsr2h,f,c
 49881  00562A  50DF               	movf	indf2,w,c
 49882  00562C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49883  00562E  EE20 F00B          	lfsr	2,11
 49884  005632  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49885  005634  26D9               	addwf	fsr2l,f,c
 49886  005636  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49887  005638  22DA               	addwfc	fsr2h,f,c
 49888  00563A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49889  00563C  1ADF               	xorwf	indf2,f,c
 49890                           
 49891                           ; BSR set to: 0
 49892                           ;AES.c: 361: key[12]^=key[8];
 49893  00563E  EE20 F008          	lfsr	2,8
 49894  005642  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49895  005644  26D9               	addwf	fsr2l,f,c
 49896  005646  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49897  005648  22DA               	addwfc	fsr2h,f,c
 49898  00564A  50DF               	movf	indf2,w,c
 49899  00564C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49900  00564E  EE20 F00C          	lfsr	2,12
 49901  005652  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49902  005654  26D9               	addwf	fsr2l,f,c
 49903  005656  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49904  005658  22DA               	addwfc	fsr2h,f,c
 49905  00565A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49906  00565C  1ADF               	xorwf	indf2,f,c
 49907                           
 49908                           ; BSR set to: 0
 49909                           ;AES.c: 362: key[13]^=key[9];
 49910  00565E  EE20 F009          	lfsr	2,9
 49911  005662  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49912  005664  26D9               	addwf	fsr2l,f,c
 49913  005666  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49914  005668  22DA               	addwfc	fsr2h,f,c
 49915  00566A  50DF               	movf	indf2,w,c
 49916  00566C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49917  00566E  EE20 F00D          	lfsr	2,13
 49918  005672  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49919  005674  26D9               	addwf	fsr2l,f,c
 49920  005676  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49921  005678  22DA               	addwfc	fsr2h,f,c
 49922  00567A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49923  00567C  1ADF               	xorwf	indf2,f,c
 49924                           
 49925                           ; BSR set to: 0
 49926                           ;AES.c: 363: key[14]^=key[10];
 49927  00567E  EE20 F00A          	lfsr	2,10
 49928  005682  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49929  005684  26D9               	addwf	fsr2l,f,c
 49930  005686  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49931  005688  22DA               	addwfc	fsr2h,f,c
 49932  00568A  50DF               	movf	indf2,w,c
 49933  00568C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49934  00568E  EE20 F00E          	lfsr	2,14
 49935  005692  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49936  005694  26D9               	addwf	fsr2l,f,c
 49937  005696  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49938  005698  22DA               	addwfc	fsr2h,f,c
 49939  00569A  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49940  00569C  1ADF               	xorwf	indf2,f,c
 49941                           
 49942                           ; BSR set to: 0
 49943                           ;AES.c: 364: key[15]^=key[11];
 49944  00569E  EE20 F00B          	lfsr	2,11
 49945  0056A2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49946  0056A4  26D9               	addwf	fsr2l,f,c
 49947  0056A6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49948  0056A8  22DA               	addwfc	fsr2h,f,c
 49949  0056AA  50DF               	movf	indf2,w,c
 49950  0056AC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 49951  0056AE  EE20 F00F          	lfsr	2,15
 49952  0056B2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 49953  0056B4  26D9               	addwf	fsr2l,f,c
 49954  0056B6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 49955  0056B8  22DA               	addwfc	fsr2h,f,c
 49956  0056BA  5162               	movf	??_EncKeySchedule& (0+255),w,b
 49957  0056BC  1ADF               	xorwf	indf2,f,c
 49958                           
 49959                           ; BSR set to: 0
 49960  0056BE  0012               	return		;funcret
 49961  0056C0                     __end_of_EncKeySchedule:
 49962                           	opt stack 0
 49963                           tosu	equ	0xFFF
 49964                           tosh	equ	0xFFE
 49965                           tosl	equ	0xFFD
 49966                           pclath	equ	0xFFA
 49967                           tblptru	equ	0xFF8
 49968                           tblptrh	equ	0xFF7
 49969                           tblptrl	equ	0xFF6
 49970                           tablat	equ	0xFF5
 49971                           prodh	equ	0xFF4
 49972                           prodl	equ	0xFF3
 49973                           intcon	equ	0xFF2
 49974                           intcon2	equ	0xFF1
 49975                           intcon3	equ	0xFF0
 49976                           indf0	equ	0xFEF
 49977                           postinc0	equ	0xFEE
 49978                           plusw0	equ	0xFEB
 49979                           fsr0h	equ	0xFEA
 49980                           fsr0l	equ	0xFE9
 49981                           wreg	equ	0xFE8
 49982                           postinc1	equ	0xFE6
 49983                           postdec1	equ	0xFE5
 49984                           plusw1	equ	0xFE3
 49985                           fsr1h	equ	0xFE2
 49986                           fsr1l	equ	0xFE1
 49987                           indf2	equ	0xFDF
 49988                           postinc2	equ	0xFDE
 49989                           postdec2	equ	0xFDD
 49990                           plusw2	equ	0xFDB
 49991                           fsr2h	equ	0xFDA
 49992                           fsr2l	equ	0xFD9
 49993                           status	equ	0xFD8
 49994                           
 49995 ;; *************** function _LORAWAN_Init *****************
 49996 ;; Defined at:
 49997 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 49998 ;; Parameters:    Size  Location     Type
 49999 ;;  RxPayload       2   82[BANK0 ] PTR FTN(PTR unsigned cha
 50000 ;;		 -> RxData(1), 
 50001 ;;  RxJoinRespon    2   84[BANK0 ] PTR FTN(unsigned char ,)
 50002 ;;		 -> RxJoinResponse(1), 
 50003 ;; Auto vars:     Size  Location     Type
 50004 ;;		None
 50005 ;; Return value:  Size  Location     Type
 50006 ;;                  1    wreg      void 
 50007 ;; Registers used:
 50008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50009 ;; Tracked objects:
 50010 ;;		On entry : 0/0
 50011 ;;		On exit  : 0/0
 50012 ;;		Unchanged: 0/0
 50013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50018 ;;Total ram usage:        4 bytes
 50019 ;; Hardware stack levels used:    1
 50020 ;; Hardware stack levels required when called:   13
 50021 ;; This function calls:
 50022 ;;		_CreateAllSoftwareTimers
 50023 ;;		_LORAWAN_Reset
 50024 ;;		_RADIO_Init
 50025 ;;		_RADIO_ReadRandom
 50026 ;;		_SetCallbackSoftwareTimers
 50027 ;;		_StopAllSoftwareTimers
 50028 ;;		_srand
 50029 ;; This function is called by:
 50030 ;;		_main
 50031 ;; This function uses a non-reentrant model
 50032 ;;
 50033                           
 50034                           	psect	text262
 50035  00AA90                     __ptext262:
 50036                           	opt stack 0
 50037  00AA90                     _LORAWAN_Init:
 50038                           	opt stack 17
 50039                           
 50040                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 50041                           
 50042                           ; BSR set to: 0
 50043                           ;incstack = 0
 50044  00AA90  0102               	movlb	2	; () banked
 50045  00AA92  51F4               	movf	(_loRa+240)& (0+255),w,b
 50046  00AA94  A4D8               	btfss	status,2,c
 50047  00AA96  D008               	goto	l1298
 50048                           
 50049                           ; BSR set to: 2
 50050                           ;lorawan_eu.c: 127: {
 50051                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 50052  00AA98  EC6D  F058         	call	_CreateAllSoftwareTimers	;wreg free
 50053                           
 50054                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 50055  00AA9C  EC01  F049         	call	_SetCallbackSoftwareTimers	;wreg free
 50056                           
 50057                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 50058  00AAA0  0E01               	movlw	1
 50059  00AAA2  0102               	movlb	2	; () banked
 50060  00AAA4  6FF4               	movwf	(_loRa+240)& (0+255),b
 50061                           
 50062                           ;lorawan_eu.c: 131: }
 50063  00AAA6  D002               	goto	l1299
 50064  00AAA8                     l1298:
 50065                           
 50066                           ; BSR set to: 2
 50067                           ;lorawan_eu.c: 132: else
 50068                           ;lorawan_eu.c: 133: {
 50069                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 50070                           
 50071                           ; BSR set to: 2
 50072  00AAA8  EC44  F058         	call	_StopAllSoftwareTimers	;wreg free
 50073  00AAAC                     l1299:
 50074                           
 50075                           ;lorawan_eu.c: 135: }
 50076                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 50077  00AAAC  C0B2  F10C         	movff	LORAWAN_Init@RxPayload,_rxPayload
 50078  00AAB0  C0B3  F10D         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 50079                           
 50080                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 50081  00AAB4  C0B4  F10E         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 50082  00AAB8  C0B5  F10F         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 50083                           
 50084                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 50085  00AABC  0E3F               	movlw	low (_radioBuffer+16)
 50086  00AABE  0100               	movlb	0	; () banked
 50087  00AAC0  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50088  00AAC2  0E06               	movlw	high (_radioBuffer+16)
 50089  00AAC4  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50090  00AAC6  0EA0               	movlw	160
 50091  00AAC8  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50092  00AACA  0E27               	movlw	39
 50093  00AACC  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50094  00AACE  0EBE               	movlw	190
 50095  00AAD0  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50096  00AAD2  0E33               	movlw	51
 50097  00AAD4  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50098  00AAD6  ECEE  F033         	call	_RADIO_Init	;wreg free
 50099                           
 50100                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 50101  00AADA  EC08  F04D         	call	_RADIO_ReadRandom	;wreg free
 50102  00AADE  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 50103  00AAE2  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 50104  00AAE6  EC3E  F062         	call	_srand	;wreg free
 50105                           
 50106                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 50107  00AAEA  0E00               	movlw	0
 50108  00AAEC  EC07  F033         	call	_LORAWAN_Reset
 50109  00AAF0  0012               	return		;funcret
 50110  00AAF2                     __end_of_LORAWAN_Init:
 50111                           	opt stack 0
 50112                           tosu	equ	0xFFF
 50113                           tosh	equ	0xFFE
 50114                           tosl	equ	0xFFD
 50115                           pclath	equ	0xFFA
 50116                           tblptru	equ	0xFF8
 50117                           tblptrh	equ	0xFF7
 50118                           tblptrl	equ	0xFF6
 50119                           tablat	equ	0xFF5
 50120                           prodh	equ	0xFF4
 50121                           prodl	equ	0xFF3
 50122                           intcon	equ	0xFF2
 50123                           intcon2	equ	0xFF1
 50124                           intcon3	equ	0xFF0
 50125                           indf0	equ	0xFEF
 50126                           postinc0	equ	0xFEE
 50127                           plusw0	equ	0xFEB
 50128                           fsr0h	equ	0xFEA
 50129                           fsr0l	equ	0xFE9
 50130                           wreg	equ	0xFE8
 50131                           postinc1	equ	0xFE6
 50132                           postdec1	equ	0xFE5
 50133                           plusw1	equ	0xFE3
 50134                           fsr1h	equ	0xFE2
 50135                           fsr1l	equ	0xFE1
 50136                           indf2	equ	0xFDF
 50137                           postinc2	equ	0xFDE
 50138                           postdec2	equ	0xFDD
 50139                           plusw2	equ	0xFDB
 50140                           fsr2h	equ	0xFDA
 50141                           fsr2l	equ	0xFD9
 50142                           status	equ	0xFD8
 50143                           
 50144 ;; *************** function _srand *****************
 50145 ;; Defined at:
 50146 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 50147 ;; Parameters:    Size  Location     Type
 50148 ;;  x               2   18[BANK0 ] unsigned int 
 50149 ;; Auto vars:     Size  Location     Type
 50150 ;;		None
 50151 ;; Return value:  Size  Location     Type
 50152 ;;                  1    wreg      void 
 50153 ;; Registers used:
 50154 ;;		status,2
 50155 ;; Tracked objects:
 50156 ;;		On entry : 0/0
 50157 ;;		On exit  : 0/0
 50158 ;;		Unchanged: 0/0
 50159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50164 ;;Total ram usage:        2 bytes
 50165 ;; Hardware stack levels used:    1
 50166 ;; Hardware stack levels required when called:    7
 50167 ;; This function calls:
 50168 ;;		Nothing
 50169 ;; This function is called by:
 50170 ;;		_LORAWAN_Init
 50171 ;; This function uses a non-reentrant model
 50172 ;;
 50173                           
 50174                           	psect	text263
 50175  00C47C                     __ptext263:
 50176                           	opt stack 0
 50177  00C47C                     _srand:
 50178                           	opt stack 22
 50179                           
 50180                           ;incstack = 0
 50181  00C47C  C072  F1F9         	movff	srand@x,_randx
 50182  00C480  C073  F1FA         	movff	srand@x+1,_randx+1
 50183  00C484  0101               	movlb	1	; () banked
 50184  00C486  6BFB               	clrf	(_randx+2)& (0+255),b
 50185  00C488  6BFC               	clrf	(_randx+3)& (0+255),b
 50186                           
 50187                           ; BSR set to: 1
 50188  00C48A  0012               	return		;funcret
 50189  00C48C                     __end_of_srand:
 50190                           	opt stack 0
 50191                           tosu	equ	0xFFF
 50192                           tosh	equ	0xFFE
 50193                           tosl	equ	0xFFD
 50194                           pclath	equ	0xFFA
 50195                           tblptru	equ	0xFF8
 50196                           tblptrh	equ	0xFF7
 50197                           tblptrl	equ	0xFF6
 50198                           tablat	equ	0xFF5
 50199                           prodh	equ	0xFF4
 50200                           prodl	equ	0xFF3
 50201                           intcon	equ	0xFF2
 50202                           intcon2	equ	0xFF1
 50203                           intcon3	equ	0xFF0
 50204                           indf0	equ	0xFEF
 50205                           postinc0	equ	0xFEE
 50206                           plusw0	equ	0xFEB
 50207                           fsr0h	equ	0xFEA
 50208                           fsr0l	equ	0xFE9
 50209                           wreg	equ	0xFE8
 50210                           postinc1	equ	0xFE6
 50211                           postdec1	equ	0xFE5
 50212                           plusw1	equ	0xFE3
 50213                           fsr1h	equ	0xFE2
 50214                           fsr1l	equ	0xFE1
 50215                           indf2	equ	0xFDF
 50216                           postinc2	equ	0xFDE
 50217                           postdec2	equ	0xFDD
 50218                           plusw2	equ	0xFDB
 50219                           fsr2h	equ	0xFDA
 50220                           fsr2l	equ	0xFD9
 50221                           status	equ	0xFD8
 50222                           
 50223 ;; *************** function _SetCallbackSoftwareTimers *****************
 50224 ;; Defined at:
 50225 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 50226 ;; Parameters:    Size  Location     Type
 50227 ;;		None
 50228 ;; Auto vars:     Size  Location     Type
 50229 ;;		None
 50230 ;; Return value:  Size  Location     Type
 50231 ;;                  1    wreg      void 
 50232 ;; Registers used:
 50233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50234 ;; Tracked objects:
 50235 ;;		On entry : 0/0
 50236 ;;		On exit  : 0/0
 50237 ;;		Unchanged: 0/0
 50238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50243 ;;Total ram usage:        0 bytes
 50244 ;; Hardware stack levels used:    1
 50245 ;; Hardware stack levels required when called:    8
 50246 ;; This function calls:
 50247 ;;		_SwTimerSetCallback
 50248 ;; This function is called by:
 50249 ;;		_LORAWAN_Init
 50250 ;; This function uses a non-reentrant model
 50251 ;;
 50252                           
 50253                           	psect	text264
 50254  009202                     __ptext264:
 50255                           	opt stack 0
 50256  009202                     _SetCallbackSoftwareTimers:
 50257                           	opt stack 21
 50258                           
 50259                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 50260                           
 50261                           ; BSR set to: 1
 50262                           ;incstack = 0
 50263  009202  0E54               	movlw	low _LORAWAN_ReceiveWindow1Callback
 50264  009204  0100               	movlb	0	; () banked
 50265  009206  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50266  009208  0E95               	movlw	high _LORAWAN_ReceiveWindow1Callback
 50267  00920A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50268  00920C  0E00               	movlw	0
 50269  00920E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50270  009210  0102               	movlb	2	; () banked
 50271  009212  51E6               	movf	(_loRa+226)& (0+255),w,b
 50272  009214  ECB3  F05A         	call	_SwTimerSetCallback
 50273                           
 50274                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 50275  009218  0EE0               	movlw	low _LORAWAN_ReceiveWindow2Callback
 50276  00921A  0100               	movlb	0	; () banked
 50277  00921C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50278  00921E  0E92               	movlw	high _LORAWAN_ReceiveWindow2Callback
 50279  009220  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50280  009222  0E00               	movlw	0
 50281  009224  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50282  009226  0102               	movlb	2	; () banked
 50283  009228  51E7               	movf	(_loRa+227)& (0+255),w,b
 50284  00922A  ECB3  F05A         	call	_SwTimerSetCallback
 50285                           
 50286                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 50287  00922E  0E8A               	movlw	low _LORAWAN_LinkCheckCallback
 50288  009230  0100               	movlb	0	; () banked
 50289  009232  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50290  009234  0E71               	movlw	high _LORAWAN_LinkCheckCallback
 50291  009236  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50292  009238  0E00               	movlw	0
 50293  00923A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50294  00923C  0102               	movlb	2	; () banked
 50295  00923E  51EB               	movf	(_loRa+231)& (0+255),w,b
 50296  009240  ECB3  F05A         	call	_SwTimerSetCallback
 50297                           
 50298                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 50299  009244  0E54               	movlw	low _LORAWAN_ReceiveWindow1Callback
 50300  009246  0100               	movlb	0	; () banked
 50301  009248  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50302  00924A  0E95               	movlw	high _LORAWAN_ReceiveWindow1Callback
 50303  00924C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50304  00924E  0E00               	movlw	0
 50305  009250  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50306  009252  0102               	movlb	2	; () banked
 50307  009254  51E8               	movf	(_loRa+228)& (0+255),w,b
 50308  009256  ECB3  F05A         	call	_SwTimerSetCallback
 50309                           
 50310                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 50311  00925A  0EE0               	movlw	low _LORAWAN_ReceiveWindow2Callback
 50312  00925C  0100               	movlb	0	; () banked
 50313  00925E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50314  009260  0E92               	movlw	high _LORAWAN_ReceiveWindow2Callback
 50315  009262  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50316  009264  0E00               	movlw	0
 50317  009266  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50318  009268  0102               	movlb	2	; () banked
 50319  00926A  51E9               	movf	(_loRa+229)& (0+255),w,b
 50320  00926C  ECB3  F05A         	call	_SwTimerSetCallback
 50321                           
 50322                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 50323  009270  0E7E               	movlw	low _AckRetransmissionCallback
 50324  009272  0100               	movlb	0	; () banked
 50325  009274  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50326  009276  0E83               	movlw	high _AckRetransmissionCallback
 50327  009278  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50328  00927A  0E00               	movlw	0
 50329  00927C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50330  00927E  0102               	movlb	2	; () banked
 50331  009280  51EC               	movf	(_loRa+232)& (0+255),w,b
 50332  009282  ECB3  F05A         	call	_SwTimerSetCallback
 50333                           
 50334                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 50335  009286  0EC0               	movlw	low _AutomaticReplyCallback
 50336  009288  0100               	movlb	0	; () banked
 50337  00928A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50338  00928C  0EBD               	movlw	high _AutomaticReplyCallback
 50339  00928E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50340  009290  0E00               	movlw	0
 50341  009292  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50342  009294  0102               	movlb	2	; () banked
 50343  009296  51EA               	movf	(_loRa+230)& (0+255),w,b
 50344  009298  ECB3  F05A         	call	_SwTimerSetCallback
 50345                           
 50346                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 50347  00929C  0ED8               	movlw	low _UnconfirmedTransmissionCallback
 50348  00929E  0100               	movlb	0	; () banked
 50349  0092A0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50350  0092A2  0EA3               	movlw	high _UnconfirmedTransmissionCallback
 50351  0092A4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50352  0092A6  0E00               	movlw	0
 50353  0092A8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50354  0092AA  0102               	movlb	2	; () banked
 50355  0092AC  51EE               	movf	(_loRa+234)& (0+255),w,b
 50356  0092AE  ECB3  F05A         	call	_SwTimerSetCallback
 50357                           
 50358                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 50359  0092B2  0E64               	movlw	low _UpdateJoinSuccessState
 50360  0092B4  0100               	movlb	0	; () banked
 50361  0092B6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50362  0092B8  0E7C               	movlw	high _UpdateJoinSuccessState
 50363  0092BA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50364  0092BC  0E00               	movlw	0
 50365  0092BE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50366  0092C0  0102               	movlb	2	; () banked
 50367  0092C2  51F7               	movf	(_loRa+243)& (0+255),w,b
 50368  0092C4  ECB3  F05A         	call	_SwTimerSetCallback
 50369                           
 50370                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 50371  0092C8  0EA6               	movlw	low _DutyCycleCallback
 50372  0092CA  0100               	movlb	0	; () banked
 50373  0092CC  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 50374  0092CE  0E48               	movlw	high _DutyCycleCallback
 50375  0092D0  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 50376  0092D2  0E00               	movlw	0
 50377  0092D4  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 50378  0092D6  0102               	movlb	2	; () banked
 50379  0092D8  51ED               	movf	(_loRa+233)& (0+255),w,b
 50380  0092DA  ECB3  F05A         	call	_SwTimerSetCallback
 50381  0092DE  0012               	return		;funcret
 50382  0092E0                     __end_of_SetCallbackSoftwareTimers:
 50383                           	opt stack 0
 50384                           tosu	equ	0xFFF
 50385                           tosh	equ	0xFFE
 50386                           tosl	equ	0xFFD
 50387                           pclath	equ	0xFFA
 50388                           tblptru	equ	0xFF8
 50389                           tblptrh	equ	0xFF7
 50390                           tblptrl	equ	0xFF6
 50391                           tablat	equ	0xFF5
 50392                           prodh	equ	0xFF4
 50393                           prodl	equ	0xFF3
 50394                           intcon	equ	0xFF2
 50395                           intcon2	equ	0xFF1
 50396                           intcon3	equ	0xFF0
 50397                           indf0	equ	0xFEF
 50398                           postinc0	equ	0xFEE
 50399                           plusw0	equ	0xFEB
 50400                           fsr0h	equ	0xFEA
 50401                           fsr0l	equ	0xFE9
 50402                           wreg	equ	0xFE8
 50403                           postinc1	equ	0xFE6
 50404                           postdec1	equ	0xFE5
 50405                           plusw1	equ	0xFE3
 50406                           fsr1h	equ	0xFE2
 50407                           fsr1l	equ	0xFE1
 50408                           indf2	equ	0xFDF
 50409                           postinc2	equ	0xFDE
 50410                           postdec2	equ	0xFDD
 50411                           plusw2	equ	0xFDB
 50412                           fsr2h	equ	0xFDA
 50413                           fsr2l	equ	0xFD9
 50414                           status	equ	0xFD8
 50415                           
 50416 ;; *************** function _RADIO_ReadRandom *****************
 50417 ;; Defined at:
 50418 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 50419 ;; Parameters:    Size  Location     Type
 50420 ;;		None
 50421 ;; Auto vars:     Size  Location     Type
 50422 ;;  retVal          2   15[BANK0 ] unsigned int 
 50423 ;;  i               1   17[BANK0 ] unsigned char 
 50424 ;; Return value:  Size  Location     Type
 50425 ;;                  2   12[BANK0 ] unsigned int 
 50426 ;; Registers used:
 50427 ;;		wreg, status,2, status,0, cstack
 50428 ;; Tracked objects:
 50429 ;;		On entry : 0/0
 50430 ;;		On exit  : 0/0
 50431 ;;		Unchanged: 0/0
 50432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50434 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50436 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50437 ;;Total ram usage:        6 bytes
 50438 ;; Hardware stack levels used:    1
 50439 ;; Hardware stack levels required when called:   11
 50440 ;; This function calls:
 50441 ;;		_RADIO_RegisterRead
 50442 ;;		_RADIO_RegisterWrite
 50443 ;;		_RADIO_WriteMode
 50444 ;;		_SystemBlockingWaitMs
 50445 ;; This function is called by:
 50446 ;;		_LORAWAN_Init
 50447 ;; This function uses a non-reentrant model
 50448 ;;
 50449                           
 50450                           	psect	text265
 50451  009A10                     __ptext265:
 50452                           	opt stack 0
 50453  009A10                     _RADIO_ReadRandom:
 50454                           	opt stack 18
 50455                           
 50456                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 50457                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 50458                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 50459                           
 50460                           ;incstack = 0
 50461  009A10  0E00               	movlw	0
 50462  009A12  0100               	movlb	0	; () banked
 50463  009A14  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 50464  009A16  0E00               	movlw	0
 50465  009A18  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 50466                           
 50467                           ; BSR set to: 0
 50468                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 50469  009A1A  0E01               	movlw	1
 50470  009A1C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50471  009A1E  0E01               	movlw	1
 50472  009A20  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50473  009A22  0E00               	movlw	0
 50474  009A24  ECDC  F043         	call	_RADIO_WriteMode
 50475                           
 50476                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 50477  009A28  0EFF               	movlw	255
 50478  009A2A  0100               	movlb	0	; () banked
 50479  009A2C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50480  009A2E  0E11               	movlw	17
 50481  009A30  ECEB  F05F         	call	_RADIO_RegisterWrite
 50482                           
 50483                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 50484  009A34  0E01               	movlw	1
 50485  009A36  0100               	movlb	0	; () banked
 50486  009A38  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50487  009A3A  0E01               	movlw	1
 50488  009A3C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50489  009A3E  0E05               	movlw	5
 50490  009A40  ECDC  F043         	call	_RADIO_WriteMode
 50491                           
 50492                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 50493  009A44  0E00               	movlw	0
 50494  009A46  0100               	movlb	0	; () banked
 50495  009A48  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 50496  009A4A                     l21108:
 50497                           
 50498                           ; BSR set to: 0
 50499  009A4A  0E0F               	movlw	15
 50500  009A4C  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 50501  009A4E  D001               	goto	l1002
 50502  009A50  D019               	goto	u25280
 50503  009A52                     l1002:
 50504                           
 50505                           ; BSR set to: 0
 50506                           ;radio_driver_SX1276.c: 1377: {
 50507                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 50508                           
 50509                           ; BSR set to: 0
 50510  009A52  0E01               	movlw	1
 50511  009A54  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 50512  009A56  0E00               	movlw	0
 50513  009A58  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 50514  009A5A  0E00               	movlw	0
 50515  009A5C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 50516  009A5E  0E00               	movlw	0
 50517  009A60  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 50518  009A62  EC07  F05D         	call	_SystemBlockingWaitMs	;wreg free
 50519                           
 50520                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 50521  009A66  0100               	movlb	0	; () banked
 50522  009A68  90D8               	bcf	status,0,c
 50523  009A6A  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 50524  009A6C  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 50525                           
 50526                           ; BSR set to: 0
 50527                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 50528  009A6E  0E2C               	movlw	44
 50529  009A70  EC92  F05E         	call	_RADIO_RegisterRead
 50530  009A74  0100               	movlb	0	; () banked
 50531  009A76  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 50532  009A78  0E01               	movlw	1
 50533  009A7A  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 50534  009A7C  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 50535  009A7E  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 50536  009A80  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 50537  009A82  D7E3               	goto	l21108
 50538  009A84                     u25280:
 50539                           
 50540                           ; BSR set to: 0
 50541                           ;radio_driver_SX1276.c: 1381: }
 50542                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 50543                           
 50544                           ; BSR set to: 0
 50545  009A84  0E01               	movlw	1
 50546  009A86  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 50547  009A88  0E01               	movlw	1
 50548  009A8A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 50549  009A8C  0E00               	movlw	0
 50550  009A8E  ECDC  F043         	call	_RADIO_WriteMode
 50551                           
 50552                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 50553  009A92  0EFF               	movlw	255
 50554  009A94  0100               	movlb	0	; () banked
 50555  009A96  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50556  009A98  0E12               	movlw	18
 50557  009A9A  ECEB  F05F         	call	_RADIO_RegisterWrite
 50558                           
 50559                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 50560  009A9E  0E00               	movlw	0
 50561  009AA0  0100               	movlb	0	; () banked
 50562  009AA2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 50563  009AA4  0E11               	movlw	17
 50564  009AA6  ECEB  F05F         	call	_RADIO_RegisterWrite
 50565                           
 50566                           ;radio_driver_SX1276.c: 1389: return retVal;
 50567  009AAA  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 50568  009AAE  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 50569  009AB2  0012               	return	
 50570  009AB4                     __end_of_RADIO_ReadRandom:
 50571                           	opt stack 0
 50572                           tosu	equ	0xFFF
 50573                           tosh	equ	0xFFE
 50574                           tosl	equ	0xFFD
 50575                           pclath	equ	0xFFA
 50576                           tblptru	equ	0xFF8
 50577                           tblptrh	equ	0xFF7
 50578                           tblptrl	equ	0xFF6
 50579                           tablat	equ	0xFF5
 50580                           prodh	equ	0xFF4
 50581                           prodl	equ	0xFF3
 50582                           intcon	equ	0xFF2
 50583                           intcon2	equ	0xFF1
 50584                           intcon3	equ	0xFF0
 50585                           indf0	equ	0xFEF
 50586                           postinc0	equ	0xFEE
 50587                           plusw0	equ	0xFEB
 50588                           fsr0h	equ	0xFEA
 50589                           fsr0l	equ	0xFE9
 50590                           wreg	equ	0xFE8
 50591                           postinc1	equ	0xFE6
 50592                           postdec1	equ	0xFE5
 50593                           plusw1	equ	0xFE3
 50594                           fsr1h	equ	0xFE2
 50595                           fsr1l	equ	0xFE1
 50596                           indf2	equ	0xFDF
 50597                           postinc2	equ	0xFDE
 50598                           postdec2	equ	0xFDD
 50599                           plusw2	equ	0xFDB
 50600                           fsr2h	equ	0xFDA
 50601                           fsr2l	equ	0xFD9
 50602                           status	equ	0xFD8
 50603                           
 50604 ;; *************** function _LORAWAN_Reset *****************
 50605 ;; Defined at:
 50606 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 50607 ;; Parameters:    Size  Location     Type
 50608 ;;  ismBandNew      1    wreg     enum E7280
 50609 ;; Auto vars:     Size  Location     Type
 50610 ;;  ismBandNew      1   81[BANK0 ] enum E7280
 50611 ;; Return value:  Size  Location     Type
 50612 ;;                  1    wreg      void 
 50613 ;; Registers used:
 50614 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50615 ;; Tracked objects:
 50616 ;;		On entry : 0/0
 50617 ;;		On exit  : 0/0
 50618 ;;		Unchanged: 0/0
 50619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50624 ;;Total ram usage:        1 bytes
 50625 ;; Hardware stack levels used:    1
 50626 ;; Hardware stack levels required when called:   12
 50627 ;; This function calls:
 50628 ;;		_InitDefault433Channels
 50629 ;;		_InitDefault868Channels
 50630 ;;		_LORAWAN_LinkCheckConfigure
 50631 ;;		_RADIO_Init
 50632 ;;		_RADIO_SetLoRaSyncWord
 50633 ;;		_StopAllSoftwareTimers
 50634 ;;		_UpdateMinMaxChDataRate
 50635 ;;		_memset
 50636 ;; This function is called by:
 50637 ;;		_LORAWAN_Init
 50638 ;; This function uses a non-reentrant model
 50639 ;;
 50640                           
 50641                           	psect	text266
 50642  00660E                     __ptext266:
 50643                           	opt stack 0
 50644  00660E                     _LORAWAN_Reset:
 50645                           	opt stack 17
 50646                           
 50647                           ;incstack = 0
 50648                           ;LORAWAN_Reset@ismBandNew stored from wreg
 50649  00660E  0100               	movlb	0	; () banked
 50650  006610  6FB1               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 50651                           
 50652                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 50653  006612  0102               	movlb	2	; () banked
 50654  006614  05F4               	decf	(_loRa+240)& (0+255),w,b
 50655  006616  B4D8               	btfsc	status,2,c
 50656                           
 50657                           ; BSR set to: 2
 50658                           ;lorawan_eu.c: 151: {
 50659                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 50660  006618  EC44  F058         	call	_StopAllSoftwareTimers	;wreg free
 50661                           
 50662                           ;lorawan_eu.c: 153: }
 50663                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 50664  00661C  0E34               	movlw	52
 50665  00661E  0102               	movlb	2	; () banked
 50666  006620  6FF8               	movwf	(_loRa+244)& (0+255),b
 50667                           
 50668                           ; BSR set to: 2
 50669                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 50670  006622  51F8               	movf	(_loRa+244)& (0+255),w,b
 50671  006624  ECF8  F062         	call	_RADIO_SetLoRaSyncWord
 50672                           
 50673                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 50674  006628  0E00               	movlw	0
 50675  00662A  0102               	movlb	2	; () banked
 50676  00662C  6F06               	movwf	(_loRa+2)& (0+255),b
 50677  00662E  0E00               	movlw	0
 50678  006630  6F07               	movwf	(_loRa+3)& (0+255),b
 50679  006632  0E00               	movlw	0
 50680  006634  6F08               	movwf	(_loRa+4)& (0+255),b
 50681  006636  0E00               	movlw	0
 50682  006638  6F09               	movwf	(_loRa+5)& (0+255),b
 50683                           
 50684                           ; BSR set to: 2
 50685                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 50686  00663A  69E1               	setf	(_loRa+221)& (0+255),b
 50687                           
 50688                           ; BSR set to: 2
 50689                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 50690  00663C  0E00               	movlw	0
 50691  00663E  6FE2               	movwf	(_loRa+222)& (0+255),b
 50692                           
 50693                           ; BSR set to: 2
 50694                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 50695  006640  0E00               	movlw	0
 50696  006642  6FCC               	movwf	(_loRa+200)& (0+255),b
 50697  006644  0E00               	movlw	0
 50698  006646  6FCD               	movwf	(_loRa+201)& (0+255),b
 50699  006648  0E00               	movlw	0
 50700  00664A  6FCE               	movwf	(_loRa+202)& (0+255),b
 50701  00664C  0E00               	movlw	0
 50702  00664E  6FCF               	movwf	(_loRa+203)& (0+255),b
 50703                           
 50704                           ; BSR set to: 2
 50705                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 50706  006650  0E00               	movlw	0
 50707  006652  6FD9               	movwf	(_loRa+213)& (0+255),b
 50708  006654  0E00               	movlw	0
 50709  006656  6FD8               	movwf	(_loRa+212)& (0+255),b
 50710                           
 50711                           ; BSR set to: 2
 50712                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 50713  006658  0E00               	movlw	0
 50714  00665A  6F0E               	movwf	(_loRa+10)& (0+255),b
 50715  00665C  0E00               	movlw	0
 50716  00665E  6F0F               	movwf	(_loRa+11)& (0+255),b
 50717  006660  0E00               	movlw	0
 50718  006662  6F10               	movwf	(_loRa+12)& (0+255),b
 50719  006664  0E00               	movlw	0
 50720  006666  6F11               	movwf	(_loRa+13)& (0+255),b
 50721                           
 50722                           ; BSR set to: 2
 50723                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 50724  006668  0E00               	movlw	0
 50725  00666A  6F0A               	movwf	(_loRa+6)& (0+255),b
 50726  00666C  0E00               	movlw	0
 50727  00666E  6F0B               	movwf	(_loRa+7)& (0+255),b
 50728  006670  0E00               	movlw	0
 50729  006672  6F0C               	movwf	(_loRa+8)& (0+255),b
 50730  006674  0E00               	movlw	0
 50731  006676  6F0D               	movwf	(_loRa+9)& (0+255),b
 50732                           
 50733                           ; BSR set to: 2
 50734                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 50735  006678  0E00               	movlw	0
 50736  00667A  6FD7               	movwf	(_loRa+211)& (0+255),b
 50737  00667C  0E00               	movlw	0
 50738  00667E  6FD6               	movwf	(_loRa+210)& (0+255),b
 50739                           
 50740                           ; BSR set to: 2
 50741                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 50742  006680  0E00               	movlw	0
 50743  006682  6FE0               	movwf	(_loRa+220)& (0+255),b
 50744  006684  0E01               	movlw	1
 50745  006686  6FDF               	movwf	(_loRa+219)& (0+255),b
 50746                           
 50747                           ; BSR set to: 2
 50748                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 50749  006688  0E00               	movlw	0
 50750  00668A  6FD5               	movwf	(_loRa+209)& (0+255),b
 50751  00668C  0E00               	movlw	0
 50752  00668E  6FD4               	movwf	(_loRa+208)& (0+255),b
 50753                           
 50754                           ; BSR set to: 2
 50755                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 50756  006690  0E00               	movlw	0
 50757  006692  6FF2               	movwf	(_loRa+238)& (0+255),b
 50758                           
 50759                           ; BSR set to: 2
 50760                           ;lorawan_eu.c: 169: loRa.offset = 0;
 50761  006694  0E00               	movlw	0
 50762  006696  6FF3               	movwf	(_loRa+239)& (0+255),b
 50763                           
 50764                           ; BSR set to: 2
 50765                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 50766  006698  0E00               	movlw	0
 50767  00669A  6FCC               	movwf	(_loRa+200)& (0+255),b
 50768  00669C  0E00               	movlw	0
 50769  00669E  6FCD               	movwf	(_loRa+201)& (0+255),b
 50770  0066A0  0E00               	movlw	0
 50771  0066A2  6FCE               	movwf	(_loRa+202)& (0+255),b
 50772  0066A4  0E00               	movlw	0
 50773  0066A6  6FCF               	movwf	(_loRa+203)& (0+255),b
 50774                           
 50775                           ; BSR set to: 2
 50776                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 50777  0066A8  9507               	bcf	(_loRa+3)& (0+255),2,b
 50778                           
 50779                           ; BSR set to: 2
 50780                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 50781  0066AA  0E00               	movlw	0
 50782  0066AC  6F06               	movwf	(_loRa+2)& (0+255),b
 50783  0066AE  0E00               	movlw	0
 50784  0066B0  6F07               	movwf	(_loRa+3)& (0+255),b
 50785  0066B2  0E00               	movlw	0
 50786  0066B4  6F08               	movwf	(_loRa+4)& (0+255),b
 50787  0066B6  0E00               	movlw	0
 50788  0066B8  6F09               	movwf	(_loRa+5)& (0+255),b
 50789                           
 50790                           ; BSR set to: 2
 50791                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 50792  0066BA  0E00               	movlw	0
 50793  0066BC  6F05               	movwf	(_loRa+1)& (0+255),b
 50794  0066BE  0E00               	movlw	0
 50795  0066C0  6F04               	movwf	_loRa& (0+255),b
 50796                           
 50797                           ; BSR set to: 2
 50798                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 50799  0066C2  0E07               	movlw	7
 50800  0066C4  6FDB               	movwf	(_loRa+215)& (0+255),b
 50801                           
 50802                           ; BSR set to: 2
 50803                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 50804  0066C6  0E00               	movlw	0
 50805  0066C8  6FDA               	movwf	(_loRa+214)& (0+255),b
 50806                           
 50807                           ; BSR set to: 2
 50808                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 50809  0066CA  0E01               	movlw	1
 50810  0066CC  6FDD               	movwf	(_loRa+217)& (0+255),b
 50811                           
 50812                           ; BSR set to: 2
 50813                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 50814  0066CE  0E01               	movlw	1
 50815  0066D0  6FDC               	movwf	(_loRa+216)& (0+255),b
 50816                           
 50817                           ; BSR set to: 2
 50818                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 50819  0066D2  69E4               	setf	(_loRa+224)& (0+255),b
 50820                           
 50821                           ; BSR set to: 2
 50822                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 50823  0066D4  C0B1  F2A8         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 50824                           
 50825                           ; BSR set to: 2
 50826                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 50827  0066D8  0E00               	movlw	0
 50828  0066DA  6F16               	movwf	(_loRa+18)& (0+255),b
 50829                           
 50830                           ; BSR set to: 2
 50831                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 50832  0066DC  0E10               	movlw	16
 50833  0066DE  6FF1               	movwf	(_loRa+237)& (0+255),b
 50834                           
 50835                           ; BSR set to: 2
 50836                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 50837  0066E0  0100               	movlb	0	; () banked
 50838  0066E2  51B1               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 50839  0066E4  A4D8               	btfss	status,2,c
 50840  0066E6  D01B               	goto	l1304
 50841                           
 50842                           ; BSR set to: 0
 50843                           ;lorawan_eu.c: 193: {
 50844                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 50845  0066E8  0E3F               	movlw	low (_radioBuffer+16)
 50846  0066EA  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50847  0066EC  0E06               	movlw	high (_radioBuffer+16)
 50848  0066EE  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50849  0066F0  0EA0               	movlw	160
 50850  0066F2  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50851  0066F4  0E27               	movlw	39
 50852  0066F6  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50853  0066F8  0EBE               	movlw	190
 50854  0066FA  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50855  0066FC  0E33               	movlw	51
 50856  0066FE  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50857  006700  ECEE  F033         	call	_RADIO_Init	;wreg free
 50858                           
 50859                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 50860  006704  EC9E  F04F         	call	_InitDefault868Channels	;wreg free
 50861                           
 50862                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 50863  006708  0E00               	movlw	0
 50864  00670A  0102               	movlb	2	; () banked
 50865  00670C  6F20               	movwf	(_loRa+28)& (0+255),b
 50866                           
 50867                           ; BSR set to: 2
 50868                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 50869  00670E  0E08               	movlw	8
 50870  006710  6F1C               	movwf	(_loRa+24)& (0+255),b
 50871  006712  0EE6               	movlw	230
 50872  006714  6F1D               	movwf	(_loRa+25)& (0+255),b
 50873  006716  0ED3               	movlw	211
 50874  006718  6F1E               	movwf	(_loRa+26)& (0+255),b
 50875  00671A  0E33               	movlw	51
 50876  00671C  D01B               	goto	L28
 50877  00671E                     l1304:
 50878                           
 50879                           ;lorawan_eu.c: 201: else
 50880                           ;lorawan_eu.c: 202: {
 50881                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 50882                           
 50883                           ; BSR set to: 2
 50884  00671E  0E3F               	movlw	low (_radioBuffer+16)
 50885  006720  0100               	movlb	0	; () banked
 50886  006722  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 50887  006724  0E06               	movlw	high (_radioBuffer+16)
 50888  006726  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 50889  006728  0E20               	movlw	32
 50890  00672A  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 50891  00672C  0EA2               	movlw	162
 50892  00672E  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 50893  006730  0ED3               	movlw	211
 50894  006732  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 50895  006734  0E19               	movlw	25
 50896  006736  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 50897  006738  ECEE  F033         	call	_RADIO_Init	;wreg free
 50898                           
 50899                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 50900  00673C  ECE3  F04F         	call	_InitDefault433Channels	;wreg free
 50901                           
 50902                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 50903  006740  0E00               	movlw	0
 50904  006742  0102               	movlb	2	; () banked
 50905  006744  6F20               	movwf	(_loRa+28)& (0+255),b
 50906                           
 50907                           ; BSR set to: 2
 50908                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 50909  006746  0E28               	movlw	40
 50910  006748  6F1C               	movwf	(_loRa+24)& (0+255),b
 50911  00674A  0E76               	movlw	118
 50912  00674C  6F1D               	movwf	(_loRa+25)& (0+255),b
 50913  00674E  0EE8               	movlw	232
 50914  006750  6F1E               	movwf	(_loRa+26)& (0+255),b
 50915  006752  0E19               	movlw	25
 50916  006754                     L28:
 50917  006754  6F1F               	movwf	(_loRa+27)& (0+255),b
 50918                           
 50919                           ; BSR set to: 2
 50920                           ;lorawan_eu.c: 209: }
 50921                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 50922                           
 50923                           ; BSR set to: 2
 50924  006756  0E01               	movlw	1
 50925  006758  6FE5               	movwf	(_loRa+225)& (0+255),b
 50926                           
 50927                           ; BSR set to: 2
 50928                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 50929  00675A  0E00               	movlw	0
 50930  00675C  6FE3               	movwf	(_loRa+223)& (0+255),b
 50931                           
 50932                           ; BSR set to: 2
 50933                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 50934  00675E  EC5B  F044         	call	_UpdateMinMaxChDataRate	;wreg free
 50935                           
 50936                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 50937  006762  0E00               	movlw	0
 50938  006764  0102               	movlb	2	; () banked
 50939  006766  6FAA               	movwf	(_loRa+166)& (0+255),b
 50940  006768  0E00               	movlw	0
 50941  00676A  6FA9               	movwf	(_loRa+165)& (0+255),b
 50942                           
 50943                           ; BSR set to: 2
 50944                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 50945  00676C  0E21               	movlw	low (_loRa+29)
 50946  00676E  0100               	movlb	0	; () banked
 50947  006770  6F60               	movwf	memset@p1& (0+255),b
 50948  006772  0E02               	movlw	high (_loRa+29)
 50949  006774  6F61               	movwf	(memset@p1+1)& (0+255),b
 50950  006776  0E00               	movlw	0
 50951  006778  6F63               	movwf	(memset@c+1)& (0+255),b
 50952  00677A  0E00               	movlw	0
 50953  00677C  6F62               	movwf	memset@c& (0+255),b
 50954  00677E  0E00               	movlw	0
 50955  006780  6F65               	movwf	(memset@n+1)& (0+255),b
 50956  006782  0E69               	movlw	105
 50957  006784  6F64               	movwf	memset@n& (0+255),b
 50958  006786  EC1F  F05D         	call	_memset	;wreg free
 50959                           
 50960                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 50961  00678A  0E03               	movlw	3
 50962  00678C  0102               	movlb	2	; () banked
 50963  00678E  6F99               	movwf	(_loRa+149)& (0+255),b
 50964  006790  0EE8               	movlw	232
 50965  006792  6F98               	movwf	(_loRa+148)& (0+255),b
 50966                           
 50967                           ; BSR set to: 2
 50968                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 50969  006794  0E07               	movlw	7
 50970  006796  6F9B               	movwf	(_loRa+151)& (0+255),b
 50971  006798  0ED0               	movlw	208
 50972  00679A  6F9A               	movwf	(_loRa+150)& (0+255),b
 50973                           
 50974                           ; BSR set to: 2
 50975                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 50976  00679C  0E13               	movlw	19
 50977  00679E  6F9D               	movwf	(_loRa+153)& (0+255),b
 50978  0067A0  0E88               	movlw	136
 50979  0067A2  6F9C               	movwf	(_loRa+152)& (0+255),b
 50980                           
 50981                           ; BSR set to: 2
 50982                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 50983  0067A4  0E17               	movlw	23
 50984  0067A6  6F9F               	movwf	(_loRa+155)& (0+255),b
 50985  0067A8  0E70               	movlw	112
 50986  0067AA  6F9E               	movwf	(_loRa+154)& (0+255),b
 50987                           
 50988                           ; BSR set to: 2
 50989                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 50990  0067AC  0E07               	movlw	7
 50991  0067AE  6FA5               	movwf	(_loRa+161)& (0+255),b
 50992  0067B0  0ED0               	movlw	208
 50993  0067B2  6FA4               	movwf	(_loRa+160)& (0+255),b
 50994                           
 50995                           ; BSR set to: 2
 50996                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 50997  0067B4  0E20               	movlw	32
 50998  0067B6  6FA7               	movwf	(_loRa+163)& (0+255),b
 50999                           
 51000                           ; BSR set to: 2
 51001                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 51002  0067B8  0E40               	movlw	64
 51003  0067BA  6FA6               	movwf	(_loRa+162)& (0+255),b
 51004                           
 51005                           ; BSR set to: 2
 51006                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 51007  0067BC  0E40               	movlw	64
 51008  0067BE  6FA1               	movwf	(_loRa+157)& (0+255),b
 51009  0067C0  0E00               	movlw	0
 51010  0067C2  6FA0               	movwf	(_loRa+156)& (0+255),b
 51011                           
 51012                           ; BSR set to: 2
 51013                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 51014  0067C4  0E40               	movlw	64
 51015  0067C6  6FA3               	movwf	(_loRa+159)& (0+255),b
 51016  0067C8  0E00               	movlw	0
 51017  0067CA  6FA2               	movwf	(_loRa+158)& (0+255),b
 51018                           
 51019                           ; BSR set to: 2
 51020                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 51021  0067CC  0E00               	movlw	0
 51022  0067CE  0100               	movlb	0	; () banked
 51023  0067D0  6FA7               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 51024  0067D2  0E00               	movlw	0
 51025  0067D4  6FA6               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 51026  0067D6  EC96  F03B         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 51027  0067DA  0012               	return		;funcret
 51028  0067DC                     __end_of_LORAWAN_Reset:
 51029                           	opt stack 0
 51030                           tosu	equ	0xFFF
 51031                           tosh	equ	0xFFE
 51032                           tosl	equ	0xFFD
 51033                           pclath	equ	0xFFA
 51034                           tblptru	equ	0xFF8
 51035                           tblptrh	equ	0xFF7
 51036                           tblptrl	equ	0xFF6
 51037                           tablat	equ	0xFF5
 51038                           prodh	equ	0xFF4
 51039                           prodl	equ	0xFF3
 51040                           intcon	equ	0xFF2
 51041                           intcon2	equ	0xFF1
 51042                           intcon3	equ	0xFF0
 51043                           indf0	equ	0xFEF
 51044                           postinc0	equ	0xFEE
 51045                           plusw0	equ	0xFEB
 51046                           fsr0h	equ	0xFEA
 51047                           fsr0l	equ	0xFE9
 51048                           wreg	equ	0xFE8
 51049                           postinc1	equ	0xFE6
 51050                           postdec1	equ	0xFE5
 51051                           plusw1	equ	0xFE3
 51052                           fsr1h	equ	0xFE2
 51053                           fsr1l	equ	0xFE1
 51054                           indf2	equ	0xFDF
 51055                           postinc2	equ	0xFDE
 51056                           postdec2	equ	0xFDD
 51057                           plusw2	equ	0xFDB
 51058                           fsr2h	equ	0xFDA
 51059                           fsr2l	equ	0xFD9
 51060                           status	equ	0xFD8
 51061                           
 51062 ;; *************** function _UpdateMinMaxChDataRate *****************
 51063 ;; Defined at:
 51064 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 51065 ;; Parameters:    Size  Location     Type
 51066 ;;		None
 51067 ;; Auto vars:     Size  Location     Type
 51068 ;;  i               1    1[BANK0 ] unsigned char 
 51069 ;; Return value:  Size  Location     Type
 51070 ;;                  1    wreg      void 
 51071 ;; Registers used:
 51072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51073 ;; Tracked objects:
 51074 ;;		On entry : 0/0
 51075 ;;		On exit  : 0/0
 51076 ;;		Unchanged: 0/0
 51077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51082 ;;Total ram usage:        2 bytes
 51083 ;; Hardware stack levels used:    1
 51084 ;; Hardware stack levels required when called:    7
 51085 ;; This function calls:
 51086 ;;		Nothing
 51087 ;; This function is called by:
 51088 ;;		_LORAWAN_Reset
 51089 ;; This function uses a non-reentrant model
 51090 ;;
 51091                           
 51092                           	psect	text267
 51093  0088B6                     __ptext267:
 51094                           	opt stack 0
 51095  0088B6                     _UpdateMinMaxChDataRate:
 51096                           	opt stack 21
 51097                           
 51098                           ;lorawan.c: 1065: uint8_t i;
 51099                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 51100                           
 51101                           ;incstack = 0
 51102  0088B6  0E07               	movlw	7
 51103  0088B8  0102               	movlb	2	; () banked
 51104  0088BA  6FEF               	movwf	(_loRa+235)& (0+255),b
 51105                           
 51106                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 51107  0088BC  0E00               	movlw	0
 51108  0088BE  6FF0               	movwf	(_loRa+236)& (0+255),b
 51109                           
 51110                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 51111  0088C0  0E00               	movlw	0
 51112  0088C2  0100               	movlb	0	; () banked
 51113  0088C4  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 51114  0088C6  D06D               	goto	l2206
 51115  0088C8                     
 51116                           ; BSR set to: 0
 51117                           ;lorawan.c: 1072: {
 51118                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 51119                           
 51120                           ; BSR set to: 0
 51121  0088C8  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51122  0088CA  0D0E               	mullw	14
 51123  0088CC  0E05               	movlw	5
 51124  0088CE  26F3               	addwf	prodl,f,c
 51125  0088D0  0E00               	movlw	0
 51126  0088D2  22F4               	addwfc	prodh,f,c
 51127  0088D4  0E00               	movlw	low _Channels
 51128  0088D6  24F3               	addwf	prodl,w,c
 51129  0088D8  6ED9               	movwf	fsr2l,c
 51130  0088DA  0E04               	movlw	high _Channels
 51131  0088DC  20F4               	addwfc	prodh,w,c
 51132  0088DE  6EDA               	movwf	fsr2h,c
 51133  0088E0  0104               	movlb	4	; () banked
 51134  0088E2  50DF               	movf	223,w,c
 51135  0088E4  0B0F               	andlw	15
 51136  0088E6  0100               	movlb	0	; () banked
 51137  0088E8  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 51138  0088EA  0102               	movlb	2	; () banked
 51139  0088EC  51EF               	movf	(_loRa+235)& (0+255),w,b
 51140  0088EE  0100               	movlb	0	; () banked
 51141  0088F0  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 51142  0088F2  B0D8               	btfsc	status,0,c
 51143  0088F4  D020               	goto	l2208
 51144                           
 51145                           ; BSR set to: 0
 51146  0088F6  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51147  0088F8  0D0E               	mullw	14
 51148  0088FA  0E04               	movlw	4
 51149  0088FC  26F3               	addwf	prodl,f,c
 51150  0088FE  0E00               	movlw	0
 51151  008900  22F4               	addwfc	prodh,f,c
 51152  008902  0E00               	movlw	low _Channels
 51153  008904  24F3               	addwf	prodl,w,c
 51154  008906  6ED9               	movwf	fsr2l,c
 51155  008908  0E04               	movlw	high _Channels
 51156  00890A  20F4               	addwfc	prodh,w,c
 51157  00890C  6EDA               	movwf	fsr2h,c
 51158  00890E  04DE               	decf	postinc2,w,c
 51159  008910  A4D8               	btfss	status,2,c
 51160  008912  D011               	goto	l2208
 51161                           
 51162                           ; BSR set to: 0
 51163                           ;lorawan.c: 1074: {
 51164                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 51165  008914  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51166  008916  0D0E               	mullw	14
 51167  008918  0E05               	movlw	5
 51168  00891A  26F3               	addwf	prodl,f,c
 51169  00891C  0E00               	movlw	0
 51170  00891E  22F4               	addwfc	prodh,f,c
 51171  008920  0E00               	movlw	low _Channels
 51172  008922  24F3               	addwf	prodl,w,c
 51173  008924  6ED9               	movwf	fsr2l,c
 51174  008926  0E04               	movlw	high _Channels
 51175  008928  20F4               	addwfc	prodh,w,c
 51176  00892A  6EDA               	movwf	fsr2h,c
 51177  00892C  0104               	movlb	4	; () banked
 51178  00892E  50DF               	movf	223,w,c
 51179  008930  0B0F               	andlw	15
 51180  008932  0102               	movlb	2	; () banked
 51181  008934  6FEF               	movwf	(_loRa+235)& (0+255),b
 51182  008936                     l2208:
 51183                           
 51184                           ;lorawan.c: 1076: }
 51185                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 51186  008936  0100               	movlb	0	; () banked
 51187  008938  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51188  00893A  0D0E               	mullw	14
 51189  00893C  0E05               	movlw	5
 51190  00893E  26F3               	addwf	prodl,f,c
 51191  008940  0E00               	movlw	0
 51192  008942  22F4               	addwfc	prodh,f,c
 51193  008944  0E00               	movlw	low _Channels
 51194  008946  24F3               	addwf	prodl,w,c
 51195  008948  6ED9               	movwf	fsr2l,c
 51196  00894A  0E04               	movlw	high _Channels
 51197  00894C  20F4               	addwfc	prodh,w,c
 51198  00894E  6EDA               	movwf	fsr2h,c
 51199  008950  0104               	movlb	4	; () banked
 51200  008952  38DF               	swapf	223,w,c
 51201  008954  0B0F               	andlw	15
 51202  008956  0102               	movlb	2	; () banked
 51203  008958  61F0               	cpfslt	(_loRa+236)& (0+255),b
 51204  00895A  D021               	goto	l2209
 51205                           
 51206                           ; BSR set to: 2
 51207  00895C  0100               	movlb	0	; () banked
 51208  00895E  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51209  008960  0D0E               	mullw	14
 51210  008962  0E04               	movlw	4
 51211  008964  26F3               	addwf	prodl,f,c
 51212  008966  0E00               	movlw	0
 51213  008968  22F4               	addwfc	prodh,f,c
 51214  00896A  0E00               	movlw	low _Channels
 51215  00896C  24F3               	addwf	prodl,w,c
 51216  00896E  6ED9               	movwf	fsr2l,c
 51217  008970  0E04               	movlw	high _Channels
 51218  008972  20F4               	addwfc	prodh,w,c
 51219  008974  6EDA               	movwf	fsr2h,c
 51220  008976  04DE               	decf	postinc2,w,c
 51221  008978  A4D8               	btfss	status,2,c
 51222  00897A  D011               	goto	l2209
 51223                           
 51224                           ; BSR set to: 0
 51225                           ;lorawan.c: 1078: {
 51226                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 51227  00897C  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51228  00897E  0D0E               	mullw	14
 51229  008980  0E05               	movlw	5
 51230  008982  26F3               	addwf	prodl,f,c
 51231  008984  0E00               	movlw	0
 51232  008986  22F4               	addwfc	prodh,f,c
 51233  008988  0E00               	movlw	low _Channels
 51234  00898A  24F3               	addwf	prodl,w,c
 51235  00898C  6ED9               	movwf	fsr2l,c
 51236  00898E  0E04               	movlw	high _Channels
 51237  008990  20F4               	addwfc	prodh,w,c
 51238  008992  6EDA               	movwf	fsr2h,c
 51239  008994  0104               	movlb	4	; () banked
 51240  008996  38DF               	swapf	223,w,c
 51241  008998  0B0F               	andlw	15
 51242  00899A  0102               	movlb	2	; () banked
 51243  00899C  6FF0               	movwf	(_loRa+236)& (0+255),b
 51244  00899E                     l2209:
 51245                           
 51246                           ; BSR set to: 2
 51247  00899E  0100               	movlb	0	; () banked
 51248  0089A0  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 51249  0089A2                     l2206:
 51250                           
 51251                           ; BSR set to: 0
 51252                           
 51253                           ; BSR set to: 0
 51254  0089A2  0102               	movlb	2	; () banked
 51255  0089A4  51F1               	movf	(_loRa+237)& (0+255),w,b
 51256  0089A6  0100               	movlb	0	; () banked
 51257  0089A8  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 51258  0089AA  B0D8               	btfsc	status,0,c
 51259  0089AC  0012               	return	
 51260  0089AE  D78C               	goto	l2207
 51261  0089B0                     __end_of_UpdateMinMaxChDataRate:
 51262                           	opt stack 0
 51263                           tosu	equ	0xFFF
 51264                           tosh	equ	0xFFE
 51265                           tosl	equ	0xFFD
 51266                           pclath	equ	0xFFA
 51267                           tblptru	equ	0xFF8
 51268                           tblptrh	equ	0xFF7
 51269                           tblptrl	equ	0xFF6
 51270                           tablat	equ	0xFF5
 51271                           prodh	equ	0xFF4
 51272                           prodl	equ	0xFF3
 51273                           intcon	equ	0xFF2
 51274                           intcon2	equ	0xFF1
 51275                           intcon3	equ	0xFF0
 51276                           indf0	equ	0xFEF
 51277                           postinc0	equ	0xFEE
 51278                           plusw0	equ	0xFEB
 51279                           fsr0h	equ	0xFEA
 51280                           fsr0l	equ	0xFE9
 51281                           wreg	equ	0xFE8
 51282                           postinc1	equ	0xFE6
 51283                           postdec1	equ	0xFE5
 51284                           plusw1	equ	0xFE3
 51285                           fsr1h	equ	0xFE2
 51286                           fsr1l	equ	0xFE1
 51287                           indf2	equ	0xFDF
 51288                           postinc2	equ	0xFDE
 51289                           postdec2	equ	0xFDD
 51290                           plusw2	equ	0xFDB
 51291                           fsr2h	equ	0xFDA
 51292                           fsr2l	equ	0xFD9
 51293                           status	equ	0xFD8
 51294                           
 51295 ;; *************** function _StopAllSoftwareTimers *****************
 51296 ;; Defined at:
 51297 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 51298 ;; Parameters:    Size  Location     Type
 51299 ;;		None
 51300 ;; Auto vars:     Size  Location     Type
 51301 ;;		None
 51302 ;; Return value:  Size  Location     Type
 51303 ;;                  1    wreg      void 
 51304 ;; Registers used:
 51305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51306 ;; Tracked objects:
 51307 ;;		On entry : 0/0
 51308 ;;		On exit  : 0/0
 51309 ;;		Unchanged: 0/0
 51310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51315 ;;Total ram usage:        0 bytes
 51316 ;; Hardware stack levels used:    1
 51317 ;; Hardware stack levels required when called:    8
 51318 ;; This function calls:
 51319 ;;		_SwTimerStop
 51320 ;; This function is called by:
 51321 ;;		_LORAWAN_Init
 51322 ;;		_LORAWAN_Reset
 51323 ;; This function uses a non-reentrant model
 51324 ;;
 51325                           
 51326                           	psect	text268
 51327  00B088                     __ptext268:
 51328                           	opt stack 0
 51329  00B088                     _StopAllSoftwareTimers:
 51330                           	opt stack 21
 51331                           
 51332                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 51333                           
 51334                           ; BSR set to: 0
 51335                           ;incstack = 0
 51336  00B088  0102               	movlb	2	; () banked
 51337  00B08A  51E6               	movf	(_loRa+226)& (0+255),w,b
 51338  00B08C  ECA6  F05E         	call	_SwTimerStop
 51339                           
 51340                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 51341  00B090  0102               	movlb	2	; () banked
 51342  00B092  51E7               	movf	(_loRa+227)& (0+255),w,b
 51343  00B094  ECA6  F05E         	call	_SwTimerStop
 51344                           
 51345                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 51346  00B098  0102               	movlb	2	; () banked
 51347  00B09A  51EB               	movf	(_loRa+231)& (0+255),w,b
 51348  00B09C  ECA6  F05E         	call	_SwTimerStop
 51349                           
 51350                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 51351  00B0A0  0102               	movlb	2	; () banked
 51352  00B0A2  51E8               	movf	(_loRa+228)& (0+255),w,b
 51353  00B0A4  ECA6  F05E         	call	_SwTimerStop
 51354                           
 51355                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 51356  00B0A8  0102               	movlb	2	; () banked
 51357  00B0AA  51E9               	movf	(_loRa+229)& (0+255),w,b
 51358  00B0AC  ECA6  F05E         	call	_SwTimerStop
 51359                           
 51360                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 51361  00B0B0  0102               	movlb	2	; () banked
 51362  00B0B2  51EC               	movf	(_loRa+232)& (0+255),w,b
 51363  00B0B4  ECA6  F05E         	call	_SwTimerStop
 51364                           
 51365                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 51366  00B0B8  0102               	movlb	2	; () banked
 51367  00B0BA  51EA               	movf	(_loRa+230)& (0+255),w,b
 51368  00B0BC  ECA6  F05E         	call	_SwTimerStop
 51369                           
 51370                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 51371  00B0C0  0102               	movlb	2	; () banked
 51372  00B0C2  51EE               	movf	(_loRa+234)& (0+255),w,b
 51373  00B0C4  ECA6  F05E         	call	_SwTimerStop
 51374                           
 51375                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 51376  00B0C8  0102               	movlb	2	; () banked
 51377  00B0CA  51F7               	movf	(_loRa+243)& (0+255),w,b
 51378  00B0CC  ECA6  F05E         	call	_SwTimerStop
 51379                           
 51380                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 51381  00B0D0  0102               	movlb	2	; () banked
 51382  00B0D2  51ED               	movf	(_loRa+233)& (0+255),w,b
 51383  00B0D4  ECA6  F05E         	call	_SwTimerStop
 51384  00B0D8  0012               	return		;funcret
 51385  00B0DA                     __end_of_StopAllSoftwareTimers:
 51386                           	opt stack 0
 51387                           tosu	equ	0xFFF
 51388                           tosh	equ	0xFFE
 51389                           tosl	equ	0xFFD
 51390                           pclath	equ	0xFFA
 51391                           tblptru	equ	0xFF8
 51392                           tblptrh	equ	0xFF7
 51393                           tblptrl	equ	0xFF6
 51394                           tablat	equ	0xFF5
 51395                           prodh	equ	0xFF4
 51396                           prodl	equ	0xFF3
 51397                           intcon	equ	0xFF2
 51398                           intcon2	equ	0xFF1
 51399                           intcon3	equ	0xFF0
 51400                           indf0	equ	0xFEF
 51401                           postinc0	equ	0xFEE
 51402                           plusw0	equ	0xFEB
 51403                           fsr0h	equ	0xFEA
 51404                           fsr0l	equ	0xFE9
 51405                           wreg	equ	0xFE8
 51406                           postinc1	equ	0xFE6
 51407                           postdec1	equ	0xFE5
 51408                           plusw1	equ	0xFE3
 51409                           fsr1h	equ	0xFE2
 51410                           fsr1l	equ	0xFE1
 51411                           indf2	equ	0xFDF
 51412                           postinc2	equ	0xFDE
 51413                           postdec2	equ	0xFDD
 51414                           plusw2	equ	0xFDB
 51415                           fsr2h	equ	0xFDA
 51416                           fsr2l	equ	0xFD9
 51417                           status	equ	0xFD8
 51418                           
 51419 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 51420 ;; Defined at:
 51421 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 51422 ;; Parameters:    Size  Location     Type
 51423 ;;  syncWord        1    wreg     unsigned char 
 51424 ;; Auto vars:     Size  Location     Type
 51425 ;;  syncWord        1    0[BANK0 ] unsigned char 
 51426 ;; Return value:  Size  Location     Type
 51427 ;;                  1    wreg      void 
 51428 ;; Registers used:
 51429 ;;		wreg
 51430 ;; Tracked objects:
 51431 ;;		On entry : 0/0
 51432 ;;		On exit  : 0/0
 51433 ;;		Unchanged: 0/0
 51434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51439 ;;Total ram usage:        1 bytes
 51440 ;; Hardware stack levels used:    1
 51441 ;; Hardware stack levels required when called:    7
 51442 ;; This function calls:
 51443 ;;		Nothing
 51444 ;; This function is called by:
 51445 ;;		_LORAWAN_Reset
 51446 ;;		_ConfigureRadio
 51447 ;; This function uses a non-reentrant model
 51448 ;;
 51449                           
 51450                           	psect	text269
 51451  00C5F0                     __ptext269:
 51452                           	opt stack 0
 51453  00C5F0                     _RADIO_SetLoRaSyncWord:
 51454                           	opt stack 19
 51455                           
 51456                           ;incstack = 0
 51457                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 51458  00C5F0  0100               	movlb	0	; () banked
 51459  00C5F2  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 51460                           
 51461                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 51462  00C5F4  C060  F143         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 51463  00C5F8  0012               	return		;funcret
 51464  00C5FA                     __end_of_RADIO_SetLoRaSyncWord:
 51465                           	opt stack 0
 51466                           tosu	equ	0xFFF
 51467                           tosh	equ	0xFFE
 51468                           tosl	equ	0xFFD
 51469                           pclath	equ	0xFFA
 51470                           tblptru	equ	0xFF8
 51471                           tblptrh	equ	0xFF7
 51472                           tblptrl	equ	0xFF6
 51473                           tablat	equ	0xFF5
 51474                           prodh	equ	0xFF4
 51475                           prodl	equ	0xFF3
 51476                           intcon	equ	0xFF2
 51477                           intcon2	equ	0xFF1
 51478                           intcon3	equ	0xFF0
 51479                           indf0	equ	0xFEF
 51480                           postinc0	equ	0xFEE
 51481                           plusw0	equ	0xFEB
 51482                           fsr0h	equ	0xFEA
 51483                           fsr0l	equ	0xFE9
 51484                           wreg	equ	0xFE8
 51485                           postinc1	equ	0xFE6
 51486                           postdec1	equ	0xFE5
 51487                           plusw1	equ	0xFE3
 51488                           fsr1h	equ	0xFE2
 51489                           fsr1l	equ	0xFE1
 51490                           indf2	equ	0xFDF
 51491                           postinc2	equ	0xFDE
 51492                           postdec2	equ	0xFDD
 51493                           plusw2	equ	0xFDB
 51494                           fsr2h	equ	0xFDA
 51495                           fsr2l	equ	0xFD9
 51496                           status	equ	0xFD8
 51497                           
 51498 ;; *************** function _RADIO_Init *****************
 51499 ;; Defined at:
 51500 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 51501 ;; Parameters:    Size  Location     Type
 51502 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 51503 ;;		 -> radioBuffer(271), 
 51504 ;;  frequency       4   27[BANK0 ] unsigned long 
 51505 ;; Auto vars:     Size  Location     Type
 51506 ;;		None
 51507 ;; Return value:  Size  Location     Type
 51508 ;;                  1    wreg      void 
 51509 ;; Registers used:
 51510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51511 ;; Tracked objects:
 51512 ;;		On entry : 0/0
 51513 ;;		On exit  : 0/0
 51514 ;;		Unchanged: 0/0
 51515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51516 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51519 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51520 ;;Total ram usage:        7 bytes
 51521 ;; Hardware stack levels used:    1
 51522 ;; Hardware stack levels required when called:   11
 51523 ;; This function calls:
 51524 ;;		_RADIO_RegisterRead
 51525 ;;		_RADIO_RegisterWrite
 51526 ;;		_RADIO_Reset
 51527 ;;		_RADIO_WriteFrequency
 51528 ;;		_RADIO_WriteMode
 51529 ;;		_SwTimerCreate
 51530 ;;		_SwTimerSetCallback
 51531 ;;		_SwTimerStop
 51532 ;; This function is called by:
 51533 ;;		_LORAWAN_Init
 51534 ;;		_LORAWAN_Reset
 51535 ;; This function uses a non-reentrant model
 51536 ;;
 51537                           
 51538                           	psect	text270
 51539  0067DC                     __ptext270:
 51540                           	opt stack 0
 51541  0067DC                     _RADIO_Init:
 51542                           	opt stack 18
 51543                           
 51544                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 51545                           
 51546                           ;incstack = 0
 51547  0067DC  C07B  F135         	movff	RADIO_Init@frequency,_RadioConfiguration
 51548  0067E0  C07C  F136         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 51549  0067E4  C07D  F137         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 51550  0067E8  C07E  F138         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 51551                           
 51552                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 51553  0067EC  0EA8               	movlw	168
 51554  0067EE  0101               	movlb	1	; () banked
 51555  0067F0  6F39               	movwf	(_RadioConfiguration+4)& (0+255),b
 51556  0067F2  0E61               	movlw	97
 51557  0067F4  6F3A               	movwf	(_RadioConfiguration+5)& (0+255),b
 51558  0067F6  0E00               	movlw	0
 51559  0067F8  6F3B               	movwf	(_RadioConfiguration+6)& (0+255),b
 51560  0067FA  0E00               	movlw	0
 51561  0067FC  6F3C               	movwf	(_RadioConfiguration+7)& (0+255),b
 51562                           
 51563                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 51564  0067FE  0E50               	movlw	80
 51565  006800  6F3D               	movwf	(_RadioConfiguration+8)& (0+255),b
 51566  006802  0EC3               	movlw	195
 51567  006804  6F3E               	movwf	(_RadioConfiguration+9)& (0+255),b
 51568  006806  0E00               	movlw	0
 51569  006808  6F3F               	movwf	(_RadioConfiguration+10)& (0+255),b
 51570  00680A  0E00               	movlw	0
 51571  00680C  6F40               	movwf	(_RadioConfiguration+11)& (0+255),b
 51572                           
 51573                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 51574  00680E  0E01               	movlw	1
 51575  006810  6F4D               	movwf	(_RadioConfiguration+24)& (0+255),b
 51576                           
 51577                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 51578  006812  0E07               	movlw	7
 51579  006814  6F4F               	movwf	(_RadioConfiguration+26)& (0+255),b
 51580                           
 51581                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 51582  006816  0E01               	movlw	1
 51583  006818  6F50               	movwf	(_RadioConfiguration+27)& (0+255),b
 51584                           
 51585                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 51586  00681A  0E01               	movlw	1
 51587  00681C  6F56               	movwf	(_RadioConfiguration+33)& (0+255),b
 51588                           
 51589                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 51590  00681E  0E00               	movlw	0
 51591  006820  6F57               	movwf	(_RadioConfiguration+34)& (0+255),b
 51592                           
 51593                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 51594  006822  0E00               	movlw	0
 51595  006824  6F42               	movwf	(_RadioConfiguration+13)& (0+255),b
 51596  006826  0E08               	movlw	8
 51597  006828  6F41               	movwf	(_RadioConfiguration+12)& (0+255),b
 51598                           
 51599                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 51600  00682A  0E0C               	movlw	12
 51601  00682C  6F4E               	movwf	(_RadioConfiguration+25)& (0+255),b
 51602                           
 51603                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 51604  00682E  0E01               	movlw	1
 51605  006830  6F51               	movwf	(_RadioConfiguration+28)& (0+255),b
 51606                           
 51607                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 51608  006832  0E00               	movlw	0
 51609  006834  6F52               	movwf	(_RadioConfiguration+29)& (0+255),b
 51610                           
 51611                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 51612  006836  0E00               	movlw	0
 51613  006838  6F55               	movwf	(_RadioConfiguration+32)& (0+255),b
 51614                           
 51615                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 51616  00683A  0EC1               	movlw	193
 51617  00683C  6F44               	movwf	(_RadioConfiguration+15)& (0+255),b
 51618                           
 51619                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 51620  00683E  0E94               	movlw	148
 51621  006840  6F45               	movwf	(_RadioConfiguration+16)& (0+255),b
 51622                           
 51623                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 51624  006842  0EC1               	movlw	193
 51625  006844  6F46               	movwf	(_RadioConfiguration+17)& (0+255),b
 51626                           
 51627                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 51628  006846  0E03               	movlw	3
 51629  006848  6F4C               	movwf	(_RadioConfiguration+23)& (0+255),b
 51630                           
 51631                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 51632  00684A  0E34               	movlw	52
 51633  00684C  6F43               	movwf	(_RadioConfiguration+14)& (0+255),b
 51634                           
 51635                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 51636  00684E  0E00               	movlw	0
 51637  006850  6F58               	movwf	(_RadioConfiguration+35)& (0+255),b
 51638                           
 51639                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 51640  006852  0E00               	movlw	0
 51641  006854  6F59               	movwf	(_RadioConfiguration+36)& (0+255),b
 51642                           
 51643                           ; BSR set to: 1
 51644                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 51645  006856  C079  F15A         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 51646  00685A  C07A  F15B         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 51647                           
 51648                           ; BSR set to: 1
 51649                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 51650  00685E  0E00               	movlw	0
 51651  006860  6F54               	movwf	(_RadioConfiguration+31)& (0+255),b
 51652  006862  0E00               	movlw	0
 51653  006864  6F53               	movwf	(_RadioConfiguration+30)& (0+255),b
 51654                           
 51655                           ; BSR set to: 1
 51656                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 51657  006866  0E80               	movlw	128
 51658  006868  6F67               	movwf	(_RadioConfiguration+50)& (0+255),b
 51659                           
 51660                           ; BSR set to: 1
 51661                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 51662  00686A  0E98               	movlw	152
 51663  00686C  6F5F               	movwf	(_RadioConfiguration+42)& (0+255),b
 51664  00686E  0E3A               	movlw	58
 51665  006870  6F60               	movwf	(_RadioConfiguration+43)& (0+255),b
 51666  006872  0E00               	movlw	0
 51667  006874  6F61               	movwf	(_RadioConfiguration+44)& (0+255),b
 51668  006876  0E00               	movlw	0
 51669  006878  6F62               	movwf	(_RadioConfiguration+45)& (0+255),b
 51670                           
 51671                           ; BSR set to: 1
 51672                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 51673  00687A  0E02               	movlw	2
 51674  00687C  6F68               	movwf	(_RadioConfiguration+51)& (0+255),b
 51675                           
 51676                           ; BSR set to: 1
 51677                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 51678  00687E  0E0B               	movlw	11
 51679  006880  6F69               	movwf	(_RadioConfiguration+52)& (0+255),b
 51680                           
 51681                           ; BSR set to: 1
 51682                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 51683  006882  0E12               	movlw	18
 51684  006884  6F6A               	movwf	(_RadioConfiguration+53)& (0+255),b
 51685                           
 51686                           ; BSR set to: 1
 51687                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 51688  006886  0E00               	movlw	0
 51689  006888  6F64               	movwf	(_RadioConfiguration+47)& (0+255),b
 51690  00688A  0E00               	movlw	0
 51691  00688C  6F65               	movwf	(_RadioConfiguration+48)& (0+255),b
 51692                           
 51693                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 51694  00688E  5163               	movf	(_RadioConfiguration+46)& (0+255),w,b
 51695  006890  A4D8               	btfss	status,2,c
 51696  006892  D026               	goto	l770
 51697                           
 51698                           ; BSR set to: 1
 51699                           ;radio_driver_SX1276.c: 457: {
 51700                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 51701  006894  EC13  F04F         	call	_SwTimerCreate	;wreg free
 51702  006898  0101               	movlb	1	; () banked
 51703  00689A  6F5C               	movwf	(_RadioConfiguration+39)& (0+255),b
 51704                           
 51705                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 51706  00689C  EC13  F04F         	call	_SwTimerCreate	;wreg free
 51707  0068A0  0101               	movlb	1	; () banked
 51708  0068A2  6F5D               	movwf	(_RadioConfiguration+40)& (0+255),b
 51709                           
 51710                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 51711  0068A4  EC13  F04F         	call	_SwTimerCreate	;wreg free
 51712  0068A8  0101               	movlb	1	; () banked
 51713  0068AA  6F5E               	movwf	(_RadioConfiguration+41)& (0+255),b
 51714                           
 51715                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 51716  0068AC  0EB0               	movlw	low _RADIO_RxFSKTimeout
 51717  0068AE  0100               	movlb	0	; () banked
 51718  0068B0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 51719  0068B2  0EB7               	movlw	high _RADIO_RxFSKTimeout
 51720  0068B4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 51721  0068B6  0E00               	movlw	0
 51722  0068B8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 51723  0068BA  0101               	movlb	1	; () banked
 51724  0068BC  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 51725  0068BE  ECB3  F05A         	call	_SwTimerSetCallback
 51726                           
 51727                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 51728  0068C2  0E40               	movlw	low _RADIO_WatchdogTimeout
 51729  0068C4  0100               	movlb	0	; () banked
 51730  0068C6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 51731  0068C8  0EB3               	movlw	high _RADIO_WatchdogTimeout
 51732  0068CA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 51733  0068CC  0E00               	movlw	0
 51734  0068CE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 51735  0068D0  0101               	movlb	1	; () banked
 51736  0068D2  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 51737  0068D4  ECB3  F05A         	call	_SwTimerSetCallback
 51738                           
 51739                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 51740  0068D8  0E01               	movlw	1
 51741  0068DA  0101               	movlb	1	; () banked
 51742  0068DC  6F63               	movwf	(_RadioConfiguration+46)& (0+255),b
 51743                           
 51744                           ;radio_driver_SX1276.c: 466: }
 51745  0068DE  D00B               	goto	l771
 51746  0068E0                     l770:
 51747                           
 51748                           ; BSR set to: 1
 51749                           ;radio_driver_SX1276.c: 467: else
 51750                           ;radio_driver_SX1276.c: 468: {
 51751                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 51752                           
 51753                           ; BSR set to: 1
 51754  0068E0  515C               	movf	(_RadioConfiguration+39)& (0+255),w,b
 51755  0068E2  ECA6  F05E         	call	_SwTimerStop
 51756                           
 51757                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 51758  0068E6  0101               	movlb	1	; () banked
 51759  0068E8  515D               	movf	(_RadioConfiguration+40)& (0+255),w,b
 51760  0068EA  ECA6  F05E         	call	_SwTimerStop
 51761                           
 51762                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 51763  0068EE  0101               	movlb	1	; () banked
 51764  0068F0  515E               	movf	(_RadioConfiguration+41)& (0+255),w,b
 51765  0068F2  ECA6  F05E         	call	_SwTimerStop
 51766  0068F6                     l771:
 51767                           
 51768                           ;radio_driver_SX1276.c: 472: }
 51769                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 51770  0068F6  ECE6  F059         	call	_RADIO_Reset	;wreg free
 51771                           
 51772                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 51773  0068FA  0E00               	movlw	0
 51774  0068FC  0100               	movlb	0	; () banked
 51775  0068FE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 51776  006900  0E01               	movlw	1
 51777  006902  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 51778  006904  0E01               	movlw	1
 51779  006906  ECDC  F043         	call	_RADIO_WriteMode
 51780                           
 51781                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 51782  00690A  C135  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 51783  00690E  C136  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 51784  006912  C137  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 51785  006916  C138  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 51786  00691A  ECC1  F046         	call	_RADIO_WriteFrequency	;wreg free
 51787                           
 51788                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 51789  00691E  0E42               	movlw	66
 51790  006920  0100               	movlb	0	; () banked
 51791  006922  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51792  006924  0E3B               	movlw	59
 51793  006926  ECEB  F05F         	call	_RADIO_RegisterWrite
 51794  00692A                     
 51795                           ;radio_driver_SX1276.c: 490: ;
 51796  00692A  0E3B               	movlw	59
 51797  00692C  EC92  F05E         	call	_RADIO_RegisterRead
 51798  006930  0100               	movlb	0	; () banked
 51799  006932  6F7F               	movwf	??_RADIO_Init& (0+255),b
 51800  006934  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 51801  006936  D7F9               	goto	l773
 51802                           
 51803                           ; BSR set to: 0
 51804                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 51805                           
 51806                           ; BSR set to: 0
 51807  006938  0E23               	movlw	35
 51808  00693A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51809  00693C  0E0C               	movlw	12
 51810  00693E  ECEB  F05F         	call	_RADIO_RegisterWrite
 51811                           
 51812                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 51813  006942  0E1E               	movlw	30
 51814  006944  0100               	movlb	0	; () banked
 51815  006946  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51816  006948  0E0D               	movlw	13
 51817  00694A  ECEB  F05F         	call	_RADIO_RegisterWrite
 51818                           
 51819                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 51820  00694E  0EAA               	movlw	170
 51821  006950  0100               	movlb	0	; () banked
 51822  006952  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51823  006954  0E1F               	movlw	31
 51824  006956  ECEB  F05F         	call	_RADIO_RegisterWrite
 51825                           
 51826                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 51827  00695A  0E8F               	movlw	143
 51828  00695C  0100               	movlb	0	; () banked
 51829  00695E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51830  006960  0E35               	movlw	53
 51831  006962  ECEB  F05F         	call	_RADIO_RegisterWrite
 51832                           
 51833                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 51834  006966  0EFF               	movlw	255
 51835  006968  0100               	movlb	0	; () banked
 51836  00696A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51837  00696C  0E32               	movlw	50
 51838  00696E  ECEB  F05F         	call	_RADIO_RegisterWrite
 51839                           
 51840                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 51841  006972  0E40               	movlw	64
 51842  006974  0100               	movlb	0	; () banked
 51843  006976  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51844  006978  0E31               	movlw	49
 51845  00697A  ECEB  F05F         	call	_RADIO_RegisterWrite
 51846                           
 51847                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 51848  00697E  0E01               	movlw	1
 51849  006980  0100               	movlb	0	; () banked
 51850  006982  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 51851  006984  0E01               	movlw	1
 51852  006986  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 51853  006988  0E00               	movlw	0
 51854  00698A  ECDC  F043         	call	_RADIO_WriteMode
 51855                           
 51856                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 51857  00698E  0EFF               	movlw	255
 51858  006990  0100               	movlb	0	; () banked
 51859  006992  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 51860  006994  0E23               	movlw	35
 51861  006996  ECEB  F05F         	call	_RADIO_RegisterWrite
 51862                           
 51863                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 51864  00699A  0E42               	movlw	66
 51865  00699C  EC92  F05E         	call	_RADIO_RegisterRead
 51866  0069A0  0101               	movlb	1	; () banked
 51867  0069A2  6F66               	movwf	(_RadioConfiguration+49)& (0+255),b
 51868                           
 51869                           ; BSR set to: 1
 51870  0069A4  0012               	return		;funcret
 51871  0069A6                     __end_of_RADIO_Init:
 51872                           	opt stack 0
 51873                           tosu	equ	0xFFF
 51874                           tosh	equ	0xFFE
 51875                           tosl	equ	0xFFD
 51876                           pclath	equ	0xFFA
 51877                           tblptru	equ	0xFF8
 51878                           tblptrh	equ	0xFF7
 51879                           tblptrl	equ	0xFF6
 51880                           tablat	equ	0xFF5
 51881                           prodh	equ	0xFF4
 51882                           prodl	equ	0xFF3
 51883                           intcon	equ	0xFF2
 51884                           intcon2	equ	0xFF1
 51885                           intcon3	equ	0xFF0
 51886                           indf0	equ	0xFEF
 51887                           postinc0	equ	0xFEE
 51888                           plusw0	equ	0xFEB
 51889                           fsr0h	equ	0xFEA
 51890                           fsr0l	equ	0xFE9
 51891                           wreg	equ	0xFE8
 51892                           postinc1	equ	0xFE6
 51893                           postdec1	equ	0xFE5
 51894                           plusw1	equ	0xFE3
 51895                           fsr1h	equ	0xFE2
 51896                           fsr1l	equ	0xFE1
 51897                           indf2	equ	0xFDF
 51898                           postinc2	equ	0xFDE
 51899                           postdec2	equ	0xFDD
 51900                           plusw2	equ	0xFDB
 51901                           fsr2h	equ	0xFDA
 51902                           fsr2l	equ	0xFD9
 51903                           status	equ	0xFD8
 51904                           
 51905 ;; *************** function _SwTimerSetCallback *****************
 51906 ;; Defined at:
 51907 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 51908 ;; Parameters:    Size  Location     Type
 51909 ;;  timerId         1    wreg     unsigned char 
 51910 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 51911 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 51912 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 51913 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 51914 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 51915 ;; Auto vars:     Size  Location     Type
 51916 ;;  timerId         1    3[BANK0 ] unsigned char 
 51917 ;; Return value:  Size  Location     Type
 51918 ;;                  1    wreg      void 
 51919 ;; Registers used:
 51920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51921 ;; Tracked objects:
 51922 ;;		On entry : 0/0
 51923 ;;		On exit  : 0/0
 51924 ;;		Unchanged: 0/0
 51925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 51926 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51930 ;;Total ram usage:        4 bytes
 51931 ;; Hardware stack levels used:    1
 51932 ;; Hardware stack levels required when called:    7
 51933 ;; This function calls:
 51934 ;;		Nothing
 51935 ;; This function is called by:
 51936 ;;		_RADIO_Init
 51937 ;;		_SetCallbackSoftwareTimers
 51938 ;; This function uses a non-reentrant model
 51939 ;;
 51940                           
 51941                           	psect	text271
 51942  00B566                     __ptext271:
 51943                           	opt stack 0
 51944  00B566                     _SwTimerSetCallback:
 51945                           	opt stack 21
 51946                           
 51947                           ; BSR set to: 1
 51948                           ;incstack = 0
 51949                           ;SwTimerSetCallback@timerId stored from wreg
 51950  00B566  0100               	movlb	0	; () banked
 51951  00B568  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 51952                           
 51953                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 51954  00B56A  0100               	movlb	0	; () banked
 51955  00B56C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 51956  00B56E  0D08               	mullw	8
 51957  00B570  0E06               	movlw	6
 51958  00B572  26F3               	addwf	prodl,f,c
 51959  00B574  0E00               	movlw	0
 51960  00B576  22F4               	addwfc	prodh,f,c
 51961  00B578  0E00               	movlw	low _swTimers
 51962  00B57A  24F3               	addwf	prodl,w,c
 51963  00B57C  6ED9               	movwf	fsr2l,c
 51964  00B57E  0E03               	movlw	high _swTimers
 51965  00B580  20F4               	addwfc	prodh,w,c
 51966  00B582  6EDA               	movwf	fsr2h,c
 51967  00B584  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 51968  00B588  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 51969                           
 51970                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 51971  00B58C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 51972  00B58E  0D08               	mullw	8
 51973  00B590  0E05               	movlw	5
 51974  00B592  26F3               	addwf	prodl,f,c
 51975  00B594  0E00               	movlw	0
 51976  00B596  22F4               	addwfc	prodh,f,c
 51977  00B598  0E00               	movlw	low _swTimers
 51978  00B59A  24F3               	addwf	prodl,w,c
 51979  00B59C  6ED9               	movwf	fsr2l,c
 51980  00B59E  0E03               	movlw	high _swTimers
 51981  00B5A0  20F4               	addwfc	prodh,w,c
 51982  00B5A2  6EDA               	movwf	fsr2h,c
 51983  00B5A4  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 51984                           
 51985                           ; BSR set to: 0
 51986  00B5A8  0012               	return		;funcret
 51987  00B5AA                     __end_of_SwTimerSetCallback:
 51988                           	opt stack 0
 51989                           tosu	equ	0xFFF
 51990                           tosh	equ	0xFFE
 51991                           tosl	equ	0xFFD
 51992                           pclath	equ	0xFFA
 51993                           tblptru	equ	0xFF8
 51994                           tblptrh	equ	0xFF7
 51995                           tblptrl	equ	0xFF6
 51996                           tablat	equ	0xFF5
 51997                           prodh	equ	0xFF4
 51998                           prodl	equ	0xFF3
 51999                           intcon	equ	0xFF2
 52000                           intcon2	equ	0xFF1
 52001                           intcon3	equ	0xFF0
 52002                           indf0	equ	0xFEF
 52003                           postinc0	equ	0xFEE
 52004                           plusw0	equ	0xFEB
 52005                           fsr0h	equ	0xFEA
 52006                           fsr0l	equ	0xFE9
 52007                           wreg	equ	0xFE8
 52008                           postinc1	equ	0xFE6
 52009                           postdec1	equ	0xFE5
 52010                           plusw1	equ	0xFE3
 52011                           fsr1h	equ	0xFE2
 52012                           fsr1l	equ	0xFE1
 52013                           indf2	equ	0xFDF
 52014                           postinc2	equ	0xFDE
 52015                           postdec2	equ	0xFDD
 52016                           plusw2	equ	0xFDB
 52017                           fsr2h	equ	0xFDA
 52018                           fsr2l	equ	0xFD9
 52019                           status	equ	0xFD8
 52020                           
 52021 ;; *************** function _RADIO_WriteMode *****************
 52022 ;; Defined at:
 52023 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52024 ;; Parameters:    Size  Location     Type
 52025 ;;  newMode         1    wreg     enum E7718
 52026 ;;  newModulatio    1    5[BANK0 ] enum E6984
 52027 ;;  blocking        1    6[BANK0 ] unsigned char 
 52028 ;; Auto vars:     Size  Location     Type
 52029 ;;  newMode         1   10[BANK0 ] enum E7718
 52030 ;;  opMode          1   11[BANK0 ] unsigned char 
 52031 ;;  currentMode     1    9[BANK0 ] enum E7718
 52032 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 52033 ;;  currentModul    1    7[BANK0 ] enum E6984
 52034 ;; Return value:  Size  Location     Type
 52035 ;;                  1    wreg      void 
 52036 ;; Registers used:
 52037 ;;		wreg, status,2, status,0, cstack
 52038 ;; Tracked objects:
 52039 ;;		On entry : 0/0
 52040 ;;		On exit  : 0/0
 52041 ;;		Unchanged: 0/0
 52042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52044 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52046 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52047 ;;Total ram usage:        7 bytes
 52048 ;; Hardware stack levels used:    1
 52049 ;; Hardware stack levels required when called:   10
 52050 ;; This function calls:
 52051 ;;		_HALDIO5PinValue
 52052 ;;		_RADIO_RegisterRead
 52053 ;;		_RADIO_RegisterWrite
 52054 ;;		_SystemBlockingWaitMs
 52055 ;; This function is called by:
 52056 ;;		_RADIO_Init
 52057 ;;		_RADIO_WriteConfiguration
 52058 ;;		_RADIO_Transmit
 52059 ;;		_RADIO_ReceiveStart
 52060 ;;		_RADIO_ReceiveStop
 52061 ;;		_RADIO_RxDone
 52062 ;;		_RADIO_FSKPayloadReady
 52063 ;;		_RADIO_RxTimeout
 52064 ;;		_RADIO_TxDone
 52065 ;;		_RADIO_FSKPacketSent
 52066 ;;		_RADIO_ReadRandom
 52067 ;;		_RADIO_RxFSKTimeout
 52068 ;;		_RADIO_WatchdogTimeout
 52069 ;;		_RADIO_StopCW
 52070 ;; This function uses a non-reentrant model
 52071 ;;
 52072                           
 52073                           	psect	text272
 52074  0087B8                     __ptext272:
 52075                           	opt stack 0
 52076  0087B8                     _RADIO_WriteMode:
 52077                           	opt stack 18
 52078                           
 52079                           ; BSR set to: 0
 52080                           ;incstack = 0
 52081                           ;RADIO_WriteMode@newMode stored from wreg
 52082  0087B8  0100               	movlb	0	; () banked
 52083  0087BA  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 52084                           
 52085                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 52086                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 52087                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 52088                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 52089                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 52090                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 52091  0087BC  0100               	movlb	0	; () banked
 52092  0087BE  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52093  0087C0  A4D8               	btfss	status,2,c
 52094  0087C2  D008               	goto	l716
 52095                           
 52096                           ; BSR set to: 0
 52097  0087C4  0E06               	movlw	6
 52098  0087C6  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52099  0087C8  B4D8               	btfsc	status,2,c
 52100  0087CA  0012               	return	
 52101                           
 52102                           ; BSR set to: 0
 52103  0087CC  0E07               	movlw	7
 52104  0087CE  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52105  0087D0  B4D8               	btfsc	status,2,c
 52106  0087D2  0012               	return	
 52107  0087D4                     l716:
 52108                           
 52109                           ; BSR set to: 0
 52110                           ;radio_driver_SX1276.c: 159: }
 52111                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 52112                           
 52113                           ; BSR set to: 0
 52114  0087D4  0E07               	movlw	7
 52115  0087D6  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 52116                           
 52117                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 52118  0087D8  0E01               	movlw	1
 52119  0087DA  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 52120                           
 52121                           ; BSR set to: 0
 52122                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 52123  0087DC  0E01               	movlw	1
 52124  0087DE  EC92  F05E         	call	_RADIO_RegisterRead
 52125  0087E2  0100               	movlb	0	; () banked
 52126  0087E4  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 52127                           
 52128                           ; BSR set to: 0
 52129                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 52130  0087E6  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 52131  0087E8  D002               	goto	l720
 52132                           
 52133                           ; BSR set to: 0
 52134                           ;radio_driver_SX1276.c: 168: {
 52135                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 52136  0087EA  0E01               	movlw	1
 52137  0087EC  D001               	goto	L29
 52138  0087EE                     l720:
 52139                           
 52140                           ; BSR set to: 0
 52141                           ;radio_driver_SX1276.c: 171: else
 52142                           ;radio_driver_SX1276.c: 172: {
 52143                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 52144                           
 52145                           ; BSR set to: 0
 52146  0087EE  0E00               	movlw	0
 52147  0087F0                     L29:
 52148  0087F0  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 52149                           
 52150                           ; BSR set to: 0
 52151                           ;radio_driver_SX1276.c: 174: }
 52152                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 52153                           
 52154                           ; BSR set to: 0
 52155  0087F2  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52156  0087F4  0B07               	andlw	7
 52157  0087F6  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 52158                           
 52159                           ; BSR set to: 0
 52160                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 52161  0087F8  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 52162  0087FA  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 52163  0087FC  B4D8               	btfsc	status,2,c
 52164  0087FE  D01B               	goto	l722
 52165                           
 52166                           ; BSR set to: 0
 52167                           ;radio_driver_SX1276.c: 181: {
 52168                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 52169  008800  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 52170  008802  B4D8               	btfsc	status,2,c
 52171  008804  D009               	goto	l723
 52172                           
 52173                           ; BSR set to: 0
 52174                           ;radio_driver_SX1276.c: 184: {
 52175                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 52176  008806  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52177  008808  0BF8               	andlw	248
 52178  00880A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 52179  00880C  0E01               	movlw	1
 52180  00880E  ECEB  F05F         	call	_RADIO_RegisterWrite
 52181                           
 52182                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 52183  008812  0E00               	movlw	0
 52184  008814  0100               	movlb	0	; () banked
 52185  008816  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 52186  008818                     l723:
 52187                           
 52188                           ; BSR set to: 0
 52189                           ;radio_driver_SX1276.c: 188: }
 52190                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 52191                           
 52192                           ; BSR set to: 0
 52193  008818  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52194  00881A  A4D8               	btfss	status,2,c
 52195  00881C  D003               	goto	l724
 52196                           
 52197                           ; BSR set to: 0
 52198                           ;radio_driver_SX1276.c: 191: {
 52199                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 52200  00881E  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52201  008820  0B78               	andlw	120
 52202  008822  D003               	goto	L30
 52203  008824                     l724:
 52204                           
 52205                           ; BSR set to: 0
 52206                           ;radio_driver_SX1276.c: 195: else
 52207                           ;radio_driver_SX1276.c: 196: {
 52208                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 52209                           
 52210                           ; BSR set to: 0
 52211  008824  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 52212  008826  0B78               	andlw	120
 52213  008828  0980               	iorlw	128
 52214  00882A                     L30:
 52215  00882A  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 52216                           
 52217                           ; BSR set to: 0
 52218                           ;radio_driver_SX1276.c: 199: }
 52219                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 52220                           
 52221                           ; BSR set to: 0
 52222  00882C  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 52223  008830  0E01               	movlw	1
 52224  008832  ECEB  F05F         	call	_RADIO_RegisterWrite
 52225  008836                     l722:
 52226                           
 52227                           ;radio_driver_SX1276.c: 201: }
 52228                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 52229  008836  0100               	movlb	0	; () banked
 52230  008838  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 52231  00883A  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 52232  00883C  B4D8               	btfsc	status,2,c
 52233  00883E  0012               	return	
 52234                           
 52235                           ; BSR set to: 0
 52236                           ;radio_driver_SX1276.c: 208: {
 52237                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 52238  008840  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52239  008842  B4D8               	btfsc	status,2,c
 52240  008844  D015               	goto	l727
 52241                           
 52242                           ; BSR set to: 0
 52243  008846  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 52244  008848  A4D8               	btfss	status,2,c
 52245  00884A  D012               	goto	l727
 52246                           
 52247                           ; BSR set to: 0
 52248                           ;radio_driver_SX1276.c: 212: {
 52249                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 52250  00884C  0E41               	movlw	65
 52251  00884E  EC92  F05E         	call	_RADIO_RegisterRead
 52252  008852  0100               	movlb	0	; () banked
 52253  008854  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 52254                           
 52255                           ; BSR set to: 0
 52256                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 52257  008856  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 52258  008858  A4D8               	btfss	status,2,c
 52259  00885A  D003               	goto	l728
 52260                           
 52261                           ; BSR set to: 0
 52262                           ;radio_driver_SX1276.c: 215: {
 52263                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 52264  00885C  0E30               	movlw	48
 52265  00885E  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 52266                           
 52267                           ;radio_driver_SX1276.c: 218: }
 52268  008860  D002               	goto	l729
 52269  008862                     l728:
 52270                           
 52271                           ; BSR set to: 0
 52272                           ;radio_driver_SX1276.c: 219: else
 52273                           ;radio_driver_SX1276.c: 220: {
 52274                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 52275                           
 52276                           ; BSR set to: 0
 52277  008862  0ECF               	movlw	207
 52278  008864  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 52279  008866                     l729:
 52280                           
 52281                           ; BSR set to: 0
 52282                           ;radio_driver_SX1276.c: 223: }
 52283                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 52284                           
 52285                           ; BSR set to: 0
 52286  008866  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 52287  00886A  0E41               	movlw	65
 52288  00886C  ECEB  F05F         	call	_RADIO_RegisterWrite
 52289  008870                     l727:
 52290                           
 52291                           ;radio_driver_SX1276.c: 225: }
 52292                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 52293  008870  0EF8               	movlw	248
 52294  008872  0100               	movlb	0	; () banked
 52295  008874  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 52296                           
 52297                           ; BSR set to: 0
 52298                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 52299  008876  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52300  008878  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 52301                           
 52302                           ; BSR set to: 0
 52303                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 52304  00887A  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 52305  00887E  0E01               	movlw	1
 52306  008880  ECEB  F05F         	call	_RADIO_RegisterWrite
 52307                           
 52308                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 52309  008884  0100               	movlb	0	; () banked
 52310  008886  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 52311  008888  A4D8               	btfss	status,2,c
 52312  00888A  0012               	return	
 52313                           
 52314                           ; BSR set to: 0
 52315                           ;radio_driver_SX1276.c: 234: {
 52316                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 52317  00888C  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 52318  00888E  B4D8               	btfsc	status,2,c
 52319  008890  D006               	goto	l731
 52320  008892                     u19420:
 52321                           
 52322                           ; BSR set to: 0
 52323                           
 52324                           ;radio_driver_SX1276.c: 238: ;
 52325                           
 52326                           ; BSR set to: 0
 52327                           
 52328                           ; BSR set to: 0
 52329                           ;radio_driver_SX1276.c: 236: {
 52330                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 52331  008892  EC89  F062         	call	_HALDIO5PinValue	;wreg free
 52332  008896  0900               	iorlw	0
 52333  008898  A4D8               	btfss	status,2,c
 52334  00889A  0012               	return	
 52335  00889C  D7FA               	goto	u19420
 52336  00889E                     l731:
 52337                           
 52338                           ;radio_driver_SX1276.c: 240: else
 52339                           ;radio_driver_SX1276.c: 241: {
 52340                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 52341  00889E  0E01               	movlw	1
 52342  0088A0  0100               	movlb	0	; () banked
 52343  0088A2  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 52344  0088A4  0E00               	movlw	0
 52345  0088A6  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 52346  0088A8  0E00               	movlw	0
 52347  0088AA  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 52348  0088AC  0E00               	movlw	0
 52349  0088AE  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 52350  0088B0  EC07  F05D         	call	_SystemBlockingWaitMs	;wreg free
 52351  0088B4  0012               	return	
 52352  0088B6                     __end_of_RADIO_WriteMode:
 52353                           	opt stack 0
 52354                           tosu	equ	0xFFF
 52355                           tosh	equ	0xFFE
 52356                           tosl	equ	0xFFD
 52357                           pclath	equ	0xFFA
 52358                           tblptru	equ	0xFF8
 52359                           tblptrh	equ	0xFF7
 52360                           tblptrl	equ	0xFF6
 52361                           tablat	equ	0xFF5
 52362                           prodh	equ	0xFF4
 52363                           prodl	equ	0xFF3
 52364                           intcon	equ	0xFF2
 52365                           intcon2	equ	0xFF1
 52366                           intcon3	equ	0xFF0
 52367                           indf0	equ	0xFEF
 52368                           postinc0	equ	0xFEE
 52369                           plusw0	equ	0xFEB
 52370                           fsr0h	equ	0xFEA
 52371                           fsr0l	equ	0xFE9
 52372                           wreg	equ	0xFE8
 52373                           postinc1	equ	0xFE6
 52374                           postdec1	equ	0xFE5
 52375                           plusw1	equ	0xFE3
 52376                           fsr1h	equ	0xFE2
 52377                           fsr1l	equ	0xFE1
 52378                           indf2	equ	0xFDF
 52379                           postinc2	equ	0xFDE
 52380                           postdec2	equ	0xFDD
 52381                           plusw2	equ	0xFDB
 52382                           fsr2h	equ	0xFDA
 52383                           fsr2l	equ	0xFD9
 52384                           status	equ	0xFD8
 52385                           
 52386 ;; *************** function _RADIO_RegisterRead *****************
 52387 ;; Defined at:
 52388 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52389 ;; Parameters:    Size  Location     Type
 52390 ;;  reg             1    wreg     unsigned char 
 52391 ;; Auto vars:     Size  Location     Type
 52392 ;;  reg             1    2[BANK0 ] unsigned char 
 52393 ;;  readValue       1    3[BANK0 ] unsigned char 
 52394 ;; Return value:  Size  Location     Type
 52395 ;;                  1    wreg      unsigned char 
 52396 ;; Registers used:
 52397 ;;		wreg, status,2, status,0, cstack
 52398 ;; Tracked objects:
 52399 ;;		On entry : 0/0
 52400 ;;		On exit  : 0/0
 52401 ;;		Unchanged: 0/0
 52402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52407 ;;Total ram usage:        2 bytes
 52408 ;; Hardware stack levels used:    1
 52409 ;; Hardware stack levels required when called:    9
 52410 ;; This function calls:
 52411 ;;		_HALSPICSAssert
 52412 ;;		_HALSPICSDeassert
 52413 ;;		_HALSPISend
 52414 ;; This function is called by:
 52415 ;;		_RADIO_WriteMode
 52416 ;;		_RADIO_WritePower
 52417 ;;		_RADIO_Init
 52418 ;;		_RADIO_WriteConfiguration
 52419 ;;		_RADIO_Transmit
 52420 ;;		_RADIO_RxDone
 52421 ;;		_RADIO_FSKPayloadReady
 52422 ;;		_RADIO_FSKPacketSent
 52423 ;;		_RADIO_FHSSChangeChannel
 52424 ;;		_RADIO_DIO0
 52425 ;;		_RADIO_DIO1
 52426 ;;		_RADIO_DIO2
 52427 ;;		_RADIO_DIO3
 52428 ;;		_RADIO_DIO4
 52429 ;;		_RADIO_DIO5
 52430 ;;		_RADIO_ReadRandom
 52431 ;;		_RADIO_RxFSKTimeout
 52432 ;; This function uses a non-reentrant model
 52433 ;;
 52434                           
 52435                           	psect	text273
 52436  00BD24                     __ptext273:
 52437                           	opt stack 0
 52438  00BD24                     _RADIO_RegisterRead:
 52439                           	opt stack 18
 52440                           
 52441                           ;incstack = 0
 52442                           ;RADIO_RegisterRead@reg stored from wreg
 52443  00BD24  0100               	movlb	0	; () banked
 52444  00BD26  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 52445                           
 52446                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 52447                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 52448  00BD28  0100               	movlb	0	; () banked
 52449  00BD2A  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 52450                           
 52451                           ; BSR set to: 0
 52452                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 52453  00BD2C  EC66  F063         	call	_HALSPICSAssert	;wreg free
 52454                           
 52455                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 52456  00BD30  0100               	movlb	0	; () banked
 52457  00BD32  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 52458  00BD34  EC70  F062         	call	_HALSPISend
 52459                           
 52460                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 52461  00BD38  0EFF               	movlw	255
 52462  00BD3A  EC70  F062         	call	_HALSPISend
 52463  00BD3E  0100               	movlb	0	; () banked
 52464  00BD40  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 52465                           
 52466                           ; BSR set to: 0
 52467                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 52468  00BD42  EC64  F063         	call	_HALSPICSDeassert	;wreg free
 52469                           
 52470                           ;radio_driver_SX1276.c: 142: return readValue;
 52471  00BD46  0100               	movlb	0	; () banked
 52472  00BD48  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 52473  00BD4A  0012               	return	
 52474  00BD4C                     __end_of_RADIO_RegisterRead:
 52475                           	opt stack 0
 52476                           tosu	equ	0xFFF
 52477                           tosh	equ	0xFFE
 52478                           tosl	equ	0xFFD
 52479                           pclath	equ	0xFFA
 52480                           tblptru	equ	0xFF8
 52481                           tblptrh	equ	0xFF7
 52482                           tblptrl	equ	0xFF6
 52483                           tablat	equ	0xFF5
 52484                           prodh	equ	0xFF4
 52485                           prodl	equ	0xFF3
 52486                           intcon	equ	0xFF2
 52487                           intcon2	equ	0xFF1
 52488                           intcon3	equ	0xFF0
 52489                           indf0	equ	0xFEF
 52490                           postinc0	equ	0xFEE
 52491                           plusw0	equ	0xFEB
 52492                           fsr0h	equ	0xFEA
 52493                           fsr0l	equ	0xFE9
 52494                           wreg	equ	0xFE8
 52495                           postinc1	equ	0xFE6
 52496                           postdec1	equ	0xFE5
 52497                           plusw1	equ	0xFE3
 52498                           fsr1h	equ	0xFE2
 52499                           fsr1l	equ	0xFE1
 52500                           indf2	equ	0xFDF
 52501                           postinc2	equ	0xFDE
 52502                           postdec2	equ	0xFDD
 52503                           plusw2	equ	0xFDB
 52504                           fsr2h	equ	0xFDA
 52505                           fsr2l	equ	0xFD9
 52506                           status	equ	0xFD8
 52507                           
 52508 ;; *************** function _HALDIO5PinValue *****************
 52509 ;; Defined at:
 52510 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 52511 ;; Parameters:    Size  Location     Type
 52512 ;;		None
 52513 ;; Auto vars:     Size  Location     Type
 52514 ;;		None
 52515 ;; Return value:  Size  Location     Type
 52516 ;;                  1    wreg      unsigned char 
 52517 ;; Registers used:
 52518 ;;		wreg
 52519 ;; Tracked objects:
 52520 ;;		On entry : 0/0
 52521 ;;		On exit  : 0/0
 52522 ;;		Unchanged: 0/0
 52523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52528 ;;Total ram usage:        0 bytes
 52529 ;; Hardware stack levels used:    1
 52530 ;; Hardware stack levels required when called:    7
 52531 ;; This function calls:
 52532 ;;		Nothing
 52533 ;; This function is called by:
 52534 ;;		_RADIO_WriteMode
 52535 ;; This function uses a non-reentrant model
 52536 ;;
 52537                           
 52538                           	psect	text274
 52539  00C512                     __ptext274:
 52540                           	opt stack 0
 52541  00C512                     _HALDIO5PinValue:
 52542                           	opt stack 20
 52543                           
 52544                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 52545                           
 52546                           ; BSR set to: 0
 52547                           ;incstack = 0
 52548  00C512  A081               	btfss	3969,0,c	;volatile
 52549  00C514  D002               	goto	u18920
 52550  00C516  0E01               	movlw	1
 52551  00C518  0012               	return	
 52552  00C51A                     u18920:
 52553  00C51A  0E00               	movlw	0
 52554  00C51C  0012               	return	
 52555  00C51E                     __end_of_HALDIO5PinValue:
 52556                           	opt stack 0
 52557                           tosu	equ	0xFFF
 52558                           tosh	equ	0xFFE
 52559                           tosl	equ	0xFFD
 52560                           pclath	equ	0xFFA
 52561                           tblptru	equ	0xFF8
 52562                           tblptrh	equ	0xFF7
 52563                           tblptrl	equ	0xFF6
 52564                           tablat	equ	0xFF5
 52565                           prodh	equ	0xFF4
 52566                           prodl	equ	0xFF3
 52567                           intcon	equ	0xFF2
 52568                           intcon2	equ	0xFF1
 52569                           intcon3	equ	0xFF0
 52570                           indf0	equ	0xFEF
 52571                           postinc0	equ	0xFEE
 52572                           plusw0	equ	0xFEB
 52573                           fsr0h	equ	0xFEA
 52574                           fsr0l	equ	0xFE9
 52575                           wreg	equ	0xFE8
 52576                           postinc1	equ	0xFE6
 52577                           postdec1	equ	0xFE5
 52578                           plusw1	equ	0xFE3
 52579                           fsr1h	equ	0xFE2
 52580                           fsr1l	equ	0xFE1
 52581                           indf2	equ	0xFDF
 52582                           postinc2	equ	0xFDE
 52583                           postdec2	equ	0xFDD
 52584                           plusw2	equ	0xFDB
 52585                           fsr2h	equ	0xFDA
 52586                           fsr2l	equ	0xFD9
 52587                           status	equ	0xFD8
 52588                           
 52589 ;; *************** function _RADIO_WriteFrequency *****************
 52590 ;; Defined at:
 52591 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52592 ;; Parameters:    Size  Location     Type
 52593 ;;  frequency       4   13[BANK0 ] unsigned long 
 52594 ;; Auto vars:     Size  Location     Type
 52595 ;;  num             4   21[BANK0 ] unsigned long 
 52596 ;;  num_mod         4   17[BANK0 ] unsigned long 
 52597 ;; Return value:  Size  Location     Type
 52598 ;;                  1    wreg      void 
 52599 ;; Registers used:
 52600 ;;		wreg, status,2, status,0, cstack
 52601 ;; Tracked objects:
 52602 ;;		On entry : 0/0
 52603 ;;		On exit  : 0/0
 52604 ;;		Unchanged: 0/0
 52605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52607 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52609 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52610 ;;Total ram usage:       12 bytes
 52611 ;; Hardware stack levels used:    1
 52612 ;; Hardware stack levels required when called:   10
 52613 ;; This function calls:
 52614 ;;		_RADIO_RegisterWrite
 52615 ;;		___lldiv
 52616 ;;		___llmod
 52617 ;; This function is called by:
 52618 ;;		_RADIO_Init
 52619 ;;		_RADIO_WriteConfiguration
 52620 ;;		_RADIO_FHSSChangeChannel
 52621 ;; This function uses a non-reentrant model
 52622 ;;
 52623                           
 52624                           	psect	text275
 52625  008D82                     __ptext275:
 52626                           	opt stack 0
 52627  008D82                     _RADIO_WriteFrequency:
 52628                           	opt stack 17
 52629                           
 52630                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 52631                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 52632                           
 52633                           ;incstack = 0
 52634  008D82  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 52635  008D86  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 52636  008D8A  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 52637  008D8E  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 52638  008D92  0E09               	movlw	9
 52639  008D94  0100               	movlb	0	; () banked
 52640  008D96  6F64               	movwf	___lldiv@divisor& (0+255),b
 52641  008D98  0E3D               	movlw	61
 52642  008D9A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 52643  008D9C  0E00               	movlw	0
 52644  008D9E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 52645  008DA0  0E00               	movlw	0
 52646  008DA2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 52647  008DA4  ECAE  F050         	call	___lldiv	;wreg free
 52648  008DA8  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 52649  008DAC  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 52650  008DB0  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 52651  008DB4  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 52652                           
 52653                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 52654  008DB8  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 52655  008DBC  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 52656  008DC0  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 52657  008DC4  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 52658  008DC8  0E09               	movlw	9
 52659  008DCA  0100               	movlb	0	; () banked
 52660  008DCC  6F64               	movwf	___llmod@divisor& (0+255),b
 52661  008DCE  0E3D               	movlw	61
 52662  008DD0  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 52663  008DD2  0E00               	movlw	0
 52664  008DD4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 52665  008DD6  0E00               	movlw	0
 52666  008DD8  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 52667  008DDA  EC1A  F054         	call	___llmod	;wreg free
 52668  008DDE  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 52669  008DE2  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 52670  008DE6  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 52671  008DEA  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 52672                           
 52673                           ;radio_driver_SX1276.c: 277: num <<= (8);
 52674  008DEE  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 52675  008DF2  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 52676  008DF6  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 52677  008DFA  0100               	movlb	0	; () banked
 52678  008DFC  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 52679                           
 52680                           ; BSR set to: 0
 52681                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 52682  008DFE  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 52683  008E02  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 52684  008E06  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 52685  008E0A  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 52686                           
 52687                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 52688  008E0C  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 52689  008E10  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 52690  008E14  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 52691  008E18  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 52692  008E1C  0E09               	movlw	9
 52693  008E1E  6F64               	movwf	___lldiv@divisor& (0+255),b
 52694  008E20  0E3D               	movlw	61
 52695  008E22  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 52696  008E24  0E00               	movlw	0
 52697  008E26  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 52698  008E28  0E00               	movlw	0
 52699  008E2A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 52700  008E2C  ECAE  F050         	call	___lldiv	;wreg free
 52701  008E30  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 52702  008E34  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 52703  008E38  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 52704  008E3C  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 52705                           
 52706                           ;radio_driver_SX1276.c: 283: num += num_mod;
 52707  008E40  0100               	movlb	0	; () banked
 52708  008E42  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 52709  008E44  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 52710  008E46  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 52711  008E48  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 52712  008E4A  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 52713  008E4C  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 52714  008E4E  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 52715  008E50  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 52716                           
 52717                           ; BSR set to: 0
 52718                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 52719  008E52  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 52720  008E56  0E06               	movlw	6
 52721  008E58  ECEB  F05F         	call	_RADIO_RegisterWrite
 52722                           
 52723                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 52724  008E5C  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 52725  008E60  0E07               	movlw	7
 52726  008E62  ECEB  F05F         	call	_RADIO_RegisterWrite
 52727                           
 52728                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 52729  008E66  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 52730  008E6A  0E08               	movlw	8
 52731  008E6C  ECEB  F05F         	call	_RADIO_RegisterWrite
 52732  008E70  0012               	return		;funcret
 52733  008E72                     __end_of_RADIO_WriteFrequency:
 52734                           	opt stack 0
 52735                           tosu	equ	0xFFF
 52736                           tosh	equ	0xFFE
 52737                           tosl	equ	0xFFD
 52738                           pclath	equ	0xFFA
 52739                           tblptru	equ	0xFF8
 52740                           tblptrh	equ	0xFF7
 52741                           tblptrl	equ	0xFF6
 52742                           tablat	equ	0xFF5
 52743                           prodh	equ	0xFF4
 52744                           prodl	equ	0xFF3
 52745                           intcon	equ	0xFF2
 52746                           intcon2	equ	0xFF1
 52747                           intcon3	equ	0xFF0
 52748                           indf0	equ	0xFEF
 52749                           postinc0	equ	0xFEE
 52750                           plusw0	equ	0xFEB
 52751                           fsr0h	equ	0xFEA
 52752                           fsr0l	equ	0xFE9
 52753                           wreg	equ	0xFE8
 52754                           postinc1	equ	0xFE6
 52755                           postdec1	equ	0xFE5
 52756                           plusw1	equ	0xFE3
 52757                           fsr1h	equ	0xFE2
 52758                           fsr1l	equ	0xFE1
 52759                           indf2	equ	0xFDF
 52760                           postinc2	equ	0xFDE
 52761                           postdec2	equ	0xFDD
 52762                           plusw2	equ	0xFDB
 52763                           fsr2h	equ	0xFDA
 52764                           fsr2l	equ	0xFD9
 52765                           status	equ	0xFD8
 52766                           
 52767 ;; *************** function ___llmod *****************
 52768 ;; Defined at:
 52769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 52770 ;; Parameters:    Size  Location     Type
 52771 ;;  dividend        4    0[BANK0 ] unsigned long 
 52772 ;;  divisor         4    4[BANK0 ] unsigned long 
 52773 ;; Auto vars:     Size  Location     Type
 52774 ;;  counter         1    8[BANK0 ] unsigned char 
 52775 ;; Return value:  Size  Location     Type
 52776 ;;                  4    0[BANK0 ] unsigned long 
 52777 ;; Registers used:
 52778 ;;		wreg, status,2, status,0
 52779 ;; Tracked objects:
 52780 ;;		On entry : 0/0
 52781 ;;		On exit  : 0/0
 52782 ;;		Unchanged: 0/0
 52783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52784 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52788 ;;Total ram usage:        9 bytes
 52789 ;; Hardware stack levels used:    1
 52790 ;; Hardware stack levels required when called:    7
 52791 ;; This function calls:
 52792 ;;		Nothing
 52793 ;; This function is called by:
 52794 ;;		_RADIO_WriteFrequency
 52795 ;;		_printf
 52796 ;; This function uses a non-reentrant model
 52797 ;;
 52798                           
 52799                           	psect	text276
 52800  00A834                     __ptext276:
 52801                           	opt stack 0
 52802  00A834                     ___llmod:
 52803                           	opt stack 22
 52804                           
 52805                           ;incstack = 0
 52806  00A834  0100               	movlb	0	; () banked
 52807  00A836  5164               	movf	___llmod@divisor& (0+255),w,b
 52808  00A838  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 52809  00A83A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 52810  00A83C  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 52811  00A83E  B4D8               	btfsc	status,2,c
 52812  00A840  D024               	goto	l3950
 52813                           
 52814                           ; BSR set to: 0
 52815  00A842  0E01               	movlw	1
 52816  00A844  6F68               	movwf	___llmod@counter& (0+255),b
 52817  00A846  D006               	goto	l3945
 52818  00A848                     
 52819                           ; BSR set to: 0
 52820                           
 52821                           ; BSR set to: 0
 52822  00A848  90D8               	bcf	status,0,c
 52823  00A84A  3764               	rlcf	___llmod@divisor& (0+255),f,b
 52824  00A84C  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 52825  00A84E  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 52826  00A850  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 52827  00A852  2B68               	incf	___llmod@counter& (0+255),f,b
 52828  00A854                     l3945:
 52829                           
 52830                           ; BSR set to: 0
 52831                           
 52832                           ; BSR set to: 0
 52833  00A854  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 52834  00A856  D7F8               	goto	l3946
 52835  00A858                     u19150:
 52836                           
 52837                           ; BSR set to: 0
 52838                           
 52839                           ; BSR set to: 0
 52840                           
 52841                           ; BSR set to: 0
 52842  00A858  5164               	movf	___llmod@divisor& (0+255),w,b
 52843  00A85A  5D60               	subwf	___llmod@dividend& (0+255),w,b
 52844  00A85C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 52845  00A85E  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 52846  00A860  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 52847  00A862  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 52848  00A864  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 52849  00A866  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 52850  00A868  A0D8               	btfss	status,0,c
 52851  00A86A  D008               	goto	l3949
 52852                           
 52853                           ; BSR set to: 0
 52854  00A86C  5164               	movf	___llmod@divisor& (0+255),w,b
 52855  00A86E  5F60               	subwf	___llmod@dividend& (0+255),f,b
 52856  00A870  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 52857  00A872  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 52858  00A874  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 52859  00A876  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 52860  00A878  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 52861  00A87A  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 52862  00A87C                     l3949:
 52863                           
 52864                           ; BSR set to: 0
 52865                           
 52866                           ; BSR set to: 0
 52867  00A87C  90D8               	bcf	status,0,c
 52868  00A87E  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 52869  00A880  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 52870  00A882  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 52871  00A884  3364               	rrcf	___llmod@divisor& (0+255),f,b
 52872                           
 52873                           ; BSR set to: 0
 52874  00A886  2F68               	decfsz	___llmod@counter& (0+255),f,b
 52875  00A888  D7E7               	goto	u19150
 52876  00A88A                     l3950:
 52877                           
 52878                           ; BSR set to: 0
 52879                           
 52880                           ; BSR set to: 0
 52881  00A88A  C060  F060         	movff	___llmod@dividend,?___llmod
 52882  00A88E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 52883  00A892  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 52884  00A896  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 52885                           
 52886                           ; BSR set to: 0
 52887  00A89A  0012               	return		;funcret
 52888  00A89C                     __end_of___llmod:
 52889                           	opt stack 0
 52890                           tosu	equ	0xFFF
 52891                           tosh	equ	0xFFE
 52892                           tosl	equ	0xFFD
 52893                           pclath	equ	0xFFA
 52894                           tblptru	equ	0xFF8
 52895                           tblptrh	equ	0xFF7
 52896                           tblptrl	equ	0xFF6
 52897                           tablat	equ	0xFF5
 52898                           prodh	equ	0xFF4
 52899                           prodl	equ	0xFF3
 52900                           intcon	equ	0xFF2
 52901                           intcon2	equ	0xFF1
 52902                           intcon3	equ	0xFF0
 52903                           indf0	equ	0xFEF
 52904                           postinc0	equ	0xFEE
 52905                           plusw0	equ	0xFEB
 52906                           fsr0h	equ	0xFEA
 52907                           fsr0l	equ	0xFE9
 52908                           wreg	equ	0xFE8
 52909                           postinc1	equ	0xFE6
 52910                           postdec1	equ	0xFE5
 52911                           plusw1	equ	0xFE3
 52912                           fsr1h	equ	0xFE2
 52913                           fsr1l	equ	0xFE1
 52914                           indf2	equ	0xFDF
 52915                           postinc2	equ	0xFDE
 52916                           postdec2	equ	0xFDD
 52917                           plusw2	equ	0xFDB
 52918                           fsr2h	equ	0xFDA
 52919                           fsr2l	equ	0xFD9
 52920                           status	equ	0xFD8
 52921                           
 52922 ;; *************** function _RADIO_RegisterWrite *****************
 52923 ;; Defined at:
 52924 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 52925 ;; Parameters:    Size  Location     Type
 52926 ;;  reg             1    wreg     unsigned char 
 52927 ;;  value           1    2[BANK0 ] unsigned char 
 52928 ;; Auto vars:     Size  Location     Type
 52929 ;;  reg             1    3[BANK0 ] unsigned char 
 52930 ;; Return value:  Size  Location     Type
 52931 ;;                  1    wreg      void 
 52932 ;; Registers used:
 52933 ;;		wreg, status,2, status,0, cstack
 52934 ;; Tracked objects:
 52935 ;;		On entry : 0/0
 52936 ;;		On exit  : 0/0
 52937 ;;		Unchanged: 0/0
 52938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52939 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52943 ;;Total ram usage:        2 bytes
 52944 ;; Hardware stack levels used:    1
 52945 ;; Hardware stack levels required when called:    9
 52946 ;; This function calls:
 52947 ;;		_HALSPICSAssert
 52948 ;;		_HALSPICSDeassert
 52949 ;;		_HALSPISend
 52950 ;; This function is called by:
 52951 ;;		_RADIO_WriteMode
 52952 ;;		_RADIO_WriteFrequency
 52953 ;;		_RADIO_WriteFSKFrequencyDeviation
 52954 ;;		_RADIO_WriteFSKBitRate
 52955 ;;		_RADIO_WritePower
 52956 ;;		_RADIO_Init
 52957 ;;		_RADIO_WriteConfiguration
 52958 ;;		_RADIO_Transmit
 52959 ;;		_RADIO_ReceiveStart
 52960 ;;		_RADIO_RxDone
 52961 ;;		_RADIO_RxTimeout
 52962 ;;		_RADIO_TxDone
 52963 ;;		_RADIO_UnhandledInterrupt
 52964 ;;		_RADIO_FHSSChangeChannel
 52965 ;;		_RADIO_ReadRandom
 52966 ;;		_RADIO_TransmitCW
 52967 ;; This function uses a non-reentrant model
 52968 ;;
 52969                           
 52970                           	psect	text277
 52971  00BFD6                     __ptext277:
 52972                           	opt stack 0
 52973  00BFD6                     _RADIO_RegisterWrite:
 52974                           	opt stack 18
 52975                           
 52976                           ; BSR set to: 0
 52977                           ;incstack = 0
 52978                           ;RADIO_RegisterWrite@reg stored from wreg
 52979  00BFD6  0100               	movlb	0	; () banked
 52980  00BFD8  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 52981                           
 52982                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 52983  00BFDA  EC66  F063         	call	_HALSPICSAssert	;wreg free
 52984                           
 52985                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 52986  00BFDE  0100               	movlb	0	; () banked
 52987  00BFE0  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 52988  00BFE2  0980               	iorlw	128
 52989  00BFE4  EC70  F062         	call	_HALSPISend
 52990                           
 52991                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 52992  00BFE8  0100               	movlb	0	; () banked
 52993  00BFEA  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 52994  00BFEC  EC70  F062         	call	_HALSPISend
 52995                           
 52996                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 52997  00BFF0  EC64  F063         	call	_HALSPICSDeassert	;wreg free
 52998  00BFF4  0012               	return		;funcret
 52999  00BFF6                     __end_of_RADIO_RegisterWrite:
 53000                           	opt stack 0
 53001                           tosu	equ	0xFFF
 53002                           tosh	equ	0xFFE
 53003                           tosl	equ	0xFFD
 53004                           pclath	equ	0xFFA
 53005                           tblptru	equ	0xFF8
 53006                           tblptrh	equ	0xFF7
 53007                           tblptrl	equ	0xFF6
 53008                           tablat	equ	0xFF5
 53009                           prodh	equ	0xFF4
 53010                           prodl	equ	0xFF3
 53011                           intcon	equ	0xFF2
 53012                           intcon2	equ	0xFF1
 53013                           intcon3	equ	0xFF0
 53014                           indf0	equ	0xFEF
 53015                           postinc0	equ	0xFEE
 53016                           plusw0	equ	0xFEB
 53017                           fsr0h	equ	0xFEA
 53018                           fsr0l	equ	0xFE9
 53019                           wreg	equ	0xFE8
 53020                           postinc1	equ	0xFE6
 53021                           postdec1	equ	0xFE5
 53022                           plusw1	equ	0xFE3
 53023                           fsr1h	equ	0xFE2
 53024                           fsr1l	equ	0xFE1
 53025                           indf2	equ	0xFDF
 53026                           postinc2	equ	0xFDE
 53027                           postdec2	equ	0xFDD
 53028                           plusw2	equ	0xFDB
 53029                           fsr2h	equ	0xFDA
 53030                           fsr2l	equ	0xFD9
 53031                           status	equ	0xFD8
 53032                           
 53033 ;; *************** function _HALSPISend *****************
 53034 ;; Defined at:
 53035 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53036 ;; Parameters:    Size  Location     Type
 53037 ;;  data            1    wreg     unsigned char 
 53038 ;; Auto vars:     Size  Location     Type
 53039 ;;  data            1    1[BANK0 ] unsigned char 
 53040 ;; Return value:  Size  Location     Type
 53041 ;;                  1    wreg      unsigned char 
 53042 ;; Registers used:
 53043 ;;		wreg, status,2, cstack
 53044 ;; Tracked objects:
 53045 ;;		On entry : 0/0
 53046 ;;		On exit  : 0/0
 53047 ;;		Unchanged: 0/0
 53048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53053 ;;Total ram usage:        1 bytes
 53054 ;; Hardware stack levels used:    1
 53055 ;; Hardware stack levels required when called:    8
 53056 ;; This function calls:
 53057 ;;		_SPI2_Exchange8bit
 53058 ;; This function is called by:
 53059 ;;		_RADIO_RegisterWrite
 53060 ;;		_RADIO_RegisterRead
 53061 ;;		_RADIO_Transmit
 53062 ;;		_RADIO_RxDone
 53063 ;;		_RADIO_FSKPayloadReady
 53064 ;; This function uses a non-reentrant model
 53065 ;;
 53066                           
 53067                           	psect	text278
 53068  00C4E0                     __ptext278:
 53069                           	opt stack 0
 53070  00C4E0                     _HALSPISend:
 53071                           	opt stack 18
 53072                           
 53073                           ;incstack = 0
 53074                           ;HALSPISend@data stored from wreg
 53075  00C4E0  0100               	movlb	0	; () banked
 53076  00C4E2  6F61               	movwf	HALSPISend@data& (0+255),b
 53077                           
 53078                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 53079  00C4E4  0100               	movlb	0	; () banked
 53080  00C4E6  5161               	movf	HALSPISend@data& (0+255),w,b
 53081  00C4E8  ECE5  F061         	call	_SPI2_Exchange8bit
 53082  00C4EC  0012               	return	
 53083  00C4EE                     __end_of_HALSPISend:
 53084                           	opt stack 0
 53085                           tosu	equ	0xFFF
 53086                           tosh	equ	0xFFE
 53087                           tosl	equ	0xFFD
 53088                           pclath	equ	0xFFA
 53089                           tblptru	equ	0xFF8
 53090                           tblptrh	equ	0xFF7
 53091                           tblptrl	equ	0xFF6
 53092                           tablat	equ	0xFF5
 53093                           prodh	equ	0xFF4
 53094                           prodl	equ	0xFF3
 53095                           intcon	equ	0xFF2
 53096                           intcon2	equ	0xFF1
 53097                           intcon3	equ	0xFF0
 53098                           indf0	equ	0xFEF
 53099                           postinc0	equ	0xFEE
 53100                           plusw0	equ	0xFEB
 53101                           fsr0h	equ	0xFEA
 53102                           fsr0l	equ	0xFE9
 53103                           wreg	equ	0xFE8
 53104                           postinc1	equ	0xFE6
 53105                           postdec1	equ	0xFE5
 53106                           plusw1	equ	0xFE3
 53107                           fsr1h	equ	0xFE2
 53108                           fsr1l	equ	0xFE1
 53109                           indf2	equ	0xFDF
 53110                           postinc2	equ	0xFDE
 53111                           postdec2	equ	0xFDD
 53112                           plusw2	equ	0xFDB
 53113                           fsr2h	equ	0xFDA
 53114                           fsr2l	equ	0xFD9
 53115                           status	equ	0xFD8
 53116                           
 53117 ;; *************** function _SPI2_Exchange8bit *****************
 53118 ;; Defined at:
 53119 ;;		line 79 in file "mcc_generated_files/spi2.c"
 53120 ;; Parameters:    Size  Location     Type
 53121 ;;  data            1    wreg     unsigned char 
 53122 ;; Auto vars:     Size  Location     Type
 53123 ;;  data            1    0[BANK0 ] unsigned char 
 53124 ;; Return value:  Size  Location     Type
 53125 ;;                  1    wreg      unsigned char 
 53126 ;; Registers used:
 53127 ;;		wreg, status,2
 53128 ;; Tracked objects:
 53129 ;;		On entry : 0/0
 53130 ;;		On exit  : 0/0
 53131 ;;		Unchanged: 0/0
 53132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53137 ;;Total ram usage:        1 bytes
 53138 ;; Hardware stack levels used:    1
 53139 ;; Hardware stack levels required when called:    7
 53140 ;; This function calls:
 53141 ;;		Nothing
 53142 ;; This function is called by:
 53143 ;;		_HALSPISend
 53144 ;;		_SPI2_Exchange8bitBuffer
 53145 ;; This function uses a non-reentrant model
 53146 ;;
 53147                           
 53148                           	psect	text279
 53149  00C3CA                     __ptext279:
 53150                           	opt stack 0
 53151  00C3CA                     _SPI2_Exchange8bit:
 53152                           	opt stack 18
 53153                           
 53154                           ;incstack = 0
 53155                           ;SPI2_Exchange8bit@data stored from wreg
 53156  00C3CA  0100               	movlb	0	; () banked
 53157  00C3CC  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 53158                           
 53159                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 53160  00C3CE  9E6C               	bcf	3948,7,c	;volatile
 53161                           
 53162                           ;spi2.c: 84: SSP2BUF = data;
 53163  00C3D0  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 53164  00C3D4                     
 53165                           ;spi2.c: 87: {
 53166  00C3D4  A06D               	btfss	3949,0,c	;volatile
 53167  00C3D6  D7FE               	goto	l2519
 53168                           
 53169                           ;spi2.c: 88: }
 53170                           ;spi2.c: 90: return (SSP2BUF);
 53171  00C3D8  506F               	movf	3951,w,c	;volatile
 53172  00C3DA  0012               	return		;funcret
 53173  00C3DC                     __end_of_SPI2_Exchange8bit:
 53174                           	opt stack 0
 53175                           tosu	equ	0xFFF
 53176                           tosh	equ	0xFFE
 53177                           tosl	equ	0xFFD
 53178                           pclath	equ	0xFFA
 53179                           tblptru	equ	0xFF8
 53180                           tblptrh	equ	0xFF7
 53181                           tblptrl	equ	0xFF6
 53182                           tablat	equ	0xFF5
 53183                           prodh	equ	0xFF4
 53184                           prodl	equ	0xFF3
 53185                           intcon	equ	0xFF2
 53186                           intcon2	equ	0xFF1
 53187                           intcon3	equ	0xFF0
 53188                           indf0	equ	0xFEF
 53189                           postinc0	equ	0xFEE
 53190                           plusw0	equ	0xFEB
 53191                           fsr0h	equ	0xFEA
 53192                           fsr0l	equ	0xFE9
 53193                           wreg	equ	0xFE8
 53194                           postinc1	equ	0xFE6
 53195                           postdec1	equ	0xFE5
 53196                           plusw1	equ	0xFE3
 53197                           fsr1h	equ	0xFE2
 53198                           fsr1l	equ	0xFE1
 53199                           indf2	equ	0xFDF
 53200                           postinc2	equ	0xFDE
 53201                           postdec2	equ	0xFDD
 53202                           plusw2	equ	0xFDB
 53203                           fsr2h	equ	0xFDA
 53204                           fsr2l	equ	0xFD9
 53205                           status	equ	0xFD8
 53206                           
 53207 ;; *************** function _HALSPICSDeassert *****************
 53208 ;; Defined at:
 53209 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53210 ;; Parameters:    Size  Location     Type
 53211 ;;		None
 53212 ;; Auto vars:     Size  Location     Type
 53213 ;;		None
 53214 ;; Return value:  Size  Location     Type
 53215 ;;                  1    wreg      void 
 53216 ;; Registers used:
 53217 ;;		None
 53218 ;; Tracked objects:
 53219 ;;		On entry : 0/0
 53220 ;;		On exit  : 0/0
 53221 ;;		Unchanged: 0/0
 53222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53227 ;;Total ram usage:        0 bytes
 53228 ;; Hardware stack levels used:    1
 53229 ;; Hardware stack levels required when called:    7
 53230 ;; This function calls:
 53231 ;;		Nothing
 53232 ;; This function is called by:
 53233 ;;		_RADIO_RegisterWrite
 53234 ;;		_RADIO_RegisterRead
 53235 ;;		_RADIO_Transmit
 53236 ;;		_RADIO_RxDone
 53237 ;;		_RADIO_FSKPayloadReady
 53238 ;; This function uses a non-reentrant model
 53239 ;;
 53240                           
 53241                           	psect	text280
 53242  00C6C8                     __ptext280:
 53243                           	opt stack 0
 53244  00C6C8                     _HALSPICSDeassert:
 53245                           	opt stack 19
 53246                           
 53247                           ;incstack = 0
 53248                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 53249  00C6C8  868C               	bsf	3980,3,c	;volatile
 53250  00C6CA  0012               	return	
 53251  00C6CC                     __end_of_HALSPICSDeassert:
 53252                           	opt stack 0
 53253                           tosu	equ	0xFFF
 53254                           tosh	equ	0xFFE
 53255                           tosl	equ	0xFFD
 53256                           pclath	equ	0xFFA
 53257                           tblptru	equ	0xFF8
 53258                           tblptrh	equ	0xFF7
 53259                           tblptrl	equ	0xFF6
 53260                           tablat	equ	0xFF5
 53261                           prodh	equ	0xFF4
 53262                           prodl	equ	0xFF3
 53263                           intcon	equ	0xFF2
 53264                           intcon2	equ	0xFF1
 53265                           intcon3	equ	0xFF0
 53266                           indf0	equ	0xFEF
 53267                           postinc0	equ	0xFEE
 53268                           plusw0	equ	0xFEB
 53269                           fsr0h	equ	0xFEA
 53270                           fsr0l	equ	0xFE9
 53271                           wreg	equ	0xFE8
 53272                           postinc1	equ	0xFE6
 53273                           postdec1	equ	0xFE5
 53274                           plusw1	equ	0xFE3
 53275                           fsr1h	equ	0xFE2
 53276                           fsr1l	equ	0xFE1
 53277                           indf2	equ	0xFDF
 53278                           postinc2	equ	0xFDE
 53279                           postdec2	equ	0xFDD
 53280                           plusw2	equ	0xFDB
 53281                           fsr2h	equ	0xFDA
 53282                           fsr2l	equ	0xFD9
 53283                           status	equ	0xFD8
 53284                           
 53285 ;; *************** function _HALSPICSAssert *****************
 53286 ;; Defined at:
 53287 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53288 ;; Parameters:    Size  Location     Type
 53289 ;;		None
 53290 ;; Auto vars:     Size  Location     Type
 53291 ;;		None
 53292 ;; Return value:  Size  Location     Type
 53293 ;;                  1    wreg      void 
 53294 ;; Registers used:
 53295 ;;		None
 53296 ;; Tracked objects:
 53297 ;;		On entry : 0/0
 53298 ;;		On exit  : 0/0
 53299 ;;		Unchanged: 0/0
 53300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53305 ;;Total ram usage:        0 bytes
 53306 ;; Hardware stack levels used:    1
 53307 ;; Hardware stack levels required when called:    7
 53308 ;; This function calls:
 53309 ;;		Nothing
 53310 ;; This function is called by:
 53311 ;;		_RADIO_RegisterWrite
 53312 ;;		_RADIO_RegisterRead
 53313 ;;		_RADIO_Transmit
 53314 ;;		_RADIO_RxDone
 53315 ;;		_RADIO_FSKPayloadReady
 53316 ;; This function uses a non-reentrant model
 53317 ;;
 53318                           
 53319                           	psect	text281
 53320  00C6CC                     __ptext281:
 53321                           	opt stack 0
 53322  00C6CC                     _HALSPICSAssert:
 53323                           	opt stack 19
 53324                           
 53325                           ;incstack = 0
 53326                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 53327  00C6CC  968C               	bcf	3980,3,c	;volatile
 53328  00C6CE  0012               	return	
 53329  00C6D0                     __end_of_HALSPICSAssert:
 53330                           	opt stack 0
 53331                           tosu	equ	0xFFF
 53332                           tosh	equ	0xFFE
 53333                           tosl	equ	0xFFD
 53334                           pclath	equ	0xFFA
 53335                           tblptru	equ	0xFF8
 53336                           tblptrh	equ	0xFF7
 53337                           tblptrl	equ	0xFF6
 53338                           tablat	equ	0xFF5
 53339                           prodh	equ	0xFF4
 53340                           prodl	equ	0xFF3
 53341                           intcon	equ	0xFF2
 53342                           intcon2	equ	0xFF1
 53343                           intcon3	equ	0xFF0
 53344                           indf0	equ	0xFEF
 53345                           postinc0	equ	0xFEE
 53346                           plusw0	equ	0xFEB
 53347                           fsr0h	equ	0xFEA
 53348                           fsr0l	equ	0xFE9
 53349                           wreg	equ	0xFE8
 53350                           postinc1	equ	0xFE6
 53351                           postdec1	equ	0xFE5
 53352                           plusw1	equ	0xFE3
 53353                           fsr1h	equ	0xFE2
 53354                           fsr1l	equ	0xFE1
 53355                           indf2	equ	0xFDF
 53356                           postinc2	equ	0xFDE
 53357                           postdec2	equ	0xFDD
 53358                           plusw2	equ	0xFDB
 53359                           fsr2h	equ	0xFDA
 53360                           fsr2l	equ	0xFD9
 53361                           status	equ	0xFD8
 53362                           
 53363 ;; *************** function _RADIO_Reset *****************
 53364 ;; Defined at:
 53365 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 53366 ;; Parameters:    Size  Location     Type
 53367 ;;		None
 53368 ;; Auto vars:     Size  Location     Type
 53369 ;;		None
 53370 ;; Return value:  Size  Location     Type
 53371 ;;                  1    wreg      void 
 53372 ;; Registers used:
 53373 ;;		wreg, status,2, status,0, cstack
 53374 ;; Tracked objects:
 53375 ;;		On entry : 0/0
 53376 ;;		On exit  : 0/0
 53377 ;;		Unchanged: 0/0
 53378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53383 ;;Total ram usage:        0 bytes
 53384 ;; Hardware stack levels used:    1
 53385 ;; Hardware stack levels required when called:    8
 53386 ;; This function calls:
 53387 ;;		_HALResetPinMakeInput
 53388 ;;		_HALResetPinMakeOutput
 53389 ;;		_HALResetPinOutputValue
 53390 ;;		_SystemBlockingWaitMs
 53391 ;; This function is called by:
 53392 ;;		_RADIO_Init
 53393 ;; This function uses a non-reentrant model
 53394 ;;
 53395                           
 53396                           	psect	text282
 53397  00B3CC                     __ptext282:
 53398                           	opt stack 0
 53399  00B3CC                     _RADIO_Reset:
 53400                           	opt stack 20
 53401                           
 53402                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 53403                           
 53404                           ;incstack = 0
 53405  00B3CC  EC68  F063         	call	_HALResetPinMakeOutput	;wreg free
 53406                           
 53407                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 53408  00B3D0  0E00               	movlw	0
 53409  00B3D2  ECE9  F060         	call	_HALResetPinOutputValue
 53410                           
 53411                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 53412  00B3D6  0E01               	movlw	1
 53413  00B3D8  0100               	movlb	0	; () banked
 53414  00B3DA  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 53415  00B3DC  0E00               	movlw	0
 53416  00B3DE  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 53417  00B3E0  0E00               	movlw	0
 53418  00B3E2  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 53419  00B3E4  0E00               	movlw	0
 53420  00B3E6  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 53421  00B3E8  EC07  F05D         	call	_SystemBlockingWaitMs	;wreg free
 53422                           
 53423                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 53424  00B3EC  EC6A  F063         	call	_HALResetPinMakeInput	;wreg free
 53425                           
 53426                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 53427  00B3F0  0E0A               	movlw	10
 53428  00B3F2  0100               	movlb	0	; () banked
 53429  00B3F4  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 53430  00B3F6  0E00               	movlw	0
 53431  00B3F8  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 53432  00B3FA  0E00               	movlw	0
 53433  00B3FC  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 53434  00B3FE  0E00               	movlw	0
 53435  00B400  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 53436  00B402  EC07  F05D         	call	_SystemBlockingWaitMs	;wreg free
 53437                           
 53438                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 53439  00B406  0E01               	movlw	1
 53440  00B408  ECE9  F060         	call	_HALResetPinOutputValue
 53441                           
 53442                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 53443  00B40C  EC68  F063         	call	_HALResetPinMakeOutput	;wreg free
 53444  00B410  0012               	return		;funcret
 53445  00B412                     __end_of_RADIO_Reset:
 53446                           	opt stack 0
 53447                           tosu	equ	0xFFF
 53448                           tosh	equ	0xFFE
 53449                           tosl	equ	0xFFD
 53450                           pclath	equ	0xFFA
 53451                           tblptru	equ	0xFF8
 53452                           tblptrh	equ	0xFF7
 53453                           tblptrl	equ	0xFF6
 53454                           tablat	equ	0xFF5
 53455                           prodh	equ	0xFF4
 53456                           prodl	equ	0xFF3
 53457                           intcon	equ	0xFF2
 53458                           intcon2	equ	0xFF1
 53459                           intcon3	equ	0xFF0
 53460                           indf0	equ	0xFEF
 53461                           postinc0	equ	0xFEE
 53462                           plusw0	equ	0xFEB
 53463                           fsr0h	equ	0xFEA
 53464                           fsr0l	equ	0xFE9
 53465                           wreg	equ	0xFE8
 53466                           postinc1	equ	0xFE6
 53467                           postdec1	equ	0xFE5
 53468                           plusw1	equ	0xFE3
 53469                           fsr1h	equ	0xFE2
 53470                           fsr1l	equ	0xFE1
 53471                           indf2	equ	0xFDF
 53472                           postinc2	equ	0xFDE
 53473                           postdec2	equ	0xFDD
 53474                           plusw2	equ	0xFDB
 53475                           fsr2h	equ	0xFDA
 53476                           fsr2l	equ	0xFD9
 53477                           status	equ	0xFD8
 53478                           
 53479 ;; *************** function _SystemBlockingWaitMs *****************
 53480 ;; Defined at:
 53481 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 53482 ;; Parameters:    Size  Location     Type
 53483 ;;  ms              4    0[BANK0 ] unsigned long 
 53484 ;; Auto vars:     Size  Location     Type
 53485 ;;		None
 53486 ;; Return value:  Size  Location     Type
 53487 ;;                  1    wreg      void 
 53488 ;; Registers used:
 53489 ;;		wreg, status,2, status,0
 53490 ;; Tracked objects:
 53491 ;;		On entry : 0/0
 53492 ;;		On exit  : 0/0
 53493 ;;		Unchanged: 0/0
 53494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53498 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53499 ;;Total ram usage:        5 bytes
 53500 ;; Hardware stack levels used:    1
 53501 ;; Hardware stack levels required when called:    7
 53502 ;; This function calls:
 53503 ;;		Nothing
 53504 ;; This function is called by:
 53505 ;;		_RADIO_WriteMode
 53506 ;;		_RADIO_Reset
 53507 ;;		_RADIO_ReadRandom
 53508 ;;		_RADIO_StopCW
 53509 ;; This function uses a non-reentrant model
 53510 ;;
 53511                           
 53512                           	psect	text283
 53513  00BA0E                     __ptext283:
 53514                           	opt stack 0
 53515  00BA0E                     _SystemBlockingWaitMs:
 53516                           	opt stack 20
 53517                           
 53518                           ;sw_timer.c: 147: while (ms > 0)
 53519                           
 53520                           ;incstack = 0
 53521  00BA0E  D00F               	goto	l563
 53522  00BA10                     
 53523                           ;sw_timer.c: 148: {
 53524                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 53525  00BA10  0E06               	movlw	6
 53526  00BA12  0100               	movlb	0	; () banked
 53527  00BA14  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 53528  00BA16  0E30               	movlw	48
 53529  00BA18                     u29137:
 53530  00BA18  2EE8               	decfsz	wreg,f,c
 53531  00BA1A  D7FE               	bra	u29137
 53532  00BA1C  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 53533  00BA1E  D7FC               	bra	u29137
 53534  00BA20  F000               	nop	
 53535                           
 53536                           ;sw_timer.c: 150: ms--;
 53537  00BA22  0100               	movlb	0	; () banked
 53538  00BA24  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 53539  00BA26  0E00               	movlw	0
 53540  00BA28  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 53541  00BA2A  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 53542  00BA2C  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 53543  00BA2E                     l563:
 53544                           
 53545                           ; BSR set to: 0
 53546  00BA2E  0100               	movlb	0	; () banked
 53547  00BA30  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 53548  00BA32  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 53549  00BA34  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 53550  00BA36  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 53551  00BA38  B4D8               	btfsc	status,2,c
 53552  00BA3A  0012               	return	
 53553  00BA3C  D7E9               	goto	l564
 53554  00BA3E                     __end_of_SystemBlockingWaitMs:
 53555                           	opt stack 0
 53556                           tosu	equ	0xFFF
 53557                           tosh	equ	0xFFE
 53558                           tosl	equ	0xFFD
 53559                           pclath	equ	0xFFA
 53560                           tblptru	equ	0xFF8
 53561                           tblptrh	equ	0xFF7
 53562                           tblptrl	equ	0xFF6
 53563                           tablat	equ	0xFF5
 53564                           prodh	equ	0xFF4
 53565                           prodl	equ	0xFF3
 53566                           intcon	equ	0xFF2
 53567                           intcon2	equ	0xFF1
 53568                           intcon3	equ	0xFF0
 53569                           indf0	equ	0xFEF
 53570                           postinc0	equ	0xFEE
 53571                           plusw0	equ	0xFEB
 53572                           fsr0h	equ	0xFEA
 53573                           fsr0l	equ	0xFE9
 53574                           wreg	equ	0xFE8
 53575                           postinc1	equ	0xFE6
 53576                           postdec1	equ	0xFE5
 53577                           plusw1	equ	0xFE3
 53578                           fsr1h	equ	0xFE2
 53579                           fsr1l	equ	0xFE1
 53580                           indf2	equ	0xFDF
 53581                           postinc2	equ	0xFDE
 53582                           postdec2	equ	0xFDD
 53583                           plusw2	equ	0xFDB
 53584                           fsr2h	equ	0xFDA
 53585                           fsr2l	equ	0xFD9
 53586                           status	equ	0xFD8
 53587                           
 53588 ;; *************** function _HALResetPinOutputValue *****************
 53589 ;; Defined at:
 53590 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53591 ;; Parameters:    Size  Location     Type
 53592 ;;  value           1    wreg     unsigned char 
 53593 ;; Auto vars:     Size  Location     Type
 53594 ;;  value           1    0[BANK0 ] unsigned char 
 53595 ;; Return value:  Size  Location     Type
 53596 ;;                  1    wreg      void 
 53597 ;; Registers used:
 53598 ;;		wreg, status,2, status,0
 53599 ;; Tracked objects:
 53600 ;;		On entry : 0/0
 53601 ;;		On exit  : 0/0
 53602 ;;		Unchanged: 0/0
 53603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53608 ;;Total ram usage:        1 bytes
 53609 ;; Hardware stack levels used:    1
 53610 ;; Hardware stack levels required when called:    7
 53611 ;; This function calls:
 53612 ;;		Nothing
 53613 ;; This function is called by:
 53614 ;;		_RADIO_Reset
 53615 ;; This function uses a non-reentrant model
 53616 ;;
 53617                           
 53618                           	psect	text284
 53619  00C1D2                     __ptext284:
 53620                           	opt stack 0
 53621  00C1D2                     _HALResetPinOutputValue:
 53622                           	opt stack 20
 53623                           
 53624                           ; BSR set to: 0
 53625                           ;incstack = 0
 53626                           ;HALResetPinOutputValue@value stored from wreg
 53627  00C1D2  0100               	movlb	0	; () banked
 53628  00C1D4  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 53629                           
 53630                           ;radio_driver_hal.c: 57: if (value == 0)
 53631  00C1D6  0100               	movlb	0	; () banked
 53632  00C1D8  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 53633  00C1DA  A4D8               	btfss	status,2,c
 53634  00C1DC  D002               	goto	l469
 53635                           
 53636                           ; BSR set to: 0
 53637                           
 53638                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 53639  00C1DE  948B               	bcf	3979,2,c	;volatile
 53640                           
 53641                           ; BSR set to: 0
 53642  00C1E0  0012               	return	
 53643  00C1E2                     l469:
 53644                           
 53645                           ; BSR set to: 0
 53646                           ;radio_driver_hal.c: 59: else if (value == 1)
 53647                           
 53648                           ; BSR set to: 0
 53649  00C1E2  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 53650  00C1E4  A4D8               	btfss	status,2,c
 53651  00C1E6  0012               	return	
 53652                           
 53653                           ; BSR set to: 0
 53654                           
 53655                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 53656  00C1E8  848B               	bsf	3979,2,c	;volatile
 53657                           
 53658                           ; BSR set to: 0
 53659                           
 53660                           ; BSR set to: 0
 53661  00C1EA  0012               	return	
 53662  00C1EC                     __end_of_HALResetPinOutputValue:
 53663                           	opt stack 0
 53664                           tosu	equ	0xFFF
 53665                           tosh	equ	0xFFE
 53666                           tosl	equ	0xFFD
 53667                           pclath	equ	0xFFA
 53668                           tblptru	equ	0xFF8
 53669                           tblptrh	equ	0xFF7
 53670                           tblptrl	equ	0xFF6
 53671                           tablat	equ	0xFF5
 53672                           prodh	equ	0xFF4
 53673                           prodl	equ	0xFF3
 53674                           intcon	equ	0xFF2
 53675                           intcon2	equ	0xFF1
 53676                           intcon3	equ	0xFF0
 53677                           indf0	equ	0xFEF
 53678                           postinc0	equ	0xFEE
 53679                           plusw0	equ	0xFEB
 53680                           fsr0h	equ	0xFEA
 53681                           fsr0l	equ	0xFE9
 53682                           wreg	equ	0xFE8
 53683                           postinc1	equ	0xFE6
 53684                           postdec1	equ	0xFE5
 53685                           plusw1	equ	0xFE3
 53686                           fsr1h	equ	0xFE2
 53687                           fsr1l	equ	0xFE1
 53688                           indf2	equ	0xFDF
 53689                           postinc2	equ	0xFDE
 53690                           postdec2	equ	0xFDD
 53691                           plusw2	equ	0xFDB
 53692                           fsr2h	equ	0xFDA
 53693                           fsr2l	equ	0xFD9
 53694                           status	equ	0xFD8
 53695                           
 53696 ;; *************** function _HALResetPinMakeOutput *****************
 53697 ;; Defined at:
 53698 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53699 ;; Parameters:    Size  Location     Type
 53700 ;;		None
 53701 ;; Auto vars:     Size  Location     Type
 53702 ;;		None
 53703 ;; Return value:  Size  Location     Type
 53704 ;;                  1    wreg      void 
 53705 ;; Registers used:
 53706 ;;		None
 53707 ;; Tracked objects:
 53708 ;;		On entry : 0/0
 53709 ;;		On exit  : 0/0
 53710 ;;		Unchanged: 0/0
 53711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53716 ;;Total ram usage:        0 bytes
 53717 ;; Hardware stack levels used:    1
 53718 ;; Hardware stack levels required when called:    7
 53719 ;; This function calls:
 53720 ;;		Nothing
 53721 ;; This function is called by:
 53722 ;;		_RADIO_Reset
 53723 ;; This function uses a non-reentrant model
 53724 ;;
 53725                           
 53726                           	psect	text285
 53727  00C6D0                     __ptext285:
 53728                           	opt stack 0
 53729  00C6D0                     _HALResetPinMakeOutput:
 53730                           	opt stack 20
 53731                           
 53732                           ; BSR set to: 0
 53733                           ;incstack = 0
 53734                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 53735  00C6D0  9494               	bcf	3988,2,c	;volatile
 53736  00C6D2  0012               	return	
 53737  00C6D4                     __end_of_HALResetPinMakeOutput:
 53738                           	opt stack 0
 53739                           tosu	equ	0xFFF
 53740                           tosh	equ	0xFFE
 53741                           tosl	equ	0xFFD
 53742                           pclath	equ	0xFFA
 53743                           tblptru	equ	0xFF8
 53744                           tblptrh	equ	0xFF7
 53745                           tblptrl	equ	0xFF6
 53746                           tablat	equ	0xFF5
 53747                           prodh	equ	0xFF4
 53748                           prodl	equ	0xFF3
 53749                           intcon	equ	0xFF2
 53750                           intcon2	equ	0xFF1
 53751                           intcon3	equ	0xFF0
 53752                           indf0	equ	0xFEF
 53753                           postinc0	equ	0xFEE
 53754                           plusw0	equ	0xFEB
 53755                           fsr0h	equ	0xFEA
 53756                           fsr0l	equ	0xFE9
 53757                           wreg	equ	0xFE8
 53758                           postinc1	equ	0xFE6
 53759                           postdec1	equ	0xFE5
 53760                           plusw1	equ	0xFE3
 53761                           fsr1h	equ	0xFE2
 53762                           fsr1l	equ	0xFE1
 53763                           indf2	equ	0xFDF
 53764                           postinc2	equ	0xFDE
 53765                           postdec2	equ	0xFDD
 53766                           plusw2	equ	0xFDB
 53767                           fsr2h	equ	0xFDA
 53768                           fsr2l	equ	0xFD9
 53769                           status	equ	0xFD8
 53770                           
 53771 ;; *************** function _HALResetPinMakeInput *****************
 53772 ;; Defined at:
 53773 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 53774 ;; Parameters:    Size  Location     Type
 53775 ;;		None
 53776 ;; Auto vars:     Size  Location     Type
 53777 ;;		None
 53778 ;; Return value:  Size  Location     Type
 53779 ;;                  1    wreg      void 
 53780 ;; Registers used:
 53781 ;;		None
 53782 ;; Tracked objects:
 53783 ;;		On entry : 0/0
 53784 ;;		On exit  : 0/0
 53785 ;;		Unchanged: 0/0
 53786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53791 ;;Total ram usage:        0 bytes
 53792 ;; Hardware stack levels used:    1
 53793 ;; Hardware stack levels required when called:    7
 53794 ;; This function calls:
 53795 ;;		Nothing
 53796 ;; This function is called by:
 53797 ;;		_RADIO_Reset
 53798 ;; This function uses a non-reentrant model
 53799 ;;
 53800                           
 53801                           	psect	text286
 53802  00C6D4                     __ptext286:
 53803                           	opt stack 0
 53804  00C6D4                     _HALResetPinMakeInput:
 53805                           	opt stack 20
 53806                           
 53807                           ;incstack = 0
 53808                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 53809  00C6D4  8494               	bsf	3988,2,c	;volatile
 53810  00C6D6  0012               	return	
 53811  00C6D8                     __end_of_HALResetPinMakeInput:
 53812                           	opt stack 0
 53813                           tosu	equ	0xFFF
 53814                           tosh	equ	0xFFE
 53815                           tosl	equ	0xFFD
 53816                           pclath	equ	0xFFA
 53817                           tblptru	equ	0xFF8
 53818                           tblptrh	equ	0xFF7
 53819                           tblptrl	equ	0xFF6
 53820                           tablat	equ	0xFF5
 53821                           prodh	equ	0xFF4
 53822                           prodl	equ	0xFF3
 53823                           intcon	equ	0xFF2
 53824                           intcon2	equ	0xFF1
 53825                           intcon3	equ	0xFF0
 53826                           indf0	equ	0xFEF
 53827                           postinc0	equ	0xFEE
 53828                           plusw0	equ	0xFEB
 53829                           fsr0h	equ	0xFEA
 53830                           fsr0l	equ	0xFE9
 53831                           wreg	equ	0xFE8
 53832                           postinc1	equ	0xFE6
 53833                           postdec1	equ	0xFE5
 53834                           plusw1	equ	0xFE3
 53835                           fsr1h	equ	0xFE2
 53836                           fsr1l	equ	0xFE1
 53837                           indf2	equ	0xFDF
 53838                           postinc2	equ	0xFDE
 53839                           postdec2	equ	0xFDD
 53840                           plusw2	equ	0xFDB
 53841                           fsr2h	equ	0xFDA
 53842                           fsr2l	equ	0xFD9
 53843                           status	equ	0xFD8
 53844                           
 53845 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 53846 ;; Defined at:
 53847 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 53848 ;; Parameters:    Size  Location     Type
 53849 ;;  period          2   70[BANK0 ] unsigned int 
 53850 ;; Auto vars:     Size  Location     Type
 53851 ;;  iCtr            1   80[BANK0 ] unsigned char 
 53852 ;; Return value:  Size  Location     Type
 53853 ;;                  1    wreg      void 
 53854 ;; Registers used:
 53855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53856 ;; Tracked objects:
 53857 ;;		On entry : 0/0
 53858 ;;		On exit  : 0/0
 53859 ;;		Unchanged: 0/0
 53860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53861 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53862 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53863 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53864 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53865 ;;Total ram usage:       11 bytes
 53866 ;; Hardware stack levels used:    1
 53867 ;; Hardware stack levels required when called:   11
 53868 ;; This function calls:
 53869 ;;		_SwTimerSetTimeout
 53870 ;;		_SwTimerStart
 53871 ;;		_SwTimerStop
 53872 ;;		___lldiv
 53873 ;;		___lmul
 53874 ;; This function is called by:
 53875 ;;		_LORAWAN_Reset
 53876 ;; This function uses a non-reentrant model
 53877 ;;
 53878                           
 53879                           	psect	text287
 53880  00772C                     __ptext287:
 53881                           	opt stack 0
 53882  00772C                     _LORAWAN_LinkCheckConfigure:
 53883                           	opt stack 17
 53884                           
 53885                           ;lorawan.c: 757: uint8_t iCtr;
 53886                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 53887                           
 53888                           ;incstack = 0
 53889  00772C  C0A6  F09A         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 53890  007730  C0A7  F09B         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 53891  007734  0100               	movlb	0	; () banked
 53892  007736  6B9C               	clrf	(___lmul@multiplier+2)& (0+255),b
 53893  007738  6B9D               	clrf	(___lmul@multiplier+3)& (0+255),b
 53894  00773A  0EE8               	movlw	232
 53895  00773C  6F9E               	movwf	___lmul@multiplicand& (0+255),b
 53896  00773E  0E03               	movlw	3
 53897  007740  6F9F               	movwf	(___lmul@multiplicand+1)& (0+255),b
 53898  007742  0E00               	movlw	0
 53899  007744  6FA0               	movwf	(___lmul@multiplicand+2)& (0+255),b
 53900  007746  0E00               	movlw	0
 53901  007748  6FA1               	movwf	(___lmul@multiplicand+3)& (0+255),b
 53902  00774A  EC1B  F057         	call	___lmul	;wreg free
 53903  00774E  C09A  F2D0         	movff	?___lmul,_loRa+204
 53904  007752  C09B  F2D1         	movff	?___lmul+1,_loRa+205
 53905  007756  C09C  F2D2         	movff	?___lmul+2,_loRa+206
 53906  00775A  C09D  F2D3         	movff	?___lmul+3,_loRa+207
 53907                           
 53908                           ;lorawan.c: 761: if (period == 0)
 53909  00775E  0100               	movlb	0	; () banked
 53910  007760  51A6               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 53911  007762  11A7               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 53912  007764  A4D8               	btfss	status,2,c
 53913  007766  D02B               	goto	l2106
 53914                           
 53915                           ; BSR set to: 0
 53916                           ;lorawan.c: 762: {
 53917                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 53918  007768  0102               	movlb	2	; () banked
 53919  00776A  51EB               	movf	(_loRa+231)& (0+255),w,b
 53920  00776C  ECA6  F05E         	call	_SwTimerStop
 53921                           
 53922                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 53923  007770  0102               	movlb	2	; () banked
 53924  007772  9507               	bcf	(_loRa+3)& (0+255),2,b
 53925                           
 53926                           ; BSR set to: 2
 53927                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 53928  007774  0E00               	movlw	0
 53929  007776  0100               	movlb	0	; () banked
 53930  007778  6FB0               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 53931  00777A  D01A               	goto	l2107
 53932  00777C                     
 53933                           ; BSR set to: 0
 53934                           ;lorawan.c: 766: {
 53935                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 53936                           
 53937                           ; BSR set to: 0
 53938  00777C  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 53939  00777E  0D02               	mullw	2
 53940  007780  0EAC               	movlw	low (_loRa+168)
 53941  007782  24F3               	addwf	prodl,w,c
 53942  007784  6ED9               	movwf	fsr2l,c
 53943  007786  0E02               	movlw	high (_loRa+168)
 53944  007788  20F4               	addwfc	prodh,w,c
 53945  00778A  6EDA               	movwf	fsr2h,c
 53946  00778C  0E02               	movlw	2
 53947  00778E  18DE               	xorwf	postinc2,w,c
 53948  007790  A4D8               	btfss	status,2,c
 53949  007792  D00C               	goto	l2109
 53950                           
 53951                           ; BSR set to: 0
 53952                           ;lorawan.c: 768: {
 53953                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 53954  007794  51B0               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 53955  007796  0D02               	mullw	2
 53956  007798  0EAC               	movlw	low (_loRa+168)
 53957  00779A  24F3               	addwf	prodl,w,c
 53958  00779C  6ED9               	movwf	fsr2l,c
 53959  00779E  0E02               	movlw	high (_loRa+168)
 53960  0077A0  20F4               	addwfc	prodh,w,c
 53961  0077A2  6EDA               	movwf	fsr2h,c
 53962  0077A4  0EFF               	movlw	255
 53963  0077A6  6EDF               	movwf	indf2,c
 53964                           
 53965                           ; BSR set to: 0
 53966                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 53967  0077A8  0102               	movlb	2	; () banked
 53968  0077AA  07AB               	decf	(_loRa+167)& (0+255),f,b
 53969  0077AC                     l2109:
 53970                           
 53971                           ; BSR set to: 2
 53972  0077AC  0100               	movlb	0	; () banked
 53973  0077AE  2BB0               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 53974  0077B0                     l2107:
 53975                           
 53976                           ; BSR set to: 0
 53977                           
 53978                           ; BSR set to: 0
 53979  0077B0  0102               	movlb	2	; () banked
 53980  0077B2  51AB               	movf	(_loRa+167)& (0+255),w,b
 53981  0077B4  0100               	movlb	0	; () banked
 53982  0077B6  5DB0               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 53983  0077B8  B0D8               	btfsc	status,0,c
 53984  0077BA  0012               	return	
 53985  0077BC  D7DF               	goto	l2108
 53986  0077BE                     l2106:
 53987                           
 53988                           ; BSR set to: 0
 53989                           ;lorawan.c: 776: else
 53990                           ;lorawan.c: 777: {
 53991                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 53992  0077BE  0102               	movlb	2	; () banked
 53993  0077C0  8507               	bsf	(_loRa+3)& (0+255),2,b
 53994                           
 53995                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 53996  0077C2  A906               	btfss	(_loRa+2)& (0+255),4,b
 53997  0077C4  0012               	return	
 53998                           
 53999                           ; BSR set to: 2
 54000                           ;lorawan.c: 782: {
 54001                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 54002  0077C6  51D3               	movf	(_loRa+207)& (0+255),w,b
 54003  0077C8  E107               	bnz	u24280
 54004  0077CA  29D0               	incf	(_loRa+204)& (0+255),w,b
 54005  0077CC  0EFF               	movlw	255
 54006  0077CE  59D1               	subwfb	(_loRa+205)& (0+255),w,b
 54007  0077D0  0E0F               	movlw	15
 54008  0077D2  59D2               	subwfb	(_loRa+206)& (0+255),w,b
 54009  0077D4  A0D8               	btfss	status,0,c
 54010  0077D6  D01D               	goto	l2114
 54011  0077D8                     u24280:
 54012                           
 54013                           ; BSR set to: 2
 54014  0077D8  C2D0  F060         	movff	_loRa+204,___lldiv@dividend
 54015  0077DC  C2D1  F061         	movff	_loRa+205,___lldiv@dividend+1
 54016  0077E0  C2D2  F062         	movff	_loRa+206,___lldiv@dividend+2
 54017  0077E4  C2D3  F063         	movff	_loRa+207,___lldiv@dividend+3
 54018  0077E8  0E7D               	movlw	125
 54019  0077EA  0100               	movlb	0	; () banked
 54020  0077EC  6F64               	movwf	___lldiv@divisor& (0+255),b
 54021  0077EE  0E00               	movlw	0
 54022  0077F0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 54023  0077F2  0E00               	movlw	0
 54024  0077F4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 54025  0077F6  0E00               	movlw	0
 54026  0077F8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 54027  0077FA  ECAE  F050         	call	___lldiv	;wreg free
 54028  0077FE  0E0C               	movlw	12
 54029  007800                     u24295:
 54030  007800  90D8               	bcf	status,0,c
 54031  007802  0100               	movlb	0	; () banked
 54032  007804  3760               	rlcf	?___lldiv& (0+255),f,b
 54033  007806  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 54034  007808  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 54035  00780A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 54036  00780C  2EE8               	decfsz	wreg,f,c
 54037  00780E  D7F8               	goto	u24295
 54038  007810  D023               	goto	L31
 54039  007812                     l2114:
 54040                           
 54041                           ; BSR set to: 0
 54042  007812  C2D0  F0A8         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 54043  007816  C2D1  F0A9         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 54044  00781A  C2D2  F0AA         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 54045  00781E  C2D3  F0AB         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 54046  007822  0E0C               	movlw	12
 54047  007824                     u24305:
 54048  007824  90D8               	bcf	status,0,c
 54049  007826  0100               	movlb	0	; () banked
 54050  007828  37A8               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 54051  00782A  37A9               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 54052  00782C  37AA               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 54053  00782E  37AB               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 54054  007830  2EE8               	decfsz	wreg,f,c
 54055  007832  D7F8               	goto	u24305
 54056  007834  C0A8  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 54057  007838  C0A9  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 54058  00783C  C0AA  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 54059  007840  C0AB  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 54060  007844  0E7D               	movlw	125
 54061  007846  6F64               	movwf	___lldiv@divisor& (0+255),b
 54062  007848  0E00               	movlw	0
 54063  00784A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 54064  00784C  0E00               	movlw	0
 54065  00784E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 54066  007850  0E00               	movlw	0
 54067  007852  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 54068  007854  ECAE  F050         	call	___lldiv	;wreg free
 54069  007858                     L31:
 54070  007858  C060  F0AC         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2892
 54071  00785C  C061  F0AD         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2892+1
 54072  007860  C062  F0AE         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2892+2
 54073  007864  C063  F0AF         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2892+3
 54074  007868  C0AC  F06D         	movff	_LORAWAN_LinkCheckConfigure$2892,SwTimerSetTimeout@timeout
 54075  00786C  C0AD  F06E         	movff	_LORAWAN_LinkCheckConfigure$2892+1,SwTimerSetTimeout@timeout+1
 54076  007870  C0AE  F06F         	movff	_LORAWAN_LinkCheckConfigure$2892+2,SwTimerSetTimeout@timeout+2
 54077  007874  C0AF  F070         	movff	_LORAWAN_LinkCheckConfigure$2892+3,SwTimerSetTimeout@timeout+3
 54078  007878  0102               	movlb	2	; () banked
 54079  00787A  51EB               	movf	(_loRa+231)& (0+255),w,b
 54080  00787C  ECD5  F05A         	call	_SwTimerSetTimeout
 54081                           
 54082                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 54083  007880  0102               	movlb	2	; () banked
 54084  007882  51EB               	movf	(_loRa+231)& (0+255),w,b
 54085  007884  EC5A  F04D         	call	_SwTimerStart
 54086  007888  0012               	return	
 54087  00788A                     __end_of_LORAWAN_LinkCheckConfigure:
 54088                           	opt stack 0
 54089                           tosu	equ	0xFFF
 54090                           tosh	equ	0xFFE
 54091                           tosl	equ	0xFFD
 54092                           pclath	equ	0xFFA
 54093                           tblptru	equ	0xFF8
 54094                           tblptrh	equ	0xFF7
 54095                           tblptrl	equ	0xFF6
 54096                           tablat	equ	0xFF5
 54097                           prodh	equ	0xFF4
 54098                           prodl	equ	0xFF3
 54099                           intcon	equ	0xFF2
 54100                           intcon2	equ	0xFF1
 54101                           intcon3	equ	0xFF0
 54102                           indf0	equ	0xFEF
 54103                           postinc0	equ	0xFEE
 54104                           plusw0	equ	0xFEB
 54105                           fsr0h	equ	0xFEA
 54106                           fsr0l	equ	0xFE9
 54107                           wreg	equ	0xFE8
 54108                           postinc1	equ	0xFE6
 54109                           postdec1	equ	0xFE5
 54110                           plusw1	equ	0xFE3
 54111                           fsr1h	equ	0xFE2
 54112                           fsr1l	equ	0xFE1
 54113                           indf2	equ	0xFDF
 54114                           postinc2	equ	0xFDE
 54115                           postdec2	equ	0xFDD
 54116                           plusw2	equ	0xFDB
 54117                           fsr2h	equ	0xFDA
 54118                           fsr2l	equ	0xFD9
 54119                           status	equ	0xFD8
 54120                           
 54121 ;; *************** function ___lmul *****************
 54122 ;; Defined at:
 54123 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 54124 ;; Parameters:    Size  Location     Type
 54125 ;;  multiplier      4   58[BANK0 ] unsigned long 
 54126 ;;  multiplicand    4   62[BANK0 ] unsigned long 
 54127 ;; Auto vars:     Size  Location     Type
 54128 ;;  product         4   66[BANK0 ] unsigned long 
 54129 ;; Return value:  Size  Location     Type
 54130 ;;                  4   58[BANK0 ] unsigned long 
 54131 ;; Registers used:
 54132 ;;		wreg, status,2, status,0
 54133 ;; Tracked objects:
 54134 ;;		On entry : 0/0
 54135 ;;		On exit  : 0/0
 54136 ;;		Unchanged: 0/0
 54137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54139 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54141 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54142 ;;Total ram usage:       12 bytes
 54143 ;; Hardware stack levels used:    1
 54144 ;; Hardware stack levels required when called:    7
 54145 ;; This function calls:
 54146 ;;		Nothing
 54147 ;; This function is called by:
 54148 ;;		_RADIO_WriteConfiguration
 54149 ;;		_RADIO_TxDone
 54150 ;;		_RADIO_FSKPacketSent
 54151 ;;		_LORAWAN_TxDone
 54152 ;;		_ExecuteNewChannel
 54153 ;;		_ExecuteRxParamSetupReq
 54154 ;;		_UpdateCfList
 54155 ;;		_LORAWAN_LinkCheckConfigure
 54156 ;;		_BME280_compensateTemperature
 54157 ;;		_BME280_compensatePressure
 54158 ;;		_BME280_compensateHumidity
 54159 ;;		_rand
 54160 ;;		_LORAWAN_Pause
 54161 ;; This function uses a non-reentrant model
 54162 ;;
 54163                           
 54164                           	psect	text288
 54165  00AE36                     __ptext288:
 54166                           	opt stack 0
 54167  00AE36                     ___lmul:
 54168                           	opt stack 20
 54169                           
 54170                           ;incstack = 0
 54171  00AE36  0E00               	movlw	0
 54172  00AE38  0100               	movlb	0	; () banked
 54173  00AE3A  6FA2               	movwf	___lmul@product& (0+255),b
 54174  00AE3C  0E00               	movlw	0
 54175  00AE3E  6FA3               	movwf	(___lmul@product+1)& (0+255),b
 54176  00AE40  0E00               	movlw	0
 54177  00AE42  6FA4               	movwf	(___lmul@product+2)& (0+255),b
 54178  00AE44  0E00               	movlw	0
 54179  00AE46  6FA5               	movwf	(___lmul@product+3)& (0+255),b
 54180  00AE48                     
 54181                           ; BSR set to: 0
 54182                           
 54183                           ; BSR set to: 0
 54184  00AE48  A19A               	btfss	___lmul@multiplier& (0+255),0,b
 54185  00AE4A  D008               	goto	l3558
 54186                           
 54187                           ; BSR set to: 0
 54188  00AE4C  519E               	movf	___lmul@multiplicand& (0+255),w,b
 54189  00AE4E  27A2               	addwf	___lmul@product& (0+255),f,b
 54190  00AE50  519F               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 54191  00AE52  23A3               	addwfc	(___lmul@product+1)& (0+255),f,b
 54192  00AE54  51A0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 54193  00AE56  23A4               	addwfc	(___lmul@product+2)& (0+255),f,b
 54194  00AE58  51A1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 54195  00AE5A  23A5               	addwfc	(___lmul@product+3)& (0+255),f,b
 54196  00AE5C                     l3558:
 54197                           
 54198                           ; BSR set to: 0
 54199                           
 54200                           ; BSR set to: 0
 54201  00AE5C  90D8               	bcf	status,0,c
 54202  00AE5E  379E               	rlcf	___lmul@multiplicand& (0+255),f,b
 54203  00AE60  379F               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 54204  00AE62  37A0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 54205  00AE64  37A1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 54206                           
 54207                           ; BSR set to: 0
 54208  00AE66  90D8               	bcf	status,0,c
 54209  00AE68  339D               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 54210  00AE6A  339C               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 54211  00AE6C  339B               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 54212  00AE6E  339A               	rrcf	___lmul@multiplier& (0+255),f,b
 54213  00AE70  519A               	movf	___lmul@multiplier& (0+255),w,b
 54214  00AE72  119B               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 54215  00AE74  119C               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 54216  00AE76  119D               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 54217  00AE78  A4D8               	btfss	status,2,c
 54218  00AE7A  D7E6               	goto	l3557
 54219                           
 54220                           ; BSR set to: 0
 54221  00AE7C  C0A2  F09A         	movff	___lmul@product,?___lmul
 54222  00AE80  C0A3  F09B         	movff	___lmul@product+1,?___lmul+1
 54223  00AE84  C0A4  F09C         	movff	___lmul@product+2,?___lmul+2
 54224  00AE88  C0A5  F09D         	movff	___lmul@product+3,?___lmul+3
 54225                           
 54226                           ; BSR set to: 0
 54227  00AE8C  0012               	return		;funcret
 54228  00AE8E                     __end_of___lmul:
 54229                           	opt stack 0
 54230                           tosu	equ	0xFFF
 54231                           tosh	equ	0xFFE
 54232                           tosl	equ	0xFFD
 54233                           pclath	equ	0xFFA
 54234                           tblptru	equ	0xFF8
 54235                           tblptrh	equ	0xFF7
 54236                           tblptrl	equ	0xFF6
 54237                           tablat	equ	0xFF5
 54238                           prodh	equ	0xFF4
 54239                           prodl	equ	0xFF3
 54240                           intcon	equ	0xFF2
 54241                           intcon2	equ	0xFF1
 54242                           intcon3	equ	0xFF0
 54243                           indf0	equ	0xFEF
 54244                           postinc0	equ	0xFEE
 54245                           plusw0	equ	0xFEB
 54246                           fsr0h	equ	0xFEA
 54247                           fsr0l	equ	0xFE9
 54248                           wreg	equ	0xFE8
 54249                           postinc1	equ	0xFE6
 54250                           postdec1	equ	0xFE5
 54251                           plusw1	equ	0xFE3
 54252                           fsr1h	equ	0xFE2
 54253                           fsr1l	equ	0xFE1
 54254                           indf2	equ	0xFDF
 54255                           postinc2	equ	0xFDE
 54256                           postdec2	equ	0xFDD
 54257                           plusw2	equ	0xFDB
 54258                           fsr2h	equ	0xFDA
 54259                           fsr2l	equ	0xFD9
 54260                           status	equ	0xFD8
 54261                           
 54262 ;; *************** function ___lldiv *****************
 54263 ;; Defined at:
 54264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 54265 ;; Parameters:    Size  Location     Type
 54266 ;;  dividend        4    0[BANK0 ] unsigned long 
 54267 ;;  divisor         4    4[BANK0 ] unsigned long 
 54268 ;; Auto vars:     Size  Location     Type
 54269 ;;  quotient        4    8[BANK0 ] unsigned long 
 54270 ;;  counter         1   12[BANK0 ] unsigned char 
 54271 ;; Return value:  Size  Location     Type
 54272 ;;                  4    0[BANK0 ] unsigned long 
 54273 ;; Registers used:
 54274 ;;		wreg, status,2, status,0
 54275 ;; Tracked objects:
 54276 ;;		On entry : 0/0
 54277 ;;		On exit  : 0/0
 54278 ;;		Unchanged: 0/0
 54279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54280 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54281 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54283 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54284 ;;Total ram usage:       13 bytes
 54285 ;; Hardware stack levels used:    1
 54286 ;; Hardware stack levels required when called:    7
 54287 ;; This function calls:
 54288 ;;		Nothing
 54289 ;; This function is called by:
 54290 ;;		_RADIO_WriteFrequency
 54291 ;;		_RADIO_WriteFSKFrequencyDeviation
 54292 ;;		_RADIO_WriteFSKBitRate
 54293 ;;		_RADIO_Transmit
 54294 ;;		_RADIO_ReceiveStart
 54295 ;;		_LORAWAN_TxDone
 54296 ;;		_LORAWAN_RxTimeout
 54297 ;;		_StartReTxTimer
 54298 ;;		_DutyCycleCallback
 54299 ;;		_LORAWAN_LinkCheckConfigure
 54300 ;;		_LORAWAN_LinkCheckCallback
 54301 ;;		_UpdateRetransmissionAckTimeoutState
 54302 ;;		_UpdateJoinSuccessState
 54303 ;;		_BME280_compensatePressure
 54304 ;;		_printf
 54305 ;; This function uses a non-reentrant model
 54306 ;;
 54307                           
 54308                           	psect	text289
 54309  00A15C                     __ptext289:
 54310                           	opt stack 0
 54311  00A15C                     ___lldiv:
 54312                           	opt stack 22
 54313                           
 54314                           ; BSR set to: 0
 54315                           ;incstack = 0
 54316  00A15C  0E00               	movlw	0
 54317  00A15E  0100               	movlb	0	; () banked
 54318  00A160  6F68               	movwf	___lldiv@quotient& (0+255),b
 54319  00A162  0E00               	movlw	0
 54320  00A164  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 54321  00A166  0E00               	movlw	0
 54322  00A168  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 54323  00A16A  0E00               	movlw	0
 54324  00A16C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 54325                           
 54326                           ; BSR set to: 0
 54327  00A16E  5164               	movf	___lldiv@divisor& (0+255),w,b
 54328  00A170  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 54329  00A172  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 54330  00A174  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 54331  00A176  B4D8               	btfsc	status,2,c
 54332  00A178  D02A               	goto	l3940
 54333                           
 54334                           ; BSR set to: 0
 54335  00A17A  0E01               	movlw	1
 54336  00A17C  6F6C               	movwf	___lldiv@counter& (0+255),b
 54337  00A17E  D006               	goto	l3935
 54338  00A180                     
 54339                           ; BSR set to: 0
 54340                           
 54341                           ; BSR set to: 0
 54342  00A180  90D8               	bcf	status,0,c
 54343  00A182  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 54344  00A184  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 54345  00A186  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 54346  00A188  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 54347  00A18A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 54348  00A18C                     l3935:
 54349                           
 54350                           ; BSR set to: 0
 54351                           
 54352                           ; BSR set to: 0
 54353  00A18C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 54354  00A18E  D7F8               	goto	l3936
 54355  00A190                     u19120:
 54356                           
 54357                           ; BSR set to: 0
 54358                           
 54359                           ; BSR set to: 0
 54360                           
 54361                           ; BSR set to: 0
 54362  00A190  90D8               	bcf	status,0,c
 54363  00A192  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 54364  00A194  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 54365  00A196  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 54366  00A198  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 54367                           
 54368                           ; BSR set to: 0
 54369  00A19A  5164               	movf	___lldiv@divisor& (0+255),w,b
 54370  00A19C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 54371  00A19E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 54372  00A1A0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 54373  00A1A2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 54374  00A1A4  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 54375  00A1A6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 54376  00A1A8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 54377  00A1AA  A0D8               	btfss	status,0,c
 54378  00A1AC  D009               	goto	l3939
 54379                           
 54380                           ; BSR set to: 0
 54381  00A1AE  5164               	movf	___lldiv@divisor& (0+255),w,b
 54382  00A1B0  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 54383  00A1B2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 54384  00A1B4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 54385  00A1B6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 54386  00A1B8  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 54387  00A1BA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 54388  00A1BC  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 54389                           
 54390                           ; BSR set to: 0
 54391  00A1BE  8168               	bsf	___lldiv@quotient& (0+255),0,b
 54392  00A1C0                     l3939:
 54393                           
 54394                           ; BSR set to: 0
 54395                           
 54396                           ; BSR set to: 0
 54397  00A1C0  90D8               	bcf	status,0,c
 54398  00A1C2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 54399  00A1C4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 54400  00A1C6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 54401  00A1C8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 54402                           
 54403                           ; BSR set to: 0
 54404  00A1CA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 54405  00A1CC  D7E1               	goto	u19120
 54406  00A1CE                     l3940:
 54407                           
 54408                           ; BSR set to: 0
 54409                           
 54410                           ; BSR set to: 0
 54411  00A1CE  C068  F060         	movff	___lldiv@quotient,?___lldiv
 54412  00A1D2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 54413  00A1D6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 54414  00A1DA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 54415                           
 54416                           ; BSR set to: 0
 54417  00A1DE  0012               	return		;funcret
 54418  00A1E0                     __end_of___lldiv:
 54419                           	opt stack 0
 54420                           tosu	equ	0xFFF
 54421                           tosh	equ	0xFFE
 54422                           tosl	equ	0xFFD
 54423                           pclath	equ	0xFFA
 54424                           tblptru	equ	0xFF8
 54425                           tblptrh	equ	0xFF7
 54426                           tblptrl	equ	0xFF6
 54427                           tablat	equ	0xFF5
 54428                           prodh	equ	0xFF4
 54429                           prodl	equ	0xFF3
 54430                           intcon	equ	0xFF2
 54431                           intcon2	equ	0xFF1
 54432                           intcon3	equ	0xFF0
 54433                           indf0	equ	0xFEF
 54434                           postinc0	equ	0xFEE
 54435                           plusw0	equ	0xFEB
 54436                           fsr0h	equ	0xFEA
 54437                           fsr0l	equ	0xFE9
 54438                           wreg	equ	0xFE8
 54439                           postinc1	equ	0xFE6
 54440                           postdec1	equ	0xFE5
 54441                           plusw1	equ	0xFE3
 54442                           fsr1h	equ	0xFE2
 54443                           fsr1l	equ	0xFE1
 54444                           indf2	equ	0xFDF
 54445                           postinc2	equ	0xFDE
 54446                           postdec2	equ	0xFDD
 54447                           plusw2	equ	0xFDB
 54448                           fsr2h	equ	0xFDA
 54449                           fsr2l	equ	0xFD9
 54450                           status	equ	0xFD8
 54451                           
 54452 ;; *************** function _SwTimerStop *****************
 54453 ;; Defined at:
 54454 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54455 ;; Parameters:    Size  Location     Type
 54456 ;;  timerId         1    wreg     unsigned char 
 54457 ;; Auto vars:     Size  Location     Type
 54458 ;;  timerId         1    0[BANK0 ] unsigned char 
 54459 ;; Return value:  Size  Location     Type
 54460 ;;                  1    wreg      void 
 54461 ;; Registers used:
 54462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54463 ;; Tracked objects:
 54464 ;;		On entry : 0/0
 54465 ;;		On exit  : 0/0
 54466 ;;		Unchanged: 0/0
 54467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54472 ;;Total ram usage:        1 bytes
 54473 ;; Hardware stack levels used:    1
 54474 ;; Hardware stack levels required when called:    7
 54475 ;; This function calls:
 54476 ;;		Nothing
 54477 ;; This function is called by:
 54478 ;;		_RADIO_Init
 54479 ;;		_RADIO_Transmit
 54480 ;;		_RADIO_RxDone
 54481 ;;		_RADIO_FSKPayloadReady
 54482 ;;		_RADIO_RxTimeout
 54483 ;;		_RADIO_TxDone
 54484 ;;		_RADIO_FSKPacketSent
 54485 ;;		_RADIO_RxFSKTimeout
 54486 ;;		_LORAWAN_TxDone
 54487 ;;		_StopAllSoftwareTimers
 54488 ;;		_LORAWAN_LinkCheckConfigure
 54489 ;;		_LORAWAN_RxDone
 54490 ;; This function uses a non-reentrant model
 54491 ;;
 54492                           
 54493                           	psect	text290
 54494  00BD4C                     __ptext290:
 54495                           	opt stack 0
 54496  00BD4C                     _SwTimerStop:
 54497                           	opt stack 21
 54498                           
 54499                           ; BSR set to: 0
 54500                           ;incstack = 0
 54501                           ;SwTimerStop@timerId stored from wreg
 54502  00BD4C  0100               	movlb	0	; () banked
 54503  00BD4E  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 54504                           
 54505                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 54506  00BD50  9EF2               	bcf	intcon,7,c	;volatile
 54507                           
 54508                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 54509  00BD52  0100               	movlb	0	; () banked
 54510  00BD54  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 54511  00BD56  0D08               	mullw	8
 54512  00BD58  0E04               	movlw	4
 54513  00BD5A  26F3               	addwf	prodl,f,c
 54514  00BD5C  0E00               	movlw	0
 54515  00BD5E  22F4               	addwfc	prodh,f,c
 54516  00BD60  0E00               	movlw	low _swTimers
 54517  00BD62  24F3               	addwf	prodl,w,c
 54518  00BD64  6ED9               	movwf	fsr2l,c
 54519  00BD66  0E03               	movlw	high _swTimers
 54520  00BD68  20F4               	addwfc	prodh,w,c
 54521  00BD6A  6EDA               	movwf	fsr2h,c
 54522  00BD6C  0E00               	movlw	0
 54523  00BD6E  6EDF               	movwf	indf2,c
 54524                           
 54525                           ; BSR set to: 0
 54526                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 54527  00BD70  8EF2               	bsf	intcon,7,c	;volatile
 54528                           
 54529                           ; BSR set to: 0
 54530  00BD72  0012               	return		;funcret
 54531  00BD74                     __end_of_SwTimerStop:
 54532                           	opt stack 0
 54533                           tosu	equ	0xFFF
 54534                           tosh	equ	0xFFE
 54535                           tosl	equ	0xFFD
 54536                           pclath	equ	0xFFA
 54537                           tblptru	equ	0xFF8
 54538                           tblptrh	equ	0xFF7
 54539                           tblptrl	equ	0xFF6
 54540                           tablat	equ	0xFF5
 54541                           prodh	equ	0xFF4
 54542                           prodl	equ	0xFF3
 54543                           intcon	equ	0xFF2
 54544                           intcon2	equ	0xFF1
 54545                           intcon3	equ	0xFF0
 54546                           indf0	equ	0xFEF
 54547                           postinc0	equ	0xFEE
 54548                           plusw0	equ	0xFEB
 54549                           fsr0h	equ	0xFEA
 54550                           fsr0l	equ	0xFE9
 54551                           wreg	equ	0xFE8
 54552                           postinc1	equ	0xFE6
 54553                           postdec1	equ	0xFE5
 54554                           plusw1	equ	0xFE3
 54555                           fsr1h	equ	0xFE2
 54556                           fsr1l	equ	0xFE1
 54557                           indf2	equ	0xFDF
 54558                           postinc2	equ	0xFDE
 54559                           postdec2	equ	0xFDD
 54560                           plusw2	equ	0xFDB
 54561                           fsr2h	equ	0xFDA
 54562                           fsr2l	equ	0xFD9
 54563                           status	equ	0xFD8
 54564                           
 54565 ;; *************** function _SwTimerStart *****************
 54566 ;; Defined at:
 54567 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54568 ;; Parameters:    Size  Location     Type
 54569 ;;  timerId         1    wreg     unsigned char 
 54570 ;; Auto vars:     Size  Location     Type
 54571 ;;  timerId         1   57[BANK0 ] unsigned char 
 54572 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 54573 ;; Return value:  Size  Location     Type
 54574 ;;                  1    wreg      void 
 54575 ;; Registers used:
 54576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54577 ;; Tracked objects:
 54578 ;;		On entry : 0/0
 54579 ;;		On exit  : 0/0
 54580 ;;		Unchanged: 0/0
 54581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54583 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54585 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54586 ;;Total ram usage:        9 bytes
 54587 ;; Hardware stack levels used:    1
 54588 ;; Hardware stack levels required when called:   10
 54589 ;; This function calls:
 54590 ;;		_SwTimersInterrupt
 54591 ;;		_TMR_OverrideRemaining
 54592 ;; This function is called by:
 54593 ;;		_RADIO_Transmit
 54594 ;;		_RADIO_ReceiveStart
 54595 ;;		_LORAWAN_TxDone
 54596 ;;		_LORAWAN_RxTimeout
 54597 ;;		_StartReTxTimer
 54598 ;;		_DutyCycleCallback
 54599 ;;		_LORAWAN_Join
 54600 ;;		_LORAWAN_LinkCheckConfigure
 54601 ;;		_LORAWAN_LinkCheckCallback
 54602 ;;		_UpdateRetransmissionAckTimeoutState
 54603 ;;		_UpdateJoinSuccessState
 54604 ;; This function uses a non-reentrant model
 54605 ;;
 54606                           
 54607                           	psect	text291
 54608  009AB4                     __ptext291:
 54609                           	opt stack 0
 54610  009AB4                     _SwTimerStart:
 54611                           	opt stack 18
 54612                           
 54613                           ; BSR set to: 0
 54614                           ;incstack = 0
 54615                           ;SwTimerStart@timerId stored from wreg
 54616  009AB4  0100               	movlb	0	; () banked
 54617  009AB6  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 54618                           
 54619                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 54620                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 54621  009AB8  9EF2               	bcf	intcon,7,c	;volatile
 54622                           
 54623                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 54624  009ABA  ECDB  F042         	call	_SwTimersInterrupt	;wreg free
 54625  009ABE  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 54626  009AC2  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 54627  009AC6  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 54628  009ACA  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 54629                           
 54630                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 54631  009ACE  0100               	movlb	0	; () banked
 54632  009AD0  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54633  009AD2  0D08               	mullw	8
 54634  009AD4  0E00               	movlw	low _swTimers
 54635  009AD6  24F3               	addwf	prodl,w,c
 54636  009AD8  6ED9               	movwf	fsr2l,c
 54637  009ADA  0E03               	movlw	high _swTimers
 54638  009ADC  20F4               	addwfc	prodh,w,c
 54639  009ADE  6EDA               	movwf	fsr2h,c
 54640  009AE0  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 54641  009AE2  5CDE               	subwf	postinc2,w,c
 54642  009AE4  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 54643  009AE6  58DE               	subwfb	postinc2,w,c
 54644  009AE8  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 54645  009AEA  58DE               	subwfb	postinc2,w,c
 54646  009AEC  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 54647  009AEE  58DE               	subwfb	postinc2,w,c
 54648  009AF0  B0D8               	btfsc	status,0,c
 54649  009AF2  D010               	goto	l589
 54650                           
 54651                           ; BSR set to: 0
 54652                           ;sw_timer.c: 225: {
 54653                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 54654  009AF4  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54655  009AF6  0D08               	mullw	8
 54656  009AF8  0E00               	movlw	low _swTimers
 54657  009AFA  24F3               	addwf	prodl,w,c
 54658  009AFC  6ED9               	movwf	fsr2l,c
 54659  009AFE  0E03               	movlw	high _swTimers
 54660  009B00  20F4               	addwfc	prodh,w,c
 54661  009B02  6EDA               	movwf	fsr2h,c
 54662  009B04  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 54663  009B08  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 54664  009B0C  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 54665  009B10  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 54666  009B14                     l589:
 54667                           
 54668                           ; BSR set to: 0
 54669                           ;sw_timer.c: 227: }
 54670                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 54671                           
 54672                           ; BSR set to: 0
 54673  009B14  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 54674  009B18  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 54675  009B1C  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 54676  009B20  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 54677  009B24  ECA5  F04D         	call	_TMR_OverrideRemaining	;wreg free
 54678                           
 54679                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 54680  009B28  0100               	movlb	0	; () banked
 54681  009B2A  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 54682  009B2C  0D08               	mullw	8
 54683  009B2E  0E04               	movlw	4
 54684  009B30  26F3               	addwf	prodl,f,c
 54685  009B32  0E00               	movlw	0
 54686  009B34  22F4               	addwfc	prodh,f,c
 54687  009B36  0E00               	movlw	low _swTimers
 54688  009B38  24F3               	addwf	prodl,w,c
 54689  009B3A  6ED9               	movwf	fsr2l,c
 54690  009B3C  0E03               	movlw	high _swTimers
 54691  009B3E  20F4               	addwfc	prodh,w,c
 54692  009B40  6EDA               	movwf	fsr2h,c
 54693  009B42  0E01               	movlw	1
 54694  009B44  6EDF               	movwf	indf2,c
 54695                           
 54696                           ; BSR set to: 0
 54697                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 54698  009B46  8EF2               	bsf	intcon,7,c	;volatile
 54699                           
 54700                           ; BSR set to: 0
 54701  009B48  0012               	return		;funcret
 54702  009B4A                     __end_of_SwTimerStart:
 54703                           	opt stack 0
 54704                           tosu	equ	0xFFF
 54705                           tosh	equ	0xFFE
 54706                           tosl	equ	0xFFD
 54707                           pclath	equ	0xFFA
 54708                           tblptru	equ	0xFF8
 54709                           tblptrh	equ	0xFF7
 54710                           tblptrl	equ	0xFF6
 54711                           tablat	equ	0xFF5
 54712                           prodh	equ	0xFF4
 54713                           prodl	equ	0xFF3
 54714                           intcon	equ	0xFF2
 54715                           intcon2	equ	0xFF1
 54716                           intcon3	equ	0xFF0
 54717                           indf0	equ	0xFEF
 54718                           postinc0	equ	0xFEE
 54719                           plusw0	equ	0xFEB
 54720                           fsr0h	equ	0xFEA
 54721                           fsr0l	equ	0xFE9
 54722                           wreg	equ	0xFE8
 54723                           postinc1	equ	0xFE6
 54724                           postdec1	equ	0xFE5
 54725                           plusw1	equ	0xFE3
 54726                           fsr1h	equ	0xFE2
 54727                           fsr1l	equ	0xFE1
 54728                           indf2	equ	0xFDF
 54729                           postinc2	equ	0xFDE
 54730                           postdec2	equ	0xFDD
 54731                           plusw2	equ	0xFDB
 54732                           fsr2h	equ	0xFDA
 54733                           fsr2l	equ	0xFD9
 54734                           status	equ	0xFD8
 54735                           
 54736 ;; *************** function _TMR_OverrideRemaining *****************
 54737 ;; Defined at:
 54738 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54739 ;; Parameters:    Size  Location     Type
 54740 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 54741 ;; Auto vars:     Size  Location     Type
 54742 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 54743 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 54744 ;; Return value:  Size  Location     Type
 54745 ;;                  1    wreg      void 
 54746 ;; Registers used:
 54747 ;;		wreg, status,2, status,0, cstack
 54748 ;; Tracked objects:
 54749 ;;		On entry : 0/0
 54750 ;;		On exit  : 0/0
 54751 ;;		Unchanged: 0/0
 54752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54754 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54756 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54757 ;;Total ram usage:       10 bytes
 54758 ;; Hardware stack levels used:    1
 54759 ;; Hardware stack levels required when called:    9
 54760 ;; This function calls:
 54761 ;;		_TMR_SwapTimer
 54762 ;; This function is called by:
 54763 ;;		_SwTimerStart
 54764 ;; This function uses a non-reentrant model
 54765 ;;
 54766                           
 54767                           	psect	text292
 54768  009B4A                     __ptext292:
 54769                           	opt stack 0
 54770  009B4A                     _TMR_OverrideRemaining:
 54771                           	opt stack 18
 54772                           
 54773                           ;sw_timer.c: 67: uint16_t tmrVal;
 54774                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 54775                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 54776                           
 54777                           ; BSR set to: 0
 54778                           ;incstack = 0
 54779  009B4A  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 54780  009B4C  1056               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 54781  009B4E  1055               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 54782  009B50  E104               	bnz	u19240
 54783  009B52  0E0B               	movlw	11
 54784  009B54  5C54               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 54785  009B56  A0D8               	btfss	status,0,c
 54786  009B58  0012               	return	
 54787  009B5A                     u19240:
 54788                           
 54789                           ;sw_timer.c: 72: {
 54790                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 54791  009B5A  5054               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 54792  009B5C  0100               	movlb	0	; () banked
 54793  009B5E  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 54794  009B60  5055               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 54795  009B62  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 54796  009B64  5056               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 54797  009B66  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 54798  009B68  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 54799  009B6A  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 54800  009B6C  B0D8               	btfsc	status,0,c
 54801  009B6E  0012               	return	
 54802                           
 54803                           ; BSR set to: 0
 54804                           ;sw_timer.c: 74: {
 54805                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 54806  009B70  C06A  F054         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 54807  009B74  C06B  F055         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 54808  009B78  C06C  F056         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 54809  009B7C  C06D  F057         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 54810                           
 54811                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 54812  009B80  C044  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 54813  009B84  C045  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 54814                           
 54815                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 54816  009B88  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 54817  009B8C  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 54818  009B90  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 54819  009B92  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54820  009B94  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 54821  009B96  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54822  009B98  C06E  F044         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 54823  009B9C  C06F  F045         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 54824                           
 54825                           ; BSR set to: 0
 54826                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 54827  009BA0  C044  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 54828  009BA4  C045  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 54829  009BA8  EC35  F059         	call	_TMR_SwapTimer	;wreg free
 54830  009BAC  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 54831  009BB0  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 54832                           
 54833                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 54834  009BB4  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 54835  009BB8  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 54836  009BBC  0100               	movlb	0	; () banked
 54837  009BBE  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 54838  009BC0  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54839  009BC2  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 54840  009BC4  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54841  009BC6  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 54842  009BC8  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 54843  009BCA  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 54844  009BCC  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 54845  009BCE  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 54846  009BD0  2640               	addwf	_ticksAdded,f,c	;volatile
 54847  009BD2  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 54848  009BD4  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 54849  009BD6  0E00               	movlw	0
 54850  009BD8  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 54851  009BDA  0E00               	movlw	0
 54852  009BDC  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 54853                           
 54854                           ; BSR set to: 0
 54855  009BDE  0012               	return	
 54856  009BE0                     __end_of_TMR_OverrideRemaining:
 54857                           	opt stack 0
 54858                           tosu	equ	0xFFF
 54859                           tosh	equ	0xFFE
 54860                           tosl	equ	0xFFD
 54861                           pclath	equ	0xFFA
 54862                           tblptru	equ	0xFF8
 54863                           tblptrh	equ	0xFF7
 54864                           tblptrl	equ	0xFF6
 54865                           tablat	equ	0xFF5
 54866                           prodh	equ	0xFF4
 54867                           prodl	equ	0xFF3
 54868                           intcon	equ	0xFF2
 54869                           intcon2	equ	0xFF1
 54870                           intcon3	equ	0xFF0
 54871                           indf0	equ	0xFEF
 54872                           postinc0	equ	0xFEE
 54873                           plusw0	equ	0xFEB
 54874                           fsr0h	equ	0xFEA
 54875                           fsr0l	equ	0xFE9
 54876                           wreg	equ	0xFE8
 54877                           postinc1	equ	0xFE6
 54878                           postdec1	equ	0xFE5
 54879                           plusw1	equ	0xFE3
 54880                           fsr1h	equ	0xFE2
 54881                           fsr1l	equ	0xFE1
 54882                           indf2	equ	0xFDF
 54883                           postinc2	equ	0xFDE
 54884                           postdec2	equ	0xFDD
 54885                           plusw2	equ	0xFDB
 54886                           fsr2h	equ	0xFDA
 54887                           fsr2l	equ	0xFD9
 54888                           status	equ	0xFD8
 54889                           
 54890 ;; *************** function _TMR_SwapTimer *****************
 54891 ;; Defined at:
 54892 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 54893 ;; Parameters:    Size  Location     Type
 54894 ;;  timerVal        2    8[BANK0 ] unsigned int 
 54895 ;; Auto vars:     Size  Location     Type
 54896 ;;		None
 54897 ;; Return value:  Size  Location     Type
 54898 ;;                  2    8[BANK0 ] unsigned int 
 54899 ;; Registers used:
 54900 ;;		wreg, status,2, status,0, cstack
 54901 ;; Tracked objects:
 54902 ;;		On entry : 0/0
 54903 ;;		On exit  : 0/0
 54904 ;;		Unchanged: 0/0
 54905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54910 ;;Total ram usage:        2 bytes
 54911 ;; Hardware stack levels used:    1
 54912 ;; Hardware stack levels required when called:    8
 54913 ;; This function calls:
 54914 ;;		_TMR1_ReadTimer
 54915 ;;		_TMR1_WriteTimer
 54916 ;; This function is called by:
 54917 ;;		_TMR_OverrideRemaining
 54918 ;; This function uses a non-reentrant model
 54919 ;;
 54920                           
 54921                           	psect	text293
 54922  00B26A                     __ptext293:
 54923                           	opt stack 0
 54924  00B26A                     _TMR_SwapTimer:
 54925                           	opt stack 18
 54926                           
 54927                           ;sw_timer.c: 114: static uint16_t oldVal;
 54928                           ;sw_timer.c: 115: static uint16_t retVal;
 54929                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 54930                           
 54931                           ;incstack = 0
 54932  00B26A  EC5A  F05F         	call	_TMR1_ReadTimer	;wreg free
 54933  00B26E  C060  F122         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 54934  00B272  C061  F123         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 54935  00B276                     
 54936                           ;sw_timer.c: 123: ;
 54937  00B276  EC5A  F05F         	call	_TMR1_ReadTimer	;wreg free
 54938  00B27A  0101               	movlb	1	; () banked
 54939  00B27C  5122               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 54940  00B27E  0100               	movlb	0	; () banked
 54941  00B280  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 54942  00B282  E106               	bnz	l17340
 54943  00B284  0101               	movlb	1	; () banked
 54944  00B286  5123               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 54945  00B288  0100               	movlb	0	; () banked
 54946  00B28A  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 54947  00B28C  B4D8               	btfsc	status,2,c
 54948  00B28E  D7F3               	goto	l555
 54949  00B290                     l17340:
 54950                           
 54951                           ; BSR set to: 0
 54952                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 54953  00B290  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 54954  00B294  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 54955  00B298  ECFB  F05F         	call	_TMR1_WriteTimer	;wreg free
 54956                           
 54957                           ;sw_timer.c: 128: oldVal++;
 54958  00B29C  0101               	movlb	1	; () banked
 54959  00B29E  4B22               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 54960  00B2A0  2B23               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 54961                           
 54962                           ; BSR set to: 1
 54963                           ;sw_timer.c: 130: retVal = oldVal;
 54964  00B2A2  C122  F120         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 54965  00B2A6  C123  F121         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 54966                           
 54967                           ; BSR set to: 1
 54968                           ;sw_timer.c: 132: return retVal;
 54969  00B2AA  C120  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 54970  00B2AE  C121  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 54971  00B2B2  0012               	return	
 54972  00B2B4                     __end_of_TMR_SwapTimer:
 54973                           	opt stack 0
 54974                           tosu	equ	0xFFF
 54975                           tosh	equ	0xFFE
 54976                           tosl	equ	0xFFD
 54977                           pclath	equ	0xFFA
 54978                           tblptru	equ	0xFF8
 54979                           tblptrh	equ	0xFF7
 54980                           tblptrl	equ	0xFF6
 54981                           tablat	equ	0xFF5
 54982                           prodh	equ	0xFF4
 54983                           prodl	equ	0xFF3
 54984                           intcon	equ	0xFF2
 54985                           intcon2	equ	0xFF1
 54986                           intcon3	equ	0xFF0
 54987                           indf0	equ	0xFEF
 54988                           postinc0	equ	0xFEE
 54989                           plusw0	equ	0xFEB
 54990                           fsr0h	equ	0xFEA
 54991                           fsr0l	equ	0xFE9
 54992                           wreg	equ	0xFE8
 54993                           postinc1	equ	0xFE6
 54994                           postdec1	equ	0xFE5
 54995                           plusw1	equ	0xFE3
 54996                           fsr1h	equ	0xFE2
 54997                           fsr1l	equ	0xFE1
 54998                           indf2	equ	0xFDF
 54999                           postinc2	equ	0xFDE
 55000                           postdec2	equ	0xFDD
 55001                           plusw2	equ	0xFDB
 55002                           fsr2h	equ	0xFDA
 55003                           fsr2l	equ	0xFD9
 55004                           status	equ	0xFD8
 55005                           
 55006 ;; *************** function _TMR1_WriteTimer *****************
 55007 ;; Defined at:
 55008 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 55009 ;; Parameters:    Size  Location     Type
 55010 ;;  timerVal        2    0[BANK0 ] unsigned int 
 55011 ;; Auto vars:     Size  Location     Type
 55012 ;;		None
 55013 ;; Return value:  Size  Location     Type
 55014 ;;                  1    wreg      void 
 55015 ;; Registers used:
 55016 ;;		wreg, status,2
 55017 ;; Tracked objects:
 55018 ;;		On entry : 0/0
 55019 ;;		On exit  : 0/0
 55020 ;;		Unchanged: 0/0
 55021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55026 ;;Total ram usage:        2 bytes
 55027 ;; Hardware stack levels used:    1
 55028 ;; Hardware stack levels required when called:    7
 55029 ;; This function calls:
 55030 ;;		Nothing
 55031 ;; This function is called by:
 55032 ;;		_TMR_SwapTimer
 55033 ;;		_TMR1_Reload
 55034 ;; This function uses a non-reentrant model
 55035 ;;
 55036                           
 55037                           	psect	text294
 55038  00BFF6                     __ptext294:
 55039                           	opt stack 0
 55040  00BFF6                     _TMR1_WriteTimer:
 55041                           	opt stack 18
 55042                           
 55043                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 55044                           
 55045                           ; BSR set to: 1
 55046                           ;incstack = 0
 55047  00BFF6  A4CD               	btfss	4045,2,c	;volatile
 55048  00BFF8  D008               	goto	l2774
 55049                           
 55050                           ;tmr1.c: 124: {
 55051                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 55052  00BFFA  90CD               	bcf	4045,0,c	;volatile
 55053                           
 55054                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 55055  00BFFC  0100               	movlb	0	; () banked
 55056  00BFFE  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 55057  00C000  6ECF               	movwf	4047,c	;volatile
 55058                           
 55059                           ; BSR set to: 0
 55060                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 55061  00C002  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 55062                           
 55063                           ; BSR set to: 0
 55064                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 55065  00C006  80CD               	bsf	4045,0,c	;volatile
 55066                           
 55067                           ;tmr1.c: 134: }
 55068  00C008  0012               	return	
 55069  00C00A                     l2774:
 55070                           
 55071                           ;tmr1.c: 135: else
 55072                           ;tmr1.c: 136: {
 55073                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 55074                           
 55075                           ; BSR set to: 0
 55076  00C00A  0100               	movlb	0	; () banked
 55077  00C00C  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 55078  00C00E  6ECF               	movwf	4047,c	;volatile
 55079                           
 55080                           ; BSR set to: 0
 55081                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 55082  00C010  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 55083  00C014  0012               	return	
 55084  00C016                     __end_of_TMR1_WriteTimer:
 55085                           	opt stack 0
 55086                           tosu	equ	0xFFF
 55087                           tosh	equ	0xFFE
 55088                           tosl	equ	0xFFD
 55089                           pclath	equ	0xFFA
 55090                           tblptru	equ	0xFF8
 55091                           tblptrh	equ	0xFF7
 55092                           tblptrl	equ	0xFF6
 55093                           tablat	equ	0xFF5
 55094                           prodh	equ	0xFF4
 55095                           prodl	equ	0xFF3
 55096                           intcon	equ	0xFF2
 55097                           intcon2	equ	0xFF1
 55098                           intcon3	equ	0xFF0
 55099                           indf0	equ	0xFEF
 55100                           postinc0	equ	0xFEE
 55101                           plusw0	equ	0xFEB
 55102                           fsr0h	equ	0xFEA
 55103                           fsr0l	equ	0xFE9
 55104                           wreg	equ	0xFE8
 55105                           postinc1	equ	0xFE6
 55106                           postdec1	equ	0xFE5
 55107                           plusw1	equ	0xFE3
 55108                           fsr1h	equ	0xFE2
 55109                           fsr1l	equ	0xFE1
 55110                           indf2	equ	0xFDF
 55111                           postinc2	equ	0xFDE
 55112                           postdec2	equ	0xFDD
 55113                           plusw2	equ	0xFDB
 55114                           fsr2h	equ	0xFDA
 55115                           fsr2l	equ	0xFD9
 55116                           status	equ	0xFD8
 55117                           
 55118 ;; *************** function _SwTimersInterrupt *****************
 55119 ;; Defined at:
 55120 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55121 ;; Parameters:    Size  Location     Type
 55122 ;;		None
 55123 ;; Auto vars:     Size  Location     Type
 55124 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 55125 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 55126 ;;  i               1   48[BANK0 ] unsigned char 
 55127 ;; Return value:  Size  Location     Type
 55128 ;;                  4   32[BANK0 ] unsigned long 
 55129 ;; Registers used:
 55130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55131 ;; Tracked objects:
 55132 ;;		On entry : 0/0
 55133 ;;		On exit  : 0/0
 55134 ;;		Unchanged: 0/0
 55135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55137 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55139 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55140 ;;Total ram usage:       17 bytes
 55141 ;; Hardware stack levels used:    1
 55142 ;; Hardware stack levels required when called:    9
 55143 ;; This function calls:
 55144 ;;		_TMR_GetDeltaTime
 55145 ;; This function is called by:
 55146 ;;		_SwTimerReadValue
 55147 ;;		_SwTimerStart
 55148 ;;		_SwTimersCanSleep
 55149 ;; This function uses a non-reentrant model
 55150 ;;
 55151                           
 55152                           	psect	text295
 55153  0085B6                     __ptext295:
 55154                           	opt stack 0
 55155  0085B6                     _SwTimersInterrupt:
 55156                           	opt stack 18
 55157                           
 55158                           ;sw_timer.c: 289: uint8_t i;
 55159                           ;sw_timer.c: 290: uint32_t timeElapsed;
 55160                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 55161                           
 55162                           ; BSR set to: 0
 55163                           ;incstack = 0
 55164  0085B6  0100               	movlb	0	; () banked
 55165  0085B8  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 55166  0085BA  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 55167  0085BC  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 55168  0085BE  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 55169                           
 55170                           ; BSR set to: 0
 55171                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 55172  0085C0  ECAA  F035         	call	_TMR_GetDeltaTime	;wreg free
 55173  0085C4  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 55174  0085C8  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 55175  0085CC  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 55176  0085D0  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 55177                           
 55178                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 55179  0085D4  0E00               	movlw	0
 55180  0085D6  0100               	movlb	0	; () banked
 55181  0085D8  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 55182  0085DA  D061               	goto	l612
 55183  0085DC                     
 55184                           ; BSR set to: 0
 55185                           ;sw_timer.c: 298: {
 55186                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 55187                           
 55188                           ; BSR set to: 0
 55189  0085DC  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55190  0085DE  0D08               	mullw	8
 55191  0085E0  0E04               	movlw	4
 55192  0085E2  26F3               	addwf	prodl,f,c
 55193  0085E4  0E00               	movlw	0
 55194  0085E6  22F4               	addwfc	prodh,f,c
 55195  0085E8  0E00               	movlw	low _swTimers
 55196  0085EA  24F3               	addwf	prodl,w,c
 55197  0085EC  6ED9               	movwf	fsr2l,c
 55198  0085EE  0E03               	movlw	high _swTimers
 55199  0085F0  20F4               	addwfc	prodh,w,c
 55200  0085F2  6EDA               	movwf	fsr2h,c
 55201  0085F4  04DE               	decf	postinc2,w,c
 55202  0085F6  A4D8               	btfss	status,2,c
 55203  0085F8  D051               	goto	l617
 55204                           
 55205                           ; BSR set to: 0
 55206                           ;sw_timer.c: 302: {
 55207                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 55208  0085FA  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55209  0085FC  0D08               	mullw	8
 55210  0085FE  0E00               	movlw	low _swTimers
 55211  008600  24F3               	addwf	prodl,w,c
 55212  008602  6ED9               	movwf	fsr2l,c
 55213  008604  0E03               	movlw	high _swTimers
 55214  008606  20F4               	addwfc	prodh,w,c
 55215  008608  6EDA               	movwf	fsr2h,c
 55216  00860A  50DE               	movf	postinc2,w,c
 55217  00860C  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 55218  00860E  50DE               	movf	postinc2,w,c
 55219  008610  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 55220  008612  50DE               	movf	postinc2,w,c
 55221  008614  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 55222  008616  50DE               	movf	postinc2,w,c
 55223  008618  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 55224  00861A  A0D8               	btfss	status,0,c
 55225  00861C  D00D               	goto	l615
 55226                           
 55227                           ; BSR set to: 0
 55228                           ;sw_timer.c: 304: {
 55229                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 55230  00861E  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55231  008620  0D08               	mullw	8
 55232  008622  0E00               	movlw	low _swTimers
 55233  008624  24F3               	addwf	prodl,w,c
 55234  008626  6ED9               	movwf	fsr2l,c
 55235  008628  0E03               	movlw	high _swTimers
 55236  00862A  20F4               	addwfc	prodh,w,c
 55237  00862C  6EDA               	movwf	fsr2h,c
 55238  00862E  6ADE               	clrf	postinc2,c
 55239  008630  6ADE               	clrf	postinc2,c
 55240  008632  6ADE               	clrf	postinc2,c
 55241  008634  6ADD               	clrf	postdec2,c
 55242                           
 55243                           ;sw_timer.c: 306: }
 55244  008636  D032               	goto	l617
 55245  008638                     l615:
 55246                           
 55247                           ; BSR set to: 0
 55248                           ;sw_timer.c: 307: else
 55249                           ;sw_timer.c: 308: {
 55250                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 55251                           
 55252                           ; BSR set to: 0
 55253  008638  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55254  00863A  0D08               	mullw	8
 55255  00863C  0E00               	movlw	low _swTimers
 55256  00863E  24F3               	addwf	prodl,w,c
 55257  008640  6ED9               	movwf	fsr2l,c
 55258  008642  0E03               	movlw	high _swTimers
 55259  008644  20F4               	addwfc	prodh,w,c
 55260  008646  6EDA               	movwf	fsr2h,c
 55261  008648  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 55262  00864A  5EDE               	subwf	postinc2,f,c
 55263  00864C  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 55264  00864E  5ADE               	subwfb	postinc2,f,c
 55265  008650  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 55266  008652  5ADE               	subwfb	postinc2,f,c
 55267  008654  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 55268  008656  5ADE               	subwfb	postinc2,f,c
 55269                           
 55270                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 55271  008658  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55272  00865A  0D08               	mullw	8
 55273  00865C  0E00               	movlw	low _swTimers
 55274  00865E  24F3               	addwf	prodl,w,c
 55275  008660  6ED9               	movwf	fsr2l,c
 55276  008662  0E03               	movlw	high _swTimers
 55277  008664  20F4               	addwfc	prodh,w,c
 55278  008666  6EDA               	movwf	fsr2h,c
 55279  008668  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 55280  00866A  5CDE               	subwf	postinc2,w,c
 55281  00866C  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 55282  00866E  58DE               	subwfb	postinc2,w,c
 55283  008670  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 55284  008672  58DE               	subwfb	postinc2,w,c
 55285  008674  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 55286  008676  58DE               	subwfb	postinc2,w,c
 55287  008678  B0D8               	btfsc	status,0,c
 55288  00867A  D010               	goto	l617
 55289                           
 55290                           ; BSR set to: 0
 55291                           ;sw_timer.c: 313: {
 55292                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 55293  00867C  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 55294  00867E  0D08               	mullw	8
 55295  008680  0E00               	movlw	low _swTimers
 55296  008682  24F3               	addwf	prodl,w,c
 55297  008684  6ED9               	movwf	fsr2l,c
 55298  008686  0E03               	movlw	high _swTimers
 55299  008688  20F4               	addwfc	prodh,w,c
 55300  00868A  6EDA               	movwf	fsr2h,c
 55301  00868C  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 55302  008690  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 55303  008694  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 55304  008698  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 55305  00869C                     l617:
 55306                           
 55307                           ; BSR set to: 0
 55308                           
 55309                           ; BSR set to: 0
 55310                           
 55311                           ; BSR set to: 0
 55312                           
 55313                           ; BSR set to: 0
 55314  00869C  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 55315  00869E                     l612:
 55316                           
 55317                           ; BSR set to: 0
 55318                           
 55319                           ; BSR set to: 0
 55320  00869E  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 55321  0086A0  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 55322  0086A2  A0D8               	btfss	status,0,c
 55323  0086A4  D79B               	goto	l613
 55324                           
 55325                           ; BSR set to: 0
 55326                           ;sw_timer.c: 315: }
 55327                           ;sw_timer.c: 316: }
 55328                           ;sw_timer.c: 317: }
 55329                           ;sw_timer.c: 318: }
 55330                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 55331  0086A6  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 55332  0086AA  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 55333  0086AE  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 55334  0086B2  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 55335                           
 55336                           ; BSR set to: 0
 55337  0086B6  0012               	return		;funcret
 55338  0086B8                     __end_of_SwTimersInterrupt:
 55339                           	opt stack 0
 55340                           tosu	equ	0xFFF
 55341                           tosh	equ	0xFFE
 55342                           tosl	equ	0xFFD
 55343                           pclath	equ	0xFFA
 55344                           tblptru	equ	0xFF8
 55345                           tblptrh	equ	0xFF7
 55346                           tblptrl	equ	0xFF6
 55347                           tablat	equ	0xFF5
 55348                           prodh	equ	0xFF4
 55349                           prodl	equ	0xFF3
 55350                           intcon	equ	0xFF2
 55351                           intcon2	equ	0xFF1
 55352                           intcon3	equ	0xFF0
 55353                           indf0	equ	0xFEF
 55354                           postinc0	equ	0xFEE
 55355                           plusw0	equ	0xFEB
 55356                           fsr0h	equ	0xFEA
 55357                           fsr0l	equ	0xFE9
 55358                           wreg	equ	0xFE8
 55359                           postinc1	equ	0xFE6
 55360                           postdec1	equ	0xFE5
 55361                           plusw1	equ	0xFE3
 55362                           fsr1h	equ	0xFE2
 55363                           fsr1l	equ	0xFE1
 55364                           indf2	equ	0xFDF
 55365                           postinc2	equ	0xFDE
 55366                           postdec2	equ	0xFDD
 55367                           plusw2	equ	0xFDB
 55368                           fsr2h	equ	0xFDA
 55369                           fsr2l	equ	0xFD9
 55370                           status	equ	0xFD8
 55371                           
 55372 ;; *************** function _TMR_GetDeltaTime *****************
 55373 ;; Defined at:
 55374 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55375 ;; Parameters:    Size  Location     Type
 55376 ;;		None
 55377 ;; Auto vars:     Size  Location     Type
 55378 ;;		None
 55379 ;; Return value:  Size  Location     Type
 55380 ;;                  4    8[BANK0 ] unsigned long 
 55381 ;; Registers used:
 55382 ;;		wreg, status,2, status,0, cstack
 55383 ;; Tracked objects:
 55384 ;;		On entry : 0/0
 55385 ;;		On exit  : 0/0
 55386 ;;		Unchanged: 0/0
 55387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55390 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55391 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55392 ;;Total ram usage:       24 bytes
 55393 ;; Hardware stack levels used:    1
 55394 ;; Hardware stack levels required when called:    8
 55395 ;; This function calls:
 55396 ;;		_TMR1_ReadTimer
 55397 ;; This function is called by:
 55398 ;;		_SwTimersInterrupt
 55399 ;; This function uses a non-reentrant model
 55400 ;;
 55401                           
 55402                           	psect	text296
 55403  006B54                     __ptext296:
 55404                           	opt stack 0
 55405  006B54                     _TMR_GetDeltaTime:
 55406                           	opt stack 18
 55407                           
 55408                           ;sw_timer.c: 90: static uint32_t retVal;
 55409                           ;sw_timer.c: 91: static uint16_t tmrVal;
 55410                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 55411                           
 55412                           ; BSR set to: 0
 55413                           ;incstack = 0
 55414  006B54  EC5A  F05F         	call	_TMR1_ReadTimer	;wreg free
 55415  006B58  C060  F124         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 55416  006B5C  C061  F125         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 55417                           
 55418                           ;sw_timer.c: 95: if (timerOverflow == 1)
 55419  006B60  0447               	decf	_timerOverflow,w,c	;volatile
 55420  006B62  A4D8               	btfss	status,2,c
 55421  006B64  D071               	goto	l545
 55422                           
 55423                           ;sw_timer.c: 96: {
 55424                           ;sw_timer.c: 97: timerOverflow = 0;
 55425  006B66  0E00               	movlw	0
 55426  006B68  6E47               	movwf	_timerOverflow,c	;volatile
 55427                           
 55428                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 55429  006B6A  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 55430  006B6E  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 55431  006B72  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 55432  006B76  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 55433  006B7A  0100               	movlb	0	; () banked
 55434  006B7C  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 55435  006B7E  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55436  006B80  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55437  006B82  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55438  006B84  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 55439  006B86  0E00               	movlw	0
 55440  006B88  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55441  006B8A  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55442  006B8C  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55443  006B8E  5044               	movf	_reloadVal,w,c	;volatile
 55444  006B90  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 55445  006B92  5045               	movf	_reloadVal+1,w,c	;volatile
 55446  006B94  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 55447  006B96  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 55448  006B98  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 55449  006B9A  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55450  006B9C  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55451  006B9E  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 55452  006BA0  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 55453  006BA2  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55454  006BA4  0E00               	movlw	0
 55455  006BA6  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55456  006BA8  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 55457  006BAA  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 55458  006BAC  0101               	movlb	1	; () banked
 55459  006BAE  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 55460  006BB0  0100               	movlb	0	; () banked
 55461  006BB2  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 55462  006BB4  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 55463  006BB6  0101               	movlb	1	; () banked
 55464  006BB8  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 55465  006BBA  0100               	movlb	0	; () banked
 55466  006BBC  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 55467  006BBE  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 55468  006BC0  0E00               	movlw	0
 55469  006BC2  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 55470  006BC4  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 55471  006BC6  0E00               	movlw	0
 55472  006BC8  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 55473  006BCA  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 55474  006BCC  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 55475  006BCE  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 55476  006BD0  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 55477  006BD2  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 55478  006BD4  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 55479  006BD6  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 55480  006BD8  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 55481  006BDA  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 55482  006BDC  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 55483  006BDE  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 55484  006BE0  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 55485  006BE2  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 55486  006BE4  5040               	movf	_ticksAdded,w,c	;volatile
 55487  006BE6  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 55488  006BE8  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 55489  006BEA  5041               	movf	_ticksAdded+1,w,c	;volatile
 55490  006BEC  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 55491  006BEE  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 55492  006BF0  5042               	movf	_ticksAdded+2,w,c	;volatile
 55493  006BF2  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 55494  006BF4  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 55495  006BF6  5043               	movf	_ticksAdded+3,w,c	;volatile
 55496  006BF8  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 55497  006BFA  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 55498  006BFC  0E00               	movlw	0
 55499  006BFE  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 55500  006C00  0101               	movlb	1	; () banked
 55501  006C02  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 55502  006C04  0E00               	movlw	0
 55503  006C06  0100               	movlb	0	; () banked
 55504  006C08  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 55505  006C0A  0101               	movlb	1	; () banked
 55506  006C0C  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 55507  006C0E  0E01               	movlw	1
 55508  006C10  0100               	movlb	0	; () banked
 55509  006C12  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 55510  006C14  0101               	movlb	1	; () banked
 55511  006C16  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 55512  006C18  0E00               	movlw	0
 55513  006C1A  0100               	movlb	0	; () banked
 55514  006C1C  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 55515  006C1E  0101               	movlb	1	; () banked
 55516  006C20  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 55517                           
 55518                           ; BSR set to: 1
 55519                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 55520  006C22  C124  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 55521  006C26  C125  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 55522  006C2A  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 55523  006C2C  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 55524                           
 55525                           ; BSR set to: 1
 55526                           ;sw_timer.c: 100: ticksAdded = 0;
 55527  006C2E  0E00               	movlw	0
 55528  006C30  6E40               	movwf	_ticksAdded,c	;volatile
 55529  006C32  0E00               	movlw	0
 55530  006C34  6E41               	movwf	_ticksAdded+1,c	;volatile
 55531  006C36  0E00               	movlw	0
 55532  006C38  6E42               	movwf	_ticksAdded+2,c	;volatile
 55533  006C3A  0E00               	movlw	0
 55534  006C3C  6E43               	movwf	_ticksAdded+3,c	;volatile
 55535                           
 55536                           ; BSR set to: 1
 55537                           ;sw_timer.c: 101: reloadVal = 0;
 55538  006C3E  0E00               	movlw	0
 55539  006C40  6E45               	movwf	_reloadVal+1,c	;volatile
 55540  006C42  0E00               	movlw	0
 55541  006C44  6E44               	movwf	_reloadVal,c	;volatile
 55542                           
 55543                           ;sw_timer.c: 102: }
 55544  006C46  D049               	goto	l546
 55545  006C48                     l545:
 55546                           
 55547                           ;sw_timer.c: 103: else
 55548                           ;sw_timer.c: 104: {
 55549                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 55550                           
 55551                           ; BSR set to: 1
 55552  006C48  C03C  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 55553  006C4C  C03D  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 55554  006C50  C03E  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 55555  006C54  C03F  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 55556  006C58  0100               	movlb	0	; () banked
 55557  006C5A  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 55558  006C5C  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55559  006C5E  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55560  006C60  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55561  006C62  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 55562  006C64  0E00               	movlw	0
 55563  006C66  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 55564  006C68  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 55565  006C6A  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 55566  006C6C  C044  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 55567  006C70  C045  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 55568  006C74  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55569  006C76  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55570  006C78  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55571  006C7A  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55572  006C7C  0101               	movlb	1	; () banked
 55573  006C7E  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 55574  006C80  0100               	movlb	0	; () banked
 55575  006C82  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 55576  006C84  0101               	movlb	1	; () banked
 55577  006C86  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 55578  006C88  0100               	movlb	0	; () banked
 55579  006C8A  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 55580  006C8C  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 55581  006C8E  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 55582  006C90  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 55583  006C92  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 55584  006C94  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 55585  006C96  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 55586  006C98  0E00               	movlw	0
 55587  006C9A  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 55588  006C9C  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 55589  006C9E  0E00               	movlw	0
 55590  006CA0  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 55591  006CA2  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 55592  006CA4  5040               	movf	_ticksAdded,w,c	;volatile
 55593  006CA6  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 55594  006CA8  0101               	movlb	1	; () banked
 55595  006CAA  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 55596  006CAC  5041               	movf	_ticksAdded+1,w,c	;volatile
 55597  006CAE  0100               	movlb	0	; () banked
 55598  006CB0  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 55599  006CB2  0101               	movlb	1	; () banked
 55600  006CB4  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 55601  006CB6  5042               	movf	_ticksAdded+2,w,c	;volatile
 55602  006CB8  0100               	movlb	0	; () banked
 55603  006CBA  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 55604  006CBC  0101               	movlb	1	; () banked
 55605  006CBE  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 55606  006CC0  5043               	movf	_ticksAdded+3,w,c	;volatile
 55607  006CC2  0100               	movlb	0	; () banked
 55608  006CC4  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 55609  006CC6  0101               	movlb	1	; () banked
 55610  006CC8  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 55611                           
 55612                           ;sw_timer.c: 106: ticksAccounted += retVal;
 55613  006CCA  5110               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 55614  006CCC  263C               	addwf	_ticksAccounted,f,c	;volatile
 55615  006CCE  5111               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 55616  006CD0  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 55617  006CD2  5112               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 55618  006CD4  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 55619  006CD6  5113               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 55620  006CD8  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 55621  006CDA                     l546:
 55622                           
 55623                           ; BSR set to: 1
 55624                           ;sw_timer.c: 107: }
 55625                           ;sw_timer.c: 109: return retVal;
 55626                           
 55627                           ; BSR set to: 1
 55628  006CDA  C110  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 55629  006CDE  C111  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 55630  006CE2  C112  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 55631  006CE6  C113  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 55632  006CEA  0012               	return	
 55633  006CEC                     __end_of_TMR_GetDeltaTime:
 55634                           	opt stack 0
 55635                           tosu	equ	0xFFF
 55636                           tosh	equ	0xFFE
 55637                           tosl	equ	0xFFD
 55638                           pclath	equ	0xFFA
 55639                           tblptru	equ	0xFF8
 55640                           tblptrh	equ	0xFF7
 55641                           tblptrl	equ	0xFF6
 55642                           tablat	equ	0xFF5
 55643                           prodh	equ	0xFF4
 55644                           prodl	equ	0xFF3
 55645                           intcon	equ	0xFF2
 55646                           intcon2	equ	0xFF1
 55647                           intcon3	equ	0xFF0
 55648                           indf0	equ	0xFEF
 55649                           postinc0	equ	0xFEE
 55650                           plusw0	equ	0xFEB
 55651                           fsr0h	equ	0xFEA
 55652                           fsr0l	equ	0xFE9
 55653                           wreg	equ	0xFE8
 55654                           postinc1	equ	0xFE6
 55655                           postdec1	equ	0xFE5
 55656                           plusw1	equ	0xFE3
 55657                           fsr1h	equ	0xFE2
 55658                           fsr1l	equ	0xFE1
 55659                           indf2	equ	0xFDF
 55660                           postinc2	equ	0xFDE
 55661                           postdec2	equ	0xFDD
 55662                           plusw2	equ	0xFDB
 55663                           fsr2h	equ	0xFDA
 55664                           fsr2l	equ	0xFD9
 55665                           status	equ	0xFD8
 55666                           
 55667 ;; *************** function _TMR1_ReadTimer *****************
 55668 ;; Defined at:
 55669 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 55670 ;; Parameters:    Size  Location     Type
 55671 ;;		None
 55672 ;; Auto vars:     Size  Location     Type
 55673 ;;  readVal         2    4[BANK0 ] unsigned int 
 55674 ;;  readValLow      1    7[BANK0 ] unsigned char 
 55675 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 55676 ;; Return value:  Size  Location     Type
 55677 ;;                  2    0[BANK0 ] unsigned int 
 55678 ;; Registers used:
 55679 ;;		wreg, status,2
 55680 ;; Tracked objects:
 55681 ;;		On entry : 0/0
 55682 ;;		On exit  : 0/0
 55683 ;;		Unchanged: 0/0
 55684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55686 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55689 ;;Total ram usage:        8 bytes
 55690 ;; Hardware stack levels used:    1
 55691 ;; Hardware stack levels required when called:    7
 55692 ;; This function calls:
 55693 ;;		Nothing
 55694 ;; This function is called by:
 55695 ;;		_TMR_GetDeltaTime
 55696 ;;		_TMR_SwapTimer
 55697 ;; This function uses a non-reentrant model
 55698 ;;
 55699                           
 55700                           	psect	text297
 55701  00BEB4                     __ptext297:
 55702                           	opt stack 0
 55703  00BEB4                     _TMR1_ReadTimer:
 55704                           	opt stack 18
 55705                           
 55706                           ;tmr1.c: 107: uint16_t readVal;
 55707                           ;tmr1.c: 108: uint8_t readValHigh;
 55708                           ;tmr1.c: 109: uint8_t readValLow;
 55709                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 55710                           
 55711                           ; BSR set to: 1
 55712                           ;incstack = 0
 55713  00BEB4  82CD               	bsf	4045,1,c	;volatile
 55714                           
 55715                           ;tmr1.c: 113: readValLow = TMR1L;
 55716  00BEB6  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 55717                           
 55718                           ;tmr1.c: 114: readValHigh = TMR1H;
 55719  00BEBA  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 55720                           
 55721                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 55722  00BEBE  0100               	movlb	0	; () banked
 55723  00BEC0  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 55724  00BEC2  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 55725  00BEC4  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 55726  00BEC6  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 55727  00BEC8  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 55728                           
 55729                           ; BSR set to: 0
 55730                           ;tmr1.c: 118: return readVal;
 55731  00BECC  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 55732  00BED0  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 55733  00BED4  0012               	return	
 55734  00BED6                     __end_of_TMR1_ReadTimer:
 55735                           	opt stack 0
 55736                           tosu	equ	0xFFF
 55737                           tosh	equ	0xFFE
 55738                           tosl	equ	0xFFD
 55739                           pclath	equ	0xFFA
 55740                           tblptru	equ	0xFF8
 55741                           tblptrh	equ	0xFF7
 55742                           tblptrl	equ	0xFF6
 55743                           tablat	equ	0xFF5
 55744                           prodh	equ	0xFF4
 55745                           prodl	equ	0xFF3
 55746                           intcon	equ	0xFF2
 55747                           intcon2	equ	0xFF1
 55748                           intcon3	equ	0xFF0
 55749                           indf0	equ	0xFEF
 55750                           postinc0	equ	0xFEE
 55751                           plusw0	equ	0xFEB
 55752                           fsr0h	equ	0xFEA
 55753                           fsr0l	equ	0xFE9
 55754                           wreg	equ	0xFE8
 55755                           postinc1	equ	0xFE6
 55756                           postdec1	equ	0xFE5
 55757                           plusw1	equ	0xFE3
 55758                           fsr1h	equ	0xFE2
 55759                           fsr1l	equ	0xFE1
 55760                           indf2	equ	0xFDF
 55761                           postinc2	equ	0xFDE
 55762                           postdec2	equ	0xFDD
 55763                           plusw2	equ	0xFDB
 55764                           fsr2h	equ	0xFDA
 55765                           fsr2l	equ	0xFD9
 55766                           status	equ	0xFD8
 55767                           
 55768 ;; *************** function _SwTimerSetTimeout *****************
 55769 ;; Defined at:
 55770 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 55771 ;; Parameters:    Size  Location     Type
 55772 ;;  timerId         1    wreg     unsigned char 
 55773 ;;  timeout         4   13[BANK0 ] unsigned long 
 55774 ;; Auto vars:     Size  Location     Type
 55775 ;;  timerId         1   21[BANK0 ] unsigned char 
 55776 ;; Return value:  Size  Location     Type
 55777 ;;                  1    wreg      void 
 55778 ;; Registers used:
 55779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55780 ;; Tracked objects:
 55781 ;;		On entry : 0/0
 55782 ;;		On exit  : 0/0
 55783 ;;		Unchanged: 0/0
 55784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55788 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55789 ;;Total ram usage:        9 bytes
 55790 ;; Hardware stack levels used:    1
 55791 ;; Hardware stack levels required when called:    7
 55792 ;; This function calls:
 55793 ;;		Nothing
 55794 ;; This function is called by:
 55795 ;;		_RADIO_Transmit
 55796 ;;		_RADIO_ReceiveStart
 55797 ;;		_LORAWAN_TxDone
 55798 ;;		_LORAWAN_RxTimeout
 55799 ;;		_StartReTxTimer
 55800 ;;		_DutyCycleCallback
 55801 ;;		_LORAWAN_Join
 55802 ;;		_LORAWAN_LinkCheckConfigure
 55803 ;;		_LORAWAN_LinkCheckCallback
 55804 ;;		_UpdateRetransmissionAckTimeoutState
 55805 ;;		_UpdateJoinSuccessState
 55806 ;; This function uses a non-reentrant model
 55807 ;;
 55808                           
 55809                           	psect	text298
 55810  00B5AA                     __ptext298:
 55811                           	opt stack 0
 55812  00B5AA                     _SwTimerSetTimeout:
 55813                           	opt stack 21
 55814                           
 55815                           ; BSR set to: 0
 55816                           ;incstack = 0
 55817                           ;SwTimerSetTimeout@timerId stored from wreg
 55818  00B5AA  0100               	movlb	0	; () banked
 55819  00B5AC  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 55820                           
 55821                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 55822  00B5AE  9EF2               	bcf	intcon,7,c	;volatile
 55823                           
 55824                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 55825  00B5B0  0EE0               	movlw	224
 55826  00B5B2  0100               	movlb	0	; () banked
 55827  00B5B4  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 55828  00B5B6  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 55829  00B5B8  0EFF               	movlw	255
 55830  00B5BA  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 55831  00B5BC  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 55832  00B5BE  0EFF               	movlw	255
 55833  00B5C0  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 55834  00B5C2  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 55835  00B5C4  0EFF               	movlw	255
 55836  00B5C6  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 55837  00B5C8  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 55838  00B5CA  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 55839  00B5CC  0D08               	mullw	8
 55840  00B5CE  0E00               	movlw	low _swTimers
 55841  00B5D0  24F3               	addwf	prodl,w,c
 55842  00B5D2  6ED9               	movwf	fsr2l,c
 55843  00B5D4  0E03               	movlw	high _swTimers
 55844  00B5D6  20F4               	addwfc	prodh,w,c
 55845  00B5D8  6EDA               	movwf	fsr2h,c
 55846  00B5DA  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 55847  00B5DE  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 55848  00B5E2  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 55849  00B5E6  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 55850                           
 55851                           ; BSR set to: 0
 55852                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 55853  00B5EA  8EF2               	bsf	intcon,7,c	;volatile
 55854                           
 55855                           ; BSR set to: 0
 55856  00B5EC  0012               	return		;funcret
 55857  00B5EE                     __end_of_SwTimerSetTimeout:
 55858                           	opt stack 0
 55859                           tosu	equ	0xFFF
 55860                           tosh	equ	0xFFE
 55861                           tosl	equ	0xFFD
 55862                           pclath	equ	0xFFA
 55863                           tblptru	equ	0xFF8
 55864                           tblptrh	equ	0xFF7
 55865                           tblptrl	equ	0xFF6
 55866                           tablat	equ	0xFF5
 55867                           prodh	equ	0xFF4
 55868                           prodl	equ	0xFF3
 55869                           intcon	equ	0xFF2
 55870                           intcon2	equ	0xFF1
 55871                           intcon3	equ	0xFF0
 55872                           indf0	equ	0xFEF
 55873                           postinc0	equ	0xFEE
 55874                           plusw0	equ	0xFEB
 55875                           fsr0h	equ	0xFEA
 55876                           fsr0l	equ	0xFE9
 55877                           wreg	equ	0xFE8
 55878                           postinc1	equ	0xFE6
 55879                           postdec1	equ	0xFE5
 55880                           plusw1	equ	0xFE3
 55881                           fsr1h	equ	0xFE2
 55882                           fsr1l	equ	0xFE1
 55883                           indf2	equ	0xFDF
 55884                           postinc2	equ	0xFDE
 55885                           postdec2	equ	0xFDD
 55886                           plusw2	equ	0xFDB
 55887                           fsr2h	equ	0xFDA
 55888                           fsr2l	equ	0xFD9
 55889                           status	equ	0xFD8
 55890                           
 55891 ;; *************** function _InitDefault868Channels *****************
 55892 ;; Defined at:
 55893 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 55894 ;; Parameters:    Size  Location     Type
 55895 ;;		None
 55896 ;; Auto vars:     Size  Location     Type
 55897 ;;  i               1   11[BANK0 ] unsigned char 
 55898 ;; Return value:  Size  Location     Type
 55899 ;;                  1    wreg      void 
 55900 ;; Registers used:
 55901 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 55902 ;; Tracked objects:
 55903 ;;		On entry : 0/0
 55904 ;;		On exit  : 0/0
 55905 ;;		Unchanged: 0/0
 55906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55911 ;;Total ram usage:        1 bytes
 55912 ;; Hardware stack levels used:    1
 55913 ;; Hardware stack levels required when called:    8
 55914 ;; This function calls:
 55915 ;;		_memcpy
 55916 ;;		_memset
 55917 ;; This function is called by:
 55918 ;;		_LORAWAN_Reset
 55919 ;; This function uses a non-reentrant model
 55920 ;;
 55921                           
 55922                           	psect	text299
 55923  009F3C                     __ptext299:
 55924                           	opt stack 0
 55925  009F3C                     _InitDefault868Channels:
 55926                           	opt stack 20
 55927                           
 55928                           ;lorawan_eu.c: 981: uint8_t i;
 55929                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 55930                           
 55931                           ; BSR set to: 0
 55932                           ;incstack = 0
 55933  009F3C  0E00               	movlw	low _Channels
 55934  009F3E  0100               	movlb	0	; () banked
 55935  009F40  6F60               	movwf	memset@p1& (0+255),b
 55936  009F42  0E04               	movlw	high _Channels
 55937  009F44  6F61               	movwf	(memset@p1+1)& (0+255),b
 55938  009F46  0E00               	movlw	0
 55939  009F48  6F63               	movwf	(memset@c+1)& (0+255),b
 55940  009F4A  0E00               	movlw	0
 55941  009F4C  6F62               	movwf	memset@c& (0+255),b
 55942  009F4E  0E00               	movlw	0
 55943  009F50  6F65               	movwf	(memset@n+1)& (0+255),b
 55944  009F52  0EE0               	movlw	224
 55945  009F54  6F64               	movwf	memset@n& (0+255),b
 55946  009F56  EC1F  F05D         	call	_memset	;wreg free
 55947                           
 55948                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 55949  009F5A  0E00               	movlw	low _Channels
 55950  009F5C  0100               	movlb	0	; () banked
 55951  009F5E  6F60               	movwf	memcpy@d1& (0+255),b
 55952  009F60  0E04               	movlw	high _Channels
 55953  009F62  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 55954  009F64  0E40               	movlw	low _DefaultChannels868
 55955  009F66  6F62               	movwf	memcpy@s1& (0+255),b
 55956  009F68  0EFF               	movlw	high _DefaultChannels868
 55957  009F6A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 55958  009F6C  0E00               	movlw	0
 55959  009F6E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 55960  009F70  0E2A               	movlw	42
 55961  009F72  6F64               	movwf	memcpy@n& (0+255),b
 55962  009F74  ECA9  F055         	call	_memcpy	;wreg free
 55963                           
 55964                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 55965  009F78  0E03               	movlw	3
 55966  009F7A  0100               	movlb	0	; () banked
 55967  009F7C  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 55968  009F7E                     l20636:
 55969                           
 55970                           ; BSR set to: 0
 55971  009F7E  0E0F               	movlw	15
 55972  009F80  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 55973  009F82  D001               	goto	l1530
 55974  009F84  0012               	return	
 55975  009F86                     l1530:
 55976                           
 55977                           ; BSR set to: 0
 55978                           ;lorawan_eu.c: 986: {
 55979                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 55980                           
 55981                           ; BSR set to: 0
 55982  009F86  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 55983  009F88  0D0E               	mullw	14
 55984  009F8A  0E06               	movlw	6
 55985  009F8C  26F3               	addwf	prodl,f,c
 55986  009F8E  0E00               	movlw	0
 55987  009F90  22F4               	addwfc	prodh,f,c
 55988  009F92  0E00               	movlw	low _Channels
 55989  009F94  24F3               	addwf	prodl,w,c
 55990  009F96  6ED9               	movwf	fsr2l,c
 55991  009F98  0E04               	movlw	high _Channels
 55992  009F9A  20F4               	addwfc	prodh,w,c
 55993  009F9C  6EDA               	movwf	fsr2h,c
 55994  009F9E  0EFF               	movlw	255
 55995  009FA0  6EDE               	movwf	postinc2,c
 55996  009FA2  0EFF               	movlw	255
 55997  009FA4  6EDD               	movwf	postdec2,c
 55998                           
 55999                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 56000  009FA6  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 56001  009FA8  0D0E               	mullw	14
 56002  009FAA  0E05               	movlw	5
 56003  009FAC  26F3               	addwf	prodl,f,c
 56004  009FAE  0E00               	movlw	0
 56005  009FB0  22F4               	addwfc	prodh,f,c
 56006  009FB2  0E00               	movlw	low _Channels
 56007  009FB4  24F3               	addwf	prodl,w,c
 56008  009FB6  6ED9               	movwf	fsr2l,c
 56009  009FB8  0E04               	movlw	high _Channels
 56010  009FBA  20F4               	addwfc	prodh,w,c
 56011  009FBC  6EDA               	movwf	fsr2h,c
 56012  009FBE  0EFF               	movlw	255
 56013  009FC0  6EDF               	movwf	indf2,c
 56014                           
 56015                           ; BSR set to: 0
 56016  009FC2  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 56017  009FC4  D7DC               	goto	l20636
 56018  009FC6                     __end_of_InitDefault868Channels:
 56019                           	opt stack 0
 56020                           tosu	equ	0xFFF
 56021                           tosh	equ	0xFFE
 56022                           tosl	equ	0xFFD
 56023                           pclath	equ	0xFFA
 56024                           tblptru	equ	0xFF8
 56025                           tblptrh	equ	0xFF7
 56026                           tblptrl	equ	0xFF6
 56027                           tablat	equ	0xFF5
 56028                           prodh	equ	0xFF4
 56029                           prodl	equ	0xFF3
 56030                           intcon	equ	0xFF2
 56031                           intcon2	equ	0xFF1
 56032                           intcon3	equ	0xFF0
 56033                           indf0	equ	0xFEF
 56034                           postinc0	equ	0xFEE
 56035                           plusw0	equ	0xFEB
 56036                           fsr0h	equ	0xFEA
 56037                           fsr0l	equ	0xFE9
 56038                           wreg	equ	0xFE8
 56039                           postinc1	equ	0xFE6
 56040                           postdec1	equ	0xFE5
 56041                           plusw1	equ	0xFE3
 56042                           fsr1h	equ	0xFE2
 56043                           fsr1l	equ	0xFE1
 56044                           indf2	equ	0xFDF
 56045                           postinc2	equ	0xFDE
 56046                           postdec2	equ	0xFDD
 56047                           plusw2	equ	0xFDB
 56048                           fsr2h	equ	0xFDA
 56049                           fsr2l	equ	0xFD9
 56050                           status	equ	0xFD8
 56051                           
 56052 ;; *************** function _InitDefault433Channels *****************
 56053 ;; Defined at:
 56054 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 56055 ;; Parameters:    Size  Location     Type
 56056 ;;		None
 56057 ;; Auto vars:     Size  Location     Type
 56058 ;;  i               1   11[BANK0 ] unsigned char 
 56059 ;; Return value:  Size  Location     Type
 56060 ;;                  1    wreg      void 
 56061 ;; Registers used:
 56062 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 56063 ;; Tracked objects:
 56064 ;;		On entry : 0/0
 56065 ;;		On exit  : 0/0
 56066 ;;		Unchanged: 0/0
 56067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56072 ;;Total ram usage:        1 bytes
 56073 ;; Hardware stack levels used:    1
 56074 ;; Hardware stack levels required when called:    8
 56075 ;; This function calls:
 56076 ;;		_memcpy
 56077 ;;		_memset
 56078 ;; This function is called by:
 56079 ;;		_LORAWAN_Reset
 56080 ;; This function uses a non-reentrant model
 56081 ;;
 56082                           
 56083                           	psect	text300
 56084  009FC6                     __ptext300:
 56085                           	opt stack 0
 56086  009FC6                     _InitDefault433Channels:
 56087                           	opt stack 20
 56088                           
 56089                           ;lorawan_eu.c: 996: uint8_t i;
 56090                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 56091                           
 56092                           ; BSR set to: 0
 56093                           ;incstack = 0
 56094  009FC6  0E00               	movlw	low _Channels
 56095  009FC8  0100               	movlb	0	; () banked
 56096  009FCA  6F60               	movwf	memset@p1& (0+255),b
 56097  009FCC  0E04               	movlw	high _Channels
 56098  009FCE  6F61               	movwf	(memset@p1+1)& (0+255),b
 56099  009FD0  0E00               	movlw	0
 56100  009FD2  6F63               	movwf	(memset@c+1)& (0+255),b
 56101  009FD4  0E00               	movlw	0
 56102  009FD6  6F62               	movwf	memset@c& (0+255),b
 56103  009FD8  0E00               	movlw	0
 56104  009FDA  6F65               	movwf	(memset@n+1)& (0+255),b
 56105  009FDC  0EE0               	movlw	224
 56106  009FDE  6F64               	movwf	memset@n& (0+255),b
 56107  009FE0  EC1F  F05D         	call	_memset	;wreg free
 56108                           
 56109                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 56110  009FE4  0E00               	movlw	low _Channels
 56111  009FE6  0100               	movlb	0	; () banked
 56112  009FE8  6F60               	movwf	memcpy@d1& (0+255),b
 56113  009FEA  0E04               	movlw	high _Channels
 56114  009FEC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 56115  009FEE  0E16               	movlw	low _DefaultChannels433
 56116  009FF0  6F62               	movwf	memcpy@s1& (0+255),b
 56117  009FF2  0EFF               	movlw	high _DefaultChannels433
 56118  009FF4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 56119  009FF6  0E00               	movlw	0
 56120  009FF8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 56121  009FFA  0E2A               	movlw	42
 56122  009FFC  6F64               	movwf	memcpy@n& (0+255),b
 56123  009FFE  ECA9  F055         	call	_memcpy	;wreg free
 56124                           
 56125                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 56126  00A002  0E03               	movlw	3
 56127  00A004  0100               	movlb	0	; () banked
 56128  00A006  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 56129  00A008                     l20652:
 56130                           
 56131                           ; BSR set to: 0
 56132  00A008  0E0F               	movlw	15
 56133  00A00A  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 56134  00A00C  D001               	goto	l1535
 56135  00A00E  0012               	return	
 56136  00A010                     l1535:
 56137                           
 56138                           ; BSR set to: 0
 56139                           ;lorawan_eu.c: 1001: {
 56140                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 56141                           
 56142                           ; BSR set to: 0
 56143  00A010  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 56144  00A012  0D0E               	mullw	14
 56145  00A014  0E06               	movlw	6
 56146  00A016  26F3               	addwf	prodl,f,c
 56147  00A018  0E00               	movlw	0
 56148  00A01A  22F4               	addwfc	prodh,f,c
 56149  00A01C  0E00               	movlw	low _Channels
 56150  00A01E  24F3               	addwf	prodl,w,c
 56151  00A020  6ED9               	movwf	fsr2l,c
 56152  00A022  0E04               	movlw	high _Channels
 56153  00A024  20F4               	addwfc	prodh,w,c
 56154  00A026  6EDA               	movwf	fsr2h,c
 56155  00A028  0EFF               	movlw	255
 56156  00A02A  6EDE               	movwf	postinc2,c
 56157  00A02C  0EFF               	movlw	255
 56158  00A02E  6EDD               	movwf	postdec2,c
 56159                           
 56160                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 56161  00A030  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 56162  00A032  0D0E               	mullw	14
 56163  00A034  0E05               	movlw	5
 56164  00A036  26F3               	addwf	prodl,f,c
 56165  00A038  0E00               	movlw	0
 56166  00A03A  22F4               	addwfc	prodh,f,c
 56167  00A03C  0E00               	movlw	low _Channels
 56168  00A03E  24F3               	addwf	prodl,w,c
 56169  00A040  6ED9               	movwf	fsr2l,c
 56170  00A042  0E04               	movlw	high _Channels
 56171  00A044  20F4               	addwfc	prodh,w,c
 56172  00A046  6EDA               	movwf	fsr2h,c
 56173  00A048  0EFF               	movlw	255
 56174  00A04A  6EDF               	movwf	indf2,c
 56175                           
 56176                           ; BSR set to: 0
 56177  00A04C  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 56178  00A04E  D7DC               	goto	l20652
 56179  00A050                     __end_of_InitDefault433Channels:
 56180                           	opt stack 0
 56181                           tosu	equ	0xFFF
 56182                           tosh	equ	0xFFE
 56183                           tosl	equ	0xFFD
 56184                           pclath	equ	0xFFA
 56185                           tblptru	equ	0xFF8
 56186                           tblptrh	equ	0xFF7
 56187                           tblptrl	equ	0xFF6
 56188                           tablat	equ	0xFF5
 56189                           prodh	equ	0xFF4
 56190                           prodl	equ	0xFF3
 56191                           intcon	equ	0xFF2
 56192                           intcon2	equ	0xFF1
 56193                           intcon3	equ	0xFF0
 56194                           indf0	equ	0xFEF
 56195                           postinc0	equ	0xFEE
 56196                           plusw0	equ	0xFEB
 56197                           fsr0h	equ	0xFEA
 56198                           fsr0l	equ	0xFE9
 56199                           wreg	equ	0xFE8
 56200                           postinc1	equ	0xFE6
 56201                           postdec1	equ	0xFE5
 56202                           plusw1	equ	0xFE3
 56203                           fsr1h	equ	0xFE2
 56204                           fsr1l	equ	0xFE1
 56205                           indf2	equ	0xFDF
 56206                           postinc2	equ	0xFDE
 56207                           postdec2	equ	0xFDD
 56208                           plusw2	equ	0xFDB
 56209                           fsr2h	equ	0xFDA
 56210                           fsr2l	equ	0xFD9
 56211                           status	equ	0xFD8
 56212                           
 56213 ;; *************** function _memset *****************
 56214 ;; Defined at:
 56215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 56216 ;; Parameters:    Size  Location     Type
 56217 ;;  p1              2    0[BANK0 ] PTR void 
 56218 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 56219 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 56220 ;;  c               2    2[BANK0 ] int 
 56221 ;;  n               2    4[BANK0 ] unsigned int 
 56222 ;; Auto vars:     Size  Location     Type
 56223 ;;  p               2    6[BANK0 ] PTR unsigned char 
 56224 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 56225 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 56226 ;; Return value:  Size  Location     Type
 56227 ;;                  2    0[BANK0 ] PTR void 
 56228 ;; Registers used:
 56229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56230 ;; Tracked objects:
 56231 ;;		On entry : 0/0
 56232 ;;		On exit  : 0/0
 56233 ;;		Unchanged: 0/0
 56234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56235 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56238 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56239 ;;Total ram usage:        8 bytes
 56240 ;; Hardware stack levels used:    1
 56241 ;; Hardware stack levels required when called:    7
 56242 ;; This function calls:
 56243 ;;		Nothing
 56244 ;; This function is called by:
 56245 ;;		_AESCmac
 56246 ;;		_GenerateSubkey
 56247 ;;		_LORAWAN_Reset
 56248 ;;		_InitDefault868Channels
 56249 ;;		_InitDefault433Channels
 56250 ;;		_AssemblePacket
 56251 ;;		_PrepareJoinRequestFrame
 56252 ;;		_PrepareSessionKeys
 56253 ;;		_AssembleEncryptionBlock
 56254 ;; This function uses a non-reentrant model
 56255 ;;
 56256                           
 56257                           	psect	text301
 56258  00BA3E                     __ptext301:
 56259                           	opt stack 0
 56260  00BA3E                     _memset:
 56261                           	opt stack 21
 56262                           
 56263                           ; BSR set to: 0
 56264                           ;incstack = 0
 56265  00BA3E  C060  F066         	movff	memset@p1,memset@p
 56266  00BA42  C061  F067         	movff	memset@p1+1,memset@p+1
 56267  00BA46  D009               	goto	l4018
 56268  00BA48                     l17544:
 56269  00BA48  C066  FFD9         	movff	memset@p,fsr2l
 56270  00BA4C  C067  FFDA         	movff	memset@p+1,fsr2h
 56271  00BA50  C062  FFDF         	movff	memset@c,indf2
 56272  00BA54  0100               	movlb	0	; () banked
 56273  00BA56  4B66               	infsnz	memset@p& (0+255),f,b
 56274  00BA58  2B67               	incf	(memset@p+1)& (0+255),f,b
 56275  00BA5A                     l4018:
 56276                           
 56277                           ; BSR set to: 0
 56278  00BA5A  0100               	movlb	0	; () banked
 56279  00BA5C  0764               	decf	memset@n& (0+255),f,b
 56280  00BA5E  A0D8               	btfss	status,0,c
 56281  00BA60  0765               	decf	(memset@n+1)& (0+255),f,b
 56282  00BA62  2964               	incf	memset@n& (0+255),w,b
 56283  00BA64  E1F1               	bnz	l17544
 56284  00BA66  2965               	incf	(memset@n+1)& (0+255),w,b
 56285  00BA68  B4D8               	btfsc	status,2,c
 56286  00BA6A  0012               	return	
 56287  00BA6C  D7ED               	goto	l4019
 56288  00BA6E                     __end_of_memset:
 56289                           	opt stack 0
 56290                           tosu	equ	0xFFF
 56291                           tosh	equ	0xFFE
 56292                           tosl	equ	0xFFD
 56293                           pclath	equ	0xFFA
 56294                           tblptru	equ	0xFF8
 56295                           tblptrh	equ	0xFF7
 56296                           tblptrl	equ	0xFF6
 56297                           tablat	equ	0xFF5
 56298                           prodh	equ	0xFF4
 56299                           prodl	equ	0xFF3
 56300                           intcon	equ	0xFF2
 56301                           intcon2	equ	0xFF1
 56302                           intcon3	equ	0xFF0
 56303                           indf0	equ	0xFEF
 56304                           postinc0	equ	0xFEE
 56305                           plusw0	equ	0xFEB
 56306                           fsr0h	equ	0xFEA
 56307                           fsr0l	equ	0xFE9
 56308                           wreg	equ	0xFE8
 56309                           postinc1	equ	0xFE6
 56310                           postdec1	equ	0xFE5
 56311                           plusw1	equ	0xFE3
 56312                           fsr1h	equ	0xFE2
 56313                           fsr1l	equ	0xFE1
 56314                           indf2	equ	0xFDF
 56315                           postinc2	equ	0xFDE
 56316                           postdec2	equ	0xFDD
 56317                           plusw2	equ	0xFDB
 56318                           fsr2h	equ	0xFDA
 56319                           fsr2l	equ	0xFD9
 56320                           status	equ	0xFD8
 56321                           
 56322 ;; *************** function _memcpy *****************
 56323 ;; Defined at:
 56324 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 56325 ;; Parameters:    Size  Location     Type
 56326 ;;  d1              2    0[BANK0 ] PTR void 
 56327 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 56328 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 56329 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 56330 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 56331 ;;  s1              2    2[BANK0 ] PTR const void 
 56332 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), sp__ADC_GetConversion.cfList(16), data(8), 
 56333 ;;		 -> appSessionKey(16), nwkSessionKey(16), applicationKey(16), deviceEUI(8), 
 56334 ;;		 -> applicationEUI(8), sp__ADC_GetConversion(2), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcc
      +eptBuffer(2), 
 56335 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 56336 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 56337 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 56338 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 56339 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 56340 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 56341 ;;		 -> AESCmac@y(16), NULL(0), 
 56342 ;;  n               2    4[BANK0 ] unsigned int 
 56343 ;; Auto vars:     Size  Location     Type
 56344 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 56345 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), sp__ADC_GetConversion.cfList(16), data(8), 
 56346 ;;		 -> appSessionKey(16), nwkSessionKey(16), applicationKey(16), deviceEUI(8), 
 56347 ;;		 -> applicationEUI(8), sp__ADC_GetConversion(2), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcc
      +eptBuffer(2), 
 56348 ;;		 -> PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), 
 56349 ;;		 -> loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessionKey(16), loRa.activati
      +onParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), 
 56350 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), loRa.activationParameters.m
      +castApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
 56351 ;;		 -> loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activation
      +Parameters(105), 
 56352 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 56353 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 56354 ;;		 -> AESCmac@y(16), NULL(0), 
 56355 ;;  d               2    7[BANK0 ] PTR unsigned char 
 56356 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 56357 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 56358 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 56359 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 56360 ;;  tmp             1    6[BANK0 ] unsigned char 
 56361 ;; Return value:  Size  Location     Type
 56362 ;;                  2    0[BANK0 ] PTR void 
 56363 ;; Registers used:
 56364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56365 ;; Tracked objects:
 56366 ;;		On entry : 0/0
 56367 ;;		On exit  : 0/0
 56368 ;;		Unchanged: 0/0
 56369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56370 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56371 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56373 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56374 ;;Total ram usage:       11 bytes
 56375 ;; Hardware stack levels used:    1
 56376 ;; Hardware stack levels required when called:    7
 56377 ;; This function calls:
 56378 ;;		Nothing
 56379 ;; This function is called by:
 56380 ;;		_AESCmac
 56381 ;;		_RADIO_SetFSKSyncWord
 56382 ;;		_UpdateCfList
 56383 ;;		_InitDefault868Channels
 56384 ;;		_InitDefault433Channels
 56385 ;;		_AESEncodeLoRa
 56386 ;;		_LORAWAN_SetDeviceEui
 56387 ;;		_LORAWAN_SetApplicationEui
 56388 ;;		_LORAWAN_SetNetworkSessionKey
 56389 ;;		_LORAWAN_SetApplicationSessionKey
 56390 ;;		_LORAWAN_SetApplicationKey
 56391 ;;		_LORAWAN_RxDone
 56392 ;;		_AssemblePacket
 56393 ;;		_PrepareJoinRequestFrame
 56394 ;;		_PrepareSessionKeys
 56395 ;;		_AssembleEncryptionBlock
 56396 ;;		_ExtractMic
 56397 ;;		_ComputeMic
 56398 ;;		_RADIO_GetData
 56399 ;;		_RADIO_GetFSKSyncWord
 56400 ;;		_LORAWAN_SetMcastNetworkSessionKey
 56401 ;;		_LORAWAN_SetMcastApplicationSessionKey
 56402 ;;		_LORAWAN_GetMcastApplicationSessionKey
 56403 ;;		_LORAWAN_GetMcastNetworkSessionKey
 56404 ;;		_LORAWAN_GetDeviceEui
 56405 ;;		_LORAWAN_GetApplicationEui
 56406 ;;		_LORAWAN_GetNetworkSessionKey
 56407 ;;		_LORAWAN_GetApplicationSessionKey
 56408 ;;		_LORAWAN_GetApplicationKey
 56409 ;; This function uses a non-reentrant model
 56410 ;;
 56411                           
 56412                           	psect	text302
 56413  00AB52                     __ptext302:
 56414                           	opt stack 0
 56415  00AB52                     _memcpy:
 56416                           	opt stack 22
 56417                           
 56418                           ; BSR set to: 0
 56419                           ;incstack = 0
 56420  00AB52  C062  F069         	movff	memcpy@s1,memcpy@s
 56421  00AB56  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 56422  00AB5A  C060  F067         	movff	memcpy@d1,memcpy@d
 56423  00AB5E  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 56424  00AB62  D01D               	goto	l4012
 56425  00AB64                     l17322:
 56426  00AB64  C069  FFF6         	movff	memcpy@s,tblptrl
 56427  00AB68  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 56428  00AB6C  0E00               	movlw	low (__mediumconst shr (0+16))
 56429  00AB6E  6EF8               	movwf	tblptru,c
 56430  00AB70  0E0F               	movlw	(high __ramtop+-1)
 56431  00AB72  64F7               	cpfsgt	tblptrh,c
 56432  00AB74  D003               	bra	u18907
 56433  00AB76  0008               	tblrd		*
 56434  00AB78  50F5               	movf	tablat,w,c
 56435  00AB7A  D005               	bra	u18900
 56436  00AB7C                     u18907:
 56437  00AB7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 56438  00AB80  CFF7 FFEA          	movff	tblptrh,fsr0h
 56439  00AB84  50EF               	movf	indf0,w,c
 56440  00AB86                     u18900:
 56441  00AB86  0100               	movlb	0	; () banked
 56442  00AB88  6F66               	movwf	memcpy@tmp& (0+255),b
 56443                           
 56444                           ; BSR set to: 0
 56445  00AB8A  4B69               	infsnz	memcpy@s& (0+255),f,b
 56446  00AB8C  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 56447                           
 56448                           ; BSR set to: 0
 56449  00AB8E  C067  FFD9         	movff	memcpy@d,fsr2l
 56450  00AB92  C068  FFDA         	movff	memcpy@d+1,fsr2h
 56451  00AB96  C066  FFDF         	movff	memcpy@tmp,indf2
 56452                           
 56453                           ; BSR set to: 0
 56454  00AB9A  4B67               	infsnz	memcpy@d& (0+255),f,b
 56455  00AB9C  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 56456  00AB9E                     l4012:
 56457                           
 56458                           ; BSR set to: 0
 56459  00AB9E  0100               	movlb	0	; () banked
 56460  00ABA0  0764               	decf	memcpy@n& (0+255),f,b
 56461  00ABA2  A0D8               	btfss	status,0,c
 56462  00ABA4  0765               	decf	(memcpy@n+1)& (0+255),f,b
 56463  00ABA6  2964               	incf	memcpy@n& (0+255),w,b
 56464  00ABA8  E1DD               	bnz	l17322
 56465  00ABAA  2965               	incf	(memcpy@n+1)& (0+255),w,b
 56466  00ABAC  B4D8               	btfsc	status,2,c
 56467  00ABAE  0012               	return	
 56468  00ABB0  D7D9               	goto	l4013
 56469  00ABB2                     __end_of_memcpy:
 56470                           	opt stack 0
 56471                           tosu	equ	0xFFF
 56472                           tosh	equ	0xFFE
 56473                           tosl	equ	0xFFD
 56474                           pclath	equ	0xFFA
 56475                           tblptru	equ	0xFF8
 56476                           tblptrh	equ	0xFF7
 56477                           tblptrl	equ	0xFF6
 56478                           tablat	equ	0xFF5
 56479                           prodh	equ	0xFF4
 56480                           prodl	equ	0xFF3
 56481                           intcon	equ	0xFF2
 56482                           intcon2	equ	0xFF1
 56483                           intcon3	equ	0xFF0
 56484                           indf0	equ	0xFEF
 56485                           postinc0	equ	0xFEE
 56486                           plusw0	equ	0xFEB
 56487                           fsr0h	equ	0xFEA
 56488                           fsr0l	equ	0xFE9
 56489                           wreg	equ	0xFE8
 56490                           postinc1	equ	0xFE6
 56491                           postdec1	equ	0xFE5
 56492                           plusw1	equ	0xFE3
 56493                           fsr1h	equ	0xFE2
 56494                           fsr1l	equ	0xFE1
 56495                           indf2	equ	0xFDF
 56496                           postinc2	equ	0xFDE
 56497                           postdec2	equ	0xFDD
 56498                           plusw2	equ	0xFDB
 56499                           fsr2h	equ	0xFDA
 56500                           fsr2l	equ	0xFD9
 56501                           status	equ	0xFD8
 56502                           
 56503 ;; *************** function _CreateAllSoftwareTimers *****************
 56504 ;; Defined at:
 56505 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 56506 ;; Parameters:    Size  Location     Type
 56507 ;;		None
 56508 ;; Auto vars:     Size  Location     Type
 56509 ;;		None
 56510 ;; Return value:  Size  Location     Type
 56511 ;;                  1    wreg      void 
 56512 ;; Registers used:
 56513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56514 ;; Tracked objects:
 56515 ;;		On entry : 0/0
 56516 ;;		On exit  : 0/0
 56517 ;;		Unchanged: 0/0
 56518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56523 ;;Total ram usage:        0 bytes
 56524 ;; Hardware stack levels used:    1
 56525 ;; Hardware stack levels required when called:    8
 56526 ;; This function calls:
 56527 ;;		_SwTimerCreate
 56528 ;; This function is called by:
 56529 ;;		_LORAWAN_Init
 56530 ;; This function uses a non-reentrant model
 56531 ;;
 56532                           
 56533                           	psect	text303
 56534  00B0DA                     __ptext303:
 56535                           	opt stack 0
 56536  00B0DA                     _CreateAllSoftwareTimers:
 56537                           	opt stack 21
 56538                           
 56539                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 56540                           
 56541                           ; BSR set to: 0
 56542                           ;incstack = 0
 56543  00B0DA  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56544  00B0DE  0102               	movlb	2	; () banked
 56545  00B0E0  6FE6               	movwf	(_loRa+226)& (0+255),b
 56546                           
 56547                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 56548  00B0E2  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56549  00B0E6  0102               	movlb	2	; () banked
 56550  00B0E8  6FE7               	movwf	(_loRa+227)& (0+255),b
 56551                           
 56552                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 56553  00B0EA  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56554  00B0EE  0102               	movlb	2	; () banked
 56555  00B0F0  6FE8               	movwf	(_loRa+228)& (0+255),b
 56556                           
 56557                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 56558  00B0F2  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56559  00B0F6  0102               	movlb	2	; () banked
 56560  00B0F8  6FE9               	movwf	(_loRa+229)& (0+255),b
 56561                           
 56562                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 56563  00B0FA  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56564  00B0FE  0102               	movlb	2	; () banked
 56565  00B100  6FEB               	movwf	(_loRa+231)& (0+255),b
 56566                           
 56567                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 56568  00B102  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56569  00B106  0102               	movlb	2	; () banked
 56570  00B108  6FEC               	movwf	(_loRa+232)& (0+255),b
 56571                           
 56572                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 56573  00B10A  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56574  00B10E  0102               	movlb	2	; () banked
 56575  00B110  6FEA               	movwf	(_loRa+230)& (0+255),b
 56576                           
 56577                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 56578  00B112  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56579  00B116  0102               	movlb	2	; () banked
 56580  00B118  6FEE               	movwf	(_loRa+234)& (0+255),b
 56581                           
 56582                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 56583  00B11A  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56584  00B11E  0102               	movlb	2	; () banked
 56585  00B120  6FF7               	movwf	(_loRa+243)& (0+255),b
 56586                           
 56587                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 56588  00B122  EC13  F04F         	call	_SwTimerCreate	;wreg free
 56589  00B126  0102               	movlb	2	; () banked
 56590  00B128  6FED               	movwf	(_loRa+233)& (0+255),b
 56591                           
 56592                           ; BSR set to: 2
 56593  00B12A  0012               	return		;funcret
 56594  00B12C                     __end_of_CreateAllSoftwareTimers:
 56595                           	opt stack 0
 56596                           tosu	equ	0xFFF
 56597                           tosh	equ	0xFFE
 56598                           tosl	equ	0xFFD
 56599                           pclath	equ	0xFFA
 56600                           tblptru	equ	0xFF8
 56601                           tblptrh	equ	0xFF7
 56602                           tblptrl	equ	0xFF6
 56603                           tablat	equ	0xFF5
 56604                           prodh	equ	0xFF4
 56605                           prodl	equ	0xFF3
 56606                           intcon	equ	0xFF2
 56607                           intcon2	equ	0xFF1
 56608                           intcon3	equ	0xFF0
 56609                           indf0	equ	0xFEF
 56610                           postinc0	equ	0xFEE
 56611                           plusw0	equ	0xFEB
 56612                           fsr0h	equ	0xFEA
 56613                           fsr0l	equ	0xFE9
 56614                           wreg	equ	0xFE8
 56615                           postinc1	equ	0xFE6
 56616                           postdec1	equ	0xFE5
 56617                           plusw1	equ	0xFE3
 56618                           fsr1h	equ	0xFE2
 56619                           fsr1l	equ	0xFE1
 56620                           indf2	equ	0xFDF
 56621                           postinc2	equ	0xFDE
 56622                           postdec2	equ	0xFDD
 56623                           plusw2	equ	0xFDB
 56624                           fsr2h	equ	0xFDA
 56625                           fsr2l	equ	0xFD9
 56626                           status	equ	0xFD8
 56627                           
 56628 ;; *************** function _SwTimerCreate *****************
 56629 ;; Defined at:
 56630 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 56631 ;; Parameters:    Size  Location     Type
 56632 ;;		None
 56633 ;; Auto vars:     Size  Location     Type
 56634 ;;  retVal          1    0[BANK0 ] unsigned char 
 56635 ;; Return value:  Size  Location     Type
 56636 ;;                  1    wreg      unsigned char 
 56637 ;; Registers used:
 56638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56639 ;; Tracked objects:
 56640 ;;		On entry : 0/0
 56641 ;;		On exit  : 0/0
 56642 ;;		Unchanged: 0/0
 56643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56648 ;;Total ram usage:        1 bytes
 56649 ;; Hardware stack levels used:    1
 56650 ;; Hardware stack levels required when called:    7
 56651 ;; This function calls:
 56652 ;;		Nothing
 56653 ;; This function is called by:
 56654 ;;		_RADIO_Init
 56655 ;;		_CreateAllSoftwareTimers
 56656 ;; This function uses a non-reentrant model
 56657 ;;
 56658                           
 56659                           	psect	text304
 56660  009E26                     __ptext304:
 56661                           	opt stack 0
 56662  009E26                     _SwTimerCreate:
 56663                           	opt stack 21
 56664                           
 56665                           ;sw_timer.c: 156: uint8_t retVal;
 56666                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 56667                           
 56668                           ; BSR set to: 2
 56669                           ;incstack = 0
 56670  009E26  0E14               	movlw	20
 56671  009E28  0100               	movlb	0	; () banked
 56672  009E2A  61FF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 56673  009E2C  D03E               	goto	l569
 56674                           
 56675                           ; BSR set to: 0
 56676                           ;sw_timer.c: 158: {
 56677                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 56678  009E2E  9EF2               	bcf	intcon,7,c	;volatile
 56679                           
 56680                           ;sw_timer.c: 160: retVal = allocatedTimers;
 56681  009E30  C0FF  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 56682                           
 56683                           ; BSR set to: 0
 56684                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 56685  009E34  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56686  009E36  0D08               	mullw	8
 56687  009E38  0E04               	movlw	4
 56688  009E3A  26F3               	addwf	prodl,f,c
 56689  009E3C  0E00               	movlw	0
 56690  009E3E  22F4               	addwfc	prodh,f,c
 56691  009E40  0E00               	movlw	low _swTimers
 56692  009E42  24F3               	addwf	prodl,w,c
 56693  009E44  6ED9               	movwf	fsr2l,c
 56694  009E46  0E03               	movlw	high _swTimers
 56695  009E48  20F4               	addwfc	prodh,w,c
 56696  009E4A  6EDA               	movwf	fsr2h,c
 56697  009E4C  0E00               	movlw	0
 56698  009E4E  6EDF               	movwf	indf2,c
 56699                           
 56700                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 56701  009E50  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56702  009E52  0D08               	mullw	8
 56703  009E54  0E00               	movlw	low _swTimers
 56704  009E56  24F3               	addwf	prodl,w,c
 56705  009E58  6ED9               	movwf	fsr2l,c
 56706  009E5A  0E03               	movlw	high _swTimers
 56707  009E5C  20F4               	addwfc	prodh,w,c
 56708  009E5E  6EDA               	movwf	fsr2h,c
 56709  009E60  6ADE               	clrf	postinc2,c
 56710  009E62  6ADE               	clrf	postinc2,c
 56711  009E64  6ADE               	clrf	postinc2,c
 56712  009E66  6ADD               	clrf	postdec2,c
 56713                           
 56714                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 56715  009E68  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56716  009E6A  0D08               	mullw	8
 56717  009E6C  0E05               	movlw	5
 56718  009E6E  26F3               	addwf	prodl,f,c
 56719  009E70  0E00               	movlw	0
 56720  009E72  22F4               	addwfc	prodh,f,c
 56721  009E74  0E00               	movlw	low _swTimers
 56722  009E76  24F3               	addwf	prodl,w,c
 56723  009E78  6ED9               	movwf	fsr2l,c
 56724  009E7A  0E03               	movlw	high _swTimers
 56725  009E7C  20F4               	addwfc	prodh,w,c
 56726  009E7E  6EDA               	movwf	fsr2h,c
 56727  009E80  0E00               	movlw	0
 56728  009E82  6EDF               	movwf	indf2,c
 56729                           
 56730                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 56731  009E84  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56732  009E86  0D08               	mullw	8
 56733  009E88  0E06               	movlw	6
 56734  009E8A  26F3               	addwf	prodl,f,c
 56735  009E8C  0E00               	movlw	0
 56736  009E8E  22F4               	addwfc	prodh,f,c
 56737  009E90  0E00               	movlw	low _swTimers
 56738  009E92  24F3               	addwf	prodl,w,c
 56739  009E94  6ED9               	movwf	fsr2l,c
 56740  009E96  0E03               	movlw	high _swTimers
 56741  009E98  20F4               	addwfc	prodh,w,c
 56742  009E9A  6EDA               	movwf	fsr2h,c
 56743  009E9C  0E00               	movlw	0
 56744  009E9E  6EDE               	movwf	postinc2,c
 56745  009EA0  0E00               	movlw	0
 56746  009EA2  6EDD               	movwf	postdec2,c
 56747                           
 56748                           ; BSR set to: 0
 56749                           ;sw_timer.c: 165: allocatedTimers++;
 56750  009EA4  2BFF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 56751                           
 56752                           ; BSR set to: 0
 56753                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 56754  009EA6  8EF2               	bsf	intcon,7,c	;volatile
 56755                           
 56756                           ;sw_timer.c: 167: }
 56757  009EA8  D001               	goto	l573
 56758  009EAA                     l569:
 56759                           
 56760                           ;sw_timer.c: 171: {
 56761                           
 56762                           ; BSR set to: 0
 56763                           ;sw_timer.c: 168: else
 56764                           ;sw_timer.c: 169: {
 56765                           ;sw_timer.c: 170: while(1)
 56766  009EAA  D7FF               	goto	l569
 56767  009EAC                     l573:
 56768                           
 56769                           ;sw_timer.c: 175: }
 56770                           ;sw_timer.c: 176: }
 56771                           ;sw_timer.c: 177: return retVal;
 56772  009EAC  0100               	movlb	0	; () banked
 56773  009EAE  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 56774  009EB0  0012               	return	
 56775  009EB2                     __end_of_SwTimerCreate:
 56776                           	opt stack 0
 56777                           tosu	equ	0xFFF
 56778                           tosh	equ	0xFFE
 56779                           tosl	equ	0xFFD
 56780                           pclath	equ	0xFFA
 56781                           tblptru	equ	0xFF8
 56782                           tblptrh	equ	0xFF7
 56783                           tblptrl	equ	0xFF6
 56784                           tablat	equ	0xFF5
 56785                           prodh	equ	0xFF4
 56786                           prodl	equ	0xFF3
 56787                           intcon	equ	0xFF2
 56788                           intcon2	equ	0xFF1
 56789                           intcon3	equ	0xFF0
 56790                           indf0	equ	0xFEF
 56791                           postinc0	equ	0xFEE
 56792                           plusw0	equ	0xFEB
 56793                           fsr0h	equ	0xFEA
 56794                           fsr0l	equ	0xFE9
 56795                           wreg	equ	0xFE8
 56796                           postinc1	equ	0xFE6
 56797                           postdec1	equ	0xFE5
 56798                           plusw1	equ	0xFE3
 56799                           fsr1h	equ	0xFE2
 56800                           fsr1l	equ	0xFE1
 56801                           indf2	equ	0xFDF
 56802                           postinc2	equ	0xFDE
 56803                           postdec2	equ	0xFDD
 56804                           plusw2	equ	0xFDB
 56805                           fsr2h	equ	0xFDA
 56806                           fsr2l	equ	0xFD9
 56807                           status	equ	0xFD8
 56808                           
 56809 ;; *************** function _ADC_GetConversion *****************
 56810 ;; Defined at:
 56811 ;;		line 108 in file "mcc_generated_files/adc.c"
 56812 ;; Parameters:    Size  Location     Type
 56813 ;;  channel         1    wreg     enum E6990
 56814 ;; Auto vars:     Size  Location     Type
 56815 ;;  channel         1    4[BANK0 ] enum E6990
 56816 ;; Return value:  Size  Location     Type
 56817 ;;                  2    0[BANK0 ] unsigned int 
 56818 ;; Registers used:
 56819 ;;		wreg, status,2, status,0
 56820 ;; Tracked objects:
 56821 ;;		On entry : 0/0
 56822 ;;		On exit  : 0/0
 56823 ;;		Unchanged: 0/0
 56824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56825 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56828 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56829 ;;Total ram usage:        5 bytes
 56830 ;; Hardware stack levels used:    1
 56831 ;; Hardware stack levels required when called:    7
 56832 ;; This function calls:
 56833 ;;		Nothing
 56834 ;; This function is called by:
 56835 ;;		_main
 56836 ;; This function uses a non-reentrant model
 56837 ;;
 56838                           
 56839                           	psect	text305
 56840  00B822                     __ptext305:
 56841                           	opt stack 0
 56842  00B822                     _ADC_GetConversion:
 56843                           	opt stack 23
 56844                           
 56845                           ; BSR set to: 0
 56846                           ;incstack = 0
 56847                           ;ADC_GetConversion@channel stored from wreg
 56848  00B822  0100               	movlb	0	; () banked
 56849  00B824  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 56850                           
 56851                           ;adc.c: 111: ADCON0bits.CHS = channel;
 56852  00B826  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 56853  00B82A  0100               	movlb	0	; () banked
 56854  00B82C  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 56855  00B82E  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 56856  00B830  50C2               	movf	4034,w,c	;volatile
 56857  00B832  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 56858  00B834  0B83               	andlw	-125
 56859  00B836  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 56860  00B838  6EC2               	movwf	4034,c	;volatile
 56861                           
 56862                           ; BSR set to: 0
 56863                           ;adc.c: 114: ADCON0bits.ADON = 1;
 56864  00B83A  80C2               	bsf	4034,0,c	;volatile
 56865                           
 56866                           ; BSR set to: 0
 56867                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 56868  00B83C  82C2               	bsf	4034,1,c	;volatile
 56869  00B83E                     
 56870                           ; BSR set to: 0
 56871                           ;adc.c: 121: {
 56872  00B83E  B2C2               	btfsc	4034,1,c	;volatile
 56873  00B840  D7FE               	goto	l2831
 56874                           
 56875                           ;adc.c: 122: }
 56876                           ;adc.c: 125: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 56877  00B842  50C4               	movf	4036,w,c	;volatile
 56878  00B844  0100               	movlb	0	; () banked
 56879  00B846  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 56880  00B848  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 56881  00B84A  50C3               	movf	4035,w,c	;volatile
 56882  00B84C  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 56883  00B84E  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 56884  00B850  0E00               	movlw	0
 56885  00B852  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 56886  00B854  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 56887  00B856  0012               	return	
 56888  00B858                     __end_of_ADC_GetConversion:
 56889                           	opt stack 0
 56890                           tosu	equ	0xFFF
 56891                           tosh	equ	0xFFE
 56892                           tosl	equ	0xFFD
 56893                           pclath	equ	0xFFA
 56894                           tblptru	equ	0xFF8
 56895                           tblptrh	equ	0xFF7
 56896                           tblptrl	equ	0xFF6
 56897                           tablat	equ	0xFF5
 56898                           prodh	equ	0xFF4
 56899                           prodl	equ	0xFF3
 56900                           intcon	equ	0xFF2
 56901                           intcon2	equ	0xFF1
 56902                           intcon3	equ	0xFF0
 56903                           indf0	equ	0xFEF
 56904                           postinc0	equ	0xFEE
 56905                           plusw0	equ	0xFEB
 56906                           fsr0h	equ	0xFEA
 56907                           fsr0l	equ	0xFE9
 56908                           wreg	equ	0xFE8
 56909                           postinc1	equ	0xFE6
 56910                           postdec1	equ	0xFE5
 56911                           plusw1	equ	0xFE3
 56912                           fsr1h	equ	0xFE2
 56913                           fsr1l	equ	0xFE1
 56914                           indf2	equ	0xFDF
 56915                           postinc2	equ	0xFDE
 56916                           postdec2	equ	0xFDD
 56917                           plusw2	equ	0xFDB
 56918                           fsr2h	equ	0xFDA
 56919                           fsr2l	equ	0xFD9
 56920                           status	equ	0xFD8
 56921                           
 56922 ;; *************** function _INTERRUPT_InterruptManager *****************
 56923 ;; Defined at:
 56924 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 56925 ;; Parameters:    Size  Location     Type
 56926 ;;		None
 56927 ;; Auto vars:     Size  Location     Type
 56928 ;;		None
 56929 ;; Return value:  Size  Location     Type
 56930 ;;                  1    wreg      void 
 56931 ;; Registers used:
 56932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 56933 ;; Tracked objects:
 56934 ;;		On entry : 0/0
 56935 ;;		On exit  : 0/0
 56936 ;;		Unchanged: 0/0
 56937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56940 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56942 ;;Total ram usage:        8 bytes
 56943 ;; Hardware stack levels used:    1
 56944 ;; Hardware stack levels required when called:    6
 56945 ;; This function calls:
 56946 ;;		_INT1_ISR
 56947 ;;		_INT2_ISR
 56948 ;;		_PIN_MANAGER_IOC
 56949 ;;		_TMR1_ISR
 56950 ;; This function is called by:
 56951 ;;		Interrupt level 2
 56952 ;; This function uses a non-reentrant model
 56953 ;;
 56954                           
 56955                           	psect	intcode
 56956  000008                     __pintcode:
 56957                           	opt stack 0
 56958  000008                     _INTERRUPT_InterruptManager:
 56959                           	opt stack 11
 56960                           
 56961                           ; BSR set to: 0
 56962                           ;incstack = 0
 56963  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 56964  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 56965  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 56966  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 56967  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 56968  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 56969  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 56970  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 56971  000028  EE19  F0E8         	lfsr	1,___inthi_sp
 56972                           
 56973                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 56974  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 56975  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 56976  000030  D003               	goto	i2l2618
 56977                           
 56978                           ;interrupt_manager.c: 62: {
 56979                           ;interrupt_manager.c: 63: INT1_ISR();
 56980  000032  EC2A  F063         	call	_INT1_ISR	;wreg free
 56981                           
 56982                           ;interrupt_manager.c: 64: }
 56983  000036  D012               	goto	i2l2625
 56984  000038                     i2l2618:
 56985                           
 56986                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 56987  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 56988  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 56989  00003C  D003               	goto	i2l2620
 56990                           
 56991                           ;interrupt_manager.c: 66: {
 56992                           ;interrupt_manager.c: 67: INT2_ISR();
 56993  00003E  EC26  F063         	call	_INT2_ISR	;wreg free
 56994                           
 56995                           ;interrupt_manager.c: 68: }
 56996  000042  D00C               	goto	i2l2625
 56997  000044                     i2l2620:
 56998                           
 56999                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 57000  000044  B6F2               	btfsc	intcon,3,c	;volatile
 57001  000046  A0F2               	btfss	intcon,0,c	;volatile
 57002  000048  D003               	goto	i2l2622
 57003                           
 57004                           ;interrupt_manager.c: 70: {
 57005                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 57006  00004A  ECFD  F062         	call	_PIN_MANAGER_IOC	;wreg free
 57007                           
 57008                           ;interrupt_manager.c: 72: }
 57009  00004E  D006               	goto	i2l2625
 57010  000050                     i2l2622:
 57011                           
 57012                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 57013  000050  BCF2               	btfsc	intcon,6,c	;volatile
 57014                           
 57015                           ;interrupt_manager.c: 74: {
 57016                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 57017  000052  A09D               	btfss	3997,0,c	;volatile
 57018  000054  D003               	goto	i2l2625
 57019  000056  B09E               	btfsc	3998,0,c	;volatile
 57020                           
 57021                           ;interrupt_manager.c: 76: {
 57022                           ;interrupt_manager.c: 77: TMR1_ISR();
 57023  000058  ECA5  F061         	call	_TMR1_ISR	;wreg free
 57024  00005C                     i2l2625:
 57025                           
 57026                           ;interrupt_manager.c: 84: else
 57027                           ;interrupt_manager.c: 85: {
 57028                           
 57029                           ;interrupt_manager.c: 82: }
 57030                           ;interrupt_manager.c: 83: }
 57031                           
 57032                           ;interrupt_manager.c: 79: else
 57033                           ;interrupt_manager.c: 80: {
 57034  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 57035  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 57036  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 57037  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 57038  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 57039  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 57040  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 57041  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 57042  00007C  0011               	retfie		f
 57043  00007E                     __end_of_INTERRUPT_InterruptManager:
 57044                           	opt stack 0
 57045                           tosu	equ	0xFFF
 57046                           tosh	equ	0xFFE
 57047                           tosl	equ	0xFFD
 57048                           pclatu	equ	0xFFB
 57049                           pclath	equ	0xFFA
 57050                           tblptru	equ	0xFF8
 57051                           tblptrh	equ	0xFF7
 57052                           tblptrl	equ	0xFF6
 57053                           tablat	equ	0xFF5
 57054                           prodh	equ	0xFF4
 57055                           prodl	equ	0xFF3
 57056                           intcon	equ	0xFF2
 57057                           intcon2	equ	0xFF1
 57058                           intcon3	equ	0xFF0
 57059                           indf0	equ	0xFEF
 57060                           postinc0	equ	0xFEE
 57061                           plusw0	equ	0xFEB
 57062                           fsr0h	equ	0xFEA
 57063                           fsr0l	equ	0xFE9
 57064                           wreg	equ	0xFE8
 57065                           postinc1	equ	0xFE6
 57066                           postdec1	equ	0xFE5
 57067                           plusw1	equ	0xFE3
 57068                           fsr1h	equ	0xFE2
 57069                           fsr1l	equ	0xFE1
 57070                           indf2	equ	0xFDF
 57071                           postinc2	equ	0xFDE
 57072                           postdec2	equ	0xFDD
 57073                           plusw2	equ	0xFDB
 57074                           fsr2h	equ	0xFDA
 57075                           fsr2l	equ	0xFD9
 57076                           status	equ	0xFD8
 57077                           
 57078 ;; *************** function _TMR1_ISR *****************
 57079 ;; Defined at:
 57080 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 57081 ;; Parameters:    Size  Location     Type
 57082 ;;		None
 57083 ;; Auto vars:     Size  Location     Type
 57084 ;;		None
 57085 ;; Return value:  Size  Location     Type
 57086 ;;                  1    wreg      void 
 57087 ;; Registers used:
 57088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 57089 ;; Tracked objects:
 57090 ;;		On entry : 0/0
 57091 ;;		On exit  : 0/0
 57092 ;;		Unchanged: 0/0
 57093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57098 ;;Total ram usage:        0 bytes
 57099 ;; Hardware stack levels used:    1
 57100 ;; Hardware stack levels required when called:    5
 57101 ;; This function calls:
 57102 ;;		_TMR1_CallBack
 57103 ;;		i2_TMR1_WriteTimer
 57104 ;; This function is called by:
 57105 ;;		_INTERRUPT_InterruptManager
 57106 ;; This function uses a non-reentrant model
 57107 ;;
 57108                           
 57109                           	psect	text307
 57110  00C34A                     __ptext307:
 57111                           	opt stack 0
 57112  00C34A                     _TMR1_ISR:
 57113                           	opt stack 11
 57114                           
 57115                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 57116                           
 57117                           ;incstack = 0
 57118  00C34A  909E               	bcf	3998,0,c	;volatile
 57119                           
 57120                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 57121  00C34C  C1F5  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 57122  00C350  C1F6  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 57123  00C354  ECC1  F060         	call	i2_TMR1_WriteTimer	;wreg free
 57124                           
 57125                           ;tmr1.c: 167: TMR1_CallBack();
 57126  00C358  EC0B  F060         	call	_TMR1_CallBack	;wreg free
 57127  00C35C  0012               	return		;funcret
 57128  00C35E                     __end_of_TMR1_ISR:
 57129                           	opt stack 0
 57130                           tosu	equ	0xFFF
 57131                           tosh	equ	0xFFE
 57132                           tosl	equ	0xFFD
 57133                           pclatu	equ	0xFFB
 57134                           pclath	equ	0xFFA
 57135                           tblptru	equ	0xFF8
 57136                           tblptrh	equ	0xFF7
 57137                           tblptrl	equ	0xFF6
 57138                           tablat	equ	0xFF5
 57139                           prodh	equ	0xFF4
 57140                           prodl	equ	0xFF3
 57141                           intcon	equ	0xFF2
 57142                           intcon2	equ	0xFF1
 57143                           intcon3	equ	0xFF0
 57144                           indf0	equ	0xFEF
 57145                           postinc0	equ	0xFEE
 57146                           plusw0	equ	0xFEB
 57147                           fsr0h	equ	0xFEA
 57148                           fsr0l	equ	0xFE9
 57149                           wreg	equ	0xFE8
 57150                           postinc1	equ	0xFE6
 57151                           postdec1	equ	0xFE5
 57152                           plusw1	equ	0xFE3
 57153                           fsr1h	equ	0xFE2
 57154                           fsr1l	equ	0xFE1
 57155                           indf2	equ	0xFDF
 57156                           postinc2	equ	0xFDE
 57157                           postdec2	equ	0xFDD
 57158                           plusw2	equ	0xFDB
 57159                           fsr2h	equ	0xFDA
 57160                           fsr2l	equ	0xFD9
 57161                           status	equ	0xFD8
 57162                           
 57163 ;; *************** function _TMR1_CallBack *****************
 57164 ;; Defined at:
 57165 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 57166 ;; Parameters:    Size  Location     Type
 57167 ;;		None
 57168 ;; Auto vars:     Size  Location     Type
 57169 ;;		None
 57170 ;; Return value:  Size  Location     Type
 57171 ;;                  1    wreg      void 
 57172 ;; Registers used:
 57173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 57174 ;; Tracked objects:
 57175 ;;		On entry : 0/0
 57176 ;;		On exit  : 0/0
 57177 ;;		Unchanged: 0/0
 57178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57183 ;;Total ram usage:        0 bytes
 57184 ;; Hardware stack levels used:    1
 57185 ;; Hardware stack levels required when called:    4
 57186 ;; This function calls:
 57187 ;;		Absolute function
 57188 ;;		_TMR1_DefaultInterruptHandler
 57189 ;;		_TMR_ISR_lora
 57190 ;; This function is called by:
 57191 ;;		_TMR1_ISR
 57192 ;; This function uses a non-reentrant model
 57193 ;;
 57194                           
 57195                           	psect	text308
 57196  00C016                     __ptext308:
 57197                           	opt stack 0
 57198  00C016                     _TMR1_CallBack:
 57199                           	opt stack 11
 57200                           
 57201                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 57202                           
 57203                           ;incstack = 0
 57204  00C016  0103               	movlb	3	; () banked
 57205  00C018  51F8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 57206  00C01A  11F9               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 57207  00C01C  B4D8               	btfsc	status,2,c
 57208  00C01E  0012               	return	
 57209                           
 57210                           ; BSR set to: 3
 57211                           ;tmr1.c: 174: {
 57212                           ;tmr1.c: 175: TMR1_InterruptHandler();
 57213  00C020  D801               	call	i2u2876_48
 57214  00C022  0012               	return	
 57215  00C024                     i2u2876_48:
 57216  00C024  0005               	push	
 57217  00C026  6EFA               	movwf	pclath,c
 57218  00C028  51F8               	movf	_TMR1_InterruptHandler& (0+255),w,b
 57219  00C02A  6EFD               	movwf	tosl,c
 57220  00C02C  51F9               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 57221  00C02E  6EFE               	movwf	tosh,c
 57222  00C030  6AFF               	clrf	tosu,c
 57223  00C032  50FA               	movf	pclath,w,c
 57224  00C034  0012               	return		;indir
 57225  00C036                     __end_of_TMR1_CallBack:
 57226                           	opt stack 0
 57227                           tosu	equ	0xFFF
 57228                           tosh	equ	0xFFE
 57229                           tosl	equ	0xFFD
 57230                           pclatu	equ	0xFFB
 57231                           pclath	equ	0xFFA
 57232                           tblptru	equ	0xFF8
 57233                           tblptrh	equ	0xFF7
 57234                           tblptrl	equ	0xFF6
 57235                           tablat	equ	0xFF5
 57236                           prodh	equ	0xFF4
 57237                           prodl	equ	0xFF3
 57238                           intcon	equ	0xFF2
 57239                           intcon2	equ	0xFF1
 57240                           intcon3	equ	0xFF0
 57241                           indf0	equ	0xFEF
 57242                           postinc0	equ	0xFEE
 57243                           plusw0	equ	0xFEB
 57244                           fsr0h	equ	0xFEA
 57245                           fsr0l	equ	0xFE9
 57246                           wreg	equ	0xFE8
 57247                           postinc1	equ	0xFE6
 57248                           postdec1	equ	0xFE5
 57249                           plusw1	equ	0xFE3
 57250                           fsr1h	equ	0xFE2
 57251                           fsr1l	equ	0xFE1
 57252                           indf2	equ	0xFDF
 57253                           postinc2	equ	0xFDE
 57254                           postdec2	equ	0xFDD
 57255                           plusw2	equ	0xFDB
 57256                           fsr2h	equ	0xFDA
 57257                           fsr2l	equ	0xFD9
 57258                           status	equ	0xFD8
 57259                           
 57260 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 57261 ;; Defined at:
 57262 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 57263 ;; Parameters:    Size  Location     Type
 57264 ;;		None
 57265 ;; Auto vars:     Size  Location     Type
 57266 ;;		None
 57267 ;; Return value:  Size  Location     Type
 57268 ;;                  1    wreg      void 
 57269 ;; Registers used:
 57270 ;;		None
 57271 ;; Tracked objects:
 57272 ;;		On entry : 0/0
 57273 ;;		On exit  : 0/0
 57274 ;;		Unchanged: 0/0
 57275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57280 ;;Total ram usage:        0 bytes
 57281 ;; Hardware stack levels used:    1
 57282 ;; This function calls:
 57283 ;;		Nothing
 57284 ;; This function is called by:
 57285 ;;		_TMR1_Initialize
 57286 ;;		_TMR1_CallBack
 57287 ;; This function uses a non-reentrant model
 57288 ;;
 57289                           
 57290                           	psect	text309
 57291  00C6E4                     __ptext309:
 57292                           	opt stack 0
 57293  00C6E4                     _TMR1_DefaultInterruptHandler:
 57294                           	opt stack 14
 57295                           
 57296                           ;incstack = 0
 57297  00C6E4  0012               	return		;funcret
 57298  00C6E6                     __end_of_TMR1_DefaultInterruptHandler:
 57299                           	opt stack 0
 57300                           tosu	equ	0xFFF
 57301                           tosh	equ	0xFFE
 57302                           tosl	equ	0xFFD
 57303                           pclatu	equ	0xFFB
 57304                           pclath	equ	0xFFA
 57305                           tblptru	equ	0xFF8
 57306                           tblptrh	equ	0xFF7
 57307                           tblptrl	equ	0xFF6
 57308                           tablat	equ	0xFF5
 57309                           prodh	equ	0xFF4
 57310                           prodl	equ	0xFF3
 57311                           intcon	equ	0xFF2
 57312                           intcon2	equ	0xFF1
 57313                           intcon3	equ	0xFF0
 57314                           indf0	equ	0xFEF
 57315                           postinc0	equ	0xFEE
 57316                           plusw0	equ	0xFEB
 57317                           fsr0h	equ	0xFEA
 57318                           fsr0l	equ	0xFE9
 57319                           wreg	equ	0xFE8
 57320                           postinc1	equ	0xFE6
 57321                           postdec1	equ	0xFE5
 57322                           plusw1	equ	0xFE3
 57323                           fsr1h	equ	0xFE2
 57324                           fsr1l	equ	0xFE1
 57325                           indf2	equ	0xFDF
 57326                           postinc2	equ	0xFDE
 57327                           postdec2	equ	0xFDD
 57328                           plusw2	equ	0xFDB
 57329                           fsr2h	equ	0xFDA
 57330                           fsr2l	equ	0xFD9
 57331                           status	equ	0xFD8
 57332                           
 57333 ;; *************** function _TMR_ISR_lora *****************
 57334 ;; Defined at:
 57335 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 57336 ;; Parameters:    Size  Location     Type
 57337 ;;		None
 57338 ;; Auto vars:     Size  Location     Type
 57339 ;;		None
 57340 ;; Return value:  Size  Location     Type
 57341 ;;                  1    wreg      void 
 57342 ;; Registers used:
 57343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57344 ;; Tracked objects:
 57345 ;;		On entry : 0/0
 57346 ;;		On exit  : 0/0
 57347 ;;		Unchanged: 0/0
 57348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57353 ;;Total ram usage:        2 bytes
 57354 ;; Hardware stack levels used:    1
 57355 ;; Hardware stack levels required when called:    3
 57356 ;; This function calls:
 57357 ;;		i2_SwTimersInterrupt
 57358 ;;		i2_TMR_SwapTimer
 57359 ;; This function is called by:
 57360 ;;		_TMR_ISR_Lora_Init
 57361 ;;		_TMR1_CallBack
 57362 ;; This function uses a non-reentrant model
 57363 ;;
 57364                           
 57365                           	psect	text310
 57366  00AEE4                     __ptext310:
 57367                           	opt stack 0
 57368  00AEE4                     _TMR_ISR_lora:
 57369                           	opt stack 11
 57370                           
 57371                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 57372                           
 57373                           ;incstack = 0
 57374  00AEE4  0E01               	movlw	1
 57375  00AEE6  6E47               	movwf	_timerOverflow,c	;volatile
 57376                           
 57377                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 57378  00AEE8  EC5C  F043         	call	i2_SwTimersInterrupt	;wreg free
 57379  00AEEC  C021  F054         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 57380  00AEF0  C022  F055         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 57381  00AEF4  C023  F056         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 57382  00AEF8  C024  F057         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 57383                           
 57384                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 57385  00AEFC  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 57386  00AEFE  E11C               	bnz	i2l1663
 57387  00AF00  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 57388  00AF02  B0D8               	btfsc	status,0,c
 57389  00AF04  0012               	return	
 57390                           
 57391                           ;tmr_lora_addons.c: 66: {
 57392                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 57393  00AF06  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 57394  00AF0A  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 57395  00AF0E  1E32               	comf	??_TMR_ISR_lora,f,c
 57396  00AF10  1E33               	comf	??_TMR_ISR_lora+1,f,c
 57397  00AF12  4A32               	infsnz	??_TMR_ISR_lora,f,c
 57398  00AF14  2A33               	incf	??_TMR_ISR_lora+1,f,c
 57399  00AF16  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 57400  00AF1A  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 57401                           
 57402                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 57403  00AF1E  C044  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 57404  00AF22  C045  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 57405  00AF26  ECF7  F05A         	call	i2_TMR_SwapTimer	;wreg free
 57406  00AF2A  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 57407  00AF2E  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 57408  00AF32  6A42               	clrf	_ticksAdded+2,c	;volatile
 57409  00AF34  6A43               	clrf	_ticksAdded+3,c	;volatile
 57410  00AF36  0012               	return	
 57411  00AF38                     i2l1663:
 57412  00AF38  0012               	return		;funcret
 57413  00AF3A                     __end_of_TMR_ISR_lora:
 57414                           	opt stack 0
 57415                           tosu	equ	0xFFF
 57416                           tosh	equ	0xFFE
 57417                           tosl	equ	0xFFD
 57418                           pclatu	equ	0xFFB
 57419                           pclath	equ	0xFFA
 57420                           tblptru	equ	0xFF8
 57421                           tblptrh	equ	0xFF7
 57422                           tblptrl	equ	0xFF6
 57423                           tablat	equ	0xFF5
 57424                           prodh	equ	0xFF4
 57425                           prodl	equ	0xFF3
 57426                           intcon	equ	0xFF2
 57427                           intcon2	equ	0xFF1
 57428                           intcon3	equ	0xFF0
 57429                           indf0	equ	0xFEF
 57430                           postinc0	equ	0xFEE
 57431                           plusw0	equ	0xFEB
 57432                           fsr0h	equ	0xFEA
 57433                           fsr0l	equ	0xFE9
 57434                           wreg	equ	0xFE8
 57435                           postinc1	equ	0xFE6
 57436                           postdec1	equ	0xFE5
 57437                           plusw1	equ	0xFE3
 57438                           fsr1h	equ	0xFE2
 57439                           fsr1l	equ	0xFE1
 57440                           indf2	equ	0xFDF
 57441                           postinc2	equ	0xFDE
 57442                           postdec2	equ	0xFDD
 57443                           plusw2	equ	0xFDB
 57444                           fsr2h	equ	0xFDA
 57445                           fsr2l	equ	0xFD9
 57446                           status	equ	0xFD8
 57447                           
 57448 ;; *************** function i2_TMR_SwapTimer *****************
 57449 ;; Defined at:
 57450 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57451 ;; Parameters:    Size  Location     Type
 57452 ;;  timerVal        2    8[COMRAM] unsigned int 
 57453 ;; Auto vars:     Size  Location     Type
 57454 ;;		None
 57455 ;; Return value:  Size  Location     Type
 57456 ;;                  2    8[COMRAM] unsigned int 
 57457 ;; Registers used:
 57458 ;;		wreg, status,2, status,0, cstack
 57459 ;; Tracked objects:
 57460 ;;		On entry : 0/0
 57461 ;;		On exit  : 0/0
 57462 ;;		Unchanged: 0/0
 57463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57468 ;;Total ram usage:        2 bytes
 57469 ;; Hardware stack levels used:    1
 57470 ;; Hardware stack levels required when called:    1
 57471 ;; This function calls:
 57472 ;;		i2_TMR1_ReadTimer
 57473 ;;		i2_TMR1_WriteTimer
 57474 ;; This function is called by:
 57475 ;;		_TMR_ISR_lora
 57476 ;; This function uses a non-reentrant model
 57477 ;;
 57478                           
 57479                           	psect	text311
 57480  00B5EE                     __ptext311:
 57481                           	opt stack 0
 57482  00B5EE                     i2_TMR_SwapTimer:
 57483                           	opt stack 12
 57484                           
 57485                           ;sw_timer.c: 114: static uint16_t oldVal;
 57486                           ;sw_timer.c: 115: static uint16_t retVal;
 57487                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 57488                           
 57489                           ;incstack = 0
 57490  00B5EE  EC1B  F060         	call	i2_TMR1_ReadTimer	;wreg free
 57491  00B5F2  C001  F122         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 57492  00B5F6  C002  F123         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 57493  00B5FA                     
 57494                           ;sw_timer.c: 123: ;
 57495  00B5FA  EC1B  F060         	call	i2_TMR1_ReadTimer	;wreg free
 57496  00B5FE  0101               	movlb	1	; () banked
 57497  00B600  5122               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 57498  00B602  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 57499  00B604  E104               	bnz	i2l14484
 57500  00B606  5123               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 57501  00B608  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 57502  00B60A  B4D8               	btfsc	status,2,c
 57503  00B60C  D7F6               	goto	i2l555
 57504  00B60E                     i2l14484:
 57505                           
 57506                           ; BSR set to: 1
 57507                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 57508  00B60E  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 57509  00B612  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 57510  00B616  ECC1  F060         	call	i2_TMR1_WriteTimer	;wreg free
 57511                           
 57512                           ;sw_timer.c: 128: oldVal++;
 57513  00B61A  0101               	movlb	1	; () banked
 57514  00B61C  4B22               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 57515  00B61E  2B23               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 57516                           
 57517                           ; BSR set to: 1
 57518                           ;sw_timer.c: 130: retVal = oldVal;
 57519  00B620  C122  F120         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 57520  00B624  C123  F121         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 57521                           
 57522                           ; BSR set to: 1
 57523                           ;sw_timer.c: 132: return retVal;
 57524  00B628  C120  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 57525  00B62C  C121  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 57526  00B630  0012               	return	
 57527  00B632                     __end_ofi2_TMR_SwapTimer:
 57528                           	opt stack 0
 57529                           tosu	equ	0xFFF
 57530                           tosh	equ	0xFFE
 57531                           tosl	equ	0xFFD
 57532                           pclatu	equ	0xFFB
 57533                           pclath	equ	0xFFA
 57534                           tblptru	equ	0xFF8
 57535                           tblptrh	equ	0xFF7
 57536                           tblptrl	equ	0xFF6
 57537                           tablat	equ	0xFF5
 57538                           prodh	equ	0xFF4
 57539                           prodl	equ	0xFF3
 57540                           intcon	equ	0xFF2
 57541                           intcon2	equ	0xFF1
 57542                           intcon3	equ	0xFF0
 57543                           indf0	equ	0xFEF
 57544                           postinc0	equ	0xFEE
 57545                           plusw0	equ	0xFEB
 57546                           fsr0h	equ	0xFEA
 57547                           fsr0l	equ	0xFE9
 57548                           wreg	equ	0xFE8
 57549                           postinc1	equ	0xFE6
 57550                           postdec1	equ	0xFE5
 57551                           plusw1	equ	0xFE3
 57552                           fsr1h	equ	0xFE2
 57553                           fsr1l	equ	0xFE1
 57554                           indf2	equ	0xFDF
 57555                           postinc2	equ	0xFDE
 57556                           postdec2	equ	0xFDD
 57557                           plusw2	equ	0xFDB
 57558                           fsr2h	equ	0xFDA
 57559                           fsr2l	equ	0xFD9
 57560                           status	equ	0xFD8
 57561                           
 57562 ;; *************** function i2_TMR1_WriteTimer *****************
 57563 ;; Defined at:
 57564 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 57565 ;; Parameters:    Size  Location     Type
 57566 ;;  timerVal        2    0[COMRAM] unsigned int 
 57567 ;; Auto vars:     Size  Location     Type
 57568 ;;		None
 57569 ;; Return value:  Size  Location     Type
 57570 ;;                  1    wreg      void 
 57571 ;; Registers used:
 57572 ;;		wreg, status,2
 57573 ;; Tracked objects:
 57574 ;;		On entry : 0/0
 57575 ;;		On exit  : 0/0
 57576 ;;		Unchanged: 0/0
 57577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57582 ;;Total ram usage:        2 bytes
 57583 ;; Hardware stack levels used:    1
 57584 ;; This function calls:
 57585 ;;		Nothing
 57586 ;; This function is called by:
 57587 ;;		_TMR1_ISR
 57588 ;;		i2_TMR_SwapTimer
 57589 ;; This function uses a non-reentrant model
 57590 ;;
 57591                           
 57592                           	psect	text312
 57593  00C182                     __ptext312:
 57594                           	opt stack 0
 57595  00C182                     i2_TMR1_WriteTimer:
 57596                           	opt stack 15
 57597                           
 57598                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 57599                           
 57600                           ; BSR set to: 1
 57601                           ;incstack = 0
 57602  00C182  A4CD               	btfss	4045,2,c	;volatile
 57603  00C184  D007               	goto	i2l2774
 57604                           
 57605                           ;tmr1.c: 124: {
 57606                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 57607  00C186  90CD               	bcf	4045,0,c	;volatile
 57608                           
 57609                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 57610  00C188  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 57611  00C18A  6ECF               	movwf	4047,c	;volatile
 57612                           
 57613                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 57614  00C18C  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 57615                           
 57616                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 57617  00C190  80CD               	bsf	4045,0,c	;volatile
 57618                           
 57619                           ;tmr1.c: 134: }
 57620  00C192  0012               	return	
 57621  00C194                     i2l2774:
 57622                           
 57623                           ;tmr1.c: 135: else
 57624                           ;tmr1.c: 136: {
 57625                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 57626  00C194  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 57627  00C196  6ECF               	movwf	4047,c	;volatile
 57628                           
 57629                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 57630  00C198  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 57631  00C19C  0012               	return	
 57632  00C19E                     __end_ofi2_TMR1_WriteTimer:
 57633                           	opt stack 0
 57634                           tosu	equ	0xFFF
 57635                           tosh	equ	0xFFE
 57636                           tosl	equ	0xFFD
 57637                           pclatu	equ	0xFFB
 57638                           pclath	equ	0xFFA
 57639                           tblptru	equ	0xFF8
 57640                           tblptrh	equ	0xFF7
 57641                           tblptrl	equ	0xFF6
 57642                           tablat	equ	0xFF5
 57643                           prodh	equ	0xFF4
 57644                           prodl	equ	0xFF3
 57645                           intcon	equ	0xFF2
 57646                           intcon2	equ	0xFF1
 57647                           intcon3	equ	0xFF0
 57648                           indf0	equ	0xFEF
 57649                           postinc0	equ	0xFEE
 57650                           plusw0	equ	0xFEB
 57651                           fsr0h	equ	0xFEA
 57652                           fsr0l	equ	0xFE9
 57653                           wreg	equ	0xFE8
 57654                           postinc1	equ	0xFE6
 57655                           postdec1	equ	0xFE5
 57656                           plusw1	equ	0xFE3
 57657                           fsr1h	equ	0xFE2
 57658                           fsr1l	equ	0xFE1
 57659                           indf2	equ	0xFDF
 57660                           postinc2	equ	0xFDE
 57661                           postdec2	equ	0xFDD
 57662                           plusw2	equ	0xFDB
 57663                           fsr2h	equ	0xFDA
 57664                           fsr2l	equ	0xFD9
 57665                           status	equ	0xFD8
 57666                           
 57667 ;; *************** function i2_SwTimersInterrupt *****************
 57668 ;; Defined at:
 57669 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57670 ;; Parameters:    Size  Location     Type
 57671 ;;		None
 57672 ;; Auto vars:     Size  Location     Type
 57673 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 57674 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 57675 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 57676 ;; Return value:  Size  Location     Type
 57677 ;;                  4   32[COMRAM] unsigned long 
 57678 ;; Registers used:
 57679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57680 ;; Tracked objects:
 57681 ;;		On entry : 0/0
 57682 ;;		On exit  : 0/0
 57683 ;;		Unchanged: 0/0
 57684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57686 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57688 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57689 ;;Total ram usage:       17 bytes
 57690 ;; Hardware stack levels used:    1
 57691 ;; Hardware stack levels required when called:    2
 57692 ;; This function calls:
 57693 ;;		i2_TMR_GetDeltaTime
 57694 ;; This function is called by:
 57695 ;;		_TMR_ISR_lora
 57696 ;; This function uses a non-reentrant model
 57697 ;;
 57698                           
 57699                           	psect	text313
 57700  0086B8                     __ptext313:
 57701                           	opt stack 0
 57702  0086B8                     i2_SwTimersInterrupt:
 57703                           	opt stack 11
 57704                           
 57705                           ;sw_timer.c: 289: uint8_t i;
 57706                           ;sw_timer.c: 290: uint32_t timeElapsed;
 57707                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 57708                           
 57709                           ;incstack = 0
 57710  0086B8  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 57711  0086BA  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 57712  0086BC  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 57713  0086BE  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 57714                           
 57715                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 57716  0086C0  EC7B  F039         	call	i2_TMR_GetDeltaTime	;wreg free
 57717  0086C4  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 57718  0086C8  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 57719  0086CC  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 57720  0086D0  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 57721                           
 57722                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 57723  0086D4  0E00               	movlw	0
 57724  0086D6  6E31               	movwf	i2SwTimersInterrupt@i,c
 57725  0086D8  D061               	goto	i2l612
 57726  0086DA                     
 57727                           ;sw_timer.c: 298: {
 57728                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 57729  0086DA  5031               	movf	i2SwTimersInterrupt@i,w,c
 57730  0086DC  0D08               	mullw	8
 57731  0086DE  0E04               	movlw	4
 57732  0086E0  26F3               	addwf	prodl,f,c
 57733  0086E2  0E00               	movlw	0
 57734  0086E4  22F4               	addwfc	prodh,f,c
 57735  0086E6  0E00               	movlw	low _swTimers
 57736  0086E8  24F3               	addwf	prodl,w,c
 57737  0086EA  6ED9               	movwf	fsr2l,c
 57738  0086EC  0E03               	movlw	high _swTimers
 57739  0086EE  20F4               	addwfc	prodh,w,c
 57740  0086F0  6EDA               	movwf	fsr2h,c
 57741  0086F2  04DE               	decf	postinc2,w,c
 57742  0086F4  A4D8               	btfss	status,2,c
 57743  0086F6  D051               	goto	i2l617
 57744                           
 57745                           ;sw_timer.c: 302: {
 57746                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 57747  0086F8  5031               	movf	i2SwTimersInterrupt@i,w,c
 57748  0086FA  0D08               	mullw	8
 57749  0086FC  0E00               	movlw	low _swTimers
 57750  0086FE  24F3               	addwf	prodl,w,c
 57751  008700  6ED9               	movwf	fsr2l,c
 57752  008702  0E03               	movlw	high _swTimers
 57753  008704  20F4               	addwfc	prodh,w,c
 57754  008706  6EDA               	movwf	fsr2h,c
 57755  008708  50DE               	movf	postinc2,w,c
 57756  00870A  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 57757  00870C  50DE               	movf	postinc2,w,c
 57758  00870E  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 57759  008710  50DE               	movf	postinc2,w,c
 57760  008712  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 57761  008714  50DE               	movf	postinc2,w,c
 57762  008716  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 57763  008718  A0D8               	btfss	status,0,c
 57764  00871A  D00D               	goto	i2l615
 57765                           
 57766                           ;sw_timer.c: 304: {
 57767                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 57768  00871C  5031               	movf	i2SwTimersInterrupt@i,w,c
 57769  00871E  0D08               	mullw	8
 57770  008720  0E00               	movlw	low _swTimers
 57771  008722  24F3               	addwf	prodl,w,c
 57772  008724  6ED9               	movwf	fsr2l,c
 57773  008726  0E03               	movlw	high _swTimers
 57774  008728  20F4               	addwfc	prodh,w,c
 57775  00872A  6EDA               	movwf	fsr2h,c
 57776  00872C  6ADE               	clrf	postinc2,c
 57777  00872E  6ADE               	clrf	postinc2,c
 57778  008730  6ADE               	clrf	postinc2,c
 57779  008732  6ADD               	clrf	postdec2,c
 57780                           
 57781                           ;sw_timer.c: 306: }
 57782  008734  D032               	goto	i2l617
 57783  008736                     i2l615:
 57784                           
 57785                           ;sw_timer.c: 307: else
 57786                           ;sw_timer.c: 308: {
 57787                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 57788  008736  5031               	movf	i2SwTimersInterrupt@i,w,c
 57789  008738  0D08               	mullw	8
 57790  00873A  0E00               	movlw	low _swTimers
 57791  00873C  24F3               	addwf	prodl,w,c
 57792  00873E  6ED9               	movwf	fsr2l,c
 57793  008740  0E03               	movlw	high _swTimers
 57794  008742  20F4               	addwfc	prodh,w,c
 57795  008744  6EDA               	movwf	fsr2h,c
 57796  008746  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 57797  008748  5EDE               	subwf	postinc2,f,c
 57798  00874A  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 57799  00874C  5ADE               	subwfb	postinc2,f,c
 57800  00874E  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 57801  008750  5ADE               	subwfb	postinc2,f,c
 57802  008752  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 57803  008754  5ADE               	subwfb	postinc2,f,c
 57804                           
 57805                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 57806  008756  5031               	movf	i2SwTimersInterrupt@i,w,c
 57807  008758  0D08               	mullw	8
 57808  00875A  0E00               	movlw	low _swTimers
 57809  00875C  24F3               	addwf	prodl,w,c
 57810  00875E  6ED9               	movwf	fsr2l,c
 57811  008760  0E03               	movlw	high _swTimers
 57812  008762  20F4               	addwfc	prodh,w,c
 57813  008764  6EDA               	movwf	fsr2h,c
 57814  008766  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 57815  008768  5CDE               	subwf	postinc2,w,c
 57816  00876A  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 57817  00876C  58DE               	subwfb	postinc2,w,c
 57818  00876E  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 57819  008770  58DE               	subwfb	postinc2,w,c
 57820  008772  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 57821  008774  58DE               	subwfb	postinc2,w,c
 57822  008776  B0D8               	btfsc	status,0,c
 57823  008778  D010               	goto	i2l617
 57824                           
 57825                           ;sw_timer.c: 313: {
 57826                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 57827  00877A  5031               	movf	i2SwTimersInterrupt@i,w,c
 57828  00877C  0D08               	mullw	8
 57829  00877E  0E00               	movlw	low _swTimers
 57830  008780  24F3               	addwf	prodl,w,c
 57831  008782  6ED9               	movwf	fsr2l,c
 57832  008784  0E03               	movlw	high _swTimers
 57833  008786  20F4               	addwfc	prodh,w,c
 57834  008788  6EDA               	movwf	fsr2h,c
 57835  00878A  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 57836  00878E  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 57837  008792  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 57838  008796  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 57839  00879A                     i2l617:
 57840  00879A  2A31               	incf	i2SwTimersInterrupt@i,f,c
 57841  00879C                     i2l612:
 57842  00879C  0100               	movlb	0	; () banked
 57843  00879E  51FF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 57844  0087A0  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 57845  0087A2  A0D8               	btfss	status,0,c
 57846  0087A4  D79A               	goto	i2l613
 57847                           
 57848                           ; BSR set to: 0
 57849                           ;sw_timer.c: 315: }
 57850                           ;sw_timer.c: 316: }
 57851                           ;sw_timer.c: 317: }
 57852                           ;sw_timer.c: 318: }
 57853                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 57854  0087A6  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 57855  0087AA  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 57856  0087AE  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 57857  0087B2  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 57858                           
 57859                           ; BSR set to: 0
 57860  0087B6  0012               	return		;funcret
 57861  0087B8                     __end_ofi2_SwTimersInterrupt:
 57862                           	opt stack 0
 57863                           tosu	equ	0xFFF
 57864                           tosh	equ	0xFFE
 57865                           tosl	equ	0xFFD
 57866                           pclatu	equ	0xFFB
 57867                           pclath	equ	0xFFA
 57868                           tblptru	equ	0xFF8
 57869                           tblptrh	equ	0xFF7
 57870                           tblptrl	equ	0xFF6
 57871                           tablat	equ	0xFF5
 57872                           prodh	equ	0xFF4
 57873                           prodl	equ	0xFF3
 57874                           intcon	equ	0xFF2
 57875                           intcon2	equ	0xFF1
 57876                           intcon3	equ	0xFF0
 57877                           indf0	equ	0xFEF
 57878                           postinc0	equ	0xFEE
 57879                           plusw0	equ	0xFEB
 57880                           fsr0h	equ	0xFEA
 57881                           fsr0l	equ	0xFE9
 57882                           wreg	equ	0xFE8
 57883                           postinc1	equ	0xFE6
 57884                           postdec1	equ	0xFE5
 57885                           plusw1	equ	0xFE3
 57886                           fsr1h	equ	0xFE2
 57887                           fsr1l	equ	0xFE1
 57888                           indf2	equ	0xFDF
 57889                           postinc2	equ	0xFDE
 57890                           postdec2	equ	0xFDD
 57891                           plusw2	equ	0xFDB
 57892                           fsr2h	equ	0xFDA
 57893                           fsr2l	equ	0xFD9
 57894                           status	equ	0xFD8
 57895                           
 57896 ;; *************** function i2_TMR_GetDeltaTime *****************
 57897 ;; Defined at:
 57898 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 57899 ;; Parameters:    Size  Location     Type
 57900 ;;		None
 57901 ;; Auto vars:     Size  Location     Type
 57902 ;;		None
 57903 ;; Return value:  Size  Location     Type
 57904 ;;                  4    8[COMRAM] unsigned long 
 57905 ;; Registers used:
 57906 ;;		wreg, status,2, status,0, cstack
 57907 ;; Tracked objects:
 57908 ;;		On entry : 0/0
 57909 ;;		On exit  : 0/0
 57910 ;;		Unchanged: 0/0
 57911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 57912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57914 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57915 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 57916 ;;Total ram usage:       24 bytes
 57917 ;; Hardware stack levels used:    1
 57918 ;; Hardware stack levels required when called:    1
 57919 ;; This function calls:
 57920 ;;		i2_TMR1_ReadTimer
 57921 ;; This function is called by:
 57922 ;;		i2_SwTimersInterrupt
 57923 ;; This function uses a non-reentrant model
 57924 ;;
 57925                           
 57926                           	psect	text314
 57927  0072F6                     __ptext314:
 57928                           	opt stack 0
 57929  0072F6                     i2_TMR_GetDeltaTime:
 57930                           	opt stack 11
 57931                           
 57932                           ;sw_timer.c: 90: static uint32_t retVal;
 57933                           ;sw_timer.c: 91: static uint16_t tmrVal;
 57934                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 57935                           
 57936                           ; BSR set to: 0
 57937                           ;incstack = 0
 57938  0072F6  EC1B  F060         	call	i2_TMR1_ReadTimer	;wreg free
 57939  0072FA  C001  F124         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 57940  0072FE  C002  F125         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 57941                           
 57942                           ;sw_timer.c: 95: if (timerOverflow == 1)
 57943  007302  0447               	decf	_timerOverflow,w,c	;volatile
 57944  007304  A4D8               	btfss	status,2,c
 57945  007306  D066               	goto	i2l545
 57946                           
 57947                           ;sw_timer.c: 96: {
 57948                           ;sw_timer.c: 97: timerOverflow = 0;
 57949  007308  0E00               	movlw	0
 57950  00730A  6E47               	movwf	_timerOverflow,c	;volatile
 57951                           
 57952                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 57953  00730C  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 57954  007310  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 57955  007314  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 57956  007318  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 57957  00731C  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 57958  00731E  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 57959  007320  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 57960  007322  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 57961  007324  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 57962  007326  0E00               	movlw	0
 57963  007328  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 57964  00732A  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 57965  00732C  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 57966  00732E  5044               	movf	_reloadVal,w,c	;volatile
 57967  007330  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 57968  007332  5045               	movf	_reloadVal+1,w,c	;volatile
 57969  007334  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 57970  007336  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 57971  007338  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 57972  00733A  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 57973  00733C  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 57974  00733E  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 57975  007340  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 57976  007342  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 57977  007344  0E00               	movlw	0
 57978  007346  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 57979  007348  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 57980  00734A  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 57981  00734C  0101               	movlb	1	; () banked
 57982  00734E  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 57983  007350  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 57984  007352  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 57985  007354  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 57986  007356  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 57987  007358  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 57988  00735A  0E00               	movlw	0
 57989  00735C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 57990  00735E  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 57991  007360  0E00               	movlw	0
 57992  007362  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 57993  007364  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 57994  007366  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 57995  007368  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 57996  00736A  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 57997  00736C  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 57998  00736E  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 57999  007370  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 58000  007372  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 58001  007374  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 58002  007376  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 58003  007378  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 58004  00737A  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 58005  00737C  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 58006  00737E  5040               	movf	_ticksAdded,w,c	;volatile
 58007  007380  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 58008  007382  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 58009  007384  5041               	movf	_ticksAdded+1,w,c	;volatile
 58010  007386  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 58011  007388  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 58012  00738A  5042               	movf	_ticksAdded+2,w,c	;volatile
 58013  00738C  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 58014  00738E  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 58015  007390  5043               	movf	_ticksAdded+3,w,c	;volatile
 58016  007392  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 58017  007394  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 58018  007396  0E00               	movlw	0
 58019  007398  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 58020  00739A  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 58021  00739C  0E00               	movlw	0
 58022  00739E  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 58023  0073A0  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 58024  0073A2  0E01               	movlw	1
 58025  0073A4  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 58026  0073A6  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 58027  0073A8  0E00               	movlw	0
 58028  0073AA  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 58029  0073AC  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 58030                           
 58031                           ; BSR set to: 1
 58032                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 58033  0073AE  C124  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 58034  0073B2  C125  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 58035  0073B6  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 58036  0073B8  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 58037                           
 58038                           ; BSR set to: 1
 58039                           ;sw_timer.c: 100: ticksAdded = 0;
 58040  0073BA  0E00               	movlw	0
 58041  0073BC  6E40               	movwf	_ticksAdded,c	;volatile
 58042  0073BE  0E00               	movlw	0
 58043  0073C0  6E41               	movwf	_ticksAdded+1,c	;volatile
 58044  0073C2  0E00               	movlw	0
 58045  0073C4  6E42               	movwf	_ticksAdded+2,c	;volatile
 58046  0073C6  0E00               	movlw	0
 58047  0073C8  6E43               	movwf	_ticksAdded+3,c	;volatile
 58048                           
 58049                           ; BSR set to: 1
 58050                           ;sw_timer.c: 101: reloadVal = 0;
 58051  0073CA  0E00               	movlw	0
 58052  0073CC  6E45               	movwf	_reloadVal+1,c	;volatile
 58053  0073CE  0E00               	movlw	0
 58054  0073D0  6E44               	movwf	_reloadVal,c	;volatile
 58055                           
 58056                           ;sw_timer.c: 102: }
 58057  0073D2  D03E               	goto	i2l546
 58058  0073D4                     i2l545:
 58059                           
 58060                           ;sw_timer.c: 103: else
 58061                           ;sw_timer.c: 104: {
 58062                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 58063                           
 58064                           ; BSR set to: 1
 58065  0073D4  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 58066  0073D8  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 58067  0073DC  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 58068  0073E0  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 58069  0073E4  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 58070  0073E6  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 58071  0073E8  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 58072  0073EA  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 58073  0073EC  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 58074  0073EE  0E00               	movlw	0
 58075  0073F0  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 58076  0073F2  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 58077  0073F4  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 58078  0073F6  C044  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 58079  0073FA  C045  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 58080  0073FE  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 58081  007400  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 58082  007402  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 58083  007404  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 58084  007406  0101               	movlb	1	; () banked
 58085  007408  5124               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 58086  00740A  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 58087  00740C  5125               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 58088  00740E  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 58089  007410  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 58090  007412  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 58091  007414  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 58092  007416  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 58093  007418  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 58094  00741A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 58095  00741C  0E00               	movlw	0
 58096  00741E  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 58097  007420  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 58098  007422  0E00               	movlw	0
 58099  007424  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 58100  007426  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 58101  007428  5040               	movf	_ticksAdded,w,c	;volatile
 58102  00742A  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 58103  00742C  6F10               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 58104  00742E  5041               	movf	_ticksAdded+1,w,c	;volatile
 58105  007430  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 58106  007432  6F11               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 58107  007434  5042               	movf	_ticksAdded+2,w,c	;volatile
 58108  007436  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 58109  007438  6F12               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 58110  00743A  5043               	movf	_ticksAdded+3,w,c	;volatile
 58111  00743C  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 58112  00743E  6F13               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 58113                           
 58114                           ;sw_timer.c: 106: ticksAccounted += retVal;
 58115  007440  5110               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 58116  007442  263C               	addwf	_ticksAccounted,f,c	;volatile
 58117  007444  5111               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 58118  007446  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 58119  007448  5112               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 58120  00744A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 58121  00744C  5113               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 58122  00744E  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 58123  007450                     i2l546:
 58124                           
 58125                           ; BSR set to: 1
 58126                           ;sw_timer.c: 107: }
 58127                           ;sw_timer.c: 109: return retVal;
 58128                           
 58129                           ; BSR set to: 1
 58130  007450  C110  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 58131  007454  C111  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 58132  007458  C112  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 58133  00745C  C113  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 58134  007460  0012               	return	
 58135  007462                     __end_ofi2_TMR_GetDeltaTime:
 58136                           	opt stack 0
 58137                           tosu	equ	0xFFF
 58138                           tosh	equ	0xFFE
 58139                           tosl	equ	0xFFD
 58140                           pclatu	equ	0xFFB
 58141                           pclath	equ	0xFFA
 58142                           tblptru	equ	0xFF8
 58143                           tblptrh	equ	0xFF7
 58144                           tblptrl	equ	0xFF6
 58145                           tablat	equ	0xFF5
 58146                           prodh	equ	0xFF4
 58147                           prodl	equ	0xFF3
 58148                           intcon	equ	0xFF2
 58149                           intcon2	equ	0xFF1
 58150                           intcon3	equ	0xFF0
 58151                           indf0	equ	0xFEF
 58152                           postinc0	equ	0xFEE
 58153                           plusw0	equ	0xFEB
 58154                           fsr0h	equ	0xFEA
 58155                           fsr0l	equ	0xFE9
 58156                           wreg	equ	0xFE8
 58157                           postinc1	equ	0xFE6
 58158                           postdec1	equ	0xFE5
 58159                           plusw1	equ	0xFE3
 58160                           fsr1h	equ	0xFE2
 58161                           fsr1l	equ	0xFE1
 58162                           indf2	equ	0xFDF
 58163                           postinc2	equ	0xFDE
 58164                           postdec2	equ	0xFDD
 58165                           plusw2	equ	0xFDB
 58166                           fsr2h	equ	0xFDA
 58167                           fsr2l	equ	0xFD9
 58168                           status	equ	0xFD8
 58169                           
 58170 ;; *************** function i2_TMR1_ReadTimer *****************
 58171 ;; Defined at:
 58172 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 58173 ;; Parameters:    Size  Location     Type
 58174 ;;		None
 58175 ;; Auto vars:     Size  Location     Type
 58176 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 58177 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 58178 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 58179 ;; Return value:  Size  Location     Type
 58180 ;;                  2    0[COMRAM] unsigned int 
 58181 ;; Registers used:
 58182 ;;		wreg, status,2
 58183 ;; Tracked objects:
 58184 ;;		On entry : 0/0
 58185 ;;		On exit  : 0/0
 58186 ;;		Unchanged: 0/0
 58187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58189 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58191 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58192 ;;Total ram usage:        8 bytes
 58193 ;; Hardware stack levels used:    1
 58194 ;; This function calls:
 58195 ;;		Nothing
 58196 ;; This function is called by:
 58197 ;;		i2_TMR_GetDeltaTime
 58198 ;;		i2_TMR_SwapTimer
 58199 ;; This function uses a non-reentrant model
 58200 ;;
 58201                           
 58202                           	psect	text315
 58203  00C036                     __ptext315:
 58204                           	opt stack 0
 58205  00C036                     i2_TMR1_ReadTimer:
 58206                           	opt stack 12
 58207                           
 58208                           ;tmr1.c: 107: uint16_t readVal;
 58209                           ;tmr1.c: 108: uint8_t readValHigh;
 58210                           ;tmr1.c: 109: uint8_t readValLow;
 58211                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 58212                           
 58213                           ; BSR set to: 1
 58214                           ;incstack = 0
 58215  00C036  82CD               	bsf	4045,1,c	;volatile
 58216                           
 58217                           ;tmr1.c: 113: readValLow = TMR1L;
 58218  00C038  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 58219                           
 58220                           ;tmr1.c: 114: readValHigh = TMR1H;
 58221  00C03C  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 58222                           
 58223                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 58224  00C040  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 58225  00C042  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 58226  00C044  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 58227  00C046  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 58228  00C048  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 58229                           
 58230                           ;tmr1.c: 118: return readVal;
 58231  00C04C  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 58232  00C050  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 58233  00C054  0012               	return	
 58234  00C056                     __end_ofi2_TMR1_ReadTimer:
 58235                           	opt stack 0
 58236                           tosu	equ	0xFFF
 58237                           tosh	equ	0xFFE
 58238                           tosl	equ	0xFFD
 58239                           pclatu	equ	0xFFB
 58240                           pclath	equ	0xFFA
 58241                           tblptru	equ	0xFF8
 58242                           tblptrh	equ	0xFF7
 58243                           tblptrl	equ	0xFF6
 58244                           tablat	equ	0xFF5
 58245                           prodh	equ	0xFF4
 58246                           prodl	equ	0xFF3
 58247                           intcon	equ	0xFF2
 58248                           intcon2	equ	0xFF1
 58249                           intcon3	equ	0xFF0
 58250                           indf0	equ	0xFEF
 58251                           postinc0	equ	0xFEE
 58252                           plusw0	equ	0xFEB
 58253                           fsr0h	equ	0xFEA
 58254                           fsr0l	equ	0xFE9
 58255                           wreg	equ	0xFE8
 58256                           postinc1	equ	0xFE6
 58257                           postdec1	equ	0xFE5
 58258                           plusw1	equ	0xFE3
 58259                           fsr1h	equ	0xFE2
 58260                           fsr1l	equ	0xFE1
 58261                           indf2	equ	0xFDF
 58262                           postinc2	equ	0xFDE
 58263                           postdec2	equ	0xFDD
 58264                           plusw2	equ	0xFDB
 58265                           fsr2h	equ	0xFDA
 58266                           fsr2l	equ	0xFD9
 58267                           status	equ	0xFD8
 58268                           
 58269 ;; *************** function _PIN_MANAGER_IOC *****************
 58270 ;; Defined at:
 58271 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 58272 ;; Parameters:    Size  Location     Type
 58273 ;;		None
 58274 ;; Auto vars:     Size  Location     Type
 58275 ;;		None
 58276 ;; Return value:  Size  Location     Type
 58277 ;;                  1    wreg      void 
 58278 ;; Registers used:
 58279 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58280 ;; Tracked objects:
 58281 ;;		On entry : 0/0
 58282 ;;		On exit  : 0/0
 58283 ;;		Unchanged: 0/0
 58284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58289 ;;Total ram usage:        0 bytes
 58290 ;; Hardware stack levels used:    1
 58291 ;; Hardware stack levels required when called:    2
 58292 ;; This function calls:
 58293 ;;		_IOCB4_ISR
 58294 ;; This function is called by:
 58295 ;;		_INTERRUPT_InterruptManager
 58296 ;; This function uses a non-reentrant model
 58297 ;;
 58298                           
 58299                           	psect	text316
 58300  00C5FA                     __ptext316:
 58301                           	opt stack 0
 58302  00C5FA                     _PIN_MANAGER_IOC:
 58303                           	opt stack 14
 58304                           
 58305                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 58306                           
 58307                           ;incstack = 0
 58308  00C5FA  B862               	btfsc	3938,4,c	;volatile
 58309                           
 58310                           ;pin_manager.c: 114: {
 58311                           ;pin_manager.c: 115: IOCB4_ISR();
 58312  00C5FC  EC2B  F060         	call	_IOCB4_ISR	;wreg free
 58313                           
 58314                           ;pin_manager.c: 116: }
 58315                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 58316  00C600  90F2               	bcf	intcon,0,c	;volatile
 58317  00C602  0012               	return		;funcret
 58318  00C604                     __end_of_PIN_MANAGER_IOC:
 58319                           	opt stack 0
 58320                           tosu	equ	0xFFF
 58321                           tosh	equ	0xFFE
 58322                           tosl	equ	0xFFD
 58323                           pclatu	equ	0xFFB
 58324                           pclath	equ	0xFFA
 58325                           tblptru	equ	0xFF8
 58326                           tblptrh	equ	0xFF7
 58327                           tblptrl	equ	0xFF6
 58328                           tablat	equ	0xFF5
 58329                           prodh	equ	0xFF4
 58330                           prodl	equ	0xFF3
 58331                           intcon	equ	0xFF2
 58332                           intcon2	equ	0xFF1
 58333                           intcon3	equ	0xFF0
 58334                           indf0	equ	0xFEF
 58335                           postinc0	equ	0xFEE
 58336                           plusw0	equ	0xFEB
 58337                           fsr0h	equ	0xFEA
 58338                           fsr0l	equ	0xFE9
 58339                           wreg	equ	0xFE8
 58340                           postinc1	equ	0xFE6
 58341                           postdec1	equ	0xFE5
 58342                           plusw1	equ	0xFE3
 58343                           fsr1h	equ	0xFE2
 58344                           fsr1l	equ	0xFE1
 58345                           indf2	equ	0xFDF
 58346                           postinc2	equ	0xFDE
 58347                           postdec2	equ	0xFDD
 58348                           plusw2	equ	0xFDB
 58349                           fsr2h	equ	0xFDA
 58350                           fsr2l	equ	0xFD9
 58351                           status	equ	0xFD8
 58352                           
 58353 ;; *************** function _IOCB4_ISR *****************
 58354 ;; Defined at:
 58355 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 58356 ;; Parameters:    Size  Location     Type
 58357 ;;		None
 58358 ;; Auto vars:     Size  Location     Type
 58359 ;;		None
 58360 ;; Return value:  Size  Location     Type
 58361 ;;                  1    wreg      void 
 58362 ;; Registers used:
 58363 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58364 ;; Tracked objects:
 58365 ;;		On entry : 0/0
 58366 ;;		On exit  : 0/0
 58367 ;;		Unchanged: 0/0
 58368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58373 ;;Total ram usage:        0 bytes
 58374 ;; Hardware stack levels used:    1
 58375 ;; Hardware stack levels required when called:    1
 58376 ;; This function calls:
 58377 ;;		Absolute function
 58378 ;;		_DIO2_ISR_Lora
 58379 ;;		_IOCB4_DefaultInterruptHandler
 58380 ;; This function is called by:
 58381 ;;		_PIN_MANAGER_IOC
 58382 ;; This function uses a non-reentrant model
 58383 ;;
 58384                           
 58385                           	psect	text317
 58386  00C056                     __ptext317:
 58387                           	opt stack 0
 58388  00C056                     _IOCB4_ISR:
 58389                           	opt stack 14
 58390                           
 58391                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 58392                           
 58393                           ;incstack = 0
 58394  00C056  0103               	movlb	3	; () banked
 58395  00C058  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 58396  00C05A  11FB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 58397  00C05C  B4D8               	btfsc	status,2,c
 58398  00C05E  0012               	return	
 58399                           
 58400                           ; BSR set to: 3
 58401                           ;pin_manager.c: 130: {
 58402                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 58403  00C060  D801               	call	i2u2874_48
 58404  00C062  0012               	return	
 58405  00C064                     i2u2874_48:
 58406  00C064  0005               	push	
 58407  00C066  6EFA               	movwf	pclath,c
 58408  00C068  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 58409  00C06A  6EFD               	movwf	tosl,c
 58410  00C06C  51FB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 58411  00C06E  6EFE               	movwf	tosh,c
 58412  00C070  6AFF               	clrf	tosu,c
 58413  00C072  50FA               	movf	pclath,w,c
 58414  00C074  0012               	return		;indir
 58415  00C076                     __end_of_IOCB4_ISR:
 58416                           	opt stack 0
 58417                           tosu	equ	0xFFF
 58418                           tosh	equ	0xFFE
 58419                           tosl	equ	0xFFD
 58420                           pclatu	equ	0xFFB
 58421                           pclath	equ	0xFFA
 58422                           tblptru	equ	0xFF8
 58423                           tblptrh	equ	0xFF7
 58424                           tblptrl	equ	0xFF6
 58425                           tablat	equ	0xFF5
 58426                           prodh	equ	0xFF4
 58427                           prodl	equ	0xFF3
 58428                           intcon	equ	0xFF2
 58429                           intcon2	equ	0xFF1
 58430                           intcon3	equ	0xFF0
 58431                           indf0	equ	0xFEF
 58432                           postinc0	equ	0xFEE
 58433                           plusw0	equ	0xFEB
 58434                           fsr0h	equ	0xFEA
 58435                           fsr0l	equ	0xFE9
 58436                           wreg	equ	0xFE8
 58437                           postinc1	equ	0xFE6
 58438                           postdec1	equ	0xFE5
 58439                           plusw1	equ	0xFE3
 58440                           fsr1h	equ	0xFE2
 58441                           fsr1l	equ	0xFE1
 58442                           indf2	equ	0xFDF
 58443                           postinc2	equ	0xFDE
 58444                           postdec2	equ	0xFDD
 58445                           plusw2	equ	0xFDB
 58446                           fsr2h	equ	0xFDA
 58447                           fsr2l	equ	0xFD9
 58448                           status	equ	0xFD8
 58449                           
 58450 ;; *************** function _DIO2_ISR_Lora *****************
 58451 ;; Defined at:
 58452 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 58453 ;; Parameters:    Size  Location     Type
 58454 ;;		None
 58455 ;; Auto vars:     Size  Location     Type
 58456 ;;		None
 58457 ;; Return value:  Size  Location     Type
 58458 ;;                  1    wreg      void 
 58459 ;; Registers used:
 58460 ;;		status,2, status,0
 58461 ;; Tracked objects:
 58462 ;;		On entry : 0/0
 58463 ;;		On exit  : 0/0
 58464 ;;		Unchanged: 0/0
 58465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58470 ;;Total ram usage:        0 bytes
 58471 ;; Hardware stack levels used:    1
 58472 ;; This function calls:
 58473 ;;		Nothing
 58474 ;; This function is called by:
 58475 ;;		_DIO2_ISR_Lora_Init
 58476 ;;		_IOCB4_ISR
 58477 ;; This function uses a non-reentrant model
 58478 ;;
 58479                           
 58480                           	psect	text318
 58481  00C67A                     __ptext318:
 58482                           	opt stack 0
 58483  00C67A                     _DIO2_ISR_Lora:
 58484                           	opt stack 14
 58485                           
 58486                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 58487                           
 58488                           ;incstack = 0
 58489  00C67A  0101               	movlb	1	; () banked
 58490  00C67C  8534               	bsf	_dioStatus& (0+255),2,b	;volatile
 58491                           
 58492                           ; BSR set to: 1
 58493  00C67E  0012               	return		;funcret
 58494  00C680                     __end_of_DIO2_ISR_Lora:
 58495                           	opt stack 0
 58496                           tosu	equ	0xFFF
 58497                           tosh	equ	0xFFE
 58498                           tosl	equ	0xFFD
 58499                           pclatu	equ	0xFFB
 58500                           pclath	equ	0xFFA
 58501                           tblptru	equ	0xFF8
 58502                           tblptrh	equ	0xFF7
 58503                           tblptrl	equ	0xFF6
 58504                           tablat	equ	0xFF5
 58505                           prodh	equ	0xFF4
 58506                           prodl	equ	0xFF3
 58507                           intcon	equ	0xFF2
 58508                           intcon2	equ	0xFF1
 58509                           intcon3	equ	0xFF0
 58510                           indf0	equ	0xFEF
 58511                           postinc0	equ	0xFEE
 58512                           plusw0	equ	0xFEB
 58513                           fsr0h	equ	0xFEA
 58514                           fsr0l	equ	0xFE9
 58515                           wreg	equ	0xFE8
 58516                           postinc1	equ	0xFE6
 58517                           postdec1	equ	0xFE5
 58518                           plusw1	equ	0xFE3
 58519                           fsr1h	equ	0xFE2
 58520                           fsr1l	equ	0xFE1
 58521                           indf2	equ	0xFDF
 58522                           postinc2	equ	0xFDE
 58523                           postdec2	equ	0xFDD
 58524                           plusw2	equ	0xFDB
 58525                           fsr2h	equ	0xFDA
 58526                           fsr2l	equ	0xFD9
 58527                           status	equ	0xFD8
 58528                           
 58529 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 58530 ;; Defined at:
 58531 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 58532 ;; Parameters:    Size  Location     Type
 58533 ;;		None
 58534 ;; Auto vars:     Size  Location     Type
 58535 ;;		None
 58536 ;; Return value:  Size  Location     Type
 58537 ;;                  1    wreg      void 
 58538 ;; Registers used:
 58539 ;;		None
 58540 ;; Tracked objects:
 58541 ;;		On entry : 0/0
 58542 ;;		On exit  : 0/0
 58543 ;;		Unchanged: 0/0
 58544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58549 ;;Total ram usage:        0 bytes
 58550 ;; Hardware stack levels used:    1
 58551 ;; This function calls:
 58552 ;;		Nothing
 58553 ;; This function is called by:
 58554 ;;		_PIN_MANAGER_Initialize
 58555 ;;		_IOCB4_ISR
 58556 ;; This function uses a non-reentrant model
 58557 ;;
 58558                           
 58559                           	psect	text319
 58560  00C6E6                     __ptext319:
 58561                           	opt stack 0
 58562  00C6E6                     _IOCB4_DefaultInterruptHandler:
 58563                           	opt stack 14
 58564                           
 58565                           ; BSR set to: 1
 58566                           ;incstack = 0
 58567  00C6E6  0012               	return		;funcret
 58568  00C6E8                     __end_of_IOCB4_DefaultInterruptHandler:
 58569                           	opt stack 0
 58570                           tosu	equ	0xFFF
 58571                           tosh	equ	0xFFE
 58572                           tosl	equ	0xFFD
 58573                           pclatu	equ	0xFFB
 58574                           pclath	equ	0xFFA
 58575                           tblptru	equ	0xFF8
 58576                           tblptrh	equ	0xFF7
 58577                           tblptrl	equ	0xFF6
 58578                           tablat	equ	0xFF5
 58579                           prodh	equ	0xFF4
 58580                           prodl	equ	0xFF3
 58581                           intcon	equ	0xFF2
 58582                           intcon2	equ	0xFF1
 58583                           intcon3	equ	0xFF0
 58584                           indf0	equ	0xFEF
 58585                           postinc0	equ	0xFEE
 58586                           plusw0	equ	0xFEB
 58587                           fsr0h	equ	0xFEA
 58588                           fsr0l	equ	0xFE9
 58589                           wreg	equ	0xFE8
 58590                           postinc1	equ	0xFE6
 58591                           postdec1	equ	0xFE5
 58592                           plusw1	equ	0xFE3
 58593                           fsr1h	equ	0xFE2
 58594                           fsr1l	equ	0xFE1
 58595                           indf2	equ	0xFDF
 58596                           postinc2	equ	0xFDE
 58597                           postdec2	equ	0xFDD
 58598                           plusw2	equ	0xFDB
 58599                           fsr2h	equ	0xFDA
 58600                           fsr2l	equ	0xFD9
 58601                           status	equ	0xFD8
 58602                           
 58603 ;; *************** function _INT2_ISR *****************
 58604 ;; Defined at:
 58605 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 58606 ;; Parameters:    Size  Location     Type
 58607 ;;		None
 58608 ;; Auto vars:     Size  Location     Type
 58609 ;;		None
 58610 ;; Return value:  Size  Location     Type
 58611 ;;                  1    wreg      void 
 58612 ;; Registers used:
 58613 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58614 ;; Tracked objects:
 58615 ;;		On entry : 0/0
 58616 ;;		On exit  : 0/0
 58617 ;;		Unchanged: 0/0
 58618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58623 ;;Total ram usage:        0 bytes
 58624 ;; Hardware stack levels used:    1
 58625 ;; Hardware stack levels required when called:    2
 58626 ;; This function calls:
 58627 ;;		_INT2_CallBack
 58628 ;; This function is called by:
 58629 ;;		_INTERRUPT_InterruptManager
 58630 ;; This function uses a non-reentrant model
 58631 ;;
 58632                           
 58633                           	psect	text320
 58634  00C64C                     __ptext320:
 58635                           	opt stack 0
 58636  00C64C                     _INT2_ISR:
 58637                           	opt stack 14
 58638                           
 58639                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 58640                           
 58641                           ;incstack = 0
 58642  00C64C  92F0               	bcf	intcon3,1,c	;volatile
 58643                           
 58644                           ;ext_int.c: 64: INT2_CallBack();
 58645  00C64E  EC3B  F060         	call	_INT2_CallBack	;wreg free
 58646  00C652  0012               	return		;funcret
 58647  00C654                     __end_of_INT2_ISR:
 58648                           	opt stack 0
 58649                           tosu	equ	0xFFF
 58650                           tosh	equ	0xFFE
 58651                           tosl	equ	0xFFD
 58652                           pclatu	equ	0xFFB
 58653                           pclath	equ	0xFFA
 58654                           tblptru	equ	0xFF8
 58655                           tblptrh	equ	0xFF7
 58656                           tblptrl	equ	0xFF6
 58657                           tablat	equ	0xFF5
 58658                           prodh	equ	0xFF4
 58659                           prodl	equ	0xFF3
 58660                           intcon	equ	0xFF2
 58661                           intcon2	equ	0xFF1
 58662                           intcon3	equ	0xFF0
 58663                           indf0	equ	0xFEF
 58664                           postinc0	equ	0xFEE
 58665                           plusw0	equ	0xFEB
 58666                           fsr0h	equ	0xFEA
 58667                           fsr0l	equ	0xFE9
 58668                           wreg	equ	0xFE8
 58669                           postinc1	equ	0xFE6
 58670                           postdec1	equ	0xFE5
 58671                           plusw1	equ	0xFE3
 58672                           fsr1h	equ	0xFE2
 58673                           fsr1l	equ	0xFE1
 58674                           indf2	equ	0xFDF
 58675                           postinc2	equ	0xFDE
 58676                           postdec2	equ	0xFDD
 58677                           plusw2	equ	0xFDB
 58678                           fsr2h	equ	0xFDA
 58679                           fsr2l	equ	0xFD9
 58680                           status	equ	0xFD8
 58681                           
 58682 ;; *************** function _INT2_CallBack *****************
 58683 ;; Defined at:
 58684 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 58685 ;; Parameters:    Size  Location     Type
 58686 ;;		None
 58687 ;; Auto vars:     Size  Location     Type
 58688 ;;		None
 58689 ;; Return value:  Size  Location     Type
 58690 ;;                  1    wreg      void 
 58691 ;; Registers used:
 58692 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58693 ;; Tracked objects:
 58694 ;;		On entry : 0/0
 58695 ;;		On exit  : 0/0
 58696 ;;		Unchanged: 0/0
 58697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58702 ;;Total ram usage:        0 bytes
 58703 ;; Hardware stack levels used:    1
 58704 ;; Hardware stack levels required when called:    1
 58705 ;; This function calls:
 58706 ;;		Absolute function
 58707 ;;		_DIO1_ISR_Lora
 58708 ;;		_INT2_DefaultInterruptHandler
 58709 ;; This function is called by:
 58710 ;;		_INT2_ISR
 58711 ;; This function uses a non-reentrant model
 58712 ;;
 58713                           
 58714                           	psect	text321
 58715  00C076                     __ptext321:
 58716                           	opt stack 0
 58717  00C076                     _INT2_CallBack:
 58718                           	opt stack 14
 58719                           
 58720                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 58721                           
 58722                           ;incstack = 0
 58723  00C076  0102               	movlb	2	; () banked
 58724  00C078  51FD               	movf	_INT2_InterruptHandler& (0+255),w,b
 58725  00C07A  11FE               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 58726  00C07C  B4D8               	btfsc	status,2,c
 58727  00C07E  0012               	return	
 58728                           
 58729                           ; BSR set to: 2
 58730                           ;ext_int.c: 72: {
 58731                           ;ext_int.c: 73: INT2_InterruptHandler();
 58732  00C080  D801               	call	i2u2872_48
 58733  00C082  0012               	return	
 58734  00C084                     i2u2872_48:
 58735  00C084  0005               	push	
 58736  00C086  6EFA               	movwf	pclath,c
 58737  00C088  51FD               	movf	_INT2_InterruptHandler& (0+255),w,b
 58738  00C08A  6EFD               	movwf	tosl,c
 58739  00C08C  51FE               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 58740  00C08E  6EFE               	movwf	tosh,c
 58741  00C090  6AFF               	clrf	tosu,c
 58742  00C092  50FA               	movf	pclath,w,c
 58743  00C094  0012               	return		;indir
 58744  00C096                     __end_of_INT2_CallBack:
 58745                           	opt stack 0
 58746                           tosu	equ	0xFFF
 58747                           tosh	equ	0xFFE
 58748                           tosl	equ	0xFFD
 58749                           pclatu	equ	0xFFB
 58750                           pclath	equ	0xFFA
 58751                           tblptru	equ	0xFF8
 58752                           tblptrh	equ	0xFF7
 58753                           tblptrl	equ	0xFF6
 58754                           tablat	equ	0xFF5
 58755                           prodh	equ	0xFF4
 58756                           prodl	equ	0xFF3
 58757                           intcon	equ	0xFF2
 58758                           intcon2	equ	0xFF1
 58759                           intcon3	equ	0xFF0
 58760                           indf0	equ	0xFEF
 58761                           postinc0	equ	0xFEE
 58762                           plusw0	equ	0xFEB
 58763                           fsr0h	equ	0xFEA
 58764                           fsr0l	equ	0xFE9
 58765                           wreg	equ	0xFE8
 58766                           postinc1	equ	0xFE6
 58767                           postdec1	equ	0xFE5
 58768                           plusw1	equ	0xFE3
 58769                           fsr1h	equ	0xFE2
 58770                           fsr1l	equ	0xFE1
 58771                           indf2	equ	0xFDF
 58772                           postinc2	equ	0xFDE
 58773                           postdec2	equ	0xFDD
 58774                           plusw2	equ	0xFDB
 58775                           fsr2h	equ	0xFDA
 58776                           fsr2l	equ	0xFD9
 58777                           status	equ	0xFD8
 58778                           
 58779 ;; *************** function _DIO1_ISR_Lora *****************
 58780 ;; Defined at:
 58781 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 58782 ;; Parameters:    Size  Location     Type
 58783 ;;		None
 58784 ;; Auto vars:     Size  Location     Type
 58785 ;;		None
 58786 ;; Return value:  Size  Location     Type
 58787 ;;                  1    wreg      void 
 58788 ;; Registers used:
 58789 ;;		status,2, status,0
 58790 ;; Tracked objects:
 58791 ;;		On entry : 0/0
 58792 ;;		On exit  : 0/0
 58793 ;;		Unchanged: 0/0
 58794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58799 ;;Total ram usage:        0 bytes
 58800 ;; Hardware stack levels used:    1
 58801 ;; This function calls:
 58802 ;;		Nothing
 58803 ;; This function is called by:
 58804 ;;		_DIO1_ISR_Lora_Init
 58805 ;;		_INT2_CallBack
 58806 ;; This function uses a non-reentrant model
 58807 ;;
 58808                           
 58809                           	psect	text322
 58810  00C680                     __ptext322:
 58811                           	opt stack 0
 58812  00C680                     _DIO1_ISR_Lora:
 58813                           	opt stack 14
 58814                           
 58815                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 58816                           
 58817                           ;incstack = 0
 58818  00C680  0101               	movlb	1	; () banked
 58819  00C682  8334               	bsf	_dioStatus& (0+255),1,b	;volatile
 58820                           
 58821                           ; BSR set to: 1
 58822  00C684  0012               	return		;funcret
 58823  00C686                     __end_of_DIO1_ISR_Lora:
 58824                           	opt stack 0
 58825                           tosu	equ	0xFFF
 58826                           tosh	equ	0xFFE
 58827                           tosl	equ	0xFFD
 58828                           pclatu	equ	0xFFB
 58829                           pclath	equ	0xFFA
 58830                           tblptru	equ	0xFF8
 58831                           tblptrh	equ	0xFF7
 58832                           tblptrl	equ	0xFF6
 58833                           tablat	equ	0xFF5
 58834                           prodh	equ	0xFF4
 58835                           prodl	equ	0xFF3
 58836                           intcon	equ	0xFF2
 58837                           intcon2	equ	0xFF1
 58838                           intcon3	equ	0xFF0
 58839                           indf0	equ	0xFEF
 58840                           postinc0	equ	0xFEE
 58841                           plusw0	equ	0xFEB
 58842                           fsr0h	equ	0xFEA
 58843                           fsr0l	equ	0xFE9
 58844                           wreg	equ	0xFE8
 58845                           postinc1	equ	0xFE6
 58846                           postdec1	equ	0xFE5
 58847                           plusw1	equ	0xFE3
 58848                           fsr1h	equ	0xFE2
 58849                           fsr1l	equ	0xFE1
 58850                           indf2	equ	0xFDF
 58851                           postinc2	equ	0xFDE
 58852                           postdec2	equ	0xFDD
 58853                           plusw2	equ	0xFDB
 58854                           fsr2h	equ	0xFDA
 58855                           fsr2l	equ	0xFD9
 58856                           status	equ	0xFD8
 58857                           
 58858 ;; *************** function _INT2_DefaultInterruptHandler *****************
 58859 ;; Defined at:
 58860 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 58861 ;; Parameters:    Size  Location     Type
 58862 ;;		None
 58863 ;; Auto vars:     Size  Location     Type
 58864 ;;		None
 58865 ;; Return value:  Size  Location     Type
 58866 ;;                  1    wreg      void 
 58867 ;; Registers used:
 58868 ;;		None
 58869 ;; Tracked objects:
 58870 ;;		On entry : 0/0
 58871 ;;		On exit  : 0/0
 58872 ;;		Unchanged: 0/0
 58873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58878 ;;Total ram usage:        0 bytes
 58879 ;; Hardware stack levels used:    1
 58880 ;; This function calls:
 58881 ;;		Nothing
 58882 ;; This function is called by:
 58883 ;;		_EXT_INT_Initialize
 58884 ;;		_INT2_CallBack
 58885 ;; This function uses a non-reentrant model
 58886 ;;
 58887                           
 58888                           	psect	text323
 58889  00C6E8                     __ptext323:
 58890                           	opt stack 0
 58891  00C6E8                     _INT2_DefaultInterruptHandler:
 58892                           	opt stack 14
 58893                           
 58894                           ; BSR set to: 1
 58895                           ;incstack = 0
 58896  00C6E8  0012               	return		;funcret
 58897  00C6EA                     __end_of_INT2_DefaultInterruptHandler:
 58898                           	opt stack 0
 58899                           tosu	equ	0xFFF
 58900                           tosh	equ	0xFFE
 58901                           tosl	equ	0xFFD
 58902                           pclatu	equ	0xFFB
 58903                           pclath	equ	0xFFA
 58904                           tblptru	equ	0xFF8
 58905                           tblptrh	equ	0xFF7
 58906                           tblptrl	equ	0xFF6
 58907                           tablat	equ	0xFF5
 58908                           prodh	equ	0xFF4
 58909                           prodl	equ	0xFF3
 58910                           intcon	equ	0xFF2
 58911                           intcon2	equ	0xFF1
 58912                           intcon3	equ	0xFF0
 58913                           indf0	equ	0xFEF
 58914                           postinc0	equ	0xFEE
 58915                           plusw0	equ	0xFEB
 58916                           fsr0h	equ	0xFEA
 58917                           fsr0l	equ	0xFE9
 58918                           wreg	equ	0xFE8
 58919                           postinc1	equ	0xFE6
 58920                           postdec1	equ	0xFE5
 58921                           plusw1	equ	0xFE3
 58922                           fsr1h	equ	0xFE2
 58923                           fsr1l	equ	0xFE1
 58924                           indf2	equ	0xFDF
 58925                           postinc2	equ	0xFDE
 58926                           postdec2	equ	0xFDD
 58927                           plusw2	equ	0xFDB
 58928                           fsr2h	equ	0xFDA
 58929                           fsr2l	equ	0xFD9
 58930                           status	equ	0xFD8
 58931                           
 58932 ;; *************** function _INT1_ISR *****************
 58933 ;; Defined at:
 58934 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 58935 ;; Parameters:    Size  Location     Type
 58936 ;;		None
 58937 ;; Auto vars:     Size  Location     Type
 58938 ;;		None
 58939 ;; Return value:  Size  Location     Type
 58940 ;;                  1    wreg      void 
 58941 ;; Registers used:
 58942 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 58943 ;; Tracked objects:
 58944 ;;		On entry : 0/0
 58945 ;;		On exit  : 0/0
 58946 ;;		Unchanged: 0/0
 58947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 58948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 58952 ;;Total ram usage:        0 bytes
 58953 ;; Hardware stack levels used:    1
 58954 ;; Hardware stack levels required when called:    2
 58955 ;; This function calls:
 58956 ;;		_INT1_CallBack
 58957 ;; This function is called by:
 58958 ;;		_INTERRUPT_InterruptManager
 58959 ;; This function uses a non-reentrant model
 58960 ;;
 58961                           
 58962                           	psect	text324
 58963  00C654                     __ptext324:
 58964                           	opt stack 0
 58965  00C654                     _INT1_ISR:
 58966                           	opt stack 14
 58967                           
 58968                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 58969                           
 58970                           ;incstack = 0
 58971  00C654  90F0               	bcf	intcon3,0,c	;volatile
 58972                           
 58973                           ;ext_int.c: 38: INT1_CallBack();
 58974  00C656  EC4B  F060         	call	_INT1_CallBack	;wreg free
 58975  00C65A  0012               	return		;funcret
 58976  00C65C                     __end_of_INT1_ISR:
 58977                           	opt stack 0
 58978                           tosu	equ	0xFFF
 58979                           tosh	equ	0xFFE
 58980                           tosl	equ	0xFFD
 58981                           pclatu	equ	0xFFB
 58982                           pclath	equ	0xFFA
 58983                           tblptru	equ	0xFF8
 58984                           tblptrh	equ	0xFF7
 58985                           tblptrl	equ	0xFF6
 58986                           tablat	equ	0xFF5
 58987                           prodh	equ	0xFF4
 58988                           prodl	equ	0xFF3
 58989                           intcon	equ	0xFF2
 58990                           intcon2	equ	0xFF1
 58991                           intcon3	equ	0xFF0
 58992                           indf0	equ	0xFEF
 58993                           postinc0	equ	0xFEE
 58994                           plusw0	equ	0xFEB
 58995                           fsr0h	equ	0xFEA
 58996                           fsr0l	equ	0xFE9
 58997                           wreg	equ	0xFE8
 58998                           postinc1	equ	0xFE6
 58999                           postdec1	equ	0xFE5
 59000                           plusw1	equ	0xFE3
 59001                           fsr1h	equ	0xFE2
 59002                           fsr1l	equ	0xFE1
 59003                           indf2	equ	0xFDF
 59004                           postinc2	equ	0xFDE
 59005                           postdec2	equ	0xFDD
 59006                           plusw2	equ	0xFDB
 59007                           fsr2h	equ	0xFDA
 59008                           fsr2l	equ	0xFD9
 59009                           status	equ	0xFD8
 59010                           
 59011 ;; *************** function _INT1_CallBack *****************
 59012 ;; Defined at:
 59013 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 59014 ;; Parameters:    Size  Location     Type
 59015 ;;		None
 59016 ;; Auto vars:     Size  Location     Type
 59017 ;;		None
 59018 ;; Return value:  Size  Location     Type
 59019 ;;                  1    wreg      void 
 59020 ;; Registers used:
 59021 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 59022 ;; Tracked objects:
 59023 ;;		On entry : 0/0
 59024 ;;		On exit  : 0/0
 59025 ;;		Unchanged: 0/0
 59026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59031 ;;Total ram usage:        0 bytes
 59032 ;; Hardware stack levels used:    1
 59033 ;; Hardware stack levels required when called:    1
 59034 ;; This function calls:
 59035 ;;		Absolute function
 59036 ;;		_DIO0_ISR_Lora
 59037 ;;		_INT1_DefaultInterruptHandler
 59038 ;; This function is called by:
 59039 ;;		_INT1_ISR
 59040 ;; This function uses a non-reentrant model
 59041 ;;
 59042                           
 59043                           	psect	text325
 59044  00C096                     __ptext325:
 59045                           	opt stack 0
 59046  00C096                     _INT1_CallBack:
 59047                           	opt stack 14
 59048                           
 59049                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 59050                           
 59051                           ;incstack = 0
 59052  00C096  0101               	movlb	1	; () banked
 59053  00C098  51F7               	movf	_INT1_InterruptHandler& (0+255),w,b
 59054  00C09A  11F8               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 59055  00C09C  B4D8               	btfsc	status,2,c
 59056  00C09E  0012               	return	
 59057                           
 59058                           ; BSR set to: 1
 59059                           ;ext_int.c: 46: {
 59060                           ;ext_int.c: 47: INT1_InterruptHandler();
 59061  00C0A0  D801               	call	i2u2870_48
 59062  00C0A2  0012               	return	
 59063  00C0A4                     i2u2870_48:
 59064  00C0A4  0005               	push	
 59065  00C0A6  6EFA               	movwf	pclath,c
 59066  00C0A8  51F7               	movf	_INT1_InterruptHandler& (0+255),w,b
 59067  00C0AA  6EFD               	movwf	tosl,c
 59068  00C0AC  51F8               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 59069  00C0AE  6EFE               	movwf	tosh,c
 59070  00C0B0  6AFF               	clrf	tosu,c
 59071  00C0B2  50FA               	movf	pclath,w,c
 59072  00C0B4  0012               	return		;indir
 59073  00C0B6                     __end_of_INT1_CallBack:
 59074                           	opt stack 0
 59075                           tosu	equ	0xFFF
 59076                           tosh	equ	0xFFE
 59077                           tosl	equ	0xFFD
 59078                           pclatu	equ	0xFFB
 59079                           pclath	equ	0xFFA
 59080                           tblptru	equ	0xFF8
 59081                           tblptrh	equ	0xFF7
 59082                           tblptrl	equ	0xFF6
 59083                           tablat	equ	0xFF5
 59084                           prodh	equ	0xFF4
 59085                           prodl	equ	0xFF3
 59086                           intcon	equ	0xFF2
 59087                           intcon2	equ	0xFF1
 59088                           intcon3	equ	0xFF0
 59089                           indf0	equ	0xFEF
 59090                           postinc0	equ	0xFEE
 59091                           plusw0	equ	0xFEB
 59092                           fsr0h	equ	0xFEA
 59093                           fsr0l	equ	0xFE9
 59094                           wreg	equ	0xFE8
 59095                           postinc1	equ	0xFE6
 59096                           postdec1	equ	0xFE5
 59097                           plusw1	equ	0xFE3
 59098                           fsr1h	equ	0xFE2
 59099                           fsr1l	equ	0xFE1
 59100                           indf2	equ	0xFDF
 59101                           postinc2	equ	0xFDE
 59102                           postdec2	equ	0xFDD
 59103                           plusw2	equ	0xFDB
 59104                           fsr2h	equ	0xFDA
 59105                           fsr2l	equ	0xFD9
 59106                           status	equ	0xFD8
 59107                           
 59108 ;; *************** function _DIO0_ISR_Lora *****************
 59109 ;; Defined at:
 59110 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 59111 ;; Parameters:    Size  Location     Type
 59112 ;;		None
 59113 ;; Auto vars:     Size  Location     Type
 59114 ;;		None
 59115 ;; Return value:  Size  Location     Type
 59116 ;;                  1    wreg      void 
 59117 ;; Registers used:
 59118 ;;		status,2, status,0
 59119 ;; Tracked objects:
 59120 ;;		On entry : 0/0
 59121 ;;		On exit  : 0/0
 59122 ;;		Unchanged: 0/0
 59123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59128 ;;Total ram usage:        0 bytes
 59129 ;; Hardware stack levels used:    1
 59130 ;; This function calls:
 59131 ;;		Nothing
 59132 ;; This function is called by:
 59133 ;;		_DIO0_ISR_Lora_Init
 59134 ;;		_INT1_CallBack
 59135 ;; This function uses a non-reentrant model
 59136 ;;
 59137                           
 59138                           	psect	text326
 59139  00C686                     __ptext326:
 59140                           	opt stack 0
 59141  00C686                     _DIO0_ISR_Lora:
 59142                           	opt stack 14
 59143                           
 59144                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 59145                           
 59146                           ;incstack = 0
 59147  00C686  0101               	movlb	1	; () banked
 59148  00C688  8134               	bsf	_dioStatus& (0+255),0,b	;volatile
 59149                           
 59150                           ; BSR set to: 1
 59151  00C68A  0012               	return		;funcret
 59152  00C68C                     __end_of_DIO0_ISR_Lora:
 59153                           	opt stack 0
 59154                           tosu	equ	0xFFF
 59155                           tosh	equ	0xFFE
 59156                           tosl	equ	0xFFD
 59157                           pclatu	equ	0xFFB
 59158                           pclath	equ	0xFFA
 59159                           tblptru	equ	0xFF8
 59160                           tblptrh	equ	0xFF7
 59161                           tblptrl	equ	0xFF6
 59162                           tablat	equ	0xFF5
 59163                           prodh	equ	0xFF4
 59164                           prodl	equ	0xFF3
 59165                           intcon	equ	0xFF2
 59166                           intcon2	equ	0xFF1
 59167                           intcon3	equ	0xFF0
 59168                           indf0	equ	0xFEF
 59169                           postinc0	equ	0xFEE
 59170                           plusw0	equ	0xFEB
 59171                           fsr0h	equ	0xFEA
 59172                           fsr0l	equ	0xFE9
 59173                           wreg	equ	0xFE8
 59174                           postinc1	equ	0xFE6
 59175                           postdec1	equ	0xFE5
 59176                           plusw1	equ	0xFE3
 59177                           fsr1h	equ	0xFE2
 59178                           fsr1l	equ	0xFE1
 59179                           indf2	equ	0xFDF
 59180                           postinc2	equ	0xFDE
 59181                           postdec2	equ	0xFDD
 59182                           plusw2	equ	0xFDB
 59183                           fsr2h	equ	0xFDA
 59184                           fsr2l	equ	0xFD9
 59185                           status	equ	0xFD8
 59186                           
 59187 ;; *************** function _INT1_DefaultInterruptHandler *****************
 59188 ;; Defined at:
 59189 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 59190 ;; Parameters:    Size  Location     Type
 59191 ;;		None
 59192 ;; Auto vars:     Size  Location     Type
 59193 ;;		None
 59194 ;; Return value:  Size  Location     Type
 59195 ;;                  1    wreg      void 
 59196 ;; Registers used:
 59197 ;;		None
 59198 ;; Tracked objects:
 59199 ;;		On entry : 0/0
 59200 ;;		On exit  : 0/0
 59201 ;;		Unchanged: 0/0
 59202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 59203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 59207 ;;Total ram usage:        0 bytes
 59208 ;; Hardware stack levels used:    1
 59209 ;; This function calls:
 59210 ;;		Nothing
 59211 ;; This function is called by:
 59212 ;;		_EXT_INT_Initialize
 59213 ;;		_INT1_CallBack
 59214 ;; This function uses a non-reentrant model
 59215 ;;
 59216                           
 59217                           	psect	text327
 59218  00C6EA                     __ptext327:
 59219                           	opt stack 0
 59220  00C6EA                     _INT1_DefaultInterruptHandler:
 59221                           	opt stack 14
 59222                           
 59223                           ; BSR set to: 1
 59224                           ;incstack = 0
 59225  00C6EA  0012               	return		;funcret
 59226  00C6EC                     __end_of_INT1_DefaultInterruptHandler:
 59227                           	opt stack 0
 59228                           tosu	equ	0xFFF
 59229                           tosh	equ	0xFFE
 59230                           tosl	equ	0xFFD
 59231                           pclatu	equ	0xFFB
 59232                           pclath	equ	0xFFA
 59233                           tblptru	equ	0xFF8
 59234                           tblptrh	equ	0xFF7
 59235                           tblptrl	equ	0xFF6
 59236                           tablat	equ	0xFF5
 59237                           prodh	equ	0xFF4
 59238                           prodl	equ	0xFF3
 59239                           intcon	equ	0xFF2
 59240                           intcon2	equ	0xFF1
 59241                           intcon3	equ	0xFF0
 59242                           indf0	equ	0xFEF
 59243                           postinc0	equ	0xFEE
 59244                           plusw0	equ	0xFEB
 59245                           fsr0h	equ	0xFEA
 59246                           fsr0l	equ	0xFE9
 59247                           wreg	equ	0xFE8
 59248                           postinc1	equ	0xFE6
 59249                           postdec1	equ	0xFE5
 59250                           plusw1	equ	0xFE3
 59251                           fsr1h	equ	0xFE2
 59252                           fsr1l	equ	0xFE1
 59253                           indf2	equ	0xFDF
 59254                           postinc2	equ	0xFDE
 59255                           postdec2	equ	0xFDD
 59256                           plusw2	equ	0xFDB
 59257                           fsr2h	equ	0xFDA
 59258                           fsr2l	equ	0xFD9
 59259                           status	equ	0xFD8
 59260                           tosu	equ	0xFFF
 59261                           tosh	equ	0xFFE
 59262                           tosl	equ	0xFFD
 59263                           pclatu	equ	0xFFB
 59264                           pclath	equ	0xFFA
 59265                           tblptru	equ	0xFF8
 59266                           tblptrh	equ	0xFF7
 59267                           tblptrl	equ	0xFF6
 59268                           tablat	equ	0xFF5
 59269                           prodh	equ	0xFF4
 59270                           prodl	equ	0xFF3
 59271                           intcon	equ	0xFF2
 59272                           intcon2	equ	0xFF1
 59273                           intcon3	equ	0xFF0
 59274                           indf0	equ	0xFEF
 59275                           postinc0	equ	0xFEE
 59276                           plusw0	equ	0xFEB
 59277                           fsr0h	equ	0xFEA
 59278                           fsr0l	equ	0xFE9
 59279                           wreg	equ	0xFE8
 59280                           postinc1	equ	0xFE6
 59281                           postdec1	equ	0xFE5
 59282                           plusw1	equ	0xFE3
 59283                           fsr1h	equ	0xFE2
 59284                           fsr1l	equ	0xFE1
 59285                           indf2	equ	0xFDF
 59286                           postinc2	equ	0xFDE
 59287                           postdec2	equ	0xFDD
 59288                           plusw2	equ	0xFDB
 59289                           fsr2h	equ	0xFDA
 59290                           fsr2l	equ	0xFD9
 59291                           status	equ	0xFD8
 59292                           
 59293                           	psect	text328
 59294  000000                     __ptext328:
 59295                           	opt stack 0
 59296                           tosu	equ	0xFFF
 59297                           tosh	equ	0xFFE
 59298                           tosl	equ	0xFFD
 59299                           pclatu	equ	0xFFB
 59300                           pclath	equ	0xFFA
 59301                           tblptru	equ	0xFF8
 59302                           tblptrh	equ	0xFF7
 59303                           tblptrl	equ	0xFF6
 59304                           tablat	equ	0xFF5
 59305                           prodh	equ	0xFF4
 59306                           prodl	equ	0xFF3
 59307                           intcon	equ	0xFF2
 59308                           intcon2	equ	0xFF1
 59309                           intcon3	equ	0xFF0
 59310                           indf0	equ	0xFEF
 59311                           postinc0	equ	0xFEE
 59312                           plusw0	equ	0xFEB
 59313                           fsr0h	equ	0xFEA
 59314                           fsr0l	equ	0xFE9
 59315                           wreg	equ	0xFE8
 59316                           postinc1	equ	0xFE6
 59317                           postdec1	equ	0xFE5
 59318                           plusw1	equ	0xFE3
 59319                           fsr1h	equ	0xFE2
 59320                           fsr1l	equ	0xFE1
 59321                           indf2	equ	0xFDF
 59322                           postinc2	equ	0xFDE
 59323                           postdec2	equ	0xFDD
 59324                           plusw2	equ	0xFDB
 59325                           fsr2h	equ	0xFDA
 59326                           fsr2l	equ	0xFD9
 59327                           status	equ	0xFD8
 59328                           
 59329                           	psect	rparam
 59330  0000                     tosu	equ	0xFFF
 59331                           tosh	equ	0xFFE
 59332                           tosl	equ	0xFFD
 59333                           pclatu	equ	0xFFB
 59334                           pclath	equ	0xFFA
 59335                           tblptru	equ	0xFF8
 59336                           tblptrh	equ	0xFF7
 59337                           tblptrl	equ	0xFF6
 59338                           tablat	equ	0xFF5
 59339                           prodh	equ	0xFF4
 59340                           prodl	equ	0xFF3
 59341                           intcon	equ	0xFF2
 59342                           intcon2	equ	0xFF1
 59343                           intcon3	equ	0xFF0
 59344                           indf0	equ	0xFEF
 59345                           postinc0	equ	0xFEE
 59346                           plusw0	equ	0xFEB
 59347                           fsr0h	equ	0xFEA
 59348                           fsr0l	equ	0xFE9
 59349                           wreg	equ	0xFE8
 59350                           postinc1	equ	0xFE6
 59351                           postdec1	equ	0xFE5
 59352                           plusw1	equ	0xFE3
 59353                           fsr1h	equ	0xFE2
 59354                           fsr1l	equ	0xFE1
 59355                           indf2	equ	0xFDF
 59356                           postinc2	equ	0xFDE
 59357                           postdec2	equ	0xFDD
 59358                           plusw2	equ	0xFDB
 59359                           fsr2h	equ	0xFDA
 59360                           fsr2l	equ	0xFD9
 59361                           status	equ	0xFD8
 59362                           
 59363                           	psect	temp
 59364  000048                     btemp:
 59365                           	opt stack 0
 59366  000048                     	ds	12
 59367  0000                     wtemp0	set	btemp
 59368  0000                     wtemp1	set	btemp+2
 59369  0000                     wtemp2	set	btemp+4
 59370  0000                     wtemp3	set	btemp+6
 59371  0000                     wtemp4	set	btemp+8
 59372  0000                     wtemp5	set	btemp+10
 59373  0000                     wtemp6	set	btemp+1
 59374  0000                     ttemp0	set	btemp
 59375  0000                     ttemp1	set	btemp+3
 59376  0000                     ttemp2	set	btemp+6
 59377  0000                     ttemp3	set	btemp+9
 59378  0000                     ltemp0	set	btemp
 59379  0000                     ltemp1	set	btemp+4
 59380  0000                     ltemp2	set	btemp+8
 59381                           tosu	equ	0xFFF
 59382                           tosh	equ	0xFFE
 59383                           tosl	equ	0xFFD
 59384                           pclatu	equ	0xFFB
 59385                           pclath	equ	0xFFA
 59386                           tblptru	equ	0xFF8
 59387                           tblptrh	equ	0xFF7
 59388                           tblptrl	equ	0xFF6
 59389                           tablat	equ	0xFF5
 59390                           prodh	equ	0xFF4
 59391                           prodl	equ	0xFF3
 59392                           intcon	equ	0xFF2
 59393                           intcon2	equ	0xFF1
 59394                           intcon3	equ	0xFF0
 59395                           indf0	equ	0xFEF
 59396                           postinc0	equ	0xFEE
 59397                           plusw0	equ	0xFEB
 59398                           fsr0h	equ	0xFEA
 59399                           fsr0l	equ	0xFE9
 59400                           wreg	equ	0xFE8
 59401                           postinc1	equ	0xFE6
 59402                           postdec1	equ	0xFE5
 59403                           plusw1	equ	0xFE3
 59404                           fsr1h	equ	0xFE2
 59405                           fsr1l	equ	0xFE1
 59406                           indf2	equ	0xFDF
 59407                           postinc2	equ	0xFDE
 59408                           postdec2	equ	0xFDD
 59409                           plusw2	equ	0xFDB
 59410                           fsr2h	equ	0xFDA
 59411                           fsr2l	equ	0xFD9
 59412                           status	equ	0xFD8


Data Sizes:
    Strings     146
    Constant    558
    Data        92
    BSS         1392
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    159     160
    BANK1           256    105     253
    BANK2           256      0     255
    BANK3           256      0     252
    BANK4           256      0     256
    BANK5           256      0      32
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    do_I2C_TX$7035$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$7041$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$7047$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_ISR$7053	const PTR FTN()enum E7338 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$7052	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$7047	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    do_I2C_RX$7046	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_RX$7041	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    do_I2C_TX$7040	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    do_I2C_TX$7035	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1636$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S65$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), sp__ADC_GetConversion.cfList(UNKNOWN), data(BANK3[8]), 
		 -> appSessionKey(BANK5[16]), nwkSessionKey(BANK5[16]), applicationKey(BANK4[16]), deviceEUI(BANK3[8]), 
		 -> applicationEUI(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), sp__ADC_GetConversion.cfList(UNKNOWN), data(BANK3[8]), 
		 -> appSessionKey(BANK5[16]), nwkSessionKey(BANK5[16]), applicationKey(BANK4[16]), deviceEUI(BANK3[8]), 
		 -> applicationEUI(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), 
		 -> PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), 
		 -> loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 94
		 -> STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[13]), STR_2(CODE[94]), 
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    i2c1_driver_setI2cISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    BME280_readBlock@read_buff	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> data(BANK3[8]), sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> sp__ADC_GetConversion(UNKNOWN), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> sp__ADC_GetConversion(UNKNOWN), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK3[8]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> applicationKey(BANK4[16]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSessionKey(BANK5[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSessionKey(BANK5[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> applicationEUI(BANK3[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEUI(BANK3[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 8
		 -> data(BANK3[8]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1636$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1636$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S967$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S967$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), aesBuffer(BANK3[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S748$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK3[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK3[16]), LORAWAN_RxDone@computedMic(BANK0[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(BANK0[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK3[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> sp__ADC_GetConversion(UNKNOWN), LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 
		 -> NULL(NULL[0]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    d.data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    S362$data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E7338[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E7171 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S65$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(BANK0[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@data(BANK0[1]), NULL(NULL[0]), 

    S65$callbackTable	PTR FTN(PTR void ,)enum E7171[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E7171[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S65$data_ptr	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 24
		 -> BME280_readMeasurements@sensorData(BANK0[8]), BME280_readFactoryCalibrationParams@paramBuff(BANK0[24]), i2c_readDataBlock@reg(BANK0[1]), i2c_readDataBlock@d(BANK0[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(BANK0[1]), i2c_write1ByteRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___ftmul->___wmul
    ___fttol->___ftmul
    ___ftsub->___lltoft
    ___ftadd->_fround
    ___lwtoft->___ftpack
    _Weather_initializeClick->_BME280_readFactoryCalibrationParams
    _BME280_reset->_BME280_writeByte
    _BME280_readFactoryCalibrationParams->_BME280_readBlock
    _BME280_initializeSensor->_BME280_writeByte
    _BME280_startForcedSensing->_BME280_writeByte
    _BME280_writeByte->_i2c_write1ByteRegister
    _BME280_readMeasurements->_BME280_readBlock
    _BME280_readBlock->_i2c_readDataBlock
    _BME280_getStatus->_BME280_readByte
    _BME280_readByte->_i2c_read1ByteRegister
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_poller->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _Weather_getTemperatureDegC->_BME280_getTemperature
    _BME280_getTemperature->___ftdiv
    ___altoft->_BME280_compensateTemperature
    _BME280_compensateTemperature->___lmul
    _Weather_getPressureKPa->_BME280_getPressure
    _BME280_getPressure->___ftdiv
    _BME280_compensatePressure->___lmul
    _Weather_getHumidityRH->_BME280_getHumidity
    _BME280_getHumidity->___ftdiv
    ___lltoft->_BME280_compensateHumidity
    ___ftdiv->___lltoft
    _BME280_compensateHumidity->___lmul
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    ___wmul->___awdiv
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    ___awdiv->___awmod
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _printf->_Weather_getHumidityRH
    _printf->_Weather_getPressureKPa
    _printf->_Weather_getTemperatureDegC
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 8324809
                  _ADC_GetConversion
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
               _LORAWAN_SetDeviceEui
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
            _TMR5_HasOverflowOccured
              _Weather_getHumidityRH
             _Weather_getPressureKPa
         _Weather_getTemperatureDegC
                _Weather_readSensors
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              50    36     14   83276
                                            153 BANK0      6     6      0
                                              3 BANK1     43    29     14
              _Weather_getHumidityRH (ARG)
             _Weather_getPressureKPa (ARG)
         _Weather_getTemperatureDegC (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3   19565
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3   19286
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    7011
                                             20 BANK0     15     9      6
                  _ADC_GetConversion (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1898
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     481
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     624
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1231
                                             35 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4718
                                            132 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4321
                                             45 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     670
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3173
                                              8 BANK0      3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Weather_readSensors                                  0     0      0  789277
                 _BME280_isMeasuring
            _BME280_readMeasurements
          _BME280_startForcedSensing
            _Weather_initializeClick
 ---------------------------------------------------------------------------------
 (2) _Weather_initializeClick                              0     0      0  451959
            _BME280_initializeSensor
_BME280_readFactoryCalibrationParams
                       _BME280_reset
        _BME280_setFilterCoefficient
     _BME280_setOversamplingHumidity
     _BME280_setOversamplingPressure
  _BME280_setOversamplingTemperature
               _BME280_setSensorMode
              _BME280_setStandbyTime
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     111
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _BME280_setStandbyTime                                2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setSensorMode                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingTemperature                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingPressure                       2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setOversamplingHumidity                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _BME280_setFilterCoefficient                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _BME280_reset                                         0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (3) _BME280_readFactoryCalibrationParams                 27    27      0  227110
                                             31 BANK0     27    27      0
                   _BME280_readBlock
                    _BME280_readByte
 ---------------------------------------------------------------------------------
 (3) _BME280_initializeSensor                              0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (2) _BME280_startForcedSensing                            0     0      0  112303
                   _BME280_writeByte
 ---------------------------------------------------------------------------------
 (4) _BME280_writeByte                                     2     1      1  112303
                                             20 BANK0      2     1      1
             _i2c_write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _i2c_write1ByteRegister                               3     1      2  111197
                                             17 BANK0      3     1      2
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _BME280_readMeasurements                             21    21      0  113569
                                             31 BANK0     21    21      0
                   _BME280_readBlock
 ---------------------------------------------------------------------------------
 (4) _BME280_readBlock                                     4     1      3  112789
                                             27 BANK0      4     1      3
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   10     5      5  111613
                                             17 BANK0     10     5      5
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _BME280_isMeasuring                                   0     0      0  111446
                   _BME280_getStatus
 ---------------------------------------------------------------------------------
 (3) _BME280_getStatus                                     0     0      0  111446
                    _BME280_readByte
 ---------------------------------------------------------------------------------
 (4) _BME280_readByte                                      1     1      0  111446
                                             23 BANK0      1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _i2c_read1ByteRegister                                6     5      1  111376
                                             17 BANK0      6     5      1
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _i2c_setAddressNACKCallback                           4     0      4    2156
                                              5 BANK0      4     0      4
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _i2c_open                                             2     2      0     392
                                              2 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_setI2cISR                                2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_setBusCollisionISR                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_masterWrite                                      0     0      0  102937
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (7) _i2c_masterOperation                                  2     2      0  102937
                                             15 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (8) _mssp1_IRQisEnabled                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _i2c_poller                                           0     0      0  102767
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (9) _mssp1_waitForEvent                                   2     0      2      89
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (9) _i2c_ISR                                              2     2      0  102678
                                             13 BANK0      2     2      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX_EMPTY                                     0     0      0   25628
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_TX                                           2     2      0   25750
                                             11 BANK0      2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_isNACK                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_ADR_READ                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_TXData                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RX                                           0     0      0   25628
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RESET                                        0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_RCEN                                         0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ADDRESS_NACK                              0     0      0   25628
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _returnStop                                          2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _returnReset                                         2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    5348
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    5070
                                              9 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _i2c_setDataCompleteCallback                          4     0      4    2868
                                              5 BANK0      4     0      4
                        _setCallBack
 ---------------------------------------------------------------------------------
 (7) _setCallBack                                          5     1      4    1044
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _i2c_setBuffer                                        4     0      4    2180
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (11) _i2c_restartWrite                                    2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_ACK                                       0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_close                                            1     1      0      24
                                              0 BANK0      1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Weather_getTemperatureDegC                           3     0      3   17805
                                              0 BANK1      3     0      3
              _BME280_getTemperature
 ---------------------------------------------------------------------------------
 (2) _BME280_getTemperature                                6     3      3   17805
                                            147 BANK0      6     3      3
       _BME280_compensateTemperature
                           ___altoft
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3200
                                            109 BANK0     10     6      4
       _BME280_compensateTemperature (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _BME280_compensateTemperature                        39    35      4   10632
                                             70 BANK0     39    35      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Weather_getPressureKPa                               3     0      3   25318
                                              0 BANK1      3     0      3
                 _BME280_getPressure
 ---------------------------------------------------------------------------------
 (2) _BME280_getPressure                                   6     3      3   25318
                                            147 BANK0      6     3      3
          _BME280_compensatePressure
                            ___ftdiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _BME280_compensatePressure                           33    29      4   18036
                                             70 BANK0     33    29      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Weather_getHumidityRH                                3     0      3   18310
                                              0 BANK1      3     0      3
                 _BME280_getHumidity
 ---------------------------------------------------------------------------------
 (2) _BME280_getHumidity                                   6     3      3   18310
                                            147 BANK0      6     3      3
          _BME280_compensateHumidity
                            ___ftdiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3309
                                            123 BANK0      9     5      4
          _BME280_compensateHumidity (ARG)
          _BME280_compensatePressure (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3939
                                            132 BANK0     15     9      6
          _BME280_compensateHumidity (ARG)
          _BME280_compensatePressure (ARG)
       _BME280_compensateTemperature (ARG)
                           ___altoft (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2973
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _BME280_compensateHumidity                           53    49      4   11028
                                             70 BANK0     53    49      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _TMR5_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1933
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     333
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14102
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6496803
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2516194
                                            122 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  169654
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  739606
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  540269
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  167183
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1   10353
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1   10796
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  342933
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  180629
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              5 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   38019
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  587948
                                            107 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  549901
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   28025
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3324739
                                            149 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  236364
                                            131 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1168871
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1682651
                                            147 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  524159
                                             98 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  344000
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1142221
                                            122 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0   10214
                                             58 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1   10251
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   35771
                                             70 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0   10505
                                             58 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  176851
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   43054
                                             80 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    7559
                                             21 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    7356
                                             20 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    7294
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2   12257
                                             70 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   18271
                                             70 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             15 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Send                                         7     3      4  342933
                                            115 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (2) _AssemblePacket                                      12     7      5  160406
                                            103 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _IncludeMacCommandsResponse                          15    10      5    2532
                                              0 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (4) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EncryptFRMPayload                                   22     8     14   48563
                                             49 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2733
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _AssembleEncryptionBlock                              9     2      7   20074
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14693
                                             11 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39374
                                             49 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18513
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  226732
                                            131 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      40    38      2  199532
                                             91 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             49 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  172000
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  135688
                                             81 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  282198
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   27988
                                             91 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3   12384
                                             79 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   15406
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   15110
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  136815
                                             81 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   99290
                                             70 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   16722
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   16719
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  113711
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2   11175
                                             77 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2   10496
                                             70 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     440
                                             72 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84335
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _AESCmac                                            116   109      7   69611
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _GenerateSubkey                                      40    34      6   27112
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (5) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _AESEncodeLoRa                                       20    16      4   20630
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESEncode                                           24    20      4    4744
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (6) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EncKeySchedule                                       6     4      2    1164
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  184898
                                             82 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  107853
                                             81 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   47691
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   18096
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1064
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   21043
                                             70 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8   10496
                                             58 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    6689
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwTimerStart                                         9     9      0    1591
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (4) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (5) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _SwTimersInterrupt                                   17    13      4     458
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (5) _TMR_GetDeltaTime                                    24    20      4     102
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17635
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (17) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (19) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
               ___awmod (ARG)
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
                   ___awmod (ARG)
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
               ___awmod (ARG)
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
                   ___awmod (ARG)
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
                 ___awmod (ARG)
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Send
     _AssemblePacket
       _AESCmac
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _GenerateSubkey
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _FillSubKey
           _memset
         _memcpy
         _memset
       _AssembleEncryptionBlock
         _memcpy
         _memset
       _CountfOptsLength
       _EncryptFRMPayload
         _AESEncodeLoRa
           _AESEncode
             _EncKeySchedule
             _EncodeShiftRow
           _memcpy
         _AssembleEncryptionBlock
           _memcpy
           _memset
         ___awdiv
           ___awmod (ARG)
       _FindSmallestDataRate
       _IncludeMacCommandsResponse
         _RADIO_GetPacketSnr
       _memcpy
       _memset
     _LORAWAN_GetMaxPayloadSize
       _CountfOptsLength
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetDeviceEui
     _memcpy
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _TMR5_HasOverflowOccured
   _Weather_getHumidityRH
     _BME280_getHumidity
       _BME280_compensateHumidity
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
       ___lltoft
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
   _Weather_getPressureKPa
     _BME280_getPressure
       _BME280_compensatePressure
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
       ___lltoft
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
   _Weather_getTemperatureDegC
     _BME280_getTemperature
       _BME280_compensateTemperature
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___altoft
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
       ___ftdiv
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensateTemperature (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft (ARG)
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
   _Weather_readSensors
     _BME280_isMeasuring
       _BME280_getStatus
         _BME280_readByte
           _i2c_read1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
     _BME280_readMeasurements
       _BME280_readBlock
         _i2c_readDataBlock
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
     _BME280_startForcedSensing
       _BME280_writeByte
         _i2c_write1ByteRegister
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer
           _i2c_setDataCompleteCallback
             _setCallBack
     _Weather_initializeClick
       _BME280_initializeSensor
         _BME280_writeByte
           _i2c_write1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_readFactoryCalibrationParams
         _BME280_readBlock
           _i2c_readDataBlock
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
         _BME280_readByte
           _i2c_read1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_reset
         _BME280_writeByte
           _i2c_write1ByteRegister
             _i2c_close
               _mssp1_clearIRQ
               _mssp1_disableIRQ
             _i2c_masterWrite
               _i2c_masterOperation
                 _i2c1_driver_start
                 _i2c_poller
                   _i2c_ISR
                     _do_I2C_DO_ACK *
                       _i2c1_driver_sendACK
                     _do_I2C_DO_ADDRESS_NACK *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _do_I2C_IDLE *
                     _do_I2C_RCEN *
                       _i2c1_driver_startRX
                     _do_I2C_RESET *
                       _i2c1_driver_resetBus
                     _do_I2C_RX *
                       Absolute function(Fake) *
                       _do_I2C_DO_NACK_RESTART *
                         _i2c1_driver_sendNACK
                       _do_I2C_DO_NACK_STOP *
                         _i2c1_driver_sendNACK
                       _i2c1_driver_getRXData *
                       _i2c1_driver_sendACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_SEND_ADR_READ *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_ADR_WRITE *
                       _i2c1_driver_TXData
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _do_I2C_TX *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART_READ *
                         _i2c1_driver_restart
                       _do_I2C_SEND_RESTART_WRITE *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c1_driver_TXData *
                       _i2c1_driver_isNACK *
                       _i2c_restartWrite *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _do_I2C_TX_EMPTY *
                       Absolute function(Fake) *
                       _do_I2C_SEND_RESTART *
                         _i2c1_driver_restart
                       _do_I2C_SEND_STOP *
                         _i2c1_driver_stop
                       _i2c_restartWrite *
                       _mssp1_setIRQ *
                       _rd1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rd2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _rdBlkRegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _returnReset *
                       _returnStop *
                       _wr1RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                       _wr2RegCompleteHandler *
                         _i2c_setBuffer
                         _i2c_setDataCompleteCallback
                           _setCallBack
                     _i2c1_driver_isNACK *
                     _mssp1_clearIRQ *
                   _mssp1_waitForEvent
                 _mssp1_IRQisEnabled
             _i2c_open
               _i2c1_driver_open
               _i2c1_driver_setBusCollisionISR
               _i2c1_driver_setI2cISR
               _mssp1_clearIRQ
             _i2c_setAddressNACKCallback
               _setCallBack
             _i2c_setBuffer
             _i2c_setDataCompleteCallback
               _setCallBack
       _BME280_setFilterCoefficient
       _BME280_setOversamplingHumidity
       _BME280_setOversamplingPressure
       _BME280_setOversamplingTemperature
       _BME280_setSensorMode
       _BME280_setStandbyTime
       _DELAY_milliseconds
   ___ftmul
     _ADC_GetConversion (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___fttol
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lwtoft
     _ADC_GetConversion (ARG)
     ___ftpack (ARG)
   _printf
     _Weather_getHumidityRH (ARG)
       _BME280_getHumidity
         _BME280_compensateHumidity
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
         ___lltoft
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
     _Weather_getPressureKPa (ARG)
       _BME280_getPressure
         _BME280_compensatePressure
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
         ___lltoft
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
     _Weather_getTemperatureDegC (ARG)
       _BME280_getTemperature
         _BME280_compensateTemperature
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___altoft
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___ftpack (ARG)
         ___ftdiv
           _BME280_compensateHumidity (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensatePressure (ARG)
             ___lldiv
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _BME280_compensateTemperature (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           ___altoft (ARG)
             _BME280_compensateTemperature (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             _BME280_compensateHumidity (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _BME280_compensatePressure (ARG)
               ___lldiv
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             ___ftpack (ARG)
     ___awdiv (ARG)
       ___awmod (ARG)
     ___ftadd (ARG)
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           _ADC_GetConversion (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_GetConversion (ARG)
             ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge (ARG)
     ___ftmul (ARG)
       _ADC_GetConversion (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             _ADC_GetConversion (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_GetConversion (ARG)
               ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         _BME280_compensateHumidity (ARG)
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _BME280_compensatePressure (ARG)
           ___lldiv
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         ___ftpack (ARG)
     ___fttol (ARG)
       ___ftmul (ARG)
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
     ___lltoft (ARG)
       _BME280_compensateHumidity (ARG)
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _BME280_compensatePressure (ARG)
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _EUSART1_Write
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         _ADC_GetConversion (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_GetConversion (ARG)
           ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      20      16       12.5%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FC      11       98.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     503      12        0.0%
DATA                 0      0     723       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 24 18:33:01 2019

                                        ??_LORAWAN_TxDone 00BD  
                              __end_of_DIO3_ISR_Lora_Init C6E0  
                                 _BME280_initializeSensor BF56  
                                            returnReset@p 0069  
                                            ___altoft@exp 00D5  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0040  
                                          HALSPISend@data 0061  
                         __end_of_ValidateChannelMaskCntl BFB6  
                                           ___altoft@sign 00D6  
                                                      l95 BE48  
                                                      l88 98BE  
                         ?_BME280_setOversamplingPressure 0001  
                        ??_BME280_setOversamplingPressure 0060  
                                            ___awdiv@sign 006B  
                         __size_of_UpdateJoinSuccessState 013E  
                                    __size_of_do_I2C_IDLE 000C  
                                     _do_I2C_SEND_RESTART C62C  
                                    __size_of_do_I2C_RCEN 000C  
                                     ___wmul@multiplicand 0070  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora AEE4  
                                   __end_of_AESEncodeLoRa B822  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                            ___ftadd@exp1 0098  
                                            ___ftadd@exp2 0097  
                                             __CFG_LVP$ON 000000  
                                            ___ftadd@sign 0096  
                                     ??_LORAWAN_RxTimeout 00C2  
                                                     l120 C130  
                                                     l201 AF46  
                                                     l202 AF4E  
                                                     l107 B796  
                                                     l109 B7AA  
                                                     l222 A576  
                                                     l310 A4B8  
                                                     l119 C142  
                                                     l161 B428  
                                                     l209 AD40  
                                                     l162 B41C  
                                                     l170 9D22  
                                                     l250 A9C0  
                                                     l171 9D10  
                                                     l307 A464  
                                                     l404 AA86  
                                                     l180 9D88  
                                                     l405 AA3E  
                                                     l165 B422  
                                                     l173 9D16  
                                                     l174 9D1C  
                                                     l191 A64E  
                                                     l169 9D58  
                                                     l185 A644  
                                                     l273 9C4E  
                                                     l370 3B96  
                                                     l603 9034  
                                                     l267 9BFA  
                                                     l612 869E  
                                                     l604 8F64  
                                                     l188 A654  
                                                     l613 85DC  
                                                     l381 3DE6  
                                                     l373 3C56  
                                                     l197 AF54  
                                                     l189 A648  
                                                     l382 3D3A  
                                                     l366 3B6A  
                                                     l198 AF40  
                                                     l615 8638  
                                                     l383 3D48  
                                                     l375 3C88  
                                                     l607 9030  
                                                     l720 87EE  
                                                     l632 4574  
                                                     l368 3C18  
                                                     l800 2774  
                                                     l545 6C48  
                                                     l617 869C  
                                                     l641 46E4  
                                                     l393 7A42  
                                                     l377 3CAA  
                                                     l369 3BDE  
                                                     l546 6CDA  
                                                     l722 8836  
                                                     l386 3E2E  
                                                     l378 3CBE  
                                                     l810 290E  
                                                     l555 B276  
                                                     l563 BA2E  
                                                     l731 889E  
                                                     l723 8818  
                                                     l651 4746  
                                                     l643 46EE  
                                                     l635 45AE  
                                                     l395 7A6A  
                                                     l379 3CCE  
                                                     l803 2794  
                                                     l564 BA10  
                                                     l724 8824  
                                                     l716 87D4  
                                                     l652 486E  
                                                     l812 2992  
                                                     l900 82E2  
                                                     l573 9EAC  
                                                     l469 C1E2  
                                                     l661 553E  
                                                     l645 4710  
                                                     l397 7ABE  
                                                     l813 29C4  
                                                     l805 2874  
                                             ?_RADIO_Init 0079  
                                                     l638 4614  
                                                     l814 29A4  
                                                     l830 5BEE  
                                                     l727 8870  
                                                     l647 471A  
                                                     l399 7AE6  
                                                     l807 28C0  
                                                     l831 5C08  
                                                     l728 8862  
                                                     l816 29E8  
                                                     l808 28CC  
                                                     l832 5C74  
                                                     l569 9EAA  
                                                     l729 8866  
                                                     l649 473C  
                                                     l761 8D0E  
                                                     l817 29F4  
                                                     l809 28F6  
                                                     l833 5C8C  
                                                     l770 68E0  
                                                     l762 8D1C  
                                                     l842 5DF0  
                                                     l834 5C9E  
                                                     l771 68F6  
                                                     l659 5534  
                                                     l755 8CFE  
                                                     l835 5CCA  
                                                     l851 5E26  
                                                     l931 B6E8  
                                                     l764 8D2A  
                                                     l756 8CAE  
                                                     l844 5D7A  
                                                     l836 5CB0  
                                                     l828 5BD6  
                                                     l860 6020  
                                                     l852 5E3C  
                                                     l940 9DCE  
                                                     l589 9B14  
                                                     l773 692A  
                                                     l765 8D56  
                                                     l757 8CBC  
                                                     l853 5E48  
                                                     l909 7F60  
                                                     l925 B8A2  
                                                     l766 8D5E  
                                                     l758 8CEE  
                                                     l790 2616  
                                                     l862 5FAA  
                                                     l854 5E76  
                                                     l942 9E1A  
                                                     l791 264E  
                                                     l855 5EA2  
                                                     l943 9DE8  
                                                     l784 291C  
                                                     l792 26A6  
                                                     l856 5EC4  
                                                     l872 90FA  
                                                     l944 9DFA  
                                                     l936 9DD6  
                                                     l960 B264  
                                                     l793 26F4  
                                                     l785 2694  
                                                     l849 5E0E  
                                                     l937 9DC2  
                                                     l786 2662  
                                                     l858 5EDE  
                                                     l890 96BA  
                                                     l946 9E0A  
                                                     l954 B252  
                                                     l787 25C6  
                                                     l859 5F50  
                                                     l883 9664  
                                                     l875 90C8  
                                                     l939 9DC8  
                                                     l955 B23E  
                                                     l788 267A  
                                                     l884 9646  
                                                     l876 90AA  
                                                     l789 25EE  
                                                     l949 9E12  
                                                     l957 B244  
                                                     l973 AEC4  
                                                     l798 26F8  
                                                     l886 96A2  
                                                     l878 90FE  
                                                     l958 B24A  
                                                     l887 969C  
                                         ??_UpdateTxPower 0060  
                                                     l968 AECC  
                                                     l889 96A4  
                                                     l969 AEBE  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission A762  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission A6F6  
                                  _ExecuteRxParamSetupReq 602C  
                              __end_of_DELAY_milliseconds BCAC  
                                      _DIO2_ISR_Lora_Init C43C  
                                      __size_of_AESEncode 034A  
                                         _timer1ReloadVal 01F5  
                                         ?_EncKeySchedule 0060  
                            __size_of_i2c_masterOperation 003C  
                           i2c_setDataCompleteCallback@cb 0065  
                                            ___awmod@sign 0065  
                                   _RADIO_SetLoRaSyncWord C5F0  
                           BME280_compensateHumidity@humV 00D7  
                                   __size_of_do_I2C_RESET 0010  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                              _TXSTA1bits 000FAC  
                                         __end_of_AESCmac 3EAA  
                          _BME280_compensatePressure$7025 00B7  
                                 __end_of_SwTimersExecute 9040  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B2  
                            __end_of_FindSmallestDataRate 9202  
                     __end_of_RADIO_SetFrequencyHopPeriod C5E6  
                             _RADIO_SetFrequencyHopPeriod C5DC  
                                              _CheckFlags AC6E  
                                         _CCP5_Initialize C46C  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack C096  
                                ?_AssembleEncryptionBlock 006B  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0064  
                                            ___ftdiv@cntr 00ED  
                                      __size_of_IOCB4_ISR 0020  
                                            ___ftdiv@sign 00F2  
                                                    l1002 9A52  
                                                    l1011 B370  
                                                    l1014 B382  
                                                    l1008 B7E6  
                                 ??_rd2RegCompleteHandler 006B  
                                                    l1133 B9EE  
                                                    l1304 671E  
                                                    l1400 41A2  
                                                    l1401 4028  
                                                    l2114 7812  
                                                    l2106 77BE  
                                                    l1330 ADD4  
                                                    l1402 3FF0  
                                                    l2130 93A4  
                                                    l2107 77B0  
                                                    l2108 777C  
                                                    l2109 77AC  
                                                    l1421 BC2C  
                                                    l2125 957E  
                                                    l2206 89A2  
                                                    l1430 B02C  
                                                    l1510 7110  
                                                    l2230 0CC4  
                                                    l1406 4128  
                                                    l2207 88C8  
                                                    l1511 7018  
                                                    l2303 0CA2  
                                                    l2231 025C  
                                                    l1407 4030  
                                                    l2127 9602  
                                                    l2208 8936  
                                                    l1360 1982  
                                                    l1328 ADA4  
                                                    l2320 4E14  
                                                    l1512 710C  
                                                    l2304 0CA6  
                                                    l1408 4124  
                                                    l2209 899E  
                                                    l1361 1B5E  
                                                    l2313 AB26  
                                                    l1601 AC6A  
                                                    l1417 C260  
                                                    l1441 5160  
                                                    l2321 4D4C  
                                                    l1505 C15A  
                                                    l2233 00BC  
                                                    l1530 9F86  
                                                    l4002 B552  
                                                    l1370 1C72  
                                                    l2410 91E0  
                                                    l2314 AB4C  
                                                    l1610 A6B2  
                                                    l1602 AC2A  
                                                    l1434 50D6  
                                                    l2330 4E70  
                                                    l2322 4E50  
                                                    l2250 04AA  
                                                    l2242 01B2  
                                                    l2234 010A  
                                                    l2154 72EC  
                                                    l4003 B55C  
                                                    l1371 1C92  
                                                    l1363 1AC8  
                                                    l1611 A6A8  
                                                    l1435 4F52  
                                                    l2323 4D62  
                                                    l2251 0492  
                                                    l2235 010E  
                                                    l2139 93B4  
                                                    l4012 AB9E  
                                                    l1380 1E34  
                                                    l1372 1D10  
                                                    l1612 A69A  
                                                    l1604 AC54  
                                                    l1436 4FA4  
                                                    l1540 79B2  
                                                    l1452 5A8E  
                                                    l2324 4D78  
                                                    l2244 0CBE  
                                                    l2260 0592  
                                                    l4013 AB64  
                                                    l1517 A75C  
                                                    l1357 1E00  
                                                    l1373 1DE8  
                                                    l2405 913E  
                                                    l1429 B020  
                                                    l1437 4FE2  
                                                    l1541 78D8  
                                                    l1453 5BBA  
                                                    l2325 4D8E  
                                                    l2309 0D02  
                                                    l2237 01A0  
                                                    l1366 1B6C  
                                                    l1358 1864  
                                                    l2414 91FC  
                                                    l2406 91BE  
                                                    l1550 74C2  
                                                    l1542 7946  
                                                    l1454 5B52  
                                                    l2326 4DA4  
                                                    l2270 08E6  
                                                    l2262 05A4  
                                                    l1535 A010  
                                                    l1471 814E  
                                                    l1375 1D74  
                                                    l2407 9144  
                                                    l2343 37CC  
                                                    l1551 75A2  
                                                    l1439 50BC  
                                                    l1543 79AE  
                                                    l1455 5B44  
                                                    l1463 60FA  
                                                    l2327 4DBA  
                                                    l2319 4BBC  
                                                    l2271 08CE  
                                                    l2247 06AE  
                                                    l2263 0652  
                                                    l2255 04DA  
                                                    l1472 821A  
                                                    l2408 91BC  
                                                    l2360 39F4  
                                                    l2344 37D6  
                                                    l1552 74C8  
                                                    l1616 A6EC  
                                                    l1464 613A  
                                                    l2328 4DD0  
                                                    l2256 051E  
                                                    l2248 02DE  
                                                    l1392 3EF0  
                                                    l2176 8496  
                                                    l3320 BC86  
                                                    l1481 8236  
                                                    l1473 8154  
                                                    l2353 38BC  
                                                    l1553 7536  
                                                    l1617 A6BE  
                                                    l1449 5A50  
                                                    l1561 C248  
                                                    l1465 617A  
                                                    l2329 4DE6  
                                                    l2281 0980  
                                                    l2249 03EE  
                                                    l4018 BA5A  
                                                    l1298 AAA8  
                                                    l2442 AC84  
                                                    l2362 3A5C  
                                                    l2354 38CA  
                                                    l2346 38BA  
                                                    l1554 759E  
                                                    l1618 A6CE  
                                                    l1570 A964  
                                                    l1458 5BA8  
                                                    l1466 6236  
                                                    l2418 A2CA  
                                                    l2290 0C12  
                                                    l2282 09D6  
                                                    l2266 06F4  
                                                    l2258 0576  
                                                    l1386 41DA  
                                                    l4019 BA48  
                                                    l1299 AAAC  
                                                    l1483 8250  
                                                    l1475 8214  
                                                    l2443 AC9A  
                                                    l2355 38EC  
                                                    l2347 3872  
                                                    l1619 A6DA  
                                                    l1459 5BB6  
                                                    l1491 6414  
                                                    l2283 09E4  
                                                    l1395 3FA8  
                                                    l1387 3EE6  
                                                    l1635 4BA2  
                                                    l3155 C0C4  
                                                    l1484 8254  
                                                    l2444 ACB0  
                                                    l2460 9496  
                                                    l2380 2FAA  
                                                    l2284 0B48  
                                                    l2276 0926  
                                                    l2268 0810  
                                                    l1396 3F70  
                                                    l1388 3ED4  
                                                    l1477 8216  
                                                    l2453 A234  
                                                    l2373 32D6  
                                                    l2381 2FF0  
                                                    l2349 38B6  
                                                    l1565 A936  
                                                    l2429 B6A6  
                                                    l1493 6422  
                                                    l2285 0AB2  
                                                    l2277 0942  
                                                    l2366 6D42  
                                                    l2374 2EA6  
                                                    l2358 38FE  
                                                    l1582 BE06  
                                                    l3086 2214  
                   RADIO_WriteConfiguration@symbolTimeout 00A6  
                                                    l2519 C3D4  
                                                    l1831 99D8  
                                                    l2455 A24A  
                                                    l2463 9542  
                                                    l2383 32D4  
                                                    l2359 396A  
                                                    l2295 0C0C  
                                                    l2287 0B42  
                                                    l2279 096E  
                                                    l3095 36E0  
                                                    l3319 BC98  
                                                    l3511 12DE  
                                                    l2368 6D98  
                                                    l2456 A25E  
                                                    l2480 6EA8  
                                                    l2384 3038  
                                                    l1576 B3C8  
                                                    l3088 22F4  
                                                    l3512 12D0  
                                                    l3416 431A  
                                                    l1497 995A  
                                                    l2449 A21A  
                                                    l2481 6EEE  
                                                    l2393 31B2  
                                                    l2385 30A6  
                                                    l1489 625E  
                                                    l2289 0C18  
                                                    l3089 232C  
                                                    l3521 13E2  
                                                    l3505 122A  
                                                    l3417 435E  
                                                    l2378 3298  
                                                    l2394 3220  
                                                    l2386 30EC  
                                                    l3450 2C54  
                                                    l3530 1574  
                                                    l3522 13E6  
                                                    l2459 9544  
                                                    l2387 3132  
                                                    l2379 2F3C  
                                                    l1851 93D8  
                                                    l3099 3706  
                                                    l3451 2B64  
                                                    l3531 1596  
                                                    l3523 13FE  
                                                    l3515 13A4  
                                                    l3419 43E2  
                                                    l2468 8C22  
                                                    l2396 3268  
                                                    l2388 3136  
                                                    l1588 BFB2  
                                                    l3444 582A  
                                                    l3524 1538  
                                                    l3516 1310  
                                                    l2485 6FF6  
                                                    l2397 3272  
                                                    l2389 3192  
                                                    l1853 9400  
                                                    l3533 15C0  
                                                    l3525 1450  
                                                    l3509 12B4  
                                                    l3461 0D3A  
                                                    l2486 6FB0  
                                                    l1854 9410  
                                                    l3630 A38E  
                                                    l3454 2C28  
                                                    l3534 15EC  
                                                    l3518 13BE  
                                                    l3462 0D4C  
                                                    l2831 B83E  
                                                    l2479 6F5C  
                                                    l3631 A382  
                                                    l3447 590C  
                                                    l3455 2D9E  
                                                    l3543 1696  
                                                    l3527 1552  
                                                    l3519 13B0  
                                                    l3471 0F08  
                                                    l3720 A0B4  
                                                    l3536 1618  
                                                    l3528 1544  
                                                    l3480 0EBC  
                                                    l3464 0D7E  
                                                    l3721 A0BE  
                                                    l3713 A066  
                                                    l3457 2E62  
                                                    l3537 1622  
                                                    l3481 0EB6  
                                                    l3722 A0CC  
                                                    l3714 A076  
                                                    l3570 A8BA  
                                                    l3730 A4F4  
                                                    l3538 164E  
                                                    l3474 0E76  
                                                    l3466 0E68  
                                                    l1859 947C  
                                                    l3539 1658  
                                                    l3491 1022  
                                                    l3475 0F2E  
                                                    l3483 0EE4  
                                                    l3467 0E50  
                                                    l3716 A094  
                                                    l3572 A8D0  
                                                    l3812 6A24  
                                                    l3492 108C  
                                                    l3484 0ED0  
                                                    l3476 0E7A  
                                                    l3468 0E0E  
                                                    l3557 AE48  
                                                    l3717 A08C  
                                                    l3573 A8CA  
                                                    l3733 A514  
                                                    l3477 0E96  
                                                    l2774 C00A  
                                                    l3558 AE5C  
                                                    l3822 6A80  
                                                    l3902 8A7A  
                                                    l3734 A51E  
                                                    l3726 A4DA  
                                                    l3494 10B6  
                                                    l3486 0EF6  
                                                    l3478 0EAC  
                                                    l3831 6ABE  
                                                    l3823 6A76  
                                                    l3903 8A6E  
                                                    l3751 80F2  
                                                    l3735 A52C  
                                                    l3727 A4E6  
                                                    l3487 155C  
                                                    l3495 10F6  
                                                    l3576 A8F0  
                                                    l3832 6AB4  
                                                    l3808 69FA  
                                                    l3752 80E2  
                                                    l3496 11C4  
                                                    l3488 0F42  
                                                    l3577 A8F8  
                                                    l3569 A8B0  
                                                    l3841 8E9C  
                                                    l3817 6A8A  
                                                    l3905 8A96  
                                                    l3745 8024  
                                                    l3729 A4FC  
                                                    l3489 0F84  
                                                    l3834 6AE2  
                                                    l3843 8EC4  
                                                    l3835 6AFE  
                                                    l3747 8042  
                                                    l3851 7DFC  
                                                    l3499 116C  
                                                    l3940 A1CE  
                                                    l3780 971E  
                                                    l3844 8F02  
                                                    l3836 6B2E  
                                                    l3748 8084  
                                                    l3852 7E36  
                                                    l3781 9708  
                                                    l3845 8F28  
                                                    l3757 8116  
                                                    l3749 80B4  
                                                    l3861 7EBE  
                                                    l3853 7E5E  
                                                    l3909 BE24  
                                                    l3950 A88A  
                                                    l3758 810A  
                                                    l3862 7EB2  
                                                    l3935 A18C  
                                                    l3783 9746  
                                                    l3855 7E9A  
                                                    l3936 A180  
                                                    l3784 973C  
                                                    l3856 7E8A  
                                                    l3880 8B64  
                                                    l3945 A854  
                                                    l3777 96EA  
                                                    l3849 7DD0  
                                                    l3873 8AD2  
                                                    l3946 A848  
                                                    l3778 96E0  
                                                    l3866 9CA6  
                                                    l3890 B64A  
                                                    l3939 A1C0  
                                                    l3867 9CD6  
                                                    l3875 8AFA  
                                                    l3956 ABC6  
                                                    l3884 BD8C  
                                                    l3876 8B2C  
                                                    l3949 A87C  
                                                    l3957 ABBA  
                                                    l3877 8B3C  
                                                    l3894 89DE  
                                                    l3879 8B54  
                                                    l3896 8A56  
                                                    l3897 8A46  
                                            _BME280_reset C4A8  
                                                    l3998 B53A  
                                                    l3999 B532  
                                                    STR_1 FFF3  
                                                    STR_2 FF6D  
                                                    STR_3 FFE6  
                                                    STR_4 FFCB  
                                                    STR_5 FFD9  
                                        _RADIO_WritePower 8C92  
                            ??_LORAWAN_SetChannelIdStatus 0065  
                                 _PrepareJoinRequestFrame 6CEC  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1172 00B8  
                                     _RADIO_Transmit$1174 00BC  
                                            printf@tmpval 01AC  
                                            ?_RADIO_Reset 0001  
                                    ?_do_I2C_SEND_RESTART 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    u9460 C31A  
                                                    u9468 C31E  
                                                    u9830 C362  
                                                    _TMR1 000FCE  
                                                    _TMR5 000F4F  
                                       ??_UpdateDutyCycle 0062  
                                    _BME280_setSensorMode C264  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack C076  
                       __end_of_LORAWAN_SetApplicationEui BB82  
                       __end_of_LORAWAN_SetApplicationKey BB54  
                                 ??_wr2RegCompleteHandler 006B  
                                           _EUSART1_Write C49A  
                            ??_Weather_getTemperatureDegC 00F9  
                                ??_InitDefault433Channels 006B  
                       __size_of_do_I2C_SEND_RESTART_READ 0008  
                                ExecuteNewChannel@drRange 00AA  
                                                    _data 03D8  
                                      _PrepareSessionKeys 9770  
                               ?_do_I2C_SEND_RESTART_READ 0001  
                                                    _loRa 0204  
                                                    _main 420E  
                                            ___ftpack@arg 0060  
                                                    _rand ACCC  
                               __size_of_do_I2C_SEND_STOP 0008  
                                  __size_of_do_I2C_DO_ACK 0008  
                                            ___ftpack@exp 0063  
                          __end_of_UpdateMinMaxChDataRate 89B0  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                             ??_BME280_compensateHumidity 00AA  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 0048  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __end_of_LORAWAN_RxTimeout 420E  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers B0DA  
                                   ?_do_I2C_SEND_ADR_READ 0001  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                         _timer5ReloadVal 03F0  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 9554  
                                           _i2c_setBuffer C19E  
                                   ExecuteLinkAdr@txPower 0075  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                              EnableChannels1@channelMask 0064  
                                            ___ftmul@cntr 0081  
                         __end_of_Weather_initializeClick B2FA  
                                        ??_AssemblePacket 00CC  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006B  
                                  __size_of_TMR_SwapTimer 004A  
                                         __end_of_i2c_ISR AD82  
                              __end_of_RADIO_GetPacketSnr C66E  
                                            ___param_bank 000000  
                                            ___ftmul@sign 0082  
                                              _GetRx1Freq C3A6  
                             ??_BME280_compensatePressure 00AA  
                              __size_of_RADIO_ReleaseData 0006  
                        __size_of_rdBlkRegCompleteHandler 0044  
                                    ??_DIO2_ISR_Lora_Init 0062  
                                ??_do_I2C_DO_NACK_RESTART 0060  
                         __end_of_CreateAllSoftwareTimers B12C  
                               __size_of_mssp1_disableIRQ 0004  
                                            ___fttol@exp1 0091  
                  SearchAvailableChannel@transmissionType 00AF  
                         __size_of_HALResetPinOutputValue 001A  
                                            ___fttol@lval 008D  
                                   MacExecuteCommands@ptr 00B6  
                                   _RADIO_WriteFSKBitRate A7CC  
                                __size_of_SystemTimerInit 0008  
                                            _do_I2C_RESET C41C  
                                        __end_of_INT1_ISR C65C  
                                  _i2c_write1ByteRegister A968  
                                        __end_of_INT2_ISR C654  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0078  
                             i2c_setAddressNACKCallback@p 0067  
                           __end_of_OSCILLATOR_Initialize C4E0  
                      __size_of_LORAWAN_LinkCheckCallback 016C  
                                                   l20034 0926  
                                                   l20302 1B64  
                                                   l20160 0C9C  
                                                   l20056 096E  
                                         __end_of___abdiv A902  
                                                   l21108 9A4A  
                                                   l21262 6D90  
                                                   l20710 499A  
                                                   l20702 48DE  
                                                   l15014 C49E  
                                                   l21248 6D3A  
                                                   l20712 49B4  
                                                   l20720 4A50  
                                                   l20652 A008  
                                                   l20636 9F7E  
                                                   l20732 4AFE  
                                                   l20822 8426  
                                                   l10878 9D02  
                                                   l20818 8420  
                                                   l21730 1142  
                                                   l21722 10F6  
                                                   l20748 9580  
                                                   l20772 71BE  
                                                   l20828 8450  
                                                   l15164 BC86  
                                                   l21660 0ED0  
                                                   l20766 71A0  
                                                   l20782 71F2  
                                                   l20838 8492  
                                                   l21750 122E  
                                                   l20848 A414  
                                                   l21656 0EB6  
                                                   l21770 12D0  
                                                   l20788 7250  
                                                   l21772 12D6  
                                                   l17322 AB64  
                                                   l17340 B290  
                                                   l21788 13B0  
                                                   l17408 460C  
                                                   l18314 3D40  
                                                   l17380 456C  
                                                   l23596 A96C  
                                                   l18334 3E26  
                                                   l18166 8C46  
                                                   l17544 BA48  
                                                   l17448 4866  
                                                   l17392 45A6  
                                                   l19250 386E  
                                                   l18700 6EE6  
                                                   l19252 3872  
                                                   l18540 AC22  
                                                   l18278 3C4E  
                                                   l19264 38B4  
                                                   l18298 3CC6  
                                                   l19612 7D76  
                                                   l18742 9550  
                                                   l19462 939C  
                                                   l19606 7CDA  
                                                   l17864 7A62  
                                                   l17882 7ADE  
                                                   l19466 93AC  
                                                   l19458 938E  
                                                   l19900 04DA  
                                                   l19558 9400  
                                                   l19742 4DFC  
                                                   l19478 6256  
                                                   l19922 0576  
                                __end_of_i2c1_driver_open C2A6  
                                                   ?_main 0001  
                                                   ?_rand 00A6  
                                         __end_of___awdiv A0D6  
                                __end_of_i2c1_driver_stop C6B4  
                                         __end_of___ftadd 6B54  
                                              _FillSubKey AA2E  
                                         __end_of___awmod A536  
                                         __end_of___ftdiv 8F5A  
                       __end_of_IOCB4_SetInterruptHandler C55A  
                                         __end_of___ftneg BD9A  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv A1E0  
                                         RADIO_Transmit@i 00C1  
                                         __end_of___ftmul 8B9E  
                                                   u21010 91F4  
                                                   u21100 9504  
                                                   u10380 C306  
                                         ___awdiv@divisor 0068  
                                                   u21110 9550  
                                                   u20070 BE02  
                                                   u20400 3E74  
                                                   _T1CON 000FCD  
                                         __end_of___llmod A89C  
                                                   u20330 3CC2  
                                                   u21050 6F5A  
                                         __end_of___ftsub B674  
                                                   u20260 3B7C  
                                                   u20180 A098  
                                                   u21220 317A  
                                                   u21140 2F3A  
                                                   u10388 C30A  
                                                   u20245 3B4C  
                                         __end_of___fttol 8AA8  
                                                   u20350 3D14  
                                                   u20270 3B7E  
                                                   u20600 B3C2  
                                                   u22008 937A  
                                                   u20505 5F98  
                                                   u20370 3DAE  
                                                   u21250 32E2  
                                                   u20515 5FBC  
                                       ??_EnableChannels1 0069  
                                                   u21350 5D40  
                                                   u20710 BC20  
                                                   u22038 B9CA  
                                                   u21408 A34A  
                                                   u22400 A216  
                                                   u20720 BC28  
                                                   u22080 6428  
                                                   _LATC2 007C5A  
                                                   u20490 5F70  
                                                   u21434 B010  
                                                   u20570 A960  
                                                   u22330 7C92  
                                    RxJoinResponse@status 0001  
                                                   u20475 5EFE  
                                                   u21435 B00A  
                                                   u22315 A5C6  
                                                   _LATD3 007C63  
                                                   u20900 823C  
                                                   u21365 5D68  
                                                   u24110 7F1E  
                                                   u21375 5D8C  
                                                   u22175 7134  
                                                   u16111 69B8  
                                                   u24120 7F36  
                                                   u23080 0A18  
                       __end_of_AckRetransmissionCallback 849C  
                  SearchAvailableChannel@randomNumberCopy 00B6  
                                                   u22345 7CCA  
                                                   u16121 69CC  
                                                   u24130 7F9E  
                                                   u21810 38E0  
                                                   u23250 0C68  
                                                   u23218 0C44  
                                                   u16210 6A54  
                                                   u23219 0C58  
                                                   u22355 7CEC  
                                                   u21580 5A20  
                                                   u22460 A27E  
                                                   u23308 0CEE  
                                                   u23180 0BD6  
                                                   u23148 0BB0  
                                                   u22700 0278  
                                                   u24060 82A0  
                                                   u14700 96D2  
                                                   u17100 811C  
                                                   u24125 7F2A  
                                                   u23149 0BC4  
                                                   u23405 3F1C  
                                                   u25005 33EA  
                                                   u20790 AC66  
                                                   u23318 0D18  
                                                   u24070 82B8  
                                                   u25006 33F2  
                                                   u16150 69EC  
                                                   u17030 7EC4  
                                                   u24135 7F92  
                                                   u25015 3472  
                                                   u25007 3400  
                                                   u20880 8228  
                                                   u22640 017E  
                                                   u24080 8320  
                                       ??_BME280_readByte 0077  
                                                   _T5CON 000F4E  
                                                   u24305 7824  
                                                   u22721 02B6  
                                                   u25025 34A4  
                                                   u16321 8E84  
                                                   u20970 91CA  
                                                   u22378 7D84  
                                                   u16250 6A92  
                                                   u24075 82AC  
                                                   u22379 7D98  
                                                   u25115 371A  
                                                   u25035 34FA  
                                                   u22580 4E98  
                                                   u23428 3F94  
                                                   u25116 3720  
                                                   u25036 3500  
                                                   u14740 9750  
                                                   u16180 6A16  
                                                   u17220 8A80  
                                                   u26100 126C  
                                                   u26020 10C8  
                                                   u24085 8314  
                                                   u24405 4B18  
                                                   u25117 372E  
                                                   u25045 3568  
                                                   u25037 350E  
                                                   u16341 8EAC  
                                                   u22750 03DE  
                                                   u22670 019A  
                                                   u24510 7208  
                                                   u25046 356E  
                                                   u26030 1108  
                                                   u23615 1728  
                                                   u25055 35DA  
                                                   u25047 357C  
                              __end_of_i2c1_driver_TXData C546  
                                                   u24280 77D8  
                                                   u25320 6D86  
                                                   u22920 06D8  
                                                   u25056 35E0  
                                                   u16280 6AC6  
                                                   u23625 17AC  
                                                   u23545 4144  
                                                   u25065 3614  
                                                   u25057 35EE  
                                                   u17161 89C2  
                                                   u22498 A2B2  
                                                   u24610 841A  
                                                   u25066 361A  
                                                   u26130 12EE  
                                                   u23635 189E  
                                                   u22499 A2C6  
                                                   u25075 363C  
                                                   u25067 3628  
                                                   u16371 8ABA  
                                                   u25340 6DDC  
                                                   u22940 07F4  
                                                   u23900 A8DE  
                                                   u24380 4AA8  
                                                   u25076 3644  
                                                   u17180 89FC  
                                                   u16460 A500  
                                                   u26300 1660  
                                                   u26060 1142  
                                                   u23805 1D62  
                                                   u23645 1922  
                                                   u25245 B866  
                                                   u24525 7240  
                                                   u25085 368A  
                                                   u25077 3652  
                                                   u23670 1A80  
                                                   u22918 068A  
                                                   u22838 04FA  
                                                   u23478 4014  
                                                   u24470 71CC  
                                                   u25086 3692  
                                                   u26310 1676  
                                          __CFG_DEBUG$OFF 000000  
                                                   u24295 7800  
                                                   u23815 1D86  
                                                   u22919 069E  
                                                   u22839 050E  
                                                   u25175 9DA4  
                                                   u24535 7262  
                                                   u25087 36A0  
                                                   u16391 8AE2  
                                                   u19120 A190  
                                                   u25280 9A84  
                                                   u23680 1A9E  
                                                   u23568 41C6  
                                                   u26160 13CC  
                                                   u17185 89F4  
                                                   u19050 4854  
                                                   u19210 AA82  
                                                   u23770 1D14  
                                                   u23690 1AFE  
                                                   u22890 05E4  
                                                   u26170 13DC  
                                                   u24395 4AEE  
                                                   u19220 AA84  
                                                   u22868 0552  
                                                   u23588 41FA  
                                                   u23685 1A94  
                                                   u22869 0566  
                                                   u24805 1F16  
                                                   u24725 51BC  
                                                   u19150 A858  
                                                   u19070 489A  
                                                   u23790 1D3C  
                                                   u22798 046E  
                                                   u24718 A438  
                                                   u24638 844A  
                                                   u17550 C50E  
                                                   u24910 234C  
                                                   u24806 1F1E  
                                                   u24726 51C2  
                                                   u23695 1AF2  
                                                   u22799 0482  
                                                   u24719 A44C  
                                                   u24815 2004  
                                                   u24807 1F2C  
                                                   u24735 5204  
                                                   u24727 51D0  
                                                   u19240 9B5A  
                                                   u23848 1E20  
                                                   u24920 237E  
                                                   u24816 200A  
                                                   u24736 520C  
                                                   u24825 204A  
                                                   u24817 2018  
                                                   u24745 526A  
                                                   u24737 521A  
                                                   u24930 23A6  
                                                   u24826 2050  
                                                   u24746 5270  
                                                   u24915 2340  
                                                   u24835 2084  
                                                   u24827 205E  
                                                   u24755 52D2  
                                                   u24747 527E  
                                                   u19420 8892  
                                                   u23868 1E54  
                                                   u23980 9082  
                                                   u24836 208A  
                                                   u24756 52D8  
                                                   u24925 2374  
                                                   u24845 20AC  
                                                   u24837 2098  
                                                   u24765 5304  
                                                   u24757 52E6  
                                                   u22998 089E  
                                                   u24678 847E  
                                                   u24950 2432  
                                                   u24846 20B4  
                                                   u24766 530C  
                                                   u22999 08B2  
                                                   u24935 239A  
                                                   u24855 2116  
                                                   u24847 20C2  
                                                   u24775 535A  
                                                   u24767 531A  
                                                   u16951 7DB4  
                                                   u24856 211E  
                                                   u24776 5362  
                                                   u24945 23E8  
                                                   u24865 217C  
                                                   u24857 212C  
                                                   u24785 1EB4  
                                                   u24777 5370  
                                                   u19530 9EDC  
                                                   u24946 23F0  
                                                   u24866 2182  
                                                   u24786 1EBA  
                                                   u24955 2428  
                                                   u24947 23FE  
                                                   u24875 21CE  
                                                   u24867 2190  
                                                   u24795 1EEE  
                                                   u24787 1EC8  
                                                   u16971 7DE0  
                                                   u18900 AB86  
                                                   u24876 21D6  
                                                   u24796 1EF4  
                                                   u25860 0DE8  
                                                   u24965 2460  
                                                   u24877 21E4  
                                                   u24797 1F02  
                                                   u29117 BC8E  
                                                   u19550 9F04  
                                                   u24966 2468  
                                                   u19711 79E8  
                                                   u24975 24CE  
                                                   u24967 2476  
                                                   u24895 2228  
                                                   u29127 C368  
                                                   u18920 C51A  
                                                   u24976 24D4  
                                                   u24896 222E  
                                                   u28408 B434  
                                                   u29137 BA18  
                                                   u24985 333E  
                                                   u24977 24E2  
                                                   u24897 223C  
                                                   u28409 B448  
                                                   u19810 268E  
                                                   u19570 9F2A  
                                                   u24986 3346  
                                                   u28610 9C70  
                                                   u18907 AB7C  
                                                   u24995 339A  
                                                   u24987 3354  
                                                   u19740 7A96  
                                                   u24996 33A2  
                                                   u28428 9D2E  
                                                   u25980 0FBE  
                                                   u24997 33B0  
                                                   u28429 9D42  
                                                   u19815 2684  
                                                   u19680 B53E  
                                                   u19840 26DE  
                                                   u25985 0FB4  
                                                   u18970 45A0  
                                                   u28458 A660  
                                                   u19915 27AE  
                                                   u28459 A674  
                                                   u19860 26EE  
                                                   u28468 AF60  
                                                   u28469 AF74  
                                                   u28805 7BF8  
                                                   u18990 45F2  
                                                   u28815 7C2E  
                                         __end_of___lwmod B566  
                                                   u19890 2746  
                                                   u28498 AD68  
                                                   u28770 C2F6  
                                                   u28499 AD7C  
                                                   u28678 901C  
                                                   u28679 902E  
                                                   u28785 7B80  
                                                   u28795 7BB6  
                                                   i2l612 879C  
                                                   i2l613 86DA  
                                                   i2l615 8736  
                                                   i2l545 73D4  
                                                   i2l617 879A  
                                                   i2l546 7450  
                                                   i2l555 B5FA  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 006A  
                             __size_of_RADIO_ReceiveStart 0230  
                     __size_of_LORAWAN_SetChannelIdStatus 005A  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TMR5H 000F50  
                                                   _TMR5L 000F4F  
                                    BME280_writeByte@data 0074  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 009E  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse C6E0  
                                            ___lltoft@exp 00E3  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0071  
                                             i2c_open@ret 0063  
                                        __end_of_TMR1_ISR C35E  
                               FindSmallestDataRate@found 0061  
                                           __CFG_WRTB$OFF 000000  
                                                   _adc_H 0104  
                                           __CFG_WRTC$OFF 000000  
                                                   _adc_P 0200  
                                                   _adc_T 0108  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00C6  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0046  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC C604  
                              __end_of_i2c1_driver_isNACK C322  
                            ??_IncludeMacCommandsResponse 0065  
                                         __end_of_dpowers FE67  
                           __end_of_RADIO_WatchdogTimeout B386  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0018  
                                                   _scale 2A0E  
                                         __end_of_isdigit BE2C  
                                                   _randx 01F9  
                          LORAWAN_RxDone@frmPayloadLength 00F0  
                           ValidateChannelMaskCntl@result 0060  
                              ?_do_I2C_SEND_RESTART_WRITE 0001  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                           ___ftpack@sign 0064  
                                                   _srand C47C  
                                        UpdateDataRange@i 0063  
                                LORAWAN_RxDone@joinAccept 00EE  
                                                   _putch C48C  
                                   ??_do_I2C_SEND_RESTART 0060  
                                   _i2c_read1ByteRegister 9BE0  
                                  _UpdateJoinSuccessState 7C64  
                                          ?_INT2_CallBack 0001  
                                   ?_BME280_setSensorMode 0001  
                                _INT1_SetInterruptHandler C564  
                  __end_of_i2c1_driver_setBusCollisionISR C53C  
                 __size_of_i2c1_driver_setBusCollisionISR 000A  
                          _i2c1_driver_setBusCollisionISR C532  
                                          ?_EUSART1_Write 0001  
                                              _ComputeMic A9CC  
                                 __end_of_TMR1_Initialize BBDC  
                                  UpdateCfList@joinAccept 00A6  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                          ??_BME280_compensateTemperature 00AA  
                                 __size_of_mssp1_clearIRQ 0004  
                                                   ltemp0 0048  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 004C  
                                                   ltemp2 0050  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 0166  
                              PrepareSessionKeys@appNonce 006D  
                               i2c_write1ByteRegister@reg 0071  
                                  UpdateChannelIdStatus@i 0063  
                           __end_of_UpdateCurrentDataRate C5A0  
                            __size_of_RADIO_FSKPacketSent 012E  
                           __end_of_UpdateChannelIdStatus 75C8  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                  ?_do_I2C_SEND_ADR_WRITE 0001  
                                                   ttemp0 0048  
                                                   ttemp1 004B  
                                                   ttemp2 004E  
                                                   ttemp3 0051  
                                UpdateFrequency@channelId 0064  
                                                   status 000FD8  
                                                   wtemp0 0048  
                                                   wtemp1 004A  
                                                   wtemp2 004C  
                                                   wtemp3 004E  
                                                   wtemp4 0050  
                                                   wtemp5 0052  
                                                   wtemp6 0049  
                                      _MacExecuteCommands 4BAC  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00AD  
                                     __size_of_RADIO_DIO0 0090  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 0056  
                                     __size_of_RADIO_DIO3 0022  
                                     __size_of_RADIO_DIO4 0032  
                                     __size_of_RADIO_DIO5 0028  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                      _EUSART1_DefaultFramingErrorHandler 000000  
                         __size_of_Weather_getPressureKPa 0012  
                                         _TMR1_WriteTimer BFF6  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                     LORAWAN_RxDone@fPort 00DF  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 48A6  
                                          ?_i2c_setBuffer 0060  
                                            ?_setCallBack 0060  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                               ??_BME280_initializeSensor 0076  
                        __end_of_RADIO_WriteConfiguration 2A0E  
                          __size_of_BME280_getTemperature 0050  
                           __end_of_BME280_getTemperature B17C  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                                         _TMR5_Initialize C110  
                            __size_of_RADIO_SetIQInverted 000A  
                                           _fsmStateTable FEB5  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 849C  
                                              _i2c_poller C12E  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00D3  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                     ?_MacExecuteCommands 00B0  
                                       _SPI2_Exchange8bit C3CA  
                                              _i2c_status 03A0  
                              __end_of_EUSART1_Initialize B340  
                                            __end_of_main 455C  
                              AssembleEncryptionBlock@dir 0072  
                                            __end_of_rand AD28  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 01BC  
                                __end_of_RADIO_ReadRandom 9AB4  
                                        _SetJoinFailState B9AE  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress C1B8  
                                    _ExecuteRxTimingSetup BCD4  
                                       __end_of_IOCB4_ISR C076  
                                        __end_of_i2c_open 98C4  
                               __size_of_UpdateDLSettings 001C  
                                   _BME280_setStandbyTime C0D4  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0018  
                                       ?_BME280_getStatus 0001  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower C5B4  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                  MacExecuteCommands@done 00B5  
                                           setCallBack@cb 0060  
                               _BME280_compensateHumidity 32F0  
                                           _do_I2C_DO_ACK C61C  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00FF  
                                           ___fttol@sign1 008C  
                                                  ??_rand 00A8  
                                 __end_of_CCP5_Initialize C47C  
                                           _do_I2C_TX$317 006B  
                                          ??_RADIO_RxDone 00F3  
                                      ??_BME280_getStatus 0078  
                                       ?_i2c_restartWrite 0069  
                                          ??_RADIO_TxDone 00E3  
                           __size_of_i2c1_driver_sendNACK 0006  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse C6E2  
                       __end_of_LORAWAN_LinkCheckCallback 72F6  
                                            i2c_close@ret 0060  
                          __end_of_SetReceptionNotOkState A2E0  
                             __end_of_UpdateReceiveDelays B6B6  
                         __end_of_AssembleEncryptionBlock 8C92  
                                __size_of_SPI2_Initialize 000E  
                                    __size_of__tdiv_to_l_ 0134  
                                  ??_SystemBlockingWaitMs 0064  
                                        ??_StartReTxTimer 009A  
                                     ??_SPI2_Exchange8bit 0060  
                        CountfOptsLength@macCommandLength 0066  
                                      ??_i2c_restartWrite 006B  
                        __size_of_BME280_readMeasurements 0140  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                           __size_of_i2c1_driver_resetBus 0002  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                 ?_do_I2C_DO_ADDRESS_NACK 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer B26A  
                               _BME280_compensatePressure 1E68  
                                          _EnableChannels C166  
                               ??_PrepareJoinRequestFrame 00D0  
                                       ?_BME280_readBlock 007B  
                                          _HALSPICSAssert C6CC  
                                    ??_MacExecuteCommands 00B3  
                                             ?_CheckFlags 0060  
                                 LORAWAN_TxDone@timeOnAir 00BB  
                                              _ExtractMic ADDC  
                         __size_of_SearchAvailableChannel 012A  
                                                  _ADCON0 000FC2  
                                                  _ADCON1 000FC1  
                                                  _ADCON2 000FC0  
                                        __end_of___altoft A3D8  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue C1D2  
                                        ___llmod@dividend 0060  
                                                  ?_scale 0083  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CCPR5H 000F56  
                                                  _CCPR5L 000F55  
                                        ___awdiv@dividend 0066  
                                                  ?_srand 0072  
                  __end_of_LORAWAN_ReceiveWindow1Callback 960C  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                          _LORAWAN_ReceiveWindow1Callback 9554  
                                _RADIO_FSKPacketSent$1193 00EB  
                                                  _ANSELA 000F38  
                                                  ?_putch 0001  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                        __end_of___ftpack 9770  
                                         _ValidateTxPower BC06  
                                      ??_BME280_readBlock 007E  
                                                  _T1GCON 000FCC  
                                                  _T5GCON 000F4D  
                                 SwTimerReadValue@timerId 0099  
                                        __end_of___lltoft AC10  
                                 TMR1_WriteTimer@timerVal 0060  
                                          _ExecuteLinkAdr 4EA2  
                  __end_of_LORAWAN_ReceiveWindow2Callback 93B8  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                          _LORAWAN_ReceiveWindow2Callback 92E0  
                                                  i2l2620 0044  
                                                  i2l2622 0050  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l1663 AF38  
                                                  i2l2625 005C  
                                                  i2l2618 0038  
                                                  i2l2774 C194  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                 BME280_readByte@reg_addr 0077  
                                                  _RCREG1 000FAE  
                                        __end_of___lwtoft BDC0  
                                                  _RCSTA1 000FAB  
                                      __size_of_i2c_close 0022  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0060  
                                                  _SPBRG1 000FAF  
                        __size_of_ValidateChannelMaskCntl 0020  
                                                  _TMR5IF 007BF1  
                                  ??_do_I2C_SEND_ADR_READ 0060  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00B2  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0070  
                                rdBlkRegCompleteHandler@p 0069  
                                           ?_LORAWAN_Send 00D3  
                         __size_of_AutomaticReplyCallback 0026  
                                               ??_i2c_ISR 006D  
                                                  _TXREG1 000FAD  
                              __size_of_LORAWAN_RxTimeout 0364  
                                                  _TXSTA1 000FAC  
                                       ?_ExecuteDevStatus 0060  
                              __end_of_DIO0_ISR_Lora_Init C46C  
                                __size_ofi2_TMR_SwapTimer 0044  
                                       ExecuteLinkAdr@ptr 006F  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FD3F  
                             RADIO_WriteFrequency@num_mod 0071  
                                     LORAWAN_TxDone@delta 00D2  
                             __size_of_ComputeSessionKeys 0086  
                                               AESCmac@k1 019C  
                                               AESCmac@k2 018C  
                               __end_of_SPI2_Exchange8bit C3DC  
                                     LORAWAN_TxDone@found 00D1  
                                         _CheckMcastFlags A1E0  
                                     LORAWAN_TxDone@minim 00DE  
                                      ??_ExecuteDevStatus 0062  
                                                  _Random BE92  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData C6E2  
                                     LORAWAN_TxDone@ticks 00DA  
                                     _weather_initialized 012C  
                                   _i2c1_driver_getRXData C69C  
                      SearchAvailableChannel@randomNumber 00B9  
                                        __end_of__powers_ FE8E  
                    __end_of_TMR1_DefaultInterruptHandler C6E6  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler C6E4  
                                             ?_GetRx1Freq 0060  
                           ValidateDataRange@dataRangeNew 0063  
                                 _RADIO_FHSSChangeChannel B6B6  
                                                  ___ftge 9C74  
                                               ??___abdiv 0061  
                             __end_of_do_I2C_DO_NACK_STOP C61C  
                     __end_of_i2c_setDataCompleteCallback C21C  
                             _i2c_setDataCompleteCallback C204  
                                                  ___lmul AE36  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul BCFC  
                             ?_LORAWAN_LinkCheckConfigure 00A6  
                                         _i2c_masterWrite C604  
                                   ?_ExecuteRxTimingSetup 0075  
                                               ??___awdiv 006A  
                                               ??___ftadd 0093  
                                          __CFG_STVREN$ON 000000  
                                               ??___awmod 0064  
                                    _FindSmallestDataRate 9124  
                                               ??___ftdiv 00EA  
                                               ??___ftneg 0063  
                                               ??___lldiv 0068  
                                               ??___ftmul 007A  
                                               ??___llmod 0068  
                                               ??___ftsub 00EA  
                                               ??___fttol 0087  
                         __size_of_do_I2C_DO_NACK_RESTART 0008  
                            i2c1_driver_setI2cISR@handler 0060  
                          __size_of_Weather_getHumidityRH 0012  
                                               ??___lwmod 00AC  
                           __end_of_Weather_getHumidityRH C3A6  
                      RADIO_SetChannelFrequency@frequency 0060  
                                         StartReTxTimer@i 00A2  
                                ?_EUSART1_SetErrorHandler 0060  
                               ExecuteRxParamSetupReq@ptr 00A6  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy AB52  
                                                  _memset BA3E  
                                                  _fround 56C0  
                                                  _t_fine 0100  
                                                  clear_0 8564  
                                                  clear_1 8576  
                                                  clear_2 8582  
                                                  clear_3 858E  
                                                  clear_4 859A  
                                                  clear_5 85AA  
                    BME280_setOversamplingPressure@osrs_p 0061  
                                 SwTimerIsRunning@timerId 0060  
                                        ___awdiv@quotient 006C  
                                          ?_do_I2C_DO_ACK 0001  
                                         ___awmod@divisor 0062  
                                         ___awmod@counter 0064  
                                                  _printf 0D2C  
                        ??_EUSART1_SetOverrunErrorHandler 0062  
                         ?_EUSART1_SetOverrunErrorHandler 0060  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                  _Weather_getPressureKPa C382  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0060  
                                   ___ftmul@f3_as_product 007E  
                                         ?_RxJoinResponse 0001  
                                ?_TMR5_HasOverflowOccured 0001  
                                 __size_of_EncodeShiftRow 0164  
                                  __end_of_EnableChannels C182  
                             __end_of_i2c1_driver_sendACK C668  
                          __end_of_do_I2C_DO_ADDRESS_NACK B456  
                              ??_RADIO_UnhandledInterrupt 0064  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler C6EA  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler C6E8  
                                            __pdataCOMRAM 0054  
                                               ??_isdigit 0060  
                                             RxData@pData 0060  
                                  __end_of_HALSPICSAssert C6D0  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 005E  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 0091  
                              i2c_write1ByteRegister@data 0072  
                                      ??_SwTimerIsRunning 0060  
                                          ?_TMR_SwapTimer 0068  
                         RADIO_FHSSChangeChannel@irqFlags 0079  
                                       ?_ExecuteDutyCycle 0060  
                                      ??_ExecuteLinkCheck 0062  
                             ?_i2c_setAddressNACKCallback 0065  
                                            __mediumconst FD3E  
                             __end_of_i2c1_driver_restart C6B8  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                            ?_returnReset 0069  
                                                  srand@x 0072  
                                ADC_GetConversion@channel 0064  
                                   _i2c1_driver_setI2cISR C528  
                             __end_of_i2c1_driver_startRX C6A4  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0095  
                                         _UpdateDataRange 788A  
                                  ?_i2c_read1ByteRegister 0071  
                                         ??_EUSART1_Write 0060  
                                  __end_of_ExecuteLinkAdr 516A  
                                      ??_ExecuteDutyCycle 0062  
                                  ??_BME280_setSensorMode 0060  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                                       ?_BME280_writeByte 0074  
                      __end_of_LORAWAN_SetChannelIdStatus ADDC  
                              _LORAWAN_SetChannelIdStatus AD82  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                        __size_of_Weather_initializeClick 0046  
                                 __end_of_TMR1_WriteTimer C016  
                                   __end_of_SwTimerCreate 9EB2  
                      __end_of_Weather_getTemperatureDegC C382  
                              _Weather_getTemperatureDegC C370  
                          ??_SelectChannelForTransmission 00BB  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack C036  
                             ??_LORAWAN_SetApplicationEui 006D  
                             ??_LORAWAN_SetApplicationKey 006D  
                               ExecuteDutyCycle@maxDCycle 0065  
                                       ??_RADIO_RxTimeout 00CB  
                                        ?_TMR1_Initialize 0001  
               __end_of_BME280_setOversamplingTemperature BF36  
              __size_of_BME280_setOversamplingTemperature 0020  
                      ?_BME280_setOversamplingTemperature 0001  
                     ??_BME280_setOversamplingTemperature 0060  
                       _BME280_setOversamplingTemperature BF16  
                                      ??_BME280_writeByte 0075  
                                 __end_of_TMR5_Initialize C12E  
                             UpdateFrequency@frequencyNew 0060  
                                       _SYSTEM_Initialize BA6E  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00B6  
                                          ??_LORAWAN_Join 00DB  
                                          ??_LORAWAN_Send 00D7  
                          __size_of_RADIO_FSKPayloadReady 00B4  
                                              __accesstop 0060  
                                 __end_of__initialization 85B0  
                                              ___altoft@c 00CD  
                           __end_of_RADIO_FSKPayloadReady 96C0  
                                         ??_i2c_setBuffer 0064  
                                          _RADIO_Transmit 5BC4  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                        _do_I2C_SEND_STOP C624  
                                              ___ftadd@f1 008D  
                                              ___ftadd@f2 0090  
                                      __size_of_do_I2C_RX 0070  
                                      __size_of_do_I2C_TX 0090  
                                    LORAWAN_RxDone@buffer 01F2  
                                  RADIO_ReadRandom@retVal 006F  
                                              ___ftge@ff1 0060  
                                              ___ftge@ff2 0063  
                                        _ConfigureRadioRx BC5A  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx B036  
                                     ExecuteDevStatus@ptr 0060  
                              __end_of_BME280_getHumidity B21C  
                        ??_UpdateReceiveWindow2Parameters 0065  
                         ?_UpdateReceiveWindow2Parameters 0060  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 00E8  
                                          _maxPayloadSize FEE5  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                              __end_of_mssp1_IRQisEnabled C30E  
                                              ___ftdiv@f1 00E4  
                                              ___ftdiv@f2 00E7  
                                              ___ftdiv@f3 00EE  
                                     _i2c_masterOperation B774  
                                __size_of_do_I2C_TX_EMPTY 0054  
                                              ___ftneg@f1 0060  
                              ValidateChannelId@channelId 0062  
                      __size_of_BME280_startForcedSensing 0016  
                               ExecuteLinkAdr@channelMask 0073  
                                 _rdBlkRegCompleteHandler B456  
                              ?_BME280_startForcedSensing 0001  
                                              ___ftmul@f1 0074  
                                              ___ftmul@f2 0077  
                              __end_of_mssp1_waitForEvent C370  
                                              ___ftsub@f1 00E4  
                                              ___ftsub@f2 00E7  
                                              ___fttol@f1 0083  
                                             ?_i2c_poller 0001  
                                              _adcVoltage 011D  
                                      __end_of_HALSPISend C4EE  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09E8  
                                  _SearchAvailableChannel 812E  
                              __end_of_BME280_getPressure B1CC  
                                 ValidateChannelId@result 0061  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 C690  
                                            __pidataBANK2 C694  
                                            __pidataBANK3 C3DC  
                                            __pidataBANK4 BED6  
                                            __pidataBANK5 BEF6  
                                  ?_BME280_setStandbyTime 0001  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init C6DE  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                                              ___lltoft@c 00DB  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                        _mssp1_disableIRQ C6BC  
                                _RADIO_WriteConfiguration 250E  
                                       ??_RADIO_WriteMode 0067  
                                           __end_of_scale 2E8E  
                                         _spreadingFactor FF03  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler C6E8  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler C6E6  
                                __end_of_RADIO_WritePower 8D82  
                                 ?_ExecuteRxParamSetupReq 00A6  
                                           __end_of_srand C48C  
                                           __end_of_putch C49A  
                                       LORAWAN_RxDone@hdr 00F1  
                                            ??_RADIO_DIO0 00F5  
                                            ??_RADIO_DIO1 00CB  
                                            ??_RADIO_DIO2 007A  
                                            ??_RADIO_DIO3 0065  
                                            ??_RADIO_DIO4 0065  
                                            ??_RADIO_DIO5 0065  
                            __size_of_Weather_readSensors 001E  
                                  _InitDefault433Channels 9FC6  
                                         _UpdateFrequency B49A  
                                  _AutomaticReplyCallback BDC0  
                                       __end_of_i2c_close BE4E  
                                              ___lwtoft@c 0068  
                             ??_IOCB4_SetInterruptHandler 0062  
                                ??_INTERRUPT_GetDioStatus 0060  
                                            ??_RADIO_Init 007F  
                                        ?_CCP5_Initialize 0001  
                               SwTimerSetCallback@timerId 0063  
                              LORAWAN_RxDone@channelIndex 00E0  
                          AssembleEncryptionBlock@blockId 006F  
                             __size_of_EXT_INT_Initialize 002A  
                              __end_of_BME280_isMeasuring C2FA  
                                              __div_to_l_ 8004  
                                         _UpdateDutyCycle B4DE  
                                    ?_i2c_masterOperation 0001  
                                         ?_EnableChannels 006C  
                                 ??_TMR_OverrideRemaining 006E  
                                 __end_of_ValidateTxPower BC30  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init C6DE  
                            __end_of_HALResetPinMakeInput C6D8  
                                              _calibParam 016B  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler C564  
                                        RADIO_DIO0@opMode 00F8  
                             RADIO_RegisterRead@readValue 0063  
                      __end_of_IncludeMacCommandsResponse 32F0  
                              _IncludeMacCommandsResponse 2E8E  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                                UpdateCfList@bufferLength 00A8  
                                        RADIO_DIO2@opMode 007B  
                                   LORAWAN_Send@confirmed 00D9  
                                             ?_ExtractMic 006B  
                                          setCallBack@idx 0064  
                                         ?_ExecuteLinkAdr 006F  
                                        _ValidateDataRate C24C  
                                         __div_to_l_@exp1 006B  
                                         __div_to_l_@cntr 006A  
                                  _do_I2C_DO_NACK_RESTART C60C  
                         LORAWAN_GetMaxPayloadSize@result 006A  
                                     __size_of_GetRx1Freq 0012  
                                                 ??_scale 0086  
                               __end_of_SYSTEM_Initialize BA9C  
                                         __div_to_l_@quot 0066  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                                 ??_putch 0061  
                                  __end_of_RADIO_Transmit 5DFC  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 660E  
                                          _mssp1_clearIRQ C6C0  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00FF  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0062  
                                     __end_of_SwTimerStop BD74  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags A262  
                          __size_of_rd2RegCompleteHandler 0030  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FEED  
                        BME280_getTemperature@temperature 00F6  
                                               ?_i2c_open 0001  
                           __end_of_rd2RegCompleteHandler B91E  
                                      _DELAY_milliseconds BC84  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower C5AA  
                          __size_of_wr2RegCompleteHandler 0030  
                                    __end_of_RADIO_SetCRC C5C8  
                                  __size_of_DIO0_ISR_Lora 0006  
                           __end_of_wr2RegCompleteHandler B9AE  
                                 ??_HALResetPinMakeOutput 0060  
                                 __end_of_i2c_masterWrite C60C  
                                    __end_of_RADIO_RxDone 9124  
                              __end_of_RADIO_RxFSKTimeout B7EC  
                                    __end_of_RADIO_TxDone 837E  
                                     __size_of_FillSubKey 0062  
                                      __end_of_RADIO_DIO0 9E26  
                                      __end_of_RADIO_DIO1 B26A  
                                      __end_of_RADIO_DIO2 AEE4  
                                      __end_of_RADIO_DIO3 BE92  
                                      __end_of_RADIO_DIO4 B88A  
                                      __end_of_RADIO_DIO5 BCD4  
                                           __div_to_l_@f1 0060  
                                           __div_to_l_@f2 0063  
                                   _rd1RegCompleteHandler B91E  
                               ??_RADIO_FHSSChangeChannel 0079  
                                  ?_i2c1_driver_getRXData 0001  
                             __size_of_SwTimerSetCallback 0044  
                           __size_of_LORAWAN_SetDeviceEui 002E  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 69A6  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BB  
                                                 ?_Random 00AD  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                                                 ?_RxData 0060  
                                   _wr1RegCompleteHandler B94E  
                         __end_of_EUSART1_SetErrorHandler C58C  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer C036  
                                      __CFG_CCP2MX$PORTC1 000000  
                                     ?_DELAY_milliseconds 0060  
                                          FillSubKey@size 0064  
                                         _EnableChannels1 A68A  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                         _BME280_readByte C3EC  
                                  ??_UpdateJoinInProgress 0060  
                        __size_of_AssembleEncryptionBlock 00F4  
                                  ??_ExecuteRxTimingSetup 0077  
                                        FillSubKey@source 0060  
                                           ??_do_I2C_IDLE 0060  
                                 ?_i2c_write1ByteRegister 0071  
            SelectChannelForTransmission@transmissionType 00BB  
                                    __size_of_setCallBack 0072  
                                           ??_do_I2C_RCEN 0060  
                       __end_of_BME280_startForcedSensing C290  
                                                 ?___ftge 0060  
                                                 ?___lmul 009A  
                  AssembleEncryptionBlock@multicastStatus 0071  
                          __end_of_ExecuteRxParamSetupReq 6240  
                                      ??_CountfOptsLength 0060  
                                                 ?___wmul 006E  
                                  __size_of_DIO2_ISR_Lora 0006  
                                      EncryptFRMPayload@i 00A5  
                                      EncryptFRMPayload@j 00A6  
                                      EncryptFRMPayload@k 00A4  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                         ??_do_I2C_DO_ACK 0060  
                               _LORAWAN_SetApplicationEui BB54  
                                    ??_DIO3_ISR_Lora_Init 0060  
                               _LORAWAN_SetApplicationKey BB26  
                                        _UpdateDLSettings C14A  
                                              _deviceAddr 02F9  
                         __end_of_TMR5_HasOverflowOccured C512  
                                        _ValidateRxOffset C234  
                                                 _CCP5CON 000F54  
                                               ?___altoft 00CD  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                                 ?_fround 0083  
                                          ___lmul@product 00A2  
                                       _TMR_ISR_Lora_Init C42C  
                                     i2c_setBuffer@buffer 0060  
                                  RADIO_RegisterWrite@reg 0063  
                                               ?___ftpack 0060  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00C0  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 7ED6  
                                                 _AESCmac 3B00  
                                                 ?_printf 018F  
                                  ComputeMic@bufferLength 00CB  
                                               ?___lltoft 00DB  
                    BME280_setOversamplingHumidity@osrs_h 0060  
                                 __size_of_ADC_Initialize 0016  
                  __end_of_EUSART1_SetFramingErrorHandler C582  
                 __size_of_EUSART1_SetFramingErrorHandler 000A  
                          _EUSART1_SetFramingErrorHandler C578  
                                 __end_of_UpdateDataRange 79D8  
                                               ?___lwtoft 0068  
                                   ??_i2c_masterOperation 006F  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                       ?_i2c1_driver_open 0001  
                                      ?_TMR_ISR_Lora_Init 0001  
                                       __end_of_do_I2C_RX A68A  
                                       __end_of_do_I2C_TX 9D96  
                                       ?_i2c1_driver_stop 0001  
                                 _BME280_readMeasurements 7B24  
                                   i2c_readDataBlock@data 0072  
                              ??_INT1_SetInterruptHandler 0062  
                                                 i2l14484 B60E  
                                    EncryptFRMPayload@dir 0094  
                                      _RADIO_GetPacketSnr C668  
                                    EncryptFRMPayload@key 0099  
                                   __end_of_UpdateTxPower C596  
                                  ?_i2c1_driver_setI2cISR 0060  
                                  BME280_readBlock@length 007D  
                                      ??_i2c1_driver_open 0060  
                                     _RADIO_SetIQInverted C5B4  
                                    ??_DELAY_milliseconds 0062  
                                      ??_i2c1_driver_stop 0060  
                                                 _OSCCON2 000FD2  
                                           ?_mssp1_setIRQ 0001  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016C  
                                                 _SPBRGH1 000FB0  
                                     i2_SwTimersInterrupt 86B8  
                            ?_BME280_setFilterCoefficient 0001  
                                                 _SSP1ADD 000FC8  
                                                 _SSP2ADD 000F6E  
                                                 _SSP1BUF 000FC9  
                                  __end_of_mssp1_clearIRQ C6C4  
                                                 _SSP2BUF 000F6F  
                                                 _SSP1MSK 000FCA  
                                     ??_TMR_ISR_Lora_Init 0062  
                                     __size_of_i2c_poller 001C  
                           BME280_compensateTemperature@t 00C5  
                                       __end_of_bandwidth FF03  
                  UpdateReceiveWindow2Parameters@dataRate 0064  
                                 ??_do_I2C_SEND_ADR_WRITE 0061  
                           i2c_write1ByteRegister@address 0073  
                                __end_of_SetJoinFailState B9DE  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                  ValidateDataRate@result 0061  
                                        ?_TMR1_WriteTimer 0060  
                             ??_do_I2C_SEND_RESTART_WRITE 0060  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0060  
                                         ?_RADIO_Transmit 00B1  
                                 _ValidateChannelMaskCntl BF96  
                                         ___abdiv@counter 0063  
                                     StartReTxTimer@minim 009E  
                              AssemblePacket@bufferLength 00CA  
                            PrepareSessionKeys@sessionKey 006B  
                        LORAWAN_SetDeviceEui@deviceEuiNew 006B  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0068  
                                      _i2c1_driver_TXData C53C  
                                        ?_TMR5_Initialize 0001  
                       __end_of_RADIO_SetChannelFrequency 9F3C  
                             PrepareJoinRequestFrame@iCtr 00D9  
                                              ??_i2c_open 0062  
                               _IOCB4_SetInterruptHandler C550  
                       __end_of_SetCallbackSoftwareTimers 92E0  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 837E  
                                      _i2c1_driver_i2cISR 0126  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                                 _i2c_ISR AD28  
                                      _EncKeySchedule$914 0064  
                               ??_rdBlkRegCompleteHandler 006B  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 01EC  
                                 __end_of_spreadingFactor FF0A  
                                         __CFG_PWRTEN$OFF 000000  
                          __end_of_i2c_write1ByteRegister A9CC  
                           UpdateCurrentDataRate@valueNew 0060  
                                       __end_of__npowers_ FEB5  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                                              _scale$7033 0086  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 9F3C  
                                      _i2c1_driver_isNACK C30E  
                                     ?_i2c1_driver_TXData 0001  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0060  
                                LORAWAN_Send@bufferLength 00D6  
                                   _StopAllSoftwareTimers B088  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency B4DE  
                                     AssemblePacket@fCtrl 00D0  
                                                 ___abdiv A89C  
                                              AESEncode@i 007C  
                     __size_of_i2c_setAddressNACKCallback 0018  
                                               _AESEncode 455C  
                                  ValidateRxOffset@result 0061  
                                         __size_of___ftge 0092  
                               __end_of_TMR_ISR_Lora_Init C43C  
                                                 ___awdiv A050  
                                         __size_of___lmul 0058  
                                                 ___ftadd 69A6  
                                                 ___awmod A4C4  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                                 ___ftdiv 8E72  
                                                 ___ftneg BD74  
                                 __end_of_UpdateDutyCycle B522  
                                                 ___lldiv A15C  
                                     __size_of_ExtractMic 005A  
                                         __size_of___wmul 0028  
                                                 ___ftmul 8AA8  
                                    ??_RADIO_GetPacketSnr 0060  
                                                 ___llmod A834  
                                                 ___ftsub B632  
                                                 ___fttol 89B0  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod B522  
                               SwTimerIsRunning@isRunning 0061  
                                       ??_do_I2C_TX_EMPTY 006B  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                              ??___altoft 00D1  
                                     ?_i2c1_driver_isNACK 0001  
                                    ValidateChannelMask@i 0064  
                                                 __pcinit 849C  
                      __size_of_LORAWAN_GetMaxPayloadSize 0060  
                                         __size_of_memcpy 0060  
                              __end_of_RADIO_ReceiveStart 602C  
                                              ??___ftpack 0065  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                         __size_of_fround 0294  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                        EncryptFRMPayload@multicastStatus 009E  
                              BME280_getHumidity@humidity 00F6  
                                      ??_RADIO_ReadRandom 006E  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
                                              ??___lltoft 00DF  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 420E  
                                                 __ptext1 0D2C  
                                                 __ptext2 2A0E  
                                                 __ptext3 C48C  
                                                 __ptext4 C49A  
                                                 __ptext5 BE0A  
                                                 __ptext6 56C0  
                                                 __ptext7 8AA8  
                                                 __ptext8 A4C4  
                                                 __ptext9 7DA2  
                                    __end_of_LORAWAN_Init AAF2  
                                      i2c_readDataBlock@d 0077  
                                    __end_of_LORAWAN_Join 9A10  
                                     __end_of_do_I2C_IDLE C506  
                                    __end_of_LORAWAN_Send 948A  
                                         __size_of_printf 098A  
                                     __end_of_do_I2C_RCEN C4FA  
                                              ??___lwtoft 006B  
                                           _DIO0_ISR_Lora C686  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 75C8  
                                               _IOCB4_ISR C056  
                              ExecuteNewChannel@frequency 00AB  
                               TMR1_ReadTimer@readValHigh 0066  
                         __size_of_INTERRUPT_GetDioStatus 0014  
                                               _T1CONbits 000FCD  
                                             ?__div_to_l_ 0060  
                      SelectChannelForTransmission@result 00BC  
                                                 _counter 012A  
                                                 _dpowers FE3F  
                                 __size_of_LORAWAN_RxDone 0CA6  
                                   _OSCILLATOR_Initialize C4D2  
                          __end_of_UpdateJoinSuccessState 7DA2  
                                 __size_of_LORAWAN_TxDone 07B2  
                                                 _isdigit BE0A  
                              __end_of_RADIO_SetBandwidth C5F0  
                                         _RADIO_GetStatus C66E  
                             __end_of_do_I2C_SEND_RESTART C634  
                                        ?_ValidateTxPower 0001  
                                          ??_mssp1_setIRQ 0060  
                                        ___awmod@dividend 0060  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FEFC  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora C680  
                                    ??_i2c1_driver_TXData 0060  
                                      _EUSART1_Initialize B2FA  
                                             _SwTimerStop BD4C  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                             IncludeMacCommandsResponse@i 006D  
                                               _T5CONbits 000F4E  
                                  i2c_masterOperation@ret 0070  
                                           ?_UpdateCfList 00A6  
                                       _ExecuteNewChannel 5954  
                             __size_of_PrepareSessionKeys 00AC  
                                            ??_CheckFlags 0062  
                           RADIO_SetModulation@modulation 0060  
                                 UpdateDLSettings@dlRx2Dr 0061  
                                 _Weather_initializeClick B2B4  
                               __size_of_TMR_GetDeltaTime 0198  
                                         ?_mssp1_clearIRQ 0001  
                                           _DIO2_ISR_Lora C67A  
                                _do_I2C_SEND_RESTART_READ C63C  
                              __size_of_SYSTEM_Initialize 002E  
                                 i2c_read1ByteRegister@d2 0076  
                    __end_of_LORAWAN_SetNetworkSessionKey BACA  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey BA9C  
                                      ?_ExecuteNewChannel 00A6  
                                    __size_of_returnReset 0004  
                               __size_of_BME280_getStatus 000E  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 85B0  
                                 _CreateAllSoftwareTimers B0DA  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler C55A  
                                    ??_i2c1_driver_isNACK 0060  
                                   ??_RADIO_FSKPacketSent 00E3  
                                     ?_EUSART1_Initialize 0001  
                                          _GenerateSubkey 79D8  
                                   _RADIO_WatchdogTimeout B340  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FED5  
                                        ?_CheckMcastFlags 0060  
                                  ExtractMic@bufferLength 006D  
                                                 memcpy@d 0067  
                                                 memcpy@n 0064  
                                                 memcpy@s 0069  
                                 __end_of_EnableChannels1 A6F6  
                                 __end_of_BME280_readByte C3FC  
                               __size_of_i2c_restartWrite 0004  
                                                 memset@c 0062  
                            __end_of_i2c1_driver_sendNACK C662  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 718A  
                             _EUSART1_OverrunErrorHandler 03F4  
                                  ?_rd1RegCompleteHandler 0069  
                                          ??_SwTimerStart 0091  
                                     ??_ExecuteNewChannel 00A8  
                                        ?_i2c_masterWrite 0001  
                                   _UpdateCurrentDataRate C596  
                                   _UpdateChannelIdStatus 7462  
                                  ?_wr1RegCompleteHandler 0069  
                                BME280_readBlock@reg_addr 007E  
                            __end_of_i2c1_driver_resetBus C6DA  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init C45C  
                                         ___lldiv@divisor 0064  
                                     _ValidateChannelMask AC10  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                                               i2u2870_48 C0A4  
                                               i2u2872_48 C084  
                               __size_of_HALSPICSDeassert 0004  
                                               i2u2874_48 C064  
                                               i2u2876_48 C024  
                                ValidateDataRate@dataRate 0060  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 0076  
                               __size_of_BME280_readBlock 0020  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput C6D4  
                                            ??_GetRx1Freq 0064  
              LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                           UpdateDLSettings@dlRx1DrOffset 0060  
                              LORAWAN_Init@RxJoinResponse 00B4  
                              LORAWAN_RxDone@bufferLength 01F4  
                        __end_of_RADIO_SetSpreadingFactor C5D2  
                                                 printf@c 01B9  
                      AssembleEncryptionBlock@bufferIndex 0073  
                                                 printf@f 018F  
                                            RxData@status 0063  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit C644  
                                   _BME280_getTemperature B12C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                               _do_I2C_SEND_RESTART_WRITE C634  
                                           _AESEncode$910 0074  
                                           _AESEncode$911 0076  
                                           _AESEncode$909 0072  
                                        ??_RxJoinResponse 0060  
                                        _LORAWAN_Mainloop B736  
                            __end_of_RADIO_SetFSKSyncWord BA0E  
                                 ?_Weather_getPressureKPa 018C  
                                      LORAWAN_Join@result 00DC  
                                          __tdiv_to_l_@f1 0060  
                                          __tdiv_to_l_@f2 0063  
                                      __end_of_CheckFlags ACCC  
                                    ??_EUSART1_Initialize 0062  
                               ValidateTxPower@txPowerNew 0061  
                               ??_BME280_readMeasurements 007F  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 00B8  
                                  __end_of_EncodeShiftRow 772C  
                                           ??__tdiv_to_l_ 0066  
                                      _DIO0_ISR_Lora_Init C45C  
                    __end_of_BME280_compensateTemperature 541C  
                   __size_of_BME280_compensateTemperature 02B2  
                            _BME280_compensateTemperature 516A  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                              _returnStop C6A8  
                                   _INT1_InterruptHandler 01F7  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa B7EC  
                               __size_of_ExecuteDevStatus 000A  
                         __end_of_rdBlkRegCompleteHandler B49A  
                                __end_of_do_I2C_SEND_STOP C62C  
                            __end_of_RADIO_WriteFrequency 8E72  
                              __end_of_RADIO_RegisterRead BD4C  
                       __end_of_LORAWAN_GetMaxPayloadSize AB52  
                          __end_of_HALResetPinOutputValue C1EC  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0060  
                                __end_of_ConfigureRadioRx BC84  
                                __end_of_ConfigureRadioTx B088  
                                         _RADIO_RxTimeout BB82  
                          UpdateChannelIdStatus@channelId 0062  
                               __end_of_ExecuteNewChannel 5BC4  
                                        EnableChannels1@i 006B  
                                 __size_of_AssemblePacket 03B0  
                                          ?_DIO1_ISR_Lora 0001  
                                 ??_i2c_read1ByteRegister 0072  
                                    ?_ValidateChannelMask 0060  
                                       _SwTimerSetTimeout B5AA  
                                          _TMR1_ReadTimer BEB4  
                                          ??_UpdateCfList 00A8  
                                              _txPower433 FF0A  
                                              _txPower868 FF10  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         _bme280_ctrl_hum 012F  
                    __size_of_i2c_setDataCompleteCallback 0018  
                                         ??_LORAWAN_Reset 00B1  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                               ??_ValidateChannelMaskCntl 0060  
                                      ?_SwTimerSetTimeout 006D  
                             __size_of_MacExecuteCommands 02F6  
                                    ExecuteNewChannel@ptr 00A6  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 7B24  
                                             returnStop@p 0069  
                        __size_of_EUSART1_SetErrorHandler 000A  
                               BME280_readBlock@read_buff 007B  
                                           RADIO_RxDone@i 00F4  
                                     EUSART1_Write@txData 0060  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00D1  
                             ?_LORAWAN_SetChannelIdStatus 0064  
                                          _localDioStatus 0132  
                                __end_of_mssp1_disableIRQ C6C0  
                                      __end_of_GetRx1Freq C3B8  
                                   __size_of_RADIO_RxDone 00E4  
                                            ??_ComputeMic 00CC  
                            __size_of_UpdateReceiveDelays 0042  
                                   __size_of_RADIO_TxDone 0126  
                                  ??_RADIO_SetOutputPower 0060  
                             ?_Weather_getTemperatureDegC 018C  
                         EncryptFRMPayload@macBufferIndex 009B  
                            i2c_setDataCompleteCallback@p 0067  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                ?_BME280_initializeSensor 0001  
                                BME280_writeByte@reg_addr 0075  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00B1  
                                     _Weather_readSensors C0B6  
                               __size_of_SwTimerIsRunning 002A  
                              __end_of_ComputeSessionKeys A15C  
                        __size_of_TMR5_HasOverflowOccured 000C  
                                     ??_SwTimerSetTimeout 0071  
                                __size_of_SwTimersExecute 00E6  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus C336  
                                             ___ftdiv@exp 00F1  
                                         _RADIO_WriteMode 87B8  
                              ??_RADIO_WriteConfiguration 00A8  
                                             printf@width 01B2  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 00AF  
                               __size_of_SwTimerReadValue 0040  
                           __size_of_do_I2C_SEND_ADR_READ 0010  
                             RADIO_FSKPacketSent@irqFlags 00EF  
                               __size_of_ExecuteDutyCycle 0054  
                                  ?_StopAllSoftwareTimers 0001  
                                 ??_BME280_setStandbyTime 0060  
                                 AssemblePacket@confirmed 00CE  
                                      __end_of_FillSubKey AA90  
                                     __size_of__div_to_l_ 012A  
                                 _AssembleEncryptionBlock 8B9E  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FE3F  
                                     AESEncodeLoRa@useKey 0081  
                                             ___ftmul@exp 007D  
                                            ??_i2c_poller 006F  
                              SwTimerSetCallback@callback 0060  
                             ??_BME280_startForcedSensing 0076  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                               __size_of_BME280_writeByte 0014  
                                        ?_UpdateFrequency 0060  
                          __end_of_Weather_getPressureKPa C394  
                    __size_of_BME280_setFilterCoefficient 001E  
                                      LORAWAN_Send@buffer 00D4  
                                          __end_of_Random BEB4  
                                             _do_I2C_IDLE C4FA  
                                          __end_of_RxData C6E4  
                                             _do_I2C_RCEN C4EE  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                                __end_of_ValidateDataRate C264  
                            __end_of_INTERRUPT_Initialize C6C8  
                          EnableChannels1@channelMaskCntl 0066  
                          EnableChannels1@channelIndexMax 0068  
                          EnableChannels1@channelIndexMin 0067  
                     LORAWAN_SetChannelIdStatus@channelId 0066  
                                        ?_UpdateDutyCycle 0060  
                                          __end_of___ftge 9D06  
                              __end_of_DIO5_ISR_Lora_Init C6DC  
                                 __end_of_RADIO_GetStatus C674  
                                          __end_of___lmul AE8E  
                                      LORAWAN_Send@result 00D8  
                                        ??_EnableChannels 006F  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul BD24  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                      _BME280_getHumidity B1CC  
                                           __pidataCOMRAM C68C  
                                         ?_EncodeShiftRow 0060  
                                    ?_Weather_readSensors 0001  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                          _ADC_Initialize C2A6  
                                      _mssp1_IRQisEnabled C2FA  
                                   _Weather_getHumidityRH C394  
                                      __end_of_ComputeMic AA2E  
                                               Random@max 00AD  
                                          __end_of_memcpy ABB2  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout B5EE  
                                  __end_of_TMR1_ReadTimer BED6  
                                          __end_of_memset BA6E  
                                          __end_of_fround 5954  
                                         _SPI2_Initialize C4C4  
                        LORAWAN_SetChannelIdStatus@result 0065  
                                ?_PrepareJoinRequestFrame 0001  
                            __size_of_do_I2C_DO_NACK_STOP 0008  
                                      ??_RADIO_WritePower 0064  
                           ?_BME280_compensateTemperature 00A6  
                                            _RADIO_SetCRC C5BE  
                                   ??_ValidateChannelMask 0062  
                                        ??_ExecuteLinkAdr 0071  
                                   UpdateCfList@frequency 00A9  
                                          __end_of_printf 16B6  
                                      _mssp1_waitForEvent C35E  
                               ??_Weather_initializeClick 009A  
                                            _RADIO_RxDone 9040  
                                            _RADIO_TxDone 8258  
                                 ?_do_I2C_DO_NACK_RESTART 0001  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 849C  
                                      _BME280_getPressure B17C  
                                          _ConfigureRadio 98C4  
                                               _i2c_close BE2C  
                                      LORAWAN_RxDone@mhdr 00E1  
                                     ?_BME280_getHumidity 00F3  
                                      LORAWAN_RxDone@temp 00E7  
                          _BME280_compensateHumidity$7030 00CF  
                          _BME280_compensateHumidity$7026 00D3  
                          _BME280_compensateHumidity$7027 00C3  
                          _BME280_compensateHumidity$7028 00C7  
                          _BME280_compensateHumidity$7029 00CB  
                                     _i2c_busCollisionISR 000000  
                                      _DIO4_ISR_Lora_Init C6DC  
                                __end_ofi2_TMR1_ReadTimer C056  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite BFD6  
                                            AESCmac@mLast 01AC  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                                     ?_mssp1_IRQisEnabled 0001  
                                     __end_of__tdiv_to_l_ 7ED6  
                           __end_of_TMR_OverrideRemaining 9BE0  
                             ?_IncludeMacCommandsResponse 0060  
                                   __end_of_INT1_CallBack C0B6  
                                            ??_ExtractMic 006F  
                    EncryptFRMPayload@bufferToBeEncrypted 009C  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress C234  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                         LORAWAN_TxDone@i 00E2  
                                     ?_mssp1_waitForEvent 0060  
                                           ?_BME280_reset 0001  
                                   LORAWAN_Init@RxPayload 00B2  
                     AssembleEncryptionBlock@frameCounter 006B  
                                 i2TMR_SwapTimer@timerVal 0009  
                                            setCallBack@p 0062  
                                             putch@txData 0061  
                                      __end_of_i2c_poller C14A  
                                   __end_of_INT2_CallBack C096  
                                           ??_RADIO_Reset 0065  
                            __size_of_i2c1_driver_sendACK 0006  
                                __end_of_UpdateDLSettings C166  
                                   __end_of_EUSART1_Write C4A8  
                              SwTimerStart@ticksRemaining 0095  
                                         i2c_open@address 0062  
                                  RADIO_WriteMode@newMode 006A  
                                     ?_BME280_getPressure 00F3  
                                __end_of_ValidateRxOffset C24C  
                           __size_of_BME280_setSensorMode 0016  
                             ??_RADIO_SetChannelFrequency 0064  
                                 i2c_setBuffer@bufferSize 0062  
                             ??_SetCallbackSoftwareTimers 0064  
                                 ??_i2c1_driver_getRXData 0060  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                  rd1RegCompleteHandler@p 0069  
                                     _RADIO_SetModulation C5D2  
                                      _BME280_isMeasuring C2E6  
                           ExecuteNewChannel@channelIndex 00AF  
                            __size_of_i2c1_driver_restart 0004  
                          __end_of_SearchAvailableChannel 8258  
                                        ?_EnableChannels1 0064  
                                         i2_TMR_SwapTimer B5EE  
                                        ?_BME280_readByte 0001  
                                 __size_of_StartReTxTimer 0182  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0060  
                            __size_of_i2c1_driver_startRX 0004  
                                         ___llmod@divisor 0064  
                              MacExecuteCommands@fOptsLen 00B2  
                                 __end_of_SystemTimerInit C64C  
                          UpdateChannelIdStatus@statusNew 0060  
                       __size_of_RADIO_UnhandledInterrupt 0032  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 0122  
                               ?_RADIO_UnhandledInterrupt 0001  
                                   __end_of_i2c_setBuffer C1B8  
                                       __size_of_i2c_open 00A8  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0120  
                                   _RADIO_FSKPayloadReady 960C  
                          __size_of_HALResetPinMakeOutput 0004  
                                    ??_BME280_getHumidity 00F6  
                           __end_of_HALResetPinMakeOutput C6D4  
                                                ??_Random 00AF  
                                                ??_RxData 0064  
                                                AESCmac@i 01F1  
                                                AESCmac@j 01F0  
                                                AESCmac@n 01EF  
                                                AESCmac@x 01DC  
                                                AESCmac@y 01CC  
                              SwTimerReadValue@ticksCount 0095  
                                    __end_of_mssp1_setIRQ C69C  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels A050  
                                    ??_mssp1_IRQisEnabled 0060  
                                     ?_BME280_isMeasuring 0001  
                          __end_of_AutomaticReplyCallback BDE6  
                                  ?_BME280_getTemperature 00F3  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FEF5  
                                                ??___ftge 0066  
                                                ??___lmul 00A2  
                            i2c_read1ByteRegister@address 0072  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 00AC  
                                        _activationMethod 012B  
                                   __size_of_LORAWAN_Init 0062  
                      __size_of_AckRetransmissionCallback 011E  
                                   __size_of_LORAWAN_Join 00A4  
                                                ??___wmul 0072  
                                   __size_of_LORAWAN_Send 00D2  
                                    ??_mssp1_waitForEvent 0062  
                                 __end_of_RADIO_RxTimeout BBB0  
                                  wr1RegCompleteHandler@p 0069  
                                MacExecuteCommands@buffer 00B0  
                                ??_SetReceptionNotOkState 00BB  
                                  __end_of_ADC_Initialize C2BC  
                                          ??_TMR_ISR_lora 0032  
                                           ?_do_I2C_RESET 0001  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02F9  
                                             __pdataBANK3 03E0  
                                       _ValidateDataRange B386  
                                             __pdataBANK4 04E0  
                                    ??_BME280_getPressure 00F6  
                                             __pdataBANK5 0500  
                                      __end_of_ExtractMic AE36  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                   ??_Weather_readSensors 009A  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                                ??_fround 0086  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize BC06  
                                       _ValidateChannelId BDE6  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor C5C8  
                                      _RADIO_RxFSKTimeout B7B0  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 0020  
                                             ?_returnStop 0069  
                                                ??_printf 00F9  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                 ??_i2c1_driver_setI2cISR 0062  
                                ValidateRxOffset@rxOffset 0060  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 0110  
                                         ?_TMR1_ReadTimer 0060  
                          __end_of_do_I2C_DO_NACK_RESTART C614  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 996C  
                                       __size_of___altoft 007A  
                                          _LORAWAN_RxDone 0086  
                                      ?_ValidateChannelId 0060  
                                    _i2c1_driver_sendNACK C65C  
                                  TMR_GetDeltaTime@tmrVal 0124  
                                          _LORAWAN_TxDone 16B6  
                                              fround@prec 008C  
                            __end_of_LORAWAN_SetDeviceEui BAF8  
                              __size_of_ExecuteNewChannel 0270  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                                       __size_of___ftpack 00B0  
                                    __end_of_SwTimerStart 9B4A  
                  __end_of_LORAWAN_EnterContinuousReceive A35E  
                 __size_of_LORAWAN_EnterContinuousReceive 007E  
                          _LORAWAN_EnterContinuousReceive A2E0  
                                             __pbssBIGRAM 0520  
                                         ??_DIO2_ISR_Lora 0001  
                                BME280_setSensorMode@mode 0060  
                               __size_of_CountfOptsLength 00CA  
                                       __size_of___lltoft 005E  
                                       CountfOptsLength@i 0067  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FF40  
                              __end_of_DefaultChannels868 FF6A  
                                        ??_RADIO_Transmit 00B4  
                                              ?_i2c_close 0001  
                                               _adcResult 03C4  
                                       __size_of___lwtoft 0026  
                                      LORAWAN_RxTimeout@i 00CA  
                                    _i2c1_driver_resetBus C6D8  
                               _BME280_startForcedSensing C27A  
                                    ??_BME280_isMeasuring 0078  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 018C  
                                     ??_ValidateDataRange 0062  
                         __end_of_BME280_initializeSensor BF76  
                                               _do_I2C_RX A61A  
                                               _do_I2C_TX 9D06  
                                        _TMR_GetDeltaTime 6B54  
                           EnableChannels@channelMaskCntl 006E  
                                          ??_BME280_reset 0076  
                                 __end_of_RADIO_WriteMode 88B6  
                 __end_of_UnconfirmedTransmissionCallback A450  
                __size_of_UnconfirmedTransmissionCallback 0078  
                         _UnconfirmedTransmissionCallback A3D8  
                                 SearchAvailableChannel@i 00BA  
                                     ??_ValidateChannelId 0061  
                                            _isdigit$5835 0061  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                 _RADIO_ReceiveStart$1177 00B7  
                     LORAWAN_SetChannelIdStatus@statusNew 0064  
                                __size_of_CCP5_Initialize 0010  
                                        _BME280_getStatus C4B6  
                                               _aesBuffer 03C8  
                                 INTERRUPT_GetDioStatus@a 0060  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0099  
                          __size_of_do_I2C_SEND_ADR_WRITE 0010  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord B9DE  
                             RADIO_SetBandwidth@bandwidth 0060  
                           __end_of_do_I2C_SEND_ADR_WRITE C40C  
                        ??_EUSART1_SetFramingErrorHandler 0062  
                         ?_EUSART1_SetFramingErrorHandler 0060  
                                        _i2c_restartWrite C6AC  
                              __end_of_SwTimerSetCallback B5AA  
       __end_of_ResetParametersForUnconfirmedTransmission C336  
      __size_of_ResetParametersForUnconfirmedTransmission 0014  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0060  
               _ResetParametersForUnconfirmedTransmission C322  
                               ??_AssembleEncryptionBlock 0072  
                                   _INT2_InterruptHandler 02FD  
                                               _bandwidth FEFC  
                                      ??_SetJoinFailState 0060  
                               __size_of_i2c1_driver_open 0016  
                                 ?_InitDefault868Channels 0001  
                               __size_of_i2c1_driver_stop 0004  
                                                ?_i2c_ISR 0001  
                                            _LORAWAN_Init AA90  
                                            _LORAWAN_Join 996C  
                                            _LORAWAN_Send 93B8  
                                         _do_I2C_TX_EMPTY AF3A  
                                  RADIO_FSKPayloadReady@i 00F4  
                                           ??_setCallBack 0064  
                                       _ValidateFrequency A902  
                                               __pnvBANK1 01F5  
                                               __pnvBANK2 02FD  
                                               __pnvBANK3 03F0  
                                  ??_HALResetPinMakeInput 0060  
                                   _rd2RegCompleteHandler B8EE  
                                    _RADIO_WriteFrequency 8D82  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert C6C8  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                   __end_of_fsmStateTable FED5  
                                     __end_of_RADIO_Reset B412  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize AF8E  
                                        _BME280_readBlock BF76  
                                   _wr2RegCompleteHandler B97E  
                                           FillSubKey@key 0062  
                                      ?_ValidateFrequency 0060  
                                    __end_of_UpdateCfList 642E  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                               EnableChannels@channelMask 006C  
                                               _macBuffer 0520  
                                               _dioStatus 0134  
                               __end_of_ValidateDataRange B3CC  
                           RADIO_FSKPayloadReady@irqFlags 00F3  
                                       _SwTimersInterrupt 85B6  
                                       ??_SwTimersExecute 00DA  
                                               __pintcode 0008  
                                                ?___abdiv 0060  
                                               _deviceEUI 03E8  
                        __end_of_TMR1_SetInterruptHandler C550  
                                           __pmediumconst FD3E  
                                 RADIO_Transmit@bufferLen 00B3  
                                 __end_of_SPI2_Initialize C4D2  
                       BME280_readMeasurements@sensorData 008C  
                                          ??_do_I2C_RESET 0060  
                                                ?___awdiv 0066  
                                               __ptext100 ABB2  
                                               __ptext101 8E72  
                               __end_of_ValidateChannelId BE0A  
                                               __ptext110 C4D2  
                                               __ptext102 96C0  
                                               __ptext111 BE4E  
                                               __ptext103 32F0  
                                               __ptext200 C5A0  
                                               __ptext120 C44C  
                                               __ptext112 C42C  
                                               __ptext104 C506  
                                               __ptext201 93B8  
                                               __ptext121 C45C  
                                               __ptext113 C546  
                                               __ptext105 BA6E  
                                               __ptext210 948A  
                                               __ptext202 AAF2  
                                               __ptext130 C46C  
                                               __ptext122 C6C4  
                                               __ptext114 C644  
                                               __ptext106 C110  
                                               __ptext211 ADDC  
                                               __ptext203 3750  
                                               __ptext131 C2A6  
                                               __ptext123 BBDC  
                                               __ptext115 C6DA  
                                               __ptext107 BBB0  
                                               __ptext300 9FC6  
                                               __ptext220 C66E  
                                               __ptext212 A0D6  
                                               __ptext204 2E8E  
                                               __ptext140 48A6  
                                               __ptext132 BA9C  
                                               __ptext124 C55A  
                                               __ptext116 C6DC  
                                               __ptext108 C4C4  
                                               __ptext301 BA3E  
                                               __ptext221 A2E0  
                                               __ptext213 9770  
                                               __ptext205 C668  
                                               __ptext141 7C64  
                                               __ptext133 BACA  
                                               __ptext125 C564  
                                               __ptext117 C6DE  
                                               __ptext109 AF8E  
                                                ?___ftadd 008D  
                                               __ptext310 AEE4  
                                               __ptext302 AB52  
                                               __ptext230 996C  
                                               __ptext222 C6E2  
                                               __ptext214 A1E0  
                                               __ptext206 9124  
                                               __ptext150 C3A6  
                                               __ptext142 BDC0  
                                               __ptext134 C21C  
                                               __ptext126 B2FA  
                                               __ptext118 C43C  
                                               __ptext311 B5EE  
                                               __ptext303 B0DA  
                                               __ptext231 C1B8  
                                               __ptext223 C322  
                                               __ptext215 AC6E  
                                               __ptext207 6E7C  
                                               __ptext151 BCAC  
                                               __ptext143 837E  
                                               __ptext135 BAF8  
                                               __ptext127 C56E  
                                               __ptext119 C550  
                                               __ptext320 C64C  
                                               __ptext312 C182  
                                               __ptext304 9E26  
                                               __ptext240 C5D2  
                                               __ptext232 A6F6  
                                               __ptext224 C3B8  
                                               __ptext216 7ED6  
                                               __ptext208 A050  
                                               __ptext160 8258  
                                               __ptext152 B858  
                                               __ptext144 718A  
                                               __ptext136 BB26  
                                               __ptext128 C578  
                                               __ptext321 C076  
                                               __ptext313 86B8  
                                               __ptext305 B822  
                                               __ptext241 C5DC  
                                               __ptext233 812E  
                                               __ptext225 C674  
                                               __ptext217 16B6  
                                               __ptext209 8B9E  
                                               __ptext161 9040  
                                               __ptext153 BE70  
                                               __ptext145 9554  
                                               __ptext137 BB54  
                                               __ptext129 C582  
                                               __ptext322 C680  
                                               __ptext314 72F6  
                                               __ptext250 6CEC  
                                               __ptext242 B9DE  
                                               __ptext234 B036  
                                               __ptext226 BFB6  
                                               __ptext218 B6F6  
                                               __ptext170 A262  
                                               __ptext162 A89C  
                                               __ptext154 AE8E  
                                               __ptext146 92E0  
                                               __ptext138 B736  
                                               __ptext323 C6E8  
                                               __ptext315 C036  
                                               __ptext307 C34A  
                                               __ptext251 BE92  
                                               __ptext243 9EB2  
                                               __ptext235 C5AA  
                                               __ptext227 5DFC  
                                               __ptext219 BC30  
                                               __ptext171 B9AE  
                                               __ptext163 960C  
                                               __ptext155 B21C  
                                               __ptext147 B340  
                                               __ptext139 8F5A  
                                               __ptext324 C654  
                                               __ptext316 C5FA  
                                               __ptext308 C016  
                                               __ptext260 75C8  
                                               __ptext252 ACCC  
                                               __ptext244 C5E6  
                                               __ptext236 C5B4  
                                               __ptext228 BC5A  
                                               __ptext180 5954  
                                               __ptext172 C6E0  
                                               __ptext164 3EAA  
                                               __ptext156 BB82  
                                               __ptext148 B7B0  
                                               __ptext325 C096  
                                               __ptext317 C056  
                                               __ptext309 C6E4  
                                               __ptext261 541C  
                                               __ptext253 B522  
                                               __ptext245 5BC4  
                                               __ptext237 C5BE  
                                               __ptext229 C336  
                                               __ptext181 A902  
                                               __ptext173 4BAC  
                                               __ptext165 0086  
                                               __ptext157 B6B6  
                                               __ptext149 A3D8  
                                               __ptext326 C686  
                                               __ptext318 C67A  
                                               __ptext270 67DC  
                                               __ptext262 AA90  
                                               __ptext254 A9CC  
                                               __ptext246 250E  
                                               __ptext238 98C4  
                                               __ptext190 BC06  
                                               __ptext182 B386  
                                               __ptext174 BCD4  
                                               __ptext166 A5A8  
                                               __ptext158 9D96  
                                               __ptext327 C6EA  
                                               __ptext319 C6E6  
                                               __ptext271 B566  
                                               __ptext263 C47C  
                                               __ptext255 3B00  
                                               __ptext247 8C92  
                                               __ptext239 C5C8  
                                               __ptext191 C24C  
                                               __ptext183 B49A  
                                               __ptext175 B674  
                                               __ptext167 C14A  
                                               __ptext159 B88A  
                                               __ptext328 0000  
                                               __ptext280 C6C8  
                                               __ptext272 87B8  
                                               __ptext264 9202  
                                               __ptext256 79D8  
                                               __ptext248 A762  
                                               __ptext192 BF96  
                                               __ptext184 B4DE  
                                               __ptext176 BCFC  
                                               __ptext168 6240  
                                               __ptext281 C6CC  
                                               __ptext273 BD24  
                                               __ptext265 9A10  
                                               __ptext257 AA2E  
                                               __ptext249 A7CC  
                                               __ptext193 AC10  
                                               __ptext185 788A  
                                               __ptext177 602C  
                                               __ptext169 7008  
                                               __ptext290 BD4C  
                                               __ptext282 B3CC  
                                               __ptext274 C512  
                                               __ptext266 660E  
                                               __ptext258 B7EC  
                                               __ptext194 C58C  
                                               __ptext186 AD82  
                                               __ptext178 C234  
                                               __ptext291 9AB4  
                                               __ptext283 BA0E  
                                               __ptext275 8D82  
                                               __ptext267 88B6  
                                               __ptext259 455C  
                                               __ptext195 C596  
                                               __ptext187 BDE6  
                                               __ptext179 C2BC  
                                                ?___awmod 0060  
                                               __ptext292 9B4A  
                                               __ptext284 C1D2  
                                               __ptext276 A834  
                                               __ptext268 B088  
                                               __ptext196 C166  
                                               __ptext188 B8BC  
                                               __ptext293 B26A  
                                               __ptext285 C6D0  
                                               __ptext277 BFD6  
                                               __ptext269 C5F0  
                                               __ptext197 A68A  
                                               __ptext189 4EA2  
                                               __ptext294 BFF6  
                                               __ptext286 C6D4  
                                               __ptext278 C4E0  
                                               __ptext198 7462  
                                               __ptext295 85B6  
                                               __ptext287 772C  
                                               __ptext279 C3CA  
                                               __ptext199 AFE2  
                                               __ptext296 6B54  
                                               __ptext288 AE36  
                                               __ptext297 BEB4  
                                               __ptext289 A15C  
                                               __ptext298 B5AA  
                                               __ptext299 9F3C  
                             __end_of_i2c_masterOperation B7B0  
                                                ?___ftdiv 00E4  
                                                ?___ftneg 0060  
                                       _EncryptFRMPayload 6E7C  
                                                ?___lldiv 0060  
                            RADIO_FSKPacketSent@timeOnAir 00E7  
                                                ?___ftmul 0074  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                                                ?___ftsub 00E4  
                                               __npowers_ FE8E  
                           __size_of_ExecuteRxTimingSetup 0028  
                                                ?___fttol 0083  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 00BD  
                         __end_of_PrepareJoinRequestFrame 6E7C  
                                ??_do_I2C_DO_ADDRESS_NACK 006B  
                                                ?___lwmod 00A8  
                                         ?_ADC_Initialize 0001  
                             _i2c1_driver_busCollisionISR 0128  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 9EB2  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006E  
                               _SetCallbackSoftwareTimers 9202  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                                    i2c_readDataBlock@len 0074  
                                        ?_RADIO_GetStatus 0001  
                                    i2c_readDataBlock@reg 0071  
                                  ?_Weather_getHumidityRH 018C  
                                  __end_of_LORAWAN_RxDone 0D2C  
                                   __end_of_do_I2C_DO_ACK C624  
                                     ??_ValidateFrequency 0064  
                                  __end_of_LORAWAN_TxDone 1E68  
                                      ?_EncryptFRMPayload 0091  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit BE70  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                             __tdiv_to_l_ 7DA2  
                                        _ExecuteDevStatus C5A0  
                           __end_of_RADIO_SetLoRaSyncWord C5FA  
                  IncludeMacCommandsResponse@pBufferIndex 0062  
                              ??_do_I2C_SEND_RESTART_READ 0060  
                              __size_of_SwTimerSetTimeout 0044  
                             ??_LORAWAN_GetMaxPayloadSize 0068  
                                   ?_i2c1_driver_sendNACK 0001  
                     __size_of_Weather_getTemperatureDegC 0012  
                          LORAWAN_LinkCheckConfigure@iCtr 00B0  
                        ExecuteRxParamSetupReq@dlSettings 00AE  
                                          _AssemblePacket 3750  
                                            ??__div_to_l_ 0066  
                                        ??_mssp1_clearIRQ 0060  
                                         ?_ConfigureRadio 006E  
                               AssemblePacket@bufferIndex 00D2  
                              ??_INT2_SetInterruptHandler 0062  
                                                _BAUDCON1 000FB8  
                              __end_ofi2_TMR_GetDeltaTime 7462  
                      _EUSART1_DefaultOverrunErrorHandler 000000  
                                     ??_SwTimersInterrupt 0084  
                                                ?_isdigit 0001  
                                    RADIO_DIO0@dioMapping 00F7  
                                       _i2c_readDataBlock A450  
                                       _DutyCycleCallback 48A6  
                                   ?_i2c1_driver_resetBus 0001  
                      __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                                 InitDefault433Channels@i 006B  
                                    _EUSART1_ErrorHandler 03F2  
                                   __end_of_TMR_SwapTimer B2B4  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 009F  
                             __size_of_DELAY_milliseconds 0028  
                                 _EUSART1_SetErrorHandler C582  
                                              ?_do_I2C_RX 0001  
                                              ?_do_I2C_TX 0001  
                                 __end_ofi2_TMR_SwapTimer B632  
                                      ?_i2c_readDataBlock 0071  
                  __end_of_BME280_setOversamplingHumidity C528  
                 __size_of_BME280_setOversamplingHumidity 000A  
                          _BME280_setOversamplingHumidity C51E  
                                 __size_of_EncKeySchedule 02A4  
                                      AssemblePacket@mhdr 00CF  
                                       _i2c1_driver_start C6B8  
                                      AssemblePacket@port 00C7  
                               __size_of_RADIO_ReadRandom 00A4  
                                ConfigureRadioRx@dataRate 0077  
                                          __size_of_scale 0480  
                                      _RADIO_ReceiveStart 5DFC  
                                 ??_rd1RegCompleteHandler 006B  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop B774  
                                          __size_of_putch 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize C6C4  
                                           _SwTimerCreate 9E26  
                          __end_of_InitDefault868Channels 9FC6  
                     IncludeMacCommandsResponse@macBuffer 0060  
                                 _TMR5_HasOverflowOccured C506  
                                      ?_i2c1_driver_start 0001  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0060  
                                 ??_wr1RegCompleteHandler 006B  
                                           _TMR1_CallBack C016  
                               __end_of_ValidateFrequency A968  
                  __end_of_BME280_setOversamplingPressure BF56  
                 __size_of_BME280_setOversamplingPressure 0020  
                          _BME280_setOversamplingPressure BF36  
                                        _SwTimerIsRunning BC30  
                                     ??_i2c_readDataBlock 0076  
                                        _ExecuteLinkCheck B8BC  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR C654  
                                _LORAWAN_SetDeviceAddress C21C  
                                                _INT2_ISR C64C  
                                       EncKeySchedule@key 0060  
                                          ___wmul@product 0072  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth C5E6  
                                  i2c_read1ByteRegister@e 0073  
                 EUSART1_SetErrorHandler@interruptHandler 0060  
                                  i2c_read1ByteRegister@x 0074  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                     __size_of_returnStop 0004  
                                    __end_of_rxWindowSize FEF5  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 00B1  
                                        _SwTimerReadValue B6F6  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle AFE2  
                                           _appSessionKey 0500  
                                         _HALDIO5PinValue C512  
                                    RADIO_DIO1@dioMapping 00CC  
                               __end_of_SwTimersInterrupt 86B8  
                                     ??_i2c1_driver_start 0060  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init C44C  
                                                _PIR1bits 000F9E  
                                      __end_of__div_to_l_ 812E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0073  
                               __end_of_EncryptFRMPayload 7008  
                                                _PIR5bits 000F7E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 0074  
                               LORAWAN_RxDone@bufferIndex 00E6  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate A834  
                                    ConfigureRadioTx@freq 0073  
                                        _BME280_writeByte C2D2  
                             UpdateDataRange@dataRangeNew 0060  
                                __size_of_TMR5_Initialize 001E  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B0  
                                               _rxPayload 010C  
                          DELAY_milliseconds@milliseconds 0060  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 88B6  
                           EncryptFRMPayload@bufferLength 0093  
                                 ValidateDataRange@result 0062  
                                                _SSP1CON1 000FC6  
                                                _SSP1CON2 000FC5  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0060  
              ValidateChannelId@allowedForDefaultChannels 0060  
                           __size_of_FindSmallestDataRate 00DE  
                                                _TMR1_ISR C34A  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                            ?_i2c_setDataCompleteCallback 0065  
                                   ValidateTxPower@result 0060  
                                                _SSP1STAT 000FC7  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 0462  
                                                _SSP2STAT 000F6D  
                                     __end_of_setCallBack A5A8  
                            ??_LORAWAN_LinkCheckConfigure 00A8  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays B674  
                         __size_of_SetReceptionNotOkState 007E  
                                  __end_of_AssemblePacket 3B00  
                                         ?_LORAWAN_RxDone 01F2  
                                         ?_LORAWAN_TxDone 00BB  
                                       ??_TMR1_Initialize 0062  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0066  
                               __end_of_i2c_readDataBlock A4C4  
                                      _DIO1_ISR_Lora_Init C44C  
                               __end_of_DutyCycleCallback 4BAC  
                                       ___wmul@multiplier 006E  
                            i2c_setAddressNACKCallback@cb 0065  
                                        __size_of_AESCmac 03AA  
                                    ??_RADIO_ReceiveStart 00B3  
                                 ValidateFrequency@result 0064  
                                       ?_do_I2C_SEND_STOP 0001  
                                              printf@flag 01AA  
                              __end_of_PrepareSessionKeys 981C  
                                       ?_ConfigureRadioRx 0073  
                                       ?_ConfigureRadioTx 0073  
                                              printf@fval 01B4  
                                           _nwkSessionKey 0510  
                                              printf@prec 01B7  
                                    RADIO_DIO2@dioMapping 007C  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                                             ??_i2c_close 0060  
                               __end_of_i2c1_driver_start C6BC  
                             __end_of_RADIO_FSKPacketSent 8004  
                                           ??_returnReset 006B  
                                      ??_do_I2C_SEND_STOP 0060  
                             __size_of_i2c1_driver_TXData 000A  
                          __size_of_i2c_read1ByteRegister 0094  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioRx 0077  
                                      ??_ConfigureRadioTx 0077  
                            ??_i2c_setAddressNACKCallback 0069  
                           __end_of_i2c_read1ByteRegister 9C74  
                                    ??_RADIO_SetBandwidth 0060  
                       __end_of_do_I2C_SEND_RESTART_WRITE C63C  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                 __end_of_do_I2C_TX_EMPTY AF8E  
                                        ?_RADIO_WriteMode 0065  
                               LORAWAN_RxDone@computedMic 00EA  
                                       ___lmul@multiplier 009A  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 84B0  
                                               copy_data1 84D0  
                                               copy_data2 84F0  
                                               copy_data3 8510  
                                               copy_data4 8530  
                                               copy_data5 8550  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                ?_rdBlkRegCompleteHandler 0069  
                                       ?_mssp1_disableIRQ 0001  
                             __end_of_RADIO_SetIQInverted C5BE  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora AF3A  
                                             _RADIO_Reset B3CC  
                                     ExecuteLinkCheck@ptr 0060  
                            __size_of_do_I2C_SEND_RESTART 0008  
                             __size_of_i2c1_driver_isNACK 0014  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead BD24  
                                __size_of_ValidateTxPower 002A  
                                 ??_StopAllSoftwareTimers 0061  
                                          _StartReTxTimer 7008  
                      __size_of_BME280_compensateHumidity 0460  
                                                _i2c_open 981C  
                             __end_ofi2_SwTimersInterrupt 87B8  
                               _LORAWAN_GetMaxPayloadSize AAF2  
                              LORAWAN_RxDone@extractedMic 00E2  
                                             AESCmac@flag 01EE  
                           EncryptFRMPayload@frameCounter 0095  
                                   __size_of_mssp1_setIRQ 0004  
                                      CheckMcastFlags@hdr 0060  
                 BME280_setOversamplingTemperature@osrs_t 0061  
                              ?_BME280_compensateHumidity 00A6  
                                             AESCmac@size 00BF  
                                      ??_mssp1_disableIRQ 0060  
                                  ?_rd2RegCompleteHandler 0069  
                                SwTimerSetTimeout@timerId 0075  
                                SwTimerSetTimeout@timeout 006D  
                                   RADIO_WriteMode@opMode 006B  
                                     _do_I2C_DO_NACK_STOP C614  
                                ??_ExecuteRxParamSetupReq 00A8  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                        __size_of_i2c_ISR 005A  
                                       ??_CCP5_Initialize 0060  
                                  ?_wr2RegCompleteHandler 0069  
                                        ___abdiv@quotient 0065  
                 UpdateReceiveWindow2Parameters@frequency 0060  
                                    RADIO_DIO3@dioMapping 0066  
                                    _LORAWAN_SetDeviceEui BACA  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                      __size_of_BME280_compensatePressure 06A6  
                            __end_of_SystemBlockingWaitMs BA3E  
                  ValidateChannelMaskCntl@channelMaskCntl 0061  
                                       i2_TMR1_WriteTimer C182  
                                               memcpy@tmp 0066  
              LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                                __Lrparam 0000  
                          __size_of_BME280_setStandbyTime 001E  
                                        ??_EncodeShiftRow 0062  
                              ?_BME280_compensatePressure 00A6  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                       _ADC_GetConversion B822  
                                __size_of_CheckMcastFlags 0082  
                           __end_of_BME280_setStandbyTime C0F2  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                              __size_of_ValidateDataRange 0046  
                                            ?_do_I2C_IDLE 0001  
                               _ticksToScheduledInterrupt 0054  
                        BME280_setFilterCoefficient@coeff 0061  
                                            ?_do_I2C_RCEN 0001  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0064  
                            ValidateDataRange@dataRateMin 0065  
                              __size_of_ValidateChannelId 0024  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                             BME280_setStandbyTime@sbtime 0061  
                                    __end_of_BME280_reset C4B6  
                                        __size_of___abdiv 0066  
                                 ??_OSCILLATOR_Initialize 0060  
                                      ?_ADC_GetConversion 0060  
                        __size_of_BME280_initializeSensor 0020  
                                       ?_ValidateDataRate 0001  
                                     _i2c1_driver_sendACK C662  
                                        __size_of___awdiv 0086  
                                __size_of_i2c_masterWrite 0008  
                                      _ComputeSessionKeys A0D6  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___ftadd 01AE  
                                        __size_of___awmod 0072  
                                        __size_of___ftdiv 00E8  
                                        __size_of___ftneg 0026  
                         __size_of_do_I2C_DO_ADDRESS_NACK 0044  
                                        __size_of___lldiv 0084  
                                                ___altoft A35E  
                                        __size_of___ftmul 00F6  
                                     i2c1_driver_TXData@d 0060  
                                        __size_of___llmod 0068  
                                        __size_of___ftsub 0042  
                                        __size_of___fttol 00F8  
                             __size_of_EUSART1_Initialize 0046  
                                          _applicationEUI 03E0  
                                  ??_i2c1_driver_sendNACK 0060  
                                        __size_of___lwmod 0044  
                           ??_i2c_setDataCompleteCallback 0069  
                                         ?_AssemblePacket 00C7  
                                    AssemblePacket@buffer 00C8  
                                        SwTimersExecute@i 00DE  
                                                ___ftpack 96C0  
                                          _applicationKey 04F0  
                        ??_i2c1_driver_setBusCollisionISR 0062  
                         ?_i2c1_driver_setBusCollisionISR 0060  
                                      ??_ValidateDataRate 0060  
                                     _i2c1_driver_restart C6B4  
                                             _fround$7031 0089  
                                             _fround$7032 0086  
                                                ___lltoft ABB2  
                                _TMR1_SetInterruptHandler C546  
                                  _IOCB4_InterruptHandler 03FA  
                                    ?_do_I2C_DO_NACK_STOP 0001  
                                     _i2c1_driver_startRX C6A0  
                                                ___lwtoft BD9A  
                            __end_of_do_I2C_SEND_ADR_READ C41C  
                                             _radioBuffer 062F  
                                  ??_i2c1_driver_resetBus 0060  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission C3CA  
        __size_of_ResetParametersForConfirmedTransmission 0012  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0060  
                 _ResetParametersForConfirmedTransmission C3B8  
                                   _TMR1_InterruptHandler 03F8  
                               ??_EUSART1_SetErrorHandler 0062  
                                        ??_GenerateSubkey 0097  
                             _EUSART1_DefaultErrorHandler 000000  
                                     ??_ADC_GetConversion 0062  
                                        _CountfOptsLength 948A  
                                              _HALSPISend C4E0  
                                     ?_ComputeSessionKeys 0091  
                                          _rxWindowOffset FEDD  
                      RADIO_UnhandledInterrupt@modulation 0064  
                              __end_of_MacExecuteCommands 4EA2  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_DIO4@dioMapping 0067  
                                        __size_of_isdigit 0022  
                        __end_of_RADIO_UnhandledInterrupt B8BC  
                     __end_of_BME280_setFilterCoefficient C110  
                             _BME280_setFilterCoefficient C0F2  
                                           _UpdateTxPower C58C  
                                    RADIO_Transmit@buffer 00B1  
                         __end_of_RADIO_FHSSChangeChannel B6F6  
                                            _mssp1_setIRQ C698  
                                             ??_do_I2C_RX 006B  
                                             ??_do_I2C_TX 006B  
                                         _allocatedTimers 00FF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus C34A  
                                       ?i2_TMR1_ReadTimer 0001  
                               ??_TMR5_HasOverflowOccured 0060  
                                      _DIO5_ISR_Lora_Init C6DA  
                                                __ptext10 8004  
                                                __ptext11 89B0  
                                                __ptext20 C0D4  
                                                __ptext12 B632  
                                                __ptext21 C264  
                                                __ptext13 69A6  
                                              _T1GCONbits 000FCC  
                                                __ptext30 C2D2  
                                                __ptext22 BF16  
                                                __ptext14 BD74  
                                                __ptext31 A968  
                                                __ptext23 BF36  
                                                __ptext15 9C74  
                                                __ptext40 981C  
                                                __ptext32 7B24  
                                                __ptext24 C51E  
                                                __ptext16 BD9A  
                                                __ptext41 C528  
                                                __ptext33 BF76  
                                                __ptext25 C0F2  
                                                __ptext17 C0B6  
                                                __ptext50 A61A  
                                                __ptext42 C532  
                                                __ptext34 A450  
                                                __ptext26 C4A8  
                                                __ptext18 B2B4  
                                                __ptext51 9D06  
                                                __ptext43 C290  
                                                __ptext35 C2E6  
                                                __ptext27 642E  
                                                __ptext19 BC84  
                                                __ptext60 C62C  
                                                __ptext52 B412  
                                                __ptext44 C604  
                                                __ptext36 C4B6  
                                                __ptext28 BF56  
                                                __ptext61 C634  
                                                __ptext53 C60C  
                                                __ptext45 B774  
                                                __ptext37 C3EC  
                                                __ptext29 C27A  
                                                __ptext70 C65C  
                                                __ptext62 C63C  
                                                __ptext54 C614  
                                                __ptext46 C2FA  
                                                __ptext38 9BE0  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 C6D8  
                                                __ptext63 C4FA  
                                                __ptext55 C61C  
                                                __ptext47 C12E  
                                                __ptext39 C1EC  
                                                __ptext80 B97E  
                                                __ptext72 C6A0  
                                                __ptext64 C41C  
                                                __ptext56 C4EE  
                                                __ptext48 C35E  
                                                __ptext81 C204  
                                                __ptext73 B456  
                                                __ptext65 AF3A  
                                                __ptext57 C3FC  
                                                __ptext49 AD28  
                                                __ptext90 C6C0  
                                                __ptext82 A536  
                                                __ptext74 B8EE  
                                                __ptext66 C698  
                                                __ptext58 C40C  
                                                __ptext91 C370  
                                                __ptext83 C19E  
                                                __ptext75 B91E  
                                                __ptext67 C30E  
                                                __ptext59 C624  
                                                __ptext92 B12C  
                                                __ptext84 C6B0  
                                                __ptext76 B94E  
                                                __ptext68 C53C  
                                                __ptext93 A35E  
                                                __ptext85 C6B4  
                                                __ptext77 C6A4  
                                                __ptext69 C69C  
                                                __ptext94 516A  
                                                __ptext86 C662  
                                                __ptext78 C6A8  
                                                __ptext95 C382  
                                                __ptext87 C6B8  
                                                __ptext79 C6AC  
                                                __ptext96 B17C  
                                                __ptext88 BE2C  
                                                __ptext97 1E68  
                                                __ptext89 C6BC  
                                                __ptext98 C394  
                                                __ptext99 B1CC  
                                            _SSP1CON1bits 000FC6  
                                 ExecuteRxTimingSetup@ptr 0075  
                                            _SSP1CON2bits 000FC5  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                                __powers_ FE67  
                                   ??_UpdateReceiveDelays 0074  
                                   __end_of_LORAWAN_Reset 67DC  
                                  __end_of_StartReTxTimer 718A  
                                 ??_UpdateCurrentDataRate 0060  
                                 ??_UpdateChannelIdStatus 0061  
                                __size_of_UpdateDataRange 014E  
                                  _SetReceptionNotOkState A262  
                                            _SSP2CON1bits 000F6C  
                                    ?_i2c1_driver_sendACK 0001  
                                    __end_of_do_I2C_RESET C42C  
                                     GenerateSubkey@F7103 04E0  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue C51E  
                                ??_i2c_write1ByteRegister 0073  
                                       ?_UpdateDLSettings 0060  
                                  ConfigureRadio@dataRate 0072  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                                    ?_i2c1_driver_restart 0001  
                                     __end_of_returnReset C6A8  
                        __size_of_PrepareJoinRequestFrame 0190  
                                           CheckFlags@hdr 0060  
                                  ??_RADIO_WriteFrequency 0071  
                                        _i2c1_driver_open C290  
                                   __size_of_UpdateCfList 01EE  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           ??_BME280_setFilterCoefficient 0060  
                                        _i2c1_driver_stop C6B0  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 034E  
                                    ?_i2c1_driver_startRX 0001  
                                           __size_of_rand 005C  
                                              _T5GCONbits 000F4D  
                                       _RADIO_ReceiveStop BFB6  
                          __size_of_i2c1_driver_getRXData 0004  
                                      ??_UpdateDLSettings 0061  
                                 ??_BME280_getTemperature 00F6  
                                    _LORAWAN_PlatformInit BE4E  
                           __end_of_i2c1_driver_getRXData C6A0  
                                         _FskSyncWordBuff FF6A  
                                      ??_ValidateRxOffset 0060  
                       __end_of_BME280_compensateHumidity 3750  
                               __end_ofi2_TMR1_WriteTimer C19E  
               IncludeMacCommandsResponse@bIncludeInFopts 0064  
                                                _humidity 0114  
                                    ??_ComputeSessionKeys 0093  
                                   ?_LORAWAN_SetDeviceEui 006B  
                               __end_of_ADC_GetConversion B858  
                                           _timerOverflow 0047  
                                i2c_readDataBlock@address 0076  
                                             _setCallBack A536  
                                            _SwTimerStart 9AB4  
                              __size_of_SwTimersInterrupt 0102  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0060  
                                    RADIO_DIO5@dioMapping 0066  
                                   RADIO_TxDone@timeOnAir 00E7  
                                 i2c_masterOperation@read 006F  
                          ValidateChannelMask@channelMask 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                              __size_of_EncryptFRMPayload 018C  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                ?_BME280_readMeasurements 0001  
                                 PrepareSessionKeys@index 0071  
                                __end_of_TMR_GetDeltaTime 6CEC  
                       __end_of_BME280_compensatePressure 250E  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                           _bme280_config 0130  
                                        ??_TMR1_ReadTimer 0062  
                                                _pressure 0117  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                                    RADIO_RxDone@irqFlags 00F3  
                             __end_of_ValidateChannelMask AC6E  
                            __end_of_BME280_setSensorMode C27A  
                                __end_of_BME280_getStatus C4C4  
                                           UpdateCfList@i 00AE  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 006C  
                             PrepareSessionKeys@networkId 006F  
                                       _RADIO_ReleaseData C674  
                                               printf@len 01A4  
                                               printf@exp 01B0  
                                               printf@val 01A6  
                                            _SSP1STATbits 000FC7  
                                       ??_TMR1_WriteTimer 0062  
                              BME280_getPressure@pressure 00F6  
                                           _bme280_status 012D  
                        __end_of_do_I2C_SEND_RESTART_READ C644  
                                i2c_read1ByteRegister@reg 0071  
                                            ??_returnStop 006B  
                             _EUSART1_FramingErrorHandler 03F6  
                                              _RADIO_DIO0 9D96  
                                              _RADIO_DIO1 B21C  
                                              _RADIO_DIO2 AE8E  
                                              _RADIO_DIO3 BE70  
                                              _RADIO_DIO4 B858  
                                              _RADIO_DIO5 BCAC  
                                __end_of_i2c_restartWrite C6B0  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler C6EC  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler C6EA  
                                   ??_do_I2C_DO_NACK_STOP 0060  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FEE5  
                              __size_of_i2c_readDataBlock 0074  
                             i2TMR1_ReadTimer@readValHigh 0007  
                                       ??_TMR5_Initialize 0060  
                              __size_of_DutyCycleCallback 0306  
                                 EncryptFRMPayload@buffer 0091  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00A6  
                   i2c1_driver_setBusCollisionISR@handler 0060  
                                      __end_of_modulation FEDD  
                                              _RADIO_Init 67DC  
                         ExecuteRxParamSetupReq@frequency 00AA  
                                __size_of_UpdateFrequency 0044  
                                ?_ValidateChannelMaskCntl 0001  
                               mssp1_waitForEvent@timeout 0060  
                          __size_of_i2c1_driver_setI2cISR 000A  
                                           __roundCounter 0133  
                           __end_of_i2c1_driver_setI2cISR C532  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert C6CC  
                                __size_of_UpdateDutyCycle 0044  
                                          ?_UpdateTxPower 0001  
                              __size_of_i2c1_driver_start 0004  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                __end_of_BME280_readBlock BF96  
                                          _EncKeySchedule 541C  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0060  
                                     ExecuteDutyCycle@ptr 0060  
                                            _UpdateCfList 6240  
                                     ??_RADIO_ReleaseData 0060  
                                                isdigit@c 0062  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                                scale@scl 0089  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 9A10  
                                       _RADIO_TxDone$1189 00EB  
                                   ??_i2c1_driver_sendACK 0060  
                                      _EXT_INT_Initialize BBDC  
                                        ?_do_I2C_TX_EMPTY 0001  
                                         ?_StartReTxTimer 0001  
                                  _do_I2C_DO_ADDRESS_NACK B412  
                                   _TMR_OverrideRemaining 9B4A  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B1  
                               __end_of_RADIO_ReceiveStop BFD6  
                                        __tdiv_to_l_@exp1 006E  
                                        __tdiv_to_l_@cntr 006D  
                                   ??_i2c1_driver_restart 0060  
                                         _SwTimersExecute 8F5A  
                                        __tdiv_to_l_@quot 0069  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                                  rd2RegCompleteHandler@p 0069  
                           RADIO_WriteFrequency@frequency 006D  
                                   ??_i2c1_driver_startRX 0060  
                                        ___lwmod@dividend 00A8  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                __end_of_ExecuteDevStatus C5AA  
                                 ?_PIN_MANAGER_Initialize 0001  
                                       i2c_restartWrite@p 0069  
                                      _DefaultChannels433 FF16  
                                      _DefaultChannels868 FF40  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0064  
                  __end_of_EUSART1_SetOverrunErrorHandler C578  
                 __size_of_EUSART1_SetOverrunErrorHandler 000A  
                          _EUSART1_SetOverrunErrorHandler C56E  
            BME280_readFactoryCalibrationParams@paramBuff 0082  
                                UpdateDutyCycle@channelId 0062  
                                              _RCSTA1bits 000FAB  
                                  GenerateSubkey@const_Rb 0098  
                                      __end_of_returnStop C6AC  
                         __size_of_ExecuteRxParamSetupReq 0214  
                                        ??_ADC_Initialize 0060  
                              BME280_compensateHumidity@h 00BF  
                             __end_of_Weather_readSensors C0D4  
                               UpdateJoinInProgress@state 0060  
                             __size_of_BME280_getHumidity 0050  
                                       ??_ValidateTxPower 0060  
                                     _LORAWAN_TxDone$2066 00C9  
                                     _LORAWAN_TxDone$2067 00CD  
                             __size_of_mssp1_IRQisEnabled 0014  
                                     _LORAWAN_TxDone$7023 00D6  
                                 ??_Weather_getHumidityRH 00F9  
             __end_of_BME280_readFactoryCalibrationParams 660E  
            __size_of_BME280_readFactoryCalibrationParams 01E0  
                    ?_BME280_readFactoryCalibrationParams 0001  
                   ??_BME280_readFactoryCalibrationParams 007F  
                     _BME280_readFactoryCalibrationParams 642E  
                      BME280_compensateTemperature@tempV1 00BD  
                      BME280_compensateTemperature@tempV2 00C1  
                      __end_of_LORAWAN_LinkCheckConfigure 788A  
                               __end_of_RADIO_ReleaseData C67A  
                              _LORAWAN_LinkCheckConfigure 772C  
                                      __end_of_txPower433 FF10  
                                __size_of_EnableChannels1 006C  
                                      __end_of_txPower868 FF16  
                                __size_of_BME280_readByte 0010  
                                                printf@ap 01A0  
                                                printf@cp 01A2  
                                   _HALResetPinMakeOutput C6D0  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 0020  
                               RADIO_WriteConfiguration@i 00AB  
                               ExecuteRxTimingSetup@delay 0077  
                                        AESEncodeLoRa@key 007F  
                               __size_of_SetJoinFailState 0030  
                        LORAWAN_LinkCheckConfigure@period 00A6  
                                  wr2RegCompleteHandler@p 0069  
                                        ??_ConfigureRadio 0072  
          EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                             __size_of_mssp1_waitForEvent 0012  
                                      _SwTimerSetCallback B566  
             __end_of_UpdateRetransmissionAckTimeoutState A61A  
            __size_of_UpdateRetransmissionAckTimeoutState 0072  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009A  
                     _UpdateRetransmissionAckTimeoutState A5A8  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 00B7  
                             __size_of_BME280_getPressure 0050  
                                ?_Weather_initializeClick 0001  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 0020  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                  __size_of_EUSART1_Write 000E  
                                      _eusart1RxLastError 0131  
                                   __end_of_DIO0_ISR_Lora C68C  
                                            ?__tdiv_to_l_ 0060  
                                __end_of_SwTimerIsRunning BC5A  
                                       ??_CheckMcastFlags 0062  
                                __end_of_ExecuteLinkCheck B8EE  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                                             _printf$7034 019D  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                                             _temperature 011A  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FEED  
                                  __end_of_EncKeySchedule 56C0  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora C686  
                                     ?_SwTimerSetCallback 0060  
                                __end_of_SwTimerReadValue B736  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle B036  
                                         ___lwmod@divisor 00AA  
                  __end_of_UpdateReceiveWindow2Parameters C2D2  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters C2BC  
                                 UpdateTxPower@txPowerNew 0060  
                                       ??_i2c_masterWrite 0071  
                      __end_of_i2c_setAddressNACKCallback C204  
                              _i2c_setAddressNACKCallback C1EC  
                       _BME280_compensateTemperature$7024 00C9  
                                         ___lwmod@counter 00AC  
                         _LORAWAN_LinkCheckConfigure$2892 00AC  
                        __end_of_INT1_SetInterruptHandler C56E  
                                  __size_of_i2c_setBuffer 001A  
                            FindSmallestDataRate@dataRate 0063  
                        BME280_compensatePressure@pressV1 00C3  
                        BME280_compensatePressure@pressV2 00BB  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                             __size_of_BME280_isMeasuring 0014  
                                   __end_of_DIO2_ISR_Lora C680  
                                             _returnReset C6A4  
                                    _SystemBlockingWaitMs BA0E  
                                   FindSmallestDataRate@i 0062  
                      ComputeSessionKeys@joinAcceptBuffer 0091  
                                __end_of_BME280_writeByte C2E6  
                                 __size_of_EnableChannels 001C  
                            __end_of_UpdateJoinInProgress C1D2  
                            __end_of_ExecuteRxTimingSetup BCFC  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FF6D  
                      __size_of_LORAWAN_SetApplicationEui 002E  
                __end_of_RADIO_WriteFSKFrequencyDeviation A7CC  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation A762  
                      __size_of_LORAWAN_SetApplicationKey 002E  
                __end_of_LORAWAN_SetApplicationSessionKey BB26  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey BAF8  
                                        ExtractMic@buffer 006B  
                              ?_LORAWAN_SetApplicationEui 006B  
                                 ??_RADIO_FSKPayloadReady 00F3  
                                UpdateDataRange@channelId 0062  
                              ?_LORAWAN_SetApplicationKey 006B  
                                _RADIO_UnhandledInterrupt B88A  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize AFE2  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite BFF6  
                          __size_of_rd1RegCompleteHandler 0030  
                                 __size_of_ExecuteLinkAdr 02C8  
                         __size_of_i2c_write1ByteRegister 0064  
                           __end_of_rd1RegCompleteHandler B94E  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 72F6  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                  ??_LORAWAN_SetDeviceEui 006D  
                                         _PIN_MANAGER_IOC C5FA  
                                     RADIO_WritePower@ocp 0064  
                              BME280_compensatePressure@p 00BF  
                          __size_of_wr1RegCompleteHandler 0030  
                                ??_Weather_getPressureKPa 00F9  
                                      ??_LORAWAN_Mainloop 00F9  
                         __end_of_BME280_readMeasurements 7C64  
                           __end_of_wr1RegCompleteHandler B97E  
                                   _do_I2C_SEND_ADR_WRITE C3FC  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                              __size_of_ADC_GetConversion 0036  
                                       ??_UpdateDataRange 0061  
                                    _do_I2C_SEND_ADR_READ C40C  
                                   __size_of_BME280_reset 000E  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize BBB0  
                        RADIO_WriteConfiguration@regValue 00B0  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0135  
                                        _bme280_ctrl_meas 012E  
                                           ExtractMic@mic 0073  
                                       _LORAWAN_RxTimeout 3EAA  
                         ?_BME280_setOversamplingHumidity 0001  
                        ??_BME280_setOversamplingHumidity 0060  
                             __end_of_RADIO_SetModulation C5DC  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00DA  
                                     ?i2_TMR_GetDeltaTime 0009  
