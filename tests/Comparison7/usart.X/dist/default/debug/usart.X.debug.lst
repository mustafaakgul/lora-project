

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 05 15:11:10 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 1.45
    84                           ; Generated 16/11/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18LF46K22 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   119  0000                     
   120 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   121  0000                     
   122 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   123  0000                     
   124 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   125  0000                     
   126 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   127  0000                     
   128 ;; Function _AckRetransmissionCallback is unused but had its address taken
   129  0000                     
   130 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   131  0000                     
   132 ;; Function _AutomaticReplyCallback is unused but had its address taken
   133  0000                     
   134 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   135  0000                     
   136 ;; Function _DutyCycleCallback is unused but had its address taken
   137  0000                     
   138 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   139  0000                     
   140 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   141  0000                     
   142 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   143  0000                     
   144                           	psect	idataCOMRAM
   145  000A7C                     __pidataCOMRAM:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _ticksToScheduledInterrupt
   149  000A7C  FFFF               	dw	65535
   150  000A7E  FFFF               	dw	65535
   151                           
   152                           	psect	idataBANK0
   153  000A80                     __pidataBANK0:
   154                           	opt stack 0
   155                           
   156                           ;initializer for _devAddr
   157  000A80  5E47               	dw	24135
   158  000A82  3DEF               	dw	15855
   159                           
   160                           	psect	idataBANK1
   161  000A84                     __pidataBANK1:
   162                           	opt stack 0
   163                           
   164                           ;initializer for _randx
   165  000A84  0001               	dw	1
   166  000A86  0000               	dw	0
   167                           
   168                           	psect	idataBANK2
   169  00099C                     __pidataBANK2:
   170                           	opt stack 0
   171                           
   172                           ;initializer for GenerateSubkey@F7103
   173  00099C  00                 	db	0
   174  00099D  00                 	db	0
   175  00099E  00                 	db	0
   176  00099F  00                 	db	0
   177  0009A0  00                 	db	0
   178  0009A1  00                 	db	0
   179  0009A2  00                 	db	0
   180  0009A3  00                 	db	0
   181  0009A4  00                 	db	0
   182  0009A5  00                 	db	0
   183  0009A6  00                 	db	0
   184  0009A7  00                 	db	0
   185  0009A8  00                 	db	0
   186  0009A9  00                 	db	0
   187  0009AA  00                 	db	0
   188  0009AB  87                 	db	135
   189                           
   190                           	psect	idataBANK3
   191  00087C                     __pidataBANK3:
   192                           	opt stack 0
   193                           
   194                           ;initializer for _appSKey
   195  00087C  96                 	db	150
   196  00087D  23                 	db	35
   197  00087E  5A                 	db	90
   198  00087F  1F                 	db	31
   199  000880  9A                 	db	154
   200  000881  E1                 	db	225
   201  000882  60                 	db	96
   202  000883  36                 	db	54
   203  000884  81                 	db	129
   204  000885  C4                 	db	196
   205  000886  E4                 	db	228
   206  000887  B5                 	db	181
   207  000888  54                 	db	84
   208  000889  C3                 	db	195
   209  00088A  CA                 	db	202
   210  00088B  B5                 	db	181
   211                           
   212                           ;initializer for _nwkSKey
   213  00088C  CB                 	db	203
   214  00088D  1E                 	db	30
   215  00088E  88                 	db	136
   216  00088F  5D                 	db	93
   217  000890  5D                 	db	93
   218  000891  F1                 	db	241
   219  000892  12                 	db	18
   220  000893  D5                 	db	213
   221  000894  08                 	db	8
   222  000895  CC                 	db	204
   223  000896  B9                 	db	185
   224  000897  D1                 	db	209
   225  000898  D4                 	db	212
   226  000899  4B                 	db	75
   227  00089A  1E                 	db	30
   228  00089B  DF                 	db	223
   229                           
   230                           	psect	mediumconst
   231  00FE66                     __pmediumconst:
   232                           	opt stack 0
   233  00FE66  00                 	db	0
   234  00FE67                     _STable:
   235                           	opt stack 0
   236  00FE67  63                 	db	99
   237  00FE68  7C                 	db	124
   238  00FE69  77                 	db	119
   239  00FE6A  7B                 	db	123
   240  00FE6B  F2                 	db	242
   241  00FE6C  6B                 	db	107
   242  00FE6D  6F                 	db	111
   243  00FE6E  C5                 	db	197
   244  00FE6F  30                 	db	48
   245  00FE70  01                 	db	1
   246  00FE71  67                 	db	103
   247  00FE72  2B                 	db	43
   248  00FE73  FE                 	db	254
   249  00FE74  D7                 	db	215
   250  00FE75  AB                 	db	171
   251  00FE76  76                 	db	118
   252  00FE77  CA                 	db	202
   253  00FE78  82                 	db	130
   254  00FE79  C9                 	db	201
   255  00FE7A  7D                 	db	125
   256  00FE7B  FA                 	db	250
   257  00FE7C  59                 	db	89
   258  00FE7D  47                 	db	71
   259  00FE7E  F0                 	db	240
   260  00FE7F  AD                 	db	173
   261  00FE80  D4                 	db	212
   262  00FE81  A2                 	db	162
   263  00FE82  AF                 	db	175
   264  00FE83  9C                 	db	156
   265  00FE84  A4                 	db	164
   266  00FE85  72                 	db	114
   267  00FE86  C0                 	db	192
   268  00FE87  B7                 	db	183
   269  00FE88  FD                 	db	253
   270  00FE89  93                 	db	147
   271  00FE8A  26                 	db	38
   272  00FE8B  36                 	db	54
   273  00FE8C  3F                 	db	63
   274  00FE8D  F7                 	db	247
   275  00FE8E  CC                 	db	204
   276  00FE8F  34                 	db	52
   277  00FE90  A5                 	db	165
   278  00FE91  E5                 	db	229
   279  00FE92  F1                 	db	241
   280  00FE93  71                 	db	113
   281  00FE94  D8                 	db	216
   282  00FE95  31                 	db	49
   283  00FE96  15                 	db	21
   284  00FE97  04                 	db	4
   285  00FE98  C7                 	db	199
   286  00FE99  23                 	db	35
   287  00FE9A  C3                 	db	195
   288  00FE9B  18                 	db	24
   289  00FE9C  96                 	db	150
   290  00FE9D  05                 	db	5
   291  00FE9E  9A                 	db	154
   292  00FE9F  07                 	db	7
   293  00FEA0  12                 	db	18
   294  00FEA1  80                 	db	128
   295  00FEA2  E2                 	db	226
   296  00FEA3  EB                 	db	235
   297  00FEA4  27                 	db	39
   298  00FEA5  B2                 	db	178
   299  00FEA6  75                 	db	117
   300  00FEA7  09                 	db	9
   301  00FEA8  83                 	db	131
   302  00FEA9  2C                 	db	44
   303  00FEAA  1A                 	db	26
   304  00FEAB  1B                 	db	27
   305  00FEAC  6E                 	db	110
   306  00FEAD  5A                 	db	90
   307  00FEAE  A0                 	db	160
   308  00FEAF  52                 	db	82
   309  00FEB0  3B                 	db	59
   310  00FEB1  D6                 	db	214
   311  00FEB2  B3                 	db	179
   312  00FEB3  29                 	db	41
   313  00FEB4  E3                 	db	227
   314  00FEB5  2F                 	db	47
   315  00FEB6  84                 	db	132
   316  00FEB7  53                 	db	83
   317  00FEB8  D1                 	db	209
   318  00FEB9  00                 	db	0
   319  00FEBA  ED                 	db	237
   320  00FEBB  20                 	db	32
   321  00FEBC  FC                 	db	252
   322  00FEBD  B1                 	db	177
   323  00FEBE  5B                 	db	91
   324  00FEBF  6A                 	db	106
   325  00FEC0  CB                 	db	203
   326  00FEC1  BE                 	db	190
   327  00FEC2  39                 	db	57
   328  00FEC3  4A                 	db	74
   329  00FEC4  4C                 	db	76
   330  00FEC5  58                 	db	88
   331  00FEC6  CF                 	db	207
   332  00FEC7  D0                 	db	208
   333  00FEC8  EF                 	db	239
   334  00FEC9  AA                 	db	170
   335  00FECA  FB                 	db	251
   336  00FECB  43                 	db	67
   337  00FECC  4D                 	db	77
   338  00FECD  33                 	db	51
   339  00FECE  85                 	db	133
   340  00FECF  45                 	db	69
   341  00FED0  F9                 	db	249
   342  00FED1  02                 	db	2
   343  00FED2  7F                 	db	127
   344  00FED3  50                 	db	80
   345  00FED4  3C                 	db	60
   346  00FED5  9F                 	db	159
   347  00FED6  A8                 	db	168
   348  00FED7  51                 	db	81
   349  00FED8  A3                 	db	163
   350  00FED9  40                 	db	64
   351  00FEDA  8F                 	db	143
   352  00FEDB  92                 	db	146
   353  00FEDC  9D                 	db	157
   354  00FEDD  38                 	db	56
   355  00FEDE  F5                 	db	245
   356  00FEDF  BC                 	db	188
   357  00FEE0  B6                 	db	182
   358  00FEE1  DA                 	db	218
   359  00FEE2  21                 	db	33
   360  00FEE3  10                 	db	16
   361  00FEE4  FF                 	db	255
   362  00FEE5  F3                 	db	243
   363  00FEE6  D2                 	db	210
   364  00FEE7  CD                 	db	205
   365  00FEE8  0C                 	db	12
   366  00FEE9  13                 	db	19
   367  00FEEA  EC                 	db	236
   368  00FEEB  5F                 	db	95
   369  00FEEC  97                 	db	151
   370  00FEED  44                 	db	68
   371  00FEEE  17                 	db	23
   372  00FEEF  C4                 	db	196
   373  00FEF0  A7                 	db	167
   374  00FEF1  7E                 	db	126
   375  00FEF2  3D                 	db	61
   376  00FEF3  64                 	db	100
   377  00FEF4  5D                 	db	93
   378  00FEF5  19                 	db	25
   379  00FEF6  73                 	db	115
   380  00FEF7  60                 	db	96
   381  00FEF8  81                 	db	129
   382  00FEF9  4F                 	db	79
   383  00FEFA  DC                 	db	220
   384  00FEFB  22                 	db	34
   385  00FEFC  2A                 	db	42
   386  00FEFD  90                 	db	144
   387  00FEFE  88                 	db	136
   388  00FEFF  46                 	db	70
   389  00FF00  EE                 	db	238
   390  00FF01  B8                 	db	184
   391  00FF02  14                 	db	20
   392  00FF03  DE                 	db	222
   393  00FF04  5E                 	db	94
   394  00FF05  0B                 	db	11
   395  00FF06  DB                 	db	219
   396  00FF07  E0                 	db	224
   397  00FF08  32                 	db	50
   398  00FF09  3A                 	db	58
   399  00FF0A  0A                 	db	10
   400  00FF0B  49                 	db	73
   401  00FF0C  06                 	db	6
   402  00FF0D  24                 	db	36
   403  00FF0E  5C                 	db	92
   404  00FF0F  C2                 	db	194
   405  00FF10  D3                 	db	211
   406  00FF11  AC                 	db	172
   407  00FF12  62                 	db	98
   408  00FF13  91                 	db	145
   409  00FF14  95                 	db	149
   410  00FF15  E4                 	db	228
   411  00FF16  79                 	db	121
   412  00FF17  E7                 	db	231
   413  00FF18  C8                 	db	200
   414  00FF19  37                 	db	55
   415  00FF1A  6D                 	db	109
   416  00FF1B  8D                 	db	141
   417  00FF1C  D5                 	db	213
   418  00FF1D  4E                 	db	78
   419  00FF1E  A9                 	db	169
   420  00FF1F  6C                 	db	108
   421  00FF20  56                 	db	86
   422  00FF21  F4                 	db	244
   423  00FF22  EA                 	db	234
   424  00FF23  65                 	db	101
   425  00FF24  7A                 	db	122
   426  00FF25  AE                 	db	174
   427  00FF26  08                 	db	8
   428  00FF27  BA                 	db	186
   429  00FF28  78                 	db	120
   430  00FF29  25                 	db	37
   431  00FF2A  2E                 	db	46
   432  00FF2B  1C                 	db	28
   433  00FF2C  A6                 	db	166
   434  00FF2D  B4                 	db	180
   435  00FF2E  C6                 	db	198
   436  00FF2F  E8                 	db	232
   437  00FF30  DD                 	db	221
   438  00FF31  74                 	db	116
   439  00FF32  1F                 	db	31
   440  00FF33  4B                 	db	75
   441  00FF34  BD                 	db	189
   442  00FF35  8B                 	db	139
   443  00FF36  8A                 	db	138
   444  00FF37  70                 	db	112
   445  00FF38  3E                 	db	62
   446  00FF39  B5                 	db	181
   447  00FF3A  66                 	db	102
   448  00FF3B  48                 	db	72
   449  00FF3C  03                 	db	3
   450  00FF3D  F6                 	db	246
   451  00FF3E  0E                 	db	14
   452  00FF3F  61                 	db	97
   453  00FF40  35                 	db	53
   454  00FF41  57                 	db	87
   455  00FF42  B9                 	db	185
   456  00FF43  86                 	db	134
   457  00FF44  C1                 	db	193
   458  00FF45  1D                 	db	29
   459  00FF46  9E                 	db	158
   460  00FF47  E1                 	db	225
   461  00FF48  F8                 	db	248
   462  00FF49  98                 	db	152
   463  00FF4A  11                 	db	17
   464  00FF4B  69                 	db	105
   465  00FF4C  D9                 	db	217
   466  00FF4D  8E                 	db	142
   467  00FF4E  94                 	db	148
   468  00FF4F  9B                 	db	155
   469  00FF50  1E                 	db	30
   470  00FF51  87                 	db	135
   471  00FF52  E9                 	db	233
   472  00FF53  CE                 	db	206
   473  00FF54  55                 	db	85
   474  00FF55  28                 	db	40
   475  00FF56  DF                 	db	223
   476  00FF57  8C                 	db	140
   477  00FF58  A1                 	db	161
   478  00FF59  89                 	db	137
   479  00FF5A  0D                 	db	13
   480  00FF5B  BF                 	db	191
   481  00FF5C  E6                 	db	230
   482  00FF5D  42                 	db	66
   483  00FF5E  68                 	db	104
   484  00FF5F  41                 	db	65
   485  00FF60  99                 	db	153
   486  00FF61  2D                 	db	45
   487  00FF62  0F                 	db	15
   488  00FF63  B0                 	db	176
   489  00FF64  54                 	db	84
   490  00FF65  BB                 	db	187
   491  00FF66  16                 	db	22
   492  00FF67                     __end_of_STable:
   493                           	opt stack 0
   494  00FF67                     _modulation:
   495                           	opt stack 0
   496  00FF67  01                 	db	1
   497  00FF68  01                 	db	1
   498  00FF69  01                 	db	1
   499  00FF6A  01                 	db	1
   500  00FF6B  01                 	db	1
   501  00FF6C  01                 	db	1
   502  00FF6D  01                 	db	1
   503  00FF6E  00                 	db	0
   504  00FF6F                     __end_of_modulation:
   505                           	opt stack 0
   506  00FF6F                     _rxWindowOffset:
   507                           	opt stack 0
   508  00FF6F  DF                 	db	223
   509  00FF70  CE                 	db	206
   510  00FF71  C6                 	db	198
   511  00FF72  C2                 	db	194
   512  00FF73  BE                 	db	190
   513  00FF74  BC                 	db	188
   514  00FF75  F1                 	db	241
   515  00FF76  FE                 	db	254
   516  00FF77                     __end_of_rxWindowOffset:
   517                           	opt stack 0
   518  00FF77                     _maxPayloadSize:
   519                           	opt stack 0
   520  00FF77  33                 	db	51
   521  00FF78  33                 	db	51
   522  00FF79  33                 	db	51
   523  00FF7A  73                 	db	115
   524  00FF7B  F2                 	db	242
   525  00FF7C  F2                 	db	242
   526  00FF7D  F2                 	db	242
   527  00FF7E  38                 	db	56
   528  00FF7F                     __end_of_maxPayloadSize:
   529                           	opt stack 0
   530  00FF7F                     _rxWindowSize:
   531                           	opt stack 0
   532  00FF7F  08                 	db	8
   533  00FF80  0A                 	db	10
   534  00FF81  0E                 	db	14
   535  00FF82  1A                 	db	26
   536  00FF83  31                 	db	49
   537  00FF84  58                 	db	88
   538  00FF85  3C                 	db	60
   539  00FF86  08                 	db	8
   540  00FF87                     __end_of_rxWindowSize:
   541                           	opt stack 0
   542  00FF87                     _bandwidth:
   543                           	opt stack 0
   544  00FF87  07                 	db	7
   545  00FF88  07                 	db	7
   546  00FF89  07                 	db	7
   547  00FF8A  07                 	db	7
   548  00FF8B  07                 	db	7
   549  00FF8C  07                 	db	7
   550  00FF8D  08                 	db	8
   551  00FF8E                     __end_of_bandwidth:
   552                           	opt stack 0
   553  00FF8E                     _spreadingFactor:
   554                           	opt stack 0
   555  00FF8E  0C                 	db	12
   556  00FF8F  0B                 	db	11
   557  00FF90  0A                 	db	10
   558  00FF91  09                 	db	9
   559  00FF92  08                 	db	8
   560  00FF93  07                 	db	7
   561  00FF94  07                 	db	7
   562  00FF95                     __end_of_spreadingFactor:
   563                           	opt stack 0
   564  00FF95                     _macEndDevCmdReplyLen:
   565                           	opt stack 0
   566  00FF95  01                 	db	1
   567  00FF96  02                 	db	2
   568  00FF97  01                 	db	1
   569  00FF98  02                 	db	2
   570  00FF99  03                 	db	3
   571  00FF9A  02                 	db	2
   572  00FF9B  01                 	db	1
   573  00FF9C                     __end_of_macEndDevCmdReplyLen:
   574                           	opt stack 0
   575  00FF9C  0A                 	db	10
   576  00FF9D  07                 	db	7
   577  00FF9E  04                 	db	4
   578  00FF9F  01                 	db	1
   579  00FFA0  FE                 	db	254
   580  00FFA1  FB                 	db	251
   581  00FFA2                     __end_of_txPower433:
   582                           	opt stack 0
   583  00FFA2                     _txPower868:
   584                           	opt stack 0
   585  00FFA2  14                 	db	20
   586  00FFA3  0E                 	db	14
   587  00FFA4  0B                 	db	11
   588  00FFA5  08                 	db	8
   589  00FFA6  05                 	db	5
   590  00FFA7  02                 	db	2
   591  00FFA8                     __end_of_txPower868:
   592                           	opt stack 0
   593  00FFA8                     _DefaultChannels433:
   594                           	opt stack 0
   595  00FFA8  B9D8               	dw	47576
   596  00FFAA  19D1               	dw	6609
   597  00FFAC  01                 	db	1
   598  00FFAD  50                 	db	80
   599  00FFAE  012E               	dw	302
   600  00FFB0  0000               	dw	0
   601  00FFB2  0000               	dw	0
   602  00FFB4  01                 	db	1
   603  00FFB5  FF                 	db	255
   604  00FFB6  C718               	dw	50968
   605  00FFB8  19D4               	dw	6612
   606  00FFBA  01                 	db	1
   607  00FFBB  50                 	db	80
   608  00FFBC  012E               	dw	302
   609  00FFBE  0000               	dw	0
   610  00FFC0  0000               	dw	0
   611  00FFC2  01                 	db	1
   612  00FFC3  FF                 	db	255
   613  00FFC4  D458               	dw	54360
   614  00FFC6  19D7               	dw	6615
   615  00FFC8  01                 	db	1
   616  00FFC9  50                 	db	80
   617  00FFCA  012E               	dw	302
   618  00FFCC  0000               	dw	0
   619  00FFCE  0000               	dw	0
   620  00FFD0  01                 	db	1
   621  00FFD1  FF                 	db	255
   622  00FFD2                     __end_of_DefaultChannels433:
   623                           	opt stack 0
   624  00FFD2                     _DefaultChannels868:
   625                           	opt stack 0
   626  00FFD2  27A0               	dw	10144
   627  00FFD4  33BE               	dw	13246
   628  00FFD6  01                 	db	1
   629  00FFD7  50                 	db	80
   630  00FFD8  012E               	dw	302
   631  00FFDA  0000               	dw	0
   632  00FFDC  0000               	dw	0
   633  00FFDE  01                 	db	1
   634  00FFDF  FF                 	db	255
   635  00FFE0  34E0               	dw	13536
   636  00FFE2  33C1               	dw	13249
   637  00FFE4  01                 	db	1
   638  00FFE5  50                 	db	80
   639  00FFE6  012E               	dw	302
   640  00FFE8  0000               	dw	0
   641  00FFEA  0000               	dw	0
   642  00FFEC  01                 	db	1
   643  00FFED  FF                 	db	255
   644  00FFEE  4220               	dw	16928
   645  00FFF0  33C4               	dw	13252
   646  00FFF2  01                 	db	1
   647  00FFF3  50                 	db	80
   648  00FFF4  012E               	dw	302
   649  00FFF6  0000               	dw	0
   650  00FFF8  0000               	dw	0
   651  00FFFA  01                 	db	1
   652  00FFFB  FF                 	db	255
   653  00FFFC                     __end_of_DefaultChannels868:
   654                           	opt stack 0
   655  00FFFC                     _FskSyncWordBuff:
   656                           	opt stack 0
   657  00FFFC  C1                 	db	193
   658  00FFFD  94                 	db	148
   659  00FFFE  C1                 	db	193
   660  00FFFF                     __end_of_FskSyncWordBuff:
   661                           	opt stack 0
   662  00FFFF  00                 	db	0	; dummy byte at the end
   663  0000                     
   664                           	psect	nvBANK0
   665  0000F0                     __pnvBANK0:
   666                           	opt stack 0
   667  0000F0                     _timer5ReloadVal:
   668                           	opt stack 0
   669  0000F0                     	ds	2
   670  0000F2                     _TMR1_InterruptHandler:
   671                           	opt stack 0
   672  0000F2                     	ds	2
   673  0000F4                     _timer1ReloadVal:
   674                           	opt stack 0
   675  0000F4                     	ds	2
   676  0000F6                     _IOCB4_InterruptHandler:
   677                           	opt stack 0
   678  0000F6                     	ds	2
   679  0000F8                     _INT2_InterruptHandler:
   680                           	opt stack 0
   681  0000F8                     	ds	2
   682  0000FA                     _INT1_InterruptHandler:
   683                           	opt stack 0
   684  0000FA                     	ds	2
   685                           
   686                           	psect	nvBANK1
   687  0001F5                     __pnvBANK1:
   688                           	opt stack 0
   689  0001F5                     _EUSART1_ErrorHandler:
   690                           	opt stack 0
   691  0001F5                     	ds	2
   692  0001F7                     _EUSART1_OverrunErrorHandler:
   693                           	opt stack 0
   694  0001F7                     	ds	2
   695  0001F9                     _EUSART1_FramingErrorHandler:
   696                           	opt stack 0
   697  0001F9                     	ds	2
   698  0000                     _TMR5	set	3919
   699  0000                     _T5GCONbits	set	3917
   700  0000                     _T5CONbits	set	3918
   701  0000                     _T5CON	set	3918
   702  0000                     _TMR5L	set	3919
   703  0000                     _TMR5H	set	3920
   704  0000                     _T5GCON	set	3917
   705  0000                     _ANSELA	set	3896
   706  0000                     _ANSELE	set	3900
   707  0000                     _ANSELB	set	3897
   708  0000                     _ANSELC	set	3898
   709  0000                     _ANSELD	set	3899
   710  0000                     _TMR1	set	4046
   711  0000                     _TXREG	set	4013
   712  0000                     _PIR5bits	set	3966
   713  0000                     _T1GCONbits	set	4044
   714  0000                     _T1CONbits	set	4045
   715  0000                     _T1CON	set	4045
   716  0000                     _TMR1L	set	4046
   717  0000                     _TMR1H	set	4047
   718  0000                     _T1GCON	set	4044
   719  0000                     _TXREG1	set	4013
   720  0000                     _RCREG1	set	4014
   721  0000                     _RCSTA1bits	set	4011
   722  0000                     _TXSTA1bits	set	4012
   723  0000                     _SPBRGH1	set	4016
   724  0000                     _SPBRG1	set	4015
   725  0000                     _TXSTA1	set	4012
   726  0000                     _RCSTA1	set	4011
   727  0000                     _BAUDCON1	set	4024
   728  0000                     _SSP2STATbits	set	3949
   729  0000                     _SSP2BUF	set	3951
   730  0000                     _SSP2CON1bits	set	3948
   731  0000                     _SSP2ADD	set	3950
   732  0000                     _SSP2CON1	set	3948
   733  0000                     _SSP2STAT	set	3949
   734  0000                     _IOCBbits	set	3938
   735  0000                     _WPUB	set	3937
   736  0000                     _TRISD	set	3989
   737  0000                     _TRISC	set	3988
   738  0000                     _TRISB	set	3987
   739  0000                     _TRISA	set	3986
   740  0000                     _TRISE	set	3990
   741  0000                     _LATC	set	3979
   742  0000                     _LATB	set	3978
   743  0000                     _LATA	set	3977
   744  0000                     _LATD	set	3980
   745  0000                     _LATE	set	3981
   746  0000                     _OSCTUNE	set	3995
   747  0000                     _OSCCON2	set	4050
   748  0000                     _OSCCON	set	4051
   749  0000                     _PIR1bits	set	3998
   750  0000                     _PIE1bits	set	3997
   751  0000                     _RCONbits	set	4048
   752  0000                     _INTCON2bits	set	4081
   753  0000                     _INTCON3bits	set	4080
   754  0000                     _INTCONbits	set	4082
   755  0000                     _PORTBbits	set	3969
   756  0000                     _LATD3	set	31843
   757  0000                     _LATC2	set	31834
   758  0000                     _TRISC2	set	31906
   759                           
   760                           ; #config settings
   761  0000                     
   762                           	psect	cinit
   763  000548                     __pcinit:
   764                           	opt stack 0
   765  000548                     start_initialization:
   766                           	opt stack 0
   767  000548                     __initialization:
   768                           	opt stack 0
   769                           
   770                           ; Initialize objects allocated to BANK3 (32 bytes)
   771                           ; load TBLPTR registers with __pidataBANK3
   772  000548  0E7C               	movlw	low __pidataBANK3
   773  00054A  6EF6               	movwf	tblptrl,c
   774  00054C  0E08               	movlw	high __pidataBANK3
   775  00054E  6EF7               	movwf	tblptrh,c
   776  000550  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   777  000552  6EF8               	movwf	tblptru,c
   778  000554  EE03  F0A0         	lfsr	0,__pdataBANK3
   779  000558  EE20 F020          	lfsr	2,32
   780  00055C                     copy_data0:
   781  00055C  0009               	tblrd		*+
   782  00055E  CFF5 FFEE          	movff	tablat,postinc0
   783  000562  50DD               	movf	postdec2,w,c
   784  000564  50D9               	movf	fsr2l,w,c
   785  000566  E1FA               	bnz	copy_data0
   786                           
   787                           ; Initialize objects allocated to BANK2 (16 bytes)
   788                           ; load TBLPTR registers with __pidataBANK2
   789  000568  0E9C               	movlw	low __pidataBANK2
   790  00056A  6EF6               	movwf	tblptrl,c
   791  00056C  0E09               	movlw	high __pidataBANK2
   792  00056E  6EF7               	movwf	tblptrh,c
   793  000570  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   794  000572  6EF8               	movwf	tblptru,c
   795  000574  EE02  F0E8         	lfsr	0,__pdataBANK2
   796  000578  EE20 F010          	lfsr	2,16
   797  00057C                     copy_data1:
   798  00057C  0009               	tblrd		*+
   799  00057E  CFF5 FFEE          	movff	tablat,postinc0
   800  000582  50DD               	movf	postdec2,w,c
   801  000584  50D9               	movf	fsr2l,w,c
   802  000586  E1FA               	bnz	copy_data1
   803                           
   804                           ; Initialize objects allocated to BANK1 (4 bytes)
   805                           ; load TBLPTR registers with __pidataBANK1
   806  000588  0E84               	movlw	low __pidataBANK1
   807  00058A  6EF6               	movwf	tblptrl,c
   808  00058C  0E0A               	movlw	high __pidataBANK1
   809  00058E  6EF7               	movwf	tblptrh,c
   810  000590  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   811  000592  6EF8               	movwf	tblptru,c
   812  000594  EE01  F0FB         	lfsr	0,__pdataBANK1
   813  000598  EE20 F004          	lfsr	2,4
   814  00059C                     copy_data2:
   815  00059C  0009               	tblrd		*+
   816  00059E  CFF5 FFEE          	movff	tablat,postinc0
   817  0005A2  50DD               	movf	postdec2,w,c
   818  0005A4  50D9               	movf	fsr2l,w,c
   819  0005A6  E1FA               	bnz	copy_data2
   820                           
   821                           ; Initialize objects allocated to BANK0 (4 bytes)
   822                           ; load TBLPTR registers with __pidataBANK0
   823  0005A8  0E80               	movlw	low __pidataBANK0
   824  0005AA  6EF6               	movwf	tblptrl,c
   825  0005AC  0E0A               	movlw	high __pidataBANK0
   826  0005AE  6EF7               	movwf	tblptrh,c
   827  0005B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   828  0005B2  6EF8               	movwf	tblptru,c
   829  0005B4  EE00  F0FC         	lfsr	0,__pdataBANK0
   830  0005B8  EE20 F004          	lfsr	2,4
   831  0005BC                     copy_data3:
   832  0005BC  0009               	tblrd		*+
   833  0005BE  CFF5 FFEE          	movff	tablat,postinc0
   834  0005C2  50DD               	movf	postdec2,w,c
   835  0005C4  50D9               	movf	fsr2l,w,c
   836  0005C6  E1FA               	bnz	copy_data3
   837                           
   838                           ; Initialize objects allocated to COMRAM (4 bytes)
   839                           ; load TBLPTR registers with __pidataCOMRAM
   840  0005C8  0E7C               	movlw	low __pidataCOMRAM
   841  0005CA  6EF6               	movwf	tblptrl,c
   842  0005CC  0E0A               	movlw	high __pidataCOMRAM
   843  0005CE  6EF7               	movwf	tblptrh,c
   844  0005D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   845  0005D2  6EF8               	movwf	tblptru,c
   846  0005D4  EE00  F054         	lfsr	0,__pdataCOMRAM
   847  0005D8  EE20 F004          	lfsr	2,4
   848  0005DC                     copy_data4:
   849  0005DC  0009               	tblrd		*+
   850  0005DE  CFF5 FFEE          	movff	tablat,postinc0
   851  0005E2  50DD               	movf	postdec2,w,c
   852  0005E4  50D9               	movf	fsr2l,w,c
   853  0005E6  E1FA               	bnz	copy_data4
   854                           
   855                           ; Clear objects allocated to BIGRAM (1566 bytes)
   856  0005E8  EE03  F0C0         	lfsr	0,__pbssBIGRAM
   857  0005EC  EE26 F01E          	lfsr	2,1566
   858  0005F0                     clear_0:
   859  0005F0  6AEE               	clrf	postinc0,c
   860  0005F2  50DD               	movf	postdec2,w,c
   861  0005F4  50D9               	movf	fsr2l,w,c
   862  0005F6  E1FC               	bnz	clear_0
   863  0005F8  50DA               	movf	fsr2h,w,c
   864  0005FA  E1FA               	bnz	clear_0
   865                           
   866                           ; Clear objects allocated to BANK3 (160 bytes)
   867  0005FC  EE03  F000         	lfsr	0,__pbssBANK3
   868  000600  0EA0               	movlw	160
   869  000602                     clear_1:
   870  000602  6AEE               	clrf	postinc0,c
   871  000604  06E8               	decf	wreg,f,c
   872  000606  E1FD               	bnz	clear_1
   873                           
   874                           ; Clear objects allocated to BANK2 (232 bytes)
   875  000608  EE02  F000         	lfsr	0,__pbssBANK2
   876  00060C  0EE8               	movlw	232
   877  00060E                     clear_2:
   878  00060E  6AEE               	clrf	postinc0,c
   879  000610  06E8               	decf	wreg,f,c
   880  000612  E1FD               	bnz	clear_2
   881                           
   882                           ; Clear objects allocated to BANK1 (245 bytes)
   883  000614  EE01  F000         	lfsr	0,__pbssBANK1
   884  000618  0EF5               	movlw	245
   885  00061A                     clear_3:
   886  00061A  6AEE               	clrf	postinc0,c
   887  00061C  06E8               	decf	wreg,f,c
   888  00061E  E1FD               	bnz	clear_3
   889                           
   890                           ; Clear objects allocated to BANK0 (129 bytes)
   891  000620  EE00  F060         	lfsr	0,__pbssBANK0
   892  000624  0E81               	movlw	129
   893  000626                     clear_4:
   894  000626  6AEE               	clrf	postinc0,c
   895  000628  06E8               	decf	wreg,f,c
   896  00062A  E1FD               	bnz	clear_4
   897                           
   898                           ; Clear objects allocated to COMRAM (12 bytes)
   899  00062C  EE00  F03C         	lfsr	0,__pbssCOMRAM
   900  000630  0E0C               	movlw	12
   901  000632                     clear_5:
   902  000632  6AEE               	clrf	postinc0,c
   903  000634  06E8               	decf	wreg,f,c
   904  000636  E1FD               	bnz	clear_5
   905  000638                     end_of_initialization:
   906                           	opt stack 0
   907  000638                     __end_of__initialization:
   908                           	opt stack 0
   909  000638  0100               	movlb	0
   910  00063A  EF43  F000         	goto	_main	;jump to C main() function
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec2	equ	0xFDD
   918                           fsr2h	equ	0xFDA
   919                           fsr2l	equ	0xFD9
   920                           
   921                           	psect	bssCOMRAM
   922  00003C                     __pbssCOMRAM:
   923                           	opt stack 0
   924  00003C                     _rxPayload:
   925                           	opt stack 0
   926  00003C                     	ds	4
   927  000040                     _reloadVal:
   928                           	opt stack 0
   929  000040                     	ds	2
   930  000042                     __rcon:
   931                           	opt stack 0
   932  000042                     	ds	1
   933  000043                     __roundCounter:
   934                           	opt stack 0
   935  000043                     	ds	1
   936  000044                     _allocatedTimers:
   937                           	opt stack 0
   938  000044                     	ds	1
   939  000045                     _timerOverflow:
   940                           	opt stack 0
   941  000045                     	ds	1
   942  000046                     _localDioStatus:
   943                           	opt stack 0
   944  000046                     	ds	1
   945  000047                     _dioStatus:
   946                           	opt stack 0
   947  000047                     	ds	1
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           postdec2	equ	0xFDD
   955                           fsr2h	equ	0xFDA
   956                           fsr2l	equ	0xFD9
   957                           
   958                           	psect	dataCOMRAM
   959  000054                     __pdataCOMRAM:
   960                           	opt stack 0
   961  000054                     _ticksToScheduledInterrupt:
   962                           	opt stack 0
   963  000054                     	ds	4
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           postdec2	equ	0xFDD
   971                           fsr2h	equ	0xFDA
   972                           fsr2l	equ	0xFD9
   973                           
   974                           	psect	bssBANK0
   975  000060                     __pbssBANK0:
   976                           	opt stack 0
   977  000060                     TMR_GetDeltaTime@retVal:
   978                           	opt stack 0
   979  000060                     	ds	4
   980  000064                     _ticksAccounted:
   981                           	opt stack 0
   982  000064                     	ds	4
   983  000068                     _ticksAdded:
   984                           	opt stack 0
   985  000068                     	ds	4
   986  00006C                     _bitStatus7:
   987                           	opt stack 0
   988  00006C                     	ds	2
   989  00006E                     _bitStatus6:
   990                           	opt stack 0
   991  00006E                     	ds	2
   992  000070                     _bitStatus5:
   993                           	opt stack 0
   994  000070                     	ds	2
   995  000072                     _bitStatus4:
   996                           	opt stack 0
   997  000072                     	ds	2
   998  000074                     _bitStatus3:
   999                           	opt stack 0
  1000  000074                     	ds	2
  1001  000076                     _bitStatus2:
  1002                           	opt stack 0
  1003  000076                     	ds	2
  1004  000078                     _bitStatus1:
  1005                           	opt stack 0
  1006  000078                     	ds	2
  1007  00007A                     _bitStatus:
  1008                           	opt stack 0
  1009  00007A                     	ds	2
  1010  00007C                     _bitStatusbefore7:
  1011                           	opt stack 0
  1012  00007C                     	ds	2
  1013  00007E                     _bitStatusbefore6:
  1014                           	opt stack 0
  1015  00007E                     	ds	2
  1016  000080                     _bitStatusbefore5:
  1017                           	opt stack 0
  1018  000080                     	ds	2
  1019  000082                     _bitStatusbefore4:
  1020                           	opt stack 0
  1021  000082                     	ds	2
  1022  000084                     _bitStatusbefore3:
  1023                           	opt stack 0
  1024  000084                     	ds	2
  1025  000086                     _bitStatusbefore2:
  1026                           	opt stack 0
  1027  000086                     	ds	2
  1028  000088                     _bitStatusbefore1:
  1029                           	opt stack 0
  1030  000088                     	ds	2
  1031  00008A                     _n:
  1032                           	opt stack 0
  1033  00008A                     	ds	2
  1034  00008C                     _datatobesolved:
  1035                           	opt stack 0
  1036  00008C                     	ds	2
  1037  00008E                     TMR_SwapTimer@retVal:
  1038                           	opt stack 0
  1039  00008E                     	ds	2
  1040  000090                     TMR_SwapTimer@oldVal:
  1041                           	opt stack 0
  1042  000090                     	ds	2
  1043  000092                     TMR_GetDeltaTime@tmrVal:
  1044                           	opt stack 0
  1045  000092                     	ds	2
  1046  000094                     _character:
  1047                           	opt stack 0
  1048  000094                     	ds	1
  1049  000095                     _dataxsolved:
  1050                           	opt stack 0
  1051  000095                     	ds	1
  1052  000096                     _counter:
  1053                           	opt stack 0
  1054  000096                     	ds	1
  1055  000097                     _datax:
  1056                           	opt stack 0
  1057  000097                     	ds	1
  1058  000098                     _eusart1RxLastError:
  1059                           	opt stack 0
  1060  000098                     	ds	1
  1061  000099                     _RadioConfiguration:
  1062                           	opt stack 0
  1063  000099                     	ds	54
  1064  0000CF                     _aesBuffer:
  1065                           	opt stack 0
  1066  0000CF                     	ds	16
  1067  0000DF                     _dataresult:
  1068                           	opt stack 0
  1069  0000DF                     	ds	2
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           postinc0	equ	0xFEE
  1075                           wreg	equ	0xFE8
  1076                           postdec2	equ	0xFDD
  1077                           fsr2h	equ	0xFDA
  1078                           fsr2l	equ	0xFD9
  1079                           
  1080                           	psect	dataBANK0
  1081  0000FC                     __pdataBANK0:
  1082                           	opt stack 0
  1083  0000FC                     _devAddr:
  1084                           	opt stack 0
  1085  0000FC                     	ds	4
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postdec2	equ	0xFDD
  1093                           fsr2h	equ	0xFDA
  1094                           fsr2l	equ	0xFD9
  1095                           
  1096                           	psect	bssBANK1
  1097  000100                     __pbssBANK1:
  1098                           	opt stack 0
  1099  000100                     _loRa:
  1100                           	opt stack 0
  1101  000100                     	ds	245
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec2	equ	0xFDD
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           
  1112                           	psect	dataBANK1
  1113  0001FB                     __pdataBANK1:
  1114                           	opt stack 0
  1115  0001FB                     _randx:
  1116                           	opt stack 0
  1117  0001FB                     	ds	4
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec2	equ	0xFDD
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           
  1128                           	psect	bssBANK2
  1129  000200                     __pbssBANK2:
  1130                           	opt stack 0
  1131  000200                     _readurt:
  1132                           	opt stack 0
  1133  000200                     	ds	8
  1134  000208                     _Channels:
  1135                           	opt stack 0
  1136  000208                     	ds	224
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           postdec2	equ	0xFDD
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           
  1147                           	psect	dataBANK2
  1148  0002E8                     __pdataBANK2:
  1149                           	opt stack 0
  1150  0002E8                     GenerateSubkey@F7103:
  1151                           	opt stack 0
  1152  0002E8                     	ds	16
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec2	equ	0xFDD
  1160                           fsr2h	equ	0xFDA
  1161                           fsr2l	equ	0xFD9
  1162                           
  1163                           	psect	bssBANK3
  1164  000300                     __pbssBANK3:
  1165                           	opt stack 0
  1166  000300                     _swTimers:
  1167                           	opt stack 0
  1168  000300                     	ds	160
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           postdec2	equ	0xFDD
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           
  1179                           	psect	dataBANK3
  1180  0003A0                     __pdataBANK3:
  1181                           	opt stack 0
  1182  0003A0                     _appSKey:
  1183                           	opt stack 0
  1184  0003A0                     	ds	16
  1185  0003B0                     _nwkSKey:
  1186                           	opt stack 0
  1187  0003B0                     	ds	16
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           postdec2	equ	0xFDD
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           
  1198                           	psect	bssBIGRAM
  1199  0003C0                     __pbssBIGRAM:
  1200                           	opt stack 0
  1201  0003C0                     _dataxstr:
  1202                           	opt stack 0
  1203  0003C0                     	ds	1024
  1204  0007C0                     _radioBuffer:
  1205                           	opt stack 0
  1206  0007C0                     	ds	271
  1207  0008CF                     _macBuffer:
  1208                           	opt stack 0
  1209  0008CF                     	ds	271
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec2	equ	0xFDD
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           
  1220                           	psect	cstackBANK0
  1221  0000E1                     __pcstackBANK0:
  1222                           	opt stack 0
  1223  0000E1                     EUSART1_Write@txData:
  1224                           	opt stack 0
  1225  0000E1                     INT1_SetInterruptHandler@InterruptHandler:
  1226                           	opt stack 0
  1227  0000E1                     INT2_SetInterruptHandler@InterruptHandler:
  1228                           	opt stack 0
  1229  0000E1                     IOCB4_SetInterruptHandler@InterruptHandler:
  1230                           	opt stack 0
  1231  0000E1                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1232                           	opt stack 0
  1233  0000E1                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1234                           	opt stack 0
  1235  0000E1                     EUSART1_SetErrorHandler@interruptHandler:
  1236                           	opt stack 0
  1237  0000E1                     TMR1_SetInterruptHandler@InterruptHandler:
  1238                           	opt stack 0
  1239  0000E1                     strncat@to:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x0
  1243  0000E1                     	ds	2
  1244  0000E3                     strncat@from:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0x2
  1248  0000E3                     	ds	2
  1249  0000E5                     strncat@size:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x4
  1253  0000E5                     	ds	2
  1254  0000E7                     strncat@cp:
  1255                           	opt stack 0
  1256                           
  1257                           ; 2 bytes @ 0x6
  1258  0000E7                     	ds	2
  1259  0000E9                     ??_main:
  1260                           
  1261                           ; 1 bytes @ 0x8
  1262  0000E9                     	ds	3
  1263  0000EC                     main@j:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0xB
  1267  0000EC                     	ds	2
  1268  0000EE                     main@delay:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0xD
  1272  0000EE                     	ds	2
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           postdec2	equ	0xFDD
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           
  1283                           	psect	cstackCOMRAM
  1284  000001                     __pcstackCOMRAM:
  1285                           	opt stack 0
  1286  000001                     ?_TMR1_ReadTimer:
  1287                           	opt stack 0
  1288  000001                     TMR1_WriteTimer@timerVal:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x0
  1292  000001                     	ds	2
  1293  000003                     ??_TMR1_ReadTimer:
  1294  000003                     
  1295                           ; 1 bytes @ 0x2
  1296  000003                     	ds	2
  1297  000005                     TMR1_ReadTimer@readVal:
  1298                           	opt stack 0
  1299                           
  1300                           ; 2 bytes @ 0x4
  1301  000005                     	ds	2
  1302  000007                     TMR1_ReadTimer@readValHigh:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x6
  1306  000007                     	ds	1
  1307  000008                     TMR1_ReadTimer@readValLow:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x7
  1311  000008                     	ds	1
  1312  000009                     ?_TMR_SwapTimer:
  1313                           	opt stack 0
  1314  000009                     ?_TMR_GetDeltaTime:
  1315                           	opt stack 0
  1316  000009                     TMR_SwapTimer@timerVal:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0x8
  1320  000009                     	ds	2
  1321  00000B                     
  1322                           ; 1 bytes @ 0xA
  1323  00000B                     	ds	2
  1324  00000D                     ??_TMR_GetDeltaTime:
  1325                           
  1326                           ; 1 bytes @ 0xC
  1327  00000D                     	ds	20
  1328  000021                     ?_SwTimersInterrupt:
  1329                           	opt stack 0
  1330                           
  1331                           ; 4 bytes @ 0x20
  1332  000021                     	ds	4
  1333  000025                     
  1334                           ; 1 bytes @ 0x24
  1335  000025                     	ds	4
  1336  000029                     SwTimersInterrupt@timeElapsed:
  1337                           	opt stack 0
  1338                           
  1339                           ; 4 bytes @ 0x28
  1340  000029                     	ds	4
  1341  00002D                     SwTimersInterrupt@ticksToNextTimerEvent:
  1342                           	opt stack 0
  1343                           
  1344                           ; 4 bytes @ 0x2C
  1345  00002D                     	ds	4
  1346  000031                     SwTimersInterrupt@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x30
  1350  000031                     	ds	1
  1351  000032                     ??_TMR_ISR_lora:
  1352                           
  1353                           ; 1 bytes @ 0x31
  1354  000032                     	ds	2
  1355  000034                     ??_INTERRUPT_InterruptManager:
  1356                           
  1357                           ; 1 bytes @ 0x33
  1358  000034                     	ds	8
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec2	equ	0xFDD
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           
  1369 ;;
  1370 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1371 ;;
  1372 ;; *************** function _main *****************
  1373 ;; Defined at:
  1374 ;;		line 122 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  delay           2   13[BANK0 ] int 
  1379 ;;  j               2   11[BANK0 ] int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        7 bytes
  1394 ;; Hardware stack levels required when called:   11
  1395 ;; This function calls:
  1396 ;;		_EUSART1_Read
  1397 ;;		_EUSART1_Write
  1398 ;;		_SYSTEM_Initialize
  1399 ;;		_strncat
  1400 ;; This function is called by:
  1401 ;;		Startup code after reset
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text0
  1406  000086                     __ptext0:
  1407                           	opt stack 0
  1408  000086                     _main:
  1409                           	opt stack 20
  1410                           
  1411                           ;main.c: 124: SYSTEM_Initialize();
  1412                           
  1413                           ;incstack = 0
  1414  000086  EC1A  F004         	call	_SYSTEM_Initialize	;wreg free
  1415                           
  1416                           ;main.c: 125: (INTCONbits.GIE = 1);
  1417  00008A  8EF2               	bsf	intcon,7,c	;volatile
  1418                           
  1419                           ;main.c: 126: (INTCONbits.PEIE = 1);
  1420  00008C  8CF2               	bsf	intcon,6,c	;volatile
  1421                           
  1422                           ;main.c: 148: TRISA = 0xF0;
  1423  00008E  0EF0               	movlw	240
  1424  000090  6E92               	movwf	3986,c	;volatile
  1425                           
  1426                           ;main.c: 149: LATA=0xFF;
  1427  000092  6889               	setf	3977,c	;volatile
  1428                           
  1429                           ;main.c: 150: EUSART1_Write(0b10101111);
  1430  000094  0EAF               	movlw	175
  1431  000096  EC04  F005         	call	_EUSART1_Write
  1432                           
  1433                           ;main.c: 151: EUSART1_Write(0b00111111);
  1434  00009A  0E3F               	movlw	63
  1435  00009C  EC04  F005         	call	_EUSART1_Write
  1436                           
  1437                           ;main.c: 152: EUSART1_Write(0b00100001);
  1438  0000A0  0E21               	movlw	33
  1439  0000A2  EC04  F005         	call	_EUSART1_Write
  1440                           
  1441                           ;main.c: 153: EUSART1_Write(0b10001101);
  1442  0000A6  0E8D               	movlw	141
  1443  0000A8  EC04  F005         	call	_EUSART1_Write
  1444                           
  1445                           ;main.c: 154: EUSART1_Write(0b00001010);
  1446  0000AC  0E0A               	movlw	10
  1447  0000AE  EC04  F005         	call	_EUSART1_Write
  1448                           
  1449                           ;main.c: 155: LATA=0xF0;
  1450  0000B2  0EF0               	movlw	240
  1451  0000B4  6E89               	movwf	3977,c	;volatile
  1452  0000B6                     
  1453                           ;main.c: 183: {
  1454                           ;main.c: 184: LATA=0xFF;
  1455  0000B6  6889               	setf	3977,c	;volatile
  1456                           
  1457                           ;main.c: 185: EUSART1_Write(0b10101111);
  1458  0000B8  0EAF               	movlw	175
  1459  0000BA  EC04  F005         	call	_EUSART1_Write
  1460                           
  1461                           ;main.c: 186: EUSART1_Write(0b00111111);
  1462  0000BE  0E3F               	movlw	63
  1463  0000C0  EC04  F005         	call	_EUSART1_Write
  1464                           
  1465                           ;main.c: 187: EUSART1_Write(0b00100001);
  1466  0000C4  0E21               	movlw	33
  1467  0000C6  EC04  F005         	call	_EUSART1_Write
  1468                           
  1469                           ;main.c: 188: EUSART1_Write(0b10001101);
  1470  0000CA  0E8D               	movlw	141
  1471  0000CC  EC04  F005         	call	_EUSART1_Write
  1472                           
  1473                           ;main.c: 189: EUSART1_Write(0b00001010);
  1474  0000D0  0E0A               	movlw	10
  1475  0000D2  EC04  F005         	call	_EUSART1_Write
  1476                           
  1477                           ;main.c: 190: LATA=0xF0;
  1478  0000D6  0EF0               	movlw	240
  1479  0000D8  6E89               	movwf	3977,c	;volatile
  1480                           
  1481                           ;main.c: 192: for(int j =0;j<1000;j++){
  1482  0000DA  0E00               	movlw	0
  1483  0000DC  0100               	movlb	0	; () banked
  1484  0000DE  6FED               	movwf	(main@j+1)& (0+255),b
  1485  0000E0  0E00               	movlw	0
  1486  0000E2  6FEC               	movwf	main@j& (0+255),b
  1487  0000E4                     l11919:
  1488                           
  1489                           ; BSR set to: 0
  1490  0000E4  BFED               	btfsc	(main@j+1)& (0+255),7,b
  1491  0000E6  D006               	goto	l2706
  1492  0000E8  0EE8               	movlw	232
  1493  0000EA  5DEC               	subwf	main@j& (0+255),w,b
  1494  0000EC  0E03               	movlw	3
  1495  0000EE  59ED               	subwfb	(main@j+1)& (0+255),w,b
  1496  0000F0  B0D8               	btfsc	status,0,c
  1497  0000F2  D7E1               	goto	l2705
  1498  0000F4                     l2706:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 193: datax = EUSART1_Read();
  1502                           
  1503                           ; BSR set to: 0
  1504  0000F4  ECC5  F004         	call	_EUSART1_Read	;wreg free
  1505  0000F8  0100               	movlb	0	; () banked
  1506  0000FA  6F97               	movwf	_datax& (0+255),b
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;main.c: 194: if(datax != 0x00){
  1510  0000FC  5197               	movf	_datax& (0+255),w,b
  1511  0000FE  B4D8               	btfsc	status,2,c
  1512  000100  D0EA               	goto	l2708
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;main.c: 195: datatobesolved = datax;
  1516  000102  C097  F08C         	movff	_datax,_datatobesolved
  1517  000106  6B8D               	clrf	(_datatobesolved+1)& (0+255),b
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 196: bitStatusbefore1 = (datatobesolved >> 0) & 1;
  1521  000108  0E01               	movlw	1
  1522  00010A  158C               	andwf	_datatobesolved& (0+255),w,b
  1523  00010C  6F88               	movwf	_bitStatusbefore1& (0+255),b
  1524  00010E  6B89               	clrf	(_bitStatusbefore1+1)& (0+255),b
  1525                           
  1526                           ;main.c: 197: bitStatusbefore2 = (datatobesolved >> 1) & 1;
  1527  000110  358D               	rlcf	(_datatobesolved+1)& (0+255),w,b
  1528  000112  318D               	rrcf	(_datatobesolved+1)& (0+255),w,b
  1529  000114  6FEA               	movwf	(??_main+1)& (0+255),b
  1530  000116  318C               	rrcf	_datatobesolved& (0+255),w,b
  1531  000118  6FE9               	movwf	??_main& (0+255),b
  1532  00011A  0E01               	movlw	1
  1533  00011C  15E9               	andwf	??_main& (0+255),w,b
  1534  00011E  6F86               	movwf	_bitStatusbefore2& (0+255),b
  1535  000120  6B87               	clrf	(_bitStatusbefore2+1)& (0+255),b
  1536                           
  1537                           ;main.c: 198: bitStatusbefore3 = (datatobesolved >> 2) & 1;
  1538  000122  C08C  F0E9         	movff	_datatobesolved,??_main
  1539  000126  C08D  F0EA         	movff	_datatobesolved+1,??_main+1
  1540  00012A  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1541  00012C  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1542  00012E  33E9               	rrcf	??_main& (0+255),f,b
  1543  000130  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1544  000132  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1545  000134  33E9               	rrcf	??_main& (0+255),f,b
  1546  000136  0E01               	movlw	1
  1547  000138  15E9               	andwf	??_main& (0+255),w,b
  1548  00013A  6F84               	movwf	_bitStatusbefore3& (0+255),b
  1549  00013C  6B85               	clrf	(_bitStatusbefore3+1)& (0+255),b
  1550                           
  1551                           ;main.c: 199: bitStatusbefore4 = (datatobesolved >> 3) & 1;
  1552  00013E  C08C  F0E9         	movff	_datatobesolved,??_main
  1553  000142  C08D  F0EA         	movff	_datatobesolved+1,??_main+1
  1554  000146  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1555  000148  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1556  00014A  33E9               	rrcf	??_main& (0+255),f,b
  1557  00014C  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1558  00014E  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1559  000150  33E9               	rrcf	??_main& (0+255),f,b
  1560  000152  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1561  000154  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1562  000156  33E9               	rrcf	??_main& (0+255),f,b
  1563  000158  0E01               	movlw	1
  1564  00015A  15E9               	andwf	??_main& (0+255),w,b
  1565  00015C  6F82               	movwf	_bitStatusbefore4& (0+255),b
  1566  00015E  6B83               	clrf	(_bitStatusbefore4+1)& (0+255),b
  1567                           
  1568                           ;main.c: 200: bitStatusbefore5 = (datatobesolved >> 4) & 1;
  1569  000160  C08C  F0E9         	movff	_datatobesolved,??_main
  1570  000164  C08D  F0EA         	movff	_datatobesolved+1,??_main+1
  1571  000168  0E04               	movlw	4
  1572  00016A  6FEB               	movwf	(??_main+2)& (0+255),b
  1573  00016C                     u12415:
  1574  00016C  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1575  00016E  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1576  000170  33E9               	rrcf	??_main& (0+255),f,b
  1577  000172  2FEB               	decfsz	(??_main+2)& (0+255),f,b
  1578  000174  D7FB               	goto	u12415
  1579  000176  0E01               	movlw	1
  1580  000178  15E9               	andwf	??_main& (0+255),w,b
  1581  00017A  6F80               	movwf	_bitStatusbefore5& (0+255),b
  1582  00017C  6B81               	clrf	(_bitStatusbefore5+1)& (0+255),b
  1583                           
  1584                           ;main.c: 201: bitStatusbefore6 = (datatobesolved >> 5) & 1;
  1585  00017E  C08C  F0E9         	movff	_datatobesolved,??_main
  1586  000182  C08D  F0EA         	movff	_datatobesolved+1,??_main+1
  1587  000186  0E05               	movlw	5
  1588  000188  6FEB               	movwf	(??_main+2)& (0+255),b
  1589  00018A                     u12425:
  1590  00018A  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1591  00018C  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1592  00018E  33E9               	rrcf	??_main& (0+255),f,b
  1593  000190  2FEB               	decfsz	(??_main+2)& (0+255),f,b
  1594  000192  D7FB               	goto	u12425
  1595  000194  0E01               	movlw	1
  1596  000196  15E9               	andwf	??_main& (0+255),w,b
  1597  000198  6F7E               	movwf	_bitStatusbefore6& (0+255),b
  1598  00019A  6B7F               	clrf	(_bitStatusbefore6+1)& (0+255),b
  1599                           
  1600                           ;main.c: 202: bitStatusbefore7 = (datatobesolved >> 6) & 1;
  1601  00019C  C08C  F0E9         	movff	_datatobesolved,??_main
  1602  0001A0  C08D  F0EA         	movff	_datatobesolved+1,??_main+1
  1603  0001A4  0E06               	movlw	6
  1604  0001A6  6FEB               	movwf	(??_main+2)& (0+255),b
  1605  0001A8                     u12435:
  1606  0001A8  35EA               	rlcf	(??_main+1)& (0+255),w,b
  1607  0001AA  33EA               	rrcf	(??_main+1)& (0+255),f,b
  1608  0001AC  33E9               	rrcf	??_main& (0+255),f,b
  1609  0001AE  2FEB               	decfsz	(??_main+2)& (0+255),f,b
  1610  0001B0  D7FB               	goto	u12435
  1611  0001B2  0E01               	movlw	1
  1612  0001B4  15E9               	andwf	??_main& (0+255),w,b
  1613  0001B6  6F7C               	movwf	_bitStatusbefore7& (0+255),b
  1614  0001B8  6B7D               	clrf	(_bitStatusbefore7+1)& (0+255),b
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 204: bitStatus1 = bitStatusbefore1<<0;
  1618  0001BA  C088  F078         	movff	_bitStatusbefore1,_bitStatus1
  1619  0001BE  C089  F079         	movff	_bitStatusbefore1+1,_bitStatus1+1
  1620                           
  1621                           ;main.c: 205: bitStatus2 = bitStatusbefore2<<1;
  1622  0001C2  90D8               	bcf	status,0,c
  1623  0001C4  3586               	rlcf	_bitStatusbefore2& (0+255),w,b
  1624  0001C6  6F76               	movwf	_bitStatus2& (0+255),b
  1625  0001C8  3587               	rlcf	(_bitStatusbefore2+1)& (0+255),w,b
  1626  0001CA  6F77               	movwf	(_bitStatus2+1)& (0+255),b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;main.c: 206: bitStatus3 = bitStatusbefore3<<2;
  1630  0001CC  C084  F0E9         	movff	_bitStatusbefore3,??_main
  1631  0001D0  C085  F0EA         	movff	_bitStatusbefore3+1,??_main+1
  1632  0001D4  90D8               	bcf	status,0,c
  1633  0001D6  37E9               	rlcf	??_main& (0+255),f,b
  1634  0001D8  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1635  0001DA  90D8               	bcf	status,0,c
  1636  0001DC  37E9               	rlcf	??_main& (0+255),f,b
  1637  0001DE  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1638  0001E0  C0E9  F074         	movff	??_main,_bitStatus3
  1639  0001E4  C0EA  F075         	movff	??_main+1,_bitStatus3+1
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 207: bitStatus4 = bitStatusbefore4<<3;
  1643  0001E8  C082  F0E9         	movff	_bitStatusbefore4,??_main
  1644  0001EC  C083  F0EA         	movff	_bitStatusbefore4+1,??_main+1
  1645  0001F0  90D8               	bcf	status,0,c
  1646  0001F2  37E9               	rlcf	??_main& (0+255),f,b
  1647  0001F4  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1648  0001F6  90D8               	bcf	status,0,c
  1649  0001F8  37E9               	rlcf	??_main& (0+255),f,b
  1650  0001FA  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1651  0001FC  90D8               	bcf	status,0,c
  1652  0001FE  37E9               	rlcf	??_main& (0+255),f,b
  1653  000200  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1654  000202  C0E9  F072         	movff	??_main,_bitStatus4
  1655  000206  C0EA  F073         	movff	??_main+1,_bitStatus4+1
  1656                           
  1657                           ;main.c: 208: bitStatus5 = bitStatusbefore5<<4;
  1658  00020A  C080  F0E9         	movff	_bitStatusbefore5,??_main
  1659  00020E  C081  F0EA         	movff	_bitStatusbefore5+1,??_main+1
  1660  000212  3BE9               	swapf	??_main& (0+255),f,b
  1661  000214  3BEA               	swapf	(??_main+1)& (0+255),f,b
  1662  000216  0EF0               	movlw	240
  1663  000218  17EA               	andwf	(??_main+1)& (0+255),f,b
  1664  00021A  51E9               	movf	??_main& (0+255),w,b
  1665  00021C  0B0F               	andlw	15
  1666  00021E  13EA               	iorwf	(??_main+1)& (0+255),f,b
  1667  000220  0EF0               	movlw	240
  1668  000222  17E9               	andwf	??_main& (0+255),f,b
  1669  000224  C0E9  F070         	movff	??_main,_bitStatus5
  1670  000228  C0EA  F071         	movff	??_main+1,_bitStatus5+1
  1671                           
  1672                           ;main.c: 209: bitStatus6 = bitStatusbefore6<<5;
  1673  00022C  C07E  F0E9         	movff	_bitStatusbefore6,??_main
  1674  000230  C07F  F0EA         	movff	_bitStatusbefore6+1,??_main+1
  1675  000234  0E05               	movlw	5
  1676  000236                     u12445:
  1677  000236  90D8               	bcf	status,0,c
  1678  000238  37E9               	rlcf	??_main& (0+255),f,b
  1679  00023A  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1680  00023C  2EE8               	decfsz	wreg,f,c
  1681  00023E  D7FB               	goto	u12445
  1682  000240  C0E9  F06E         	movff	??_main,_bitStatus6
  1683  000244  C0EA  F06F         	movff	??_main+1,_bitStatus6+1
  1684                           
  1685                           ;main.c: 210: bitStatus7 = bitStatusbefore7<<6;
  1686  000248  C07C  F0E9         	movff	_bitStatusbefore7,??_main
  1687  00024C  C07D  F0EA         	movff	_bitStatusbefore7+1,??_main+1
  1688  000250  0E06               	movlw	6
  1689  000252                     u12455:
  1690  000252  90D8               	bcf	status,0,c
  1691  000254  37E9               	rlcf	??_main& (0+255),f,b
  1692  000256  37EA               	rlcf	(??_main+1)& (0+255),f,b
  1693  000258  2EE8               	decfsz	wreg,f,c
  1694  00025A  D7FB               	goto	u12455
  1695  00025C  C0E9  F06C         	movff	??_main,_bitStatus7
  1696  000260  C0EA  F06D         	movff	??_main+1,_bitStatus7+1
  1697                           
  1698                           ;main.c: 212: dataresult = bitStatus7 | bitStatus6 | bitStatus5 | bitStatus4 | bitStatus
      +                          3 | bitStatus2 | bitStatus1;
  1699  000264  516E               	movf	_bitStatus6& (0+255),w,b
  1700  000266  116C               	iorwf	_bitStatus7& (0+255),w,b
  1701  000268  6FE9               	movwf	??_main& (0+255),b
  1702  00026A  516F               	movf	(_bitStatus6+1)& (0+255),w,b
  1703  00026C  116D               	iorwf	(_bitStatus7+1)& (0+255),w,b
  1704  00026E  6FEA               	movwf	(??_main+1)& (0+255),b
  1705  000270  5170               	movf	_bitStatus5& (0+255),w,b
  1706  000272  13E9               	iorwf	??_main& (0+255),f,b
  1707  000274  5171               	movf	(_bitStatus5+1)& (0+255),w,b
  1708  000276  13EA               	iorwf	(??_main+1)& (0+255),f,b
  1709  000278  5172               	movf	_bitStatus4& (0+255),w,b
  1710  00027A  13E9               	iorwf	??_main& (0+255),f,b
  1711  00027C  5173               	movf	(_bitStatus4+1)& (0+255),w,b
  1712  00027E  13EA               	iorwf	(??_main+1)& (0+255),f,b
  1713  000280  5174               	movf	_bitStatus3& (0+255),w,b
  1714  000282  13E9               	iorwf	??_main& (0+255),f,b
  1715  000284  5175               	movf	(_bitStatus3+1)& (0+255),w,b
  1716  000286  13EA               	iorwf	(??_main+1)& (0+255),f,b
  1717  000288  5176               	movf	_bitStatus2& (0+255),w,b
  1718  00028A  13E9               	iorwf	??_main& (0+255),f,b
  1719  00028C  5177               	movf	(_bitStatus2+1)& (0+255),w,b
  1720  00028E  13EA               	iorwf	(??_main+1)& (0+255),f,b
  1721  000290  5178               	movf	_bitStatus1& (0+255),w,b
  1722  000292  11E9               	iorwf	??_main& (0+255),w,b
  1723  000294  6FDF               	movwf	_dataresult& (0+255),b
  1724  000296  5179               	movf	(_bitStatus1+1)& (0+255),w,b
  1725  000298  11EA               	iorwf	(??_main+1)& (0+255),w,b
  1726  00029A  6FE0               	movwf	(_dataresult+1)& (0+255),b
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 213: for(int delay=0;delay<3000;delay++){
  1730  00029C  0E00               	movlw	0
  1731  00029E  6FEF               	movwf	(main@delay+1)& (0+255),b
  1732  0002A0  0E00               	movlw	0
  1733  0002A2  6FEE               	movwf	main@delay& (0+255),b
  1734  0002A4                     l11939:
  1735                           
  1736                           ; BSR set to: 0
  1737  0002A4  BFEF               	btfsc	(main@delay+1)& (0+255),7,b
  1738  0002A6  D006               	goto	l2709
  1739  0002A8  0EB8               	movlw	184
  1740  0002AA  5DEE               	subwf	main@delay& (0+255),w,b
  1741  0002AC  0E0B               	movlw	11
  1742  0002AE  59EF               	subwfb	(main@delay+1)& (0+255),w,b
  1743  0002B0  B0D8               	btfsc	status,0,c
  1744  0002B2  D003               	goto	u12470
  1745  0002B4                     l2709:
  1746                           
  1747                           ; BSR set to: 0
  1748                           
  1749                           ; BSR set to: 0
  1750  0002B4  4BEE               	infsnz	main@delay& (0+255),f,b
  1751  0002B6  2BEF               	incf	(main@delay+1)& (0+255),f,b
  1752  0002B8  D7F5               	goto	l11939
  1753  0002BA                     u12470:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 215: }
  1757                           ;main.c: 216: strncat(dataxstr, &dataresult, 1);}
  1758                           
  1759                           ; BSR set to: 0
  1760  0002BA  0EC0               	movlw	low _dataxstr
  1761  0002BC  6FE1               	movwf	strncat@to& (0+255),b
  1762  0002BE  0E03               	movlw	high _dataxstr
  1763  0002C0  6FE2               	movwf	(strncat@to+1)& (0+255),b
  1764  0002C2  0EDF               	movlw	low _dataresult
  1765  0002C4  6FE3               	movwf	strncat@from& (0+255),b
  1766  0002C6  0E00               	movlw	high _dataresult
  1767  0002C8  6FE4               	movwf	(strncat@from+1)& (0+255),b
  1768  0002CA  0E00               	movlw	0
  1769  0002CC  6FE6               	movwf	(strncat@size+1)& (0+255),b
  1770  0002CE  0E01               	movlw	1
  1771  0002D0  6FE5               	movwf	strncat@size& (0+255),b
  1772  0002D2  EC1F  F003         	call	_strncat	;wreg free
  1773  0002D6                     l2708:
  1774  0002D6  0100               	movlb	0	; () banked
  1775  0002D8  4BEC               	infsnz	main@j& (0+255),f,b
  1776  0002DA  2BED               	incf	(main@j+1)& (0+255),f,b
  1777  0002DC  D703               	goto	l11919
  1778  0002DE                     __end_of_main:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           intcon	equ	0xFF2
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec2	equ	0xFDD
  1788                           fsr2h	equ	0xFDA
  1789                           fsr2l	equ	0xFD9
  1790                           status	equ	0xFD8
  1791                           
  1792 ;; *************** function _strncat *****************
  1793 ;; Defined at:
  1794 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncat.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  to              2    0[BANK0 ] PTR unsigned char 
  1797 ;;		 -> dataxstr(1024), 
  1798 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  1799 ;;		 -> dataresult(2), 
  1800 ;;  size            2    4[BANK0 ] unsigned int 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  cp              2    6[BANK0 ] PTR unsigned char 
  1803 ;;		 -> dataxstr(1024), 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2    0[BANK0 ] PTR unsigned char 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:        8 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    7
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text1
  1828  00063E                     __ptext1:
  1829                           	opt stack 0
  1830  00063E                     _strncat:
  1831                           	opt stack 23
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;incstack = 0
  1835  00063E  C0E1  F0E7         	movff	strncat@to,strncat@cp
  1836  000642  C0E2  F0E8         	movff	strncat@to+1,strncat@cp+1
  1837  000646  D003               	goto	l3281
  1838  000648  0100               	movlb	0	; () banked
  1839  00064A  4BE7               	infsnz	strncat@cp& (0+255),f,b
  1840  00064C  2BE8               	incf	(strncat@cp+1)& (0+255),f,b
  1841  00064E                     l3281:
  1842                           
  1843                           ; BSR set to: 0
  1844  00064E  C0E7  FFD9         	movff	strncat@cp,fsr2l
  1845  000652  C0E8  FFDA         	movff	strncat@cp+1,fsr2h
  1846  000656  50DF               	movf	indf2,w,c
  1847  000658  B4D8               	btfsc	status,2,c
  1848  00065A  D009               	goto	l3284
  1849  00065C  D7F5               	goto	l3282
  1850  00065E  0100               	movlb	0	; () banked
  1851  000660  07E5               	decf	strncat@size& (0+255),f,b
  1852  000662  A0D8               	btfss	status,0,c
  1853  000664  07E6               	decf	(strncat@size+1)& (0+255),f,b
  1854  000666  4BE7               	infsnz	strncat@cp& (0+255),f,b
  1855  000668  2BE8               	incf	(strncat@cp+1)& (0+255),f,b
  1856  00066A  4BE3               	infsnz	strncat@from& (0+255),f,b
  1857  00066C  2BE4               	incf	(strncat@from+1)& (0+255),f,b
  1858  00066E                     l3284:
  1859                           
  1860                           ; BSR set to: 0
  1861  00066E  0100               	movlb	0	; () banked
  1862  000670  51E5               	movf	strncat@size& (0+255),w,b
  1863  000672  11E6               	iorwf	(strncat@size+1)& (0+255),w,b
  1864  000674  B4D8               	btfsc	status,2,c
  1865  000676  D00D               	goto	u9940
  1866                           
  1867                           ; BSR set to: 0
  1868  000678  C0E3  FFD9         	movff	strncat@from,fsr2l
  1869  00067C  C0E4  FFDA         	movff	strncat@from+1,fsr2h
  1870  000680  C0E7  FFE9         	movff	strncat@cp,fsr0l
  1871  000684  C0E8  FFEA         	movff	strncat@cp+1,fsr0h
  1872  000688  CFDF FFEF          	movff	indf2,indf0
  1873  00068C  50EF               	movf	indf0,w,c
  1874  00068E  A4D8               	btfss	status,2,c
  1875  000690  D7E6               	goto	l3285
  1876  000692                     u9940:
  1877                           
  1878                           ; BSR set to: 0
  1879                           
  1880                           ; BSR set to: 0
  1881                           
  1882                           ; BSR set to: 0
  1883  000692  51E5               	movf	strncat@size& (0+255),w,b
  1884  000694  11E6               	iorwf	(strncat@size+1)& (0+255),w,b
  1885  000696  A4D8               	btfss	status,2,c
  1886  000698  0012               	return	
  1887                           
  1888                           ; BSR set to: 0
  1889  00069A  C0E7  FFD9         	movff	strncat@cp,fsr2l
  1890  00069E  C0E8  FFDA         	movff	strncat@cp+1,fsr2h
  1891  0006A2  0E00               	movlw	0
  1892  0006A4  6EDF               	movwf	indf2,c
  1893                           
  1894                           ; BSR set to: 0
  1895  0006A6  0012               	return	
  1896  0006A8                     __end_of_strncat:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           intcon	equ	0xFF2
  1903                           indf0	equ	0xFEF
  1904                           postinc0	equ	0xFEE
  1905                           fsr0h	equ	0xFEA
  1906                           fsr0l	equ	0xFE9
  1907                           wreg	equ	0xFE8
  1908                           indf2	equ	0xFDF
  1909                           postdec2	equ	0xFDD
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _SYSTEM_Initialize *****************
  1915 ;; Defined at:
  1916 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:   10
  1937 ;; This function calls:
  1938 ;;		_EUSART1_Initialize
  1939 ;;		_EXT_INT_Initialize
  1940 ;;		_INTERRUPT_Initialize
  1941 ;;		_LORAWAN_PlatformInit
  1942 ;;		_OSCILLATOR_Initialize
  1943 ;;		_PIN_MANAGER_Initialize
  1944 ;;		_SPI2_Initialize
  1945 ;;		_TMR1_Initialize
  1946 ;;		_TMR5_Initialize
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text2
  1953  000834                     __ptext2:
  1954                           	opt stack 0
  1955  000834                     _SYSTEM_Initialize:
  1956                           	opt stack 20
  1957                           
  1958                           ;mcc.c: 53: INTERRUPT_Initialize();
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;incstack = 0
  1962  000834  EC44  F005         	call	_INTERRUPT_Initialize	;wreg free
  1963                           
  1964                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1965  000838  EC80  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1966                           
  1967                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1968  00083C  ECFD  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1969                           
  1970                           ;mcc.c: 56: SPI2_Initialize();
  1971  000840  ECF6  F004         	call	_SPI2_Initialize	;wreg free
  1972                           
  1973                           ;mcc.c: 59: TMR5_Initialize();
  1974  000844  EC9E  F004         	call	_TMR5_Initialize	;wreg free
  1975                           
  1976                           ;mcc.c: 60: EXT_INT_Initialize();
  1977  000848  EC05  F004         	call	_EXT_INT_Initialize	;wreg free
  1978                           
  1979                           ;mcc.c: 61: TMR1_Initialize();
  1980  00084C  ECEF  F003         	call	_TMR1_Initialize	;wreg free
  1981                           
  1982                           ;mcc.c: 62: EUSART1_Initialize();
  1983  000850  ECAA  F003         	call	_EUSART1_Initialize	;wreg free
  1984                           
  1985                           ;mcc.c: 63: LORAWAN_PlatformInit();
  1986  000854  EC2D  F004         	call	_LORAWAN_PlatformInit	;wreg free
  1987  000858  0012               	return		;funcret
  1988  00085A                     __end_of_SYSTEM_Initialize:
  1989                           	opt stack 0
  1990                           tblptru	equ	0xFF8
  1991                           tblptrh	equ	0xFF7
  1992                           tblptrl	equ	0xFF6
  1993                           tablat	equ	0xFF5
  1994                           intcon	equ	0xFF2
  1995                           indf0	equ	0xFEF
  1996                           postinc0	equ	0xFEE
  1997                           fsr0h	equ	0xFEA
  1998                           fsr0l	equ	0xFE9
  1999                           wreg	equ	0xFE8
  2000                           indf2	equ	0xFDF
  2001                           postdec2	equ	0xFDD
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _TMR5_Initialize *****************
  2007 ;; Defined at:
  2008 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    7
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_SYSTEM_Initialize
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text3
  2037  00093C                     __ptext3:
  2038                           	opt stack 0
  2039  00093C                     _TMR5_Initialize:
  2040                           	opt stack 22
  2041                           
  2042                           ;tmr5.c: 68: T5GCON = 0x00;
  2043                           
  2044                           ;incstack = 0
  2045  00093C  0E00               	movlw	0
  2046  00093E  010F               	movlb	15	; () banked
  2047  000940  6F4D               	movwf	77,b	;volatile
  2048                           
  2049                           ;tmr5.c: 71: TMR5H = 0x10;
  2050  000942  0E10               	movlw	16
  2051  000944  6F50               	movwf	80,b	;volatile
  2052                           
  2053                           ;tmr5.c: 74: TMR5L = 0x00;
  2054  000946  0E00               	movlw	0
  2055  000948  6F4F               	movwf	79,b	;volatile
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  2059  00094A  CF4F F0F0          	movff	3919,_timer5ReloadVal	;volatile
  2060  00094E  CF50 F0F1          	movff	3920,_timer5ReloadVal+1	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  2064  000952  927E               	bcf	3966,1,c	;volatile
  2065                           
  2066                           ;tmr5.c: 83: T5CON = 0xBD;
  2067  000954  0EBD               	movlw	189
  2068  000956  6F4E               	movwf	78,b	;volatile
  2069                           
  2070                           ; BSR set to: 15
  2071  000958  0012               	return		;funcret
  2072  00095A                     __end_of_TMR5_Initialize:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           intcon	equ	0xFF2
  2079                           indf0	equ	0xFEF
  2080                           postinc0	equ	0xFEE
  2081                           fsr0h	equ	0xFEA
  2082                           fsr0l	equ	0xFE9
  2083                           wreg	equ	0xFE8
  2084                           indf2	equ	0xFDF
  2085                           postdec2	equ	0xFDD
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _TMR1_Initialize *****************
  2091 ;; Defined at:
  2092 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    8
  2113 ;; This function calls:
  2114 ;;		_TMR1_SetInterruptHandler
  2115 ;; This function is called by:
  2116 ;;		_SYSTEM_Initialize
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text4
  2121  0007DE                     __ptext4:
  2122                           	opt stack 0
  2123  0007DE                     _TMR1_Initialize:
  2124                           	opt stack 21
  2125                           
  2126                           ;tmr1.c: 69: T1GCON = 0x00;
  2127                           
  2128                           ; BSR set to: 15
  2129                           ;incstack = 0
  2130  0007DE  0E00               	movlw	0
  2131  0007E0  6ECC               	movwf	4044,c	;volatile
  2132                           
  2133                           ;tmr1.c: 72: TMR1H = 0x00;
  2134  0007E2  0E00               	movlw	0
  2135  0007E4  6ECF               	movwf	4047,c	;volatile
  2136                           
  2137                           ;tmr1.c: 75: TMR1L = 0x00;
  2138  0007E6  0E00               	movlw	0
  2139  0007E8  6ECE               	movwf	4046,c	;volatile
  2140                           
  2141                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2142  0007EA  CFCE F0F4          	movff	4046,_timer1ReloadVal	;volatile
  2143  0007EE  CFCF F0F5          	movff	4047,_timer1ReloadVal+1	;volatile
  2144                           
  2145                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2146  0007F2  909E               	bcf	3998,0,c	;volatile
  2147                           
  2148                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2149  0007F4  809D               	bsf	3997,0,c	;volatile
  2150                           
  2151                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2152  0007F6  0E9E               	movlw	low _TMR1_DefaultInterruptHandler
  2153  0007F8  0100               	movlb	0	; () banked
  2154  0007FA  6FE1               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2155  0007FC  0E0A               	movlw	high _TMR1_DefaultInterruptHandler
  2156  0007FE  6FE2               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2157  000800  EC0B  F005         	call	_TMR1_SetInterruptHandler	;wreg free
  2158                           
  2159                           ;tmr1.c: 90: T1CON = 0x8D;
  2160  000804  0E8D               	movlw	141
  2161  000806  6ECD               	movwf	4045,c	;volatile
  2162  000808  0012               	return		;funcret
  2163  00080A                     __end_of_TMR1_Initialize:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           intcon	equ	0xFF2
  2170                           indf0	equ	0xFEF
  2171                           postinc0	equ	0xFEE
  2172                           fsr0h	equ	0xFEA
  2173                           fsr0l	equ	0xFE9
  2174                           wreg	equ	0xFE8
  2175                           indf2	equ	0xFDF
  2176                           postdec2	equ	0xFDD
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _SPI2_Initialize *****************
  2182 ;; Defined at:
  2183 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    7
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_SYSTEM_Initialize
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text5
  2212  0009EC                     __ptext5:
  2213                           	opt stack 0
  2214  0009EC                     _SPI2_Initialize:
  2215                           	opt stack 22
  2216                           
  2217                           ;spi2.c: 70: SSP2STAT = 0x40;
  2218                           
  2219                           ;incstack = 0
  2220  0009EC  0E40               	movlw	64
  2221  0009EE  6E6D               	movwf	3949,c	;volatile
  2222                           
  2223                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2224  0009F0  0E20               	movlw	32
  2225  0009F2  6E6C               	movwf	3948,c	;volatile
  2226                           
  2227                           ;spi2.c: 76: SSP2ADD = 0x00;
  2228  0009F4  0E00               	movlw	0
  2229  0009F6  6E6E               	movwf	3950,c	;volatile
  2230  0009F8  0012               	return		;funcret
  2231  0009FA                     __end_of_SPI2_Initialize:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           intcon	equ	0xFF2
  2238                           indf0	equ	0xFEF
  2239                           postinc0	equ	0xFEE
  2240                           fsr0h	equ	0xFEA
  2241                           fsr0l	equ	0xFE9
  2242                           wreg	equ	0xFE8
  2243                           indf2	equ	0xFDF
  2244                           postdec2	equ	0xFDD
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _PIN_MANAGER_Initialize *****************
  2250 ;; Defined at:
  2251 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    8
  2272 ;; This function calls:
  2273 ;;		_IOCB4_SetInterruptHandler
  2274 ;; This function is called by:
  2275 ;;		_SYSTEM_Initialize
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text6
  2280  000700                     __ptext6:
  2281                           	opt stack 0
  2282  000700                     _PIN_MANAGER_Initialize:
  2283                           	opt stack 21
  2284                           
  2285                           ;pin_manager.c: 62: LATE = 0x00;
  2286                           
  2287                           ;incstack = 0
  2288  000700  0E00               	movlw	0
  2289  000702  6E8D               	movwf	3981,c	;volatile
  2290                           
  2291                           ;pin_manager.c: 63: LATD = 0x00;
  2292  000704  0E00               	movlw	0
  2293  000706  6E8C               	movwf	3980,c	;volatile
  2294                           
  2295                           ;pin_manager.c: 64: LATA = 0x00;
  2296  000708  0E00               	movlw	0
  2297  00070A  6E89               	movwf	3977,c	;volatile
  2298                           
  2299                           ;pin_manager.c: 65: LATB = 0x00;
  2300  00070C  0E00               	movlw	0
  2301  00070E  6E8A               	movwf	3978,c	;volatile
  2302                           
  2303                           ;pin_manager.c: 66: LATC = 0x00;
  2304  000710  0E00               	movlw	0
  2305  000712  6E8B               	movwf	3979,c	;volatile
  2306                           
  2307                           ;pin_manager.c: 71: TRISE = 0x07;
  2308  000714  0E07               	movlw	7
  2309  000716  6E96               	movwf	3990,c	;volatile
  2310                           
  2311                           ;pin_manager.c: 72: TRISA = 0xFF;
  2312  000718  6892               	setf	3986,c	;volatile
  2313                           
  2314                           ;pin_manager.c: 73: TRISB = 0xFF;
  2315  00071A  6893               	setf	3987,c	;volatile
  2316                           
  2317                           ;pin_manager.c: 74: TRISC = 0xBE;
  2318  00071C  0EBE               	movlw	190
  2319  00071E  6E94               	movwf	3988,c	;volatile
  2320                           
  2321                           ;pin_manager.c: 75: TRISD = 0xE6;
  2322  000720  0EE6               	movlw	230
  2323  000722  6E95               	movwf	3989,c	;volatile
  2324                           
  2325                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2326  000724  0EE4               	movlw	228
  2327  000726  010F               	movlb	15	; () banked
  2328  000728  6F3B               	movwf	59,b	;volatile
  2329                           
  2330                           ;pin_manager.c: 81: ANSELC = 0x38;
  2331  00072A  0E38               	movlw	56
  2332  00072C  6F3A               	movwf	58,b	;volatile
  2333                           
  2334                           ;pin_manager.c: 82: ANSELB = 0x28;
  2335  00072E  0E28               	movlw	40
  2336  000730  6F39               	movwf	57,b	;volatile
  2337                           
  2338                           ;pin_manager.c: 83: ANSELE = 0x07;
  2339  000732  0E07               	movlw	7
  2340  000734  6F3C               	movwf	60,b	;volatile
  2341                           
  2342                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2343  000736  0E2F               	movlw	47
  2344  000738  6F38               	movwf	56,b	;volatile
  2345                           
  2346                           ;pin_manager.c: 89: WPUB = 0x00;
  2347  00073A  0E00               	movlw	0
  2348  00073C  6E61               	movwf	3937,c	;volatile
  2349                           
  2350                           ; BSR set to: 15
  2351                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2352  00073E  8EF1               	bsf	intcon2,7,c	;volatile
  2353                           
  2354                           ; BSR set to: 15
  2355                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2356  000740  8862               	bsf	3938,4,c	;volatile
  2357                           
  2358                           ; BSR set to: 15
  2359                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2360  000742  0EA0               	movlw	low _IOCB4_DefaultInterruptHandler
  2361  000744  0100               	movlb	0	; () banked
  2362  000746  6FE1               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2363  000748  0E0A               	movlw	high _IOCB4_DefaultInterruptHandler
  2364  00074A  6FE2               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2365  00074C  EC10  F005         	call	_IOCB4_SetInterruptHandler	;wreg free
  2366                           
  2367                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2368  000750  86F2               	bsf	intcon,3,c	;volatile
  2369  000752  0012               	return		;funcret
  2370  000754                     __end_of_PIN_MANAGER_Initialize:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           intcon	equ	0xFF2
  2377                           intcon2	equ	0xFF1
  2378                           indf0	equ	0xFEF
  2379                           postinc0	equ	0xFEE
  2380                           fsr0h	equ	0xFEA
  2381                           fsr0l	equ	0xFE9
  2382                           wreg	equ	0xFE8
  2383                           indf2	equ	0xFDF
  2384                           postdec2	equ	0xFDD
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _OSCILLATOR_Initialize *****************
  2390 ;; Defined at:
  2391 ;;		line 66 in file "mcc_generated_files/mcc.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        0 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    7
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_SYSTEM_Initialize
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text7
  2420  0009FA                     __ptext7:
  2421                           	opt stack 0
  2422  0009FA                     _OSCILLATOR_Initialize:
  2423                           	opt stack 22
  2424                           
  2425                           ;mcc.c: 69: OSCCON = 0x70;
  2426                           
  2427                           ;incstack = 0
  2428  0009FA  0E70               	movlw	112
  2429  0009FC  6ED3               	movwf	4051,c	;volatile
  2430                           
  2431                           ;mcc.c: 71: OSCCON2 = 0x04;
  2432  0009FE  0E04               	movlw	4
  2433  000A00  6ED2               	movwf	4050,c	;volatile
  2434                           
  2435                           ;mcc.c: 73: OSCTUNE = 0x00;
  2436  000A02  0E00               	movlw	0
  2437  000A04  6E9B               	movwf	3995,c	;volatile
  2438  000A06  0012               	return		;funcret
  2439  000A08                     __end_of_OSCILLATOR_Initialize:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           intcon	equ	0xFF2
  2446                           intcon2	equ	0xFF1
  2447                           indf0	equ	0xFEF
  2448                           postinc0	equ	0xFEE
  2449                           fsr0h	equ	0xFEA
  2450                           fsr0l	equ	0xFE9
  2451                           wreg	equ	0xFE8
  2452                           indf2	equ	0xFDF
  2453                           postdec2	equ	0xFDD
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _LORAWAN_PlatformInit *****************
  2459 ;; Defined at:
  2460 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    9
  2481 ;; This function calls:
  2482 ;;		_DIO0_ISR_Lora_Init
  2483 ;;		_DIO1_ISR_Lora_Init
  2484 ;;		_DIO2_ISR_Lora_Init
  2485 ;;		_DIO3_ISR_Lora_Init
  2486 ;;		_DIO4_ISR_Lora_Init
  2487 ;;		_DIO5_ISR_Lora_Init
  2488 ;;		_SystemTimerInit
  2489 ;;		_TMR_ISR_Lora_Init
  2490 ;; This function is called by:
  2491 ;;		_SYSTEM_Initialize
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text8
  2496  00085A                     __ptext8:
  2497                           	opt stack 0
  2498  00085A                     _LORAWAN_PlatformInit:
  2499                           	opt stack 20
  2500                           
  2501                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2502                           
  2503                           ;incstack = 0
  2504  00085A  ECD6  F004         	call	_TMR_ISR_Lora_Init	;wreg free
  2505                           
  2506                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2507  00085E  ECEE  F004         	call	_DIO0_ISR_Lora_Init	;wreg free
  2508                           
  2509                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2510  000862  ECE6  F004         	call	_DIO1_ISR_Lora_Init	;wreg free
  2511                           
  2512                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2513  000866  ECDE  F004         	call	_DIO2_ISR_Lora_Init	;wreg free
  2514                           
  2515                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2516  00086A  EC4E  F005         	call	_DIO3_ISR_Lora_Init	;wreg free
  2517                           
  2518                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2519  00086E  EC4D  F005         	call	_DIO4_ISR_Lora_Init	;wreg free
  2520                           
  2521                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2522  000872  EC4C  F005         	call	_DIO5_ISR_Lora_Init	;wreg free
  2523                           
  2524                           ;lorawan_init.c: 82: SystemTimerInit();
  2525  000876  EC3B  F005         	call	_SystemTimerInit	;wreg free
  2526  00087A  0012               	return		;funcret
  2527  00087C                     __end_of_LORAWAN_PlatformInit:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           intcon	equ	0xFF2
  2534                           intcon2	equ	0xFF1
  2535                           indf0	equ	0xFEF
  2536                           postinc0	equ	0xFEE
  2537                           fsr0h	equ	0xFEA
  2538                           fsr0l	equ	0xFE9
  2539                           wreg	equ	0xFE8
  2540                           indf2	equ	0xFDF
  2541                           postdec2	equ	0xFDD
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _TMR_ISR_Lora_Init *****************
  2547 ;; Defined at:
  2548 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    8
  2569 ;; This function calls:
  2570 ;;		_TMR1_SetInterruptHandler
  2571 ;; This function is called by:
  2572 ;;		_LORAWAN_PlatformInit
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text9
  2577  0009AC                     __ptext9:
  2578                           	opt stack 0
  2579  0009AC                     _TMR_ISR_Lora_Init:
  2580                           	opt stack 20
  2581                           
  2582                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2583                           
  2584                           ;incstack = 0
  2585  0009AC  0EA8               	movlw	low _TMR_ISR_lora
  2586  0009AE  0100               	movlb	0	; () banked
  2587  0009B0  6FE1               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2588  0009B2  0E06               	movlw	high _TMR_ISR_lora
  2589  0009B4  6FE2               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2590  0009B6  EC0B  F005         	call	_TMR1_SetInterruptHandler	;wreg free
  2591  0009BA  0012               	return		;funcret
  2592  0009BC                     __end_of_TMR_ISR_Lora_Init:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           intcon	equ	0xFF2
  2599                           intcon2	equ	0xFF1
  2600                           indf0	equ	0xFEF
  2601                           postinc0	equ	0xFEE
  2602                           fsr0h	equ	0xFEA
  2603                           fsr0l	equ	0xFE9
  2604                           wreg	equ	0xFE8
  2605                           indf2	equ	0xFDF
  2606                           postdec2	equ	0xFDD
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _TMR1_SetInterruptHandler *****************
  2612 ;; Defined at:
  2613 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2616 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    7
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_TMR_ISR_Lora_Init
  2639 ;;		_TMR1_Initialize
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text10
  2644  000A16                     __ptext10:
  2645                           	opt stack 0
  2646  000A16                     _TMR1_SetInterruptHandler:
  2647                           	opt stack 21
  2648                           
  2649                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2650                           
  2651                           ;incstack = 0
  2652  000A16  C0E1  F0F2         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2653  000A1A  C0E2  F0F3         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2654  000A1E  0012               	return		;funcret
  2655  000A20                     __end_of_TMR1_SetInterruptHandler:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           intcon	equ	0xFF2
  2662                           intcon2	equ	0xFF1
  2663                           indf0	equ	0xFEF
  2664                           postinc0	equ	0xFEE
  2665                           fsr0h	equ	0xFEA
  2666                           fsr0l	equ	0xFE9
  2667                           wreg	equ	0xFE8
  2668                           indf2	equ	0xFDF
  2669                           postdec2	equ	0xFDD
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _SystemTimerInit *****************
  2675 ;; Defined at:
  2676 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    7
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_LORAWAN_PlatformInit
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text11
  2705  000A76                     __ptext11:
  2706                           	opt stack 0
  2707  000A76                     _SystemTimerInit:
  2708                           	opt stack 21
  2709                           
  2710                           ;sw_timer.c: 137: allocatedTimers = 0;
  2711                           
  2712                           ;incstack = 0
  2713  000A76  0E00               	movlw	0
  2714  000A78  6E44               	movwf	_allocatedTimers,c	;volatile
  2715  000A7A  0012               	return		;funcret
  2716  000A7C                     __end_of_SystemTimerInit:
  2717                           	opt stack 0
  2718                           tblptru	equ	0xFF8
  2719                           tblptrh	equ	0xFF7
  2720                           tblptrl	equ	0xFF6
  2721                           tablat	equ	0xFF5
  2722                           intcon	equ	0xFF2
  2723                           intcon2	equ	0xFF1
  2724                           indf0	equ	0xFEF
  2725                           postinc0	equ	0xFEE
  2726                           fsr0h	equ	0xFEA
  2727                           fsr0l	equ	0xFE9
  2728                           wreg	equ	0xFE8
  2729                           indf2	equ	0xFDF
  2730                           postdec2	equ	0xFDD
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2736 ;; Defined at:
  2737 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		None
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    7
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_LORAWAN_PlatformInit
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text12
  2766  000A98                     __ptext12:
  2767                           	opt stack 0
  2768  000A98                     _DIO5_ISR_Lora_Init:
  2769                           	opt stack 21
  2770                           
  2771                           ;incstack = 0
  2772  000A98  0012               	return		;funcret
  2773  000A9A                     __end_of_DIO5_ISR_Lora_Init:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           intcon	equ	0xFF2
  2780                           intcon2	equ	0xFF1
  2781                           indf0	equ	0xFEF
  2782                           postinc0	equ	0xFEE
  2783                           fsr0h	equ	0xFEA
  2784                           fsr0l	equ	0xFE9
  2785                           wreg	equ	0xFE8
  2786                           indf2	equ	0xFDF
  2787                           postdec2	equ	0xFDD
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2793 ;; Defined at:
  2794 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		None
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    7
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_LORAWAN_PlatformInit
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text13
  2823  000A9A                     __ptext13:
  2824                           	opt stack 0
  2825  000A9A                     _DIO4_ISR_Lora_Init:
  2826                           	opt stack 21
  2827                           
  2828                           ;incstack = 0
  2829  000A9A  0012               	return		;funcret
  2830  000A9C                     __end_of_DIO4_ISR_Lora_Init:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           intcon	equ	0xFF2
  2837                           intcon2	equ	0xFF1
  2838                           indf0	equ	0xFEF
  2839                           postinc0	equ	0xFEE
  2840                           fsr0h	equ	0xFEA
  2841                           fsr0l	equ	0xFE9
  2842                           wreg	equ	0xFE8
  2843                           indf2	equ	0xFDF
  2844                           postdec2	equ	0xFDD
  2845                           fsr2h	equ	0xFDA
  2846                           fsr2l	equ	0xFD9
  2847                           status	equ	0xFD8
  2848                           
  2849 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2850 ;; Defined at:
  2851 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		None
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    7
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_LORAWAN_PlatformInit
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text14
  2880  000A9C                     __ptext14:
  2881                           	opt stack 0
  2882  000A9C                     _DIO3_ISR_Lora_Init:
  2883                           	opt stack 21
  2884                           
  2885                           ;incstack = 0
  2886  000A9C  0012               	return		;funcret
  2887  000A9E                     __end_of_DIO3_ISR_Lora_Init:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           intcon	equ	0xFF2
  2894                           intcon2	equ	0xFF1
  2895                           indf0	equ	0xFEF
  2896                           postinc0	equ	0xFEE
  2897                           fsr0h	equ	0xFEA
  2898                           fsr0l	equ	0xFE9
  2899                           wreg	equ	0xFE8
  2900                           indf2	equ	0xFDF
  2901                           postdec2	equ	0xFDD
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2907 ;; Defined at:
  2908 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    8
  2929 ;; This function calls:
  2930 ;;		_IOCB4_SetInterruptHandler
  2931 ;; This function is called by:
  2932 ;;		_LORAWAN_PlatformInit
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text15
  2937  0009BC                     __ptext15:
  2938                           	opt stack 0
  2939  0009BC                     _DIO2_ISR_Lora_Init:
  2940                           	opt stack 20
  2941                           
  2942                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2943                           
  2944                           ;incstack = 0
  2945  0009BC  0E8C               	movlw	low _DIO2_ISR_Lora
  2946  0009BE  0100               	movlb	0	; () banked
  2947  0009C0  6FE1               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2948  0009C2  0E0A               	movlw	high _DIO2_ISR_Lora
  2949  0009C4  6FE2               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2950  0009C6  EC10  F005         	call	_IOCB4_SetInterruptHandler	;wreg free
  2951  0009CA  0012               	return		;funcret
  2952  0009CC                     __end_of_DIO2_ISR_Lora_Init:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           intcon	equ	0xFF2
  2959                           intcon2	equ	0xFF1
  2960                           indf0	equ	0xFEF
  2961                           postinc0	equ	0xFEE
  2962                           fsr0h	equ	0xFEA
  2963                           fsr0l	equ	0xFE9
  2964                           wreg	equ	0xFE8
  2965                           indf2	equ	0xFDF
  2966                           postdec2	equ	0xFDD
  2967                           fsr2h	equ	0xFDA
  2968                           fsr2l	equ	0xFD9
  2969                           status	equ	0xFD8
  2970                           
  2971 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2972 ;; Defined at:
  2973 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2976 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    7
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_DIO2_ISR_Lora_Init
  2999 ;;		_PIN_MANAGER_Initialize
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text16
  3004  000A20                     __ptext16:
  3005                           	opt stack 0
  3006  000A20                     _IOCB4_SetInterruptHandler:
  3007                           	opt stack 21
  3008                           
  3009                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  3010                           
  3011                           ;incstack = 0
  3012  000A20  C0E1  F0F6         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3013  000A24  C0E2  F0F7         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3014  000A28  0012               	return		;funcret
  3015  000A2A                     __end_of_IOCB4_SetInterruptHandler:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           intcon	equ	0xFF2
  3022                           intcon2	equ	0xFF1
  3023                           indf0	equ	0xFEF
  3024                           postinc0	equ	0xFEE
  3025                           fsr0h	equ	0xFEA
  3026                           fsr0l	equ	0xFE9
  3027                           wreg	equ	0xFE8
  3028                           indf2	equ	0xFDF
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3035 ;; Defined at:
  3036 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    8
  3057 ;; This function calls:
  3058 ;;		_INT2_SetInterruptHandler
  3059 ;; This function is called by:
  3060 ;;		_LORAWAN_PlatformInit
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text17
  3065  0009CC                     __ptext17:
  3066                           	opt stack 0
  3067  0009CC                     _DIO1_ISR_Lora_Init:
  3068                           	opt stack 20
  3069                           
  3070                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3071                           
  3072                           ;incstack = 0
  3073  0009CC  0E90               	movlw	low _DIO1_ISR_Lora
  3074  0009CE  0100               	movlb	0	; () banked
  3075  0009D0  6FE1               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3076  0009D2  0E0A               	movlw	high _DIO1_ISR_Lora
  3077  0009D4  6FE2               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3078  0009D6  EC15  F005         	call	_INT2_SetInterruptHandler	;wreg free
  3079  0009DA  0012               	return		;funcret
  3080  0009DC                     __end_of_DIO1_ISR_Lora_Init:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           intcon	equ	0xFF2
  3087                           intcon2	equ	0xFF1
  3088                           indf0	equ	0xFEF
  3089                           postinc0	equ	0xFEE
  3090                           fsr0h	equ	0xFEA
  3091                           fsr0l	equ	0xFE9
  3092                           wreg	equ	0xFE8
  3093                           indf2	equ	0xFDF
  3094                           postdec2	equ	0xFDD
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3100 ;; Defined at:
  3101 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    8
  3122 ;; This function calls:
  3123 ;;		_INT1_SetInterruptHandler
  3124 ;; This function is called by:
  3125 ;;		_LORAWAN_PlatformInit
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text18
  3130  0009DC                     __ptext18:
  3131                           	opt stack 0
  3132  0009DC                     _DIO0_ISR_Lora_Init:
  3133                           	opt stack 20
  3134                           
  3135                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3136                           
  3137                           ;incstack = 0
  3138  0009DC  0E94               	movlw	low _DIO0_ISR_Lora
  3139  0009DE  0100               	movlb	0	; () banked
  3140  0009E0  6FE1               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3141  0009E2  0E0A               	movlw	high _DIO0_ISR_Lora
  3142  0009E4  6FE2               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3143  0009E6  EC1A  F005         	call	_INT1_SetInterruptHandler	;wreg free
  3144  0009EA  0012               	return		;funcret
  3145  0009EC                     __end_of_DIO0_ISR_Lora_Init:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           intcon	equ	0xFF2
  3152                           intcon2	equ	0xFF1
  3153                           indf0	equ	0xFEF
  3154                           postinc0	equ	0xFEE
  3155                           fsr0h	equ	0xFEA
  3156                           fsr0l	equ	0xFE9
  3157                           wreg	equ	0xFE8
  3158                           indf2	equ	0xFDF
  3159                           postdec2	equ	0xFDD
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _INTERRUPT_Initialize *****************
  3165 ;; Defined at:
  3166 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		None
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    7
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_SYSTEM_Initialize
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text19
  3195  000A88                     __ptext19:
  3196                           	opt stack 0
  3197  000A88                     _INTERRUPT_Initialize:
  3198                           	opt stack 22
  3199                           
  3200                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3201                           
  3202                           ;incstack = 0
  3203  000A88  9ED0               	bcf	4048,7,c	;volatile
  3204  000A8A  0012               	return		;funcret
  3205  000A8C                     __end_of_INTERRUPT_Initialize:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           intcon	equ	0xFF2
  3212                           intcon2	equ	0xFF1
  3213                           indf0	equ	0xFEF
  3214                           postinc0	equ	0xFEE
  3215                           fsr0h	equ	0xFEA
  3216                           fsr0l	equ	0xFE9
  3217                           wreg	equ	0xFE8
  3218                           indf2	equ	0xFDF
  3219                           postdec2	equ	0xFDD
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8
  3223                           
  3224 ;; *************** function _EXT_INT_Initialize *****************
  3225 ;; Defined at:
  3226 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    8
  3247 ;; This function calls:
  3248 ;;		_INT1_SetInterruptHandler
  3249 ;;		_INT2_SetInterruptHandler
  3250 ;; This function is called by:
  3251 ;;		_SYSTEM_Initialize
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text20
  3256  00080A                     __ptext20:
  3257                           	opt stack 0
  3258  00080A                     _EXT_INT_Initialize:
  3259                           	opt stack 21
  3260                           
  3261                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3262                           
  3263                           ;incstack = 0
  3264  00080A  90F0               	bcf	intcon3,0,c	;volatile
  3265                           
  3266                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3267  00080C  8AF1               	bsf	intcon2,5,c	;volatile
  3268                           
  3269                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3270  00080E  0EA4               	movlw	low _INT1_DefaultInterruptHandler
  3271  000810  0100               	movlb	0	; () banked
  3272  000812  6FE1               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3273  000814  0E0A               	movlw	high _INT1_DefaultInterruptHandler
  3274  000816  6FE2               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3275  000818  EC1A  F005         	call	_INT1_SetInterruptHandler	;wreg free
  3276                           
  3277                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3278  00081C  86F0               	bsf	intcon3,3,c	;volatile
  3279                           
  3280                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3281  00081E  92F0               	bcf	intcon3,1,c	;volatile
  3282                           
  3283                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3284  000820  88F1               	bsf	intcon2,4,c	;volatile
  3285                           
  3286                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3287  000822  0EA2               	movlw	low _INT2_DefaultInterruptHandler
  3288  000824  0100               	movlb	0	; () banked
  3289  000826  6FE1               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3290  000828  0E0A               	movlw	high _INT2_DefaultInterruptHandler
  3291  00082A  6FE2               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3292  00082C  EC15  F005         	call	_INT2_SetInterruptHandler	;wreg free
  3293                           
  3294                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3295  000830  88F0               	bsf	intcon3,4,c	;volatile
  3296  000832  0012               	return		;funcret
  3297  000834                     __end_of_EXT_INT_Initialize:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           intcon	equ	0xFF2
  3304                           intcon2	equ	0xFF1
  3305                           intcon3	equ	0xFF0
  3306                           indf0	equ	0xFEF
  3307                           postinc0	equ	0xFEE
  3308                           fsr0h	equ	0xFEA
  3309                           fsr0l	equ	0xFE9
  3310                           wreg	equ	0xFE8
  3311                           indf2	equ	0xFDF
  3312                           postdec2	equ	0xFDD
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _INT2_SetInterruptHandler *****************
  3318 ;; Defined at:
  3319 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3322 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        2 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    7
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_DIO1_ISR_Lora_Init
  3345 ;;		_EXT_INT_Initialize
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text21
  3350  000A2A                     __ptext21:
  3351                           	opt stack 0
  3352  000A2A                     _INT2_SetInterruptHandler:
  3353                           	opt stack 20
  3354                           
  3355                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3356                           
  3357                           ;incstack = 0
  3358  000A2A  C0E1  F0F8         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3359  000A2E  C0E2  F0F9         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3360  000A32  0012               	return		;funcret
  3361  000A34                     __end_of_INT2_SetInterruptHandler:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           intcon	equ	0xFF2
  3368                           intcon2	equ	0xFF1
  3369                           intcon3	equ	0xFF0
  3370                           indf0	equ	0xFEF
  3371                           postinc0	equ	0xFEE
  3372                           fsr0h	equ	0xFEA
  3373                           fsr0l	equ	0xFE9
  3374                           wreg	equ	0xFE8
  3375                           indf2	equ	0xFDF
  3376                           postdec2	equ	0xFDD
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _INT1_SetInterruptHandler *****************
  3382 ;; Defined at:
  3383 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3386 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    7
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_DIO0_ISR_Lora_Init
  3409 ;;		_EXT_INT_Initialize
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text22
  3414  000A34                     __ptext22:
  3415                           	opt stack 0
  3416  000A34                     _INT1_SetInterruptHandler:
  3417                           	opt stack 20
  3418                           
  3419                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3420                           
  3421                           ;incstack = 0
  3422  000A34  C0E1  F0FA         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3423  000A38  C0E2  F0FB         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3424  000A3C  0012               	return		;funcret
  3425  000A3E                     __end_of_INT1_SetInterruptHandler:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           intcon	equ	0xFF2
  3432                           intcon2	equ	0xFF1
  3433                           intcon3	equ	0xFF0
  3434                           indf0	equ	0xFEF
  3435                           postinc0	equ	0xFEE
  3436                           fsr0h	equ	0xFEA
  3437                           fsr0l	equ	0xFE9
  3438                           wreg	equ	0xFE8
  3439                           indf2	equ	0xFDF
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function _EUSART1_Initialize *****************
  3446 ;; Defined at:
  3447 ;;		line 72 in file "mcc_generated_files/eusart1.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    8
  3468 ;; This function calls:
  3469 ;;		_EUSART1_SetErrorHandler
  3470 ;;		_EUSART1_SetFramingErrorHandler
  3471 ;;		_EUSART1_SetOverrunErrorHandler
  3472 ;; This function is called by:
  3473 ;;		_SYSTEM_Initialize
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text23
  3478  000754                     __ptext23:
  3479                           	opt stack 0
  3480  000754                     _EUSART1_Initialize:
  3481                           	opt stack 21
  3482                           
  3483                           ;eusart1.c: 77: BAUDCON1 = 0x08;
  3484                           
  3485                           ;incstack = 0
  3486  000754  0E08               	movlw	8
  3487  000756  6EB8               	movwf	4024,c	;volatile
  3488                           
  3489                           ;eusart1.c: 123: RCSTA1 = 0x90;
  3490  000758  0E90               	movlw	144
  3491  00075A  6EAB               	movwf	4011,c	;volatile
  3492                           
  3493                           ;eusart1.c: 124: TXSTA1 = 0x24;
  3494  00075C  0E24               	movlw	36
  3495  00075E  6EAC               	movwf	4012,c	;volatile
  3496                           
  3497                           ;eusart1.c: 125: SPBRG1 = 0x14;
  3498  000760  0E14               	movlw	20
  3499  000762  6EAF               	movwf	4015,c	;volatile
  3500                           
  3501                           ;eusart1.c: 126: SPBRGH1 = 0x34;
  3502  000764  0E34               	movlw	52
  3503  000766  6EB0               	movwf	4016,c	;volatile
  3504                           
  3505                           ;eusart1.c: 128: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3506  000768  0E00               	movlw	0
  3507  00076A  0100               	movlb	0	; () banked
  3508  00076C  6FE1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3509  00076E  0E00               	movlw	0
  3510  000770  6FE2               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3511  000772  EC24  F005         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3512                           
  3513                           ;eusart1.c: 129: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3514  000776  0E00               	movlw	0
  3515  000778  0100               	movlb	0	; () banked
  3516  00077A  6FE1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3517  00077C  0E00               	movlw	0
  3518  00077E  6FE2               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3519  000780  EC1F  F005         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3520                           
  3521                           ;eusart1.c: 130: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3522  000784  0E00               	movlw	0
  3523  000786  0100               	movlb	0	; () banked
  3524  000788  6FE1               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3525  00078A  0E00               	movlw	0
  3526  00078C  6FE2               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3527  00078E  EC29  F005         	call	_EUSART1_SetErrorHandler	;wreg free
  3528                           
  3529                           ;eusart1.c: 132: eusart1RxLastError.status = 0;
  3530  000792  0E00               	movlw	0
  3531  000794  0100               	movlb	0	; () banked
  3532  000796  6F98               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3533                           
  3534                           ; BSR set to: 0
  3535  000798  0012               	return		;funcret
  3536  00079A                     __end_of_EUSART1_Initialize:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           intcon	equ	0xFF2
  3543                           intcon2	equ	0xFF1
  3544                           intcon3	equ	0xFF0
  3545                           indf0	equ	0xFEF
  3546                           postinc0	equ	0xFEE
  3547                           fsr0h	equ	0xFEA
  3548                           fsr0l	equ	0xFE9
  3549                           wreg	equ	0xFE8
  3550                           indf2	equ	0xFDF
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3557 ;; Defined at:
  3558 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3561 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        2 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    7
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_EUSART1_Initialize
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text24
  3588  000A3E                     __ptext24:
  3589                           	opt stack 0
  3590  000A3E                     _EUSART1_SetOverrunErrorHandler:
  3591                           	opt stack 21
  3592                           
  3593                           ;eusart1.c: 217: EUSART1_OverrunErrorHandler = interruptHandler;
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;incstack = 0
  3597  000A3E  C0E1  F1F7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3598  000A42  C0E2  F1F8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3599  000A46  0012               	return		;funcret
  3600  000A48                     __end_of_EUSART1_SetOverrunErrorHandler:
  3601                           	opt stack 0
  3602                           tblptru	equ	0xFF8
  3603                           tblptrh	equ	0xFF7
  3604                           tblptrl	equ	0xFF6
  3605                           tablat	equ	0xFF5
  3606                           intcon	equ	0xFF2
  3607                           intcon2	equ	0xFF1
  3608                           intcon3	equ	0xFF0
  3609                           indf0	equ	0xFEF
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           indf2	equ	0xFDF
  3615                           postdec2	equ	0xFDD
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3621 ;; Defined at:
  3622 ;;		line 212 in file "mcc_generated_files/eusart1.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3625 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        2 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    7
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_EUSART1_Initialize
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text25
  3652  000A48                     __ptext25:
  3653                           	opt stack 0
  3654  000A48                     _EUSART1_SetFramingErrorHandler:
  3655                           	opt stack 21
  3656                           
  3657                           ;eusart1.c: 213: EUSART1_FramingErrorHandler = interruptHandler;
  3658                           
  3659                           ;incstack = 0
  3660  000A48  C0E1  F1F9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3661  000A4C  C0E2  F1FA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3662  000A50  0012               	return		;funcret
  3663  000A52                     __end_of_EUSART1_SetFramingErrorHandler:
  3664                           	opt stack 0
  3665                           tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           intcon	equ	0xFF2
  3670                           intcon2	equ	0xFF1
  3671                           intcon3	equ	0xFF0
  3672                           indf0	equ	0xFEF
  3673                           postinc0	equ	0xFEE
  3674                           fsr0h	equ	0xFEA
  3675                           fsr0l	equ	0xFE9
  3676                           wreg	equ	0xFE8
  3677                           indf2	equ	0xFDF
  3678                           postdec2	equ	0xFDD
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8
  3682                           
  3683 ;; *************** function _EUSART1_SetErrorHandler *****************
  3684 ;; Defined at:
  3685 ;;		line 220 in file "mcc_generated_files/eusart1.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3688 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;Total ram usage:        2 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    7
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_EUSART1_Initialize
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text26
  3715  000A52                     __ptext26:
  3716                           	opt stack 0
  3717  000A52                     _EUSART1_SetErrorHandler:
  3718                           	opt stack 21
  3719                           
  3720                           ;eusart1.c: 221: EUSART1_ErrorHandler = interruptHandler;
  3721                           
  3722                           ;incstack = 0
  3723  000A52  C0E1  F1F5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3724  000A56  C0E2  F1F6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3725  000A5A  0012               	return		;funcret
  3726  000A5C                     __end_of_EUSART1_SetErrorHandler:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           intcon	equ	0xFF2
  3733                           intcon2	equ	0xFF1
  3734                           intcon3	equ	0xFF0
  3735                           indf0	equ	0xFEF
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           indf2	equ	0xFDF
  3741                           postdec2	equ	0xFDD
  3742                           fsr2h	equ	0xFDA
  3743                           fsr2l	equ	0xFD9
  3744                           status	equ	0xFD8
  3745                           
  3746 ;; *************** function _EUSART1_Write *****************
  3747 ;; Defined at:
  3748 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  txData          1    wreg     unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  txData          1    0[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;Total ram usage:        1 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    7
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;;		_putch
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text27
  3778  000A08                     __ptext27:
  3779                           	opt stack 0
  3780  000A08                     _EUSART1_Write:
  3781                           	opt stack 23
  3782                           
  3783                           ;incstack = 0
  3784                           ;EUSART1_Write@txData stored from wreg
  3785  000A08  0100               	movlb	0	; () banked
  3786  000A0A  6FE1               	movwf	EUSART1_Write@txData& (0+255),b
  3787  000A0C                     
  3788                           ;eusart1.c: 181: {
  3789                           
  3790                           ;eusart1.c: 180: while(0 == PIR1bits.TX1IF)
  3791  000A0C  A89E               	btfss	3998,4,c	;volatile
  3792  000A0E  D7FE               	goto	l10363
  3793                           
  3794                           ;eusart1.c: 182: }
  3795                           ;eusart1.c: 184: TXREG1 = txData;
  3796  000A10  C0E1  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3797  000A14  0012               	return		;funcret
  3798  000A16                     __end_of_EUSART1_Write:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           intcon	equ	0xFF2
  3805                           intcon2	equ	0xFF1
  3806                           intcon3	equ	0xFF0
  3807                           indf0	equ	0xFEF
  3808                           postinc0	equ	0xFEE
  3809                           fsr0h	equ	0xFEA
  3810                           fsr0l	equ	0xFE9
  3811                           wreg	equ	0xFE8
  3812                           indf2	equ	0xFDF
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _EUSART1_Read *****************
  3819 ;; Defined at:
  3820 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      unsigned char 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    7
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;;		_getch
  3846 ;;		_UART_Read_Text
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text28
  3851  00098A                     __ptext28:
  3852                           	opt stack 0
  3853  00098A                     _EUSART1_Read:
  3854                           	opt stack 23
  3855                           
  3856                           ;eusart1.c: 165: eusart1RxLastError.status = 0;
  3857                           
  3858                           ;incstack = 0
  3859  00098A  0E00               	movlw	0
  3860  00098C  0100               	movlb	0	; () banked
  3861  00098E  6F98               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;eusart1.c: 167: if(1 == RCSTA1bits.OERR)
  3865  000990  A2AB               	btfss	4011,1,c	;volatile
  3866  000992  D002               	goto	l2454
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;eusart1.c: 168: {
  3870                           ;eusart1.c: 171: RCSTA1bits.CREN = 0;
  3871  000994  98AB               	bcf	4011,4,c	;volatile
  3872                           
  3873                           ;eusart1.c: 172: RCSTA1bits.CREN = 1;
  3874  000996  88AB               	bsf	4011,4,c	;volatile
  3875  000998                     l2454:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;eusart1.c: 173: }
  3879                           ;eusart1.c: 175: return RCREG1;
  3880                           
  3881                           ; BSR set to: 0
  3882  000998  50AE               	movf	4014,w,c	;volatile
  3883  00099A  0012               	return	
  3884  00099C                     __end_of_EUSART1_Read:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           intcon	equ	0xFF2
  3891                           intcon2	equ	0xFF1
  3892                           intcon3	equ	0xFF0
  3893                           indf0	equ	0xFEF
  3894                           postinc0	equ	0xFEE
  3895                           fsr0h	equ	0xFEA
  3896                           fsr0l	equ	0xFE9
  3897                           wreg	equ	0xFE8
  3898                           indf2	equ	0xFDF
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _INTERRUPT_InterruptManager *****************
  3905 ;; Defined at:
  3906 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        8 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    6
  3927 ;; This function calls:
  3928 ;;		_INT1_ISR
  3929 ;;		_INT2_ISR
  3930 ;;		_PIN_MANAGER_IOC
  3931 ;;		_TMR1_ISR
  3932 ;; This function is called by:
  3933 ;;		Interrupt level 2
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	intcode
  3938  000008                     __pintcode:
  3939                           	opt stack 0
  3940  000008                     _INTERRUPT_InterruptManager:
  3941                           	opt stack 20
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;incstack = 0
  3945  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  3946  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3947  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  3948  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  3949  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  3950  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  3951  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
  3952  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
  3953  000028  EE1B  F0A8         	lfsr	1,___inthi_sp
  3954                           
  3955                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3956  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
  3957  00002E  A0F0               	btfss	intcon3,0,c	;volatile
  3958  000030  D003               	goto	i2l2240
  3959                           
  3960                           ;interrupt_manager.c: 62: {
  3961                           ;interrupt_manager.c: 63: INT1_ISR();
  3962  000032  EC37  F005         	call	_INT1_ISR	;wreg free
  3963                           
  3964                           ;interrupt_manager.c: 64: }
  3965  000036  D012               	goto	i2l2247
  3966  000038                     i2l2240:
  3967                           
  3968                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  3969  000038  B8F0               	btfsc	intcon3,4,c	;volatile
  3970  00003A  A2F0               	btfss	intcon3,1,c	;volatile
  3971  00003C  D003               	goto	i2l2242
  3972                           
  3973                           ;interrupt_manager.c: 66: {
  3974                           ;interrupt_manager.c: 67: INT2_ISR();
  3975  00003E  EC33  F005         	call	_INT2_ISR	;wreg free
  3976                           
  3977                           ;interrupt_manager.c: 68: }
  3978  000042  D00C               	goto	i2l2247
  3979  000044                     i2l2242:
  3980                           
  3981                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  3982  000044  B6F2               	btfsc	intcon,3,c	;volatile
  3983  000046  A0F2               	btfss	intcon,0,c	;volatile
  3984  000048  D003               	goto	i2l2244
  3985                           
  3986                           ;interrupt_manager.c: 70: {
  3987                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
  3988  00004A  EC2E  F005         	call	_PIN_MANAGER_IOC	;wreg free
  3989                           
  3990                           ;interrupt_manager.c: 72: }
  3991  00004E  D006               	goto	i2l2247
  3992  000050                     i2l2244:
  3993                           
  3994                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
  3995  000050  BCF2               	btfsc	intcon,6,c	;volatile
  3996                           
  3997                           ;interrupt_manager.c: 74: {
  3998                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3999  000052  A09D               	btfss	3997,0,c	;volatile
  4000  000054  D003               	goto	i2l2247
  4001  000056  B09E               	btfsc	3998,0,c	;volatile
  4002                           
  4003                           ;interrupt_manager.c: 76: {
  4004                           ;interrupt_manager.c: 77: TMR1_ISR();
  4005  000058  ECBB  F004         	call	_TMR1_ISR	;wreg free
  4006  00005C                     i2l2247:
  4007                           
  4008                           ;interrupt_manager.c: 84: else
  4009                           ;interrupt_manager.c: 85: {
  4010                           
  4011                           ;interrupt_manager.c: 82: }
  4012                           ;interrupt_manager.c: 83: }
  4013                           
  4014                           ;interrupt_manager.c: 79: else
  4015                           ;interrupt_manager.c: 80: {
  4016  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  4017  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  4018  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  4019  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  4020  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  4021  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  4022  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4023  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4024  00007C  0011               	retfie		f
  4025  00007E                     __end_of_INTERRUPT_InterruptManager:
  4026                           	opt stack 0
  4027                           pclatu	equ	0xFFB
  4028                           pclath	equ	0xFFA
  4029                           tblptru	equ	0xFF8
  4030                           tblptrh	equ	0xFF7
  4031                           tblptrl	equ	0xFF6
  4032                           tablat	equ	0xFF5
  4033                           prodh	equ	0xFF4
  4034                           prodl	equ	0xFF3
  4035                           intcon	equ	0xFF2
  4036                           intcon2	equ	0xFF1
  4037                           intcon3	equ	0xFF0
  4038                           indf0	equ	0xFEF
  4039                           postinc0	equ	0xFEE
  4040                           fsr0h	equ	0xFEA
  4041                           fsr0l	equ	0xFE9
  4042                           wreg	equ	0xFE8
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function _TMR1_ISR *****************
  4052 ;; Defined at:
  4053 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    5
  4074 ;; This function calls:
  4075 ;;		_TMR1_CallBack
  4076 ;;		_TMR1_WriteTimer
  4077 ;; This function is called by:
  4078 ;;		_INTERRUPT_InterruptManager
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text30
  4083  000976                     __ptext30:
  4084                           	opt stack 0
  4085  000976                     _TMR1_ISR:
  4086                           	opt stack 20
  4087                           
  4088                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
  4089                           
  4090                           ;incstack = 0
  4091  000976  909E               	bcf	3998,0,c	;volatile
  4092                           
  4093                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
  4094  000978  C0F4  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  4095  00097C  C0F5  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  4096  000980  ECAD  F004         	call	_TMR1_WriteTimer	;wreg free
  4097                           
  4098                           ;tmr1.c: 167: TMR1_CallBack();
  4099  000984  EC4E  F004         	call	_TMR1_CallBack	;wreg free
  4100  000988  0012               	return		;funcret
  4101  00098A                     __end_of_TMR1_ISR:
  4102                           	opt stack 0
  4103                           pclatu	equ	0xFFB
  4104                           pclath	equ	0xFFA
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           intcon2	equ	0xFF1
  4113                           intcon3	equ	0xFF0
  4114                           indf0	equ	0xFEF
  4115                           postinc0	equ	0xFEE
  4116                           fsr0h	equ	0xFEA
  4117                           fsr0l	equ	0xFE9
  4118                           wreg	equ	0xFE8
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postdec2	equ	0xFDD
  4123                           fsr2h	equ	0xFDA
  4124                           fsr2l	equ	0xFD9
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _TMR1_CallBack *****************
  4128 ;; Defined at:
  4129 ;;		line 170 in file "mcc_generated_files/tmr1.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    4
  4150 ;; This function calls:
  4151 ;;		Absolute function
  4152 ;;		_TMR1_DefaultInterruptHandler
  4153 ;;		_TMR_ISR_lora
  4154 ;; This function is called by:
  4155 ;;		_TMR1_ISR
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text31
  4160  00089C                     __ptext31:
  4161                           	opt stack 0
  4162  00089C                     _TMR1_CallBack:
  4163                           	opt stack 20
  4164                           
  4165                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
  4166                           
  4167                           ;incstack = 0
  4168  00089C  0100               	movlb	0	; () banked
  4169  00089E  51F2               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4170  0008A0  11F3               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4171  0008A2  B4D8               	btfsc	status,2,c
  4172  0008A4  0012               	return	
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;tmr1.c: 174: {
  4176                           ;tmr1.c: 175: TMR1_InterruptHandler();
  4177  0008A6  D801               	call	i2u884_48
  4178  0008A8  0012               	return	
  4179  0008AA                     i2u884_48:
  4180  0008AA  0005               	push	
  4181  0008AC  6EFA               	movwf	pclath,c
  4182  0008AE  51F2               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4183  0008B0  6EFD               	movwf	tosl,c
  4184  0008B2  51F3               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4185  0008B4  6EFE               	movwf	tosh,c
  4186  0008B6  6AFF               	clrf	tosu,c
  4187  0008B8  50FA               	movf	pclath,w,c
  4188  0008BA  0012               	return		;indir
  4189  0008BC                     __end_of_TMR1_CallBack:
  4190                           	opt stack 0
  4191                           tosu	equ	0xFFF
  4192                           tosh	equ	0xFFE
  4193                           tosl	equ	0xFFD
  4194                           pclatu	equ	0xFFB
  4195                           pclath	equ	0xFFA
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           intcon2	equ	0xFF1
  4204                           intcon3	equ	0xFF0
  4205                           indf0	equ	0xFEF
  4206                           postinc0	equ	0xFEE
  4207                           fsr0h	equ	0xFEA
  4208                           fsr0l	equ	0xFE9
  4209                           wreg	equ	0xFE8
  4210                           fsr1h	equ	0xFE2
  4211                           fsr1l	equ	0xFE1
  4212                           indf2	equ	0xFDF
  4213                           postdec2	equ	0xFDD
  4214                           fsr2h	equ	0xFDA
  4215                           fsr2l	equ	0xFD9
  4216                           status	equ	0xFD8
  4217                           
  4218 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4219 ;; Defined at:
  4220 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		None
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_TMR1_Initialize
  4244 ;;		_TMR1_CallBack
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text32
  4249  000A9E                     __ptext32:
  4250                           	opt stack 0
  4251  000A9E                     _TMR1_DefaultInterruptHandler:
  4252                           	opt stack 23
  4253                           
  4254                           ;incstack = 0
  4255  000A9E  0012               	return		;funcret
  4256  000AA0                     __end_of_TMR1_DefaultInterruptHandler:
  4257                           	opt stack 0
  4258                           tosu	equ	0xFFF
  4259                           tosh	equ	0xFFE
  4260                           tosl	equ	0xFFD
  4261                           pclatu	equ	0xFFB
  4262                           pclath	equ	0xFFA
  4263                           tblptru	equ	0xFF8
  4264                           tblptrh	equ	0xFF7
  4265                           tblptrl	equ	0xFF6
  4266                           tablat	equ	0xFF5
  4267                           prodh	equ	0xFF4
  4268                           prodl	equ	0xFF3
  4269                           intcon	equ	0xFF2
  4270                           intcon2	equ	0xFF1
  4271                           intcon3	equ	0xFF0
  4272                           indf0	equ	0xFEF
  4273                           postinc0	equ	0xFEE
  4274                           fsr0h	equ	0xFEA
  4275                           fsr0l	equ	0xFE9
  4276                           wreg	equ	0xFE8
  4277                           fsr1h	equ	0xFE2
  4278                           fsr1l	equ	0xFE1
  4279                           indf2	equ	0xFDF
  4280                           postdec2	equ	0xFDD
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _TMR_ISR_lora *****************
  4286 ;; Defined at:
  4287 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		_SwTimersInterrupt
  4310 ;;		_TMR_SwapTimer
  4311 ;; This function is called by:
  4312 ;;		_TMR_ISR_Lora_Init
  4313 ;;		_TMR1_CallBack
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text33
  4318  0006A8                     __ptext33:
  4319                           	opt stack 0
  4320  0006A8                     _TMR_ISR_lora:
  4321                           	opt stack 20
  4322                           
  4323                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
  4324                           
  4325                           ;incstack = 0
  4326  0006A8  0E01               	movlw	1
  4327  0006AA  6E45               	movwf	_timerOverflow,c	;volatile
  4328                           
  4329                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
  4330  0006AC  EC25  F002         	call	_SwTimersInterrupt	;wreg free
  4331  0006B0  C021  F054         	movff	?_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
  4332  0006B4  C022  F055         	movff	?_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
  4333  0006B8  C023  F056         	movff	?_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
  4334  0006BC  C024  F057         	movff	?_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
  4335                           
  4336                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
  4337  0006C0  5057               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
  4338  0006C2  E11D               	bnz	i2l2171
  4339  0006C4  0456               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
  4340  0006C6  B0D8               	btfsc	status,0,c
  4341  0006C8  0012               	return	
  4342                           
  4343                           ;tmr_lora_addons.c: 66: {
  4344                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
  4345  0006CA  C054  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
  4346  0006CE  C055  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
  4347  0006D2  1E32               	comf	??_TMR_ISR_lora,f,c
  4348  0006D4  1E33               	comf	??_TMR_ISR_lora+1,f,c
  4349  0006D6  4A32               	infsnz	??_TMR_ISR_lora,f,c
  4350  0006D8  2A33               	incf	??_TMR_ISR_lora+1,f,c
  4351  0006DA  C032  F040         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
  4352  0006DE  C033  F041         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
  4353                           
  4354                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
  4355  0006E2  C040  F009         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
  4356  0006E6  C041  F00A         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
  4357  0006EA  ECCD  F003         	call	_TMR_SwapTimer	;wreg free
  4358  0006EE  C009  F068         	movff	?_TMR_SwapTimer,_ticksAdded	;volatile
  4359  0006F2  C00A  F069         	movff	?_TMR_SwapTimer+1,_ticksAdded+1	;volatile
  4360  0006F6  0100               	movlb	0	; () banked
  4361  0006F8  6B6A               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
  4362  0006FA  6B6B               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
  4363  0006FC  0012               	return	
  4364  0006FE                     i2l2171:
  4365  0006FE  0012               	return		;funcret
  4366  000700                     __end_of_TMR_ISR_lora:
  4367                           	opt stack 0
  4368                           tosu	equ	0xFFF
  4369                           tosh	equ	0xFFE
  4370                           tosl	equ	0xFFD
  4371                           pclatu	equ	0xFFB
  4372                           pclath	equ	0xFFA
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           prodh	equ	0xFF4
  4378                           prodl	equ	0xFF3
  4379                           intcon	equ	0xFF2
  4380                           intcon2	equ	0xFF1
  4381                           intcon3	equ	0xFF0
  4382                           indf0	equ	0xFEF
  4383                           postinc0	equ	0xFEE
  4384                           fsr0h	equ	0xFEA
  4385                           fsr0l	equ	0xFE9
  4386                           wreg	equ	0xFE8
  4387                           fsr1h	equ	0xFE2
  4388                           fsr1l	equ	0xFE1
  4389                           indf2	equ	0xFDF
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _TMR_SwapTimer *****************
  4396 ;; Defined at:
  4397 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  timerVal        2    8[COMRAM] unsigned int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  2    8[COMRAM] unsigned int 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    1
  4418 ;; This function calls:
  4419 ;;		_TMR1_ReadTimer
  4420 ;;		_TMR1_WriteTimer
  4421 ;; This function is called by:
  4422 ;;		_TMR_ISR_lora
  4423 ;;		_TMR_OverrideRemaining
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text34
  4428  00079A                     __ptext34:
  4429                           	opt stack 0
  4430  00079A                     _TMR_SwapTimer:
  4431                           	opt stack 21
  4432                           
  4433                           ;sw_timer.c: 114: static uint16_t oldVal;
  4434                           ;sw_timer.c: 115: static uint16_t retVal;
  4435                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
  4436                           
  4437                           ;incstack = 0
  4438  00079A  EC5E  F004         	call	_TMR1_ReadTimer	;wreg free
  4439  00079E  C001  F090         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
  4440  0007A2  C002  F091         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
  4441  0007A6                     
  4442                           ;sw_timer.c: 123: ;
  4443  0007A6  EC5E  F004         	call	_TMR1_ReadTimer	;wreg free
  4444  0007AA  0100               	movlb	0	; () banked
  4445  0007AC  5190               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
  4446  0007AE  1801               	xorwf	?_TMR1_ReadTimer,w,c
  4447  0007B0  E104               	bnz	i2l8617
  4448  0007B2  5191               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
  4449  0007B4  1802               	xorwf	?_TMR1_ReadTimer+1,w,c
  4450  0007B6  B4D8               	btfsc	status,2,c
  4451  0007B8  D7F6               	goto	i2l1535
  4452  0007BA                     i2l8617:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
  4456  0007BA  C009  F001         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
  4457  0007BE  C00A  F002         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
  4458  0007C2  ECAD  F004         	call	_TMR1_WriteTimer	;wreg free
  4459                           
  4460                           ;sw_timer.c: 128: oldVal++;
  4461  0007C6  0100               	movlb	0	; () banked
  4462  0007C8  4B90               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
  4463  0007CA  2B91               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;sw_timer.c: 130: retVal = oldVal;
  4467  0007CC  C090  F08E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
  4468  0007D0  C091  F08F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;sw_timer.c: 132: return retVal;
  4472  0007D4  C08E  F009         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
  4473  0007D8  C08F  F00A         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
  4474  0007DC  0012               	return	
  4475  0007DE                     __end_of_TMR_SwapTimer:
  4476                           	opt stack 0
  4477                           tosu	equ	0xFFF
  4478                           tosh	equ	0xFFE
  4479                           tosl	equ	0xFFD
  4480                           pclatu	equ	0xFFB
  4481                           pclath	equ	0xFFA
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           prodh	equ	0xFF4
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           intcon2	equ	0xFF1
  4490                           intcon3	equ	0xFF0
  4491                           indf0	equ	0xFEF
  4492                           postinc0	equ	0xFEE
  4493                           fsr0h	equ	0xFEA
  4494                           fsr0l	equ	0xFE9
  4495                           wreg	equ	0xFE8
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           indf2	equ	0xFDF
  4499                           postdec2	equ	0xFDD
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function _TMR1_WriteTimer *****************
  4505 ;; Defined at:
  4506 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  timerVal        2    0[COMRAM] unsigned int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;Total ram usage:        2 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_TMR_SwapTimer
  4530 ;;		_TMR1_ISR
  4531 ;;		_TMR1_Reload
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text35
  4536  00095A                     __ptext35:
  4537                           	opt stack 0
  4538  00095A                     _TMR1_WriteTimer:
  4539                           	opt stack 24
  4540                           
  4541                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;incstack = 0
  4545  00095A  A4CD               	btfss	4045,2,c	;volatile
  4546  00095C  D007               	goto	i2l2528
  4547                           
  4548                           ;tmr1.c: 124: {
  4549                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
  4550  00095E  90CD               	bcf	4045,0,c	;volatile
  4551                           
  4552                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4553  000960  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4554  000962  6ECF               	movwf	4047,c	;volatile
  4555                           
  4556                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
  4557  000964  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4558                           
  4559                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
  4560  000968  80CD               	bsf	4045,0,c	;volatile
  4561                           
  4562                           ;tmr1.c: 134: }
  4563  00096A  0012               	return	
  4564  00096C                     i2l2528:
  4565                           
  4566                           ;tmr1.c: 135: else
  4567                           ;tmr1.c: 136: {
  4568                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
  4569  00096C  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4570  00096E  6ECF               	movwf	4047,c	;volatile
  4571                           
  4572                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
  4573  000970  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4574  000974  0012               	return	
  4575  000976                     __end_of_TMR1_WriteTimer:
  4576                           	opt stack 0
  4577                           tosu	equ	0xFFF
  4578                           tosh	equ	0xFFE
  4579                           tosl	equ	0xFFD
  4580                           pclatu	equ	0xFFB
  4581                           pclath	equ	0xFFA
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           intcon3	equ	0xFF0
  4591                           indf0	equ	0xFEF
  4592                           postinc0	equ	0xFEE
  4593                           fsr0h	equ	0xFEA
  4594                           fsr0l	equ	0xFE9
  4595                           wreg	equ	0xFE8
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           indf2	equ	0xFDF
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _SwTimersInterrupt *****************
  4605 ;; Defined at:
  4606 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  ticksToNextT    4   44[COMRAM] unsigned long 
  4611 ;;  timeElapsed     4   40[COMRAM] unsigned long 
  4612 ;;  i               1   48[COMRAM] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  4   32[COMRAM] unsigned long 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;Total ram usage:       17 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    2
  4629 ;; This function calls:
  4630 ;;		_TMR_GetDeltaTime
  4631 ;; This function is called by:
  4632 ;;		_TMR_ISR_lora
  4633 ;;		_SwTimerReadValue
  4634 ;;		_SwTimerStart
  4635 ;;		_SwTimersCanSleep
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text36
  4640  00044A                     __ptext36:
  4641                           	opt stack 0
  4642  00044A                     _SwTimersInterrupt:
  4643                           	opt stack 20
  4644                           
  4645                           ;sw_timer.c: 289: uint8_t i;
  4646                           ;sw_timer.c: 290: uint32_t timeElapsed;
  4647                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
  4648                           
  4649                           ;incstack = 0
  4650  00044A  682D               	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
  4651  00044C  682E               	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
  4652  00044E  682F               	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
  4653  000450  6830               	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
  4654                           
  4655                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
  4656  000452  EC6F  F001         	call	_TMR_GetDeltaTime	;wreg free
  4657  000456  C009  F029         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
  4658  00045A  C00A  F02A         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
  4659  00045E  C00B  F02B         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
  4660  000462  C00C  F02C         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
  4661                           
  4662                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
  4663  000466  0E00               	movlw	0
  4664  000468  6E31               	movwf	SwTimersInterrupt@i,c
  4665  00046A  D061               	goto	i2l1592
  4666  00046C                     
  4667                           ;sw_timer.c: 298: {
  4668                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
  4669  00046C  5031               	movf	SwTimersInterrupt@i,w,c
  4670  00046E  0D08               	mullw	8
  4671  000470  0E04               	movlw	4
  4672  000472  26F3               	addwf	prodl,f,c
  4673  000474  0E00               	movlw	0
  4674  000476  22F4               	addwfc	prodh,f,c
  4675  000478  0E00               	movlw	low _swTimers
  4676  00047A  24F3               	addwf	prodl,w,c
  4677  00047C  6ED9               	movwf	fsr2l,c
  4678  00047E  0E03               	movlw	high _swTimers
  4679  000480  20F4               	addwfc	prodh,w,c
  4680  000482  6EDA               	movwf	fsr2h,c
  4681  000484  04DE               	decf	postinc2,w,c
  4682  000486  A4D8               	btfss	status,2,c
  4683  000488  D051               	goto	i2l1597
  4684                           
  4685                           ;sw_timer.c: 302: {
  4686                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
  4687  00048A  5031               	movf	SwTimersInterrupt@i,w,c
  4688  00048C  0D08               	mullw	8
  4689  00048E  0E00               	movlw	low _swTimers
  4690  000490  24F3               	addwf	prodl,w,c
  4691  000492  6ED9               	movwf	fsr2l,c
  4692  000494  0E03               	movlw	high _swTimers
  4693  000496  20F4               	addwfc	prodh,w,c
  4694  000498  6EDA               	movwf	fsr2h,c
  4695  00049A  50DE               	movf	postinc2,w,c
  4696  00049C  5C29               	subwf	SwTimersInterrupt@timeElapsed,w,c
  4697  00049E  50DE               	movf	postinc2,w,c
  4698  0004A0  582A               	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
  4699  0004A2  50DE               	movf	postinc2,w,c
  4700  0004A4  582B               	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
  4701  0004A6  50DE               	movf	postinc2,w,c
  4702  0004A8  582C               	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
  4703  0004AA  A0D8               	btfss	status,0,c
  4704  0004AC  D00D               	goto	i2l1595
  4705                           
  4706                           ;sw_timer.c: 304: {
  4707                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
  4708  0004AE  5031               	movf	SwTimersInterrupt@i,w,c
  4709  0004B0  0D08               	mullw	8
  4710  0004B2  0E00               	movlw	low _swTimers
  4711  0004B4  24F3               	addwf	prodl,w,c
  4712  0004B6  6ED9               	movwf	fsr2l,c
  4713  0004B8  0E03               	movlw	high _swTimers
  4714  0004BA  20F4               	addwfc	prodh,w,c
  4715  0004BC  6EDA               	movwf	fsr2h,c
  4716  0004BE  6ADE               	clrf	postinc2,c
  4717  0004C0  6ADE               	clrf	postinc2,c
  4718  0004C2  6ADE               	clrf	postinc2,c
  4719  0004C4  6ADD               	clrf	postdec2,c
  4720                           
  4721                           ;sw_timer.c: 306: }
  4722  0004C6  D032               	goto	i2l1597
  4723  0004C8                     i2l1595:
  4724                           
  4725                           ;sw_timer.c: 307: else
  4726                           ;sw_timer.c: 308: {
  4727                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
  4728  0004C8  5031               	movf	SwTimersInterrupt@i,w,c
  4729  0004CA  0D08               	mullw	8
  4730  0004CC  0E00               	movlw	low _swTimers
  4731  0004CE  24F3               	addwf	prodl,w,c
  4732  0004D0  6ED9               	movwf	fsr2l,c
  4733  0004D2  0E03               	movlw	high _swTimers
  4734  0004D4  20F4               	addwfc	prodh,w,c
  4735  0004D6  6EDA               	movwf	fsr2h,c
  4736  0004D8  5029               	movf	SwTimersInterrupt@timeElapsed,w,c
  4737  0004DA  5EDE               	subwf	postinc2,f,c
  4738  0004DC  502A               	movf	SwTimersInterrupt@timeElapsed+1,w,c
  4739  0004DE  5ADE               	subwfb	postinc2,f,c
  4740  0004E0  502B               	movf	SwTimersInterrupt@timeElapsed+2,w,c
  4741  0004E2  5ADE               	subwfb	postinc2,f,c
  4742  0004E4  502C               	movf	SwTimersInterrupt@timeElapsed+3,w,c
  4743  0004E6  5ADE               	subwfb	postinc2,f,c
  4744                           
  4745                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
  4746  0004E8  5031               	movf	SwTimersInterrupt@i,w,c
  4747  0004EA  0D08               	mullw	8
  4748  0004EC  0E00               	movlw	low _swTimers
  4749  0004EE  24F3               	addwf	prodl,w,c
  4750  0004F0  6ED9               	movwf	fsr2l,c
  4751  0004F2  0E03               	movlw	high _swTimers
  4752  0004F4  20F4               	addwfc	prodh,w,c
  4753  0004F6  6EDA               	movwf	fsr2h,c
  4754  0004F8  502D               	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
  4755  0004FA  5CDE               	subwf	postinc2,w,c
  4756  0004FC  502E               	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
  4757  0004FE  58DE               	subwfb	postinc2,w,c
  4758  000500  502F               	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
  4759  000502  58DE               	subwfb	postinc2,w,c
  4760  000504  5030               	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
  4761  000506  58DE               	subwfb	postinc2,w,c
  4762  000508  B0D8               	btfsc	status,0,c
  4763  00050A  D010               	goto	i2l1597
  4764                           
  4765                           ;sw_timer.c: 313: {
  4766                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
  4767  00050C  5031               	movf	SwTimersInterrupt@i,w,c
  4768  00050E  0D08               	mullw	8
  4769  000510  0E00               	movlw	low _swTimers
  4770  000512  24F3               	addwf	prodl,w,c
  4771  000514  6ED9               	movwf	fsr2l,c
  4772  000516  0E03               	movlw	high _swTimers
  4773  000518  20F4               	addwfc	prodh,w,c
  4774  00051A  6EDA               	movwf	fsr2h,c
  4775  00051C  CFDE F02D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
  4776  000520  CFDE F02E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
  4777  000524  CFDE F02F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
  4778  000528  CFDE F030          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
  4779  00052C                     i2l1597:
  4780  00052C  2A31               	incf	SwTimersInterrupt@i,f,c
  4781  00052E                     i2l1592:
  4782  00052E  5044               	movf	_allocatedTimers,w,c	;volatile
  4783  000530  5C31               	subwf	SwTimersInterrupt@i,w,c
  4784  000532  A0D8               	btfss	status,0,c
  4785  000534  D79B               	goto	i2l1593
  4786                           
  4787                           ;sw_timer.c: 315: }
  4788                           ;sw_timer.c: 316: }
  4789                           ;sw_timer.c: 317: }
  4790                           ;sw_timer.c: 318: }
  4791                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
  4792  000536  C02D  F021         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
  4793  00053A  C02E  F022         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
  4794  00053E  C02F  F023         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
  4795  000542  C030  F024         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
  4796  000546  0012               	return		;funcret
  4797  000548                     __end_of_SwTimersInterrupt:
  4798                           	opt stack 0
  4799                           tosu	equ	0xFFF
  4800                           tosh	equ	0xFFE
  4801                           tosl	equ	0xFFD
  4802                           pclatu	equ	0xFFB
  4803                           pclath	equ	0xFFA
  4804                           tblptru	equ	0xFF8
  4805                           tblptrh	equ	0xFF7
  4806                           tblptrl	equ	0xFF6
  4807                           tablat	equ	0xFF5
  4808                           prodh	equ	0xFF4
  4809                           prodl	equ	0xFF3
  4810                           intcon	equ	0xFF2
  4811                           intcon2	equ	0xFF1
  4812                           intcon3	equ	0xFF0
  4813                           indf0	equ	0xFEF
  4814                           postinc0	equ	0xFEE
  4815                           fsr0h	equ	0xFEA
  4816                           fsr0l	equ	0xFE9
  4817                           wreg	equ	0xFE8
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           indf2	equ	0xFDF
  4821                           postinc2	equ	0xFDE
  4822                           postdec2	equ	0xFDD
  4823                           fsr2h	equ	0xFDA
  4824                           fsr2l	equ	0xFD9
  4825                           status	equ	0xFD8
  4826                           
  4827 ;; *************** function _TMR_GetDeltaTime *****************
  4828 ;; Defined at:
  4829 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  4    8[COMRAM] unsigned long 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;Total ram usage:       24 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    1
  4850 ;; This function calls:
  4851 ;;		_TMR1_ReadTimer
  4852 ;; This function is called by:
  4853 ;;		_SwTimersInterrupt
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text37
  4858  0002DE                     __ptext37:
  4859                           	opt stack 0
  4860  0002DE                     _TMR_GetDeltaTime:
  4861                           	opt stack 20
  4862                           
  4863                           ;sw_timer.c: 90: static uint32_t retVal;
  4864                           ;sw_timer.c: 91: static uint16_t tmrVal;
  4865                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
  4866                           
  4867                           ;incstack = 0
  4868  0002DE  EC5E  F004         	call	_TMR1_ReadTimer	;wreg free
  4869  0002E2  C001  F092         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
  4870  0002E6  C002  F093         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
  4871                           
  4872                           ;sw_timer.c: 95: if (timerOverflow == 1)
  4873  0002EA  0445               	decf	_timerOverflow,w,c	;volatile
  4874  0002EC  A4D8               	btfss	status,2,c
  4875  0002EE  D066               	goto	i2l1525
  4876                           
  4877                           ;sw_timer.c: 96: {
  4878                           ;sw_timer.c: 97: timerOverflow = 0;
  4879  0002F0  0E00               	movlw	0
  4880  0002F2  6E45               	movwf	_timerOverflow,c	;volatile
  4881                           
  4882                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
  4883  0002F4  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4884  0002F8  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4885  0002FC  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4886  000300  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4887  000304  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  4888  000306  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  4889  000308  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  4890  00030A  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  4891  00030C  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  4892  00030E  0E00               	movlw	0
  4893  000310  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  4894  000312  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  4895  000314  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  4896  000316  5040               	movf	_reloadVal,w,c	;volatile
  4897  000318  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
  4898  00031A  5041               	movf	_reloadVal+1,w,c	;volatile
  4899  00031C  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
  4900  00031E  6A13               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),c
  4901  000320  6A14               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),c
  4902  000322  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  4903  000324  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  4904  000326  1E13               	comf	??_TMR_GetDeltaTime+6,f,c
  4905  000328  1E14               	comf	??_TMR_GetDeltaTime+7,f,c
  4906  00032A  2A11               	incf	??_TMR_GetDeltaTime+4,f,c
  4907  00032C  0E00               	movlw	0
  4908  00032E  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  4909  000330  2213               	addwfc	??_TMR_GetDeltaTime+6,f,c
  4910  000332  2214               	addwfc	??_TMR_GetDeltaTime+7,f,c
  4911  000334  0100               	movlb	0	; () banked
  4912  000336  5192               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  4913  000338  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
  4914  00033A  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  4915  00033C  5193               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  4916  00033E  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
  4917  000340  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  4918  000342  0E00               	movlw	0
  4919  000344  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
  4920  000346  6E17               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
  4921  000348  0E00               	movlw	0
  4922  00034A  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  4923  00034C  6E18               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
  4924  00034E  500D               	movf	??_TMR_GetDeltaTime,w,c
  4925  000350  2415               	addwf	??_TMR_GetDeltaTime+8,w,c
  4926  000352  6E19               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),c
  4927  000354  500E               	movf	??_TMR_GetDeltaTime+1,w,c
  4928  000356  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  4929  000358  6E1A               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),c
  4930  00035A  500F               	movf	??_TMR_GetDeltaTime+2,w,c
  4931  00035C  2017               	addwfc	??_TMR_GetDeltaTime+10,w,c
  4932  00035E  6E1B               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),c
  4933  000360  5010               	movf	??_TMR_GetDeltaTime+3,w,c
  4934  000362  2018               	addwfc	??_TMR_GetDeltaTime+11,w,c
  4935  000364  6E1C               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),c
  4936  000366  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  4937  000368  2419               	addwf	??_TMR_GetDeltaTime+12,w,c
  4938  00036A  6E1D               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),c
  4939  00036C  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  4940  00036E  201A               	addwfc	??_TMR_GetDeltaTime+13,w,c
  4941  000370  6E1E               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),c
  4942  000372  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  4943  000374  201B               	addwfc	??_TMR_GetDeltaTime+14,w,c
  4944  000376  6E1F               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),c
  4945  000378  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  4946  00037A  201C               	addwfc	??_TMR_GetDeltaTime+15,w,c
  4947  00037C  6E20               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),c
  4948  00037E  0E00               	movlw	0
  4949  000380  241D               	addwf	??_TMR_GetDeltaTime+16,w,c
  4950  000382  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  4951  000384  0E00               	movlw	0
  4952  000386  201E               	addwfc	??_TMR_GetDeltaTime+17,w,c
  4953  000388  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  4954  00038A  0E01               	movlw	1
  4955  00038C  201F               	addwfc	??_TMR_GetDeltaTime+18,w,c
  4956  00038E  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  4957  000390  0E00               	movlw	0
  4958  000392  2020               	addwfc	??_TMR_GetDeltaTime+19,w,c
  4959  000394  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
  4963  000396  C092  F064         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
  4964  00039A  C093  F065         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
  4965  00039E  6B66               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
  4966  0003A0  6B67               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;sw_timer.c: 100: ticksAdded = 0;
  4970  0003A2  0E00               	movlw	0
  4971  0003A4  6F68               	movwf	_ticksAdded& (0+255),b	;volatile
  4972  0003A6  0E00               	movlw	0
  4973  0003A8  6F69               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
  4974  0003AA  0E00               	movlw	0
  4975  0003AC  6F6A               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
  4976  0003AE  0E00               	movlw	0
  4977  0003B0  6F6B               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;sw_timer.c: 101: reloadVal = 0;
  4981  0003B2  0E00               	movlw	0
  4982  0003B4  6E41               	movwf	_reloadVal+1,c	;volatile
  4983  0003B6  0E00               	movlw	0
  4984  0003B8  6E40               	movwf	_reloadVal,c	;volatile
  4985                           
  4986                           ;sw_timer.c: 102: }
  4987  0003BA  D03E               	goto	i2l1526
  4988  0003BC                     i2l1525:
  4989                           
  4990                           ;sw_timer.c: 103: else
  4991                           ;sw_timer.c: 104: {
  4992                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
  4993                           
  4994                           ; BSR set to: 0
  4995  0003BC  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4996  0003C0  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4997  0003C4  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4998  0003C8  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4999  0003CC  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  5000  0003CE  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  5001  0003D0  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  5002  0003D2  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  5003  0003D4  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  5004  0003D6  0E00               	movlw	0
  5005  0003D8  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  5006  0003DA  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  5007  0003DC  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  5008  0003DE  C040  F011         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
  5009  0003E2  C041  F012         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
  5010  0003E6  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  5011  0003E8  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  5012  0003EA  4A11               	infsnz	??_TMR_GetDeltaTime+4,f,c
  5013  0003EC  2A12               	incf	??_TMR_GetDeltaTime+5,f,c
  5014  0003EE  0100               	movlb	0	; () banked
  5015  0003F0  5192               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5016  0003F2  2611               	addwf	??_TMR_GetDeltaTime+4,f,c
  5017  0003F4  5193               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5018  0003F6  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  5019  0003F8  5011               	movf	??_TMR_GetDeltaTime+4,w,c
  5020  0003FA  240D               	addwf	??_TMR_GetDeltaTime,w,c
  5021  0003FC  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
  5022  0003FE  5012               	movf	??_TMR_GetDeltaTime+5,w,c
  5023  000400  200E               	addwfc	??_TMR_GetDeltaTime+1,w,c
  5024  000402  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
  5025  000404  0E00               	movlw	0
  5026  000406  200F               	addwfc	??_TMR_GetDeltaTime+2,w,c
  5027  000408  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5028  00040A  0E00               	movlw	0
  5029  00040C  2010               	addwfc	??_TMR_GetDeltaTime+3,w,c
  5030  00040E  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5031  000410  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  5032  000412  2413               	addwf	??_TMR_GetDeltaTime+6,w,c
  5033  000414  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5034  000416  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5035  000418  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  5036  00041A  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5037  00041C  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5038  00041E  2015               	addwfc	??_TMR_GetDeltaTime+8,w,c
  5039  000420  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5040  000422  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5041  000424  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  5042  000426  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5043                           
  5044                           ;sw_timer.c: 106: ticksAccounted += retVal;
  5045  000428  5160               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
  5046  00042A  2764               	addwf	_ticksAccounted& (0+255),f,b	;volatile
  5047  00042C  5161               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
  5048  00042E  2365               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
  5049  000430  5162               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
  5050  000432  2366               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
  5051  000434  5163               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
  5052  000436  2367               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
  5053  000438                     i2l1526:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;sw_timer.c: 107: }
  5057                           ;sw_timer.c: 109: return retVal;
  5058                           
  5059                           ; BSR set to: 0
  5060  000438  C060  F009         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
  5061  00043C  C061  F00A         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
  5062  000440  C062  F00B         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
  5063  000444  C063  F00C         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
  5064  000448  0012               	return	
  5065  00044A                     __end_of_TMR_GetDeltaTime:
  5066                           	opt stack 0
  5067                           tosu	equ	0xFFF
  5068                           tosh	equ	0xFFE
  5069                           tosl	equ	0xFFD
  5070                           pclatu	equ	0xFFB
  5071                           pclath	equ	0xFFA
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           intcon	equ	0xFF2
  5079                           intcon2	equ	0xFF1
  5080                           intcon3	equ	0xFF0
  5081                           indf0	equ	0xFEF
  5082                           postinc0	equ	0xFEE
  5083                           fsr0h	equ	0xFEA
  5084                           fsr0l	equ	0xFE9
  5085                           wreg	equ	0xFE8
  5086                           fsr1h	equ	0xFE2
  5087                           fsr1l	equ	0xFE1
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function _TMR1_ReadTimer *****************
  5096 ;; Defined at:
  5097 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  readVal         2    4[COMRAM] unsigned int 
  5102 ;;  readValLow      1    7[COMRAM] unsigned char 
  5103 ;;  readValHigh     1    6[COMRAM] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  2    0[COMRAM] unsigned int 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;Total ram usage:        8 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_TMR_GetDeltaTime
  5123 ;;		_TMR_SwapTimer
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text38
  5128  0008BC                     __ptext38:
  5129                           	opt stack 0
  5130  0008BC                     _TMR1_ReadTimer:
  5131                           	opt stack 21
  5132                           
  5133                           ;tmr1.c: 107: uint16_t readVal;
  5134                           ;tmr1.c: 108: uint8_t readValHigh;
  5135                           ;tmr1.c: 109: uint8_t readValLow;
  5136                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;incstack = 0
  5140  0008BC  82CD               	bsf	4045,1,c	;volatile
  5141                           
  5142                           ;tmr1.c: 113: readValLow = TMR1L;
  5143  0008BE  CFCE F008          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  5144                           
  5145                           ;tmr1.c: 114: readValHigh = TMR1H;
  5146  0008C2  CFCF F007          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  5147                           
  5148                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  5149  0008C6  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
  5150  0008C8  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
  5151  0008CA  5008               	movf	TMR1_ReadTimer@readValLow,w,c
  5152  0008CC  6E05               	movwf	TMR1_ReadTimer@readVal,c
  5153  0008CE  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  5154                           
  5155                           ;tmr1.c: 118: return readVal;
  5156  0008D2  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  5157  0008D6  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  5158  0008DA  0012               	return	
  5159  0008DC                     __end_of_TMR1_ReadTimer:
  5160                           	opt stack 0
  5161                           tosu	equ	0xFFF
  5162                           tosh	equ	0xFFE
  5163                           tosl	equ	0xFFD
  5164                           pclatu	equ	0xFFB
  5165                           pclath	equ	0xFFA
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           intcon2	equ	0xFF1
  5174                           intcon3	equ	0xFF0
  5175                           indf0	equ	0xFEF
  5176                           postinc0	equ	0xFEE
  5177                           fsr0h	equ	0xFEA
  5178                           fsr0l	equ	0xFE9
  5179                           wreg	equ	0xFE8
  5180                           fsr1h	equ	0xFE2
  5181                           fsr1l	equ	0xFE1
  5182                           indf2	equ	0xFDF
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _PIN_MANAGER_IOC *****************
  5190 ;; Defined at:
  5191 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;Total ram usage:        0 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    2
  5212 ;; This function calls:
  5213 ;;		_IOCB4_ISR
  5214 ;; This function is called by:
  5215 ;;		_INTERRUPT_InterruptManager
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text39
  5220  000A5C                     __ptext39:
  5221                           	opt stack 0
  5222  000A5C                     _PIN_MANAGER_IOC:
  5223                           	opt stack 23
  5224                           
  5225                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
  5226                           
  5227                           ;incstack = 0
  5228  000A5C  B862               	btfsc	3938,4,c	;volatile
  5229                           
  5230                           ;pin_manager.c: 114: {
  5231                           ;pin_manager.c: 115: IOCB4_ISR();
  5232  000A5E  EC6E  F004         	call	_IOCB4_ISR	;wreg free
  5233                           
  5234                           ;pin_manager.c: 116: }
  5235                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
  5236  000A62  90F2               	bcf	intcon,0,c	;volatile
  5237  000A64  0012               	return		;funcret
  5238  000A66                     __end_of_PIN_MANAGER_IOC:
  5239                           	opt stack 0
  5240                           tosu	equ	0xFFF
  5241                           tosh	equ	0xFFE
  5242                           tosl	equ	0xFFD
  5243                           pclatu	equ	0xFFB
  5244                           pclath	equ	0xFFA
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           intcon2	equ	0xFF1
  5253                           intcon3	equ	0xFF0
  5254                           indf0	equ	0xFEF
  5255                           postinc0	equ	0xFEE
  5256                           fsr0h	equ	0xFEA
  5257                           fsr0l	equ	0xFE9
  5258                           wreg	equ	0xFE8
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           indf2	equ	0xFDF
  5262                           postinc2	equ	0xFDE
  5263                           postdec2	equ	0xFDD
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function _IOCB4_ISR *****************
  5269 ;; Defined at:
  5270 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		Absolute function
  5293 ;;		_DIO2_ISR_Lora
  5294 ;;		_IOCB4_DefaultInterruptHandler
  5295 ;; This function is called by:
  5296 ;;		_PIN_MANAGER_IOC
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text40
  5301  0008DC                     __ptext40:
  5302                           	opt stack 0
  5303  0008DC                     _IOCB4_ISR:
  5304                           	opt stack 23
  5305                           
  5306                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
  5307                           
  5308                           ;incstack = 0
  5309  0008DC  0100               	movlb	0	; () banked
  5310  0008DE  51F6               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5311  0008E0  11F7               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5312  0008E2  B4D8               	btfsc	status,2,c
  5313  0008E4  0012               	return	
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;pin_manager.c: 130: {
  5317                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
  5318  0008E6  D801               	call	i2u882_48
  5319  0008E8  0012               	return	
  5320  0008EA                     i2u882_48:
  5321  0008EA  0005               	push	
  5322  0008EC  6EFA               	movwf	pclath,c
  5323  0008EE  51F6               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5324  0008F0  6EFD               	movwf	tosl,c
  5325  0008F2  51F7               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5326  0008F4  6EFE               	movwf	tosh,c
  5327  0008F6  6AFF               	clrf	tosu,c
  5328  0008F8  50FA               	movf	pclath,w,c
  5329  0008FA  0012               	return		;indir
  5330  0008FC                     __end_of_IOCB4_ISR:
  5331                           	opt stack 0
  5332                           tosu	equ	0xFFF
  5333                           tosh	equ	0xFFE
  5334                           tosl	equ	0xFFD
  5335                           pclatu	equ	0xFFB
  5336                           pclath	equ	0xFFA
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           intcon2	equ	0xFF1
  5345                           intcon3	equ	0xFF0
  5346                           indf0	equ	0xFEF
  5347                           postinc0	equ	0xFEE
  5348                           fsr0h	equ	0xFEA
  5349                           fsr0l	equ	0xFE9
  5350                           wreg	equ	0xFE8
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function _DIO2_ISR_Lora *****************
  5361 ;; Defined at:
  5362 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_DIO2_ISR_Lora_Init
  5386 ;;		_IOCB4_ISR
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text41
  5391  000A8C                     __ptext41:
  5392                           	opt stack 0
  5393  000A8C                     _DIO2_ISR_Lora:
  5394                           	opt stack 23
  5395                           
  5396                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
  5397                           
  5398                           ;incstack = 0
  5399  000A8C  8447               	bsf	_dioStatus,2,c	;volatile
  5400  000A8E  0012               	return		;funcret
  5401  000A90                     __end_of_DIO2_ISR_Lora:
  5402                           	opt stack 0
  5403                           tosu	equ	0xFFF
  5404                           tosh	equ	0xFFE
  5405                           tosl	equ	0xFFD
  5406                           pclatu	equ	0xFFB
  5407                           pclath	equ	0xFFA
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           intcon2	equ	0xFF1
  5416                           intcon3	equ	0xFF0
  5417                           indf0	equ	0xFEF
  5418                           postinc0	equ	0xFEE
  5419                           fsr0h	equ	0xFEA
  5420                           fsr0l	equ	0xFE9
  5421                           wreg	equ	0xFE8
  5422                           fsr1h	equ	0xFE2
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           postinc2	equ	0xFDE
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  5432 ;; Defined at:
  5433 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		None
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_PIN_MANAGER_Initialize
  5457 ;;		_IOCB4_ISR
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text42
  5462  000AA0                     __ptext42:
  5463                           	opt stack 0
  5464  000AA0                     _IOCB4_DefaultInterruptHandler:
  5465                           	opt stack 23
  5466                           
  5467                           ;incstack = 0
  5468  000AA0  0012               	return		;funcret
  5469  000AA2                     __end_of_IOCB4_DefaultInterruptHandler:
  5470                           	opt stack 0
  5471                           tosu	equ	0xFFF
  5472                           tosh	equ	0xFFE
  5473                           tosl	equ	0xFFD
  5474                           pclatu	equ	0xFFB
  5475                           pclath	equ	0xFFA
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           intcon	equ	0xFF2
  5483                           intcon2	equ	0xFF1
  5484                           intcon3	equ	0xFF0
  5485                           indf0	equ	0xFEF
  5486                           postinc0	equ	0xFEE
  5487                           fsr0h	equ	0xFEA
  5488                           fsr0l	equ	0xFE9
  5489                           wreg	equ	0xFE8
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _INT2_ISR *****************
  5500 ;; Defined at:
  5501 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    2
  5522 ;; This function calls:
  5523 ;;		_INT2_CallBack
  5524 ;; This function is called by:
  5525 ;;		_INTERRUPT_InterruptManager
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text43
  5530  000A66                     __ptext43:
  5531                           	opt stack 0
  5532  000A66                     _INT2_ISR:
  5533                           	opt stack 23
  5534                           
  5535                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
  5536                           
  5537                           ;incstack = 0
  5538  000A66  92F0               	bcf	intcon3,1,c	;volatile
  5539                           
  5540                           ;ext_int.c: 64: INT2_CallBack();
  5541  000A68  EC7E  F004         	call	_INT2_CallBack	;wreg free
  5542  000A6C  0012               	return		;funcret
  5543  000A6E                     __end_of_INT2_ISR:
  5544                           	opt stack 0
  5545                           tosu	equ	0xFFF
  5546                           tosh	equ	0xFFE
  5547                           tosl	equ	0xFFD
  5548                           pclatu	equ	0xFFB
  5549                           pclath	equ	0xFFA
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           intcon2	equ	0xFF1
  5558                           intcon3	equ	0xFF0
  5559                           indf0	equ	0xFEF
  5560                           postinc0	equ	0xFEE
  5561                           fsr0h	equ	0xFEA
  5562                           fsr0l	equ	0xFE9
  5563                           wreg	equ	0xFE8
  5564                           fsr1h	equ	0xFE2
  5565                           fsr1l	equ	0xFE1
  5566                           indf2	equ	0xFDF
  5567                           postinc2	equ	0xFDE
  5568                           postdec2	equ	0xFDD
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _INT2_CallBack *****************
  5574 ;; Defined at:
  5575 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    1
  5596 ;; This function calls:
  5597 ;;		Absolute function
  5598 ;;		_DIO1_ISR_Lora
  5599 ;;		_INT2_DefaultInterruptHandler
  5600 ;; This function is called by:
  5601 ;;		_INT2_ISR
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text44
  5606  0008FC                     __ptext44:
  5607                           	opt stack 0
  5608  0008FC                     _INT2_CallBack:
  5609                           	opt stack 23
  5610                           
  5611                           ;ext_int.c: 71: if(INT2_InterruptHandler)
  5612                           
  5613                           ;incstack = 0
  5614  0008FC  0100               	movlb	0	; () banked
  5615  0008FE  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
  5616  000900  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5617  000902  B4D8               	btfsc	status,2,c
  5618  000904  0012               	return	
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;ext_int.c: 72: {
  5622                           ;ext_int.c: 73: INT2_InterruptHandler();
  5623  000906  D801               	call	i2u880_48
  5624  000908  0012               	return	
  5625  00090A                     i2u880_48:
  5626  00090A  0005               	push	
  5627  00090C  6EFA               	movwf	pclath,c
  5628  00090E  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
  5629  000910  6EFD               	movwf	tosl,c
  5630  000912  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5631  000914  6EFE               	movwf	tosh,c
  5632  000916  6AFF               	clrf	tosu,c
  5633  000918  50FA               	movf	pclath,w,c
  5634  00091A  0012               	return		;indir
  5635  00091C                     __end_of_INT2_CallBack:
  5636                           	opt stack 0
  5637                           tosu	equ	0xFFF
  5638                           tosh	equ	0xFFE
  5639                           tosl	equ	0xFFD
  5640                           pclatu	equ	0xFFB
  5641                           pclath	equ	0xFFA
  5642                           tblptru	equ	0xFF8
  5643                           tblptrh	equ	0xFF7
  5644                           tblptrl	equ	0xFF6
  5645                           tablat	equ	0xFF5
  5646                           prodh	equ	0xFF4
  5647                           prodl	equ	0xFF3
  5648                           intcon	equ	0xFF2
  5649                           intcon2	equ	0xFF1
  5650                           intcon3	equ	0xFF0
  5651                           indf0	equ	0xFEF
  5652                           postinc0	equ	0xFEE
  5653                           fsr0h	equ	0xFEA
  5654                           fsr0l	equ	0xFE9
  5655                           wreg	equ	0xFE8
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _DIO1_ISR_Lora *****************
  5666 ;; Defined at:
  5667 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;Total ram usage:        0 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_DIO1_ISR_Lora_Init
  5691 ;;		_INT2_CallBack
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text45
  5696  000A90                     __ptext45:
  5697                           	opt stack 0
  5698  000A90                     _DIO1_ISR_Lora:
  5699                           	opt stack 23
  5700                           
  5701                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
  5702                           
  5703                           ;incstack = 0
  5704  000A90  8247               	bsf	_dioStatus,1,c	;volatile
  5705  000A92  0012               	return		;funcret
  5706  000A94                     __end_of_DIO1_ISR_Lora:
  5707                           	opt stack 0
  5708                           tosu	equ	0xFFF
  5709                           tosh	equ	0xFFE
  5710                           tosl	equ	0xFFD
  5711                           pclatu	equ	0xFFB
  5712                           pclath	equ	0xFFA
  5713                           tblptru	equ	0xFF8
  5714                           tblptrh	equ	0xFF7
  5715                           tblptrl	equ	0xFF6
  5716                           tablat	equ	0xFF5
  5717                           prodh	equ	0xFF4
  5718                           prodl	equ	0xFF3
  5719                           intcon	equ	0xFF2
  5720                           intcon2	equ	0xFF1
  5721                           intcon3	equ	0xFF0
  5722                           indf0	equ	0xFEF
  5723                           postinc0	equ	0xFEE
  5724                           fsr0h	equ	0xFEA
  5725                           fsr0l	equ	0xFE9
  5726                           wreg	equ	0xFE8
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           postdec2	equ	0xFDD
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736 ;; *************** function _INT2_DefaultInterruptHandler *****************
  5737 ;; Defined at:
  5738 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		None
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_EXT_INT_Initialize
  5762 ;;		_INT2_CallBack
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text46
  5767  000AA2                     __ptext46:
  5768                           	opt stack 0
  5769  000AA2                     _INT2_DefaultInterruptHandler:
  5770                           	opt stack 23
  5771                           
  5772                           ;incstack = 0
  5773  000AA2  0012               	return		;funcret
  5774  000AA4                     __end_of_INT2_DefaultInterruptHandler:
  5775                           	opt stack 0
  5776                           tosu	equ	0xFFF
  5777                           tosh	equ	0xFFE
  5778                           tosl	equ	0xFFD
  5779                           pclatu	equ	0xFFB
  5780                           pclath	equ	0xFFA
  5781                           tblptru	equ	0xFF8
  5782                           tblptrh	equ	0xFF7
  5783                           tblptrl	equ	0xFF6
  5784                           tablat	equ	0xFF5
  5785                           prodh	equ	0xFF4
  5786                           prodl	equ	0xFF3
  5787                           intcon	equ	0xFF2
  5788                           intcon2	equ	0xFF1
  5789                           intcon3	equ	0xFF0
  5790                           indf0	equ	0xFEF
  5791                           postinc0	equ	0xFEE
  5792                           fsr0h	equ	0xFEA
  5793                           fsr0l	equ	0xFE9
  5794                           wreg	equ	0xFE8
  5795                           fsr1h	equ	0xFE2
  5796                           fsr1l	equ	0xFE1
  5797                           indf2	equ	0xFDF
  5798                           postinc2	equ	0xFDE
  5799                           postdec2	equ	0xFDD
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _INT1_ISR *****************
  5805 ;; Defined at:
  5806 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    2
  5827 ;; This function calls:
  5828 ;;		_INT1_CallBack
  5829 ;; This function is called by:
  5830 ;;		_INTERRUPT_InterruptManager
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text47
  5835  000A6E                     __ptext47:
  5836                           	opt stack 0
  5837  000A6E                     _INT1_ISR:
  5838                           	opt stack 23
  5839                           
  5840                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  5841                           
  5842                           ;incstack = 0
  5843  000A6E  90F0               	bcf	intcon3,0,c	;volatile
  5844                           
  5845                           ;ext_int.c: 38: INT1_CallBack();
  5846  000A70  EC8E  F004         	call	_INT1_CallBack	;wreg free
  5847  000A74  0012               	return		;funcret
  5848  000A76                     __end_of_INT1_ISR:
  5849                           	opt stack 0
  5850                           tosu	equ	0xFFF
  5851                           tosh	equ	0xFFE
  5852                           tosl	equ	0xFFD
  5853                           pclatu	equ	0xFFB
  5854                           pclath	equ	0xFFA
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           intcon2	equ	0xFF1
  5863                           intcon3	equ	0xFF0
  5864                           indf0	equ	0xFEF
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _INT1_CallBack *****************
  5879 ;; Defined at:
  5880 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    1
  5901 ;; This function calls:
  5902 ;;		Absolute function
  5903 ;;		_DIO0_ISR_Lora
  5904 ;;		_INT1_DefaultInterruptHandler
  5905 ;; This function is called by:
  5906 ;;		_INT1_ISR
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text48
  5911  00091C                     __ptext48:
  5912                           	opt stack 0
  5913  00091C                     _INT1_CallBack:
  5914                           	opt stack 23
  5915                           
  5916                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  5917                           
  5918                           ;incstack = 0
  5919  00091C  0100               	movlb	0	; () banked
  5920  00091E  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
  5921  000920  11FB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5922  000922  B4D8               	btfsc	status,2,c
  5923  000924  0012               	return	
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;ext_int.c: 46: {
  5927                           ;ext_int.c: 47: INT1_InterruptHandler();
  5928  000926  D801               	call	i2u878_48
  5929  000928  0012               	return	
  5930  00092A                     i2u878_48:
  5931  00092A  0005               	push	
  5932  00092C  6EFA               	movwf	pclath,c
  5933  00092E  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
  5934  000930  6EFD               	movwf	tosl,c
  5935  000932  51FB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  5936  000934  6EFE               	movwf	tosh,c
  5937  000936  6AFF               	clrf	tosu,c
  5938  000938  50FA               	movf	pclath,w,c
  5939  00093A  0012               	return		;indir
  5940  00093C                     __end_of_INT1_CallBack:
  5941                           	opt stack 0
  5942                           tosu	equ	0xFFF
  5943                           tosh	equ	0xFFE
  5944                           tosl	equ	0xFFD
  5945                           pclatu	equ	0xFFB
  5946                           pclath	equ	0xFFA
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           intcon2	equ	0xFF1
  5955                           intcon3	equ	0xFF0
  5956                           indf0	equ	0xFEF
  5957                           postinc0	equ	0xFEE
  5958                           fsr0h	equ	0xFEA
  5959                           fsr0l	equ	0xFE9
  5960                           wreg	equ	0xFE8
  5961                           fsr1h	equ	0xFE2
  5962                           fsr1l	equ	0xFE1
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _DIO0_ISR_Lora *****************
  5971 ;; Defined at:
  5972 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_DIO0_ISR_Lora_Init
  5996 ;;		_INT1_CallBack
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text49
  6001  000A94                     __ptext49:
  6002                           	opt stack 0
  6003  000A94                     _DIO0_ISR_Lora:
  6004                           	opt stack 23
  6005                           
  6006                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
  6007                           
  6008                           ;incstack = 0
  6009  000A94  8047               	bsf	_dioStatus,0,c	;volatile
  6010  000A96  0012               	return		;funcret
  6011  000A98                     __end_of_DIO0_ISR_Lora:
  6012                           	opt stack 0
  6013                           tosu	equ	0xFFF
  6014                           tosh	equ	0xFFE
  6015                           tosl	equ	0xFFD
  6016                           pclatu	equ	0xFFB
  6017                           pclath	equ	0xFFA
  6018                           tblptru	equ	0xFF8
  6019                           tblptrh	equ	0xFF7
  6020                           tblptrl	equ	0xFF6
  6021                           tablat	equ	0xFF5
  6022                           prodh	equ	0xFF4
  6023                           prodl	equ	0xFF3
  6024                           intcon	equ	0xFF2
  6025                           intcon2	equ	0xFF1
  6026                           intcon3	equ	0xFF0
  6027                           indf0	equ	0xFEF
  6028                           postinc0	equ	0xFEE
  6029                           fsr0h	equ	0xFEA
  6030                           fsr0l	equ	0xFE9
  6031                           wreg	equ	0xFE8
  6032                           fsr1h	equ	0xFE2
  6033                           fsr1l	equ	0xFE1
  6034                           indf2	equ	0xFDF
  6035                           postinc2	equ	0xFDE
  6036                           postdec2	equ	0xFDD
  6037                           fsr2h	equ	0xFDA
  6038                           fsr2l	equ	0xFD9
  6039                           status	equ	0xFD8
  6040                           
  6041 ;; *************** function _INT1_DefaultInterruptHandler *****************
  6042 ;; Defined at:
  6043 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		None
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_EXT_INT_Initialize
  6067 ;;		_INT1_CallBack
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text50
  6072  000AA4                     __ptext50:
  6073                           	opt stack 0
  6074  000AA4                     _INT1_DefaultInterruptHandler:
  6075                           	opt stack 23
  6076                           
  6077                           ;incstack = 0
  6078  000AA4  0012               	return		;funcret
  6079  000AA6                     __end_of_INT1_DefaultInterruptHandler:
  6080                           	opt stack 0
  6081                           tosu	equ	0xFFF
  6082                           tosh	equ	0xFFE
  6083                           tosl	equ	0xFFD
  6084                           pclatu	equ	0xFFB
  6085                           pclath	equ	0xFFA
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           prodh	equ	0xFF4
  6091                           prodl	equ	0xFF3
  6092                           intcon	equ	0xFF2
  6093                           intcon2	equ	0xFF1
  6094                           intcon3	equ	0xFF0
  6095                           indf0	equ	0xFEF
  6096                           postinc0	equ	0xFEE
  6097                           fsr0h	equ	0xFEA
  6098                           fsr0l	equ	0xFE9
  6099                           wreg	equ	0xFE8
  6100                           fsr1h	equ	0xFE2
  6101                           fsr1l	equ	0xFE1
  6102                           indf2	equ	0xFDF
  6103                           postinc2	equ	0xFDE
  6104                           postdec2	equ	0xFDD
  6105                           fsr2h	equ	0xFDA
  6106                           fsr2l	equ	0xFD9
  6107                           status	equ	0xFD8
  6108                           tosu	equ	0xFFF
  6109                           tosh	equ	0xFFE
  6110                           tosl	equ	0xFFD
  6111                           pclatu	equ	0xFFB
  6112                           pclath	equ	0xFFA
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           intcon	equ	0xFF2
  6120                           intcon2	equ	0xFF1
  6121                           intcon3	equ	0xFF0
  6122                           indf0	equ	0xFEF
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136                           	psect	text51
  6137  000000                     __ptext51:
  6138                           	opt stack 0
  6139                           tosu	equ	0xFFF
  6140                           tosh	equ	0xFFE
  6141                           tosl	equ	0xFFD
  6142                           pclatu	equ	0xFFB
  6143                           pclath	equ	0xFFA
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           intcon	equ	0xFF2
  6151                           intcon2	equ	0xFF1
  6152                           intcon3	equ	0xFF0
  6153                           indf0	equ	0xFEF
  6154                           postinc0	equ	0xFEE
  6155                           fsr0h	equ	0xFEA
  6156                           fsr0l	equ	0xFE9
  6157                           wreg	equ	0xFE8
  6158                           fsr1h	equ	0xFE2
  6159                           fsr1l	equ	0xFE1
  6160                           indf2	equ	0xFDF
  6161                           postinc2	equ	0xFDE
  6162                           postdec2	equ	0xFDD
  6163                           fsr2h	equ	0xFDA
  6164                           fsr2l	equ	0xFD9
  6165                           status	equ	0xFD8
  6166                           
  6167                           	psect	rparam
  6168  0000                     tosu	equ	0xFFF
  6169                           tosh	equ	0xFFE
  6170                           tosl	equ	0xFFD
  6171                           pclatu	equ	0xFFB
  6172                           pclath	equ	0xFFA
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           intcon2	equ	0xFF1
  6181                           intcon3	equ	0xFF0
  6182                           indf0	equ	0xFEF
  6183                           postinc0	equ	0xFEE
  6184                           fsr0h	equ	0xFEA
  6185                           fsr0l	equ	0xFE9
  6186                           wreg	equ	0xFE8
  6187                           fsr1h	equ	0xFE2
  6188                           fsr1l	equ	0xFE1
  6189                           indf2	equ	0xFDF
  6190                           postinc2	equ	0xFDE
  6191                           postdec2	equ	0xFDD
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196                           	psect	temp
  6197  000048                     btemp:
  6198                           	opt stack 0
  6199  000048                     	ds	12
  6200  0000                     wtemp0	set	btemp
  6201  0000                     wtemp1	set	btemp+2
  6202  0000                     wtemp2	set	btemp+4
  6203  0000                     wtemp3	set	btemp+6
  6204  0000                     wtemp4	set	btemp+8
  6205  0000                     wtemp5	set	btemp+10
  6206  0000                     wtemp6	set	btemp+1
  6207  0000                     ttemp0	set	btemp
  6208  0000                     ttemp1	set	btemp+3
  6209  0000                     ttemp2	set	btemp+6
  6210  0000                     ttemp3	set	btemp+9
  6211  0000                     ltemp0	set	btemp
  6212  0000                     ltemp1	set	btemp+4
  6213  0000                     ltemp2	set	btemp+8
  6214                           tosu	equ	0xFFF
  6215                           tosh	equ	0xFFE
  6216                           tosl	equ	0xFFD
  6217                           pclatu	equ	0xFFB
  6218                           pclath	equ	0xFFA
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           prodh	equ	0xFF4
  6224                           prodl	equ	0xFF3
  6225                           intcon	equ	0xFF2
  6226                           intcon2	equ	0xFF1
  6227                           intcon3	equ	0xFF0
  6228                           indf0	equ	0xFEF
  6229                           postinc0	equ	0xFEE
  6230                           fsr0h	equ	0xFEA
  6231                           fsr0l	equ	0xFE9
  6232                           wreg	equ	0xFE8
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         2344
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160     15     160
    BANK1           256      0     255
    BANK2           256      0     248
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S823$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), NULL(NULL[0]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 2
		 -> dataresult(BANK0[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    S1968$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    S823$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S823$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    S283$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    S283$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> UpdateCfList@frequency(COMRAM[4]), ComputeMic@mic(COMRAM[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK0[16]), 
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@computedMic(COMRAM[4]), Channels(BANK2[224]), loRa.activationParameters.applicationEui(BANK1[8]), 
		 -> loRa.activationParameters.deviceEui(BANK1[8]), macBuffer(BIGRAM[271]), loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), 
		 -> AESEncodeLoRa@useKey(COMRAM[16]), RadioConfiguration(BANK0[54]), AESCmac@x(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK0[16]), Channels(BANK2[224]), macBuffer(BIGRAM[271]), 
		 -> loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->_SwTimersInterrupt
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_strncat
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2479
                                              8 BANK0      7     7      0
                       _EUSART1_Read
                      _EUSART1_Write
                  _SYSTEM_Initialize
                            _strncat
 ---------------------------------------------------------------------------------
 (1) _strncat                                              8     2      6     432
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1933
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     333
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           8     8      0    1295
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1295
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     940
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (8) _TMR_ISR_lora                                         2     2      0     940
                                             49 COMRAM     2     2      0
                  _SwTimersInterrupt
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (9) _TMR_SwapTimer                                        2     0      2     624
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     355
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _SwTimersInterrupt                                   17    13      4     316
                                             32 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (10) _TMR_GetDeltaTime                                   24    20      4      69
                                              8 COMRAM    24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO2_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO1_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO0_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _strncat

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     61E      37       40.2%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A2      12        0.0%
DATA                 0      0     9C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 05 15:11:10 2020

                    __end_of_DIO3_ISR_Lora_Init 0A9E                                               _n 008A  
            __size_of_IOCB4_SetInterruptHandler 000A                                    _TMR_ISR_lora 06A8  
                    ?_IOCB4_SetInterruptHandler 00E1                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            _DIO2_ISR_Lora_Init 09BC                                 _timer1ReloadVal 00F4  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                 _INT1_CallBack 091C                             ?_DIO2_ISR_Lora_Init 0001  
                            __size_of_IOCB4_ISR 0020                                            l2454 0998  
                                          l3281 064E                                            l2705 00B6  
                                          l3282 0648                                            l2706 00F4  
                                          l3284 066E                                            l2708 02D6  
                                          l3285 065E                                            l2709 02B4  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            u9940 0692  
                                          _TMR1 000FCE                                            _TMR5 000F4F  
                                          _WPUB 000F61                          ??_LORAWAN_PlatformInit 00E3  
                                 _INT2_CallBack 08FC                                   _EUSART1_Write 0A08  
                                          _loRa 0100                                            _main 0086  
                                 ?_EUSART1_Read 0001                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 0048  
                                 __CFG_BORV$190 000000               __size_of_INT2_SetInterruptHandler 000A  
                     ?_INT2_SetInterruptHandler 00E1                                            prodh 000FF4  
                                          prodl 000FF3                                            start 007E  
                               _timer5ReloadVal 00F0                                   __CFG_IESO$OFF 000000  
                    ??_TMR1_SetInterruptHandler 00E3                          __size_of_TMR_SwapTimer 0044  
                                  ___param_bank 000000                            ??_DIO2_ISR_Lora_Init 00E3  
                      __size_of_SystemTimerInit 0006                                __end_of_INT1_ISR 0A76  
                              __end_of_INT2_ISR 0A6E                  __size_of_OSCILLATOR_Initialize 000E  
                 __end_of_OSCILLATOR_Initialize 0A08                                           l10363 0A0C  
                                         l11919 00E4                                           l11939 02A4  
                                         ?_main 0001               __end_of_IOCB4_SetInterruptHandler 0A2A  
                                         _T1CON 000FCD                                           u12415 016C  
                                         u12425 018A                                           u12435 01A8  
                                         u12445 0236                                           u12470 02BA  
                                         u12455 0252                                           _LATC2 007C5A  
                                         _LATD3 007C63                                           _T5CON 000F4E  
                                __CFG_DEBUG$OFF 000000                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TMR5H 000F50  
                                         _TMR5L 000F4F                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         _TXREG 000FAD                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 098A                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 0001                                  __CFG_EBTRB$OFF 000000  
                                         _datax 0097                                           __rcon 0042  
                       __end_of_PIN_MANAGER_IOC 0A66                  ??_INT1_DefaultInterruptHandler 0001  
                                         _randx 01FB                              __CFG_MCLRE$EXTMCLR 000000  
                                         main@j 00EC                          _UpdateJoinSuccessState 000000  
                                ?_INT2_CallBack 0001                        _INT1_SetInterruptHandler 0A34  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 080A  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ltemp0 0048                                           ltemp1 004C  
                                         ltemp2 0050                                  ??_EUSART1_Read 00E1  
                                         ttemp0 0048                                           ttemp1 004B  
                                         ttemp2 004E                                           ttemp3 0051  
                                         status 000FD8                                           wtemp0 0048  
                                         wtemp1 004A                                           wtemp2 004C  
                                         wtemp3 004E                                           wtemp4 0050  
                                         wtemp5 0052                                           wtemp6 0049  
                                __CFG_HFOFST$ON 000000                                 __end_of_strncat 06A8  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 095A  
                                __CFG_PBADEN$ON 000000                 ??_IOCB4_DefaultInterruptHandler 0001  
                               _TMR5_Initialize 093C                                 __initialization 0548  
                   __size_of_DIO1_ISR_Lora_Init 0010                      __end_of_EUSART1_Initialize 079A  
                                  __end_of_main 02DE                               ?_TMR_GetDeltaTime 0009  
                             __end_of_IOCB4_ISR 08FC                     ?_INTERRUPT_InterruptManager 0001  
                            ??_TMR_GetDeltaTime 000D                                          ??_main 00E9  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 000E  
                                 _TMR_SwapTimer 079A                  _LORAWAN_ReceiveWindow1Callback 000000  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T5GCON 000F4D                         TMR1_WriteTimer@timerVal 0001  
                                        i2l2240 0038                                          i2l2242 0044  
                _LORAWAN_ReceiveWindow2Callback 000000                                          i2l2171 06FE  
                                        i2l2244 0050                                          i2l1525 03BC  
                                        i2l1526 0438                                          i2l1535 07A6  
                                        i2l2247 005C                                  __CFG_WDTEN$OFF 000000  
                                        i2l1592 052E                                          i2l2528 096C  
                                        i2l1593 046C                                          i2l1595 04C8  
                                        i2l1597 052C                                          i2l8617 07BA  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TRISC2 007CA2                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                      __end_of_DIO0_ISR_Lora_Init 09EC  
                                        _STable FE67                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 0AA0           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 0A9E                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 00E1                                          clear_0 05F0  
                                        clear_1 0602                                          clear_2 060E  
                                        clear_3 061A                                          clear_4 0626  
                                        clear_5 0632                ??_EUSART1_SetOverrunErrorHandler 00E3  
               ?_EUSART1_SetOverrunErrorHandler 00E1                     __size_of_DIO5_ISR_Lora_Init 0002  
          __end_of_INT2_DefaultInterruptHandler 0AA4           __size_of_INT2_DefaultInterruptHandler 0002  
                  _INT2_DefaultInterruptHandler 0AA2                                    __pdataCOMRAM 0054  
                               ??_INT1_CallBack 0001                               ??_SystemTimerInit 00E1  
                                ?_TMR_SwapTimer 0009                                    __mediumconst FE66  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_INT2_CallBack 0001  
                               ??_EUSART1_Write 00E1        TMR1_SetInterruptHandler@InterruptHandler 00E1  
     IOCB4_SetInterruptHandler@InterruptHandler 00E1        INT2_SetInterruptHandler@InterruptHandler 00E1  
      INT1_SetInterruptHandler@InterruptHandler 00E1                                ?_PIN_MANAGER_IOC 0001  
                       __end_of_TMR1_WriteTimer 0976                                       ??_strncat 00E7  
                 __size_of_INTERRUPT_Initialize 0004                           __end_of_TMR1_CallBack 08BC  
                              ?_TMR1_Initialize 0001                         __end_of_TMR5_Initialize 095A  
                             _SYSTEM_Initialize 0834                                      __accesstop 0060  
                       __end_of__initialization 0638                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                _maxPayloadSize FF77                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                      ___inthi_sp 0BA8  
                                  __pidataBANK0 0A80                                    __pidataBANK1 0A84  
                                  __pidataBANK2 099C                                    __pidataBANK3 087C  
                           ??_SYSTEM_Initialize 00E3                                _bitStatusbefore1 0088  
                              _bitStatusbefore2 0086                                _bitStatusbefore3 0084  
                              _bitStatusbefore4 0082                                _bitStatusbefore5 0080  
                              _bitStatusbefore6 007E                                _bitStatusbefore7 007C  
                    __end_of_DIO4_ISR_Lora_Init 0A9C                                       ?_TMR1_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                 _spreadingFactor FF8E  
         __end_of_IOCB4_DefaultInterruptHandler 0AA2          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 0AA0                          _AutomaticReplyCallback 000000  
                   ??_IOCB4_SetInterruptHandler 00E3                            __end_of_EUSART1_Read 099C  
                   __size_of_EXT_INT_Initialize 002A                                  _datatobesolved 008C  
                            _DIO3_ISR_Lora_Init 0A9C                         __size_of_TMR1_ReadTimer 0020  
              __end_of_INT2_SetInterruptHandler 0A34                   ?_INT2_DefaultInterruptHandler 0001  
                     __end_of_SYSTEM_Initialize 085A                               ??_SPI2_Initialize 00E1  
                           ?_DIO3_ISR_Lora_Init 0001                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                 __CFG_PLLCFG$OFF 000000  
                        __end_of_maxPayloadSize FF7F                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                              SwTimersInterrupt@i 0031  
                        __size_of_DIO0_ISR_Lora 0004                                      _dataresult 00DF  
                        __size_of_DIO1_ISR_Lora 0004                                      _bitStatus1 0078  
                                    _bitStatus2 0076                                      _bitStatus3 0074  
                                    _bitStatus4 0072                                      _bitStatus5 0070  
                                    _bitStatus6 006E                                      _bitStatus7 006C  
               __end_of_EUSART1_SetErrorHandler 0A5C                              __CFG_CCP2MX$PORTC1 000000  
                        __size_of_DIO2_ISR_Lora 0004                                      ??_TMR1_ISR 0034  
                            __CFG_CCP3MX$PORTB5 000000                            ??_DIO3_ISR_Lora_Init 00E1  
                             _TMR_ISR_Lora_Init 09AC          __end_of_EUSART1_SetFramingErrorHandler 0A52  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0A48  
                               ??_TMR_SwapTimer 000B                              ?_TMR_ISR_Lora_Init 0001  
                    ??_INT1_SetInterruptHandler 00E3                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                           ??_TMR_ISR_Lora_Init 00E3                               __end_of_bandwidth FF8E  
                              ?_TMR1_WriteTimer 0001                           TMR_SwapTimer@timerVal 0009  
                              ?_TMR5_Initialize 0001                       _IOCB4_SetInterruptHandler 0A20  
                     _AckRetransmissionCallback 000000                   __size_of_LORAWAN_PlatformInit 0022  
                                _ticksAccounted 0064                         __end_of_spreadingFactor FF95  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                       __end_of_TMR_ISR_Lora_Init 09BC  
                   __size_of_DIO2_ISR_Lora_Init 0010                                         _devAddr 00FC  
                                       __pcinit 0548                                         _appSKey 03A0  
                                       __ramtop 1000                        TMR1_ReadTimer@readValLow 0008  
                                       __ptext0 0086                                         __ptext1 063E  
                                       __ptext2 0834                                         __ptext3 093C  
                                       __ptext4 07DE                                         __ptext5 09EC  
                                       __ptext6 0700                                         __ptext7 09FA  
                                       __ptext8 085A                                         __ptext9 09AC  
                                 _DIO0_ISR_Lora 0A94                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _IOCB4_ISR 08DC                       TMR1_ReadTimer@readValHigh 0007  
                                     _T1CONbits 000FCD                                         _counter 0096  
                         _OSCILLATOR_Initialize 09FA                                         _readurt 0200  
                  __end_of_macEndDevCmdReplyLen FF9C               __size_of_TMR1_SetInterruptHandler 000A  
                                 _DIO1_ISR_Lora 0A90                              _EUSART1_Initialize 0754  
                      ??_PIN_MANAGER_Initialize 00E3                       ?_TMR1_SetInterruptHandler 00E1  
                                       _nwkSKey 03B0                                       _T5CONbits 000F4E  
                     __size_of_TMR_GetDeltaTime 016C                                   _DIO2_ISR_Lora 0A8C  
                    __size_of_SYSTEM_Initialize 0026                                         _strncat 063E  
                          end_of_initialization 0638                        _INT2_SetInterruptHandler 0A2A  
                           ?_EUSART1_Initialize 0001                           _RADIO_WatchdogTimeout 000000  
                ??_INT2_DefaultInterruptHandler 0001                                      _modulation FF67  
                     _LORAWAN_LinkCheckCallback 000000                     _EUSART1_OverrunErrorHandler 01F7  
                    __end_of_DIO1_ISR_Lora_Init 09DC                                      _ticksAdded 0068  
                                       postdec2 000FDD                                 _SystemTimerInit 0A76  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0012                            ??_EUSART1_Initialize 00E3  
                            _DIO0_ISR_Lora_Init 09DC                                  ?_DIO0_ISR_Lora 0001  
                         _INT1_InterruptHandler 00FA                                       _PORTBbits 000F81  
                  SwTimersInterrupt@timeElapsed 0029                                      ?_IOCB4_ISR 0001  
                                ?_DIO1_ISR_Lora 0001                                  _TMR1_ReadTimer 08BC  
                                    _txPower433 FF9C                                      _txPower868 FFA2  
                           ?_DIO0_ISR_Lora_Init 0001                                  ?_DIO2_ISR_Lora 0001  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 00E1  
                                _localDioStatus 0046                                    _EUSART1_Read 098A  
                             __size_of_INT1_ISR 0008                               __size_of_INT2_ISR 0008  
                          ??_DIO0_ISR_Lora_Init 00E3                                  __end_of_STable FF67  
                    __size_of_TMR_ISR_Lora_Init 0010                    __end_of_INTERRUPT_Initialize 0A8C  
                    __end_of_DIO5_ISR_Lora_Init 0A9A                                   ?_TMR_ISR_lora 0001  
                                 __pidataCOMRAM 0A7C                               __size_of_TMR1_ISR 0014  
                        ?_OSCILLATOR_Initialize 0001                          __end_of_TMR1_ReadTimer 08DC  
                               _SPI2_Initialize 09EC                             start_initialization 0548  
                            _DIO4_ISR_Lora_Init 0A9A                 __size_of_PIN_MANAGER_Initialize 0054  
                         __end_of_INT1_CallBack 093C                           __end_of_INT2_CallBack 091C  
                         __end_of_EUSART1_Write 0A16                             ?_DIO4_ISR_Lora_Init 0001  
                       __end_of_SystemTimerInit 0A7C                             TMR_SwapTimer@oldVal 0090  
                      __size_of_PIN_MANAGER_IOC 000A                             TMR_SwapTimer@retVal 008E  
                      __size_of_TMR1_Initialize 002C                            _macEndDevCmdReplyLen FF95  
                                ??_TMR_ISR_lora 0032                                 ??_DIO0_ISR_Lora 0001  
                                   __pdataBANK0 00FC                                     __pdataBANK1 01FB  
                                   __pdataBANK2 02E8                                     __pdataBANK3 03A0  
        SwTimersInterrupt@ticksToNextTimerEvent 002D                            ??_DIO4_ISR_Lora_Init 00E1  
                    __end_of_EXT_INT_Initialize 0834                              _RADIO_RxFSKTimeout 000000  
                        __size_of_TMR1_CallBack 0020                                 ??_DIO1_ISR_Lora 0001  
                        TMR_GetDeltaTime@retVal 0060                                 ?_TMR1_ReadTimer 0001  
                                   ??_IOCB4_ISR 0001                          TMR_GetDeltaTime@tmrVal 0092  
                                   __pbssBIGRAM 03C0                                 ??_DIO2_ISR_Lora 0001  
                                   __pbssCOMRAM 003C                      __end_of_DefaultChannels433 FFD2  
                    __end_of_DefaultChannels868 FFFC                                   __pcstackBANK0 00E1  
                              _TMR_GetDeltaTime 02DE                 _UnconfirmedTransmissionCallback 000000  
                                     _aesBuffer 00CF                ??_EUSART1_SetFramingErrorHandler 00E3  
               ?_EUSART1_SetFramingErrorHandler 00E1                           _INT2_InterruptHandler 00F8  
                                     _bandwidth FF87                                       __pnvBANK0 00F0  
                                     __pnvBANK1 01F5                                       _character 0094  
                        _PIN_MANAGER_Initialize 0700                                       _bitStatus 007A  
                                     _macBuffer 08CF                                       _dioStatus 0047  
                             _SwTimersInterrupt 044A                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 0A20                                   __pmediumconst FE66  
                                   _dataxsolved 0095                         __end_of_SPI2_Initialize 09FA  
                            ?_SwTimersInterrupt 0021                     __size_of_DIO3_ISR_Lora_Init 0002  
                  ??_INTERRUPT_InterruptManager 0034                                __CFG_PRICLKEN$ON 000000  
                  __end_of_LORAWAN_PlatformInit 087C                      ??_INT2_SetInterruptHandler 00E3  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                           ??_SwTimersInterrupt 0025                               _DutyCycleCallback 000000  
                          _EUSART1_ErrorHandler 01F5                           __end_of_TMR_SwapTimer 07DE  
                       _EUSART1_SetErrorHandler 0A52                                     strncat@from 00E3  
                                   strncat@size 00E5                                        ?_strncat 00E1  
                          _INTERRUPT_Initialize 0A88                                   _TMR1_CallBack 089C  
                                      _INT1_ISR 0A6E                                        _INT2_ISR 0A66  
                                      _IOCBbits 000F62         EUSART1_SetErrorHandler@interruptHandler 00E1  
             __size_of_INT1_SetInterruptHandler 000A                            __end_of_rxWindowSize FF87  
                     ?_INT1_SetInterruptHandler 00E1                                ?_SystemTimerInit 0001  
                                     _reloadVal 0040                                        _PIE1bits 000F9D  
                     __end_of_SwTimersInterrupt 0548                        __size_of_TMR1_WriteTimer 001C  
           __size_of_INTERRUPT_InterruptManager 0076                      __end_of_DIO2_ISR_Lora_Init 09CC  
                                      _PIR1bits 000F9E                                        _PIR5bits 000F7E  
                                      i2u880_48 090A                                        i2u882_48 08EA  
                                      i2u884_48 08AA                        __size_of_TMR5_Initialize 001E  
                                      i2u878_48 092A                                        _RCONbits 000FD0  
                                     _rxPayload 003C                                __CFG_WDTPS$32768 000000  
                                      _SSP2CON1 000F6C                                        _TMR1_ISR 0976  
                                      _SSP2STAT 000F6D                               ??_PIN_MANAGER_IOC 0001  
                             ??_TMR1_Initialize 00E3                              _DIO1_ISR_Lora_Init 09CC  
                                     main@delay 00EE                                        _Channels 0208  
                           ?_DIO1_ISR_Lora_Init 0001                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                                       copy_data0 055C  
                                     copy_data1 057C                                       copy_data2 059C  
                                     copy_data3 05BC                                       copy_data4 05DC  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                          __end_of_TMR_ISR_lora 0700                                        __Hrparam 0000  
                                      __Lrparam 0000                            ??_DIO1_ISR_Lora_Init 00E3  
                            __CFG_BOREN$SBORDIS 000000                           TMR1_ReadTimer@readVal 0005  
                     _ticksToScheduledInterrupt 0054                               __CFG_P2BMX$PORTD2 000000  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 00E1  
                   __size_of_EUSART1_Initialize 0046                        _TMR1_SetInterruptHandler 0A16  
                        _IOCB4_InterruptHandler 00F6                                     _radioBuffer 07C0  
                         _TMR1_InterruptHandler 00F2                       ??_EUSART1_SetErrorHandler 00E3  
                   _EUSART1_DefaultErrorHandler 000000                                  _rxWindowOffset FF6F  
                                      _dataxstr 03C0                                 _allocatedTimers 0044  
                ?_IOCB4_DefaultInterruptHandler 0001                              _DIO5_ISR_Lora_Init 0A98  
                                      __ptext10 0A16                                        __ptext11 0A76  
                                      __ptext20 080A                                        __ptext12 0A98  
                                      __ptext21 0A2A                                        __ptext13 0A9A  
                                    _T1GCONbits 000FCC                                        __ptext30 0976  
                                      __ptext22 0A34                                        __ptext14 0A9C  
                                      __ptext31 089C                                        __ptext23 0754  
                                      __ptext15 09BC                                        __ptext40 08DC  
                                      __ptext32 0A9E                                        __ptext24 0A3E  
                                      __ptext16 0A20                                        __ptext41 0A8C  
                                      __ptext33 06A8                                        __ptext25 0A48  
                                      __ptext17 09CC                                        __ptext50 0AA4  
                                      __ptext42 0AA0                                        __ptext34 079A  
                                      __ptext26 0A52                                        __ptext18 09DC  
                                      __ptext51 0000                                        __ptext43 0A66  
                                      __ptext35 095A                                        __ptext27 0A08  
                                      __ptext19 0A88                                        __ptext44 08FC  
                                      __ptext36 044A                                        __ptext28 098A  
                                      __ptext45 0A90                                        __ptext37 02DE  
                                      __ptext46 0AA2                                        __ptext38 08BC  
                                      __ptext47 0A6E                                        __ptext39 0A5C  
                                      __ptext48 091C                                        __ptext49 0A94  
                                  _SSP2CON1bits 000F6C                             GenerateSubkey@F7103 02E8  
                              __size_of_strncat 006A                             ?_DIO5_ISR_Lora_Init 0001  
                                 __size_of_main 0258                                      _T5GCONbits 000F4D  
                          _LORAWAN_PlatformInit 085A                                 _FskSyncWordBuff FFFC  
                                 _timerOverflow 0045                      __size_of_SwTimersInterrupt 00FE  
                   __size_of_DIO0_ISR_Lora_Init 0010  EUSART1_SetOverrunErrorHandler@interruptHandler 00E1  
                      __end_of_TMR_GetDeltaTime 044A                                        _swTimers 0300  
                              ??_TMR1_ReadTimer 0003              __end_of_INTERRUPT_InterruptManager 007E  
                    _INTERRUPT_InterruptManager 0008                               ??_TMR1_WriteTimer 0003  
                   _EUSART1_FramingErrorHandler 01F9                                    _SSP2STATbits 000F6D  
                          ??_DIO5_ISR_Lora_Init 00E1            __end_of_INT1_DefaultInterruptHandler 0AA6  
         __size_of_INT1_DefaultInterruptHandler 0002                    _INT1_DefaultInterruptHandler 0AA4  
                        __end_of_rxWindowOffset FF77                               ??_TMR5_Initialize 00E1  
                            __end_of_modulation FF6F                                   __roundCounter 0043  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 00E1  
                               ??_TMR1_CallBack 0034                              _EXT_INT_Initialize 080A  
                                      intlevel2 0000                           ?_LORAWAN_PlatformInit 0001  
                       ?_PIN_MANAGER_Initialize 0001                              _DefaultChannels433 FFA8  
                            _DefaultChannels868 FFD2                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 0A48         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0A3E                                      _RCSTA1bits 000FAB  
                                     strncat@cp 00E7                                       strncat@to 00E1  
                            __end_of_txPower433 FFA2                              __end_of_txPower868 FFA8  
                        __size_of_INT1_CallBack 0020  EUSART1_SetFramingErrorHandler@interruptHandler 00E1  
                        __size_of_INT2_CallBack 0020                     __size_of_DIO4_ISR_Lora_Init 0002  
                        __size_of_EUSART1_Write 000E                              _eusart1RxLastError 0098  
                         __end_of_DIO0_ISR_Lora 0A98                            ??_EXT_INT_Initialize 00E3  
                                  _rxWindowSize FF7F                   ?_INT1_DefaultInterruptHandler 0001  
                         __end_of_DIO1_ISR_Lora 0A94                __end_of_INT1_SetInterruptHandler 0A3E  
                         __size_of_TMR_ISR_lora 0058                               __CFG_T3CMX$PORTC0 000000  
                         __end_of_DIO2_ISR_Lora 0A90                         __end_of_FskSyncWordBuff FFFF  
                __end_of_PIN_MANAGER_Initialize 0754                               __CFG_FOSC$INTIO67 000000  
                               _PIN_MANAGER_IOC 0A5C                                 _TMR1_Initialize 07DE  
                            _RadioConfiguration 0099  
