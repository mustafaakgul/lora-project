

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 21 16:14:22 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 1.45
    90                           ; Generated 16/11/2017 GMT
    91                           ; 
    92                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18LF46K22 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   125  0000                     
   126 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   127  0000                     
   128 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   129  0000                     
   130 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   131  0000                     
   132 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   133  0000                     
   134 ;; Function _AckRetransmissionCallback is unused but had its address taken
   135  0000                     
   136 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   137  0000                     
   138 ;; Function _AutomaticReplyCallback is unused but had its address taken
   139  0000                     
   140 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   141  0000                     
   142 ;; Function _DutyCycleCallback is unused but had its address taken
   143  0000                     
   144                           	psect	idataBANK0
   145  0000'                    __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _randx
   149  0000' 0001               	dw	1
   150  0002' 0000               	dw	0
   151                           
   152                           ;initializer for _devAddr
   153  0004' 5E47               	dw	24135
   154  0006' 3DEF               	dw	15855
   155                           
   156                           ;initializer for _ticksToScheduledInterrupt
   157  0008' FFFF               	dw	65535
   158  000A' FFFF               	dw	65535
   159                           
   160                           	psect	idataBANK2
   161  0000'                    __pidataBANK2:
   162                           	opt stack 0
   163                           
   164                           ;initializer for GenerateSubkey@F7103
   165  0000' 00                 	db	0
   166  0001' 00                 	db	0
   167  0002' 00                 	db	0
   168  0003' 00                 	db	0
   169  0004' 00                 	db	0
   170  0005' 00                 	db	0
   171  0006' 00                 	db	0
   172  0007' 00                 	db	0
   173  0008' 00                 	db	0
   174  0009' 00                 	db	0
   175  000A' 00                 	db	0
   176  000B' 00                 	db	0
   177  000C' 00                 	db	0
   178  000D' 00                 	db	0
   179  000E' 00                 	db	0
   180  000F' 87                 	db	135
   181                           
   182                           	psect	idataBANK3
   183  0000'                    __pidataBANK3:
   184                           	opt stack 0
   185                           
   186                           ;initializer for _appSKey
   187  0000' 96                 	db	150
   188  0001' 23                 	db	35
   189  0002' 5A                 	db	90
   190  0003' 1F                 	db	31
   191  0004' 9A                 	db	154
   192  0005' E1                 	db	225
   193  0006' 60                 	db	96
   194  0007' 36                 	db	54
   195  0008' 81                 	db	129
   196  0009' C4                 	db	196
   197  000A' E4                 	db	228
   198  000B' B5                 	db	181
   199  000C' 54                 	db	84
   200  000D' C3                 	db	195
   201  000E' CA                 	db	202
   202  000F' B5                 	db	181
   203                           
   204                           ;initializer for _nwkSKey
   205  0010' CB                 	db	203
   206  0011' 1E                 	db	30
   207  0012' 88                 	db	136
   208  0013' 5D                 	db	93
   209  0014' 5D                 	db	93
   210  0015' F1                 	db	241
   211  0016' 12                 	db	18
   212  0017' D5                 	db	213
   213  0018' 08                 	db	8
   214  0019' CC                 	db	204
   215  001A' B9                 	db	185
   216  001B' D1                 	db	209
   217  001C' D4                 	db	212
   218  001D' 4B                 	db	75
   219  001E' 1E                 	db	30
   220  001F' DF                 	db	223
   221                           
   222                           	psect	mediumconst
   223  0000'                    __pmediumconst:
   224                           	opt stack 0
   225  0000' 00                 	db	0
   226  0001'                    _STable:
   227                           	opt stack 0
   228  0001' 63                 	db	99
   229  0002' 7C                 	db	124
   230  0003' 77                 	db	119
   231  0004' 7B                 	db	123
   232  0005' F2                 	db	242
   233  0006' 6B                 	db	107
   234  0007' 6F                 	db	111
   235  0008' C5                 	db	197
   236  0009' 30                 	db	48
   237  000A' 01                 	db	1
   238  000B' 67                 	db	103
   239  000C' 2B                 	db	43
   240  000D' FE                 	db	254
   241  000E' D7                 	db	215
   242  000F' AB                 	db	171
   243  0010' 76                 	db	118
   244  0011' CA                 	db	202
   245  0012' 82                 	db	130
   246  0013' C9                 	db	201
   247  0014' 7D                 	db	125
   248  0015' FA                 	db	250
   249  0016' 59                 	db	89
   250  0017' 47                 	db	71
   251  0018' F0                 	db	240
   252  0019' AD                 	db	173
   253  001A' D4                 	db	212
   254  001B' A2                 	db	162
   255  001C' AF                 	db	175
   256  001D' 9C                 	db	156
   257  001E' A4                 	db	164
   258  001F' 72                 	db	114
   259  0020' C0                 	db	192
   260  0021' B7                 	db	183
   261  0022' FD                 	db	253
   262  0023' 93                 	db	147
   263  0024' 26                 	db	38
   264  0025' 36                 	db	54
   265  0026' 3F                 	db	63
   266  0027' F7                 	db	247
   267  0028' CC                 	db	204
   268  0029' 34                 	db	52
   269  002A' A5                 	db	165
   270  002B' E5                 	db	229
   271  002C' F1                 	db	241
   272  002D' 71                 	db	113
   273  002E' D8                 	db	216
   274  002F' 31                 	db	49
   275  0030' 15                 	db	21
   276  0031' 04                 	db	4
   277  0032' C7                 	db	199
   278  0033' 23                 	db	35
   279  0034' C3                 	db	195
   280  0035' 18                 	db	24
   281  0036' 96                 	db	150
   282  0037' 05                 	db	5
   283  0038' 9A                 	db	154
   284  0039' 07                 	db	7
   285  003A' 12                 	db	18
   286  003B' 80                 	db	128
   287  003C' E2                 	db	226
   288  003D' EB                 	db	235
   289  003E' 27                 	db	39
   290  003F' B2                 	db	178
   291  0040' 75                 	db	117
   292  0041' 09                 	db	9
   293  0042' 83                 	db	131
   294  0043' 2C                 	db	44
   295  0044' 1A                 	db	26
   296  0045' 1B                 	db	27
   297  0046' 6E                 	db	110
   298  0047' 5A                 	db	90
   299  0048' A0                 	db	160
   300  0049' 52                 	db	82
   301  004A' 3B                 	db	59
   302  004B' D6                 	db	214
   303  004C' B3                 	db	179
   304  004D' 29                 	db	41
   305  004E' E3                 	db	227
   306  004F' 2F                 	db	47
   307  0050' 84                 	db	132
   308  0051' 53                 	db	83
   309  0052' D1                 	db	209
   310  0053' 00                 	db	0
   311  0054' ED                 	db	237
   312  0055' 20                 	db	32
   313  0056' FC                 	db	252
   314  0057' B1                 	db	177
   315  0058' 5B                 	db	91
   316  0059' 6A                 	db	106
   317  005A' CB                 	db	203
   318  005B' BE                 	db	190
   319  005C' 39                 	db	57
   320  005D' 4A                 	db	74
   321  005E' 4C                 	db	76
   322  005F' 58                 	db	88
   323  0060' CF                 	db	207
   324  0061' D0                 	db	208
   325  0062' EF                 	db	239
   326  0063' AA                 	db	170
   327  0064' FB                 	db	251
   328  0065' 43                 	db	67
   329  0066' 4D                 	db	77
   330  0067' 33                 	db	51
   331  0068' 85                 	db	133
   332  0069' 45                 	db	69
   333  006A' F9                 	db	249
   334  006B' 02                 	db	2
   335  006C' 7F                 	db	127
   336  006D' 50                 	db	80
   337  006E' 3C                 	db	60
   338  006F' 9F                 	db	159
   339  0070' A8                 	db	168
   340  0071' 51                 	db	81
   341  0072' A3                 	db	163
   342  0073' 40                 	db	64
   343  0074' 8F                 	db	143
   344  0075' 92                 	db	146
   345  0076' 9D                 	db	157
   346  0077' 38                 	db	56
   347  0078' F5                 	db	245
   348  0079' BC                 	db	188
   349  007A' B6                 	db	182
   350  007B' DA                 	db	218
   351  007C' 21                 	db	33
   352  007D' 10                 	db	16
   353  007E' FF                 	db	255
   354  007F' F3                 	db	243
   355  0080' D2                 	db	210
   356  0081' CD                 	db	205
   357  0082' 0C                 	db	12
   358  0083' 13                 	db	19
   359  0084' EC                 	db	236
   360  0085' 5F                 	db	95
   361  0086' 97                 	db	151
   362  0087' 44                 	db	68
   363  0088' 17                 	db	23
   364  0089' C4                 	db	196
   365  008A' A7                 	db	167
   366  008B' 7E                 	db	126
   367  008C' 3D                 	db	61
   368  008D' 64                 	db	100
   369  008E' 5D                 	db	93
   370  008F' 19                 	db	25
   371  0090' 73                 	db	115
   372  0091' 60                 	db	96
   373  0092' 81                 	db	129
   374  0093' 4F                 	db	79
   375  0094' DC                 	db	220
   376  0095' 22                 	db	34
   377  0096' 2A                 	db	42
   378  0097' 90                 	db	144
   379  0098' 88                 	db	136
   380  0099' 46                 	db	70
   381  009A' EE                 	db	238
   382  009B' B8                 	db	184
   383  009C' 14                 	db	20
   384  009D' DE                 	db	222
   385  009E' 5E                 	db	94
   386  009F' 0B                 	db	11
   387  00A0' DB                 	db	219
   388  00A1' E0                 	db	224
   389  00A2' 32                 	db	50
   390  00A3' 3A                 	db	58
   391  00A4' 0A                 	db	10
   392  00A5' 49                 	db	73
   393  00A6' 06                 	db	6
   394  00A7' 24                 	db	36
   395  00A8' 5C                 	db	92
   396  00A9' C2                 	db	194
   397  00AA' D3                 	db	211
   398  00AB' AC                 	db	172
   399  00AC' 62                 	db	98
   400  00AD' 91                 	db	145
   401  00AE' 95                 	db	149
   402  00AF' E4                 	db	228
   403  00B0' 79                 	db	121
   404  00B1' E7                 	db	231
   405  00B2' C8                 	db	200
   406  00B3' 37                 	db	55
   407  00B4' 6D                 	db	109
   408  00B5' 8D                 	db	141
   409  00B6' D5                 	db	213
   410  00B7' 4E                 	db	78
   411  00B8' A9                 	db	169
   412  00B9' 6C                 	db	108
   413  00BA' 56                 	db	86
   414  00BB' F4                 	db	244
   415  00BC' EA                 	db	234
   416  00BD' 65                 	db	101
   417  00BE' 7A                 	db	122
   418  00BF' AE                 	db	174
   419  00C0' 08                 	db	8
   420  00C1' BA                 	db	186
   421  00C2' 78                 	db	120
   422  00C3' 25                 	db	37
   423  00C4' 2E                 	db	46
   424  00C5' 1C                 	db	28
   425  00C6' A6                 	db	166
   426  00C7' B4                 	db	180
   427  00C8' C6                 	db	198
   428  00C9' E8                 	db	232
   429  00CA' DD                 	db	221
   430  00CB' 74                 	db	116
   431  00CC' 1F                 	db	31
   432  00CD' 4B                 	db	75
   433  00CE' BD                 	db	189
   434  00CF' 8B                 	db	139
   435  00D0' 8A                 	db	138
   436  00D1' 70                 	db	112
   437  00D2' 3E                 	db	62
   438  00D3' B5                 	db	181
   439  00D4' 66                 	db	102
   440  00D5' 48                 	db	72
   441  00D6' 03                 	db	3
   442  00D7' F6                 	db	246
   443  00D8' 0E                 	db	14
   444  00D9' 61                 	db	97
   445  00DA' 35                 	db	53
   446  00DB' 57                 	db	87
   447  00DC' B9                 	db	185
   448  00DD' 86                 	db	134
   449  00DE' C1                 	db	193
   450  00DF' 1D                 	db	29
   451  00E0' 9E                 	db	158
   452  00E1' E1                 	db	225
   453  00E2' F8                 	db	248
   454  00E3' 98                 	db	152
   455  00E4' 11                 	db	17
   456  00E5' 69                 	db	105
   457  00E6' D9                 	db	217
   458  00E7' 8E                 	db	142
   459  00E8' 94                 	db	148
   460  00E9' 9B                 	db	155
   461  00EA' 1E                 	db	30
   462  00EB' 87                 	db	135
   463  00EC' E9                 	db	233
   464  00ED' CE                 	db	206
   465  00EE' 55                 	db	85
   466  00EF' 28                 	db	40
   467  00F0' DF                 	db	223
   468  00F1' 8C                 	db	140
   469  00F2' A1                 	db	161
   470  00F3' 89                 	db	137
   471  00F4' 0D                 	db	13
   472  00F5' BF                 	db	191
   473  00F6' E6                 	db	230
   474  00F7' 42                 	db	66
   475  00F8' 68                 	db	104
   476  00F9' 41                 	db	65
   477  00FA' 99                 	db	153
   478  00FB' 2D                 	db	45
   479  00FC' 0F                 	db	15
   480  00FD' B0                 	db	176
   481  00FE' 54                 	db	84
   482  00FF' BB                 	db	187
   483  0100' 16                 	db	22
   484  0101'                    __end_of_STable:
   485                           	opt stack 0
   486  0101'                    _modulation:
   487                           	opt stack 0
   488  0101' 01                 	db	1
   489  0102' 01                 	db	1
   490  0103' 01                 	db	1
   491  0104' 01                 	db	1
   492  0105' 01                 	db	1
   493  0106' 01                 	db	1
   494  0107' 01                 	db	1
   495  0108' 00                 	db	0
   496  0109'                    __end_of_modulation:
   497                           	opt stack 0
   498  0109'                    _rxWindowOffset:
   499                           	opt stack 0
   500  0109' DF                 	db	223
   501  010A' CE                 	db	206
   502  010B' C6                 	db	198
   503  010C' C2                 	db	194
   504  010D' BE                 	db	190
   505  010E' BC                 	db	188
   506  010F' F1                 	db	241
   507  0110' FE                 	db	254
   508  0111'                    __end_of_rxWindowOffset:
   509                           	opt stack 0
   510  0111'                    _maxPayloadSize:
   511                           	opt stack 0
   512  0111' 33                 	db	51
   513  0112' 33                 	db	51
   514  0113' 33                 	db	51
   515  0114' 73                 	db	115
   516  0115' F2                 	db	242
   517  0116' F2                 	db	242
   518  0117' F2                 	db	242
   519  0118' 38                 	db	56
   520  0119'                    __end_of_maxPayloadSize:
   521                           	opt stack 0
   522  0119'                    _rxWindowSize:
   523                           	opt stack 0
   524  0119' 08                 	db	8
   525  011A' 0A                 	db	10
   526  011B' 0E                 	db	14
   527  011C' 1A                 	db	26
   528  011D' 31                 	db	49
   529  011E' 58                 	db	88
   530  011F' 3C                 	db	60
   531  0120' 08                 	db	8
   532  0121'                    __end_of_rxWindowSize:
   533                           	opt stack 0
   534  0121'                    _bandwidth:
   535                           	opt stack 0
   536  0121' 07                 	db	7
   537  0122' 07                 	db	7
   538  0123' 07                 	db	7
   539  0124' 07                 	db	7
   540  0125' 07                 	db	7
   541  0126' 07                 	db	7
   542  0127' 08                 	db	8
   543  0128'                    __end_of_bandwidth:
   544                           	opt stack 0
   545  0128'                    _spreadingFactor:
   546                           	opt stack 0
   547  0128' 0C                 	db	12
   548  0129' 0B                 	db	11
   549  012A' 0A                 	db	10
   550  012B' 09                 	db	9
   551  012C' 08                 	db	8
   552  012D' 07                 	db	7
   553  012E' 07                 	db	7
   554  012F'                    __end_of_spreadingFactor:
   555                           	opt stack 0
   556  012F'                    _macEndDevCmdReplyLen:
   557                           	opt stack 0
   558  012F' 01                 	db	1
   559  0130' 02                 	db	2
   560  0131' 01                 	db	1
   561  0132' 02                 	db	2
   562  0133' 03                 	db	3
   563  0134' 02                 	db	2
   564  0135' 01                 	db	1
   565  0136'                    __end_of_macEndDevCmdReplyLen:
   566                           	opt stack 0
   567  0136' 0A                 	db	10
   568  0137' 07                 	db	7
   569  0138' 04                 	db	4
   570  0139' 01                 	db	1
   571  013A' FE                 	db	254
   572  013B' FB                 	db	251
   573  013C'                    __end_of_txPower433:
   574                           	opt stack 0
   575  013C'                    _txPower868:
   576                           	opt stack 0
   577  013C' 14                 	db	20
   578  013D' 0E                 	db	14
   579  013E' 0B                 	db	11
   580  013F' 08                 	db	8
   581  0140' 05                 	db	5
   582  0141' 02                 	db	2
   583  0142'                    __end_of_txPower868:
   584                           	opt stack 0
   585  0142'                    _DefaultChannels433:
   586                           	opt stack 0
   587  0142' B9D8               	dw	47576
   588  0144' 19D1               	dw	6609
   589  0146' 01                 	db	1
   590  0147' 50                 	db	80
   591  0148' 012E               	dw	302
   592  014A' 0000               	dw	0
   593  014C' 0000               	dw	0
   594  014E' 01                 	db	1
   595  014F' FF                 	db	255
   596  0150' C718               	dw	50968
   597  0152' 19D4               	dw	6612
   598  0154' 01                 	db	1
   599  0155' 50                 	db	80
   600  0156' 012E               	dw	302
   601  0158' 0000               	dw	0
   602  015A' 0000               	dw	0
   603  015C' 01                 	db	1
   604  015D' FF                 	db	255
   605  015E' D458               	dw	54360
   606  0160' 19D7               	dw	6615
   607  0162' 01                 	db	1
   608  0163' 50                 	db	80
   609  0164' 012E               	dw	302
   610  0166' 0000               	dw	0
   611  0168' 0000               	dw	0
   612  016A' 01                 	db	1
   613  016B' FF                 	db	255
   614  016C'                    __end_of_DefaultChannels433:
   615                           	opt stack 0
   616  016C'                    _DefaultChannels868:
   617                           	opt stack 0
   618  016C' 27A0               	dw	10144
   619  016E' 33BE               	dw	13246
   620  0170' 01                 	db	1
   621  0171' 50                 	db	80
   622  0172' 012E               	dw	302
   623  0174' 0000               	dw	0
   624  0176' 0000               	dw	0
   625  0178' 01                 	db	1
   626  0179' FF                 	db	255
   627  017A' 34E0               	dw	13536
   628  017C' 33C1               	dw	13249
   629  017E' 01                 	db	1
   630  017F' 50                 	db	80
   631  0180' 012E               	dw	302
   632  0182' 0000               	dw	0
   633  0184' 0000               	dw	0
   634  0186' 01                 	db	1
   635  0187' FF                 	db	255
   636  0188' 4220               	dw	16928
   637  018A' 33C4               	dw	13252
   638  018C' 01                 	db	1
   639  018D' 50                 	db	80
   640  018E' 012E               	dw	302
   641  0190' 0000               	dw	0
   642  0192' 0000               	dw	0
   643  0194' 01                 	db	1
   644  0195' FF                 	db	255
   645  0196'                    __end_of_DefaultChannels868:
   646                           	opt stack 0
   647  0196'                    _FskSyncWordBuff:
   648                           	opt stack 0
   649  0196' C1                 	db	193
   650  0197' 94                 	db	148
   651  0198' C1                 	db	193
   652  0199'                    __end_of_FskSyncWordBuff:
   653                           	opt stack 0
   654  0199' 00                 	db	0	; dummy byte at the end
   655  0000                     
   656                           	psect	nvBANK0
   657  0000'                    __pnvBANK0:
   658                           	opt stack 0
   659  0000'                    _timer5ReloadVal:
   660                           	opt stack 0
   661  0000'                    	ds	2
   662  0002'                    _TMR1_InterruptHandler:
   663                           	opt stack 0
   664  0002'                    	ds	2
   665  0004'                    _timer1ReloadVal:
   666                           	opt stack 0
   667  0004'                    	ds	2
   668  0006'                    _IOCB4_InterruptHandler:
   669                           	opt stack 0
   670  0006'                    	ds	2
   671  0008'                    _INT2_InterruptHandler:
   672                           	opt stack 0
   673  0008'                    	ds	2
   674  000A'                    _INT1_InterruptHandler:
   675                           	opt stack 0
   676  000A'                    	ds	2
   677  000C'                    _eusart1TxBufferRemaining:
   678                           	opt stack 0
   679  000C'                    	ds	1
   680                           
   681                           	psect	nvBANK1
   682  0000'                    __pnvBANK1:
   683                           	opt stack 0
   684  0000'                    _EUSART1_ErrorHandler:
   685                           	opt stack 0
   686  0000'                    	ds	2
   687  0002'                    _EUSART1_OverrunErrorHandler:
   688                           	opt stack 0
   689  0002'                    	ds	2
   690  0004'                    _EUSART1_FramingErrorHandler:
   691                           	opt stack 0
   692  0004'                    	ds	2
   693  0006'                    _EUSART1_RxDefaultInterruptHandler:
   694                           	opt stack 0
   695  0006'                    	ds	2
   696  0008'                    _EUSART1_TxDefaultInterruptHandler:
   697                           	opt stack 0
   698  0008'                    	ds	2
   699  0000                     _TMR5	set	3919
   700  0000                     _T5GCONbits	set	3917
   701  0000                     _T5CONbits	set	3918
   702  0000                     _T5CON	set	3918
   703  0000                     _TMR5L	set	3919
   704  0000                     _TMR5H	set	3920
   705  0000                     _T5GCON	set	3917
   706  0000                     _ANSELA	set	3896
   707  0000                     _ANSELE	set	3900
   708  0000                     _ANSELB	set	3897
   709  0000                     _ANSELC	set	3898
   710  0000                     _ANSELD	set	3899
   711  0000                     _TMR1	set	4046
   712  0000                     _TXREG	set	4013
   713  0000                     _PIR5bits	set	3966
   714  0000                     _T1GCONbits	set	4044
   715  0000                     _T1CONbits	set	4045
   716  0000                     _T1CON	set	4045
   717  0000                     _TMR1L	set	4046
   718  0000                     _TMR1H	set	4047
   719  0000                     _T1GCON	set	4044
   720  0000                     _RCREG1	set	4014
   721  0000                     _RCSTA1bits	set	4011
   722  0000                     _TXREG1	set	4013
   723  0000                     _TXSTA1bits	set	4012
   724  0000                     _SPBRGH1	set	4016
   725  0000                     _SPBRG1	set	4015
   726  0000                     _TXSTA1	set	4012
   727  0000                     _RCSTA1	set	4011
   728  0000                     _BAUDCON1	set	4024
   729  0000                     _SSP2STATbits	set	3949
   730  0000                     _SSP2BUF	set	3951
   731  0000                     _SSP2CON1bits	set	3948
   732  0000                     _SSP2ADD	set	3950
   733  0000                     _SSP2CON1	set	3948
   734  0000                     _SSP2STAT	set	3949
   735  0000                     _IOCBbits	set	3938
   736  0000                     _WPUB	set	3937
   737  0000                     _TRISD	set	3989
   738  0000                     _TRISC	set	3988
   739  0000                     _TRISB	set	3987
   740  0000                     _TRISA	set	3986
   741  0000                     _TRISE	set	3990
   742  0000                     _LATC	set	3979
   743  0000                     _LATB	set	3978
   744  0000                     _LATA	set	3977
   745  0000                     _LATD	set	3980
   746  0000                     _LATE	set	3981
   747  0000                     _OSCTUNE	set	3995
   748  0000                     _OSCCON2	set	4050
   749  0000                     _OSCCON	set	4051
   750  0000                     _PIR1bits	set	3998
   751  0000                     _PIE1bits	set	3997
   752  0000                     _RCONbits	set	4048
   753  0000                     _INTCON2bits	set	4081
   754  0000                     _INTCON3bits	set	4080
   755  0000                     _INTCONbits	set	4082
   756  0000                     _PORTBbits	set	3969
   757  0000                     _LATD3	set	31843
   758  0000                     _LATC2	set	31834
   759  0000                     _TRISC2	set	31906
   760                           
   761                           ; #config settings
   762  0000                     
   763                           	psect	cinit
   764  0000'                    __pcinit:
   765                           	opt stack 0
   766  0000'                    start_initialization:
   767                           	opt stack 0
   768  0000'                    __initialization:
   769                           	opt stack 0
   770                           
   771                           ; Initialize objects allocated to BANK3 (32 bytes)
   772                           ; load TBLPTR registers with __pidataBANK3
   773  0000' 0E00'              	movlw	low __pidataBANK3
   774  0002' 6EF6               	movwf	tblptrl,c
   775  0004' 0E00'              	movlw	high __pidataBANK3
   776  0006' 6EF7               	movwf	tblptrh,c
   777  0008' 0E00'              	movlw	low (__pidataBANK3 shr (0+16))
   778  000A' 6EF8               	movwf	tblptru,c
   779  000C' EE00' F000'        	lfsr	0,__pdataBANK3
   780  0010' EE20 F020          	lfsr	2,32
   781  0014'                    copy_data0:
   782  0014' 0009               	tblrd		*+
   783  0016' CFF5 FFEE          	movff	tablat,postinc0
   784  001A' 50DD               	movf	postdec2,w,c
   785  001C' 50D9               	movf	fsr2l,w,c
   786  001E' E1FA               	bnz	copy_data0
   787                           
   788                           ; Initialize objects allocated to BANK2 (16 bytes)
   789                           ; load TBLPTR registers with __pidataBANK2
   790  0020' 0E00'              	movlw	low __pidataBANK2
   791  0022' 6EF6               	movwf	tblptrl,c
   792  0024' 0E00'              	movlw	high __pidataBANK2
   793  0026' 6EF7               	movwf	tblptrh,c
   794  0028' 0E00'              	movlw	low (__pidataBANK2 shr (0+16))
   795  002A' 6EF8               	movwf	tblptru,c
   796  002C' EE00' F000'        	lfsr	0,__pdataBANK2
   797  0030' EE20 F010          	lfsr	2,16
   798  0034'                    copy_data1:
   799  0034' 0009               	tblrd		*+
   800  0036' CFF5 FFEE          	movff	tablat,postinc0
   801  003A' 50DD               	movf	postdec2,w,c
   802  003C' 50D9               	movf	fsr2l,w,c
   803  003E' E1FA               	bnz	copy_data1
   804                           
   805                           ; Initialize objects allocated to BANK0 (12 bytes)
   806                           ; load TBLPTR registers with __pidataBANK0
   807  0040' 0E00'              	movlw	low __pidataBANK0
   808  0042' 6EF6               	movwf	tblptrl,c
   809  0044' 0E00'              	movlw	high __pidataBANK0
   810  0046' 6EF7               	movwf	tblptrh,c
   811  0048' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   812  004A' 6EF8               	movwf	tblptru,c
   813  004C' EE00' F000'        	lfsr	0,__pdataBANK0
   814  0050' EE20 F00C          	lfsr	2,12
   815  0054'                    copy_data2:
   816  0054' 0009               	tblrd		*+
   817  0056' CFF5 FFEE          	movff	tablat,postinc0
   818  005A' 50DD               	movf	postdec2,w,c
   819  005C' 50D9               	movf	fsr2l,w,c
   820  005E' E1FA               	bnz	copy_data2
   821                           
   822                           ; Clear objects allocated to BIGRAM (3542 bytes)
   823  0060' EE00' F000'        	lfsr	0,__pbssBIGRAM
   824  0064' EE2D F0D6          	lfsr	2,3542
   825  0068'                    clear_0:
   826  0068' 6AEE               	clrf	postinc0,c
   827  006A' 50DD               	movf	postdec2,w,c
   828  006C' 50D9               	movf	fsr2l,w,c
   829  006E' E1FC               	bnz	clear_0
   830  0070' 50DA               	movf	fsr2h,w,c
   831  0072' E1FA               	bnz	clear_0
   832                           
   833                           ; Clear objects allocated to BANK4 (100 bytes)
   834  0074' EE00' F000'        	lfsr	0,__pbssBANK4
   835  0078' 0E64               	movlw	100
   836  007A'                    clear_1:
   837  007A' 6AEE               	clrf	postinc0,c
   838  007C' 06E8               	decf	wreg,f,c
   839  007E' E1FD               	bnz	clear_1
   840                           
   841                           ; Clear objects allocated to BANK3 (160 bytes)
   842  0080' EE00' F000'        	lfsr	0,__pbssBANK3
   843  0084' 0EA0               	movlw	160
   844  0086'                    clear_2:
   845  0086' 6AEE               	clrf	postinc0,c
   846  0088' 06E8               	decf	wreg,f,c
   847  008A' E1FD               	bnz	clear_2
   848                           
   849                           ; Clear objects allocated to BANK2 (240 bytes)
   850  008C' EE00' F000'        	lfsr	0,__pbssBANK2
   851  0090' 0EF0               	movlw	240
   852  0092'                    clear_3:
   853  0092' 6AEE               	clrf	postinc0,c
   854  0094' 06E8               	decf	wreg,f,c
   855  0096' E1FD               	bnz	clear_3
   856                           
   857                           ; Clear objects allocated to BANK1 (245 bytes)
   858  0098' EE00' F000'        	lfsr	0,__pbssBANK1
   859  009C' 0EF5               	movlw	245
   860  009E'                    clear_4:
   861  009E' 6AEE               	clrf	postinc0,c
   862  00A0' 06E8               	decf	wreg,f,c
   863  00A2' E1FD               	bnz	clear_4
   864                           
   865                           ; Clear objects allocated to BANK0 (118 bytes)
   866  00A4' EE00' F000'        	lfsr	0,__pbssBANK0
   867  00A8' 0E76               	movlw	118
   868  00AA'                    clear_5:
   869  00AA' 6AEE               	clrf	postinc0,c
   870  00AC' 06E8               	decf	wreg,f,c
   871  00AE' E1FD               	bnz	clear_5
   872                           
   873                           ; Clear objects allocated to COMRAM (14 bytes)
   874  00B0' EE00' F000'        	lfsr	0,__pbssCOMRAM
   875  00B4' 0E0E               	movlw	14
   876  00B6'                    clear_6:
   877  00B6' 6AEE               	clrf	postinc0,c
   878  00B8' 06E8               	decf	wreg,f,c
   879  00BA' E1FD               	bnz	clear_6
   880  00BC'                    end_of_initialization:
   881                           	opt stack 0
   882  00BC'                    __end_of__initialization:
   883                           	opt stack 0
   884  00BC' 0100               	movlb	0
   885  00BE' EF00' F000'        	goto	_main	;jump to C main() function
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec2	equ	0xFDD
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           
   896                           	psect	bssCOMRAM
   897  0000'                    __pbssCOMRAM:
   898                           	opt stack 0
   899  0000'                    _rxPayload:
   900                           	opt stack 0
   901  0000'                    	ds	4
   902  0004'                    _datatobesolved:
   903                           	opt stack 0
   904  0004'                    	ds	2
   905  0006'                    _reloadVal:
   906                           	opt stack 0
   907  0006'                    	ds	2
   908  0008'                    _eusart1RxStatusBuffer:
   909                           	opt stack 0
   910  0008'                    	ds	1
   911  0009'                    _eusart1RxTail:
   912                           	opt stack 0
   913  0009'                    	ds	1
   914  000A'                    _eusart1RxHead:
   915                           	opt stack 0
   916  000A'                    	ds	1
   917  000B'                    __rcon:
   918                           	opt stack 0
   919  000B'                    	ds	1
   920  000C'                    _allocatedTimers:
   921                           	opt stack 0
   922  000C'                    	ds	1
   923  000D'                    _localDioStatus:
   924                           	opt stack 0
   925  000D'                    	ds	1
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec2	equ	0xFDD
   933                           fsr2h	equ	0xFDA
   934                           fsr2l	equ	0xFD9
   935                           
   936                           	psect	bssBANK0
   937  0000'                    __pbssBANK0:
   938                           	opt stack 0
   939  0000'                    TMR_GetDeltaTime@retVal:
   940                           	opt stack 0
   941  0000'                    	ds	4
   942  0004'                    _ticksAccounted:
   943                           	opt stack 0
   944  0004'                    	ds	4
   945  0008'                    _ticksAdded:
   946                           	opt stack 0
   947  0008'                    	ds	4
   948  000C'                    _counterx:
   949                           	opt stack 0
   950  000C'                    	ds	2
   951  000E'                    _bitStatus7:
   952                           	opt stack 0
   953  000E'                    	ds	2
   954  0010'                    _bitStatus6:
   955                           	opt stack 0
   956  0010'                    	ds	2
   957  0012'                    _bitStatus5:
   958                           	opt stack 0
   959  0012'                    	ds	2
   960  0014'                    _bitStatus4:
   961                           	opt stack 0
   962  0014'                    	ds	2
   963  0016'                    _bitStatus3:
   964                           	opt stack 0
   965  0016'                    	ds	2
   966  0018'                    _bitStatus2:
   967                           	opt stack 0
   968  0018'                    	ds	2
   969  001A'                    _bitStatus1:
   970                           	opt stack 0
   971  001A'                    	ds	2
   972  001C'                    _bitStatus:
   973                           	opt stack 0
   974  001C'                    	ds	2
   975  001E'                    _bitStatusbefore7:
   976                           	opt stack 0
   977  001E'                    	ds	2
   978  0020'                    _bitStatusbefore6:
   979                           	opt stack 0
   980  0020'                    	ds	2
   981  0022'                    _bitStatusbefore5:
   982                           	opt stack 0
   983  0022'                    	ds	2
   984  0024'                    _bitStatusbefore4:
   985                           	opt stack 0
   986  0024'                    	ds	2
   987  0026'                    _bitStatusbefore3:
   988                           	opt stack 0
   989  0026'                    	ds	2
   990  0028'                    _bitStatusbefore2:
   991                           	opt stack 0
   992  0028'                    	ds	2
   993  002A'                    _bitStatusbefore1:
   994                           	opt stack 0
   995  002A'                    	ds	2
   996  002C'                    _counterinterrupt:
   997                           	opt stack 0
   998  002C'                    	ds	2
   999  002E'                    TMR_SwapTimer@retVal:
  1000                           	opt stack 0
  1001  002E'                    	ds	2
  1002  0030'                    TMR_SwapTimer@oldVal:
  1003                           	opt stack 0
  1004  0030'                    	ds	2
  1005  0032'                    TMR_GetDeltaTime@tmrVal:
  1006                           	opt stack 0
  1007  0032'                    	ds	2
  1008  0034'                    _datax:
  1009                           	opt stack 0
  1010  0034'                    	ds	1
  1011  0035'                    _eusart1RxLastError:
  1012                           	opt stack 0
  1013  0035'                    	ds	1
  1014  0036'                    _eusart1RxCount:
  1015                           	opt stack 0
  1016  0036'                    	ds	1
  1017  0037'                    _eusart1RxBuffer:
  1018                           	opt stack 0
  1019  0037'                    	ds	1
  1020  0038'                    _eusart1TxBuffer:
  1021                           	opt stack 0
  1022  0038'                    	ds	1
  1023  0039'                    _eusart1TxTail:
  1024                           	opt stack 0
  1025  0039'                    	ds	1
  1026  003A'                    _eusart1TxHead:
  1027                           	opt stack 0
  1028  003A'                    	ds	1
  1029  003B'                    __roundCounter:
  1030                           	opt stack 0
  1031  003B'                    	ds	1
  1032  003C'                    _timerOverflow:
  1033                           	opt stack 0
  1034  003C'                    	ds	1
  1035  003D'                    _dioStatus:
  1036                           	opt stack 0
  1037  003D'                    	ds	1
  1038  003E'                    _RadioConfiguration:
  1039                           	opt stack 0
  1040  003E'                    	ds	54
  1041  0074'                    _dataresult:
  1042                           	opt stack 0
  1043  0074'                    	ds	2
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec2	equ	0xFDD
  1051                           fsr2h	equ	0xFDA
  1052                           fsr2l	equ	0xFD9
  1053                           
  1054                           	psect	dataBANK0
  1055  0000'                    __pdataBANK0:
  1056                           	opt stack 0
  1057  0000'                    _randx:
  1058                           	opt stack 0
  1059  0000'                    	ds	4
  1060  0004'                    _devAddr:
  1061                           	opt stack 0
  1062  0004'                    	ds	4
  1063  0008'                    _ticksToScheduledInterrupt:
  1064                           	opt stack 0
  1065  0008'                    	ds	4
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec2	equ	0xFDD
  1073                           fsr2h	equ	0xFDA
  1074                           fsr2l	equ	0xFD9
  1075                           
  1076                           	psect	bssBANK1
  1077  0000'                    __pbssBANK1:
  1078                           	opt stack 0
  1079  0000'                    _loRa:
  1080                           	opt stack 0
  1081  0000'                    	ds	245
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           postdec2	equ	0xFDD
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           
  1092                           	psect	bssBANK2
  1093  0000'                    __pbssBANK2:
  1094                           	opt stack 0
  1095  0000'                    _Channels:
  1096                           	opt stack 0
  1097  0000'                    	ds	224
  1098  00E0'                    _aesBuffer:
  1099                           	opt stack 0
  1100  00E0'                    	ds	16
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec2	equ	0xFDD
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           
  1111                           	psect	dataBANK2
  1112  0000'                    __pdataBANK2:
  1113                           	opt stack 0
  1114  0000'                    GenerateSubkey@F7103:
  1115                           	opt stack 0
  1116  0000'                    	ds	16
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec2	equ	0xFDD
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           
  1127                           	psect	bssBANK3
  1128  0000'                    __pbssBANK3:
  1129                           	opt stack 0
  1130  0000'                    _swTimers:
  1131                           	opt stack 0
  1132  0000'                    	ds	160
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec2	equ	0xFDD
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           
  1143                           	psect	dataBANK3
  1144  0000'                    __pdataBANK3:
  1145                           	opt stack 0
  1146  0000'                    _appSKey:
  1147                           	opt stack 0
  1148  0000'                    	ds	16
  1149  0010'                    _nwkSKey:
  1150                           	opt stack 0
  1151  0010'                    	ds	16
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec2	equ	0xFDD
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           
  1162                           	psect	bssBANK4
  1163  0000'                    __pbssBANK4:
  1164                           	opt stack 0
  1165  0000'                    _sub:
  1166                           	opt stack 0
  1167  0000'                    	ds	100
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec2	equ	0xFDD
  1175                           fsr2h	equ	0xFDA
  1176                           fsr2l	equ	0xFD9
  1177                           
  1178                           	psect	bssBIGRAM
  1179  0000'                    __pbssBIGRAM:
  1180                           	opt stack 0
  1181  0000'                    _dataxstr:
  1182                           	opt stack 0
  1183  0000'                    	ds	3000
  1184  0BB8'                    _radioBuffer:
  1185                           	opt stack 0
  1186  0BB8'                    	ds	271
  1187  0CC7'                    _macBuffer:
  1188                           	opt stack 0
  1189  0CC7'                    	ds	271
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec2	equ	0xFDD
  1197                           fsr2h	equ	0xFDA
  1198                           fsr2l	equ	0xFD9
  1199                           
  1200                           	psect	cstackBANK0
  1201  0000'                    __pcstackBANK0:
  1202                           	opt stack 0
  1203  0000'                    EUSART1_Write@txData:
  1204                           	opt stack 0
  1205  0000'                    INT1_SetInterruptHandler@InterruptHandler:
  1206                           	opt stack 0
  1207  0000'                    INT2_SetInterruptHandler@InterruptHandler:
  1208                           	opt stack 0
  1209  0000'                    IOCB4_SetInterruptHandler@InterruptHandler:
  1210                           	opt stack 0
  1211  0000'                    EUSART1_SetFramingErrorHandler@interruptHandler:
  1212                           	opt stack 0
  1213  0000'                    EUSART1_SetOverrunErrorHandler@interruptHandler:
  1214                           	opt stack 0
  1215  0000'                    EUSART1_SetErrorHandler@interruptHandler:
  1216                           	opt stack 0
  1217  0000'                    EUSART1_SetTxInterruptHandler@interruptHandler:
  1218                           	opt stack 0
  1219  0000'                    EUSART1_SetRxInterruptHandler@interruptHandler:
  1220                           	opt stack 0
  1221  0000'                    TMR1_SetInterruptHandler@InterruptHandler:
  1222                           	opt stack 0
  1223  0000'                    substring@s:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x0
  1227  0000'                    	ds	2
  1228  0002'                    substring@sub:
  1229                           	opt stack 0
  1230                           
  1231                           ; 2 bytes @ 0x2
  1232  0002'                    	ds	2
  1233  0004'                    substring@p:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x4
  1237  0004'                    	ds	2
  1238  0006'                    substring@l:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0x6
  1242  0006'                    	ds	2
  1243  0008'                    ??_substring:
  1244                           
  1245                           ; 1 bytes @ 0x8
  1246  0008'                    	ds	4
  1247  000C'                    substring@c:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0xC
  1251  000C'                    	ds	2
  1252  000E'                    ??_main:
  1253                           
  1254                           ; 1 bytes @ 0xE
  1255  000E'                    	ds	2
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec2	equ	0xFDD
  1263                           fsr2h	equ	0xFDA
  1264                           fsr2l	equ	0xFD9
  1265                           
  1266                           	psect	cstackCOMRAM
  1267  0000'                    __pcstackCOMRAM:
  1268                           	opt stack 0
  1269  0000'                    ?_TMR1_ReadTimer:
  1270                           	opt stack 0
  1271  0000'                    EUSART1_Read@readValue:
  1272                           	opt stack 0
  1273  0000'                    TMR1_WriteTimer@timerVal:
  1274                           	opt stack 0
  1275  0000'                    strncat@to:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x0
  1279  0000'                    	ds	2
  1280  0002'                    ??_TMR1_ReadTimer:
  1281  0002'                    strncat@from:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x2
  1285  0002'                    	ds	2
  1286  0004'                    TMR1_ReadTimer@readVal:
  1287                           	opt stack 0
  1288  0004'                    strncat@size:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x4
  1292  0004'                    	ds	2
  1293  0006'                    TMR1_ReadTimer@readValHigh:
  1294                           	opt stack 0
  1295  0006'                    strncat@cp:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x6
  1299  0006'                    	ds	1
  1300  0007'                    TMR1_ReadTimer@readValLow:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  0007'                    	ds	1
  1305  0008'                    ??_EUSART1_Receive_ISR:
  1306  0008'                    ?_TMR_SwapTimer:
  1307                           	opt stack 0
  1308  0008'                    ?_TMR_GetDeltaTime:
  1309                           	opt stack 0
  1310  0008'                    TMR_SwapTimer@timerVal:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x8
  1314  0008'                    	ds	2
  1315  000A'                    
  1316                           ; 1 bytes @ 0xA
  1317  000A'                    	ds	2
  1318  000C'                    ??_TMR_GetDeltaTime:
  1319                           
  1320                           ; 1 bytes @ 0xC
  1321  000C'                    	ds	20
  1322  0020'                    ?_SwTimersInterrupt:
  1323                           	opt stack 0
  1324                           
  1325                           ; 4 bytes @ 0x20
  1326  0020'                    	ds	4
  1327  0024'                    
  1328                           ; 1 bytes @ 0x24
  1329  0024'                    	ds	4
  1330  0028'                    SwTimersInterrupt@timeElapsed:
  1331                           	opt stack 0
  1332                           
  1333                           ; 4 bytes @ 0x28
  1334  0028'                    	ds	4
  1335  002C'                    SwTimersInterrupt@ticksToNextTimerEvent:
  1336                           	opt stack 0
  1337                           
  1338                           ; 4 bytes @ 0x2C
  1339  002C'                    	ds	4
  1340  0030'                    SwTimersInterrupt@i:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x30
  1344  0030'                    	ds	1
  1345  0031'                    ??_TMR_ISR_lora:
  1346                           
  1347                           ; 1 bytes @ 0x31
  1348  0031'                    	ds	2
  1349  0033'                    ??_INTERRUPT_InterruptManager:
  1350                           
  1351                           ; 1 bytes @ 0x33
  1352  0033'                    	ds	10
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           postdec2	equ	0xFDD
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           
  1363 ;;
  1364 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1365 ;;
  1366 ;; *************** function _main *****************
  1367 ;; Defined at:
  1368 ;;		line 37 in file "main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels required when called:   11
  1388 ;; This function calls:
  1389 ;;		_EUSART1_Write
  1390 ;;		_SYSTEM_Initialize
  1391 ;;		_substring
  1392 ;; This function is called by:
  1393 ;;		Startup code after reset
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text0
  1398  0000'                    __ptext0:
  1399                           	opt stack 0
  1400  0000'                    _main:
  1401                           	opt stack 20
  1402                           
  1403                           ;main.c: 39: SYSTEM_Initialize();
  1404                           
  1405                           ;incstack = 0
  1406  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
  1407                           
  1408                           ;main.c: 40: (INTCONbits.GIE = 1);
  1409  0004' 8EF2               	bsf	intcon,7,c	;volatile
  1410                           
  1411                           ;main.c: 41: (INTCONbits.PEIE = 1);
  1412  0006' 8CF2               	bsf	intcon,6,c	;volatile
  1413                           
  1414                           ;main.c: 43: TRISA = 0xF0;
  1415  0008' 0EF0               	movlw	240
  1416  000A' 6E92               	movwf	3986,c	;volatile
  1417                           
  1418                           ;main.c: 44: counterx=0;
  1419  000C' 0E00               	movlw	0
  1420  000E' 0100               	movlb	0	; () banked
  1421  0010' 6F00'              	movwf	(_counterx+1)& (0+255),b
  1422  0012' 0E00               	movlw	0
  1423  0014' 6F00'              	movwf	_counterx& (0+255),b
  1424  0016'                    l12190:
  1425                           
  1426                           ;main.c: 47: {
  1427                           ;main.c: 48: if(counterx <1){
  1428  0016' 0100               	movlb	0	; () banked
  1429  0018' BF00'              	btfsc	(_counterx+1)& (0+255),7,b
  1430  001A' D005               	goto	u12730
  1431  001C' 5100'              	movf	(_counterx+1)& (0+255),w,b
  1432  001E' E1FB               	bnz	l12190
  1433  0020' 0500'              	decf	_counterx& (0+255),w,b
  1434  0022' B0D8               	btfsc	status,0,c
  1435  0024' D7F8               	goto	l2750
  1436  0026'                    u12730:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 49: LATA=0xFF;
  1440  0026' 6889               	setf	3977,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 50: EUSART1_Write(0b10101111);
  1444  0028' 0EAF               	movlw	175
  1445  002A' EC00' F000'        	call	_EUSART1_Write
  1446                           
  1447                           ;main.c: 51: EUSART1_Write(0b00111111);
  1448  002E' 0E3F               	movlw	63
  1449  0030' EC00' F000'        	call	_EUSART1_Write
  1450                           
  1451                           ;main.c: 52: EUSART1_Write(0b00100001);
  1452  0034' 0E21               	movlw	33
  1453  0036' EC00' F000'        	call	_EUSART1_Write
  1454                           
  1455                           ;main.c: 53: EUSART1_Write(0b10001101);
  1456  003A' 0E8D               	movlw	141
  1457  003C' EC00' F000'        	call	_EUSART1_Write
  1458                           
  1459                           ;main.c: 54: EUSART1_Write(0b00001010);
  1460  0040' 0E0A               	movlw	10
  1461  0042' EC00' F000'        	call	_EUSART1_Write
  1462                           
  1463                           ;main.c: 56: EUSART1_Write(0b00101110);
  1464  0046' 0E2E               	movlw	46
  1465  0048' EC00' F000'        	call	_EUSART1_Write
  1466                           
  1467                           ;main.c: 57: EUSART1_Write(0b00110000);
  1468  004C' 0E30               	movlw	48
  1469  004E' EC00' F000'        	call	_EUSART1_Write
  1470                           
  1471                           ;main.c: 58: EUSART1_Write(0b00110000);
  1472  0052' 0E30               	movlw	48
  1473  0054' EC00' F000'        	call	_EUSART1_Write
  1474                           
  1475                           ;main.c: 60: LATA=0xF0;
  1476  0058' 0EF0               	movlw	240
  1477  005A' 6E89               	movwf	3977,c	;volatile
  1478                           
  1479                           ;main.c: 62: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1480  005C' 0E29               	movlw	41
  1481  005E' 0100               	movlb	0	; () banked
  1482  0060' 6F00'              	movwf	(??_main+1)& (0+255),b
  1483  0062' 0E96               	movlw	150
  1484  0064' 6F00'              	movwf	??_main& (0+255),b
  1485  0066' 0E7F               	movlw	127
  1486  0068'                    u12957:
  1487  0068' 2EE8               	decfsz	wreg,f,c
  1488  006A' D7FE               	bra	u12957
  1489  006C' 2F00'              	decfsz	??_main& (0+255),f,b
  1490  006E' D7FC               	bra	u12957
  1491  0070' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1492  0072' D7FA               	bra	u12957
  1493                           
  1494                           ;main.c: 64: LATA=0xFF;
  1495  0074' 6889               	setf	3977,c	;volatile
  1496                           
  1497                           ;main.c: 67: EUSART1_Write(0b00101110);
  1498  0076' 0E2E               	movlw	46
  1499  0078' EC00' F000'        	call	_EUSART1_Write
  1500                           
  1501                           ;main.c: 68: EUSART1_Write(0b00110000);
  1502  007C' 0E30               	movlw	48
  1503  007E' EC00' F000'        	call	_EUSART1_Write
  1504                           
  1505                           ;main.c: 69: EUSART1_Write(0b00110000);
  1506  0082' 0E30               	movlw	48
  1507  0084' EC00' F000'        	call	_EUSART1_Write
  1508                           
  1509                           ;main.c: 70: EUSART1_Write(0b10110111);
  1510  0088' 0EB7               	movlw	183
  1511  008A' EC00' F000'        	call	_EUSART1_Write
  1512                           
  1513                           ;main.c: 71: EUSART1_Write(0b10001101);
  1514  008E' 0E8D               	movlw	141
  1515  0090' EC00' F000'        	call	_EUSART1_Write
  1516                           
  1517                           ;main.c: 72: EUSART1_Write(0b00001010);
  1518  0094' 0E0A               	movlw	10
  1519  0096' EC00' F000'        	call	_EUSART1_Write
  1520                           
  1521                           ;main.c: 74: EUSART1_Write(0x61);
  1522  009A' 0E61               	movlw	97
  1523  009C' EC00' F000'        	call	_EUSART1_Write
  1524                           
  1525                           ;main.c: 75: EUSART1_Write(0x61);
  1526  00A0' 0E61               	movlw	97
  1527  00A2' EC00' F000'        	call	_EUSART1_Write
  1528                           
  1529                           ;main.c: 76: EUSART1_Write(0x61);
  1530  00A6' 0E61               	movlw	97
  1531  00A8' EC00' F000'        	call	_EUSART1_Write
  1532                           
  1533                           ;main.c: 77: LATA=0xF0;
  1534  00AC' 0EF0               	movlw	240
  1535  00AE' 6E89               	movwf	3977,c	;volatile
  1536                           
  1537                           ;main.c: 79: counterx++;
  1538  00B0' 0100               	movlb	0	; () banked
  1539  00B2' 4B00'              	infsnz	_counterx& (0+255),f,b
  1540  00B4' 2B00'              	incf	(_counterx+1)& (0+255),f,b
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 80: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1544  00B6' 0E29               	movlw	41
  1545  00B8' 0100               	movlb	0	; () banked
  1546  00BA' 6F00'              	movwf	(??_main+1)& (0+255),b
  1547  00BC' 0E96               	movlw	150
  1548  00BE' 6F00'              	movwf	??_main& (0+255),b
  1549  00C0' 0E7F               	movlw	127
  1550  00C2'                    u12967:
  1551  00C2' 2EE8               	decfsz	wreg,f,c
  1552  00C4' D7FE               	bra	u12967
  1553  00C6' 2F00'              	decfsz	??_main& (0+255),f,b
  1554  00C8' D7FC               	bra	u12967
  1555  00CA' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1556  00CC' D7FA               	bra	u12967
  1557                           
  1558                           ;main.c: 81: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1559  00CE' 0E29               	movlw	41
  1560  00D0' 0100               	movlb	0	; () banked
  1561  00D2' 6F00'              	movwf	(??_main+1)& (0+255),b
  1562  00D4' 0E96               	movlw	150
  1563  00D6' 6F00'              	movwf	??_main& (0+255),b
  1564  00D8' 0E7F               	movlw	127
  1565  00DA'                    u12977:
  1566  00DA' 2EE8               	decfsz	wreg,f,c
  1567  00DC' D7FE               	bra	u12977
  1568  00DE' 2F00'              	decfsz	??_main& (0+255),f,b
  1569  00E0' D7FC               	bra	u12977
  1570  00E2' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1571  00E4' D7FA               	bra	u12977
  1572                           
  1573                           ;main.c: 82: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1574  00E6' 0E29               	movlw	41
  1575  00E8' 0100               	movlb	0	; () banked
  1576  00EA' 6F00'              	movwf	(??_main+1)& (0+255),b
  1577  00EC' 0E96               	movlw	150
  1578  00EE' 6F00'              	movwf	??_main& (0+255),b
  1579  00F0' 0E7F               	movlw	127
  1580  00F2'                    u12987:
  1581  00F2' 2EE8               	decfsz	wreg,f,c
  1582  00F4' D7FE               	bra	u12987
  1583  00F6' 2F00'              	decfsz	??_main& (0+255),f,b
  1584  00F8' D7FC               	bra	u12987
  1585  00FA' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1586  00FC' D7FA               	bra	u12987
  1587                           
  1588                           ;main.c: 83: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1589  00FE' 0E29               	movlw	41
  1590  0100' 0100               	movlb	0	; () banked
  1591  0102' 6F00'              	movwf	(??_main+1)& (0+255),b
  1592  0104' 0E96               	movlw	150
  1593  0106' 6F00'              	movwf	??_main& (0+255),b
  1594  0108' 0E7F               	movlw	127
  1595  010A'                    u12997:
  1596  010A' 2EE8               	decfsz	wreg,f,c
  1597  010C' D7FE               	bra	u12997
  1598  010E' 2F00'              	decfsz	??_main& (0+255),f,b
  1599  0110' D7FC               	bra	u12997
  1600  0112' 2F00'              	decfsz	(??_main+1)& (0+255),f,b
  1601  0114' D7FA               	bra	u12997
  1602                           
  1603                           ;main.c: 85: substring(dataxstr, sub, 30, 10);
  1604  0116' 0E00'              	movlw	low _dataxstr
  1605  0118' 0100               	movlb	0	; () banked
  1606  011A' 6F00'              	movwf	substring@s& (0+255),b
  1607  011C' 0E00'              	movlw	high _dataxstr
  1608  011E' 6F00'              	movwf	(substring@s+1)& (0+255),b
  1609  0120' 0E00'              	movlw	low _sub
  1610  0122' 6F00'              	movwf	substring@sub& (0+255),b
  1611  0124' 0E00'              	movlw	high _sub
  1612  0126' 6F00'              	movwf	(substring@sub+1)& (0+255),b
  1613  0128' 0E00               	movlw	0
  1614  012A' 6F00'              	movwf	(substring@p+1)& (0+255),b
  1615  012C' 0E1E               	movlw	30
  1616  012E' 6F00'              	movwf	substring@p& (0+255),b
  1617  0130' 0E00               	movlw	0
  1618  0132' 6F00'              	movwf	(substring@l+1)& (0+255),b
  1619  0134' 0E0A               	movlw	10
  1620  0136' 6F00'              	movwf	substring@l& (0+255),b
  1621  0138' EC00' F000'        	call	_substring	;wreg free
  1622  013C' D76C               	goto	l2750
  1623  013E'                    __end_of_main:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           intcon	equ	0xFF2
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec2	equ	0xFDD
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _substring *****************
  1638 ;; Defined at:
  1639 ;;		line 91 in file "main.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1642 ;;		 -> dataxstr(3000), 
  1643 ;;  sub             2    2[BANK0 ] PTR unsigned char 
  1644 ;;		 -> sub(100), 
  1645 ;;  p               2    4[BANK0 ] int 
  1646 ;;  l               2    6[BANK0 ] int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  c               2   12[BANK0 ] int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:       14 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    7
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text1
  1673  0000'                    __ptext1:
  1674                           	opt stack 0
  1675  0000'                    _substring:
  1676                           	opt stack 23
  1677                           
  1678                           ;main.c: 92: int c = 0;
  1679                           
  1680                           ;incstack = 0
  1681  0000' 0E00               	movlw	0
  1682  0002' 0100               	movlb	0	; () banked
  1683  0004' 6F00'              	movwf	(substring@c+1)& (0+255),b
  1684  0006' 0E00               	movlw	0
  1685  0008' 6F00'              	movwf	substring@c& (0+255),b
  1686                           
  1687                           ;main.c: 94: while (c < l) {
  1688  000A' D01E               	goto	l2757
  1689  000C'                    
  1690                           ; BSR set to: 0
  1691                           ;main.c: 95: sub[c] = s[p+c-1];
  1692                           
  1693                           ; BSR set to: 0
  1694  000C' 0EFF               	movlw	255
  1695  000E' 6F00'              	movwf	??_substring& (0+255),b
  1696  0010' 0EFF               	movlw	255
  1697  0012' 6F00'              	movwf	(??_substring+1)& (0+255),b
  1698  0014' 5100'              	movf	substring@c& (0+255),w,b
  1699  0016' 2500'              	addwf	substring@p& (0+255),w,b
  1700  0018' 6F00'              	movwf	(??_substring+2)& (0+255),b
  1701  001A' 5100'              	movf	(substring@c+1)& (0+255),w,b
  1702  001C' 2100'              	addwfc	(substring@p+1)& (0+255),w,b
  1703  001E' 6F00'              	movwf	(??_substring+3)& (0+255),b
  1704  0020' 5100'              	movf	??_substring& (0+255),w,b
  1705  0022' 2700'              	addwf	(??_substring+2)& (0+255),f,b
  1706  0024' 5100'              	movf	(??_substring+1)& (0+255),w,b
  1707  0026' 2300'              	addwfc	(??_substring+3)& (0+255),f,b
  1708  0028' 5100'              	movf	(??_substring+2)& (0+255),w,b
  1709  002A' 2500'              	addwf	substring@s& (0+255),w,b
  1710  002C' 6ED9               	movwf	fsr2l,c
  1711  002E' 5100'              	movf	(??_substring+3)& (0+255),w,b
  1712  0030' 2100'              	addwfc	(substring@s+1)& (0+255),w,b
  1713  0032' 6EDA               	movwf	fsr2h,c
  1714  0034' 5100'              	movf	substring@c& (0+255),w,b
  1715  0036' 2500'              	addwf	substring@sub& (0+255),w,b
  1716  0038' 6EE9               	movwf	fsr0l,c
  1717  003A' 5100'              	movf	(substring@c+1)& (0+255),w,b
  1718  003C' 2100'              	addwfc	(substring@sub+1)& (0+255),w,b
  1719  003E' 6EEA               	movwf	fsr0h,c
  1720  0040' CFDF FFEF          	movff	indf2,indf0
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;main.c: 96: c++;
  1724  0044' 4B00'              	infsnz	substring@c& (0+255),f,b
  1725  0046' 2B00'              	incf	(substring@c+1)& (0+255),f,b
  1726  0048'                    l2757:
  1727                           
  1728                           ; BSR set to: 0
  1729                           
  1730                           ; BSR set to: 0
  1731  0048' 5100'              	movf	substring@l& (0+255),w,b
  1732  004A' 5D00'              	subwf	substring@c& (0+255),w,b
  1733  004C' 5100'              	movf	(substring@c+1)& (0+255),w,b
  1734  004E' 0A80               	xorlw	128
  1735  0050' 6F00'              	movwf	??_substring& (0+255),b
  1736  0052' 5100'              	movf	(substring@l+1)& (0+255),w,b
  1737  0054' 0A80               	xorlw	128
  1738  0056' 5900'              	subwfb	??_substring& (0+255),w,b
  1739  0058' A0D8               	btfss	status,0,c
  1740  005A' D7D8               	goto	l2758
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 97: }
  1744                           ;main.c: 98: sub[c] = '\0';
  1745                           
  1746                           ; BSR set to: 0
  1747  005C' 5100'              	movf	substring@c& (0+255),w,b
  1748  005E' 2500'              	addwf	substring@sub& (0+255),w,b
  1749  0060' 6ED9               	movwf	fsr2l,c
  1750  0062' 5100'              	movf	(substring@c+1)& (0+255),w,b
  1751  0064' 2100'              	addwfc	(substring@sub+1)& (0+255),w,b
  1752  0066' 6EDA               	movwf	fsr2h,c
  1753  0068' 0E00               	movlw	0
  1754  006A' 6EDF               	movwf	indf2,c
  1755                           
  1756                           ; BSR set to: 0
  1757  006C' 0012               	return		;funcret
  1758  006E'                    __end_of_substring:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           intcon	equ	0xFF2
  1765                           indf0	equ	0xFEF
  1766                           postinc0	equ	0xFEE
  1767                           fsr0h	equ	0xFEA
  1768                           fsr0l	equ	0xFE9
  1769                           wreg	equ	0xFE8
  1770                           indf2	equ	0xFDF
  1771                           postdec2	equ	0xFDD
  1772                           fsr2h	equ	0xFDA
  1773                           fsr2l	equ	0xFD9
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _SYSTEM_Initialize *****************
  1777 ;; Defined at:
  1778 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:   10
  1799 ;; This function calls:
  1800 ;;		_EUSART1_Initialize
  1801 ;;		_EXT_INT_Initialize
  1802 ;;		_INTERRUPT_Initialize
  1803 ;;		_LORAWAN_PlatformInit
  1804 ;;		_OSCILLATOR_Initialize
  1805 ;;		_PIN_MANAGER_Initialize
  1806 ;;		_SPI2_Initialize
  1807 ;;		_TMR1_Initialize
  1808 ;;		_TMR5_Initialize
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text2
  1815  0000'                    __ptext2:
  1816                           	opt stack 0
  1817  0000'                    _SYSTEM_Initialize:
  1818                           	opt stack 20
  1819                           
  1820                           ;mcc.c: 53: INTERRUPT_Initialize();
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;incstack = 0
  1824  0000' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
  1825                           
  1826                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1827  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
  1828                           
  1829                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1830  0008' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
  1831                           
  1832                           ;mcc.c: 56: SPI2_Initialize();
  1833  000C' EC00' F000'        	call	_SPI2_Initialize	;wreg free
  1834                           
  1835                           ;mcc.c: 59: TMR5_Initialize();
  1836  0010' EC00' F000'        	call	_TMR5_Initialize	;wreg free
  1837                           
  1838                           ;mcc.c: 60: EXT_INT_Initialize();
  1839  0014' EC00' F000'        	call	_EXT_INT_Initialize	;wreg free
  1840                           
  1841                           ;mcc.c: 61: TMR1_Initialize();
  1842  0018' EC00' F000'        	call	_TMR1_Initialize	;wreg free
  1843                           
  1844                           ;mcc.c: 62: EUSART1_Initialize();
  1845  001C' EC00' F000'        	call	_EUSART1_Initialize	;wreg free
  1846                           
  1847                           ;mcc.c: 63: LORAWAN_PlatformInit();
  1848  0020' EC00' F000'        	call	_LORAWAN_PlatformInit	;wreg free
  1849  0024' 0012               	return		;funcret
  1850  0026'                    __end_of_SYSTEM_Initialize:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           intcon	equ	0xFF2
  1857                           indf0	equ	0xFEF
  1858                           postinc0	equ	0xFEE
  1859                           fsr0h	equ	0xFEA
  1860                           fsr0l	equ	0xFE9
  1861                           wreg	equ	0xFE8
  1862                           indf2	equ	0xFDF
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _TMR5_Initialize *****************
  1869 ;; Defined at:
  1870 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    7
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_SYSTEM_Initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text3
  1899  0000'                    __ptext3:
  1900                           	opt stack 0
  1901  0000'                    _TMR5_Initialize:
  1902                           	opt stack 22
  1903                           
  1904                           ;tmr5.c: 68: T5GCON = 0x00;
  1905                           
  1906                           ;incstack = 0
  1907  0000' 0E00               	movlw	0
  1908  0002' 010F               	movlb	15	; () banked
  1909  0004' 6F4D               	movwf	77,b	;volatile
  1910                           
  1911                           ;tmr5.c: 71: TMR5H = 0x10;
  1912  0006' 0E10               	movlw	16
  1913  0008' 6F50               	movwf	80,b	;volatile
  1914                           
  1915                           ;tmr5.c: 74: TMR5L = 0x00;
  1916  000A' 0E00               	movlw	0
  1917  000C' 6F4F               	movwf	79,b	;volatile
  1918                           
  1919                           ; BSR set to: 15
  1920                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  1921  000E' CF4F F000'         	movff	3919,_timer5ReloadVal	;volatile
  1922  0012' CF50 F001'         	movff	3920,_timer5ReloadVal+1	;volatile
  1923                           
  1924                           ; BSR set to: 15
  1925                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  1926  0016' 927E               	bcf	3966,1,c	;volatile
  1927                           
  1928                           ;tmr5.c: 83: T5CON = 0xBD;
  1929  0018' 0EBD               	movlw	189
  1930  001A' 6F4E               	movwf	78,b	;volatile
  1931                           
  1932                           ; BSR set to: 15
  1933  001C' 0012               	return		;funcret
  1934  001E'                    __end_of_TMR5_Initialize:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           intcon	equ	0xFF2
  1941                           indf0	equ	0xFEF
  1942                           postinc0	equ	0xFEE
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           indf2	equ	0xFDF
  1947                           postdec2	equ	0xFDD
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _TMR1_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    8
  1975 ;; This function calls:
  1976 ;;		_TMR1_SetInterruptHandler
  1977 ;; This function is called by:
  1978 ;;		_SYSTEM_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text4
  1983  0000'                    __ptext4:
  1984                           	opt stack 0
  1985  0000'                    _TMR1_Initialize:
  1986                           	opt stack 21
  1987                           
  1988                           ;tmr1.c: 69: T1GCON = 0x00;
  1989                           
  1990                           ; BSR set to: 15
  1991                           ;incstack = 0
  1992  0000' 0E00               	movlw	0
  1993  0002' 6ECC               	movwf	4044,c	;volatile
  1994                           
  1995                           ;tmr1.c: 72: TMR1H = 0x00;
  1996  0004' 0E00               	movlw	0
  1997  0006' 6ECF               	movwf	4047,c	;volatile
  1998                           
  1999                           ;tmr1.c: 75: TMR1L = 0x00;
  2000  0008' 0E00               	movlw	0
  2001  000A' 6ECE               	movwf	4046,c	;volatile
  2002                           
  2003                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2004  000C' CFCE F004'         	movff	4046,_timer1ReloadVal	;volatile
  2005  0010' CFCF F005'         	movff	4047,_timer1ReloadVal+1	;volatile
  2006                           
  2007                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2008  0014' 909E               	bcf	3998,0,c	;volatile
  2009                           
  2010                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2011  0016' 809D               	bsf	3997,0,c	;volatile
  2012                           
  2013                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2014  0018' 0E00'              	movlw	low _TMR1_DefaultInterruptHandler
  2015  001A' 0100               	movlb	0	; () banked
  2016  001C' 6F00'              	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2017  001E' 0E00'              	movlw	high _TMR1_DefaultInterruptHandler
  2018  0020' 6F00'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2019  0022' EC00' F000'        	call	_TMR1_SetInterruptHandler	;wreg free
  2020                           
  2021                           ;tmr1.c: 90: T1CON = 0x8D;
  2022  0026' 0E8D               	movlw	141
  2023  0028' 6ECD               	movwf	4045,c	;volatile
  2024  002A' 0012               	return		;funcret
  2025  002C'                    __end_of_TMR1_Initialize:
  2026                           	opt stack 0
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           intcon	equ	0xFF2
  2032                           indf0	equ	0xFEF
  2033                           postinc0	equ	0xFEE
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           indf2	equ	0xFDF
  2038                           postdec2	equ	0xFDD
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _SPI2_Initialize *****************
  2044 ;; Defined at:
  2045 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    7
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_SYSTEM_Initialize
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text5
  2074  0000'                    __ptext5:
  2075                           	opt stack 0
  2076  0000'                    _SPI2_Initialize:
  2077                           	opt stack 22
  2078                           
  2079                           ;spi2.c: 70: SSP2STAT = 0x40;
  2080                           
  2081                           ;incstack = 0
  2082  0000' 0E40               	movlw	64
  2083  0002' 6E6D               	movwf	3949,c	;volatile
  2084                           
  2085                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2086  0004' 0E20               	movlw	32
  2087  0006' 6E6C               	movwf	3948,c	;volatile
  2088                           
  2089                           ;spi2.c: 76: SSP2ADD = 0x00;
  2090  0008' 0E00               	movlw	0
  2091  000A' 6E6E               	movwf	3950,c	;volatile
  2092  000C' 0012               	return		;funcret
  2093  000E'                    __end_of_SPI2_Initialize:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           intcon	equ	0xFF2
  2100                           indf0	equ	0xFEF
  2101                           postinc0	equ	0xFEE
  2102                           fsr0h	equ	0xFEA
  2103                           fsr0l	equ	0xFE9
  2104                           wreg	equ	0xFE8
  2105                           indf2	equ	0xFDF
  2106                           postdec2	equ	0xFDD
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _PIN_MANAGER_Initialize *****************
  2112 ;; Defined at:
  2113 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    8
  2134 ;; This function calls:
  2135 ;;		_IOCB4_SetInterruptHandler
  2136 ;; This function is called by:
  2137 ;;		_SYSTEM_Initialize
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text6
  2142  0000'                    __ptext6:
  2143                           	opt stack 0
  2144  0000'                    _PIN_MANAGER_Initialize:
  2145                           	opt stack 21
  2146                           
  2147                           ;pin_manager.c: 62: LATE = 0x00;
  2148                           
  2149                           ;incstack = 0
  2150  0000' 0E00               	movlw	0
  2151  0002' 6E8D               	movwf	3981,c	;volatile
  2152                           
  2153                           ;pin_manager.c: 63: LATD = 0x00;
  2154  0004' 0E00               	movlw	0
  2155  0006' 6E8C               	movwf	3980,c	;volatile
  2156                           
  2157                           ;pin_manager.c: 64: LATA = 0x00;
  2158  0008' 0E00               	movlw	0
  2159  000A' 6E89               	movwf	3977,c	;volatile
  2160                           
  2161                           ;pin_manager.c: 65: LATB = 0x00;
  2162  000C' 0E00               	movlw	0
  2163  000E' 6E8A               	movwf	3978,c	;volatile
  2164                           
  2165                           ;pin_manager.c: 66: LATC = 0x00;
  2166  0010' 0E00               	movlw	0
  2167  0012' 6E8B               	movwf	3979,c	;volatile
  2168                           
  2169                           ;pin_manager.c: 71: TRISE = 0x07;
  2170  0014' 0E07               	movlw	7
  2171  0016' 6E96               	movwf	3990,c	;volatile
  2172                           
  2173                           ;pin_manager.c: 72: TRISA = 0xFF;
  2174  0018' 6892               	setf	3986,c	;volatile
  2175                           
  2176                           ;pin_manager.c: 73: TRISB = 0xFF;
  2177  001A' 6893               	setf	3987,c	;volatile
  2178                           
  2179                           ;pin_manager.c: 74: TRISC = 0xBE;
  2180  001C' 0EBE               	movlw	190
  2181  001E' 6E94               	movwf	3988,c	;volatile
  2182                           
  2183                           ;pin_manager.c: 75: TRISD = 0xE6;
  2184  0020' 0EE6               	movlw	230
  2185  0022' 6E95               	movwf	3989,c	;volatile
  2186                           
  2187                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2188  0024' 0EE4               	movlw	228
  2189  0026' 010F               	movlb	15	; () banked
  2190  0028' 6F3B               	movwf	59,b	;volatile
  2191                           
  2192                           ;pin_manager.c: 81: ANSELC = 0x38;
  2193  002A' 0E38               	movlw	56
  2194  002C' 6F3A               	movwf	58,b	;volatile
  2195                           
  2196                           ;pin_manager.c: 82: ANSELB = 0x28;
  2197  002E' 0E28               	movlw	40
  2198  0030' 6F39               	movwf	57,b	;volatile
  2199                           
  2200                           ;pin_manager.c: 83: ANSELE = 0x07;
  2201  0032' 0E07               	movlw	7
  2202  0034' 6F3C               	movwf	60,b	;volatile
  2203                           
  2204                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2205  0036' 0E2F               	movlw	47
  2206  0038' 6F38               	movwf	56,b	;volatile
  2207                           
  2208                           ;pin_manager.c: 89: WPUB = 0x00;
  2209  003A' 0E00               	movlw	0
  2210  003C' 6E61               	movwf	3937,c	;volatile
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2214  003E' 8EF1               	bsf	intcon2,7,c	;volatile
  2215                           
  2216                           ; BSR set to: 15
  2217                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2218  0040' 8862               	bsf	3938,4,c	;volatile
  2219                           
  2220                           ; BSR set to: 15
  2221                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2222  0042' 0E00'              	movlw	low _IOCB4_DefaultInterruptHandler
  2223  0044' 0100               	movlb	0	; () banked
  2224  0046' 6F00'              	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2225  0048' 0E00'              	movlw	high _IOCB4_DefaultInterruptHandler
  2226  004A' 6F00'              	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2227  004C' EC00' F000'        	call	_IOCB4_SetInterruptHandler	;wreg free
  2228                           
  2229                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2230  0050' 86F2               	bsf	intcon,3,c	;volatile
  2231  0052' 0012               	return		;funcret
  2232  0054'                    __end_of_PIN_MANAGER_Initialize:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           indf0	equ	0xFEF
  2241                           postinc0	equ	0xFEE
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           indf2	equ	0xFDF
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _OSCILLATOR_Initialize *****************
  2252 ;; Defined at:
  2253 ;;		line 66 in file "mcc_generated_files/mcc.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    7
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_SYSTEM_Initialize
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text7
  2282  0000'                    __ptext7:
  2283                           	opt stack 0
  2284  0000'                    _OSCILLATOR_Initialize:
  2285                           	opt stack 22
  2286                           
  2287                           ;mcc.c: 69: OSCCON = 0x70;
  2288                           
  2289                           ;incstack = 0
  2290  0000' 0E70               	movlw	112
  2291  0002' 6ED3               	movwf	4051,c	;volatile
  2292                           
  2293                           ;mcc.c: 71: OSCCON2 = 0x04;
  2294  0004' 0E04               	movlw	4
  2295  0006' 6ED2               	movwf	4050,c	;volatile
  2296                           
  2297                           ;mcc.c: 73: OSCTUNE = 0x00;
  2298  0008' 0E00               	movlw	0
  2299  000A' 6E9B               	movwf	3995,c	;volatile
  2300  000C' 0012               	return		;funcret
  2301  000E'                    __end_of_OSCILLATOR_Initialize:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           intcon	equ	0xFF2
  2308                           intcon2	equ	0xFF1
  2309                           indf0	equ	0xFEF
  2310                           postinc0	equ	0xFEE
  2311                           fsr0h	equ	0xFEA
  2312                           fsr0l	equ	0xFE9
  2313                           wreg	equ	0xFE8
  2314                           indf2	equ	0xFDF
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _LORAWAN_PlatformInit *****************
  2321 ;; Defined at:
  2322 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    9
  2343 ;; This function calls:
  2344 ;;		_DIO0_ISR_Lora_Init
  2345 ;;		_DIO1_ISR_Lora_Init
  2346 ;;		_DIO2_ISR_Lora_Init
  2347 ;;		_DIO3_ISR_Lora_Init
  2348 ;;		_DIO4_ISR_Lora_Init
  2349 ;;		_DIO5_ISR_Lora_Init
  2350 ;;		_SystemTimerInit
  2351 ;;		_TMR_ISR_Lora_Init
  2352 ;; This function is called by:
  2353 ;;		_SYSTEM_Initialize
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358  0000'                    __ptext8:
  2359                           	opt stack 0
  2360  0000'                    _LORAWAN_PlatformInit:
  2361                           	opt stack 20
  2362                           
  2363                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2364                           
  2365                           ;incstack = 0
  2366  0000' EC00' F000'        	call	_TMR_ISR_Lora_Init	;wreg free
  2367                           
  2368                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2369  0004' EC00' F000'        	call	_DIO0_ISR_Lora_Init	;wreg free
  2370                           
  2371                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2372  0008' EC00' F000'        	call	_DIO1_ISR_Lora_Init	;wreg free
  2373                           
  2374                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2375  000C' EC00' F000'        	call	_DIO2_ISR_Lora_Init	;wreg free
  2376                           
  2377                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2378  0010' EC00' F000'        	call	_DIO3_ISR_Lora_Init	;wreg free
  2379                           
  2380                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2381  0014' EC00' F000'        	call	_DIO4_ISR_Lora_Init	;wreg free
  2382                           
  2383                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2384  0018' EC00' F000'        	call	_DIO5_ISR_Lora_Init	;wreg free
  2385                           
  2386                           ;lorawan_init.c: 82: SystemTimerInit();
  2387  001C' EC00' F000'        	call	_SystemTimerInit	;wreg free
  2388  0020' 0012               	return		;funcret
  2389  0022'                    __end_of_LORAWAN_PlatformInit:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           intcon	equ	0xFF2
  2396                           intcon2	equ	0xFF1
  2397                           indf0	equ	0xFEF
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           indf2	equ	0xFDF
  2403                           postdec2	equ	0xFDD
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _TMR_ISR_Lora_Init *****************
  2409 ;; Defined at:
  2410 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    8
  2431 ;; This function calls:
  2432 ;;		_TMR1_SetInterruptHandler
  2433 ;; This function is called by:
  2434 ;;		_LORAWAN_PlatformInit
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text9
  2439  0000'                    __ptext9:
  2440                           	opt stack 0
  2441  0000'                    _TMR_ISR_Lora_Init:
  2442                           	opt stack 20
  2443                           
  2444                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2445                           
  2446                           ;incstack = 0
  2447  0000' 0E00'              	movlw	low _TMR_ISR_lora
  2448  0002' 0100               	movlb	0	; () banked
  2449  0004' 6F00'              	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2450  0006' 0E00'              	movlw	high _TMR_ISR_lora
  2451  0008' 6F00'              	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2452  000A' EC00' F000'        	call	_TMR1_SetInterruptHandler	;wreg free
  2453  000E' 0012               	return		;funcret
  2454  0010'                    __end_of_TMR_ISR_Lora_Init:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           intcon	equ	0xFF2
  2461                           intcon2	equ	0xFF1
  2462                           indf0	equ	0xFEF
  2463                           postinc0	equ	0xFEE
  2464                           fsr0h	equ	0xFEA
  2465                           fsr0l	equ	0xFE9
  2466                           wreg	equ	0xFE8
  2467                           indf2	equ	0xFDF
  2468                           postdec2	equ	0xFDD
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _TMR1_SetInterruptHandler *****************
  2474 ;; Defined at:
  2475 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2478 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    7
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_TMR_ISR_Lora_Init
  2501 ;;		_TMR1_Initialize
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text10
  2506  0000'                    __ptext10:
  2507                           	opt stack 0
  2508  0000'                    _TMR1_SetInterruptHandler:
  2509                           	opt stack 21
  2510                           
  2511                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2512                           
  2513                           ;incstack = 0
  2514  0000' C000' F002'        	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2515  0004' C001' F003'        	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2516  0008' 0012               	return		;funcret
  2517  000A'                    __end_of_TMR1_SetInterruptHandler:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           intcon	equ	0xFF2
  2524                           intcon2	equ	0xFF1
  2525                           indf0	equ	0xFEF
  2526                           postinc0	equ	0xFEE
  2527                           fsr0h	equ	0xFEA
  2528                           fsr0l	equ	0xFE9
  2529                           wreg	equ	0xFE8
  2530                           indf2	equ	0xFDF
  2531                           postdec2	equ	0xFDD
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _SystemTimerInit *****************
  2537 ;; Defined at:
  2538 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    7
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_LORAWAN_PlatformInit
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text11
  2567  0000'                    __ptext11:
  2568                           	opt stack 0
  2569  0000'                    _SystemTimerInit:
  2570                           	opt stack 21
  2571                           
  2572                           ;sw_timer.c: 137: allocatedTimers = 0;
  2573                           
  2574                           ;incstack = 0
  2575  0000' 0E00               	movlw	0
  2576  0002' 6E0C'              	movwf	_allocatedTimers,c	;volatile
  2577  0004' 0012               	return		;funcret
  2578  0006'                    __end_of_SystemTimerInit:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           indf0	equ	0xFEF
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           indf2	equ	0xFDF
  2592                           postdec2	equ	0xFDD
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2598 ;; Defined at:
  2599 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		None
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    7
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_LORAWAN_PlatformInit
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628  0000'                    __ptext12:
  2629                           	opt stack 0
  2630  0000'                    _DIO5_ISR_Lora_Init:
  2631                           	opt stack 21
  2632                           
  2633                           ;incstack = 0
  2634  0000' 0012               	return		;funcret
  2635  0002'                    __end_of_DIO5_ISR_Lora_Init:
  2636                           	opt stack 0
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           intcon	equ	0xFF2
  2642                           intcon2	equ	0xFF1
  2643                           indf0	equ	0xFEF
  2644                           postinc0	equ	0xFEE
  2645                           fsr0h	equ	0xFEA
  2646                           fsr0l	equ	0xFE9
  2647                           wreg	equ	0xFE8
  2648                           indf2	equ	0xFDF
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2655 ;; Defined at:
  2656 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    7
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_LORAWAN_PlatformInit
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text13
  2685  0000'                    __ptext13:
  2686                           	opt stack 0
  2687  0000'                    _DIO4_ISR_Lora_Init:
  2688                           	opt stack 21
  2689                           
  2690                           ;incstack = 0
  2691  0000' 0012               	return		;funcret
  2692  0002'                    __end_of_DIO4_ISR_Lora_Init:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           intcon	equ	0xFF2
  2699                           intcon2	equ	0xFF1
  2700                           indf0	equ	0xFEF
  2701                           postinc0	equ	0xFEE
  2702                           fsr0h	equ	0xFEA
  2703                           fsr0l	equ	0xFE9
  2704                           wreg	equ	0xFE8
  2705                           indf2	equ	0xFDF
  2706                           postdec2	equ	0xFDD
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2712 ;; Defined at:
  2713 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		None
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    7
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_LORAWAN_PlatformInit
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text14
  2742  0000'                    __ptext14:
  2743                           	opt stack 0
  2744  0000'                    _DIO3_ISR_Lora_Init:
  2745                           	opt stack 21
  2746                           
  2747                           ;incstack = 0
  2748  0000' 0012               	return		;funcret
  2749  0002'                    __end_of_DIO3_ISR_Lora_Init:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           intcon	equ	0xFF2
  2756                           intcon2	equ	0xFF1
  2757                           indf0	equ	0xFEF
  2758                           postinc0	equ	0xFEE
  2759                           fsr0h	equ	0xFEA
  2760                           fsr0l	equ	0xFE9
  2761                           wreg	equ	0xFE8
  2762                           indf2	equ	0xFDF
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2769 ;; Defined at:
  2770 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    8
  2791 ;; This function calls:
  2792 ;;		_IOCB4_SetInterruptHandler
  2793 ;; This function is called by:
  2794 ;;		_LORAWAN_PlatformInit
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text15
  2799  0000'                    __ptext15:
  2800                           	opt stack 0
  2801  0000'                    _DIO2_ISR_Lora_Init:
  2802                           	opt stack 20
  2803                           
  2804                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2805                           
  2806                           ;incstack = 0
  2807  0000' 0E00'              	movlw	low _DIO2_ISR_Lora
  2808  0002' 0100               	movlb	0	; () banked
  2809  0004' 6F00'              	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2810  0006' 0E00'              	movlw	high _DIO2_ISR_Lora
  2811  0008' 6F00'              	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2812  000A' EC00' F000'        	call	_IOCB4_SetInterruptHandler	;wreg free
  2813  000E' 0012               	return		;funcret
  2814  0010'                    __end_of_DIO2_ISR_Lora_Init:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           intcon	equ	0xFF2
  2821                           intcon2	equ	0xFF1
  2822                           indf0	equ	0xFEF
  2823                           postinc0	equ	0xFEE
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           indf2	equ	0xFDF
  2828                           postdec2	equ	0xFDD
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2834 ;; Defined at:
  2835 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2838 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    7
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_DIO2_ISR_Lora_Init
  2861 ;;		_PIN_MANAGER_Initialize
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text16
  2866  0000'                    __ptext16:
  2867                           	opt stack 0
  2868  0000'                    _IOCB4_SetInterruptHandler:
  2869                           	opt stack 21
  2870                           
  2871                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  2872                           
  2873                           ;incstack = 0
  2874  0000' C000' F006'        	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2875  0004' C001' F007'        	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2876  0008' 0012               	return		;funcret
  2877  000A'                    __end_of_IOCB4_SetInterruptHandler:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           intcon	equ	0xFF2
  2884                           intcon2	equ	0xFF1
  2885                           indf0	equ	0xFEF
  2886                           postinc0	equ	0xFEE
  2887                           fsr0h	equ	0xFEA
  2888                           fsr0l	equ	0xFE9
  2889                           wreg	equ	0xFE8
  2890                           indf2	equ	0xFDF
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _DIO1_ISR_Lora_Init *****************
  2897 ;; Defined at:
  2898 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    8
  2919 ;; This function calls:
  2920 ;;		_INT2_SetInterruptHandler
  2921 ;; This function is called by:
  2922 ;;		_LORAWAN_PlatformInit
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text17
  2927  0000'                    __ptext17:
  2928                           	opt stack 0
  2929  0000'                    _DIO1_ISR_Lora_Init:
  2930                           	opt stack 20
  2931                           
  2932                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  2933                           
  2934                           ;incstack = 0
  2935  0000' 0E00'              	movlw	low _DIO1_ISR_Lora
  2936  0002' 0100               	movlb	0	; () banked
  2937  0004' 6F00'              	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2938  0006' 0E00'              	movlw	high _DIO1_ISR_Lora
  2939  0008' 6F00'              	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2940  000A' EC00' F000'        	call	_INT2_SetInterruptHandler	;wreg free
  2941  000E' 0012               	return		;funcret
  2942  0010'                    __end_of_DIO1_ISR_Lora_Init:
  2943                           	opt stack 0
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           intcon	equ	0xFF2
  2949                           intcon2	equ	0xFF1
  2950                           indf0	equ	0xFEF
  2951                           postinc0	equ	0xFEE
  2952                           fsr0h	equ	0xFEA
  2953                           fsr0l	equ	0xFE9
  2954                           wreg	equ	0xFE8
  2955                           indf2	equ	0xFDF
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _DIO0_ISR_Lora_Init *****************
  2962 ;; Defined at:
  2963 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    8
  2984 ;; This function calls:
  2985 ;;		_INT1_SetInterruptHandler
  2986 ;; This function is called by:
  2987 ;;		_LORAWAN_PlatformInit
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text18
  2992  0000'                    __ptext18:
  2993                           	opt stack 0
  2994  0000'                    _DIO0_ISR_Lora_Init:
  2995                           	opt stack 20
  2996                           
  2997                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  2998                           
  2999                           ;incstack = 0
  3000  0000' 0E00'              	movlw	low _DIO0_ISR_Lora
  3001  0002' 0100               	movlb	0	; () banked
  3002  0004' 6F00'              	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3003  0006' 0E00'              	movlw	high _DIO0_ISR_Lora
  3004  0008' 6F00'              	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3005  000A' EC00' F000'        	call	_INT1_SetInterruptHandler	;wreg free
  3006  000E' 0012               	return		;funcret
  3007  0010'                    __end_of_DIO0_ISR_Lora_Init:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           intcon	equ	0xFF2
  3014                           intcon2	equ	0xFF1
  3015                           indf0	equ	0xFEF
  3016                           postinc0	equ	0xFEE
  3017                           fsr0h	equ	0xFEA
  3018                           fsr0l	equ	0xFE9
  3019                           wreg	equ	0xFE8
  3020                           indf2	equ	0xFDF
  3021                           postdec2	equ	0xFDD
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _INTERRUPT_Initialize *****************
  3027 ;; Defined at:
  3028 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		None
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    7
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_SYSTEM_Initialize
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text19
  3057  0000'                    __ptext19:
  3058                           	opt stack 0
  3059  0000'                    _INTERRUPT_Initialize:
  3060                           	opt stack 22
  3061                           
  3062                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3063                           
  3064                           ;incstack = 0
  3065  0000' 9ED0               	bcf	4048,7,c	;volatile
  3066  0002' 0012               	return		;funcret
  3067  0004'                    __end_of_INTERRUPT_Initialize:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           intcon	equ	0xFF2
  3074                           intcon2	equ	0xFF1
  3075                           indf0	equ	0xFEF
  3076                           postinc0	equ	0xFEE
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           indf2	equ	0xFDF
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _EXT_INT_Initialize *****************
  3087 ;; Defined at:
  3088 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    8
  3109 ;; This function calls:
  3110 ;;		_INT1_SetInterruptHandler
  3111 ;;		_INT2_SetInterruptHandler
  3112 ;; This function is called by:
  3113 ;;		_SYSTEM_Initialize
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text20
  3118  0000'                    __ptext20:
  3119                           	opt stack 0
  3120  0000'                    _EXT_INT_Initialize:
  3121                           	opt stack 21
  3122                           
  3123                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3124                           
  3125                           ;incstack = 0
  3126  0000' 90F0               	bcf	intcon3,0,c	;volatile
  3127                           
  3128                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3129  0002' 8AF1               	bsf	intcon2,5,c	;volatile
  3130                           
  3131                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3132  0004' 0E00'              	movlw	low _INT1_DefaultInterruptHandler
  3133  0006' 0100               	movlb	0	; () banked
  3134  0008' 6F00'              	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3135  000A' 0E00'              	movlw	high _INT1_DefaultInterruptHandler
  3136  000C' 6F00'              	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3137  000E' EC00' F000'        	call	_INT1_SetInterruptHandler	;wreg free
  3138                           
  3139                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3140  0012' 86F0               	bsf	intcon3,3,c	;volatile
  3141                           
  3142                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3143  0014' 92F0               	bcf	intcon3,1,c	;volatile
  3144                           
  3145                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3146  0016' 88F1               	bsf	intcon2,4,c	;volatile
  3147                           
  3148                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3149  0018' 0E00'              	movlw	low _INT2_DefaultInterruptHandler
  3150  001A' 0100               	movlb	0	; () banked
  3151  001C' 6F00'              	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3152  001E' 0E00'              	movlw	high _INT2_DefaultInterruptHandler
  3153  0020' 6F00'              	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3154  0022' EC00' F000'        	call	_INT2_SetInterruptHandler	;wreg free
  3155                           
  3156                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3157  0026' 88F0               	bsf	intcon3,4,c	;volatile
  3158  0028' 0012               	return		;funcret
  3159  002A'                    __end_of_EXT_INT_Initialize:
  3160                           	opt stack 0
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           intcon	equ	0xFF2
  3166                           intcon2	equ	0xFF1
  3167                           intcon3	equ	0xFF0
  3168                           indf0	equ	0xFEF
  3169                           postinc0	equ	0xFEE
  3170                           fsr0h	equ	0xFEA
  3171                           fsr0l	equ	0xFE9
  3172                           wreg	equ	0xFE8
  3173                           indf2	equ	0xFDF
  3174                           postdec2	equ	0xFDD
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _INT2_SetInterruptHandler *****************
  3180 ;; Defined at:
  3181 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3184 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    7
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_DIO1_ISR_Lora_Init
  3207 ;;		_EXT_INT_Initialize
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text21
  3212  0000'                    __ptext21:
  3213                           	opt stack 0
  3214  0000'                    _INT2_SetInterruptHandler:
  3215                           	opt stack 20
  3216                           
  3217                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3218                           
  3219                           ;incstack = 0
  3220  0000' C000' F008'        	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3221  0004' C001' F009'        	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3222  0008' 0012               	return		;funcret
  3223  000A'                    __end_of_INT2_SetInterruptHandler:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           intcon	equ	0xFF2
  3230                           intcon2	equ	0xFF1
  3231                           intcon3	equ	0xFF0
  3232                           indf0	equ	0xFEF
  3233                           postinc0	equ	0xFEE
  3234                           fsr0h	equ	0xFEA
  3235                           fsr0l	equ	0xFE9
  3236                           wreg	equ	0xFE8
  3237                           indf2	equ	0xFDF
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _INT1_SetInterruptHandler *****************
  3244 ;; Defined at:
  3245 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3248 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        2 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    7
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_DIO0_ISR_Lora_Init
  3271 ;;		_EXT_INT_Initialize
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text22
  3276  0000'                    __ptext22:
  3277                           	opt stack 0
  3278  0000'                    _INT1_SetInterruptHandler:
  3279                           	opt stack 20
  3280                           
  3281                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3282                           
  3283                           ;incstack = 0
  3284  0000' C000' F00A'        	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3285  0004' C001' F00B'        	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3286  0008' 0012               	return		;funcret
  3287  000A'                    __end_of_INT1_SetInterruptHandler:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           intcon	equ	0xFF2
  3294                           intcon2	equ	0xFF1
  3295                           intcon3	equ	0xFF0
  3296                           indf0	equ	0xFEF
  3297                           postinc0	equ	0xFEE
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           indf2	equ	0xFDF
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _EUSART1_Initialize *****************
  3308 ;; Defined at:
  3309 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    8
  3330 ;; This function calls:
  3331 ;;		_EUSART1_SetErrorHandler
  3332 ;;		_EUSART1_SetFramingErrorHandler
  3333 ;;		_EUSART1_SetOverrunErrorHandler
  3334 ;;		_EUSART1_SetRxInterruptHandler
  3335 ;;		_EUSART1_SetTxInterruptHandler
  3336 ;; This function is called by:
  3337 ;;		_SYSTEM_Initialize
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text23
  3342  0000'                    __ptext23:
  3343                           	opt stack 0
  3344  0000'                    _EUSART1_Initialize:
  3345                           	opt stack 21
  3346                           
  3347                           ;eusart1.c: 114: PIE1bits.RC1IE = 0;
  3348                           
  3349                           ;incstack = 0
  3350  0000' 9A9D               	bcf	3997,5,c	;volatile
  3351                           
  3352                           ;eusart1.c: 115: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3353  0002' 0E00'              	movlw	low _EUSART1_Receive_ISR
  3354  0004' 0100               	movlb	0	; () banked
  3355  0006' 6F00'              	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  3356  0008' 0E00'              	movlw	high _EUSART1_Receive_ISR
  3357  000A' 6F00'              	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3358  000C' EC00' F000'        	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3359                           
  3360                           ;eusart1.c: 116: PIE1bits.TX1IE = 0;
  3361  0010' 989D               	bcf	3997,4,c	;volatile
  3362                           
  3363                           ;eusart1.c: 117: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3364  0012' 0E00'              	movlw	low _EUSART1_Transmit_ISR
  3365  0014' 0100               	movlb	0	; () banked
  3366  0016' 6F00'              	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  3367  0018' 0E00'              	movlw	high _EUSART1_Transmit_ISR
  3368  001A' 6F00'              	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3369  001C' EC00' F000'        	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3370                           
  3371                           ;eusart1.c: 121: BAUDCON1 = 0x08;
  3372  0020' 0E08               	movlw	8
  3373  0022' 6EB8               	movwf	4024,c	;volatile
  3374                           
  3375                           ;eusart1.c: 124: RCSTA1 = 0x90;
  3376  0024' 0E90               	movlw	144
  3377  0026' 6EAB               	movwf	4011,c	;volatile
  3378                           
  3379                           ;eusart1.c: 127: TXSTA1 = 0x24;
  3380  0028' 0E24               	movlw	36
  3381  002A' 6EAC               	movwf	4012,c	;volatile
  3382                           
  3383                           ;eusart1.c: 130: SPBRG1 = 0x14;
  3384  002C' 0E14               	movlw	20
  3385  002E' 6EAF               	movwf	4015,c	;volatile
  3386                           
  3387                           ;eusart1.c: 133: SPBRGH1 = 0x34;
  3388  0030' 0E34               	movlw	52
  3389  0032' 6EB0               	movwf	4016,c	;volatile
  3390                           
  3391                           ;eusart1.c: 136: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3392  0034' 0E00'              	movlw	low _EUSART1_DefaultFramingErrorHandler
  3393  0036' 0100               	movlb	0	; () banked
  3394  0038' 6F00'              	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3395  003A' 0E00'              	movlw	high _EUSART1_DefaultFramingErrorHandler
  3396  003C' 6F00'              	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3397  003E' EC00' F000'        	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3398                           
  3399                           ;eusart1.c: 137: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3400  0042' 0E00'              	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3401  0044' 0100               	movlb	0	; () banked
  3402  0046' 6F00'              	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3403  0048' 0E00'              	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3404  004A' 6F00'              	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3405  004C' EC00' F000'        	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3406                           
  3407                           ;eusart1.c: 138: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3408  0050' 0E00'              	movlw	low _EUSART1_DefaultErrorHandler
  3409  0052' 0100               	movlb	0	; () banked
  3410  0054' 6F00'              	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3411  0056' 0E00'              	movlw	high _EUSART1_DefaultErrorHandler
  3412  0058' 6F00'              	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3413  005A' EC00' F000'        	call	_EUSART1_SetErrorHandler	;wreg free
  3414                           
  3415                           ;eusart1.c: 140: eusart1RxLastError.status = 0;
  3416  005E' 0E00               	movlw	0
  3417  0060' 0100               	movlb	0	; () banked
  3418  0062' 6F00'              	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3419                           
  3420                           ;eusart1.c: 143: eusart1TxHead = 0;
  3421  0064' 0E00               	movlw	0
  3422  0066' 6F00'              	movwf	_eusart1TxHead& (0+255),b	;volatile
  3423                           
  3424                           ;eusart1.c: 144: eusart1TxTail = 0;
  3425  0068' 0E00               	movlw	0
  3426  006A' 6F00'              	movwf	_eusart1TxTail& (0+255),b	;volatile
  3427                           
  3428                           ;eusart1.c: 145: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3429  006C' 0E01               	movlw	1
  3430  006E' 6F00'              	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3431                           
  3432                           ;eusart1.c: 147: eusart1RxHead = 0;
  3433  0070' 0E00               	movlw	0
  3434  0072' 6E0A'              	movwf	_eusart1RxHead,c	;volatile
  3435                           
  3436                           ;eusart1.c: 148: eusart1RxTail = 0;
  3437  0074' 0E00               	movlw	0
  3438  0076' 6E09'              	movwf	_eusart1RxTail,c	;volatile
  3439                           
  3440                           ;eusart1.c: 149: eusart1RxCount = 0;
  3441  0078' 0E00               	movlw	0
  3442  007A' 6F00'              	movwf	_eusart1RxCount& (0+255),b	;volatile
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;eusart1.c: 152: PIE1bits.RC1IE = 1;
  3446  007C' 8A9D               	bsf	3997,5,c	;volatile
  3447                           
  3448                           ; BSR set to: 0
  3449  007E' 0012               	return		;funcret
  3450  0080'                    __end_of_EUSART1_Initialize:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           intcon	equ	0xFF2
  3457                           intcon2	equ	0xFF1
  3458                           intcon3	equ	0xFF0
  3459                           indf0	equ	0xFEF
  3460                           postinc0	equ	0xFEE
  3461                           fsr0h	equ	0xFEA
  3462                           fsr0l	equ	0xFE9
  3463                           wreg	equ	0xFE8
  3464                           indf2	equ	0xFDF
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3471 ;; Defined at:
  3472 ;;		line 327 in file "mcc_generated_files/eusart1.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3475 ;;		 -> EUSART1_Transmit_ISR(1), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    7
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_EUSART1_Initialize
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text24
  3502  0000'                    __ptext24:
  3503                           	opt stack 0
  3504  0000'                    _EUSART1_SetTxInterruptHandler:
  3505                           	opt stack 21
  3506                           
  3507                           ;eusart1.c: 328: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;incstack = 0
  3511  0000' C000' F008'        	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3512  0004' C001' F009'        	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3513  0008' 0012               	return		;funcret
  3514  000A'                    __end_of_EUSART1_SetTxInterruptHandler:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           intcon	equ	0xFF2
  3521                           intcon2	equ	0xFF1
  3522                           intcon3	equ	0xFF0
  3523                           indf0	equ	0xFEF
  3524                           postinc0	equ	0xFEE
  3525                           fsr0h	equ	0xFEA
  3526                           fsr0l	equ	0xFE9
  3527                           wreg	equ	0xFE8
  3528                           indf2	equ	0xFDF
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3535 ;; Defined at:
  3536 ;;		line 331 in file "mcc_generated_files/eusart1.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3539 ;;		 -> EUSART1_Receive_ISR(1), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    7
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_EUSART1_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text25
  3566  0000'                    __ptext25:
  3567                           	opt stack 0
  3568  0000'                    _EUSART1_SetRxInterruptHandler:
  3569                           	opt stack 21
  3570                           
  3571                           ;eusart1.c: 332: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3572                           
  3573                           ;incstack = 0
  3574  0000' C000' F006'        	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3575  0004' C001' F007'        	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3576  0008' 0012               	return		;funcret
  3577  000A'                    __end_of_EUSART1_SetRxInterruptHandler:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           intcon	equ	0xFF2
  3584                           intcon2	equ	0xFF1
  3585                           intcon3	equ	0xFF0
  3586                           indf0	equ	0xFEF
  3587                           postinc0	equ	0xFEE
  3588                           fsr0h	equ	0xFEA
  3589                           fsr0l	equ	0xFE9
  3590                           wreg	equ	0xFE8
  3591                           indf2	equ	0xFDF
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3598 ;; Defined at:
  3599 ;;		line 319 in file "mcc_generated_files/eusart1.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3602 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        2 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_EUSART1_Initialize
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text26
  3629  0000'                    __ptext26:
  3630                           	opt stack 0
  3631  0000'                    _EUSART1_SetOverrunErrorHandler:
  3632                           	opt stack 21
  3633                           
  3634                           ;eusart1.c: 320: EUSART1_OverrunErrorHandler = interruptHandler;
  3635                           
  3636                           ;incstack = 0
  3637  0000' C000' F002'        	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3638  0004' C001' F003'        	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3639  0008' 0012               	return		;funcret
  3640  000A'                    __end_of_EUSART1_SetOverrunErrorHandler:
  3641                           	opt stack 0
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           intcon	equ	0xFF2
  3647                           intcon2	equ	0xFF1
  3648                           intcon3	equ	0xFF0
  3649                           indf0	equ	0xFEF
  3650                           postinc0	equ	0xFEE
  3651                           fsr0h	equ	0xFEA
  3652                           fsr0l	equ	0xFE9
  3653                           wreg	equ	0xFE8
  3654                           indf2	equ	0xFDF
  3655                           postdec2	equ	0xFDD
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3661 ;; Defined at:
  3662 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3665 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        2 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    7
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_EUSART1_Initialize
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text27
  3692  0000'                    __ptext27:
  3693                           	opt stack 0
  3694  0000'                    _EUSART1_SetFramingErrorHandler:
  3695                           	opt stack 21
  3696                           
  3697                           ;eusart1.c: 316: EUSART1_FramingErrorHandler = interruptHandler;
  3698                           
  3699                           ;incstack = 0
  3700  0000' C000' F004'        	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3701  0004' C001' F005'        	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3702  0008' 0012               	return		;funcret
  3703  000A'                    __end_of_EUSART1_SetFramingErrorHandler:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           intcon	equ	0xFF2
  3710                           intcon2	equ	0xFF1
  3711                           intcon3	equ	0xFF0
  3712                           indf0	equ	0xFEF
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           indf2	equ	0xFDF
  3718                           postdec2	equ	0xFDD
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _EUSART1_SetErrorHandler *****************
  3724 ;; Defined at:
  3725 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3728 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    7
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_EUSART1_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text28
  3755  0000'                    __ptext28:
  3756                           	opt stack 0
  3757  0000'                    _EUSART1_SetErrorHandler:
  3758                           	opt stack 21
  3759                           
  3760                           ;eusart1.c: 324: EUSART1_ErrorHandler = interruptHandler;
  3761                           
  3762                           ;incstack = 0
  3763  0000' C000' F000'        	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3764  0004' C001' F001'        	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3765  0008' 0012               	return		;funcret
  3766  000A'                    __end_of_EUSART1_SetErrorHandler:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           intcon	equ	0xFF2
  3773                           intcon2	equ	0xFF1
  3774                           intcon3	equ	0xFF0
  3775                           indf0	equ	0xFEF
  3776                           postinc0	equ	0xFEE
  3777                           fsr0h	equ	0xFEA
  3778                           fsr0l	equ	0xFE9
  3779                           wreg	equ	0xFE8
  3780                           indf2	equ	0xFDF
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _EUSART1_Write *****************
  3787 ;; Defined at:
  3788 ;;		line 196 in file "mcc_generated_files/eusart1.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  txData          1    wreg     unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  txData          1    0[BANK0 ] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;Total ram usage:        1 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    7
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text29
  3817  0000'                    __ptext29:
  3818                           	opt stack 0
  3819  0000'                    _EUSART1_Write:
  3820                           	opt stack 23
  3821                           
  3822                           ;incstack = 0
  3823                           ;EUSART1_Write@txData stored from wreg
  3824  0000' 0100               	movlb	0	; () banked
  3825  0002' 6F00'              	movwf	EUSART1_Write@txData& (0+255),b
  3826  0004'                    
  3827                           ;eusart1.c: 199: {
  3828                           
  3829                           ;eusart1.c: 198: while(0 == eusart1TxBufferRemaining)
  3830  0004' 0100               	movlb	0	; () banked
  3831  0006' 5100'              	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3832  0008' B4D8               	btfsc	status,2,c
  3833  000A' D7FC               	goto	l10574
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;eusart1.c: 200: }
  3837                           ;eusart1.c: 202: if(0 == PIE1bits.TX1IE)
  3838  000C' B89D               	btfsc	3997,4,c	;volatile
  3839  000E' D003               	goto	l2540
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;eusart1.c: 203: {
  3843                           ;eusart1.c: 204: TXREG1 = txData;
  3844  0010' C000' FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3845                           
  3846                           ;eusart1.c: 205: }
  3847  0014' D012               	goto	l2541
  3848  0016'                    l2540:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;eusart1.c: 206: else
  3852                           ;eusart1.c: 207: {
  3853                           ;eusart1.c: 208: PIE1bits.TX1IE = 0;
  3854  0016' 989D               	bcf	3997,4,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;eusart1.c: 209: eusart1TxBuffer[eusart1TxHead++] = txData;
  3858  0018' 5100'              	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3859  001A' 0D01               	mullw	1
  3860  001C' 0E00'              	movlw	low _eusart1TxBuffer
  3861  001E' 24F3               	addwf	prodl,w,c
  3862  0020' 6ED9               	movwf	fsr2l,c
  3863  0022' 0E00'              	movlw	high _eusart1TxBuffer
  3864  0024' 20F4               	addwfc	prodh,w,c
  3865  0026' 6EDA               	movwf	fsr2h,c
  3866  0028' C000' FFDF         	movff	EUSART1_Write@txData,indf2
  3867                           
  3868                           ; BSR set to: 0
  3869  002C' 2B00'              	incf	_eusart1TxHead& (0+255),f,b	;volatile
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;eusart1.c: 210: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  3873  002E' 5100'              	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3874  0030' B4D8               	btfsc	status,2,c
  3875  0032' D002               	goto	l2542
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;eusart1.c: 211: {
  3879                           ;eusart1.c: 212: eusart1TxHead = 0;
  3880  0034' 0E00               	movlw	0
  3881  0036' 6F00'              	movwf	_eusart1TxHead& (0+255),b	;volatile
  3882  0038'                    l2542:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;eusart1.c: 213: }
  3886                           ;eusart1.c: 214: eusart1TxBufferRemaining--;
  3887                           
  3888                           ; BSR set to: 0
  3889  0038' 0700'              	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3890  003A'                    l2541:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;eusart1.c: 215: }
  3894                           ;eusart1.c: 216: PIE1bits.TX1IE = 1;
  3895                           
  3896                           ; BSR set to: 0
  3897  003A' 889D               	bsf	3997,4,c	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900  003C' 0012               	return		;funcret
  3901  003E'                    __end_of_EUSART1_Write:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           intcon2	equ	0xFF1
  3911                           intcon3	equ	0xFF0
  3912                           indf0	equ	0xFEF
  3913                           postinc0	equ	0xFEE
  3914                           fsr0h	equ	0xFEA
  3915                           fsr0l	equ	0xFE9
  3916                           wreg	equ	0xFE8
  3917                           indf2	equ	0xFDF
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _INTERRUPT_InterruptManager *****************
  3924 ;; Defined at:
  3925 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;Total ram usage:       10 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    6
  3946 ;; This function calls:
  3947 ;;		Absolute function
  3948 ;;		_EUSART1_Receive_ISR
  3949 ;;		_EUSART1_Transmit_ISR
  3950 ;;		_INT1_ISR
  3951 ;;		_INT2_ISR
  3952 ;;		_PIN_MANAGER_IOC
  3953 ;;		_TMR1_ISR
  3954 ;; This function is called by:
  3955 ;;		Interrupt level 2
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	intcode
  3960  0000'                    __pintcode:
  3961                           	opt stack 0
  3962  0000'                    _INTERRUPT_InterruptManager:
  3963                           	opt stack 20
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  0000' CFFA F033'         	movff	pclath,??_INTERRUPT_InterruptManager
  3968  0004' CFFB F034'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3969  0008' CFE9 F035'         	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3970  000C' CFEA F036'         	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3971  0010' CFE1 F037'         	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3972  0014' CFE2 F038'         	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3973  0018' CFD9 F039'         	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3974  001C' CFDA F03A'         	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3975  0020' CFF3 F03B'         	movff	prodl,??_INTERRUPT_InterruptManager+8
  3976  0024' CFF4 F03C'         	movff	prodh,??_INTERRUPT_InterruptManager+9
  3977  0028' EE10' F000'        	lfsr	1,___inthi_sp
  3978                           
  3979                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3980  002C' B6F0               	btfsc	intcon3,3,c	;volatile
  3981  002E' A0F0               	btfss	intcon3,0,c	;volatile
  3982  0030' D003               	goto	i2l2244
  3983                           
  3984                           ;interrupt_manager.c: 62: {
  3985                           ;interrupt_manager.c: 63: INT1_ISR();
  3986  0032' EC00' F000'        	call	_INT1_ISR	;wreg free
  3987                           
  3988                           ;interrupt_manager.c: 64: }
  3989  0036' D031               	goto	i2u1266_49
  3990  0038'                    i2l2244:
  3991                           
  3992                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  3993  0038' B8F0               	btfsc	intcon3,4,c	;volatile
  3994  003A' A2F0               	btfss	intcon3,1,c	;volatile
  3995  003C' D003               	goto	i2l2246
  3996                           
  3997                           ;interrupt_manager.c: 66: {
  3998                           ;interrupt_manager.c: 67: INT2_ISR();
  3999  003E' EC00' F000'        	call	_INT2_ISR	;wreg free
  4000                           
  4001                           ;interrupt_manager.c: 68: }
  4002  0042' D02B               	goto	i2u1266_49
  4003  0044'                    i2l2246:
  4004                           
  4005                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  4006  0044' B6F2               	btfsc	intcon,3,c	;volatile
  4007  0046' A0F2               	btfss	intcon,0,c	;volatile
  4008  0048' D003               	goto	i2l2248
  4009                           
  4010                           ;interrupt_manager.c: 70: {
  4011                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
  4012  004A' EC00' F000'        	call	_PIN_MANAGER_IOC	;wreg free
  4013                           
  4014                           ;interrupt_manager.c: 72: }
  4015  004E' D025               	goto	i2u1266_49
  4016  0050'                    i2l2248:
  4017                           
  4018                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
  4019  0050' ACF2               	btfss	intcon,6,c	;volatile
  4020  0052' D023               	goto	i2u1266_49
  4021                           
  4022                           ;interrupt_manager.c: 74: {
  4023                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4024  0054' B09D               	btfsc	3997,0,c	;volatile
  4025  0056' A09E               	btfss	3998,0,c	;volatile
  4026  0058' D002               	goto	i2l2251
  4027                           
  4028                           ;interrupt_manager.c: 76: {
  4029                           ;interrupt_manager.c: 77: TMR1_ISR();
  4030  005A' EC00' F000'        	call	_TMR1_ISR	;wreg free
  4031  005E'                    i2l2251:
  4032                           
  4033                           ;interrupt_manager.c: 78: }
  4034                           ;interrupt_manager.c: 79: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4035  005E' B89D               	btfsc	3997,4,c	;volatile
  4036  0060' A89E               	btfss	3998,4,c	;volatile
  4037  0062' D00C               	goto	i2u1263_49
  4038                           
  4039                           ;interrupt_manager.c: 80: {
  4040                           ;interrupt_manager.c: 81: EUSART1_TxDefaultInterruptHandler();
  4041  0064' D801               	call	i2u1263_48
  4042  0066' D00A               	goto	i2u1263_49
  4043  0068'                    i2u1263_48:
  4044  0068' 0005               	push	
  4045  006A' 6EFA               	movwf	pclath,c
  4046  006C' 0101               	movlb	1	; () banked
  4047  006E' 5100'              	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4048  0070' 6EFD               	movwf	tosl,c
  4049  0072' 5100'              	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4050  0074' 6EFE               	movwf	tosh,c
  4051  0076' 6AFF               	clrf	tosu,c
  4052  0078' 50FA               	movf	pclath,w,c
  4053  007A' 0012               	return		;indir
  4054  007C'                    i2u1263_49:
  4055                           
  4056                           ;interrupt_manager.c: 82: }
  4057                           ;interrupt_manager.c: 83: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4058  007C' BA9D               	btfsc	3997,5,c	;volatile
  4059  007E' AA9E               	btfss	3998,5,c	;volatile
  4060  0080' D00C               	goto	i2u1266_49
  4061                           
  4062                           ;interrupt_manager.c: 84: {
  4063                           ;interrupt_manager.c: 85: EUSART1_RxDefaultInterruptHandler();
  4064  0082' D801               	call	i2u1266_48
  4065  0084' D00A               	goto	i2u1266_49
  4066  0086'                    i2u1266_48:
  4067  0086' 0005               	push	
  4068  0088' 6EFA               	movwf	pclath,c
  4069  008A' 0101               	movlb	1	; () banked
  4070  008C' 5100'              	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4071  008E' 6EFD               	movwf	tosl,c
  4072  0090' 5100'              	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4073  0092' 6EFE               	movwf	tosh,c
  4074  0094' 6AFF               	clrf	tosu,c
  4075  0096' 50FA               	movf	pclath,w,c
  4076  0098' 0012               	return		;indir
  4077  009A'                    i2u1266_49:
  4078                           
  4079                           ;interrupt_manager.c: 92: else
  4080                           ;interrupt_manager.c: 93: {
  4081                           
  4082                           ;interrupt_manager.c: 90: }
  4083                           ;interrupt_manager.c: 91: }
  4084                           
  4085                           ;interrupt_manager.c: 87: else
  4086                           ;interrupt_manager.c: 88: {
  4087                           
  4088                           ;interrupt_manager.c: 86: }
  4089  009A' C03C' FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4090  009E' C03B' FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4091  00A2' C03A' FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4092  00A6' C039' FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4093  00AA' C038' FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4094  00AE' C037' FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4095  00B2' C036' FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4096  00B6' C035' FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4097  00BA' C034' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4098  00BE' C033' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4099  00C2' 0011               	retfie		f
  4100  00C4'                    __end_of_INTERRUPT_InterruptManager:
  4101                           	opt stack 0
  4102                           tosu	equ	0xFFF
  4103                           tosh	equ	0xFFE
  4104                           tosl	equ	0xFFD
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           intcon3	equ	0xFF0
  4116                           indf0	equ	0xFEF
  4117                           postinc0	equ	0xFEE
  4118                           fsr0h	equ	0xFEA
  4119                           fsr0l	equ	0xFE9
  4120                           wreg	equ	0xFE8
  4121                           fsr1h	equ	0xFE2
  4122                           fsr1l	equ	0xFE1
  4123                           indf2	equ	0xFDF
  4124                           postdec2	equ	0xFDD
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _TMR1_ISR *****************
  4130 ;; Defined at:
  4131 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    5
  4152 ;; This function calls:
  4153 ;;		_TMR1_CallBack
  4154 ;;		_TMR1_WriteTimer
  4155 ;; This function is called by:
  4156 ;;		_INTERRUPT_InterruptManager
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text31
  4161  0000'                    __ptext31:
  4162                           	opt stack 0
  4163  0000'                    _TMR1_ISR:
  4164                           	opt stack 20
  4165                           
  4166                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
  4167                           
  4168                           ;incstack = 0
  4169  0000' 909E               	bcf	3998,0,c	;volatile
  4170                           
  4171                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
  4172  0002' C004' F000'        	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  4173  0006' C005' F001'        	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  4174  000A' EC00' F000'        	call	_TMR1_WriteTimer	;wreg free
  4175                           
  4176                           ;tmr1.c: 167: TMR1_CallBack();
  4177  000E' EC00' F000'        	call	_TMR1_CallBack	;wreg free
  4178  0012' 0012               	return		;funcret
  4179  0014'                    __end_of_TMR1_ISR:
  4180                           	opt stack 0
  4181                           tosu	equ	0xFFF
  4182                           tosh	equ	0xFFE
  4183                           tosl	equ	0xFFD
  4184                           pclatu	equ	0xFFB
  4185                           pclath	equ	0xFFA
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           intcon2	equ	0xFF1
  4194                           intcon3	equ	0xFF0
  4195                           indf0	equ	0xFEF
  4196                           postinc0	equ	0xFEE
  4197                           fsr0h	equ	0xFEA
  4198                           fsr0l	equ	0xFE9
  4199                           wreg	equ	0xFE8
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postdec2	equ	0xFDD
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _TMR1_CallBack *****************
  4209 ;; Defined at:
  4210 ;;		line 170 in file "mcc_generated_files/tmr1.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    4
  4231 ;; This function calls:
  4232 ;;		Absolute function
  4233 ;;		_TMR1_DefaultInterruptHandler
  4234 ;;		_TMR_ISR_lora
  4235 ;; This function is called by:
  4236 ;;		_TMR1_ISR
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text32
  4241  0000'                    __ptext32:
  4242                           	opt stack 0
  4243  0000'                    _TMR1_CallBack:
  4244                           	opt stack 20
  4245                           
  4246                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
  4247                           
  4248                           ;incstack = 0
  4249  0000' 0100               	movlb	0	; () banked
  4250  0002' 5100'              	movf	_TMR1_InterruptHandler& (0+255),w,b
  4251  0004' 1100'              	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4252  0006' B4D8               	btfsc	status,2,c
  4253  0008' 0012               	return	
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;tmr1.c: 174: {
  4257                           ;tmr1.c: 175: TMR1_InterruptHandler();
  4258  000A' D801               	call	i2u902_48
  4259  000C' 0012               	return	
  4260  000E'                    i2u902_48:
  4261  000E' 0005               	push	
  4262  0010' 6EFA               	movwf	pclath,c
  4263  0012' 5100'              	movf	_TMR1_InterruptHandler& (0+255),w,b
  4264  0014' 6EFD               	movwf	tosl,c
  4265  0016' 5100'              	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4266  0018' 6EFE               	movwf	tosh,c
  4267  001A' 6AFF               	clrf	tosu,c
  4268  001C' 50FA               	movf	pclath,w,c
  4269  001E' 0012               	return		;indir
  4270  0020'                    __end_of_TMR1_CallBack:
  4271                           	opt stack 0
  4272                           tosu	equ	0xFFF
  4273                           tosh	equ	0xFFE
  4274                           tosl	equ	0xFFD
  4275                           pclatu	equ	0xFFB
  4276                           pclath	equ	0xFFA
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           intcon2	equ	0xFF1
  4285                           intcon3	equ	0xFF0
  4286                           indf0	equ	0xFEF
  4287                           postinc0	equ	0xFEE
  4288                           fsr0h	equ	0xFEA
  4289                           fsr0l	equ	0xFE9
  4290                           wreg	equ	0xFE8
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4300 ;; Defined at:
  4301 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		None
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_TMR1_Initialize
  4325 ;;		_TMR1_CallBack
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text33
  4330  0000'                    __ptext33:
  4331                           	opt stack 0
  4332  0000'                    _TMR1_DefaultInterruptHandler:
  4333                           	opt stack 23
  4334                           
  4335                           ;incstack = 0
  4336  0000' 0012               	return		;funcret
  4337  0002'                    __end_of_TMR1_DefaultInterruptHandler:
  4338                           	opt stack 0
  4339                           tosu	equ	0xFFF
  4340                           tosh	equ	0xFFE
  4341                           tosl	equ	0xFFD
  4342                           pclatu	equ	0xFFB
  4343                           pclath	equ	0xFFA
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           intcon	equ	0xFF2
  4351                           intcon2	equ	0xFF1
  4352                           intcon3	equ	0xFF0
  4353                           indf0	equ	0xFEF
  4354                           postinc0	equ	0xFEE
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           postdec2	equ	0xFDD
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _TMR_ISR_lora *****************
  4367 ;; Defined at:
  4368 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    3
  4389 ;; This function calls:
  4390 ;;		_SwTimersInterrupt
  4391 ;;		_TMR_SwapTimer
  4392 ;; This function is called by:
  4393 ;;		_TMR_ISR_Lora_Init
  4394 ;;		_TMR1_CallBack
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text34
  4399  0000'                    __ptext34:
  4400                           	opt stack 0
  4401  0000'                    _TMR_ISR_lora:
  4402                           	opt stack 20
  4403                           
  4404                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
  4405                           
  4406                           ;incstack = 0
  4407  0000' 0E01               	movlw	1
  4408  0002' 0100               	movlb	0	; () banked
  4409  0004' 6F00'              	movwf	_timerOverflow& (0+255),b	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
  4413  0006' EC00' F000'        	call	_SwTimersInterrupt	;wreg free
  4414  000A' C020' F008'        	movff	?_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
  4415  000E' C021' F009'        	movff	?_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
  4416  0012' C022' F00A'        	movff	?_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
  4417  0016' C023' F00B'        	movff	?_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
  4418                           
  4419                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
  4420  001A' 0100               	movlb	0	; () banked
  4421  001C' 5100'              	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
  4422  001E' E11D               	bnz	i2l2171
  4423  0020' 0500'              	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
  4424  0022' B0D8               	btfsc	status,0,c
  4425  0024' 0012               	return	
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;tmr_lora_addons.c: 66: {
  4429                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
  4430  0026' C008' F031'        	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
  4431  002A' C009' F032'        	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
  4432  002E' 1E31'              	comf	??_TMR_ISR_lora,f,c
  4433  0030' 1E32'              	comf	??_TMR_ISR_lora+1,f,c
  4434  0032' 4A31'              	infsnz	??_TMR_ISR_lora,f,c
  4435  0034' 2A32'              	incf	??_TMR_ISR_lora+1,f,c
  4436  0036' C031' F006'        	movff	??_TMR_ISR_lora,_reloadVal	;volatile
  4437  003A' C032' F007'        	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
  4441  003E' C006' F008'        	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
  4442  0042' C007' F009'        	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
  4443  0046' EC00' F000'        	call	_TMR_SwapTimer	;wreg free
  4444  004A' C008' F008'        	movff	?_TMR_SwapTimer,_ticksAdded	;volatile
  4445  004E' C009' F009'        	movff	?_TMR_SwapTimer+1,_ticksAdded+1	;volatile
  4446  0052' 0100               	movlb	0	; () banked
  4447  0054' 6B00'              	clrf	(_ticksAdded+2)& (0+255),b	;volatile
  4448  0056' 6B00'              	clrf	(_ticksAdded+3)& (0+255),b	;volatile
  4449  0058' 0012               	return	
  4450  005A'                    i2l2171:
  4451                           
  4452                           ; BSR set to: 0
  4453  005A' 0012               	return		;funcret
  4454  005C'                    __end_of_TMR_ISR_lora:
  4455                           	opt stack 0
  4456                           tosu	equ	0xFFF
  4457                           tosh	equ	0xFFE
  4458                           tosl	equ	0xFFD
  4459                           pclatu	equ	0xFFB
  4460                           pclath	equ	0xFFA
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           intcon2	equ	0xFF1
  4469                           intcon3	equ	0xFF0
  4470                           indf0	equ	0xFEF
  4471                           postinc0	equ	0xFEE
  4472                           fsr0h	equ	0xFEA
  4473                           fsr0l	equ	0xFE9
  4474                           wreg	equ	0xFE8
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           indf2	equ	0xFDF
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _TMR_SwapTimer *****************
  4484 ;; Defined at:
  4485 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  timerVal        2    8[COMRAM] unsigned int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    8[COMRAM] unsigned int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:        2 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    1
  4506 ;; This function calls:
  4507 ;;		_TMR1_ReadTimer
  4508 ;;		_TMR1_WriteTimer
  4509 ;; This function is called by:
  4510 ;;		_TMR_ISR_lora
  4511 ;;		_TMR_OverrideRemaining
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text35
  4516  0000'                    __ptext35:
  4517                           	opt stack 0
  4518  0000'                    _TMR_SwapTimer:
  4519                           	opt stack 21
  4520                           
  4521                           ;sw_timer.c: 114: static uint16_t oldVal;
  4522                           ;sw_timer.c: 115: static uint16_t retVal;
  4523                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;incstack = 0
  4527  0000' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
  4528  0004' C000' F030'        	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
  4529  0008' C001' F031'        	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
  4530  000C'                    
  4531                           ;sw_timer.c: 123: ;
  4532  000C' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
  4533  0010' 0100               	movlb	0	; () banked
  4534  0012' 5100'              	movf	TMR_SwapTimer@oldVal& (0+255),w,b
  4535  0014' 1800'              	xorwf	?_TMR1_ReadTimer,w,c
  4536  0016' E104               	bnz	i2l8766
  4537  0018' 5100'              	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
  4538  001A' 1801'              	xorwf	?_TMR1_ReadTimer+1,w,c
  4539  001C' B4D8               	btfsc	status,2,c
  4540  001E' D7F6               	goto	i2l1535
  4541  0020'                    i2l8766:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
  4545  0020' C008' F000'        	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
  4546  0024' C009' F001'        	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
  4547  0028' EC00' F000'        	call	_TMR1_WriteTimer	;wreg free
  4548                           
  4549                           ;sw_timer.c: 128: oldVal++;
  4550  002C' 0100               	movlb	0	; () banked
  4551  002E' 4B00'              	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
  4552  0030' 2B00'              	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;sw_timer.c: 130: retVal = oldVal;
  4556  0032' C030' F02E'        	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
  4557  0036' C031' F02F'        	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;sw_timer.c: 132: return retVal;
  4561  003A' C02E' F008'        	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
  4562  003E' C02F' F009'        	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
  4563  0042' 0012               	return	
  4564  0044'                    __end_of_TMR_SwapTimer:
  4565                           	opt stack 0
  4566                           tosu	equ	0xFFF
  4567                           tosh	equ	0xFFE
  4568                           tosl	equ	0xFFD
  4569                           pclatu	equ	0xFFB
  4570                           pclath	equ	0xFFA
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           intcon2	equ	0xFF1
  4579                           intcon3	equ	0xFF0
  4580                           indf0	equ	0xFEF
  4581                           postinc0	equ	0xFEE
  4582                           fsr0h	equ	0xFEA
  4583                           fsr0l	equ	0xFE9
  4584                           wreg	equ	0xFE8
  4585                           fsr1h	equ	0xFE2
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _TMR1_WriteTimer *****************
  4594 ;; Defined at:
  4595 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  timerVal        2    0[COMRAM] unsigned int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        2 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_TMR_SwapTimer
  4619 ;;		_TMR1_ISR
  4620 ;;		_TMR1_Reload
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text36
  4625  0000'                    __ptext36:
  4626                           	opt stack 0
  4627  0000'                    _TMR1_WriteTimer:
  4628                           	opt stack 24
  4629                           
  4630                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;incstack = 0
  4634  0000' A4CD               	btfss	4045,2,c	;volatile
  4635  0002' D007               	goto	i2l2627
  4636                           
  4637                           ;tmr1.c: 124: {
  4638                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
  4639  0004' 90CD               	bcf	4045,0,c	;volatile
  4640                           
  4641                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4642  0006' 5001'              	movf	TMR1_WriteTimer@timerVal+1,w,c
  4643  0008' 6ECF               	movwf	4047,c	;volatile
  4644                           
  4645                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
  4646  000A' C000' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4647                           
  4648                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
  4649  000E' 80CD               	bsf	4045,0,c	;volatile
  4650                           
  4651                           ;tmr1.c: 134: }
  4652  0010' 0012               	return	
  4653  0012'                    i2l2627:
  4654                           
  4655                           ;tmr1.c: 135: else
  4656                           ;tmr1.c: 136: {
  4657                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
  4658  0012' 5001'              	movf	TMR1_WriteTimer@timerVal+1,w,c
  4659  0014' 6ECF               	movwf	4047,c	;volatile
  4660                           
  4661                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
  4662  0016' C000' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4663  001A' 0012               	return	
  4664  001C'                    __end_of_TMR1_WriteTimer:
  4665                           	opt stack 0
  4666                           tosu	equ	0xFFF
  4667                           tosh	equ	0xFFE
  4668                           tosl	equ	0xFFD
  4669                           pclatu	equ	0xFFB
  4670                           pclath	equ	0xFFA
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           intcon2	equ	0xFF1
  4679                           intcon3	equ	0xFF0
  4680                           indf0	equ	0xFEF
  4681                           postinc0	equ	0xFEE
  4682                           fsr0h	equ	0xFEA
  4683                           fsr0l	equ	0xFE9
  4684                           wreg	equ	0xFE8
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postdec2	equ	0xFDD
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _SwTimersInterrupt *****************
  4694 ;; Defined at:
  4695 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  ticksToNextT    4   44[COMRAM] unsigned long 
  4700 ;;  timeElapsed     4   40[COMRAM] unsigned long 
  4701 ;;  i               1   48[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4   32[COMRAM] unsigned long 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:       17 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		_TMR_GetDeltaTime
  4720 ;; This function is called by:
  4721 ;;		_TMR_ISR_lora
  4722 ;;		_SwTimerReadValue
  4723 ;;		_SwTimerStart
  4724 ;;		_SwTimersCanSleep
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text37
  4729  0000'                    __ptext37:
  4730                           	opt stack 0
  4731  0000'                    _SwTimersInterrupt:
  4732                           	opt stack 20
  4733                           
  4734                           ;sw_timer.c: 289: uint8_t i;
  4735                           ;sw_timer.c: 290: uint32_t timeElapsed;
  4736                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
  4737                           
  4738                           ;incstack = 0
  4739  0000' 682C'              	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
  4740  0002' 682D'              	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
  4741  0004' 682E'              	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
  4742  0006' 682F'              	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
  4743                           
  4744                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
  4745  0008' EC00' F000'        	call	_TMR_GetDeltaTime	;wreg free
  4746  000C' C008' F028'        	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
  4747  0010' C009' F029'        	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
  4748  0014' C00A' F02A'        	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
  4749  0018' C00B' F02B'        	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
  4750                           
  4751                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
  4752  001C' 0E00               	movlw	0
  4753  001E' 6E30'              	movwf	SwTimersInterrupt@i,c
  4754  0020' D061               	goto	i2l1592
  4755  0022'                    
  4756                           ;sw_timer.c: 298: {
  4757                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
  4758  0022' 5030'              	movf	SwTimersInterrupt@i,w,c
  4759  0024' 0D08               	mullw	8
  4760  0026' 0E04               	movlw	4
  4761  0028' 26F3               	addwf	prodl,f,c
  4762  002A' 0E00               	movlw	0
  4763  002C' 22F4               	addwfc	prodh,f,c
  4764  002E' 0E00'              	movlw	low _swTimers
  4765  0030' 24F3               	addwf	prodl,w,c
  4766  0032' 6ED9               	movwf	fsr2l,c
  4767  0034' 0E00'              	movlw	high _swTimers
  4768  0036' 20F4               	addwfc	prodh,w,c
  4769  0038' 6EDA               	movwf	fsr2h,c
  4770  003A' 04DE               	decf	postinc2,w,c
  4771  003C' A4D8               	btfss	status,2,c
  4772  003E' D051               	goto	i2l1597
  4773                           
  4774                           ;sw_timer.c: 302: {
  4775                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
  4776  0040' 5030'              	movf	SwTimersInterrupt@i,w,c
  4777  0042' 0D08               	mullw	8
  4778  0044' 0E00'              	movlw	low _swTimers
  4779  0046' 24F3               	addwf	prodl,w,c
  4780  0048' 6ED9               	movwf	fsr2l,c
  4781  004A' 0E00'              	movlw	high _swTimers
  4782  004C' 20F4               	addwfc	prodh,w,c
  4783  004E' 6EDA               	movwf	fsr2h,c
  4784  0050' 50DE               	movf	postinc2,w,c
  4785  0052' 5C28'              	subwf	SwTimersInterrupt@timeElapsed,w,c
  4786  0054' 50DE               	movf	postinc2,w,c
  4787  0056' 5829'              	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
  4788  0058' 50DE               	movf	postinc2,w,c
  4789  005A' 582A'              	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
  4790  005C' 50DE               	movf	postinc2,w,c
  4791  005E' 582B'              	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
  4792  0060' A0D8               	btfss	status,0,c
  4793  0062' D00D               	goto	i2l1595
  4794                           
  4795                           ;sw_timer.c: 304: {
  4796                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
  4797  0064' 5030'              	movf	SwTimersInterrupt@i,w,c
  4798  0066' 0D08               	mullw	8
  4799  0068' 0E00'              	movlw	low _swTimers
  4800  006A' 24F3               	addwf	prodl,w,c
  4801  006C' 6ED9               	movwf	fsr2l,c
  4802  006E' 0E00'              	movlw	high _swTimers
  4803  0070' 20F4               	addwfc	prodh,w,c
  4804  0072' 6EDA               	movwf	fsr2h,c
  4805  0074' 6ADE               	clrf	postinc2,c
  4806  0076' 6ADE               	clrf	postinc2,c
  4807  0078' 6ADE               	clrf	postinc2,c
  4808  007A' 6ADD               	clrf	postdec2,c
  4809                           
  4810                           ;sw_timer.c: 306: }
  4811  007C' D032               	goto	i2l1597
  4812  007E'                    i2l1595:
  4813                           
  4814                           ;sw_timer.c: 307: else
  4815                           ;sw_timer.c: 308: {
  4816                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
  4817  007E' 5030'              	movf	SwTimersInterrupt@i,w,c
  4818  0080' 0D08               	mullw	8
  4819  0082' 0E00'              	movlw	low _swTimers
  4820  0084' 24F3               	addwf	prodl,w,c
  4821  0086' 6ED9               	movwf	fsr2l,c
  4822  0088' 0E00'              	movlw	high _swTimers
  4823  008A' 20F4               	addwfc	prodh,w,c
  4824  008C' 6EDA               	movwf	fsr2h,c
  4825  008E' 5028'              	movf	SwTimersInterrupt@timeElapsed,w,c
  4826  0090' 5EDE               	subwf	postinc2,f,c
  4827  0092' 5029'              	movf	SwTimersInterrupt@timeElapsed+1,w,c
  4828  0094' 5ADE               	subwfb	postinc2,f,c
  4829  0096' 502A'              	movf	SwTimersInterrupt@timeElapsed+2,w,c
  4830  0098' 5ADE               	subwfb	postinc2,f,c
  4831  009A' 502B'              	movf	SwTimersInterrupt@timeElapsed+3,w,c
  4832  009C' 5ADE               	subwfb	postinc2,f,c
  4833                           
  4834                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
  4835  009E' 5030'              	movf	SwTimersInterrupt@i,w,c
  4836  00A0' 0D08               	mullw	8
  4837  00A2' 0E00'              	movlw	low _swTimers
  4838  00A4' 24F3               	addwf	prodl,w,c
  4839  00A6' 6ED9               	movwf	fsr2l,c
  4840  00A8' 0E00'              	movlw	high _swTimers
  4841  00AA' 20F4               	addwfc	prodh,w,c
  4842  00AC' 6EDA               	movwf	fsr2h,c
  4843  00AE' 502C'              	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
  4844  00B0' 5CDE               	subwf	postinc2,w,c
  4845  00B2' 502D'              	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
  4846  00B4' 58DE               	subwfb	postinc2,w,c
  4847  00B6' 502E'              	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
  4848  00B8' 58DE               	subwfb	postinc2,w,c
  4849  00BA' 502F'              	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
  4850  00BC' 58DE               	subwfb	postinc2,w,c
  4851  00BE' B0D8               	btfsc	status,0,c
  4852  00C0' D010               	goto	i2l1597
  4853                           
  4854                           ;sw_timer.c: 313: {
  4855                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
  4856  00C2' 5030'              	movf	SwTimersInterrupt@i,w,c
  4857  00C4' 0D08               	mullw	8
  4858  00C6' 0E00'              	movlw	low _swTimers
  4859  00C8' 24F3               	addwf	prodl,w,c
  4860  00CA' 6ED9               	movwf	fsr2l,c
  4861  00CC' 0E00'              	movlw	high _swTimers
  4862  00CE' 20F4               	addwfc	prodh,w,c
  4863  00D0' 6EDA               	movwf	fsr2h,c
  4864  00D2' CFDE F02C'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
  4865  00D6' CFDE F02D'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
  4866  00DA' CFDE F02E'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
  4867  00DE' CFDE F02F'         	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
  4868  00E2'                    i2l1597:
  4869  00E2' 2A30'              	incf	SwTimersInterrupt@i,f,c
  4870  00E4'                    i2l1592:
  4871  00E4' 500C'              	movf	_allocatedTimers,w,c	;volatile
  4872  00E6' 5C30'              	subwf	SwTimersInterrupt@i,w,c
  4873  00E8' A0D8               	btfss	status,0,c
  4874  00EA' D79B               	goto	i2l1593
  4875                           
  4876                           ;sw_timer.c: 315: }
  4877                           ;sw_timer.c: 316: }
  4878                           ;sw_timer.c: 317: }
  4879                           ;sw_timer.c: 318: }
  4880                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
  4881  00EC' C02C' F020'        	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
  4882  00F0' C02D' F021'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
  4883  00F4' C02E' F022'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
  4884  00F8' C02F' F023'        	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
  4885  00FC' 0012               	return		;funcret
  4886  00FE'                    __end_of_SwTimersInterrupt:
  4887                           	opt stack 0
  4888                           tosu	equ	0xFFF
  4889                           tosh	equ	0xFFE
  4890                           tosl	equ	0xFFD
  4891                           pclatu	equ	0xFFB
  4892                           pclath	equ	0xFFA
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           intcon2	equ	0xFF1
  4901                           intcon3	equ	0xFF0
  4902                           indf0	equ	0xFEF
  4903                           postinc0	equ	0xFEE
  4904                           fsr0h	equ	0xFEA
  4905                           fsr0l	equ	0xFE9
  4906                           wreg	equ	0xFE8
  4907                           fsr1h	equ	0xFE2
  4908                           fsr1l	equ	0xFE1
  4909                           indf2	equ	0xFDF
  4910                           postinc2	equ	0xFDE
  4911                           postdec2	equ	0xFDD
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function _TMR_GetDeltaTime *****************
  4917 ;; Defined at:
  4918 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4    8[COMRAM] unsigned long 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;Total ram usage:       24 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    1
  4939 ;; This function calls:
  4940 ;;		_TMR1_ReadTimer
  4941 ;; This function is called by:
  4942 ;;		_SwTimersInterrupt
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text38
  4947  0000'                    __ptext38:
  4948                           	opt stack 0
  4949  0000'                    _TMR_GetDeltaTime:
  4950                           	opt stack 20
  4951                           
  4952                           ;sw_timer.c: 90: static uint32_t retVal;
  4953                           ;sw_timer.c: 91: static uint16_t tmrVal;
  4954                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
  4955                           
  4956                           ;incstack = 0
  4957  0000' EC00' F000'        	call	_TMR1_ReadTimer	;wreg free
  4958  0004' C000' F032'        	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
  4959  0008' C001' F033'        	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
  4960                           
  4961                           ;sw_timer.c: 95: if (timerOverflow == 1)
  4962  000C' 0100               	movlb	0	; () banked
  4963  000E' 0500'              	decf	_timerOverflow& (0+255),w,b	;volatile
  4964  0010' A4D8               	btfss	status,2,c
  4965  0012' D065               	goto	i2l1525
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;sw_timer.c: 96: {
  4969                           ;sw_timer.c: 97: timerOverflow = 0;
  4970  0014' 0E00               	movlw	0
  4971  0016' 6F00'              	movwf	_timerOverflow& (0+255),b	;volatile
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
  4975  0018' C004' F00C'        	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4976  001C' C005' F00D'        	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4977  0020' C006' F00E'        	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4978  0024' C007' F00F'        	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4979  0028' 1E0C'              	comf	??_TMR_GetDeltaTime,f,c
  4980  002A' 1E0D'              	comf	??_TMR_GetDeltaTime+1,f,c
  4981  002C' 1E0E'              	comf	??_TMR_GetDeltaTime+2,f,c
  4982  002E' 1E0F'              	comf	??_TMR_GetDeltaTime+3,f,c
  4983  0030' 2A0C'              	incf	??_TMR_GetDeltaTime,f,c
  4984  0032' 0E00               	movlw	0
  4985  0034' 220D'              	addwfc	??_TMR_GetDeltaTime+1,f,c
  4986  0036' 220E'              	addwfc	??_TMR_GetDeltaTime+2,f,c
  4987  0038' 220F'              	addwfc	??_TMR_GetDeltaTime+3,f,c
  4988  003A' 5006'              	movf	_reloadVal,w,c	;volatile
  4989  003C' 6E00'              	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
  4990  003E' 5007'              	movf	_reloadVal+1,w,c	;volatile
  4991  0040' 6E00'              	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
  4992  0042' 6A00'              	clrf	(??_TMR_GetDeltaTime+6)& (0+255),c
  4993  0044' 6A00'              	clrf	(??_TMR_GetDeltaTime+7)& (0+255),c
  4994  0046' 1E10'              	comf	??_TMR_GetDeltaTime+4,f,c
  4995  0048' 1E11'              	comf	??_TMR_GetDeltaTime+5,f,c
  4996  004A' 1E12'              	comf	??_TMR_GetDeltaTime+6,f,c
  4997  004C' 1E13'              	comf	??_TMR_GetDeltaTime+7,f,c
  4998  004E' 2A10'              	incf	??_TMR_GetDeltaTime+4,f,c
  4999  0050' 0E00               	movlw	0
  5000  0052' 2211'              	addwfc	??_TMR_GetDeltaTime+5,f,c
  5001  0054' 2212'              	addwfc	??_TMR_GetDeltaTime+6,f,c
  5002  0056' 2213'              	addwfc	??_TMR_GetDeltaTime+7,f,c
  5003  0058' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5004  005A' 2410'              	addwf	??_TMR_GetDeltaTime+4,w,c
  5005  005C' 6E00'              	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5006  005E' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5007  0060' 2011'              	addwfc	??_TMR_GetDeltaTime+5,w,c
  5008  0062' 6E00'              	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5009  0064' 0E00               	movlw	0
  5010  0066' 2012'              	addwfc	??_TMR_GetDeltaTime+6,w,c
  5011  0068' 6E00'              	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
  5012  006A' 0E00               	movlw	0
  5013  006C' 2013'              	addwfc	??_TMR_GetDeltaTime+7,w,c
  5014  006E' 6E00'              	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
  5015  0070' 500C'              	movf	??_TMR_GetDeltaTime,w,c
  5016  0072' 2414'              	addwf	??_TMR_GetDeltaTime+8,w,c
  5017  0074' 6E00'              	movwf	(??_TMR_GetDeltaTime+12)& (0+255),c
  5018  0076' 500D'              	movf	??_TMR_GetDeltaTime+1,w,c
  5019  0078' 2015'              	addwfc	??_TMR_GetDeltaTime+9,w,c
  5020  007A' 6E00'              	movwf	(??_TMR_GetDeltaTime+13)& (0+255),c
  5021  007C' 500E'              	movf	??_TMR_GetDeltaTime+2,w,c
  5022  007E' 2016'              	addwfc	??_TMR_GetDeltaTime+10,w,c
  5023  0080' 6E00'              	movwf	(??_TMR_GetDeltaTime+14)& (0+255),c
  5024  0082' 500F'              	movf	??_TMR_GetDeltaTime+3,w,c
  5025  0084' 2017'              	addwfc	??_TMR_GetDeltaTime+11,w,c
  5026  0086' 6E00'              	movwf	(??_TMR_GetDeltaTime+15)& (0+255),c
  5027  0088' 5100'              	movf	_ticksAdded& (0+255),w,b	;volatile
  5028  008A' 2418'              	addwf	??_TMR_GetDeltaTime+12,w,c
  5029  008C' 6E00'              	movwf	(??_TMR_GetDeltaTime+16)& (0+255),c
  5030  008E' 5100'              	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5031  0090' 2019'              	addwfc	??_TMR_GetDeltaTime+13,w,c
  5032  0092' 6E00'              	movwf	(??_TMR_GetDeltaTime+17)& (0+255),c
  5033  0094' 5100'              	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5034  0096' 201A'              	addwfc	??_TMR_GetDeltaTime+14,w,c
  5035  0098' 6E00'              	movwf	(??_TMR_GetDeltaTime+18)& (0+255),c
  5036  009A' 5100'              	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5037  009C' 201B'              	addwfc	??_TMR_GetDeltaTime+15,w,c
  5038  009E' 6E00'              	movwf	(??_TMR_GetDeltaTime+19)& (0+255),c
  5039  00A0' 0E00               	movlw	0
  5040  00A2' 241C'              	addwf	??_TMR_GetDeltaTime+16,w,c
  5041  00A4' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5042  00A6' 0E00               	movlw	0
  5043  00A8' 201D'              	addwfc	??_TMR_GetDeltaTime+17,w,c
  5044  00AA' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5045  00AC' 0E01               	movlw	1
  5046  00AE' 201E'              	addwfc	??_TMR_GetDeltaTime+18,w,c
  5047  00B0' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5048  00B2' 0E00               	movlw	0
  5049  00B4' 201F'              	addwfc	??_TMR_GetDeltaTime+19,w,c
  5050  00B6' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
  5054  00B8' C032' F004'        	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
  5055  00BC' C033' F005'        	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
  5056  00C0' 6B00'              	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
  5057  00C2' 6B00'              	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;sw_timer.c: 100: ticksAdded = 0;
  5061  00C4' 0E00               	movlw	0
  5062  00C6' 6F00'              	movwf	_ticksAdded& (0+255),b	;volatile
  5063  00C8' 0E00               	movlw	0
  5064  00CA' 6F00'              	movwf	(_ticksAdded+1)& (0+255),b	;volatile
  5065  00CC' 0E00               	movlw	0
  5066  00CE' 6F00'              	movwf	(_ticksAdded+2)& (0+255),b	;volatile
  5067  00D0' 0E00               	movlw	0
  5068  00D2' 6F00'              	movwf	(_ticksAdded+3)& (0+255),b	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;sw_timer.c: 101: reloadVal = 0;
  5072  00D4' 0E00               	movlw	0
  5073  00D6' 6E07'              	movwf	_reloadVal+1,c	;volatile
  5074  00D8' 0E00               	movlw	0
  5075  00DA' 6E06'              	movwf	_reloadVal,c	;volatile
  5076                           
  5077                           ;sw_timer.c: 102: }
  5078  00DC' D03D               	goto	i2l1526
  5079  00DE'                    i2l1525:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;sw_timer.c: 103: else
  5083                           ;sw_timer.c: 104: {
  5084                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
  5085                           
  5086                           ; BSR set to: 0
  5087  00DE' C004' F00C'        	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  5088  00E2' C005' F00D'        	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  5089  00E6' C006' F00E'        	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  5090  00EA' C007' F00F'        	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  5091  00EE' 1E0C'              	comf	??_TMR_GetDeltaTime,f,c
  5092  00F0' 1E0D'              	comf	??_TMR_GetDeltaTime+1,f,c
  5093  00F2' 1E0E'              	comf	??_TMR_GetDeltaTime+2,f,c
  5094  00F4' 1E0F'              	comf	??_TMR_GetDeltaTime+3,f,c
  5095  00F6' 2A0C'              	incf	??_TMR_GetDeltaTime,f,c
  5096  00F8' 0E00               	movlw	0
  5097  00FA' 220D'              	addwfc	??_TMR_GetDeltaTime+1,f,c
  5098  00FC' 220E'              	addwfc	??_TMR_GetDeltaTime+2,f,c
  5099  00FE' 220F'              	addwfc	??_TMR_GetDeltaTime+3,f,c
  5100  0100' C006' F010'        	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
  5101  0104' C007' F011'        	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
  5102  0108' 1E10'              	comf	??_TMR_GetDeltaTime+4,f,c
  5103  010A' 1E11'              	comf	??_TMR_GetDeltaTime+5,f,c
  5104  010C' 4A10'              	infsnz	??_TMR_GetDeltaTime+4,f,c
  5105  010E' 2A11'              	incf	??_TMR_GetDeltaTime+5,f,c
  5106  0110' 5100'              	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5107  0112' 2610'              	addwf	??_TMR_GetDeltaTime+4,f,c
  5108  0114' 5100'              	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5109  0116' 2211'              	addwfc	??_TMR_GetDeltaTime+5,f,c
  5110  0118' 5010'              	movf	??_TMR_GetDeltaTime+4,w,c
  5111  011A' 240C'              	addwf	??_TMR_GetDeltaTime,w,c
  5112  011C' 6E00'              	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
  5113  011E' 5011'              	movf	??_TMR_GetDeltaTime+5,w,c
  5114  0120' 200D'              	addwfc	??_TMR_GetDeltaTime+1,w,c
  5115  0122' 6E00'              	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
  5116  0124' 0E00               	movlw	0
  5117  0126' 200E'              	addwfc	??_TMR_GetDeltaTime+2,w,c
  5118  0128' 6E00'              	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5119  012A' 0E00               	movlw	0
  5120  012C' 200F'              	addwfc	??_TMR_GetDeltaTime+3,w,c
  5121  012E' 6E00'              	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5122  0130' 5100'              	movf	_ticksAdded& (0+255),w,b	;volatile
  5123  0132' 2412'              	addwf	??_TMR_GetDeltaTime+6,w,c
  5124  0134' 6F00'              	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5125  0136' 5100'              	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5126  0138' 2013'              	addwfc	??_TMR_GetDeltaTime+7,w,c
  5127  013A' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5128  013C' 5100'              	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5129  013E' 2014'              	addwfc	??_TMR_GetDeltaTime+8,w,c
  5130  0140' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5131  0142' 5100'              	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5132  0144' 2015'              	addwfc	??_TMR_GetDeltaTime+9,w,c
  5133  0146' 6F00'              	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5134                           
  5135                           ;sw_timer.c: 106: ticksAccounted += retVal;
  5136  0148' 5100'              	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
  5137  014A' 2700'              	addwf	_ticksAccounted& (0+255),f,b	;volatile
  5138  014C' 5100'              	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
  5139  014E' 2300'              	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
  5140  0150' 5100'              	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
  5141  0152' 2300'              	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
  5142  0154' 5100'              	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
  5143  0156' 2300'              	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
  5144  0158'                    i2l1526:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;sw_timer.c: 107: }
  5148                           ;sw_timer.c: 109: return retVal;
  5149                           
  5150                           ; BSR set to: 0
  5151  0158' C000' F008'        	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
  5152  015C' C001' F009'        	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
  5153  0160' C002' F00A'        	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
  5154  0164' C003' F00B'        	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
  5155  0168' 0012               	return	
  5156  016A'                    __end_of_TMR_GetDeltaTime:
  5157                           	opt stack 0
  5158                           tosu	equ	0xFFF
  5159                           tosh	equ	0xFFE
  5160                           tosl	equ	0xFFD
  5161                           pclatu	equ	0xFFB
  5162                           pclath	equ	0xFFA
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           intcon3	equ	0xFF0
  5172                           indf0	equ	0xFEF
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _TMR1_ReadTimer *****************
  5187 ;; Defined at:
  5188 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  readVal         2    4[COMRAM] unsigned int 
  5193 ;;  readValLow      1    7[COMRAM] unsigned char 
  5194 ;;  readValHigh     1    6[COMRAM] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMRAM] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;Total ram usage:        8 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_TMR_GetDeltaTime
  5214 ;;		_TMR_SwapTimer
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text39
  5219  0000'                    __ptext39:
  5220                           	opt stack 0
  5221  0000'                    _TMR1_ReadTimer:
  5222                           	opt stack 21
  5223                           
  5224                           ;tmr1.c: 107: uint16_t readVal;
  5225                           ;tmr1.c: 108: uint8_t readValHigh;
  5226                           ;tmr1.c: 109: uint8_t readValLow;
  5227                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;incstack = 0
  5231  0000' 82CD               	bsf	4045,1,c	;volatile
  5232                           
  5233                           ;tmr1.c: 113: readValLow = TMR1L;
  5234  0002' CFCE F007'         	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  5235                           
  5236                           ;tmr1.c: 114: readValHigh = TMR1H;
  5237  0006' CFCF F006'         	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  5238                           
  5239                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  5240  000A' 5006'              	movf	TMR1_ReadTimer@readValHigh,w,c
  5241  000C' 6E00'              	movwf	??_TMR1_ReadTimer& (0+255),c
  5242  000E' 5007'              	movf	TMR1_ReadTimer@readValLow,w,c
  5243  0010' 6E04'              	movwf	TMR1_ReadTimer@readVal,c
  5244  0012' C002' F005'        	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  5245                           
  5246                           ;tmr1.c: 118: return readVal;
  5247  0016' C004' F000'        	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  5248  001A' C005' F001'        	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  5249  001E' 0012               	return	
  5250  0020'                    __end_of_TMR1_ReadTimer:
  5251                           	opt stack 0
  5252                           tosu	equ	0xFFF
  5253                           tosh	equ	0xFFE
  5254                           tosl	equ	0xFFD
  5255                           pclatu	equ	0xFFB
  5256                           pclath	equ	0xFFA
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           prodh	equ	0xFF4
  5262                           prodl	equ	0xFF3
  5263                           intcon	equ	0xFF2
  5264                           intcon2	equ	0xFF1
  5265                           intcon3	equ	0xFF0
  5266                           indf0	equ	0xFEF
  5267                           postinc0	equ	0xFEE
  5268                           fsr0h	equ	0xFEA
  5269                           fsr0l	equ	0xFE9
  5270                           wreg	equ	0xFE8
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _PIN_MANAGER_IOC *****************
  5281 ;; Defined at:
  5282 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    2
  5303 ;; This function calls:
  5304 ;;		_IOCB4_ISR
  5305 ;; This function is called by:
  5306 ;;		_INTERRUPT_InterruptManager
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text40
  5311  0000'                    __ptext40:
  5312                           	opt stack 0
  5313  0000'                    _PIN_MANAGER_IOC:
  5314                           	opt stack 23
  5315                           
  5316                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
  5317                           
  5318                           ;incstack = 0
  5319  0000' B862               	btfsc	3938,4,c	;volatile
  5320                           
  5321                           ;pin_manager.c: 114: {
  5322                           ;pin_manager.c: 115: IOCB4_ISR();
  5323  0002' EC00' F000'        	call	_IOCB4_ISR	;wreg free
  5324                           
  5325                           ;pin_manager.c: 116: }
  5326                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
  5327  0006' 90F2               	bcf	intcon,0,c	;volatile
  5328  0008' 0012               	return		;funcret
  5329  000A'                    __end_of_PIN_MANAGER_IOC:
  5330                           	opt stack 0
  5331                           tosu	equ	0xFFF
  5332                           tosh	equ	0xFFE
  5333                           tosl	equ	0xFFD
  5334                           pclatu	equ	0xFFB
  5335                           pclath	equ	0xFFA
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           intcon2	equ	0xFF1
  5344                           intcon3	equ	0xFF0
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _IOCB4_ISR *****************
  5360 ;; Defined at:
  5361 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Absolute function
  5384 ;;		_DIO2_ISR_Lora
  5385 ;;		_IOCB4_DefaultInterruptHandler
  5386 ;; This function is called by:
  5387 ;;		_PIN_MANAGER_IOC
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text41
  5392  0000'                    __ptext41:
  5393                           	opt stack 0
  5394  0000'                    _IOCB4_ISR:
  5395                           	opt stack 23
  5396                           
  5397                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
  5398                           
  5399                           ;incstack = 0
  5400  0000' 0100               	movlb	0	; () banked
  5401  0002' 5100'              	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5402  0004' 1100'              	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5403  0006' B4D8               	btfsc	status,2,c
  5404  0008' 0012               	return	
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;pin_manager.c: 130: {
  5408                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
  5409  000A' D801               	call	i2u894_48
  5410  000C' 0012               	return	
  5411  000E'                    i2u894_48:
  5412  000E' 0005               	push	
  5413  0010' 6EFA               	movwf	pclath,c
  5414  0012' 5100'              	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5415  0014' 6EFD               	movwf	tosl,c
  5416  0016' 5100'              	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5417  0018' 6EFE               	movwf	tosh,c
  5418  001A' 6AFF               	clrf	tosu,c
  5419  001C' 50FA               	movf	pclath,w,c
  5420  001E' 0012               	return		;indir
  5421  0020'                    __end_of_IOCB4_ISR:
  5422                           	opt stack 0
  5423                           tosu	equ	0xFFF
  5424                           tosh	equ	0xFFE
  5425                           tosl	equ	0xFFD
  5426                           pclatu	equ	0xFFB
  5427                           pclath	equ	0xFFA
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           intcon2	equ	0xFF1
  5436                           intcon3	equ	0xFF0
  5437                           indf0	equ	0xFEF
  5438                           postinc0	equ	0xFEE
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           fsr1h	equ	0xFE2
  5443                           fsr1l	equ	0xFE1
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _DIO2_ISR_Lora *****************
  5452 ;; Defined at:
  5453 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_DIO2_ISR_Lora_Init
  5477 ;;		_IOCB4_ISR
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text42
  5482  0000'                    __ptext42:
  5483                           	opt stack 0
  5484  0000'                    _DIO2_ISR_Lora:
  5485                           	opt stack 23
  5486                           
  5487                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
  5488                           
  5489                           ;incstack = 0
  5490  0000' 0100               	movlb	0	; () banked
  5491  0002' 8500'              	bsf	_dioStatus& (0+255),2,b	;volatile
  5492                           
  5493                           ; BSR set to: 0
  5494  0004' 0012               	return		;funcret
  5495  0006'                    __end_of_DIO2_ISR_Lora:
  5496                           	opt stack 0
  5497                           tosu	equ	0xFFF
  5498                           tosh	equ	0xFFE
  5499                           tosl	equ	0xFFD
  5500                           pclatu	equ	0xFFB
  5501                           pclath	equ	0xFFA
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           intcon2	equ	0xFF1
  5510                           intcon3	equ	0xFF0
  5511                           indf0	equ	0xFEF
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  5526 ;; Defined at:
  5527 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		None
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:        0 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_PIN_MANAGER_Initialize
  5551 ;;		_IOCB4_ISR
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text43
  5556  0000'                    __ptext43:
  5557                           	opt stack 0
  5558  0000'                    _IOCB4_DefaultInterruptHandler:
  5559                           	opt stack 23
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;incstack = 0
  5563  0000' 0012               	return		;funcret
  5564  0002'                    __end_of_IOCB4_DefaultInterruptHandler:
  5565                           	opt stack 0
  5566                           tosu	equ	0xFFF
  5567                           tosh	equ	0xFFE
  5568                           tosl	equ	0xFFD
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           intcon2	equ	0xFF1
  5579                           intcon3	equ	0xFF0
  5580                           indf0	equ	0xFEF
  5581                           postinc0	equ	0xFEE
  5582                           fsr0h	equ	0xFEA
  5583                           fsr0l	equ	0xFE9
  5584                           wreg	equ	0xFE8
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function _INT2_ISR *****************
  5595 ;; Defined at:
  5596 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;		None
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;Total ram usage:        0 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    2
  5617 ;; This function calls:
  5618 ;;		_INT2_CallBack
  5619 ;; This function is called by:
  5620 ;;		_INTERRUPT_InterruptManager
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text44
  5625  0000'                    __ptext44:
  5626                           	opt stack 0
  5627  0000'                    _INT2_ISR:
  5628                           	opt stack 23
  5629                           
  5630                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
  5631                           
  5632                           ;incstack = 0
  5633  0000' 92F0               	bcf	intcon3,1,c	;volatile
  5634                           
  5635                           ;ext_int.c: 64: INT2_CallBack();
  5636  0002' EC00' F000'        	call	_INT2_CallBack	;wreg free
  5637  0006' 0012               	return		;funcret
  5638  0008'                    __end_of_INT2_ISR:
  5639                           	opt stack 0
  5640                           tosu	equ	0xFFF
  5641                           tosh	equ	0xFFE
  5642                           tosl	equ	0xFFD
  5643                           pclatu	equ	0xFFB
  5644                           pclath	equ	0xFFA
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           prodh	equ	0xFF4
  5650                           prodl	equ	0xFF3
  5651                           intcon	equ	0xFF2
  5652                           intcon2	equ	0xFF1
  5653                           intcon3	equ	0xFF0
  5654                           indf0	equ	0xFEF
  5655                           postinc0	equ	0xFEE
  5656                           fsr0h	equ	0xFEA
  5657                           fsr0l	equ	0xFE9
  5658                           wreg	equ	0xFE8
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function _INT2_CallBack *****************
  5669 ;; Defined at:
  5670 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    1
  5691 ;; This function calls:
  5692 ;;		Absolute function
  5693 ;;		_DIO1_ISR_Lora
  5694 ;;		_INT2_DefaultInterruptHandler
  5695 ;; This function is called by:
  5696 ;;		_INT2_ISR
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text45
  5701  0000'                    __ptext45:
  5702                           	opt stack 0
  5703  0000'                    _INT2_CallBack:
  5704                           	opt stack 23
  5705                           
  5706                           ;ext_int.c: 71: if(INT2_InterruptHandler)
  5707                           
  5708                           ;incstack = 0
  5709  0000' 0100               	movlb	0	; () banked
  5710  0002' 5100'              	movf	_INT2_InterruptHandler& (0+255),w,b
  5711  0004' 1100'              	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5712  0006' B4D8               	btfsc	status,2,c
  5713  0008' 0012               	return	
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;ext_int.c: 72: {
  5717                           ;ext_int.c: 73: INT2_InterruptHandler();
  5718  000A' D801               	call	i2u892_48
  5719  000C' 0012               	return	
  5720  000E'                    i2u892_48:
  5721  000E' 0005               	push	
  5722  0010' 6EFA               	movwf	pclath,c
  5723  0012' 5100'              	movf	_INT2_InterruptHandler& (0+255),w,b
  5724  0014' 6EFD               	movwf	tosl,c
  5725  0016' 5100'              	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5726  0018' 6EFE               	movwf	tosh,c
  5727  001A' 6AFF               	clrf	tosu,c
  5728  001C' 50FA               	movf	pclath,w,c
  5729  001E' 0012               	return		;indir
  5730  0020'                    __end_of_INT2_CallBack:
  5731                           	opt stack 0
  5732                           tosu	equ	0xFFF
  5733                           tosh	equ	0xFFE
  5734                           tosl	equ	0xFFD
  5735                           pclatu	equ	0xFFB
  5736                           pclath	equ	0xFFA
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           prodh	equ	0xFF4
  5742                           prodl	equ	0xFF3
  5743                           intcon	equ	0xFF2
  5744                           intcon2	equ	0xFF1
  5745                           intcon3	equ	0xFF0
  5746                           indf0	equ	0xFEF
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           fsr1h	equ	0xFE2
  5752                           fsr1l	equ	0xFE1
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _DIO1_ISR_Lora *****************
  5761 ;; Defined at:
  5762 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_DIO1_ISR_Lora_Init
  5786 ;;		_INT2_CallBack
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text46
  5791  0000'                    __ptext46:
  5792                           	opt stack 0
  5793  0000'                    _DIO1_ISR_Lora:
  5794                           	opt stack 23
  5795                           
  5796                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
  5797                           
  5798                           ;incstack = 0
  5799  0000' 0100               	movlb	0	; () banked
  5800  0002' 8300'              	bsf	_dioStatus& (0+255),1,b	;volatile
  5801                           
  5802                           ; BSR set to: 0
  5803  0004' 0012               	return		;funcret
  5804  0006'                    __end_of_DIO1_ISR_Lora:
  5805                           	opt stack 0
  5806                           tosu	equ	0xFFF
  5807                           tosh	equ	0xFFE
  5808                           tosl	equ	0xFFD
  5809                           pclatu	equ	0xFFB
  5810                           pclath	equ	0xFFA
  5811                           tblptru	equ	0xFF8
  5812                           tblptrh	equ	0xFF7
  5813                           tblptrl	equ	0xFF6
  5814                           tablat	equ	0xFF5
  5815                           prodh	equ	0xFF4
  5816                           prodl	equ	0xFF3
  5817                           intcon	equ	0xFF2
  5818                           intcon2	equ	0xFF1
  5819                           intcon3	equ	0xFF0
  5820                           indf0	equ	0xFEF
  5821                           postinc0	equ	0xFEE
  5822                           fsr0h	equ	0xFEA
  5823                           fsr0l	equ	0xFE9
  5824                           wreg	equ	0xFE8
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           indf2	equ	0xFDF
  5828                           postinc2	equ	0xFDE
  5829                           postdec2	equ	0xFDD
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _INT2_DefaultInterruptHandler *****************
  5835 ;; Defined at:
  5836 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		None
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_EXT_INT_Initialize
  5860 ;;		_INT2_CallBack
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text47
  5865  0000'                    __ptext47:
  5866                           	opt stack 0
  5867  0000'                    _INT2_DefaultInterruptHandler:
  5868                           	opt stack 23
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;incstack = 0
  5872  0000' 0012               	return		;funcret
  5873  0002'                    __end_of_INT2_DefaultInterruptHandler:
  5874                           	opt stack 0
  5875                           tosu	equ	0xFFF
  5876                           tosh	equ	0xFFE
  5877                           tosl	equ	0xFFD
  5878                           pclatu	equ	0xFFB
  5879                           pclath	equ	0xFFA
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           prodh	equ	0xFF4
  5885                           prodl	equ	0xFF3
  5886                           intcon	equ	0xFF2
  5887                           intcon2	equ	0xFF1
  5888                           intcon3	equ	0xFF0
  5889                           indf0	equ	0xFEF
  5890                           postinc0	equ	0xFEE
  5891                           fsr0h	equ	0xFEA
  5892                           fsr0l	equ	0xFE9
  5893                           wreg	equ	0xFE8
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _INT1_ISR *****************
  5904 ;; Defined at:
  5905 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    2
  5926 ;; This function calls:
  5927 ;;		_INT1_CallBack
  5928 ;; This function is called by:
  5929 ;;		_INTERRUPT_InterruptManager
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text48
  5934  0000'                    __ptext48:
  5935                           	opt stack 0
  5936  0000'                    _INT1_ISR:
  5937                           	opt stack 23
  5938                           
  5939                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  5940                           
  5941                           ;incstack = 0
  5942  0000' 90F0               	bcf	intcon3,0,c	;volatile
  5943                           
  5944                           ;ext_int.c: 38: INT1_CallBack();
  5945  0002' EC00' F000'        	call	_INT1_CallBack	;wreg free
  5946  0006' 0012               	return		;funcret
  5947  0008'                    __end_of_INT1_ISR:
  5948                           	opt stack 0
  5949                           tosu	equ	0xFFF
  5950                           tosh	equ	0xFFE
  5951                           tosl	equ	0xFFD
  5952                           pclatu	equ	0xFFB
  5953                           pclath	equ	0xFFA
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           intcon2	equ	0xFF1
  5962                           intcon3	equ	0xFF0
  5963                           indf0	equ	0xFEF
  5964                           postinc0	equ	0xFEE
  5965                           fsr0h	equ	0xFEA
  5966                           fsr0l	equ	0xFE9
  5967                           wreg	equ	0xFE8
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _INT1_CallBack *****************
  5978 ;; Defined at:
  5979 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    1
  6000 ;; This function calls:
  6001 ;;		Absolute function
  6002 ;;		_DIO0_ISR_Lora
  6003 ;;		_INT1_DefaultInterruptHandler
  6004 ;; This function is called by:
  6005 ;;		_INT1_ISR
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text49
  6010  0000'                    __ptext49:
  6011                           	opt stack 0
  6012  0000'                    _INT1_CallBack:
  6013                           	opt stack 23
  6014                           
  6015                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  6016                           
  6017                           ;incstack = 0
  6018  0000' 0100               	movlb	0	; () banked
  6019  0002' 5100'              	movf	_INT1_InterruptHandler& (0+255),w,b
  6020  0004' 1100'              	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6021  0006' B4D8               	btfsc	status,2,c
  6022  0008' 0012               	return	
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;ext_int.c: 46: {
  6026                           ;ext_int.c: 47: INT1_InterruptHandler();
  6027  000A' D801               	call	i2u890_48
  6028  000C' 0012               	return	
  6029  000E'                    i2u890_48:
  6030  000E' 0005               	push	
  6031  0010' 6EFA               	movwf	pclath,c
  6032  0012' 5100'              	movf	_INT1_InterruptHandler& (0+255),w,b
  6033  0014' 6EFD               	movwf	tosl,c
  6034  0016' 5100'              	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6035  0018' 6EFE               	movwf	tosh,c
  6036  001A' 6AFF               	clrf	tosu,c
  6037  001C' 50FA               	movf	pclath,w,c
  6038  001E' 0012               	return		;indir
  6039  0020'                    __end_of_INT1_CallBack:
  6040                           	opt stack 0
  6041                           tosu	equ	0xFFF
  6042                           tosh	equ	0xFFE
  6043                           tosl	equ	0xFFD
  6044                           pclatu	equ	0xFFB
  6045                           pclath	equ	0xFFA
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           intcon2	equ	0xFF1
  6054                           intcon3	equ	0xFF0
  6055                           indf0	equ	0xFEF
  6056                           postinc0	equ	0xFEE
  6057                           fsr0h	equ	0xFEA
  6058                           fsr0l	equ	0xFE9
  6059                           wreg	equ	0xFE8
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           indf2	equ	0xFDF
  6063                           postinc2	equ	0xFDE
  6064                           postdec2	equ	0xFDD
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _DIO0_ISR_Lora *****************
  6070 ;; Defined at:
  6071 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_DIO0_ISR_Lora_Init
  6095 ;;		_INT1_CallBack
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text50
  6100  0000'                    __ptext50:
  6101                           	opt stack 0
  6102  0000'                    _DIO0_ISR_Lora:
  6103                           	opt stack 23
  6104                           
  6105                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
  6106                           
  6107                           ;incstack = 0
  6108  0000' 0100               	movlb	0	; () banked
  6109  0002' 8100'              	bsf	_dioStatus& (0+255),0,b	;volatile
  6110                           
  6111                           ; BSR set to: 0
  6112  0004' 0012               	return		;funcret
  6113  0006'                    __end_of_DIO0_ISR_Lora:
  6114                           	opt stack 0
  6115                           tosu	equ	0xFFF
  6116                           tosh	equ	0xFFE
  6117                           tosl	equ	0xFFD
  6118                           pclatu	equ	0xFFB
  6119                           pclath	equ	0xFFA
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           intcon2	equ	0xFF1
  6128                           intcon3	equ	0xFF0
  6129                           indf0	equ	0xFEF
  6130                           postinc0	equ	0xFEE
  6131                           fsr0h	equ	0xFEA
  6132                           fsr0l	equ	0xFE9
  6133                           wreg	equ	0xFE8
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           indf2	equ	0xFDF
  6137                           postinc2	equ	0xFDE
  6138                           postdec2	equ	0xFDD
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function _INT1_DefaultInterruptHandler *****************
  6144 ;; Defined at:
  6145 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		None
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_EXT_INT_Initialize
  6169 ;;		_INT1_CallBack
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text51
  6174  0000'                    __ptext51:
  6175                           	opt stack 0
  6176  0000'                    _INT1_DefaultInterruptHandler:
  6177                           	opt stack 23
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;incstack = 0
  6181  0000' 0012               	return		;funcret
  6182  0002'                    __end_of_INT1_DefaultInterruptHandler:
  6183                           	opt stack 0
  6184                           tosu	equ	0xFFF
  6185                           tosh	equ	0xFFE
  6186                           tosl	equ	0xFFD
  6187                           pclatu	equ	0xFFB
  6188                           pclath	equ	0xFFA
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           intcon	equ	0xFF2
  6196                           intcon2	equ	0xFF1
  6197                           intcon3	equ	0xFF0
  6198                           indf0	equ	0xFEF
  6199                           postinc0	equ	0xFEE
  6200                           fsr0h	equ	0xFEA
  6201                           fsr0l	equ	0xFE9
  6202                           wreg	equ	0xFE8
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           fsr2h	equ	0xFDA
  6209                           fsr2l	equ	0xFD9
  6210                           status	equ	0xFD8
  6211                           
  6212 ;; *************** function _EUSART1_Transmit_ISR *****************
  6213 ;; Defined at:
  6214 ;;		line 220 in file "mcc_generated_files/eusart1.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_EUSART1_Initialize
  6238 ;;		_INTERRUPT_InterruptManager
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text52
  6243  0000'                    __ptext52:
  6244                           	opt stack 0
  6245  0000'                    _EUSART1_Transmit_ISR:
  6246                           	opt stack 25
  6247                           
  6248                           ;eusart1.c: 224: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6249                           
  6250                           ;incstack = 0
  6251  0000' 0100               	movlb	0	; () banked
  6252  0002' 5100'              	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6253  0004' A4D8               	btfss	status,2,c
  6254  0006' D012               	goto	i2l2546
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;eusart1.c: 225: {
  6258                           ;eusart1.c: 226: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6259  0008' 5100'              	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6260  000A' 0D01               	mullw	1
  6261  000C' 0E00'              	movlw	low _eusart1TxBuffer
  6262  000E' 24F3               	addwf	prodl,w,c
  6263  0010' 6ED9               	movwf	fsr2l,c
  6264  0012' 0E00'              	movlw	high _eusart1TxBuffer
  6265  0014' 20F4               	addwfc	prodh,w,c
  6266  0016' 6EDA               	movwf	fsr2h,c
  6267  0018' 50DF               	movf	indf2,w,c
  6268  001A' 6EAD               	movwf	4013,c	;volatile
  6269                           
  6270                           ; BSR set to: 0
  6271  001C' 2B00'              	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;eusart1.c: 227: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6275  001E' 5100'              	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6276  0020' B4D8               	btfsc	status,2,c
  6277  0022' D002               	goto	i2l2547
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;eusart1.c: 228: {
  6281                           ;eusart1.c: 229: eusart1TxTail = 0;
  6282  0024' 0E00               	movlw	0
  6283  0026' 6F00'              	movwf	_eusart1TxTail& (0+255),b	;volatile
  6284  0028'                    i2l2547:
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;eusart1.c: 230: }
  6288                           ;eusart1.c: 231: eusart1TxBufferRemaining++;
  6289                           
  6290                           ; BSR set to: 0
  6291  0028' 2B00'              	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6292                           
  6293                           ;eusart1.c: 232: }
  6294  002A' 0012               	return	
  6295  002C'                    i2l2546:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;eusart1.c: 233: else
  6299                           ;eusart1.c: 234: {
  6300                           ;eusart1.c: 235: PIE1bits.TX1IE = 0;
  6301  002C' 989D               	bcf	3997,4,c	;volatile
  6302  002E' 0012               	return	
  6303  0030'                    __end_of_EUSART1_Transmit_ISR:
  6304                           	opt stack 0
  6305                           tosu	equ	0xFFF
  6306                           tosh	equ	0xFFE
  6307                           tosl	equ	0xFFD
  6308                           pclatu	equ	0xFFB
  6309                           pclath	equ	0xFFA
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           intcon2	equ	0xFF1
  6318                           intcon3	equ	0xFF0
  6319                           indf0	equ	0xFEF
  6320                           postinc0	equ	0xFEE
  6321                           fsr0h	equ	0xFEA
  6322                           fsr0l	equ	0xFE9
  6323                           wreg	equ	0xFE8
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333 ;; *************** function _EUSART1_Receive_ISR *****************
  6334 ;; Defined at:
  6335 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:        3 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    2
  6356 ;; This function calls:
  6357 ;;		Absolute function
  6358 ;;		_EUSART1_DefaultErrorHandler
  6359 ;;		_EUSART1_DefaultFramingErrorHandler
  6360 ;;		_EUSART1_DefaultOverrunErrorHandler
  6361 ;;		_EUSART1_Read
  6362 ;;		_EUSART1_RxDataHandler
  6363 ;;		_strncat
  6364 ;; This function is called by:
  6365 ;;		_EUSART1_Initialize
  6366 ;;		_INTERRUPT_InterruptManager
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text53
  6371  0000'                    __ptext53:
  6372                           	opt stack 0
  6373  0000'                    _EUSART1_Receive_ISR:
  6374                           	opt stack 23
  6375                           
  6376                           ;eusart1.c: 242: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;incstack = 0
  6380  0000' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  6381  0002' 0D01               	mullw	1
  6382  0004' 0E00'              	movlw	low _eusart1RxStatusBuffer
  6383  0006' 24F3               	addwf	prodl,w,c
  6384  0008' 6ED9               	movwf	fsr2l,c
  6385  000A' 0E00'              	movlw	high _eusart1RxStatusBuffer
  6386  000C' 20F4               	addwfc	prodh,w,c
  6387  000E' 6EDA               	movwf	fsr2h,c
  6388  0010' 0E00               	movlw	0
  6389  0012' 6EDF               	movwf	indf2,c
  6390                           
  6391                           ;eusart1.c: 244: if(RCSTA1bits.FERR){
  6392  0014' A4AB               	btfss	4011,2,c	;volatile
  6393  0016' D015               	goto	i2u1013_49
  6394                           
  6395                           ;eusart1.c: 245: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  6396  0018' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  6397  001A' 0D01               	mullw	1
  6398  001C' 0E00'              	movlw	low _eusart1RxStatusBuffer
  6399  001E' 24F3               	addwf	prodl,w,c
  6400  0020' 6ED9               	movwf	fsr2l,c
  6401  0022' 0E00'              	movlw	high _eusart1RxStatusBuffer
  6402  0024' 20F4               	addwfc	prodh,w,c
  6403  0026' 6EDA               	movwf	fsr2h,c
  6404  0028' 82DF               	bsf	indf2,1,c
  6405                           
  6406                           ;eusart1.c: 246: EUSART1_FramingErrorHandler();
  6407  002A' D801               	call	i2u1013_48
  6408  002C' D00A               	goto	i2u1013_49
  6409  002E'                    i2u1013_48:
  6410  002E' 0005               	push	
  6411  0030' 6EFA               	movwf	pclath,c
  6412  0032' 0101               	movlb	1	; () banked
  6413  0034' 5100'              	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6414  0036' 6EFD               	movwf	tosl,c
  6415  0038' 5100'              	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6416  003A' 6EFE               	movwf	tosh,c
  6417  003C' 6AFF               	clrf	tosu,c
  6418  003E' 50FA               	movf	pclath,w,c
  6419  0040' 0012               	return		;indir
  6420  0042'                    i2u1013_49:
  6421                           
  6422                           ;eusart1.c: 247: }
  6423                           ;eusart1.c: 249: if(RCSTA1bits.OERR){
  6424  0042' A2AB               	btfss	4011,1,c	;volatile
  6425  0044' D015               	goto	i2u1015_49
  6426                           
  6427                           ;eusart1.c: 250: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  6428  0046' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  6429  0048' 0D01               	mullw	1
  6430  004A' 0E00'              	movlw	low _eusart1RxStatusBuffer
  6431  004C' 24F3               	addwf	prodl,w,c
  6432  004E' 6ED9               	movwf	fsr2l,c
  6433  0050' 0E00'              	movlw	high _eusart1RxStatusBuffer
  6434  0052' 20F4               	addwfc	prodh,w,c
  6435  0054' 6EDA               	movwf	fsr2h,c
  6436  0056' 84DF               	bsf	indf2,2,c
  6437                           
  6438                           ;eusart1.c: 251: EUSART1_OverrunErrorHandler();
  6439  0058' D801               	call	i2u1015_48
  6440  005A' D00A               	goto	i2u1015_49
  6441  005C'                    i2u1015_48:
  6442  005C' 0005               	push	
  6443  005E' 6EFA               	movwf	pclath,c
  6444  0060' 0101               	movlb	1	; () banked
  6445  0062' 5100'              	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6446  0064' 6EFD               	movwf	tosl,c
  6447  0066' 5100'              	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6448  0068' 6EFE               	movwf	tosh,c
  6449  006A' 6AFF               	clrf	tosu,c
  6450  006C' 50FA               	movf	pclath,w,c
  6451  006E' 0012               	return		;indir
  6452  0070'                    i2u1015_49:
  6453                           
  6454                           ;eusart1.c: 252: }
  6455                           ;eusart1.c: 254: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  6456  0070' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  6457  0072' 0D01               	mullw	1
  6458  0074' 0E00'              	movlw	low _eusart1RxStatusBuffer
  6459  0076' 24F3               	addwf	prodl,w,c
  6460  0078' 6ED9               	movwf	fsr2l,c
  6461  007A' 0E00'              	movlw	high _eusart1RxStatusBuffer
  6462  007C' 20F4               	addwfc	prodh,w,c
  6463  007E' 6EDA               	movwf	fsr2h,c
  6464  0080' 50DF               	movf	indf2,w,c
  6465  0082' B4D8               	btfsc	status,2,c
  6466  0084' D00C               	goto	i2l2554
  6467                           
  6468                           ;eusart1.c: 255: EUSART1_ErrorHandler();
  6469  0086' D801               	call	i2u1017_48
  6470  0088' 0012               	return	
  6471  008A'                    i2u1017_48:
  6472  008A' 0005               	push	
  6473  008C' 6EFA               	movwf	pclath,c
  6474  008E' 0101               	movlb	1	; () banked
  6475  0090' 5100'              	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6476  0092' 6EFD               	movwf	tosl,c
  6477  0094' 5100'              	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6478  0096' 6EFE               	movwf	tosh,c
  6479  0098' 6AFF               	clrf	tosu,c
  6480  009A' 50FA               	movf	pclath,w,c
  6481  009C' 0012               	return		;indir
  6482  009E'                    i2l2554:
  6483                           
  6484                           ;eusart1.c: 257: EUSART1_RxDataHandler();
  6485  009E' EC00' F000'        	call	_EUSART1_RxDataHandler	;wreg free
  6486                           
  6487                           ;eusart1.c: 258: LATA=0xF0;
  6488  00A2' 0EF0               	movlw	240
  6489  00A4' 6E89               	movwf	3977,c	;volatile
  6490                           
  6491                           ;eusart1.c: 260: datax = EUSART1_Read();
  6492  00A6' EC00' F000'        	call	_EUSART1_Read	;wreg free
  6493  00AA' 0100               	movlb	0	; () banked
  6494  00AC' 6F00'              	movwf	_datax& (0+255),b
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;eusart1.c: 262: datatobesolved = datax;
  6498  00AE' C034' F004'        	movff	_datax,_datatobesolved
  6499  00B2' 6A05'              	clrf	_datatobesolved+1,c
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;eusart1.c: 264: bitStatusbefore1 = (datatobesolved >> 0) & 1;
  6503  00B4' 0E01               	movlw	1
  6504  00B6' 1404'              	andwf	_datatobesolved,w,c
  6505  00B8' 6F00'              	movwf	_bitStatusbefore1& (0+255),b
  6506  00BA' 6B00'              	clrf	(_bitStatusbefore1+1)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;eusart1.c: 265: bitStatusbefore2 = (datatobesolved >> 1) & 1;
  6510  00BC' 3405'              	rlcf	_datatobesolved+1,w,c
  6511  00BE' 3005'              	rrcf	_datatobesolved+1,w,c
  6512  00C0' 6E00'              	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6513  00C2' 3004'              	rrcf	_datatobesolved,w,c
  6514  00C4' 6E00'              	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6515  00C6' 0E01               	movlw	1
  6516  00C8' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6517  00CA' 6F00'              	movwf	_bitStatusbefore2& (0+255),b
  6518  00CC' 6B00'              	clrf	(_bitStatusbefore2+1)& (0+255),b
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;eusart1.c: 266: bitStatusbefore3 = (datatobesolved >> 2) & 1;
  6522  00CE' C004' F008'        	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6523  00D2' C005' F009'        	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6524  00D6' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6525  00D8' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6526  00DA' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6527  00DC' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6528  00DE' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6529  00E0' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6530  00E2' 0E01               	movlw	1
  6531  00E4' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6532  00E6' 6F00'              	movwf	_bitStatusbefore3& (0+255),b
  6533  00E8' 6B00'              	clrf	(_bitStatusbefore3+1)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;eusart1.c: 267: bitStatusbefore4 = (datatobesolved >> 3) & 1;
  6537  00EA' C004' F008'        	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6538  00EE' C005' F009'        	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6539  00F2' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6540  00F4' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6541  00F6' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6542  00F8' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6543  00FA' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6544  00FC' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6545  00FE' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6546  0100' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6547  0102' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6548  0104' 0E01               	movlw	1
  6549  0106' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6550  0108' 6F00'              	movwf	_bitStatusbefore4& (0+255),b
  6551  010A' 6B00'              	clrf	(_bitStatusbefore4+1)& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eusart1.c: 268: bitStatusbefore5 = (datatobesolved >> 4) & 1;
  6555  010C' C004' F008'        	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6556  0110' C005' F009'        	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6557  0114' 0E04               	movlw	4
  6558  0116' 6E00'              	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6559  0118'                    i2u1018_45:
  6560  0118' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6561  011A' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6562  011C' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6563  011E' 2E00'              	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6564  0120' D7FB               	goto	i2u1018_45
  6565  0122' 0E01               	movlw	1
  6566  0124' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6567  0126' 6F00'              	movwf	_bitStatusbefore5& (0+255),b
  6568  0128' 6B00'              	clrf	(_bitStatusbefore5+1)& (0+255),b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;eusart1.c: 269: bitStatusbefore6 = (datatobesolved >> 5) & 1;
  6572  012A' C004' F008'        	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6573  012E' C005' F009'        	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6574  0132' 0E05               	movlw	5
  6575  0134' 6E00'              	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6576  0136'                    i2u1019_45:
  6577  0136' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6578  0138' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6579  013A' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6580  013C' 2E00'              	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6581  013E' D7FB               	goto	i2u1019_45
  6582  0140' 0E01               	movlw	1
  6583  0142' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6584  0144' 6F00'              	movwf	_bitStatusbefore6& (0+255),b
  6585  0146' 6B00'              	clrf	(_bitStatusbefore6+1)& (0+255),b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;eusart1.c: 270: bitStatusbefore7 = (datatobesolved >> 6) & 1;
  6589  0148' C004' F008'        	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6590  014C' C005' F009'        	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6591  0150' 0E06               	movlw	6
  6592  0152' 6E00'              	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6593  0154'                    i2u1020_45:
  6594  0154' 3409'              	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6595  0156' 3209'              	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6596  0158' 3208'              	rrcf	??_EUSART1_Receive_ISR,f,c
  6597  015A' 2E00'              	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6598  015C' D7FB               	goto	i2u1020_45
  6599  015E' 0E01               	movlw	1
  6600  0160' 1408'              	andwf	??_EUSART1_Receive_ISR,w,c
  6601  0162' 6F00'              	movwf	_bitStatusbefore7& (0+255),b
  6602  0164' 6B00'              	clrf	(_bitStatusbefore7+1)& (0+255),b
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;eusart1.c: 272: bitStatus1 = bitStatusbefore1<<0;
  6606  0166' C02A' F01A'        	movff	_bitStatusbefore1,_bitStatus1
  6607  016A' C02B' F01B'        	movff	_bitStatusbefore1+1,_bitStatus1+1
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;eusart1.c: 273: bitStatus2 = bitStatusbefore2<<1;
  6611  016E' 90D8               	bcf	status,0,c
  6612  0170' 3500'              	rlcf	_bitStatusbefore2& (0+255),w,b
  6613  0172' 6F00'              	movwf	_bitStatus2& (0+255),b
  6614  0174' 3500'              	rlcf	(_bitStatusbefore2+1)& (0+255),w,b
  6615  0176' 6F00'              	movwf	(_bitStatus2+1)& (0+255),b
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;eusart1.c: 274: bitStatus3 = bitStatusbefore3<<2;
  6619  0178' C026' F008'        	movff	_bitStatusbefore3,??_EUSART1_Receive_ISR
  6620  017C' C027' F009'        	movff	_bitStatusbefore3+1,??_EUSART1_Receive_ISR+1
  6621  0180' 90D8               	bcf	status,0,c
  6622  0182' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6623  0184' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6624  0186' 90D8               	bcf	status,0,c
  6625  0188' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6626  018A' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6627  018C' C008' F016'        	movff	??_EUSART1_Receive_ISR,_bitStatus3
  6628  0190' C009' F017'        	movff	??_EUSART1_Receive_ISR+1,_bitStatus3+1
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;eusart1.c: 275: bitStatus4 = bitStatusbefore4<<3;
  6632  0194' C024' F008'        	movff	_bitStatusbefore4,??_EUSART1_Receive_ISR
  6633  0198' C025' F009'        	movff	_bitStatusbefore4+1,??_EUSART1_Receive_ISR+1
  6634  019C' 90D8               	bcf	status,0,c
  6635  019E' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6636  01A0' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6637  01A2' 90D8               	bcf	status,0,c
  6638  01A4' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6639  01A6' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6640  01A8' 90D8               	bcf	status,0,c
  6641  01AA' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6642  01AC' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6643  01AE' C008' F014'        	movff	??_EUSART1_Receive_ISR,_bitStatus4
  6644  01B2' C009' F015'        	movff	??_EUSART1_Receive_ISR+1,_bitStatus4+1
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;eusart1.c: 276: bitStatus5 = bitStatusbefore5<<4;
  6648  01B6' C022' F008'        	movff	_bitStatusbefore5,??_EUSART1_Receive_ISR
  6649  01BA' C023' F009'        	movff	_bitStatusbefore5+1,??_EUSART1_Receive_ISR+1
  6650  01BE' 3A08'              	swapf	??_EUSART1_Receive_ISR,f,c
  6651  01C0' 3A09'              	swapf	??_EUSART1_Receive_ISR+1,f,c
  6652  01C2' 0EF0               	movlw	240
  6653  01C4' 1609'              	andwf	??_EUSART1_Receive_ISR+1,f,c
  6654  01C6' 5008'              	movf	??_EUSART1_Receive_ISR,w,c
  6655  01C8' 0B0F               	andlw	15
  6656  01CA' 1209'              	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6657  01CC' 0EF0               	movlw	240
  6658  01CE' 1608'              	andwf	??_EUSART1_Receive_ISR,f,c
  6659  01D0' C008' F012'        	movff	??_EUSART1_Receive_ISR,_bitStatus5
  6660  01D4' C009' F013'        	movff	??_EUSART1_Receive_ISR+1,_bitStatus5+1
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;eusart1.c: 277: bitStatus6 = bitStatusbefore6<<5;
  6664  01D8' C020' F008'        	movff	_bitStatusbefore6,??_EUSART1_Receive_ISR
  6665  01DC' C021' F009'        	movff	_bitStatusbefore6+1,??_EUSART1_Receive_ISR+1
  6666  01E0' 0E05               	movlw	5
  6667  01E2'                    i2u1021_45:
  6668  01E2' 90D8               	bcf	status,0,c
  6669  01E4' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6670  01E6' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6671  01E8' 2EE8               	decfsz	wreg,f,c
  6672  01EA' D7FB               	goto	i2u1021_45
  6673  01EC' C008' F010'        	movff	??_EUSART1_Receive_ISR,_bitStatus6
  6674  01F0' C009' F011'        	movff	??_EUSART1_Receive_ISR+1,_bitStatus6+1
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;eusart1.c: 278: bitStatus7 = bitStatusbefore7<<6;
  6678  01F4' C01E' F008'        	movff	_bitStatusbefore7,??_EUSART1_Receive_ISR
  6679  01F8' C01F' F009'        	movff	_bitStatusbefore7+1,??_EUSART1_Receive_ISR+1
  6680  01FC' 0E06               	movlw	6
  6681  01FE'                    i2u1022_45:
  6682  01FE' 90D8               	bcf	status,0,c
  6683  0200' 3608'              	rlcf	??_EUSART1_Receive_ISR,f,c
  6684  0202' 3609'              	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6685  0204' 2EE8               	decfsz	wreg,f,c
  6686  0206' D7FB               	goto	i2u1022_45
  6687  0208' C008' F00E'        	movff	??_EUSART1_Receive_ISR,_bitStatus7
  6688  020C' C009' F00F'        	movff	??_EUSART1_Receive_ISR+1,_bitStatus7+1
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;eusart1.c: 280: dataresult = bitStatus7 | bitStatus6 | bitStatus5 | bitStatus4 | bitSta
      +                          tus3 | bitStatus2 | bitStatus1;
  6692  0210' 5100'              	movf	_bitStatus6& (0+255),w,b
  6693  0212' 1100'              	iorwf	_bitStatus7& (0+255),w,b
  6694  0214' 6E00'              	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6695  0216' 5100'              	movf	(_bitStatus6+1)& (0+255),w,b
  6696  0218' 1100'              	iorwf	(_bitStatus7+1)& (0+255),w,b
  6697  021A' 6E00'              	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6698  021C' 5100'              	movf	_bitStatus5& (0+255),w,b
  6699  021E' 1208'              	iorwf	??_EUSART1_Receive_ISR,f,c
  6700  0220' 5100'              	movf	(_bitStatus5+1)& (0+255),w,b
  6701  0222' 1209'              	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6702  0224' 5100'              	movf	_bitStatus4& (0+255),w,b
  6703  0226' 1208'              	iorwf	??_EUSART1_Receive_ISR,f,c
  6704  0228' 5100'              	movf	(_bitStatus4+1)& (0+255),w,b
  6705  022A' 1209'              	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6706  022C' 5100'              	movf	_bitStatus3& (0+255),w,b
  6707  022E' 1208'              	iorwf	??_EUSART1_Receive_ISR,f,c
  6708  0230' 5100'              	movf	(_bitStatus3+1)& (0+255),w,b
  6709  0232' 1209'              	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6710  0234' 5100'              	movf	_bitStatus2& (0+255),w,b
  6711  0236' 1208'              	iorwf	??_EUSART1_Receive_ISR,f,c
  6712  0238' 5100'              	movf	(_bitStatus2+1)& (0+255),w,b
  6713  023A' 1209'              	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6714  023C' 5100'              	movf	_bitStatus1& (0+255),w,b
  6715  023E' 1008'              	iorwf	??_EUSART1_Receive_ISR,w,c
  6716  0240' 6F00'              	movwf	_dataresult& (0+255),b
  6717  0242' 5100'              	movf	(_bitStatus1+1)& (0+255),w,b
  6718  0244' 1009'              	iorwf	??_EUSART1_Receive_ISR+1,w,c
  6719  0246' 6F00'              	movwf	(_dataresult+1)& (0+255),b
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;eusart1.c: 282: strncat(dataxstr, &dataresult, 1);
  6723  0248' 0E00'              	movlw	low _dataxstr
  6724  024A' 6E00'              	movwf	strncat@to,c
  6725  024C' 0E00'              	movlw	high _dataxstr
  6726  024E' 6E01'              	movwf	strncat@to+1,c
  6727  0250' 0E00'              	movlw	low _dataresult
  6728  0252' 6E02'              	movwf	strncat@from,c
  6729  0254' 0E00'              	movlw	high _dataresult
  6730  0256' 6E03'              	movwf	strncat@from+1,c
  6731  0258' 0E00               	movlw	0
  6732  025A' 6E05'              	movwf	strncat@size+1,c
  6733  025C' 0E01               	movlw	1
  6734  025E' 6E04'              	movwf	strncat@size,c
  6735  0260' EC00' F000'        	call	_strncat	;wreg free
  6736  0264' 0012               	return	
  6737  0266'                    __end_of_EUSART1_Receive_ISR:
  6738                           	opt stack 0
  6739                           tosu	equ	0xFFF
  6740                           tosh	equ	0xFFE
  6741                           tosl	equ	0xFFD
  6742                           pclatu	equ	0xFFB
  6743                           pclath	equ	0xFFA
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           intcon2	equ	0xFF1
  6752                           intcon3	equ	0xFF0
  6753                           indf0	equ	0xFEF
  6754                           postinc0	equ	0xFEE
  6755                           fsr0h	equ	0xFEA
  6756                           fsr0l	equ	0xFE9
  6757                           wreg	equ	0xFE8
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           fsr2h	equ	0xFDA
  6764                           fsr2l	equ	0xFD9
  6765                           status	equ	0xFD8
  6766                           
  6767 ;; *************** function _strncat *****************
  6768 ;; Defined at:
  6769 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncat.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  to              2    0[COMRAM] PTR unsigned char 
  6772 ;;		 -> dataxstr(3000), 
  6773 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6774 ;;		 -> dataresult(2), 
  6775 ;;  size            2    4[COMRAM] unsigned int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  cp              2    6[COMRAM] PTR unsigned char 
  6778 ;;		 -> dataxstr(3000), 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2    0[COMRAM] PTR unsigned char 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;Total ram usage:        8 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_EUSART1_Receive_ISR
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text54
  6802  0000'                    __ptext54:
  6803                           	opt stack 0
  6804  0000'                    _strncat:
  6805                           	opt stack 24
  6806                           
  6807                           ;incstack = 0
  6808  0000' C000' F006'        	movff	strncat@to,strncat@cp
  6809  0004' C001' F007'        	movff	strncat@to+1,strncat@cp+1
  6810  0008' D002               	goto	i2l3328
  6811  000A' 4A06'              	infsnz	strncat@cp,f,c
  6812  000C' 2A07'              	incf	strncat@cp+1,f,c
  6813  000E'                    i2l3328:
  6814  000E' C006' FFD9         	movff	strncat@cp,fsr2l
  6815  0012' C007' FFDA         	movff	strncat@cp+1,fsr2h
  6816  0016' 50DF               	movf	indf2,w,c
  6817  0018' B4D8               	btfsc	status,2,c
  6818  001A' D008               	goto	i2l3331
  6819  001C' D7F6               	goto	i2l3329
  6820  001E' 0604'              	decf	strncat@size,f,c
  6821  0020' A0D8               	btfss	status,0,c
  6822  0022' 0605'              	decf	strncat@size+1,f,c
  6823  0024' 4A06'              	infsnz	strncat@cp,f,c
  6824  0026' 2A07'              	incf	strncat@cp+1,f,c
  6825  0028' 4A02'              	infsnz	strncat@from,f,c
  6826  002A' 2A03'              	incf	strncat@from+1,f,c
  6827  002C'                    i2l3331:
  6828  002C' 5004'              	movf	strncat@size,w,c
  6829  002E' 1005'              	iorwf	strncat@size+1,w,c
  6830  0030' B4D8               	btfsc	status,2,c
  6831  0032' D00D               	goto	i2u899_40
  6832  0034' C002' FFD9         	movff	strncat@from,fsr2l
  6833  0038' C003' FFDA         	movff	strncat@from+1,fsr2h
  6834  003C' C006' FFE9         	movff	strncat@cp,fsr0l
  6835  0040' C007' FFEA         	movff	strncat@cp+1,fsr0h
  6836  0044' CFDF FFEF          	movff	indf2,indf0
  6837  0048' 50EF               	movf	indf0,w,c
  6838  004A' A4D8               	btfss	status,2,c
  6839  004C' D7E8               	goto	i2l3332
  6840  004E'                    i2u899_40:
  6841  004E' 5004'              	movf	strncat@size,w,c
  6842  0050' 1005'              	iorwf	strncat@size+1,w,c
  6843  0052' A4D8               	btfss	status,2,c
  6844  0054' 0012               	return	
  6845  0056' C006' FFD9         	movff	strncat@cp,fsr2l
  6846  005A' C007' FFDA         	movff	strncat@cp+1,fsr2h
  6847  005E' 0E00               	movlw	0
  6848  0060' 6EDF               	movwf	indf2,c
  6849  0062' 0012               	return	
  6850  0064'                    __end_of_strncat:
  6851                           	opt stack 0
  6852                           tosu	equ	0xFFF
  6853                           tosh	equ	0xFFE
  6854                           tosl	equ	0xFFD
  6855                           pclatu	equ	0xFFB
  6856                           pclath	equ	0xFFA
  6857                           tblptru	equ	0xFF8
  6858                           tblptrh	equ	0xFF7
  6859                           tblptrl	equ	0xFF6
  6860                           tablat	equ	0xFF5
  6861                           prodh	equ	0xFF4
  6862                           prodl	equ	0xFF3
  6863                           intcon	equ	0xFF2
  6864                           intcon2	equ	0xFF1
  6865                           intcon3	equ	0xFF0
  6866                           indf0	equ	0xFEF
  6867                           postinc0	equ	0xFEE
  6868                           fsr0h	equ	0xFEA
  6869                           fsr0l	equ	0xFE9
  6870                           wreg	equ	0xFE8
  6871                           fsr1h	equ	0xFE2
  6872                           fsr1l	equ	0xFE1
  6873                           indf2	equ	0xFDF
  6874                           postinc2	equ	0xFDE
  6875                           postdec2	equ	0xFDD
  6876                           fsr2h	equ	0xFDA
  6877                           fsr2l	equ	0xFD9
  6878                           status	equ	0xFD8
  6879                           
  6880 ;; *************** function _EUSART1_Read *****************
  6881 ;; Defined at:
  6882 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  readValue       1    0[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;Total ram usage:        1 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_EUSART1_Receive_ISR
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text55
  6910  0000'                    __ptext55:
  6911                           	opt stack 0
  6912  0000'                    _EUSART1_Read:
  6913                           	opt stack 24
  6914                           
  6915                           ;eusart1.c: 176: uint8_t readValue = 0;
  6916                           
  6917                           ;incstack = 0
  6918  0000' 0E00               	movlw	0
  6919  0002' 6E00'              	movwf	EUSART1_Read@readValue,c
  6920  0004'                    
  6921                           ;eusart1.c: 179: {
  6922  0004' 0100               	movlb	0	; () banked
  6923  0006' 5100'              	movf	_eusart1RxCount& (0+255),w,b	;volatile
  6924  0008' B4D8               	btfsc	status,2,c
  6925  000A' D7FC               	goto	i2l2531
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;eusart1.c: 180: }
  6929                           ;eusart1.c: 182: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxTail];
  6930                           
  6931                           ; BSR set to: 0
  6932  000C' 5009'              	movf	_eusart1RxTail,w,c	;volatile
  6933  000E' 0D01               	mullw	1
  6934  0010' 0E00'              	movlw	low _eusart1RxStatusBuffer
  6935  0012' 24F3               	addwf	prodl,w,c
  6936  0014' 6ED9               	movwf	fsr2l,c
  6937  0016' 0E00'              	movlw	high _eusart1RxStatusBuffer
  6938  0018' 20F4               	addwfc	prodh,w,c
  6939  001A' 6EDA               	movwf	fsr2h,c
  6940  001C' 50DF               	movf	indf2,w,c
  6941  001E' 6F00'              	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6942                           
  6943                           ;eusart1.c: 184: readValue = eusart1RxBuffer[eusart1RxTail++];
  6944  0020' 5009'              	movf	_eusart1RxTail,w,c	;volatile
  6945  0022' 0D01               	mullw	1
  6946  0024' 0E00'              	movlw	low _eusart1RxBuffer
  6947  0026' 24F3               	addwf	prodl,w,c
  6948  0028' 6ED9               	movwf	fsr2l,c
  6949  002A' 0E00'              	movlw	high _eusart1RxBuffer
  6950  002C' 20F4               	addwfc	prodh,w,c
  6951  002E' 6EDA               	movwf	fsr2h,c
  6952  0030' 50DF               	movf	indf2,w,c
  6953  0032' 6E00'              	movwf	EUSART1_Read@readValue,c
  6954                           
  6955                           ; BSR set to: 0
  6956  0034' 2A09'              	incf	_eusart1RxTail,f,c	;volatile
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;eusart1.c: 185: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  6960  0036' 5009'              	movf	_eusart1RxTail,w,c	;volatile
  6961  0038' B4D8               	btfsc	status,2,c
  6962  003A' D002               	goto	i2l2533
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;eusart1.c: 186: {
  6966                           ;eusart1.c: 187: eusart1RxTail = 0;
  6967  003C' 0E00               	movlw	0
  6968  003E' 6E09'              	movwf	_eusart1RxTail,c	;volatile
  6969  0040'                    i2l2533:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;eusart1.c: 188: }
  6973                           ;eusart1.c: 189: PIE1bits.RC1IE = 0;
  6974                           
  6975                           ; BSR set to: 0
  6976  0040' 9A9D               	bcf	3997,5,c	;volatile
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;eusart1.c: 190: eusart1RxCount--;
  6980  0042' 0700'              	decf	_eusart1RxCount& (0+255),f,b	;volatile
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;eusart1.c: 191: PIE1bits.RC1IE = 1;
  6984  0044' 8A9D               	bsf	3997,5,c	;volatile
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;eusart1.c: 193: return readValue;
  6988  0046' 5000'              	movf	EUSART1_Read@readValue,w,c
  6989  0048' 0012               	return	
  6990  004A'                    __end_of_EUSART1_Read:
  6991                           	opt stack 0
  6992                           tosu	equ	0xFFF
  6993                           tosh	equ	0xFFE
  6994                           tosl	equ	0xFFD
  6995                           pclatu	equ	0xFFB
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           intcon3	equ	0xFF0
  7006                           indf0	equ	0xFEF
  7007                           postinc0	equ	0xFEE
  7008                           fsr0h	equ	0xFEA
  7009                           fsr0l	equ	0xFE9
  7010                           wreg	equ	0xFE8
  7011                           fsr1h	equ	0xFE2
  7012                           fsr1l	equ	0xFE1
  7013                           indf2	equ	0xFDF
  7014                           postinc2	equ	0xFDE
  7015                           postdec2	equ	0xFDD
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7021 ;; Defined at:
  7022 ;;		line 303 in file "mcc_generated_files/eusart1.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		None
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        0 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_EUSART1_Initialize
  7046 ;;		_EUSART1_Receive_ISR
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text56
  7051  0000'                    __ptext56:
  7052                           	opt stack 0
  7053  0000'                    _EUSART1_DefaultOverrunErrorHandler:
  7054                           	opt stack 24
  7055                           
  7056                           ;eusart1.c: 306: RCSTA1bits.CREN = 0;
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;incstack = 0
  7060  0000' 98AB               	bcf	4011,4,c	;volatile
  7061                           
  7062                           ;eusart1.c: 307: RCSTA1bits.CREN = 1;
  7063  0002' 88AB               	bsf	4011,4,c	;volatile
  7064  0004' 0012               	return		;funcret
  7065  0006'                    __end_of_EUSART1_DefaultOverrunErrorHandler:
  7066                           	opt stack 0
  7067                           tosu	equ	0xFFF
  7068                           tosh	equ	0xFFE
  7069                           tosl	equ	0xFFD
  7070                           pclatu	equ	0xFFB
  7071                           pclath	equ	0xFFA
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           intcon2	equ	0xFF1
  7080                           intcon3	equ	0xFF0
  7081                           indf0	equ	0xFEF
  7082                           postinc0	equ	0xFEE
  7083                           fsr0h	equ	0xFEA
  7084                           fsr0l	equ	0xFE9
  7085                           wreg	equ	0xFE8
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           fsr2h	equ	0xFDA
  7092                           fsr2l	equ	0xFD9
  7093                           status	equ	0xFD8
  7094                           
  7095 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7096 ;; Defined at:
  7097 ;;		line 301 in file "mcc_generated_files/eusart1.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		None
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_EUSART1_Initialize
  7121 ;;		_EUSART1_Receive_ISR
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text57
  7126  0000'                    __ptext57:
  7127                           	opt stack 0
  7128  0000'                    _EUSART1_DefaultFramingErrorHandler:
  7129                           	opt stack 24
  7130                           
  7131                           ;incstack = 0
  7132  0000' 0012               	return		;funcret
  7133  0002'                    __end_of_EUSART1_DefaultFramingErrorHandler:
  7134                           	opt stack 0
  7135                           tosu	equ	0xFFF
  7136                           tosh	equ	0xFFE
  7137                           tosl	equ	0xFFD
  7138                           pclatu	equ	0xFFB
  7139                           pclath	equ	0xFFA
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           intcon	equ	0xFF2
  7147                           intcon2	equ	0xFF1
  7148                           intcon3	equ	0xFF0
  7149                           indf0	equ	0xFEF
  7150                           postinc0	equ	0xFEE
  7151                           fsr0h	equ	0xFEA
  7152                           fsr0l	equ	0xFE9
  7153                           wreg	equ	0xFE8
  7154                           fsr1h	equ	0xFE2
  7155                           fsr1l	equ	0xFE1
  7156                           indf2	equ	0xFDF
  7157                           postinc2	equ	0xFDE
  7158                           postdec2	equ	0xFDD
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8
  7162                           
  7163 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7164 ;; Defined at:
  7165 ;;		line 311 in file "mcc_generated_files/eusart1.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;Total ram usage:        0 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    1
  7186 ;; This function calls:
  7187 ;;		_EUSART1_RxDataHandler
  7188 ;; This function is called by:
  7189 ;;		_EUSART1_Initialize
  7190 ;;		_EUSART1_Receive_ISR
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text58
  7195  0000'                    __ptext58:
  7196                           	opt stack 0
  7197  0000'                    _EUSART1_DefaultErrorHandler:
  7198                           	opt stack 23
  7199                           
  7200                           ;eusart1.c: 312: EUSART1_RxDataHandler();
  7201                           
  7202                           ;incstack = 0
  7203  0000' EC00' F000'        	call	_EUSART1_RxDataHandler	;wreg free
  7204  0004' 0012               	return		;funcret
  7205  0006'                    __end_of_EUSART1_DefaultErrorHandler:
  7206                           	opt stack 0
  7207                           tosu	equ	0xFFF
  7208                           tosh	equ	0xFFE
  7209                           tosl	equ	0xFFD
  7210                           pclatu	equ	0xFFB
  7211                           pclath	equ	0xFFA
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           intcon3	equ	0xFF0
  7221                           indf0	equ	0xFEF
  7222                           postinc0	equ	0xFEE
  7223                           fsr0h	equ	0xFEA
  7224                           fsr0l	equ	0xFE9
  7225                           wreg	equ	0xFE8
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           postdec2	equ	0xFDD
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8
  7234                           
  7235 ;; *************** function _EUSART1_RxDataHandler *****************
  7236 ;; Defined at:
  7237 ;;		line 291 in file "mcc_generated_files/eusart1.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_EUSART1_Receive_ISR
  7261 ;;		_EUSART1_DefaultErrorHandler
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text59
  7266  0000'                    __ptext59:
  7267                           	opt stack 0
  7268  0000'                    _EUSART1_RxDataHandler:
  7269                           	opt stack 24
  7270                           
  7271                           ;eusart1.c: 293: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7272                           
  7273                           ;incstack = 0
  7274  0000' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  7275  0002' 0D01               	mullw	1
  7276  0004' 0E00'              	movlw	low _eusart1RxBuffer
  7277  0006' 24F3               	addwf	prodl,w,c
  7278  0008' 6ED9               	movwf	fsr2l,c
  7279  000A' 0E00'              	movlw	high _eusart1RxBuffer
  7280  000C' 20F4               	addwfc	prodh,w,c
  7281  000E' 6EDA               	movwf	fsr2h,c
  7282  0010' CFAE FFDF          	movff	4014,indf2	;volatile
  7283  0014' 2A0A'              	incf	_eusart1RxHead,f,c	;volatile
  7284                           
  7285                           ;eusart1.c: 294: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7286  0016' 500A'              	movf	_eusart1RxHead,w,c	;volatile
  7287  0018' B4D8               	btfsc	status,2,c
  7288  001A' D002               	goto	i2l2559
  7289                           
  7290                           ;eusart1.c: 295: {
  7291                           ;eusart1.c: 296: eusart1RxHead = 0;
  7292  001C' 0E00               	movlw	0
  7293  001E' 6E0A'              	movwf	_eusart1RxHead,c	;volatile
  7294  0020'                    i2l2559:
  7295                           
  7296                           ;eusart1.c: 297: }
  7297                           ;eusart1.c: 298: eusart1RxCount++;
  7298  0020' 0100               	movlb	0	; () banked
  7299  0022' 2B00'              	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7300                           
  7301                           ; BSR set to: 0
  7302  0024' 0012               	return		;funcret
  7303  0026'                    __end_of_EUSART1_RxDataHandler:
  7304                           	opt stack 0
  7305                           tosu	equ	0xFFF
  7306                           tosh	equ	0xFFE
  7307                           tosl	equ	0xFFD
  7308                           pclatu	equ	0xFFB
  7309                           pclath	equ	0xFFA
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           intcon2	equ	0xFF1
  7318                           intcon3	equ	0xFF0
  7319                           indf0	equ	0xFEF
  7320                           postinc0	equ	0xFEE
  7321                           fsr0h	equ	0xFEA
  7322                           fsr0l	equ	0xFE9
  7323                           wreg	equ	0xFE8
  7324                           fsr1h	equ	0xFE2
  7325                           fsr1l	equ	0xFE1
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           tosu	equ	0xFFF
  7333                           tosh	equ	0xFFE
  7334                           tosl	equ	0xFFD
  7335                           pclatu	equ	0xFFB
  7336                           pclath	equ	0xFFA
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           intcon2	equ	0xFF1
  7345                           intcon3	equ	0xFF0
  7346                           indf0	equ	0xFEF
  7347                           postinc0	equ	0xFEE
  7348                           fsr0h	equ	0xFEA
  7349                           fsr0l	equ	0xFE9
  7350                           wreg	equ	0xFE8
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           indf2	equ	0xFDF
  7354                           postinc2	equ	0xFDE
  7355                           postdec2	equ	0xFDD
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360                           	psect	text60
  7361  0000'                    __ptext60:
  7362                           	opt stack 0
  7363                           tosu	equ	0xFFF
  7364                           tosh	equ	0xFFE
  7365                           tosl	equ	0xFFD
  7366                           pclatu	equ	0xFFB
  7367                           pclath	equ	0xFFA
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           intcon2	equ	0xFF1
  7376                           intcon3	equ	0xFF0
  7377                           indf0	equ	0xFEF
  7378                           postinc0	equ	0xFEE
  7379                           fsr0h	equ	0xFEA
  7380                           fsr0l	equ	0xFE9
  7381                           wreg	equ	0xFE8
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           postdec2	equ	0xFDD
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391                           	psect	rparam
  7392  0000                     tosu	equ	0xFFF
  7393                           tosh	equ	0xFFE
  7394                           tosl	equ	0xFFD
  7395                           pclatu	equ	0xFFB
  7396                           pclath	equ	0xFFA
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           intcon3	equ	0xFF0
  7406                           indf0	equ	0xFEF
  7407                           postinc0	equ	0xFEE
  7408                           fsr0h	equ	0xFEA
  7409                           fsr0l	equ	0xFE9
  7410                           wreg	equ	0xFE8
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           fsr2h	equ	0xFDA
  7417                           fsr2l	equ	0xFD9
  7418                           status	equ	0xFD8
  7419                           
  7420                           	psect	temp
  7421  0000'                    btemp:
  7422                           	opt stack 0
  7423  0000'                    	ds	12
  7424  0000                     wtemp0	set	btemp
  7425  0000                     wtemp1	set	btemp+2
  7426  0000                     wtemp2	set	btemp+4
  7427  0000                     wtemp3	set	btemp+6
  7428  0000                     wtemp4	set	btemp+8
  7429  0000                     wtemp5	set	btemp+10
  7430  0000                     wtemp6	set	btemp+1
  7431  0000                     ttemp0	set	btemp
  7432  0000                     ttemp1	set	btemp+3
  7433  0000                     ttemp2	set	btemp+6
  7434  0000                     ttemp3	set	btemp+9
  7435  0000                     ltemp0	set	btemp
  7436  0000                     ltemp1	set	btemp+4
  7437  0000                     ltemp2	set	btemp+8
  7438                           tosu	equ	0xFFF
  7439                           tosh	equ	0xFFE
  7440                           tosl	equ	0xFFD
  7441                           pclatu	equ	0xFFB
  7442                           pclath	equ	0xFFA
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodh	equ	0xFF4
  7448                           prodl	equ	0xFF3
  7449                           intcon	equ	0xFF2
  7450                           intcon2	equ	0xFF1
  7451                           intcon3	equ	0xFF0
  7452                           indf0	equ	0xFEF
  7453                           postinc0	equ	0xFEE
  7454                           fsr0h	equ	0xFEA
  7455                           fsr0l	equ	0xFE9
  7456                           wreg	equ	0xFE8
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           postdec2	equ	0xFDD
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         4419
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     61      75
    BANK0           160     16     159
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256      0     192
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S823$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), NULL(NULL[0]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 2
		 -> dataresult(BANK0[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 3000
		 -> dataxstr(BIGRAM[3000]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 3000
		 -> dataxstr(BIGRAM[3000]), 

    substring@s	PTR unsigned char  size(2) Largest target is 3000
		 -> dataxstr(BIGRAM[3000]), 

    substring@sub	PTR unsigned char  size(2) Largest target is 100
		 -> sub(BANK4[100]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 3000
		 -> dataxstr(BIGRAM[3000]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    S1968$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    S823$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S823$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    S283$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    S283$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> UpdateCfList@frequency(COMRAM[4]), ComputeMic@mic(COMRAM[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK2[16]), 
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@computedMic(COMRAM[4]), Channels(BANK2[224]), loRa.activationParameters.applicationEui(BANK1[8]), 
		 -> loRa.activationParameters.deviceEui(BANK1[8]), macBuffer(BIGRAM[271]), loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), 
		 -> AESEncodeLoRa@useKey(COMRAM[16]), RadioConfiguration(BANK0[54]), AESCmac@x(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK2[16]), Channels(BANK2[224]), macBuffer(BIGRAM[271]), 
		 -> loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->_SwTimersInterrupt
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _EUSART1_Receive_ISR->_strncat

Critical Paths under _main in BANK0

    _main->_substring
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2755
                                             14 BANK0      2     2      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _substring
 ---------------------------------------------------------------------------------
 (1) _substring                                           14     6      8     556
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     555
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          10    10      0    1751
                                             51 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1295
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     940
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (8) _TMR_ISR_lora                                         2     2      0     940
                                             49 COMRAM     2     2      0
                  _SwTimersInterrupt
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (9) _TMR_SwapTimer                                        2     0      2     624
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     355
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _SwTimersInterrupt                                   17    13      4     316
                                             32 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (10) _TMR_GetDeltaTime                                   24    20      4      69
                                              8 COMRAM    24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO2_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO1_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO0_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0     456
                                              8 COMRAM     3     3      0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
                       _EUSART1_Read
              _EUSART1_RxDataHandler
                            _strncat
 ---------------------------------------------------------------------------------
 (7) _strncat                                              8     2      6     432
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _substring

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_Read *
     _EUSART1_RxDataHandler *
     _strncat *
   _EUSART1_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC *
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     DD6      37       90.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      9F       5       99.4%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3D      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40D      12        0.0%
DATA                 0      0    11E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 21 16:14:22 2020

                    __end_of_DIO3_ISR_Lora_Init 000002                        _eusart1TxBufferRemaining 00000C  
            __size_of_IOCB4_SetInterruptHandler 000000                                    _TMR_ISR_lora 000000  
                    ?_IOCB4_SetInterruptHandler 000000                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            _DIO2_ISR_Lora_Init 000000                                 _timer1ReloadVal 000004  
                                           _sub 000000                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   _INT1_CallBack 000000  
                           ?_DIO2_ISR_Lora_Init 000000                              __size_of_IOCB4_ISR 000000  
                                          l2540 000016                                            l2541 00003A  
                                          l2542 000038                                            l2750 000016  
                                          l2757 000048                                            l2758 00000C  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _TMR1 000FCE  
                                          _TMR5 000F4F                                            _WPUB 000F61  
                        ??_LORAWAN_PlatformInit 000002                                   _INT2_CallBack 000000  
                                 _EUSART1_Write 000000                                            _loRa 000000  
                                          _main 000000                                   ?_EUSART1_Read 000000  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 000000                                   __CFG_BORV$190 000000  
             __size_of_INT2_SetInterruptHandler 000000                       ?_INT2_SetInterruptHandler 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 000000*                                _timer5ReloadVal 000000  
                                 __CFG_IESO$OFF 000000                      ??_TMR1_SetInterruptHandler 000002  
                        __size_of_TMR_SwapTimer 000000                                    ___param_bank 000000  
                          ??_DIO2_ISR_Lora_Init 000002                        __size_of_SystemTimerInit 000000  
                              __end_of_INT1_ISR 000008                                __end_of_INT2_ISR 000008  
                __size_of_OSCILLATOR_Initialize 000000                   __end_of_OSCILLATOR_Initialize 00000E  
                                         l10574 000004                                           l12190 000016  
                         _eusart1RxStatusBuffer 000008                                           ?_main 000000  
             __end_of_IOCB4_SetInterruptHandler 00000A                                           _T1CON 000FCD  
                                         _LATC2 007C5A                                           u12730 000026  
                                         _LATD3 007C63                                           _T5CON 000F4E  
                                         u12957 000068                                           u12967 0000C2  
                                         u12977 0000DA                                           u12987 0000F2  
                                         u12997 00010A                                  __CFG_DEBUG$OFF 000000  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TMR5H 000F50                                           _TMR5L 000F4F  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _TXREG 000FAD  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 000014                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 000000                                  __CFG_EBTRB$OFF 000000  
                                         _datax 000034                                           __rcon 00000B  
                       __end_of_PIN_MANAGER_IOC 00000A                  ??_INT1_DefaultInterruptHandler 000000  
                                         _randx 000000                              __CFG_MCLRE$EXTMCLR 000000  
                        _UpdateJoinSuccessState 000000                                  ?_INT2_CallBack 000000  
                      _INT1_SetInterruptHandler 000000                                  ?_EUSART1_Write 000000  
                       __end_of_TMR1_Initialize 00002C                                           pclath 000FFA  
                                         tablat 000FF5                                           ltemp0 000000  
                                         ltemp1 000004                                           ltemp2 000008  
                                ??_EUSART1_Read 000000                                           ttemp0 000000  
                                         ttemp1 000003                                           ttemp2 000006  
                                         ttemp3 000009                                           status 000FD8  
                                         wtemp0 000000                                           wtemp1 000002  
                                         wtemp2 000004                                           wtemp3 000006  
                                         wtemp4 000008                                           wtemp5 00000A  
                                         wtemp6 000001                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncat 000064      __end_of_EUSART1_DefaultFramingErrorHandler 000002  
   __size_of_EUSART1_DefaultFramingErrorHandler 000000            ??_EUSART1_DefaultFramingErrorHandler 000000  
           ?_EUSART1_DefaultFramingErrorHandler 000000              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 000000                                  __CFG_PBADEN$ON 000000  
               ??_IOCB4_DefaultInterruptHandler 000000                                 _TMR5_Initialize 000000  
                               __initialization 000000                     __size_of_DIO1_ISR_Lora_Init 000000  
                    __end_of_EUSART1_Initialize 000080                                    __end_of_main 00013E  
                             ?_TMR_GetDeltaTime 000008                               __end_of_IOCB4_ISR 000020  
                   ?_INTERRUPT_InterruptManager 000000                              ??_TMR_GetDeltaTime 00000C  
                                        ??_main 00000E                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 000000                           ?_EUSART1_Transmit_ISR 000000  
                                 _TMR_SwapTimer 000000                  _LORAWAN_ReceiveWindow1Callback 000000  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T5GCON 000F4D                         TMR1_WriteTimer@timerVal 000000  
                _LORAWAN_ReceiveWindow2Callback 000000                                          i2l2171 00005A  
                                        i2l2251 00005E                                          i2l2244 000038  
                                        i2l1525 0000DE                                          i2l1526 000158  
                                        i2l2246 000044                                          i2l1535 00000C  
                                        i2l2248 000050                                          i2l2531 000004  
                                        i2l3331 00002C                                          i2l3332 00001E  
                                        i2l2533 000040                                  __CFG_WDTEN$OFF 000000  
                                        i2l3328 00000E                                          i2l1592 0000E4  
                                        i2l3329 00000A                                          i2l1593 000022  
                                        i2l2554 00009E                                          i2l2546 00002C  
                                        i2l2547 000028                                          i2l1595 00007E  
                                        i2l2627 000012                                          i2l1597 0000E2  
                                        i2l2559 000020                                          i2l8766 000020  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TRISC2 007CA2                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                      __end_of_DIO0_ISR_Lora_Init 000010  
                                        _STable 000001                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 000002           __size_of_TMR1_DefaultInterruptHandler 000000  
                  _TMR1_DefaultInterruptHandler 000000                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 000000                                          clear_0 000068  
                                        clear_1 00007A                                          clear_2 000086  
                                        clear_3 000092                                          clear_4 00009E  
                                        clear_5 0000AA                                          clear_6 0000B6  
              ??_EUSART1_SetOverrunErrorHandler 000002                 ?_EUSART1_SetOverrunErrorHandler 000000  
                   __size_of_DIO5_ISR_Lora_Init 000000            __end_of_INT2_DefaultInterruptHandler 000002  
         __size_of_INT2_DefaultInterruptHandler 000000                    _INT2_DefaultInterruptHandler 000000  
                               ??_INT1_CallBack 000000                               ??_SystemTimerInit 000000  
                                ?_TMR_SwapTimer 000008                                    __mediumconst 000000* 
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_INT2_CallBack 000000  
                               ??_EUSART1_Write 000000        TMR1_SetInterruptHandler@InterruptHandler 000000  
     IOCB4_SetInterruptHandler@InterruptHandler 000000        INT2_SetInterruptHandler@InterruptHandler 000000  
      INT1_SetInterruptHandler@InterruptHandler 000000                                ?_PIN_MANAGER_IOC 000000  
                       __end_of_TMR1_WriteTimer 00001C                                       ??_strncat 000006  
                               _eusart1RxBuffer 000037                   __size_of_INTERRUPT_Initialize 000000  
                         __end_of_TMR1_CallBack 000020                                 _eusart1TxBuffer 000038  
                              ?_TMR1_Initialize 000000                         __end_of_TMR5_Initialize 00001E  
                             _SYSTEM_Initialize 000000                                      __accesstop 000000* 
                       __end_of__initialization 0000BC                                       ?_INT1_ISR 000000  
                                     ?_INT2_ISR 000000                              ?_SYSTEM_Initialize 000000  
                                _maxPayloadSize 000111                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 000000                   __end_of_EUSART1_RxDataHandler 000026  
                                __pcstackCOMRAM 000000                                      ___inthi_sp 000000* 
                                  __pidataBANK0 000000                                    __pidataBANK2 000000  
                                  __pidataBANK3 000000                             ??_SYSTEM_Initialize 000002  
                              _bitStatusbefore1 00002A                                _bitStatusbefore2 000028  
                              _bitStatusbefore3 000026                                _bitStatusbefore4 000024  
                              _bitStatusbefore5 000022                                _bitStatusbefore6 000020  
                              _bitStatusbefore7 00001E                      __end_of_DIO4_ISR_Lora_Init 000002  
                                     ?_TMR1_ISR 000000                   ?_TMR1_DefaultInterruptHandler 000000  
                               _spreadingFactor 000128           __end_of_IOCB4_DefaultInterruptHandler 000002  
        __size_of_IOCB4_DefaultInterruptHandler 000000                   _IOCB4_DefaultInterruptHandler 000000  
                        _AutomaticReplyCallback 000000                     ??_IOCB4_SetInterruptHandler 000002  
                          __end_of_EUSART1_Read 00004A                          ??_EUSART1_Transmit_ISR 000000  
                   __size_of_EXT_INT_Initialize 000000                                  _datatobesolved 000004  
                            _DIO3_ISR_Lora_Init 000000                         __size_of_TMR1_ReadTimer 000000  
              __end_of_INT2_SetInterruptHandler 00000A                     __end_of_EUSART1_Receive_ISR 000266  
                 ?_INT2_DefaultInterruptHandler 000000                       __end_of_SYSTEM_Initialize 000026  
                                 _eusart1RxHead 00000A                                   _eusart1TxHead 00003A  
                             ??_SPI2_Initialize 000000                             ?_DIO3_ISR_Lora_Init 000000  
                                 _eusart1RxTail 000009                                      __pbssBANK0 000000  
                                    __pbssBANK1 000000                                      __pbssBANK2 000000  
                                    __pbssBANK3 000000                                      __pbssBANK4 000000  
                                 _eusart1TxTail 000039               _EUSART1_TxDefaultInterruptHandler 000008  
               ??_EUSART1_SetRxInterruptHandler 000002                                 __CFG_PLLCFG$OFF 000000  
                        __end_of_maxPayloadSize 000119                                      ??_INT1_ISR 000000  
                                    ??_INT2_ISR 000000                              SwTimersInterrupt@i 000030  
                        __size_of_DIO0_ISR_Lora 000000                                      _dataresult 000074  
                        __size_of_DIO1_ISR_Lora 000000                                      _bitStatus1 00001A  
                                    _bitStatus2 000018                                      _bitStatus3 000016  
                                    _bitStatus4 000014                                      _bitStatus5 000012  
                                    _bitStatus6 000010                                      _bitStatus7 00000E  
                                  substring@sub 000002                 __end_of_EUSART1_SetErrorHandler 00000A  
                            __CFG_CCP2MX$PORTC1 000000                          __size_of_DIO2_ISR_Lora 000000  
                                    ??_TMR1_ISR 000033                              __CFG_CCP3MX$PORTB5 000000  
                          ??_DIO3_ISR_Lora_Init 000000                               _TMR_ISR_Lora_Init 000000  
        __end_of_EUSART1_SetFramingErrorHandler 00000A         __size_of_EUSART1_SetFramingErrorHandler 000000  
                _EUSART1_SetFramingErrorHandler 000000                                 ??_TMR_SwapTimer 00000A  
                            ?_TMR_ISR_Lora_Init 000000                      ??_INT1_SetInterruptHandler 000002  
                  ?_EUSART1_DefaultErrorHandler 000000                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                           ??_TMR_ISR_Lora_Init 000002                               __end_of_bandwidth 000128  
                              ?_TMR1_WriteTimer 000000                              __size_of_substring 000000  
                         TMR_SwapTimer@timerVal 000008                                ?_TMR5_Initialize 000000  
                     _IOCB4_SetInterruptHandler 000000                       _AckRetransmissionCallback 000000  
                 __size_of_LORAWAN_PlatformInit 000000                                  _ticksAccounted 000004  
                       __end_of_spreadingFactor 00012F                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 000000                                         __Lparam 000000  
                     __end_of_TMR_ISR_Lora_Init 000010                     __size_of_DIO2_ISR_Lora_Init 000000  
                                       _devAddr 000004                                         __pcinit 000000  
                                       _appSKey 000000                                         __ramtop 000000* 
                      TMR1_ReadTimer@readValLow 000007                                _counterinterrupt 00002C  
                                       __ptext0 000000                                         __ptext1 000000  
                                       __ptext2 000000                                         __ptext3 000000  
                                       __ptext4 000000                                         __ptext5 000000  
                                       __ptext6 000000                                         __ptext7 000000  
                                       __ptext8 000000                                         __ptext9 000000  
                                 _DIO0_ISR_Lora 000000                  ??_TMR1_DefaultInterruptHandler 000000  
                                     _IOCB4_ISR 000000                       TMR1_ReadTimer@readValHigh 000006  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 000000  
                  __end_of_macEndDevCmdReplyLen 000136               __size_of_TMR1_SetInterruptHandler 000000  
                                 _DIO1_ISR_Lora 000000                              _EUSART1_Initialize 000000  
                      ??_PIN_MANAGER_Initialize 000002                       ?_TMR1_SetInterruptHandler 000000  
                                       _nwkSKey 000010                                       _T5CONbits 000F4E  
                 ??_EUSART1_DefaultErrorHandler 000000                       __size_of_TMR_GetDeltaTime 000000  
                                 _DIO2_ISR_Lora 000000                      __size_of_SYSTEM_Initialize 000000  
                                       _strncat 000000                            end_of_initialization 0000BC  
                      _INT2_SetInterruptHandler 000000                             ?_EUSART1_Initialize 000000  
                         _RADIO_WatchdogTimeout 000000                  ??_INT2_DefaultInterruptHandler 000000  
                                    _modulation 000101                       _LORAWAN_LinkCheckCallback 000000  
                   _EUSART1_OverrunErrorHandler 000002                                       i2u1020_45 000154  
                                     i2u1021_45 0001E2                                       i2u1013_48 00002E  
                                     i2u1013_49 000042                                       i2u1022_45 0001FE  
                                     i2u1015_48 00005C                                       i2u1015_49 000070  
                                     i2u1017_48 00008A                                       i2u1018_45 000118  
                                     i2u1019_45 000136                                       i2u1263_48 000068  
                                     i2u1263_49 00007C                                       i2u1266_48 000086  
                                     i2u1266_49 00009A                      __end_of_DIO1_ISR_Lora_Init 000010  
                                    _ticksAdded 000008           __end_of_EUSART1_SetRxInterruptHandler 00000A  
        __size_of_EUSART1_SetRxInterruptHandler 000000                   _EUSART1_SetRxInterruptHandler 000000  
                                       postdec2 000FDD                                 _SystemTimerInit 000000  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 000000                            ??_EUSART1_Initialize 000002  
                            _DIO0_ISR_Lora_Init 000000                               __end_of_substring 00006E  
                                ?_DIO0_ISR_Lora 000000                           _INT1_InterruptHandler 00000A  
                                     _PORTBbits 000F81                    SwTimersInterrupt@timeElapsed 000028  
                                    ?_IOCB4_ISR 000000                                  ?_DIO1_ISR_Lora 000000  
                                _TMR1_ReadTimer 000000                                      _txPower433 000136  
                                    _txPower868 00013C                             ?_DIO0_ISR_Lora_Init 000000  
                                ?_DIO2_ISR_Lora 000000                __size_of_EUSART1_SetErrorHandler 000000  
                           EUSART1_Write@txData 000000                                  _localDioStatus 00000D  
                                  _EUSART1_Read 000000                               __size_of_INT1_ISR 000000  
                             __size_of_INT2_ISR 000000            __size_of_EUSART1_DefaultErrorHandler 000000  
                          ??_DIO0_ISR_Lora_Init 000002                                  __end_of_STable 000101  
                    __size_of_TMR_ISR_Lora_Init 000000                    __end_of_INTERRUPT_Initialize 000004  
                    __end_of_DIO5_ISR_Lora_Init 000002                                   ?_TMR_ISR_lora 000000  
                             __size_of_TMR1_ISR 000000                          ?_OSCILLATOR_Initialize 000000  
                        __end_of_TMR1_ReadTimer 000020                                 _SPI2_Initialize 000000  
                           start_initialization 000000                              _DIO4_ISR_Lora_Init 000000  
               __size_of_PIN_MANAGER_Initialize 000000                           __end_of_INT1_CallBack 000020  
 EUSART1_SetRxInterruptHandler@interruptHandler 000000   EUSART1_SetTxInterruptHandler@interruptHandler 000000  
                         __end_of_INT2_CallBack 000020                           __end_of_EUSART1_Write 00003E  
                           ?_DIO4_ISR_Lora_Init 000000                         __end_of_SystemTimerInit 000006  
                           TMR_SwapTimer@oldVal 000030                        __size_of_PIN_MANAGER_IOC 000000  
                           TMR_SwapTimer@retVal 00002E                        __size_of_TMR1_Initialize 000000  
                          _macEndDevCmdReplyLen 00012F                           _EUSART1_RxDataHandler 000000  
                ?_EUSART1_SetRxInterruptHandler 000000                                  ??_TMR_ISR_lora 000031  
                               ??_DIO0_ISR_Lora 000000                                     __pdataBANK0 000000  
                                   __pdataBANK2 000000                                     __pdataBANK3 000000  
        SwTimersInterrupt@ticksToNextTimerEvent 00002C                            ??_DIO4_ISR_Lora_Init 000000  
                    __end_of_EXT_INT_Initialize 00002A                              _RADIO_RxFSKTimeout 000000  
                        __size_of_TMR1_CallBack 000000                                 ??_DIO1_ISR_Lora 000000  
                        TMR_GetDeltaTime@retVal 000000                                 ?_TMR1_ReadTimer 000000  
                                _eusart1RxCount 000036                                     ??_IOCB4_ISR 000000  
                        TMR_GetDeltaTime@tmrVal 000032                                     __pbssBIGRAM 000000  
                               ??_DIO2_ISR_Lora 000000                                     __pbssCOMRAM 000000  
                    __end_of_DefaultChannels433 00016C                      __end_of_DefaultChannels868 000196  
             _EUSART1_RxDefaultInterruptHandler 000006                   __size_of_EUSART1_Transmit_ISR 000000  
                                 __pcstackBANK0 000000                                _TMR_GetDeltaTime 000000  
               _UnconfirmedTransmissionCallback 000000                                       _aesBuffer 0000E0  
               ??_EUSART1_SetTxInterruptHandler 000002                ??_EUSART1_SetFramingErrorHandler 000002  
               ?_EUSART1_SetFramingErrorHandler 000000                    __size_of_EUSART1_Receive_ISR 000000  
                         _INT2_InterruptHandler 000008                                       _bandwidth 000121  
                                     __pnvBANK0 000000                                       __pnvBANK1 000000  
                        _PIN_MANAGER_Initialize 000000                                       _bitStatus 00001C  
                                     _macBuffer 000CC7                                       _dioStatus 00003D  
                             _SwTimersInterrupt 000000                                       __pintcode 000000  
              __end_of_TMR1_SetInterruptHandler 00000A                                   __pmediumconst 000000  
                       __end_of_SPI2_Initialize 00000E                              ?_SwTimersInterrupt 000020  
                   __size_of_DIO3_ISR_Lora_Init 000000                    ??_INTERRUPT_InterruptManager 000033  
                              __CFG_PRICLKEN$ON 000000                    __end_of_LORAWAN_PlatformInit 000022  
                    ??_INT2_SetInterruptHandler 000002                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 000006     __size_of_EUSART1_DefaultOverrunErrorHandler 000000  
          ??_EUSART1_DefaultOverrunErrorHandler 000000             ?_EUSART1_DefaultOverrunErrorHandler 000000  
            _EUSART1_DefaultOverrunErrorHandler 000000                             ??_SwTimersInterrupt 000024  
                             _DutyCycleCallback 000000                            _EUSART1_ErrorHandler 000000  
                         __end_of_TMR_SwapTimer 000044                         _EUSART1_SetErrorHandler 000000  
                                   strncat@from 000002                                     strncat@size 000004  
                                      ?_strncat 000000                            _INTERRUPT_Initialize 000000  
                                 _TMR1_CallBack 000000                                        _INT1_ISR 000000  
                                      _INT2_ISR 000000                                        _IOCBbits 000F62  
       EUSART1_SetErrorHandler@interruptHandler 000000               __size_of_INT1_SetInterruptHandler 000000  
                          __end_of_rxWindowSize 000121                       ?_INT1_SetInterruptHandler 000000  
                              ?_SystemTimerInit 000000                                       _reloadVal 000006  
                                      _PIE1bits 000F9D                       __end_of_SwTimersInterrupt 0000FE  
                      __size_of_TMR1_WriteTimer 000000             __size_of_INTERRUPT_InterruptManager 000000  
                    __end_of_DIO2_ISR_Lora_Init 000010                                        _PIR1bits 000F9E  
                                      _PIR5bits 000F7E                                        i2u902_48 00000E  
                                      i2u890_48 00000E                          ?_EUSART1_RxDataHandler 000000  
                                      i2u892_48 00000E                        __size_of_TMR5_Initialize 000000  
                                      i2u894_48 00000E                                        _RCONbits 000FD0  
                                     _rxPayload 000000                                        i2u899_40 00004E  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _TMR1_ISR 000000                                        _SSP2STAT 000F6D  
                             ??_PIN_MANAGER_IOC 000000                               ??_TMR1_Initialize 000002  
                            _DIO1_ISR_Lora_Init 000000                                       _substring 000000  
                                      _Channels 000000                             ?_DIO1_ISR_Lora_Init 000000  
                                   _INTCON2bits 000FF1                                     _INTCON3bits 000FF0  
                                     copy_data0 000014                                       copy_data1 000034  
                                     copy_data2 000054                           ?_INTERRUPT_Initialize 000000  
                                ?_TMR1_CallBack 000000                            __end_of_TMR_ISR_lora 00005C  
                         EUSART1_Read@readValue 000000           __end_of_EUSART1_SetTxInterruptHandler 00000A  
        __size_of_EUSART1_SetTxInterruptHandler 000000                   _EUSART1_SetTxInterruptHandler 000000  
                                      __Hrparam 000000*                                       __Lrparam 000000* 
                          ??_DIO1_ISR_Lora_Init 000002                              __CFG_BOREN$SBORDIS 000000  
                         TMR1_ReadTimer@readVal 000004                       _ticksToScheduledInterrupt 000008  
                             __CFG_P2BMX$PORTD2 000000                                ?_SPI2_Initialize 000000  
                       ??_OSCILLATOR_Initialize 000000                     __size_of_EUSART1_Initialize 000000  
                      _TMR1_SetInterruptHandler 000000                          _IOCB4_InterruptHandler 000006  
                                   _radioBuffer 000BB8                           _TMR1_InterruptHandler 000002  
                     ??_EUSART1_SetErrorHandler 000002             __end_of_EUSART1_DefaultErrorHandler 000006  
                   _EUSART1_DefaultErrorHandler 000000                                  _rxWindowOffset 000109  
                                    ?_substring 000000                                      substring@c 00000C  
                                    substring@l 000006                                      substring@p 000004  
                                    substring@s 000000                                        _dataxstr 000000  
                               _allocatedTimers 00000C                  ?_IOCB4_DefaultInterruptHandler 000000  
                            _DIO5_ISR_Lora_Init 000000                                        __ptext10 000000  
                                      __ptext11 000000                                        __ptext20 000000  
                                      __ptext12 000000                                        __ptext21 000000  
                                      __ptext13 000000                                      _T1GCONbits 000FCC  
                                      __ptext22 000000                                        __ptext14 000000  
                                      __ptext31 000000                                        __ptext23 000000  
                                      __ptext15 000000                                        __ptext40 000000  
                                      __ptext32 000000                                        __ptext24 000000  
                                      __ptext16 000000                                        __ptext41 000000  
                                      __ptext33 000000                                        __ptext25 000000  
                                      __ptext17 000000                                        __ptext50 000000  
                                      __ptext42 000000                                        __ptext34 000000  
                                      __ptext26 000000                                        __ptext18 000000  
                                      __ptext51 000000                                        __ptext43 000000  
                                      __ptext35 000000                                        __ptext27 000000  
                                      __ptext19 000000                                        __ptext60 000000  
                                      __ptext52 000000                                        __ptext44 000000  
                                      __ptext36 000000                                        __ptext28 000000  
                                      __ptext53 000000                                        __ptext45 000000  
                                      __ptext37 000000                                        __ptext29 000000  
                                      __ptext54 000000                                        __ptext46 000000  
                                      __ptext38 000000                                        __ptext55 000000  
                                      __ptext47 000000                                        __ptext39 000000  
                                      __ptext56 000000                                        __ptext48 000000  
                                      __ptext57 000000                                        __ptext49 000000  
                                      __ptext58 000000                                        __ptext59 000000  
                                  _SSP2CON1bits 000F6C                             GenerateSubkey@F7103 000000  
                              __size_of_strncat 000000                                        _counterx 00000C  
                           ?_DIO5_ISR_Lora_Init 000000                                   __size_of_main 000000  
                                    _T5GCONbits 000F4D                            _LORAWAN_PlatformInit 000000  
                               _FskSyncWordBuff 000196                                   _timerOverflow 00003C  
                    __size_of_SwTimersInterrupt 000000                     __size_of_DIO0_ISR_Lora_Init 000000  
EUSART1_SetOverrunErrorHandler@interruptHandler 000000                        __end_of_TMR_GetDeltaTime 00016A  
                                      _swTimers 000000                                ??_TMR1_ReadTimer 000002  
            __end_of_INTERRUPT_InterruptManager 0000C4                      _INTERRUPT_InterruptManager 000000  
                             ??_TMR1_WriteTimer 000002                     _EUSART1_FramingErrorHandler 000004  
                           _EUSART1_Receive_ISR 000000                                    _SSP2STATbits 000F6D  
                          ??_DIO5_ISR_Lora_Init 000000            __end_of_INT1_DefaultInterruptHandler 000002  
         __size_of_INT1_DefaultInterruptHandler 000000                    _INT1_DefaultInterruptHandler 000000  
                        __end_of_rxWindowOffset 000111                               ??_TMR5_Initialize 000000  
                            __end_of_modulation 000109                                   __roundCounter 00003B  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000000  
                               ??_TMR1_CallBack 000033                              _EXT_INT_Initialize 000000  
                                      intlevel2 000000*                           ?_EUSART1_Receive_ISR 000000  
                         ?_LORAWAN_PlatformInit 000000                         ?_PIN_MANAGER_Initialize 000000  
                            _DefaultChannels433 000142                              _DefaultChannels868 00016C  
                           ?_EXT_INT_Initialize 000000          __end_of_EUSART1_SetOverrunErrorHandler 00000A  
       __size_of_EUSART1_SetOverrunErrorHandler 000000                  _EUSART1_SetOverrunErrorHandler 000000  
                                    _RCSTA1bits 000FAB                                       strncat@cp 000006  
                                     strncat@to 000000                    __end_of_EUSART1_Transmit_ISR 000030  
                            __end_of_txPower433 00013C                              __end_of_txPower868 000142  
                        __size_of_INT1_CallBack 000000  EUSART1_SetFramingErrorHandler@interruptHandler 000000  
                ?_EUSART1_SetTxInterruptHandler 000000                          __size_of_INT2_CallBack 000000  
                   __size_of_DIO4_ISR_Lora_Init 000000                          __size_of_EUSART1_Write 000000  
                            _eusart1RxLastError 000035                           __end_of_DIO0_ISR_Lora 000006  
                          ??_EXT_INT_Initialize 000002                                    _rxWindowSize 000119  
                 ?_INT1_DefaultInterruptHandler 000000                           __end_of_DIO1_ISR_Lora 000006  
                                   ??_substring 000008                __end_of_INT1_SetInterruptHandler 00000A  
                         __size_of_TMR_ISR_lora 000000                               __CFG_T3CMX$PORTC0 000000  
                         __end_of_DIO2_ISR_Lora 000006                         __end_of_FskSyncWordBuff 000199  
                         ??_EUSART1_Receive_ISR 000008                  __end_of_PIN_MANAGER_Initialize 000054  
                             __CFG_FOSC$INTIO67 000000                                 _PIN_MANAGER_IOC 000000  
                       ??_EUSART1_RxDataHandler 000000                                 _TMR1_Initialize 000000  
                            _RadioConfiguration 00003E  
