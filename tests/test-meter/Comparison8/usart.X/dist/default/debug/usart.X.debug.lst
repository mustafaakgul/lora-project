

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 21 16:15:02 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 1.45
    90                           ; Generated 16/11/2017 GMT
    91                           ; 
    92                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18LF46K22 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   125  0000                     
   126 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   127  0000                     
   128 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   129  0000                     
   130 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   131  0000                     
   132 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   133  0000                     
   134 ;; Function _AckRetransmissionCallback is unused but had its address taken
   135  0000                     
   136 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   137  0000                     
   138 ;; Function _AutomaticReplyCallback is unused but had its address taken
   139  0000                     
   140 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   141  0000                     
   142 ;; Function _DutyCycleCallback is unused but had its address taken
   143  0000                     
   144                           	psect	idataBANK0
   145  000CDE                     __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _randx
   149  000CDE  0001               	dw	1
   150  000CE0  0000               	dw	0
   151                           
   152                           ;initializer for _devAddr
   153  000CE2  5E47               	dw	24135
   154  000CE4  3DEF               	dw	15855
   155                           
   156                           ;initializer for _ticksToScheduledInterrupt
   157  000CE6  FFFF               	dw	65535
   158  000CE8  FFFF               	dw	65535
   159                           
   160                           	psect	idataBANK2
   161  000C72                     __pidataBANK2:
   162                           	opt stack 0
   163                           
   164                           ;initializer for GenerateSubkey@F7103
   165  000C72  00                 	db	0
   166  000C73  00                 	db	0
   167  000C74  00                 	db	0
   168  000C75  00                 	db	0
   169  000C76  00                 	db	0
   170  000C77  00                 	db	0
   171  000C78  00                 	db	0
   172  000C79  00                 	db	0
   173  000C7A  00                 	db	0
   174  000C7B  00                 	db	0
   175  000C7C  00                 	db	0
   176  000C7D  00                 	db	0
   177  000C7E  00                 	db	0
   178  000C7F  00                 	db	0
   179  000C80  00                 	db	0
   180  000C81  87                 	db	135
   181                           
   182                           	psect	idataBANK3
   183  000B64                     __pidataBANK3:
   184                           	opt stack 0
   185                           
   186                           ;initializer for _appSKey
   187  000B64  96                 	db	150
   188  000B65  23                 	db	35
   189  000B66  5A                 	db	90
   190  000B67  1F                 	db	31
   191  000B68  9A                 	db	154
   192  000B69  E1                 	db	225
   193  000B6A  60                 	db	96
   194  000B6B  36                 	db	54
   195  000B6C  81                 	db	129
   196  000B6D  C4                 	db	196
   197  000B6E  E4                 	db	228
   198  000B6F  B5                 	db	181
   199  000B70  54                 	db	84
   200  000B71  C3                 	db	195
   201  000B72  CA                 	db	202
   202  000B73  B5                 	db	181
   203                           
   204                           ;initializer for _nwkSKey
   205  000B74  CB                 	db	203
   206  000B75  1E                 	db	30
   207  000B76  88                 	db	136
   208  000B77  5D                 	db	93
   209  000B78  5D                 	db	93
   210  000B79  F1                 	db	241
   211  000B7A  12                 	db	18
   212  000B7B  D5                 	db	213
   213  000B7C  08                 	db	8
   214  000B7D  CC                 	db	204
   215  000B7E  B9                 	db	185
   216  000B7F  D1                 	db	209
   217  000B80  D4                 	db	212
   218  000B81  4B                 	db	75
   219  000B82  1E                 	db	30
   220  000B83  DF                 	db	223
   221                           
   222                           	psect	mediumconst
   223  00FE66                     __pmediumconst:
   224                           	opt stack 0
   225  00FE66  00                 	db	0
   226  00FE67                     _STable:
   227                           	opt stack 0
   228  00FE67  63                 	db	99
   229  00FE68  7C                 	db	124
   230  00FE69  77                 	db	119
   231  00FE6A  7B                 	db	123
   232  00FE6B  F2                 	db	242
   233  00FE6C  6B                 	db	107
   234  00FE6D  6F                 	db	111
   235  00FE6E  C5                 	db	197
   236  00FE6F  30                 	db	48
   237  00FE70  01                 	db	1
   238  00FE71  67                 	db	103
   239  00FE72  2B                 	db	43
   240  00FE73  FE                 	db	254
   241  00FE74  D7                 	db	215
   242  00FE75  AB                 	db	171
   243  00FE76  76                 	db	118
   244  00FE77  CA                 	db	202
   245  00FE78  82                 	db	130
   246  00FE79  C9                 	db	201
   247  00FE7A  7D                 	db	125
   248  00FE7B  FA                 	db	250
   249  00FE7C  59                 	db	89
   250  00FE7D  47                 	db	71
   251  00FE7E  F0                 	db	240
   252  00FE7F  AD                 	db	173
   253  00FE80  D4                 	db	212
   254  00FE81  A2                 	db	162
   255  00FE82  AF                 	db	175
   256  00FE83  9C                 	db	156
   257  00FE84  A4                 	db	164
   258  00FE85  72                 	db	114
   259  00FE86  C0                 	db	192
   260  00FE87  B7                 	db	183
   261  00FE88  FD                 	db	253
   262  00FE89  93                 	db	147
   263  00FE8A  26                 	db	38
   264  00FE8B  36                 	db	54
   265  00FE8C  3F                 	db	63
   266  00FE8D  F7                 	db	247
   267  00FE8E  CC                 	db	204
   268  00FE8F  34                 	db	52
   269  00FE90  A5                 	db	165
   270  00FE91  E5                 	db	229
   271  00FE92  F1                 	db	241
   272  00FE93  71                 	db	113
   273  00FE94  D8                 	db	216
   274  00FE95  31                 	db	49
   275  00FE96  15                 	db	21
   276  00FE97  04                 	db	4
   277  00FE98  C7                 	db	199
   278  00FE99  23                 	db	35
   279  00FE9A  C3                 	db	195
   280  00FE9B  18                 	db	24
   281  00FE9C  96                 	db	150
   282  00FE9D  05                 	db	5
   283  00FE9E  9A                 	db	154
   284  00FE9F  07                 	db	7
   285  00FEA0  12                 	db	18
   286  00FEA1  80                 	db	128
   287  00FEA2  E2                 	db	226
   288  00FEA3  EB                 	db	235
   289  00FEA4  27                 	db	39
   290  00FEA5  B2                 	db	178
   291  00FEA6  75                 	db	117
   292  00FEA7  09                 	db	9
   293  00FEA8  83                 	db	131
   294  00FEA9  2C                 	db	44
   295  00FEAA  1A                 	db	26
   296  00FEAB  1B                 	db	27
   297  00FEAC  6E                 	db	110
   298  00FEAD  5A                 	db	90
   299  00FEAE  A0                 	db	160
   300  00FEAF  52                 	db	82
   301  00FEB0  3B                 	db	59
   302  00FEB1  D6                 	db	214
   303  00FEB2  B3                 	db	179
   304  00FEB3  29                 	db	41
   305  00FEB4  E3                 	db	227
   306  00FEB5  2F                 	db	47
   307  00FEB6  84                 	db	132
   308  00FEB7  53                 	db	83
   309  00FEB8  D1                 	db	209
   310  00FEB9  00                 	db	0
   311  00FEBA  ED                 	db	237
   312  00FEBB  20                 	db	32
   313  00FEBC  FC                 	db	252
   314  00FEBD  B1                 	db	177
   315  00FEBE  5B                 	db	91
   316  00FEBF  6A                 	db	106
   317  00FEC0  CB                 	db	203
   318  00FEC1  BE                 	db	190
   319  00FEC2  39                 	db	57
   320  00FEC3  4A                 	db	74
   321  00FEC4  4C                 	db	76
   322  00FEC5  58                 	db	88
   323  00FEC6  CF                 	db	207
   324  00FEC7  D0                 	db	208
   325  00FEC8  EF                 	db	239
   326  00FEC9  AA                 	db	170
   327  00FECA  FB                 	db	251
   328  00FECB  43                 	db	67
   329  00FECC  4D                 	db	77
   330  00FECD  33                 	db	51
   331  00FECE  85                 	db	133
   332  00FECF  45                 	db	69
   333  00FED0  F9                 	db	249
   334  00FED1  02                 	db	2
   335  00FED2  7F                 	db	127
   336  00FED3  50                 	db	80
   337  00FED4  3C                 	db	60
   338  00FED5  9F                 	db	159
   339  00FED6  A8                 	db	168
   340  00FED7  51                 	db	81
   341  00FED8  A3                 	db	163
   342  00FED9  40                 	db	64
   343  00FEDA  8F                 	db	143
   344  00FEDB  92                 	db	146
   345  00FEDC  9D                 	db	157
   346  00FEDD  38                 	db	56
   347  00FEDE  F5                 	db	245
   348  00FEDF  BC                 	db	188
   349  00FEE0  B6                 	db	182
   350  00FEE1  DA                 	db	218
   351  00FEE2  21                 	db	33
   352  00FEE3  10                 	db	16
   353  00FEE4  FF                 	db	255
   354  00FEE5  F3                 	db	243
   355  00FEE6  D2                 	db	210
   356  00FEE7  CD                 	db	205
   357  00FEE8  0C                 	db	12
   358  00FEE9  13                 	db	19
   359  00FEEA  EC                 	db	236
   360  00FEEB  5F                 	db	95
   361  00FEEC  97                 	db	151
   362  00FEED  44                 	db	68
   363  00FEEE  17                 	db	23
   364  00FEEF  C4                 	db	196
   365  00FEF0  A7                 	db	167
   366  00FEF1  7E                 	db	126
   367  00FEF2  3D                 	db	61
   368  00FEF3  64                 	db	100
   369  00FEF4  5D                 	db	93
   370  00FEF5  19                 	db	25
   371  00FEF6  73                 	db	115
   372  00FEF7  60                 	db	96
   373  00FEF8  81                 	db	129
   374  00FEF9  4F                 	db	79
   375  00FEFA  DC                 	db	220
   376  00FEFB  22                 	db	34
   377  00FEFC  2A                 	db	42
   378  00FEFD  90                 	db	144
   379  00FEFE  88                 	db	136
   380  00FEFF  46                 	db	70
   381  00FF00  EE                 	db	238
   382  00FF01  B8                 	db	184
   383  00FF02  14                 	db	20
   384  00FF03  DE                 	db	222
   385  00FF04  5E                 	db	94
   386  00FF05  0B                 	db	11
   387  00FF06  DB                 	db	219
   388  00FF07  E0                 	db	224
   389  00FF08  32                 	db	50
   390  00FF09  3A                 	db	58
   391  00FF0A  0A                 	db	10
   392  00FF0B  49                 	db	73
   393  00FF0C  06                 	db	6
   394  00FF0D  24                 	db	36
   395  00FF0E  5C                 	db	92
   396  00FF0F  C2                 	db	194
   397  00FF10  D3                 	db	211
   398  00FF11  AC                 	db	172
   399  00FF12  62                 	db	98
   400  00FF13  91                 	db	145
   401  00FF14  95                 	db	149
   402  00FF15  E4                 	db	228
   403  00FF16  79                 	db	121
   404  00FF17  E7                 	db	231
   405  00FF18  C8                 	db	200
   406  00FF19  37                 	db	55
   407  00FF1A  6D                 	db	109
   408  00FF1B  8D                 	db	141
   409  00FF1C  D5                 	db	213
   410  00FF1D  4E                 	db	78
   411  00FF1E  A9                 	db	169
   412  00FF1F  6C                 	db	108
   413  00FF20  56                 	db	86
   414  00FF21  F4                 	db	244
   415  00FF22  EA                 	db	234
   416  00FF23  65                 	db	101
   417  00FF24  7A                 	db	122
   418  00FF25  AE                 	db	174
   419  00FF26  08                 	db	8
   420  00FF27  BA                 	db	186
   421  00FF28  78                 	db	120
   422  00FF29  25                 	db	37
   423  00FF2A  2E                 	db	46
   424  00FF2B  1C                 	db	28
   425  00FF2C  A6                 	db	166
   426  00FF2D  B4                 	db	180
   427  00FF2E  C6                 	db	198
   428  00FF2F  E8                 	db	232
   429  00FF30  DD                 	db	221
   430  00FF31  74                 	db	116
   431  00FF32  1F                 	db	31
   432  00FF33  4B                 	db	75
   433  00FF34  BD                 	db	189
   434  00FF35  8B                 	db	139
   435  00FF36  8A                 	db	138
   436  00FF37  70                 	db	112
   437  00FF38  3E                 	db	62
   438  00FF39  B5                 	db	181
   439  00FF3A  66                 	db	102
   440  00FF3B  48                 	db	72
   441  00FF3C  03                 	db	3
   442  00FF3D  F6                 	db	246
   443  00FF3E  0E                 	db	14
   444  00FF3F  61                 	db	97
   445  00FF40  35                 	db	53
   446  00FF41  57                 	db	87
   447  00FF42  B9                 	db	185
   448  00FF43  86                 	db	134
   449  00FF44  C1                 	db	193
   450  00FF45  1D                 	db	29
   451  00FF46  9E                 	db	158
   452  00FF47  E1                 	db	225
   453  00FF48  F8                 	db	248
   454  00FF49  98                 	db	152
   455  00FF4A  11                 	db	17
   456  00FF4B  69                 	db	105
   457  00FF4C  D9                 	db	217
   458  00FF4D  8E                 	db	142
   459  00FF4E  94                 	db	148
   460  00FF4F  9B                 	db	155
   461  00FF50  1E                 	db	30
   462  00FF51  87                 	db	135
   463  00FF52  E9                 	db	233
   464  00FF53  CE                 	db	206
   465  00FF54  55                 	db	85
   466  00FF55  28                 	db	40
   467  00FF56  DF                 	db	223
   468  00FF57  8C                 	db	140
   469  00FF58  A1                 	db	161
   470  00FF59  89                 	db	137
   471  00FF5A  0D                 	db	13
   472  00FF5B  BF                 	db	191
   473  00FF5C  E6                 	db	230
   474  00FF5D  42                 	db	66
   475  00FF5E  68                 	db	104
   476  00FF5F  41                 	db	65
   477  00FF60  99                 	db	153
   478  00FF61  2D                 	db	45
   479  00FF62  0F                 	db	15
   480  00FF63  B0                 	db	176
   481  00FF64  54                 	db	84
   482  00FF65  BB                 	db	187
   483  00FF66  16                 	db	22
   484  00FF67                     __end_of_STable:
   485                           	opt stack 0
   486  00FF67                     _modulation:
   487                           	opt stack 0
   488  00FF67  01                 	db	1
   489  00FF68  01                 	db	1
   490  00FF69  01                 	db	1
   491  00FF6A  01                 	db	1
   492  00FF6B  01                 	db	1
   493  00FF6C  01                 	db	1
   494  00FF6D  01                 	db	1
   495  00FF6E  00                 	db	0
   496  00FF6F                     __end_of_modulation:
   497                           	opt stack 0
   498  00FF6F                     _rxWindowOffset:
   499                           	opt stack 0
   500  00FF6F  DF                 	db	223
   501  00FF70  CE                 	db	206
   502  00FF71  C6                 	db	198
   503  00FF72  C2                 	db	194
   504  00FF73  BE                 	db	190
   505  00FF74  BC                 	db	188
   506  00FF75  F1                 	db	241
   507  00FF76  FE                 	db	254
   508  00FF77                     __end_of_rxWindowOffset:
   509                           	opt stack 0
   510  00FF77                     _maxPayloadSize:
   511                           	opt stack 0
   512  00FF77  33                 	db	51
   513  00FF78  33                 	db	51
   514  00FF79  33                 	db	51
   515  00FF7A  73                 	db	115
   516  00FF7B  F2                 	db	242
   517  00FF7C  F2                 	db	242
   518  00FF7D  F2                 	db	242
   519  00FF7E  38                 	db	56
   520  00FF7F                     __end_of_maxPayloadSize:
   521                           	opt stack 0
   522  00FF7F                     _rxWindowSize:
   523                           	opt stack 0
   524  00FF7F  08                 	db	8
   525  00FF80  0A                 	db	10
   526  00FF81  0E                 	db	14
   527  00FF82  1A                 	db	26
   528  00FF83  31                 	db	49
   529  00FF84  58                 	db	88
   530  00FF85  3C                 	db	60
   531  00FF86  08                 	db	8
   532  00FF87                     __end_of_rxWindowSize:
   533                           	opt stack 0
   534  00FF87                     _bandwidth:
   535                           	opt stack 0
   536  00FF87  07                 	db	7
   537  00FF88  07                 	db	7
   538  00FF89  07                 	db	7
   539  00FF8A  07                 	db	7
   540  00FF8B  07                 	db	7
   541  00FF8C  07                 	db	7
   542  00FF8D  08                 	db	8
   543  00FF8E                     __end_of_bandwidth:
   544                           	opt stack 0
   545  00FF8E                     _spreadingFactor:
   546                           	opt stack 0
   547  00FF8E  0C                 	db	12
   548  00FF8F  0B                 	db	11
   549  00FF90  0A                 	db	10
   550  00FF91  09                 	db	9
   551  00FF92  08                 	db	8
   552  00FF93  07                 	db	7
   553  00FF94  07                 	db	7
   554  00FF95                     __end_of_spreadingFactor:
   555                           	opt stack 0
   556  00FF95                     _macEndDevCmdReplyLen:
   557                           	opt stack 0
   558  00FF95  01                 	db	1
   559  00FF96  02                 	db	2
   560  00FF97  01                 	db	1
   561  00FF98  02                 	db	2
   562  00FF99  03                 	db	3
   563  00FF9A  02                 	db	2
   564  00FF9B  01                 	db	1
   565  00FF9C                     __end_of_macEndDevCmdReplyLen:
   566                           	opt stack 0
   567  00FF9C  0A                 	db	10
   568  00FF9D  07                 	db	7
   569  00FF9E  04                 	db	4
   570  00FF9F  01                 	db	1
   571  00FFA0  FE                 	db	254
   572  00FFA1  FB                 	db	251
   573  00FFA2                     __end_of_txPower433:
   574                           	opt stack 0
   575  00FFA2                     _txPower868:
   576                           	opt stack 0
   577  00FFA2  14                 	db	20
   578  00FFA3  0E                 	db	14
   579  00FFA4  0B                 	db	11
   580  00FFA5  08                 	db	8
   581  00FFA6  05                 	db	5
   582  00FFA7  02                 	db	2
   583  00FFA8                     __end_of_txPower868:
   584                           	opt stack 0
   585  00FFA8                     _DefaultChannels433:
   586                           	opt stack 0
   587  00FFA8  B9D8               	dw	47576
   588  00FFAA  19D1               	dw	6609
   589  00FFAC  01                 	db	1
   590  00FFAD  50                 	db	80
   591  00FFAE  012E               	dw	302
   592  00FFB0  0000               	dw	0
   593  00FFB2  0000               	dw	0
   594  00FFB4  01                 	db	1
   595  00FFB5  FF                 	db	255
   596  00FFB6  C718               	dw	50968
   597  00FFB8  19D4               	dw	6612
   598  00FFBA  01                 	db	1
   599  00FFBB  50                 	db	80
   600  00FFBC  012E               	dw	302
   601  00FFBE  0000               	dw	0
   602  00FFC0  0000               	dw	0
   603  00FFC2  01                 	db	1
   604  00FFC3  FF                 	db	255
   605  00FFC4  D458               	dw	54360
   606  00FFC6  19D7               	dw	6615
   607  00FFC8  01                 	db	1
   608  00FFC9  50                 	db	80
   609  00FFCA  012E               	dw	302
   610  00FFCC  0000               	dw	0
   611  00FFCE  0000               	dw	0
   612  00FFD0  01                 	db	1
   613  00FFD1  FF                 	db	255
   614  00FFD2                     __end_of_DefaultChannels433:
   615                           	opt stack 0
   616  00FFD2                     _DefaultChannels868:
   617                           	opt stack 0
   618  00FFD2  27A0               	dw	10144
   619  00FFD4  33BE               	dw	13246
   620  00FFD6  01                 	db	1
   621  00FFD7  50                 	db	80
   622  00FFD8  012E               	dw	302
   623  00FFDA  0000               	dw	0
   624  00FFDC  0000               	dw	0
   625  00FFDE  01                 	db	1
   626  00FFDF  FF                 	db	255
   627  00FFE0  34E0               	dw	13536
   628  00FFE2  33C1               	dw	13249
   629  00FFE4  01                 	db	1
   630  00FFE5  50                 	db	80
   631  00FFE6  012E               	dw	302
   632  00FFE8  0000               	dw	0
   633  00FFEA  0000               	dw	0
   634  00FFEC  01                 	db	1
   635  00FFED  FF                 	db	255
   636  00FFEE  4220               	dw	16928
   637  00FFF0  33C4               	dw	13252
   638  00FFF2  01                 	db	1
   639  00FFF3  50                 	db	80
   640  00FFF4  012E               	dw	302
   641  00FFF6  0000               	dw	0
   642  00FFF8  0000               	dw	0
   643  00FFFA  01                 	db	1
   644  00FFFB  FF                 	db	255
   645  00FFFC                     __end_of_DefaultChannels868:
   646                           	opt stack 0
   647  00FFFC                     _FskSyncWordBuff:
   648                           	opt stack 0
   649  00FFFC  C1                 	db	193
   650  00FFFD  94                 	db	148
   651  00FFFE  C1                 	db	193
   652  00FFFF                     __end_of_FskSyncWordBuff:
   653                           	opt stack 0
   654  00FFFF  00                 	db	0	; dummy byte at the end
   655  0000                     
   656                           	psect	nvBANK0
   657  0000E6                     __pnvBANK0:
   658                           	opt stack 0
   659  0000E6                     _timer5ReloadVal:
   660                           	opt stack 0
   661  0000E6                     	ds	2
   662  0000E8                     _TMR1_InterruptHandler:
   663                           	opt stack 0
   664  0000E8                     	ds	2
   665  0000EA                     _timer1ReloadVal:
   666                           	opt stack 0
   667  0000EA                     	ds	2
   668  0000EC                     _IOCB4_InterruptHandler:
   669                           	opt stack 0
   670  0000EC                     	ds	2
   671  0000EE                     _INT2_InterruptHandler:
   672                           	opt stack 0
   673  0000EE                     	ds	2
   674  0000F0                     _INT1_InterruptHandler:
   675                           	opt stack 0
   676  0000F0                     	ds	2
   677  0000F2                     _eusart1TxBufferRemaining:
   678                           	opt stack 0
   679  0000F2                     	ds	1
   680                           
   681                           	psect	nvBANK1
   682  0001F5                     __pnvBANK1:
   683                           	opt stack 0
   684  0001F5                     _EUSART1_ErrorHandler:
   685                           	opt stack 0
   686  0001F5                     	ds	2
   687  0001F7                     _EUSART1_OverrunErrorHandler:
   688                           	opt stack 0
   689  0001F7                     	ds	2
   690  0001F9                     _EUSART1_FramingErrorHandler:
   691                           	opt stack 0
   692  0001F9                     	ds	2
   693  0001FB                     _EUSART1_RxDefaultInterruptHandler:
   694                           	opt stack 0
   695  0001FB                     	ds	2
   696  0001FD                     _EUSART1_TxDefaultInterruptHandler:
   697                           	opt stack 0
   698  0001FD                     	ds	2
   699  0000                     _TMR5	set	3919
   700  0000                     _T5GCONbits	set	3917
   701  0000                     _T5CONbits	set	3918
   702  0000                     _T5CON	set	3918
   703  0000                     _TMR5L	set	3919
   704  0000                     _TMR5H	set	3920
   705  0000                     _T5GCON	set	3917
   706  0000                     _ANSELA	set	3896
   707  0000                     _ANSELE	set	3900
   708  0000                     _ANSELB	set	3897
   709  0000                     _ANSELC	set	3898
   710  0000                     _ANSELD	set	3899
   711  0000                     _TMR1	set	4046
   712  0000                     _TXREG	set	4013
   713  0000                     _PIR5bits	set	3966
   714  0000                     _T1GCONbits	set	4044
   715  0000                     _T1CONbits	set	4045
   716  0000                     _T1CON	set	4045
   717  0000                     _TMR1L	set	4046
   718  0000                     _TMR1H	set	4047
   719  0000                     _T1GCON	set	4044
   720  0000                     _RCREG1	set	4014
   721  0000                     _RCSTA1bits	set	4011
   722  0000                     _TXREG1	set	4013
   723  0000                     _TXSTA1bits	set	4012
   724  0000                     _SPBRGH1	set	4016
   725  0000                     _SPBRG1	set	4015
   726  0000                     _TXSTA1	set	4012
   727  0000                     _RCSTA1	set	4011
   728  0000                     _BAUDCON1	set	4024
   729  0000                     _SSP2STATbits	set	3949
   730  0000                     _SSP2BUF	set	3951
   731  0000                     _SSP2CON1bits	set	3948
   732  0000                     _SSP2ADD	set	3950
   733  0000                     _SSP2CON1	set	3948
   734  0000                     _SSP2STAT	set	3949
   735  0000                     _IOCBbits	set	3938
   736  0000                     _WPUB	set	3937
   737  0000                     _TRISD	set	3989
   738  0000                     _TRISC	set	3988
   739  0000                     _TRISB	set	3987
   740  0000                     _TRISA	set	3986
   741  0000                     _TRISE	set	3990
   742  0000                     _LATC	set	3979
   743  0000                     _LATB	set	3978
   744  0000                     _LATA	set	3977
   745  0000                     _LATD	set	3980
   746  0000                     _LATE	set	3981
   747  0000                     _OSCTUNE	set	3995
   748  0000                     _OSCCON2	set	4050
   749  0000                     _OSCCON	set	4051
   750  0000                     _PIR1bits	set	3998
   751  0000                     _PIE1bits	set	3997
   752  0000                     _RCONbits	set	4048
   753  0000                     _INTCON2bits	set	4081
   754  0000                     _INTCON3bits	set	4080
   755  0000                     _INTCONbits	set	4082
   756  0000                     _PORTBbits	set	3969
   757  0000                     _LATD3	set	31843
   758  0000                     _LATC2	set	31834
   759  0000                     _TRISC2	set	31906
   760                           
   761                           ; #config settings
   762  0000                     
   763                           	psect	cinit
   764  0006E0                     __pcinit:
   765                           	opt stack 0
   766  0006E0                     start_initialization:
   767                           	opt stack 0
   768  0006E0                     __initialization:
   769                           	opt stack 0
   770                           
   771                           ; Initialize objects allocated to BANK3 (32 bytes)
   772                           ; load TBLPTR registers with __pidataBANK3
   773  0006E0  0E64               	movlw	low __pidataBANK3
   774  0006E2  6EF6               	movwf	tblptrl,c
   775  0006E4  0E0B               	movlw	high __pidataBANK3
   776  0006E6  6EF7               	movwf	tblptrh,c
   777  0006E8  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   778  0006EA  6EF8               	movwf	tblptru,c
   779  0006EC  EE03  F0A0         	lfsr	0,__pdataBANK3
   780  0006F0  EE20 F020          	lfsr	2,32
   781  0006F4                     copy_data0:
   782  0006F4  0009               	tblrd		*+
   783  0006F6  CFF5 FFEE          	movff	tablat,postinc0
   784  0006FA  50DD               	movf	postdec2,w,c
   785  0006FC  50D9               	movf	fsr2l,w,c
   786  0006FE  E1FA               	bnz	copy_data0
   787                           
   788                           ; Initialize objects allocated to BANK2 (16 bytes)
   789                           ; load TBLPTR registers with __pidataBANK2
   790  000700  0E72               	movlw	low __pidataBANK2
   791  000702  6EF6               	movwf	tblptrl,c
   792  000704  0E0C               	movlw	high __pidataBANK2
   793  000706  6EF7               	movwf	tblptrh,c
   794  000708  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   795  00070A  6EF8               	movwf	tblptru,c
   796  00070C  EE02  F0F0         	lfsr	0,__pdataBANK2
   797  000710  EE20 F010          	lfsr	2,16
   798  000714                     copy_data1:
   799  000714  0009               	tblrd		*+
   800  000716  CFF5 FFEE          	movff	tablat,postinc0
   801  00071A  50DD               	movf	postdec2,w,c
   802  00071C  50D9               	movf	fsr2l,w,c
   803  00071E  E1FA               	bnz	copy_data1
   804                           
   805                           ; Initialize objects allocated to BANK0 (12 bytes)
   806                           ; load TBLPTR registers with __pidataBANK0
   807  000720  0EDE               	movlw	low __pidataBANK0
   808  000722  6EF6               	movwf	tblptrl,c
   809  000724  0E0C               	movlw	high __pidataBANK0
   810  000726  6EF7               	movwf	tblptrh,c
   811  000728  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   812  00072A  6EF8               	movwf	tblptru,c
   813  00072C  EE00  F0F3         	lfsr	0,__pdataBANK0
   814  000730  EE20 F00C          	lfsr	2,12
   815  000734                     copy_data2:
   816  000734  0009               	tblrd		*+
   817  000736  CFF5 FFEE          	movff	tablat,postinc0
   818  00073A  50DD               	movf	postdec2,w,c
   819  00073C  50D9               	movf	fsr2l,w,c
   820  00073E  E1FA               	bnz	copy_data2
   821                           
   822                           ; Clear objects allocated to BIGRAM (2590 bytes)
   823  000740  EE04  F064         	lfsr	0,__pbssBIGRAM
   824  000744  EE2A F01E          	lfsr	2,2590
   825  000748                     clear_0:
   826  000748  6AEE               	clrf	postinc0,c
   827  00074A  50DD               	movf	postdec2,w,c
   828  00074C  50D9               	movf	fsr2l,w,c
   829  00074E  E1FC               	bnz	clear_0
   830  000750  50DA               	movf	fsr2h,w,c
   831  000752  E1FA               	bnz	clear_0
   832                           
   833                           ; Clear objects allocated to BANK4 (100 bytes)
   834  000754  EE04  F000         	lfsr	0,__pbssBANK4
   835  000758  0E64               	movlw	100
   836  00075A                     clear_1:
   837  00075A  6AEE               	clrf	postinc0,c
   838  00075C  06E8               	decf	wreg,f,c
   839  00075E  E1FD               	bnz	clear_1
   840                           
   841                           ; Clear objects allocated to BANK3 (160 bytes)
   842  000760  EE03  F000         	lfsr	0,__pbssBANK3
   843  000764  0EA0               	movlw	160
   844  000766                     clear_2:
   845  000766  6AEE               	clrf	postinc0,c
   846  000768  06E8               	decf	wreg,f,c
   847  00076A  E1FD               	bnz	clear_2
   848                           
   849                           ; Clear objects allocated to BANK2 (240 bytes)
   850  00076C  EE02  F000         	lfsr	0,__pbssBANK2
   851  000770  0EF0               	movlw	240
   852  000772                     clear_3:
   853  000772  6AEE               	clrf	postinc0,c
   854  000774  06E8               	decf	wreg,f,c
   855  000776  E1FD               	bnz	clear_3
   856                           
   857                           ; Clear objects allocated to BANK1 (245 bytes)
   858  000778  EE01  F000         	lfsr	0,__pbssBANK1
   859  00077C  0EF5               	movlw	245
   860  00077E                     clear_4:
   861  00077E  6AEE               	clrf	postinc0,c
   862  000780  06E8               	decf	wreg,f,c
   863  000782  E1FD               	bnz	clear_4
   864                           
   865                           ; Clear objects allocated to BANK0 (118 bytes)
   866  000784  EE00  F060         	lfsr	0,__pbssBANK0
   867  000788  0E76               	movlw	118
   868  00078A                     clear_5:
   869  00078A  6AEE               	clrf	postinc0,c
   870  00078C  06E8               	decf	wreg,f,c
   871  00078E  E1FD               	bnz	clear_5
   872                           
   873                           ; Clear objects allocated to COMRAM (14 bytes)
   874  000790  EE00  F03E         	lfsr	0,__pbssCOMRAM
   875  000794  0E0E               	movlw	14
   876  000796                     clear_6:
   877  000796  6AEE               	clrf	postinc0,c
   878  000798  06E8               	decf	wreg,f,c
   879  00079A  E1FD               	bnz	clear_6
   880  00079C                     end_of_initialization:
   881                           	opt stack 0
   882  00079C                     __end_of__initialization:
   883                           	opt stack 0
   884  00079C  0100               	movlb	0
   885  00079E  EF52  F002         	goto	_main	;jump to C main() function
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec2	equ	0xFDD
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           
   896                           	psect	bssCOMRAM
   897  00003E                     __pbssCOMRAM:
   898                           	opt stack 0
   899  00003E                     _rxPayload:
   900                           	opt stack 0
   901  00003E                     	ds	4
   902  000042                     _datatobesolved:
   903                           	opt stack 0
   904  000042                     	ds	2
   905  000044                     _reloadVal:
   906                           	opt stack 0
   907  000044                     	ds	2
   908  000046                     _eusart1RxStatusBuffer:
   909                           	opt stack 0
   910  000046                     	ds	1
   911  000047                     _eusart1RxTail:
   912                           	opt stack 0
   913  000047                     	ds	1
   914  000048                     _eusart1RxHead:
   915                           	opt stack 0
   916  000048                     	ds	1
   917  000049                     __rcon:
   918                           	opt stack 0
   919  000049                     	ds	1
   920  00004A                     _allocatedTimers:
   921                           	opt stack 0
   922  00004A                     	ds	1
   923  00004B                     _localDioStatus:
   924                           	opt stack 0
   925  00004B                     	ds	1
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec2	equ	0xFDD
   933                           fsr2h	equ	0xFDA
   934                           fsr2l	equ	0xFD9
   935                           
   936                           	psect	bssBANK0
   937  000060                     __pbssBANK0:
   938                           	opt stack 0
   939  000060                     TMR_GetDeltaTime@retVal:
   940                           	opt stack 0
   941  000060                     	ds	4
   942  000064                     _ticksAccounted:
   943                           	opt stack 0
   944  000064                     	ds	4
   945  000068                     _ticksAdded:
   946                           	opt stack 0
   947  000068                     	ds	4
   948  00006C                     _counterx:
   949                           	opt stack 0
   950  00006C                     	ds	2
   951  00006E                     _bitStatus7:
   952                           	opt stack 0
   953  00006E                     	ds	2
   954  000070                     _bitStatus6:
   955                           	opt stack 0
   956  000070                     	ds	2
   957  000072                     _bitStatus5:
   958                           	opt stack 0
   959  000072                     	ds	2
   960  000074                     _bitStatus4:
   961                           	opt stack 0
   962  000074                     	ds	2
   963  000076                     _bitStatus3:
   964                           	opt stack 0
   965  000076                     	ds	2
   966  000078                     _bitStatus2:
   967                           	opt stack 0
   968  000078                     	ds	2
   969  00007A                     _bitStatus1:
   970                           	opt stack 0
   971  00007A                     	ds	2
   972  00007C                     _bitStatus:
   973                           	opt stack 0
   974  00007C                     	ds	2
   975  00007E                     _bitStatusbefore7:
   976                           	opt stack 0
   977  00007E                     	ds	2
   978  000080                     _bitStatusbefore6:
   979                           	opt stack 0
   980  000080                     	ds	2
   981  000082                     _bitStatusbefore5:
   982                           	opt stack 0
   983  000082                     	ds	2
   984  000084                     _bitStatusbefore4:
   985                           	opt stack 0
   986  000084                     	ds	2
   987  000086                     _bitStatusbefore3:
   988                           	opt stack 0
   989  000086                     	ds	2
   990  000088                     _bitStatusbefore2:
   991                           	opt stack 0
   992  000088                     	ds	2
   993  00008A                     _bitStatusbefore1:
   994                           	opt stack 0
   995  00008A                     	ds	2
   996  00008C                     _counterinterrupt:
   997                           	opt stack 0
   998  00008C                     	ds	2
   999  00008E                     TMR_SwapTimer@retVal:
  1000                           	opt stack 0
  1001  00008E                     	ds	2
  1002  000090                     TMR_SwapTimer@oldVal:
  1003                           	opt stack 0
  1004  000090                     	ds	2
  1005  000092                     TMR_GetDeltaTime@tmrVal:
  1006                           	opt stack 0
  1007  000092                     	ds	2
  1008  000094                     _datax:
  1009                           	opt stack 0
  1010  000094                     	ds	1
  1011  000095                     _eusart1RxLastError:
  1012                           	opt stack 0
  1013  000095                     	ds	1
  1014  000096                     _eusart1RxCount:
  1015                           	opt stack 0
  1016  000096                     	ds	1
  1017  000097                     _eusart1RxBuffer:
  1018                           	opt stack 0
  1019  000097                     	ds	1
  1020  000098                     _eusart1TxBuffer:
  1021                           	opt stack 0
  1022  000098                     	ds	1
  1023  000099                     _eusart1TxTail:
  1024                           	opt stack 0
  1025  000099                     	ds	1
  1026  00009A                     _eusart1TxHead:
  1027                           	opt stack 0
  1028  00009A                     	ds	1
  1029  00009B                     __roundCounter:
  1030                           	opt stack 0
  1031  00009B                     	ds	1
  1032  00009C                     _timerOverflow:
  1033                           	opt stack 0
  1034  00009C                     	ds	1
  1035  00009D                     _dioStatus:
  1036                           	opt stack 0
  1037  00009D                     	ds	1
  1038  00009E                     _RadioConfiguration:
  1039                           	opt stack 0
  1040  00009E                     	ds	54
  1041  0000D4                     _dataresult:
  1042                           	opt stack 0
  1043  0000D4                     	ds	2
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec2	equ	0xFDD
  1051                           fsr2h	equ	0xFDA
  1052                           fsr2l	equ	0xFD9
  1053                           
  1054                           	psect	dataBANK0
  1055  0000F3                     __pdataBANK0:
  1056                           	opt stack 0
  1057  0000F3                     _randx:
  1058                           	opt stack 0
  1059  0000F3                     	ds	4
  1060  0000F7                     _devAddr:
  1061                           	opt stack 0
  1062  0000F7                     	ds	4
  1063  0000FB                     _ticksToScheduledInterrupt:
  1064                           	opt stack 0
  1065  0000FB                     	ds	4
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec2	equ	0xFDD
  1073                           fsr2h	equ	0xFDA
  1074                           fsr2l	equ	0xFD9
  1075                           
  1076                           	psect	bssBANK1
  1077  000100                     __pbssBANK1:
  1078                           	opt stack 0
  1079  000100                     _loRa:
  1080                           	opt stack 0
  1081  000100                     	ds	245
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           postdec2	equ	0xFDD
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           
  1092                           	psect	bssBANK2
  1093  000200                     __pbssBANK2:
  1094                           	opt stack 0
  1095  000200                     _Channels:
  1096                           	opt stack 0
  1097  000200                     	ds	224
  1098  0002E0                     _aesBuffer:
  1099                           	opt stack 0
  1100  0002E0                     	ds	16
  1101                           tblptru	equ	0xFF8
  1102                           tblptrh	equ	0xFF7
  1103                           tblptrl	equ	0xFF6
  1104                           tablat	equ	0xFF5
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec2	equ	0xFDD
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           
  1111                           	psect	dataBANK2
  1112  0002F0                     __pdataBANK2:
  1113                           	opt stack 0
  1114  0002F0                     GenerateSubkey@F7103:
  1115                           	opt stack 0
  1116  0002F0                     	ds	16
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec2	equ	0xFDD
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           
  1127                           	psect	bssBANK3
  1128  000300                     __pbssBANK3:
  1129                           	opt stack 0
  1130  000300                     _swTimers:
  1131                           	opt stack 0
  1132  000300                     	ds	160
  1133                           tblptru	equ	0xFF8
  1134                           tblptrh	equ	0xFF7
  1135                           tblptrl	equ	0xFF6
  1136                           tablat	equ	0xFF5
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec2	equ	0xFDD
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           
  1143                           	psect	dataBANK3
  1144  0003A0                     __pdataBANK3:
  1145                           	opt stack 0
  1146  0003A0                     _appSKey:
  1147                           	opt stack 0
  1148  0003A0                     	ds	16
  1149  0003B0                     _nwkSKey:
  1150                           	opt stack 0
  1151  0003B0                     	ds	16
  1152                           tblptru	equ	0xFF8
  1153                           tblptrh	equ	0xFF7
  1154                           tblptrl	equ	0xFF6
  1155                           tablat	equ	0xFF5
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec2	equ	0xFDD
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           
  1162                           	psect	bssBANK4
  1163  000400                     __pbssBANK4:
  1164                           	opt stack 0
  1165  000400                     _sub:
  1166                           	opt stack 0
  1167  000400                     	ds	100
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           postdec2	equ	0xFDD
  1175                           fsr2h	equ	0xFDA
  1176                           fsr2l	equ	0xFD9
  1177                           
  1178                           	psect	bssBIGRAM
  1179  000464                     __pbssBIGRAM:
  1180                           	opt stack 0
  1181  000464                     _dataxstr:
  1182                           	opt stack 0
  1183  000464                     	ds	2048
  1184  000C64                     _radioBuffer:
  1185                           	opt stack 0
  1186  000C64                     	ds	271
  1187  000D73                     _macBuffer:
  1188                           	opt stack 0
  1189  000D73                     	ds	271
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec2	equ	0xFDD
  1197                           fsr2h	equ	0xFDA
  1198                           fsr2l	equ	0xFD9
  1199                           
  1200                           	psect	cstackBANK0
  1201  0000D6                     __pcstackBANK0:
  1202                           	opt stack 0
  1203  0000D6                     EUSART1_Write@txData:
  1204                           	opt stack 0
  1205  0000D6                     INT1_SetInterruptHandler@InterruptHandler:
  1206                           	opt stack 0
  1207  0000D6                     INT2_SetInterruptHandler@InterruptHandler:
  1208                           	opt stack 0
  1209  0000D6                     IOCB4_SetInterruptHandler@InterruptHandler:
  1210                           	opt stack 0
  1211  0000D6                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1212                           	opt stack 0
  1213  0000D6                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1214                           	opt stack 0
  1215  0000D6                     EUSART1_SetErrorHandler@interruptHandler:
  1216                           	opt stack 0
  1217  0000D6                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1218                           	opt stack 0
  1219  0000D6                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1220                           	opt stack 0
  1221  0000D6                     TMR1_SetInterruptHandler@InterruptHandler:
  1222                           	opt stack 0
  1223  0000D6                     substring@s:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x0
  1227  0000D6                     	ds	2
  1228  0000D8                     substring@sub:
  1229                           	opt stack 0
  1230                           
  1231                           ; 2 bytes @ 0x2
  1232  0000D8                     	ds	2
  1233  0000DA                     substring@p:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x4
  1237  0000DA                     	ds	2
  1238  0000DC                     substring@l:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0x6
  1242  0000DC                     	ds	2
  1243  0000DE                     ??_substring:
  1244                           
  1245                           ; 1 bytes @ 0x8
  1246  0000DE                     	ds	4
  1247  0000E2                     substring@c:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0xC
  1251  0000E2                     	ds	2
  1252  0000E4                     ??_main:
  1253                           
  1254                           ; 1 bytes @ 0xE
  1255  0000E4                     	ds	2
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec2	equ	0xFDD
  1263                           fsr2h	equ	0xFDA
  1264                           fsr2l	equ	0xFD9
  1265                           
  1266                           	psect	cstackCOMRAM
  1267  000001                     __pcstackCOMRAM:
  1268                           	opt stack 0
  1269  000001                     ?_TMR1_ReadTimer:
  1270                           	opt stack 0
  1271  000001                     EUSART1_Read@readValue:
  1272                           	opt stack 0
  1273  000001                     TMR1_WriteTimer@timerVal:
  1274                           	opt stack 0
  1275  000001                     strncat@to:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x0
  1279  000001                     	ds	2
  1280  000003                     ??_TMR1_ReadTimer:
  1281  000003                     strncat@from:
  1282                           	opt stack 0
  1283                           
  1284                           ; 2 bytes @ 0x2
  1285  000003                     	ds	2
  1286  000005                     TMR1_ReadTimer@readVal:
  1287                           	opt stack 0
  1288  000005                     strncat@size:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x4
  1292  000005                     	ds	2
  1293  000007                     TMR1_ReadTimer@readValHigh:
  1294                           	opt stack 0
  1295  000007                     strncat@cp:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x6
  1299  000007                     	ds	1
  1300  000008                     TMR1_ReadTimer@readValLow:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x7
  1304  000008                     	ds	1
  1305  000009                     ??_EUSART1_Receive_ISR:
  1306  000009                     ?_TMR_SwapTimer:
  1307                           	opt stack 0
  1308  000009                     ?_TMR_GetDeltaTime:
  1309                           	opt stack 0
  1310  000009                     TMR_SwapTimer@timerVal:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x8
  1314  000009                     	ds	2
  1315  00000B                     
  1316                           ; 1 bytes @ 0xA
  1317  00000B                     	ds	2
  1318  00000D                     ??_TMR_GetDeltaTime:
  1319                           
  1320                           ; 1 bytes @ 0xC
  1321  00000D                     	ds	20
  1322  000021                     ?_SwTimersInterrupt:
  1323                           	opt stack 0
  1324                           
  1325                           ; 4 bytes @ 0x20
  1326  000021                     	ds	4
  1327  000025                     
  1328                           ; 1 bytes @ 0x24
  1329  000025                     	ds	4
  1330  000029                     SwTimersInterrupt@timeElapsed:
  1331                           	opt stack 0
  1332                           
  1333                           ; 4 bytes @ 0x28
  1334  000029                     	ds	4
  1335  00002D                     SwTimersInterrupt@ticksToNextTimerEvent:
  1336                           	opt stack 0
  1337                           
  1338                           ; 4 bytes @ 0x2C
  1339  00002D                     	ds	4
  1340  000031                     SwTimersInterrupt@i:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x30
  1344  000031                     	ds	1
  1345  000032                     ??_TMR_ISR_lora:
  1346                           
  1347                           ; 1 bytes @ 0x31
  1348  000032                     	ds	2
  1349  000034                     ??_INTERRUPT_InterruptManager:
  1350                           
  1351                           ; 1 bytes @ 0x33
  1352  000034                     	ds	10
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           postdec2	equ	0xFDD
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           
  1363 ;;
  1364 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1365 ;;
  1366 ;; *************** function _main *****************
  1367 ;; Defined at:
  1368 ;;		line 37 in file "main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels required when called:   11
  1388 ;; This function calls:
  1389 ;;		_EUSART1_Write
  1390 ;;		_SYSTEM_Initialize
  1391 ;;		_substring
  1392 ;; This function is called by:
  1393 ;;		Startup code after reset
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text0
  1398  0004A4                     __ptext0:
  1399                           	opt stack 0
  1400  0004A4                     _main:
  1401                           	opt stack 20
  1402                           
  1403                           ;main.c: 39: SYSTEM_Initialize();
  1404                           
  1405                           ;incstack = 0
  1406  0004A4  EC7B  F005         	call	_SYSTEM_Initialize	;wreg free
  1407                           
  1408                           ;main.c: 40: (INTCONbits.GIE = 1);
  1409  0004A8  8EF2               	bsf	intcon,7,c	;volatile
  1410                           
  1411                           ;main.c: 41: (INTCONbits.PEIE = 1);
  1412  0004AA  8CF2               	bsf	intcon,6,c	;volatile
  1413                           
  1414                           ;main.c: 43: TRISA = 0xF0;
  1415  0004AC  0EF0               	movlw	240
  1416  0004AE  6E92               	movwf	3986,c	;volatile
  1417                           
  1418                           ;main.c: 44: counterx=0;
  1419  0004B0  0E00               	movlw	0
  1420  0004B2  0100               	movlb	0	; () banked
  1421  0004B4  6F6D               	movwf	(_counterx+1)& (0+255),b
  1422  0004B6  0E00               	movlw	0
  1423  0004B8  6F6C               	movwf	_counterx& (0+255),b
  1424  0004BA                     l12190:
  1425                           
  1426                           ;main.c: 47: {
  1427                           ;main.c: 48: if(counterx <1){
  1428  0004BA  0100               	movlb	0	; () banked
  1429  0004BC  BF6D               	btfsc	(_counterx+1)& (0+255),7,b
  1430  0004BE  D005               	goto	u12730
  1431  0004C0  516D               	movf	(_counterx+1)& (0+255),w,b
  1432  0004C2  E1FB               	bnz	l12190
  1433  0004C4  056C               	decf	_counterx& (0+255),w,b
  1434  0004C6  B0D8               	btfsc	status,0,c
  1435  0004C8  D7F8               	goto	l2750
  1436  0004CA                     u12730:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 49: LATA=0xFF;
  1440  0004CA  6889               	setf	3977,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;main.c: 50: EUSART1_Write(0b10101111);
  1444  0004CC  0EAF               	movlw	175
  1445  0004CE  EC19  F005         	call	_EUSART1_Write
  1446                           
  1447                           ;main.c: 51: EUSART1_Write(0b00111111);
  1448  0004D2  0E3F               	movlw	63
  1449  0004D4  EC19  F005         	call	_EUSART1_Write
  1450                           
  1451                           ;main.c: 52: EUSART1_Write(0b00100001);
  1452  0004D8  0E21               	movlw	33
  1453  0004DA  EC19  F005         	call	_EUSART1_Write
  1454                           
  1455                           ;main.c: 53: EUSART1_Write(0b10001101);
  1456  0004DE  0E8D               	movlw	141
  1457  0004E0  EC19  F005         	call	_EUSART1_Write
  1458                           
  1459                           ;main.c: 54: EUSART1_Write(0b00001010);
  1460  0004E4  0E0A               	movlw	10
  1461  0004E6  EC19  F005         	call	_EUSART1_Write
  1462                           
  1463                           ;main.c: 56: EUSART1_Write(0b00101110);
  1464  0004EA  0E2E               	movlw	46
  1465  0004EC  EC19  F005         	call	_EUSART1_Write
  1466                           
  1467                           ;main.c: 57: EUSART1_Write(0b00110000);
  1468  0004F0  0E30               	movlw	48
  1469  0004F2  EC19  F005         	call	_EUSART1_Write
  1470                           
  1471                           ;main.c: 58: EUSART1_Write(0b00110000);
  1472  0004F6  0E30               	movlw	48
  1473  0004F8  EC19  F005         	call	_EUSART1_Write
  1474                           
  1475                           ;main.c: 60: LATA=0xF0;
  1476  0004FC  0EF0               	movlw	240
  1477  0004FE  6E89               	movwf	3977,c	;volatile
  1478                           
  1479                           ;main.c: 62: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1480  000500  0E29               	movlw	41
  1481  000502  0100               	movlb	0	; () banked
  1482  000504  6FE5               	movwf	(??_main+1)& (0+255),b
  1483  000506  0E96               	movlw	150
  1484  000508  6FE4               	movwf	??_main& (0+255),b
  1485  00050A  0E7F               	movlw	127
  1486  00050C                     u12957:
  1487  00050C  2EE8               	decfsz	wreg,f,c
  1488  00050E  D7FE               	bra	u12957
  1489  000510  2FE4               	decfsz	??_main& (0+255),f,b
  1490  000512  D7FC               	bra	u12957
  1491  000514  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1492  000516  D7FA               	bra	u12957
  1493                           
  1494                           ;main.c: 64: LATA=0xFF;
  1495  000518  6889               	setf	3977,c	;volatile
  1496                           
  1497                           ;main.c: 67: EUSART1_Write(0b00101110);
  1498  00051A  0E2E               	movlw	46
  1499  00051C  EC19  F005         	call	_EUSART1_Write
  1500                           
  1501                           ;main.c: 68: EUSART1_Write(0b00110000);
  1502  000520  0E30               	movlw	48
  1503  000522  EC19  F005         	call	_EUSART1_Write
  1504                           
  1505                           ;main.c: 69: EUSART1_Write(0b00110000);
  1506  000526  0E30               	movlw	48
  1507  000528  EC19  F005         	call	_EUSART1_Write
  1508                           
  1509                           ;main.c: 70: EUSART1_Write(0b10110111);
  1510  00052C  0EB7               	movlw	183
  1511  00052E  EC19  F005         	call	_EUSART1_Write
  1512                           
  1513                           ;main.c: 71: EUSART1_Write(0b10001101);
  1514  000532  0E8D               	movlw	141
  1515  000534  EC19  F005         	call	_EUSART1_Write
  1516                           
  1517                           ;main.c: 72: EUSART1_Write(0b00001010);
  1518  000538  0E0A               	movlw	10
  1519  00053A  EC19  F005         	call	_EUSART1_Write
  1520                           
  1521                           ;main.c: 74: EUSART1_Write(0x61);
  1522  00053E  0E61               	movlw	97
  1523  000540  EC19  F005         	call	_EUSART1_Write
  1524                           
  1525                           ;main.c: 75: EUSART1_Write(0x61);
  1526  000544  0E61               	movlw	97
  1527  000546  EC19  F005         	call	_EUSART1_Write
  1528                           
  1529                           ;main.c: 76: EUSART1_Write(0x61);
  1530  00054A  0E61               	movlw	97
  1531  00054C  EC19  F005         	call	_EUSART1_Write
  1532                           
  1533                           ;main.c: 77: LATA=0xF0;
  1534  000550  0EF0               	movlw	240
  1535  000552  6E89               	movwf	3977,c	;volatile
  1536                           
  1537                           ;main.c: 79: counterx++;
  1538  000554  0100               	movlb	0	; () banked
  1539  000556  4B6C               	infsnz	_counterx& (0+255),f,b
  1540  000558  2B6D               	incf	(_counterx+1)& (0+255),f,b
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 80: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1544  00055A  0E29               	movlw	41
  1545  00055C  0100               	movlb	0	; () banked
  1546  00055E  6FE5               	movwf	(??_main+1)& (0+255),b
  1547  000560  0E96               	movlw	150
  1548  000562  6FE4               	movwf	??_main& (0+255),b
  1549  000564  0E7F               	movlw	127
  1550  000566                     u12967:
  1551  000566  2EE8               	decfsz	wreg,f,c
  1552  000568  D7FE               	bra	u12967
  1553  00056A  2FE4               	decfsz	??_main& (0+255),f,b
  1554  00056C  D7FC               	bra	u12967
  1555  00056E  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1556  000570  D7FA               	bra	u12967
  1557                           
  1558                           ;main.c: 81: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1559  000572  0E29               	movlw	41
  1560  000574  0100               	movlb	0	; () banked
  1561  000576  6FE5               	movwf	(??_main+1)& (0+255),b
  1562  000578  0E96               	movlw	150
  1563  00057A  6FE4               	movwf	??_main& (0+255),b
  1564  00057C  0E7F               	movlw	127
  1565  00057E                     u12977:
  1566  00057E  2EE8               	decfsz	wreg,f,c
  1567  000580  D7FE               	bra	u12977
  1568  000582  2FE4               	decfsz	??_main& (0+255),f,b
  1569  000584  D7FC               	bra	u12977
  1570  000586  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1571  000588  D7FA               	bra	u12977
  1572                           
  1573                           ;main.c: 82: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1574  00058A  0E29               	movlw	41
  1575  00058C  0100               	movlb	0	; () banked
  1576  00058E  6FE5               	movwf	(??_main+1)& (0+255),b
  1577  000590  0E96               	movlw	150
  1578  000592  6FE4               	movwf	??_main& (0+255),b
  1579  000594  0E7F               	movlw	127
  1580  000596                     u12987:
  1581  000596  2EE8               	decfsz	wreg,f,c
  1582  000598  D7FE               	bra	u12987
  1583  00059A  2FE4               	decfsz	??_main& (0+255),f,b
  1584  00059C  D7FC               	bra	u12987
  1585  00059E  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1586  0005A0  D7FA               	bra	u12987
  1587                           
  1588                           ;main.c: 83: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1589  0005A2  0E29               	movlw	41
  1590  0005A4  0100               	movlb	0	; () banked
  1591  0005A6  6FE5               	movwf	(??_main+1)& (0+255),b
  1592  0005A8  0E96               	movlw	150
  1593  0005AA  6FE4               	movwf	??_main& (0+255),b
  1594  0005AC  0E7F               	movlw	127
  1595  0005AE                     u12997:
  1596  0005AE  2EE8               	decfsz	wreg,f,c
  1597  0005B0  D7FE               	bra	u12997
  1598  0005B2  2FE4               	decfsz	??_main& (0+255),f,b
  1599  0005B4  D7FC               	bra	u12997
  1600  0005B6  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1601  0005B8  D7FA               	bra	u12997
  1602                           
  1603                           ;main.c: 85: substring(dataxstr, sub, 30, 10);
  1604  0005BA  0E64               	movlw	low _dataxstr
  1605  0005BC  0100               	movlb	0	; () banked
  1606  0005BE  6FD6               	movwf	substring@s& (0+255),b
  1607  0005C0  0E04               	movlw	high _dataxstr
  1608  0005C2  6FD7               	movwf	(substring@s+1)& (0+255),b
  1609  0005C4  0E00               	movlw	low _sub
  1610  0005C6  6FD8               	movwf	substring@sub& (0+255),b
  1611  0005C8  0E04               	movlw	high _sub
  1612  0005CA  6FD9               	movwf	(substring@sub+1)& (0+255),b
  1613  0005CC  0E00               	movlw	0
  1614  0005CE  6FDB               	movwf	(substring@p+1)& (0+255),b
  1615  0005D0  0E1E               	movlw	30
  1616  0005D2  6FDA               	movwf	substring@p& (0+255),b
  1617  0005D4  0E00               	movlw	0
  1618  0005D6  6FDD               	movwf	(substring@l+1)& (0+255),b
  1619  0005D8  0E0A               	movlw	10
  1620  0005DA  6FDC               	movwf	substring@l& (0+255),b
  1621  0005DC  EC11  F004         	call	_substring	;wreg free
  1622  0005E0  D76C               	goto	l2750
  1623  0005E2                     __end_of_main:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           intcon	equ	0xFF2
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec2	equ	0xFDD
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _substring *****************
  1638 ;; Defined at:
  1639 ;;		line 91 in file "main.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1642 ;;		 -> dataxstr(2048), 
  1643 ;;  sub             2    2[BANK0 ] PTR unsigned char 
  1644 ;;		 -> sub(100), 
  1645 ;;  p               2    4[BANK0 ] int 
  1646 ;;  l               2    6[BANK0 ] int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  c               2   12[BANK0 ] int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:       14 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    7
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text1
  1673  000822                     __ptext1:
  1674                           	opt stack 0
  1675  000822                     _substring:
  1676                           	opt stack 23
  1677                           
  1678                           ;main.c: 92: int c = 0;
  1679                           
  1680                           ;incstack = 0
  1681  000822  0E00               	movlw	0
  1682  000824  0100               	movlb	0	; () banked
  1683  000826  6FE3               	movwf	(substring@c+1)& (0+255),b
  1684  000828  0E00               	movlw	0
  1685  00082A  6FE2               	movwf	substring@c& (0+255),b
  1686                           
  1687                           ;main.c: 94: while (c < l) {
  1688  00082C  D01E               	goto	l2757
  1689  00082E                     
  1690                           ; BSR set to: 0
  1691                           ;main.c: 95: sub[c] = s[p+c-1];
  1692                           
  1693                           ; BSR set to: 0
  1694  00082E  0EFF               	movlw	255
  1695  000830  6FDE               	movwf	??_substring& (0+255),b
  1696  000832  0EFF               	movlw	255
  1697  000834  6FDF               	movwf	(??_substring+1)& (0+255),b
  1698  000836  51E2               	movf	substring@c& (0+255),w,b
  1699  000838  25DA               	addwf	substring@p& (0+255),w,b
  1700  00083A  6FE0               	movwf	(??_substring+2)& (0+255),b
  1701  00083C  51E3               	movf	(substring@c+1)& (0+255),w,b
  1702  00083E  21DB               	addwfc	(substring@p+1)& (0+255),w,b
  1703  000840  6FE1               	movwf	(??_substring+3)& (0+255),b
  1704  000842  51DE               	movf	??_substring& (0+255),w,b
  1705  000844  27E0               	addwf	(??_substring+2)& (0+255),f,b
  1706  000846  51DF               	movf	(??_substring+1)& (0+255),w,b
  1707  000848  23E1               	addwfc	(??_substring+3)& (0+255),f,b
  1708  00084A  51E0               	movf	(??_substring+2)& (0+255),w,b
  1709  00084C  25D6               	addwf	substring@s& (0+255),w,b
  1710  00084E  6ED9               	movwf	fsr2l,c
  1711  000850  51E1               	movf	(??_substring+3)& (0+255),w,b
  1712  000852  21D7               	addwfc	(substring@s+1)& (0+255),w,b
  1713  000854  6EDA               	movwf	fsr2h,c
  1714  000856  51E2               	movf	substring@c& (0+255),w,b
  1715  000858  25D8               	addwf	substring@sub& (0+255),w,b
  1716  00085A  6EE9               	movwf	fsr0l,c
  1717  00085C  51E3               	movf	(substring@c+1)& (0+255),w,b
  1718  00085E  21D9               	addwfc	(substring@sub+1)& (0+255),w,b
  1719  000860  6EEA               	movwf	fsr0h,c
  1720  000862  CFDF FFEF          	movff	indf2,indf0
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;main.c: 96: c++;
  1724  000866  4BE2               	infsnz	substring@c& (0+255),f,b
  1725  000868  2BE3               	incf	(substring@c+1)& (0+255),f,b
  1726  00086A                     l2757:
  1727                           
  1728                           ; BSR set to: 0
  1729                           
  1730                           ; BSR set to: 0
  1731  00086A  51DC               	movf	substring@l& (0+255),w,b
  1732  00086C  5DE2               	subwf	substring@c& (0+255),w,b
  1733  00086E  51E3               	movf	(substring@c+1)& (0+255),w,b
  1734  000870  0A80               	xorlw	128
  1735  000872  6FDE               	movwf	??_substring& (0+255),b
  1736  000874  51DD               	movf	(substring@l+1)& (0+255),w,b
  1737  000876  0A80               	xorlw	128
  1738  000878  59DE               	subwfb	??_substring& (0+255),w,b
  1739  00087A  A0D8               	btfss	status,0,c
  1740  00087C  D7D8               	goto	l2758
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 97: }
  1744                           ;main.c: 98: sub[c] = '\0';
  1745                           
  1746                           ; BSR set to: 0
  1747  00087E  51E2               	movf	substring@c& (0+255),w,b
  1748  000880  25D8               	addwf	substring@sub& (0+255),w,b
  1749  000882  6ED9               	movwf	fsr2l,c
  1750  000884  51E3               	movf	(substring@c+1)& (0+255),w,b
  1751  000886  21D9               	addwfc	(substring@sub+1)& (0+255),w,b
  1752  000888  6EDA               	movwf	fsr2h,c
  1753  00088A  0E00               	movlw	0
  1754  00088C  6EDF               	movwf	indf2,c
  1755                           
  1756                           ; BSR set to: 0
  1757  00088E  0012               	return		;funcret
  1758  000890                     __end_of_substring:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           intcon	equ	0xFF2
  1765                           indf0	equ	0xFEF
  1766                           postinc0	equ	0xFEE
  1767                           fsr0h	equ	0xFEA
  1768                           fsr0l	equ	0xFE9
  1769                           wreg	equ	0xFE8
  1770                           indf2	equ	0xFDF
  1771                           postdec2	equ	0xFDD
  1772                           fsr2h	equ	0xFDA
  1773                           fsr2l	equ	0xFD9
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _SYSTEM_Initialize *****************
  1777 ;; Defined at:
  1778 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:   10
  1799 ;; This function calls:
  1800 ;;		_EUSART1_Initialize
  1801 ;;		_EXT_INT_Initialize
  1802 ;;		_INTERRUPT_Initialize
  1803 ;;		_LORAWAN_PlatformInit
  1804 ;;		_OSCILLATOR_Initialize
  1805 ;;		_PIN_MANAGER_Initialize
  1806 ;;		_SPI2_Initialize
  1807 ;;		_TMR1_Initialize
  1808 ;;		_TMR5_Initialize
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text2
  1815  000AF6                     __ptext2:
  1816                           	opt stack 0
  1817  000AF6                     _SYSTEM_Initialize:
  1818                           	opt stack 20
  1819                           
  1820                           ;mcc.c: 53: INTERRUPT_Initialize();
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;incstack = 0
  1824  000AF6  ECC1  F006         	call	_INTERRUPT_Initialize	;wreg free
  1825                           
  1826                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1827  000AFA  ECA8  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1828                           
  1829                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1830  000AFE  EC68  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1831                           
  1832                           ;mcc.c: 56: SPI2_Initialize();
  1833  000B02  EC61  F006         	call	_SPI2_Initialize	;wreg free
  1834                           
  1835                           ;mcc.c: 59: TMR5_Initialize();
  1836  000B06  EC12  F006         	call	_TMR5_Initialize	;wreg free
  1837                           
  1838                           ;mcc.c: 60: EXT_INT_Initialize();
  1839  000B0A  EC66  F005         	call	_EXT_INT_Initialize	;wreg free
  1840                           
  1841                           ;mcc.c: 61: TMR1_Initialize();
  1842  000B0E  EC50  F005         	call	_TMR1_Initialize	;wreg free
  1843                           
  1844                           ;mcc.c: 62: EUSART1_Initialize();
  1845  000B12  ECD1  F003         	call	_EUSART1_Initialize	;wreg free
  1846                           
  1847                           ;mcc.c: 63: LORAWAN_PlatformInit();
  1848  000B16  ECA1  F005         	call	_LORAWAN_PlatformInit	;wreg free
  1849  000B1A  0012               	return		;funcret
  1850  000B1C                     __end_of_SYSTEM_Initialize:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           intcon	equ	0xFF2
  1857                           indf0	equ	0xFEF
  1858                           postinc0	equ	0xFEE
  1859                           fsr0h	equ	0xFEA
  1860                           fsr0l	equ	0xFE9
  1861                           wreg	equ	0xFE8
  1862                           indf2	equ	0xFDF
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _TMR5_Initialize *****************
  1869 ;; Defined at:
  1870 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    7
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_SYSTEM_Initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text3
  1899  000C24                     __ptext3:
  1900                           	opt stack 0
  1901  000C24                     _TMR5_Initialize:
  1902                           	opt stack 22
  1903                           
  1904                           ;tmr5.c: 68: T5GCON = 0x00;
  1905                           
  1906                           ;incstack = 0
  1907  000C24  0E00               	movlw	0
  1908  000C26  010F               	movlb	15	; () banked
  1909  000C28  6F4D               	movwf	77,b	;volatile
  1910                           
  1911                           ;tmr5.c: 71: TMR5H = 0x10;
  1912  000C2A  0E10               	movlw	16
  1913  000C2C  6F50               	movwf	80,b	;volatile
  1914                           
  1915                           ;tmr5.c: 74: TMR5L = 0x00;
  1916  000C2E  0E00               	movlw	0
  1917  000C30  6F4F               	movwf	79,b	;volatile
  1918                           
  1919                           ; BSR set to: 15
  1920                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  1921  000C32  CF4F F0E6          	movff	3919,_timer5ReloadVal	;volatile
  1922  000C36  CF50 F0E7          	movff	3920,_timer5ReloadVal+1	;volatile
  1923                           
  1924                           ; BSR set to: 15
  1925                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  1926  000C3A  927E               	bcf	3966,1,c	;volatile
  1927                           
  1928                           ;tmr5.c: 83: T5CON = 0xBD;
  1929  000C3C  0EBD               	movlw	189
  1930  000C3E  6F4E               	movwf	78,b	;volatile
  1931                           
  1932                           ; BSR set to: 15
  1933  000C40  0012               	return		;funcret
  1934  000C42                     __end_of_TMR5_Initialize:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           intcon	equ	0xFF2
  1941                           indf0	equ	0xFEF
  1942                           postinc0	equ	0xFEE
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           indf2	equ	0xFDF
  1947                           postdec2	equ	0xFDD
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _TMR1_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    8
  1975 ;; This function calls:
  1976 ;;		_TMR1_SetInterruptHandler
  1977 ;; This function is called by:
  1978 ;;		_SYSTEM_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text4
  1983  000AA0                     __ptext4:
  1984                           	opt stack 0
  1985  000AA0                     _TMR1_Initialize:
  1986                           	opt stack 21
  1987                           
  1988                           ;tmr1.c: 69: T1GCON = 0x00;
  1989                           
  1990                           ; BSR set to: 15
  1991                           ;incstack = 0
  1992  000AA0  0E00               	movlw	0
  1993  000AA2  6ECC               	movwf	4044,c	;volatile
  1994                           
  1995                           ;tmr1.c: 72: TMR1H = 0x00;
  1996  000AA4  0E00               	movlw	0
  1997  000AA6  6ECF               	movwf	4047,c	;volatile
  1998                           
  1999                           ;tmr1.c: 75: TMR1L = 0x00;
  2000  000AA8  0E00               	movlw	0
  2001  000AAA  6ECE               	movwf	4046,c	;volatile
  2002                           
  2003                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2004  000AAC  CFCE F0EA          	movff	4046,_timer1ReloadVal	;volatile
  2005  000AB0  CFCF F0EB          	movff	4047,_timer1ReloadVal+1	;volatile
  2006                           
  2007                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2008  000AB4  909E               	bcf	3998,0,c	;volatile
  2009                           
  2010                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2011  000AB6  809D               	bsf	3997,0,c	;volatile
  2012                           
  2013                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2014  000AB8  0E8C               	movlw	low _TMR1_DefaultInterruptHandler
  2015  000ABA  0100               	movlb	0	; () banked
  2016  000ABC  6FD6               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2017  000ABE  0E0D               	movlw	high _TMR1_DefaultInterruptHandler
  2018  000AC0  6FD7               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2019  000AC2  EC75  F006         	call	_TMR1_SetInterruptHandler	;wreg free
  2020                           
  2021                           ;tmr1.c: 90: T1CON = 0x8D;
  2022  000AC6  0E8D               	movlw	141
  2023  000AC8  6ECD               	movwf	4045,c	;volatile
  2024  000ACA  0012               	return		;funcret
  2025  000ACC                     __end_of_TMR1_Initialize:
  2026                           	opt stack 0
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           intcon	equ	0xFF2
  2032                           indf0	equ	0xFEF
  2033                           postinc0	equ	0xFEE
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           indf2	equ	0xFDF
  2038                           postdec2	equ	0xFDD
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _SPI2_Initialize *****************
  2044 ;; Defined at:
  2045 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    7
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_SYSTEM_Initialize
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text5
  2074  000CC2                     __ptext5:
  2075                           	opt stack 0
  2076  000CC2                     _SPI2_Initialize:
  2077                           	opt stack 22
  2078                           
  2079                           ;spi2.c: 70: SSP2STAT = 0x40;
  2080                           
  2081                           ;incstack = 0
  2082  000CC2  0E40               	movlw	64
  2083  000CC4  6E6D               	movwf	3949,c	;volatile
  2084                           
  2085                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2086  000CC6  0E20               	movlw	32
  2087  000CC8  6E6C               	movwf	3948,c	;volatile
  2088                           
  2089                           ;spi2.c: 76: SSP2ADD = 0x00;
  2090  000CCA  0E00               	movlw	0
  2091  000CCC  6E6E               	movwf	3950,c	;volatile
  2092  000CCE  0012               	return		;funcret
  2093  000CD0                     __end_of_SPI2_Initialize:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           intcon	equ	0xFF2
  2100                           indf0	equ	0xFEF
  2101                           postinc0	equ	0xFEE
  2102                           fsr0h	equ	0xFEA
  2103                           fsr0l	equ	0xFE9
  2104                           wreg	equ	0xFE8
  2105                           indf2	equ	0xFDF
  2106                           postdec2	equ	0xFDD
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _PIN_MANAGER_Initialize *****************
  2112 ;; Defined at:
  2113 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    8
  2134 ;; This function calls:
  2135 ;;		_IOCB4_SetInterruptHandler
  2136 ;; This function is called by:
  2137 ;;		_SYSTEM_Initialize
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text6
  2142  000950                     __ptext6:
  2143                           	opt stack 0
  2144  000950                     _PIN_MANAGER_Initialize:
  2145                           	opt stack 21
  2146                           
  2147                           ;pin_manager.c: 62: LATE = 0x00;
  2148                           
  2149                           ;incstack = 0
  2150  000950  0E00               	movlw	0
  2151  000952  6E8D               	movwf	3981,c	;volatile
  2152                           
  2153                           ;pin_manager.c: 63: LATD = 0x00;
  2154  000954  0E00               	movlw	0
  2155  000956  6E8C               	movwf	3980,c	;volatile
  2156                           
  2157                           ;pin_manager.c: 64: LATA = 0x00;
  2158  000958  0E00               	movlw	0
  2159  00095A  6E89               	movwf	3977,c	;volatile
  2160                           
  2161                           ;pin_manager.c: 65: LATB = 0x00;
  2162  00095C  0E00               	movlw	0
  2163  00095E  6E8A               	movwf	3978,c	;volatile
  2164                           
  2165                           ;pin_manager.c: 66: LATC = 0x00;
  2166  000960  0E00               	movlw	0
  2167  000962  6E8B               	movwf	3979,c	;volatile
  2168                           
  2169                           ;pin_manager.c: 71: TRISE = 0x07;
  2170  000964  0E07               	movlw	7
  2171  000966  6E96               	movwf	3990,c	;volatile
  2172                           
  2173                           ;pin_manager.c: 72: TRISA = 0xFF;
  2174  000968  6892               	setf	3986,c	;volatile
  2175                           
  2176                           ;pin_manager.c: 73: TRISB = 0xFF;
  2177  00096A  6893               	setf	3987,c	;volatile
  2178                           
  2179                           ;pin_manager.c: 74: TRISC = 0xBE;
  2180  00096C  0EBE               	movlw	190
  2181  00096E  6E94               	movwf	3988,c	;volatile
  2182                           
  2183                           ;pin_manager.c: 75: TRISD = 0xE6;
  2184  000970  0EE6               	movlw	230
  2185  000972  6E95               	movwf	3989,c	;volatile
  2186                           
  2187                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2188  000974  0EE4               	movlw	228
  2189  000976  010F               	movlb	15	; () banked
  2190  000978  6F3B               	movwf	59,b	;volatile
  2191                           
  2192                           ;pin_manager.c: 81: ANSELC = 0x38;
  2193  00097A  0E38               	movlw	56
  2194  00097C  6F3A               	movwf	58,b	;volatile
  2195                           
  2196                           ;pin_manager.c: 82: ANSELB = 0x28;
  2197  00097E  0E28               	movlw	40
  2198  000980  6F39               	movwf	57,b	;volatile
  2199                           
  2200                           ;pin_manager.c: 83: ANSELE = 0x07;
  2201  000982  0E07               	movlw	7
  2202  000984  6F3C               	movwf	60,b	;volatile
  2203                           
  2204                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2205  000986  0E2F               	movlw	47
  2206  000988  6F38               	movwf	56,b	;volatile
  2207                           
  2208                           ;pin_manager.c: 89: WPUB = 0x00;
  2209  00098A  0E00               	movlw	0
  2210  00098C  6E61               	movwf	3937,c	;volatile
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2214  00098E  8EF1               	bsf	intcon2,7,c	;volatile
  2215                           
  2216                           ; BSR set to: 15
  2217                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2218  000990  8862               	bsf	3938,4,c	;volatile
  2219                           
  2220                           ; BSR set to: 15
  2221                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2222  000992  0E8E               	movlw	low _IOCB4_DefaultInterruptHandler
  2223  000994  0100               	movlb	0	; () banked
  2224  000996  6FD6               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2225  000998  0E0D               	movlw	high _IOCB4_DefaultInterruptHandler
  2226  00099A  6FD7               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2227  00099C  EC7A  F006         	call	_IOCB4_SetInterruptHandler	;wreg free
  2228                           
  2229                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2230  0009A0  86F2               	bsf	intcon,3,c	;volatile
  2231  0009A2  0012               	return		;funcret
  2232  0009A4                     __end_of_PIN_MANAGER_Initialize:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           indf0	equ	0xFEF
  2241                           postinc0	equ	0xFEE
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           indf2	equ	0xFDF
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _OSCILLATOR_Initialize *****************
  2252 ;; Defined at:
  2253 ;;		line 66 in file "mcc_generated_files/mcc.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    7
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_SYSTEM_Initialize
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text7
  2282  000CD0                     __ptext7:
  2283                           	opt stack 0
  2284  000CD0                     _OSCILLATOR_Initialize:
  2285                           	opt stack 22
  2286                           
  2287                           ;mcc.c: 69: OSCCON = 0x70;
  2288                           
  2289                           ;incstack = 0
  2290  000CD0  0E70               	movlw	112
  2291  000CD2  6ED3               	movwf	4051,c	;volatile
  2292                           
  2293                           ;mcc.c: 71: OSCCON2 = 0x04;
  2294  000CD4  0E04               	movlw	4
  2295  000CD6  6ED2               	movwf	4050,c	;volatile
  2296                           
  2297                           ;mcc.c: 73: OSCTUNE = 0x00;
  2298  000CD8  0E00               	movlw	0
  2299  000CDA  6E9B               	movwf	3995,c	;volatile
  2300  000CDC  0012               	return		;funcret
  2301  000CDE                     __end_of_OSCILLATOR_Initialize:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           intcon	equ	0xFF2
  2308                           intcon2	equ	0xFF1
  2309                           indf0	equ	0xFEF
  2310                           postinc0	equ	0xFEE
  2311                           fsr0h	equ	0xFEA
  2312                           fsr0l	equ	0xFE9
  2313                           wreg	equ	0xFE8
  2314                           indf2	equ	0xFDF
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _LORAWAN_PlatformInit *****************
  2321 ;; Defined at:
  2322 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    9
  2343 ;; This function calls:
  2344 ;;		_DIO0_ISR_Lora_Init
  2345 ;;		_DIO1_ISR_Lora_Init
  2346 ;;		_DIO2_ISR_Lora_Init
  2347 ;;		_DIO3_ISR_Lora_Init
  2348 ;;		_DIO4_ISR_Lora_Init
  2349 ;;		_DIO5_ISR_Lora_Init
  2350 ;;		_SystemTimerInit
  2351 ;;		_TMR_ISR_Lora_Init
  2352 ;; This function is called by:
  2353 ;;		_SYSTEM_Initialize
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358  000B42                     __ptext8:
  2359                           	opt stack 0
  2360  000B42                     _LORAWAN_PlatformInit:
  2361                           	opt stack 20
  2362                           
  2363                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2364                           
  2365                           ;incstack = 0
  2366  000B42  EC41  F006         	call	_TMR_ISR_Lora_Init	;wreg free
  2367                           
  2368                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2369  000B46  EC59  F006         	call	_DIO0_ISR_Lora_Init	;wreg free
  2370                           
  2371                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2372  000B4A  EC51  F006         	call	_DIO1_ISR_Lora_Init	;wreg free
  2373                           
  2374                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2375  000B4E  EC49  F006         	call	_DIO2_ISR_Lora_Init	;wreg free
  2376                           
  2377                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2378  000B52  ECC5  F006         	call	_DIO3_ISR_Lora_Init	;wreg free
  2379                           
  2380                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2381  000B56  ECC4  F006         	call	_DIO4_ISR_Lora_Init	;wreg free
  2382                           
  2383                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2384  000B5A  ECC3  F006         	call	_DIO5_ISR_Lora_Init	;wreg free
  2385                           
  2386                           ;lorawan_init.c: 82: SystemTimerInit();
  2387  000B5E  ECAF  F006         	call	_SystemTimerInit	;wreg free
  2388  000B62  0012               	return		;funcret
  2389  000B64                     __end_of_LORAWAN_PlatformInit:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           intcon	equ	0xFF2
  2396                           intcon2	equ	0xFF1
  2397                           indf0	equ	0xFEF
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           indf2	equ	0xFDF
  2403                           postdec2	equ	0xFDD
  2404                           fsr2h	equ	0xFDA
  2405                           fsr2l	equ	0xFD9
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _TMR_ISR_Lora_Init *****************
  2409 ;; Defined at:
  2410 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    8
  2431 ;; This function calls:
  2432 ;;		_TMR1_SetInterruptHandler
  2433 ;; This function is called by:
  2434 ;;		_LORAWAN_PlatformInit
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text9
  2439  000C82                     __ptext9:
  2440                           	opt stack 0
  2441  000C82                     _TMR_ISR_Lora_Init:
  2442                           	opt stack 20
  2443                           
  2444                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2445                           
  2446                           ;incstack = 0
  2447  000C82  0EF4               	movlw	low _TMR_ISR_lora
  2448  000C84  0100               	movlb	0	; () banked
  2449  000C86  6FD6               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2450  000C88  0E08               	movlw	high _TMR_ISR_lora
  2451  000C8A  6FD7               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2452  000C8C  EC75  F006         	call	_TMR1_SetInterruptHandler	;wreg free
  2453  000C90  0012               	return		;funcret
  2454  000C92                     __end_of_TMR_ISR_Lora_Init:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           intcon	equ	0xFF2
  2461                           intcon2	equ	0xFF1
  2462                           indf0	equ	0xFEF
  2463                           postinc0	equ	0xFEE
  2464                           fsr0h	equ	0xFEA
  2465                           fsr0l	equ	0xFE9
  2466                           wreg	equ	0xFE8
  2467                           indf2	equ	0xFDF
  2468                           postdec2	equ	0xFDD
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _TMR1_SetInterruptHandler *****************
  2474 ;; Defined at:
  2475 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2478 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    7
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_TMR_ISR_Lora_Init
  2501 ;;		_TMR1_Initialize
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text10
  2506  000CEA                     __ptext10:
  2507                           	opt stack 0
  2508  000CEA                     _TMR1_SetInterruptHandler:
  2509                           	opt stack 21
  2510                           
  2511                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2512                           
  2513                           ;incstack = 0
  2514  000CEA  C0D6  F0E8         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2515  000CEE  C0D7  F0E9         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2516  000CF2  0012               	return		;funcret
  2517  000CF4                     __end_of_TMR1_SetInterruptHandler:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           intcon	equ	0xFF2
  2524                           intcon2	equ	0xFF1
  2525                           indf0	equ	0xFEF
  2526                           postinc0	equ	0xFEE
  2527                           fsr0h	equ	0xFEA
  2528                           fsr0l	equ	0xFE9
  2529                           wreg	equ	0xFE8
  2530                           indf2	equ	0xFDF
  2531                           postdec2	equ	0xFDD
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _SystemTimerInit *****************
  2537 ;; Defined at:
  2538 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    7
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_LORAWAN_PlatformInit
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text11
  2567  000D5E                     __ptext11:
  2568                           	opt stack 0
  2569  000D5E                     _SystemTimerInit:
  2570                           	opt stack 21
  2571                           
  2572                           ;sw_timer.c: 137: allocatedTimers = 0;
  2573                           
  2574                           ;incstack = 0
  2575  000D5E  0E00               	movlw	0
  2576  000D60  6E4A               	movwf	_allocatedTimers,c	;volatile
  2577  000D62  0012               	return		;funcret
  2578  000D64                     __end_of_SystemTimerInit:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           indf0	equ	0xFEF
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           indf2	equ	0xFDF
  2592                           postdec2	equ	0xFDD
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2598 ;; Defined at:
  2599 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		None
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    7
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_LORAWAN_PlatformInit
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628  000D86                     __ptext12:
  2629                           	opt stack 0
  2630  000D86                     _DIO5_ISR_Lora_Init:
  2631                           	opt stack 21
  2632                           
  2633                           ;incstack = 0
  2634  000D86  0012               	return		;funcret
  2635  000D88                     __end_of_DIO5_ISR_Lora_Init:
  2636                           	opt stack 0
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           intcon	equ	0xFF2
  2642                           intcon2	equ	0xFF1
  2643                           indf0	equ	0xFEF
  2644                           postinc0	equ	0xFEE
  2645                           fsr0h	equ	0xFEA
  2646                           fsr0l	equ	0xFE9
  2647                           wreg	equ	0xFE8
  2648                           indf2	equ	0xFDF
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2655 ;; Defined at:
  2656 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    7
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_LORAWAN_PlatformInit
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text13
  2685  000D88                     __ptext13:
  2686                           	opt stack 0
  2687  000D88                     _DIO4_ISR_Lora_Init:
  2688                           	opt stack 21
  2689                           
  2690                           ;incstack = 0
  2691  000D88  0012               	return		;funcret
  2692  000D8A                     __end_of_DIO4_ISR_Lora_Init:
  2693                           	opt stack 0
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           intcon	equ	0xFF2
  2699                           intcon2	equ	0xFF1
  2700                           indf0	equ	0xFEF
  2701                           postinc0	equ	0xFEE
  2702                           fsr0h	equ	0xFEA
  2703                           fsr0l	equ	0xFE9
  2704                           wreg	equ	0xFE8
  2705                           indf2	equ	0xFDF
  2706                           postdec2	equ	0xFDD
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2712 ;; Defined at:
  2713 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		None
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    7
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_LORAWAN_PlatformInit
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text14
  2742  000D8A                     __ptext14:
  2743                           	opt stack 0
  2744  000D8A                     _DIO3_ISR_Lora_Init:
  2745                           	opt stack 21
  2746                           
  2747                           ;incstack = 0
  2748  000D8A  0012               	return		;funcret
  2749  000D8C                     __end_of_DIO3_ISR_Lora_Init:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           intcon	equ	0xFF2
  2756                           intcon2	equ	0xFF1
  2757                           indf0	equ	0xFEF
  2758                           postinc0	equ	0xFEE
  2759                           fsr0h	equ	0xFEA
  2760                           fsr0l	equ	0xFE9
  2761                           wreg	equ	0xFE8
  2762                           indf2	equ	0xFDF
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2769 ;; Defined at:
  2770 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    8
  2791 ;; This function calls:
  2792 ;;		_IOCB4_SetInterruptHandler
  2793 ;; This function is called by:
  2794 ;;		_LORAWAN_PlatformInit
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text15
  2799  000C92                     __ptext15:
  2800                           	opt stack 0
  2801  000C92                     _DIO2_ISR_Lora_Init:
  2802                           	opt stack 20
  2803                           
  2804                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2805                           
  2806                           ;incstack = 0
  2807  000C92  0E64               	movlw	low _DIO2_ISR_Lora
  2808  000C94  0100               	movlb	0	; () banked
  2809  000C96  6FD6               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2810  000C98  0E0D               	movlw	high _DIO2_ISR_Lora
  2811  000C9A  6FD7               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2812  000C9C  EC7A  F006         	call	_IOCB4_SetInterruptHandler	;wreg free
  2813  000CA0  0012               	return		;funcret
  2814  000CA2                     __end_of_DIO2_ISR_Lora_Init:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           intcon	equ	0xFF2
  2821                           intcon2	equ	0xFF1
  2822                           indf0	equ	0xFEF
  2823                           postinc0	equ	0xFEE
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           indf2	equ	0xFDF
  2828                           postdec2	equ	0xFDD
  2829                           fsr2h	equ	0xFDA
  2830                           fsr2l	equ	0xFD9
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2834 ;; Defined at:
  2835 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2838 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    7
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_DIO2_ISR_Lora_Init
  2861 ;;		_PIN_MANAGER_Initialize
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text16
  2866  000CF4                     __ptext16:
  2867                           	opt stack 0
  2868  000CF4                     _IOCB4_SetInterruptHandler:
  2869                           	opt stack 21
  2870                           
  2871                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  2872                           
  2873                           ;incstack = 0
  2874  000CF4  C0D6  F0EC         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2875  000CF8  C0D7  F0ED         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2876  000CFC  0012               	return		;funcret
  2877  000CFE                     __end_of_IOCB4_SetInterruptHandler:
  2878                           	opt stack 0
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           intcon	equ	0xFF2
  2884                           intcon2	equ	0xFF1
  2885                           indf0	equ	0xFEF
  2886                           postinc0	equ	0xFEE
  2887                           fsr0h	equ	0xFEA
  2888                           fsr0l	equ	0xFE9
  2889                           wreg	equ	0xFE8
  2890                           indf2	equ	0xFDF
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _DIO1_ISR_Lora_Init *****************
  2897 ;; Defined at:
  2898 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    8
  2919 ;; This function calls:
  2920 ;;		_INT2_SetInterruptHandler
  2921 ;; This function is called by:
  2922 ;;		_LORAWAN_PlatformInit
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text17
  2927  000CA2                     __ptext17:
  2928                           	opt stack 0
  2929  000CA2                     _DIO1_ISR_Lora_Init:
  2930                           	opt stack 20
  2931                           
  2932                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  2933                           
  2934                           ;incstack = 0
  2935  000CA2  0E6A               	movlw	low _DIO1_ISR_Lora
  2936  000CA4  0100               	movlb	0	; () banked
  2937  000CA6  6FD6               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2938  000CA8  0E0D               	movlw	high _DIO1_ISR_Lora
  2939  000CAA  6FD7               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2940  000CAC  EC7F  F006         	call	_INT2_SetInterruptHandler	;wreg free
  2941  000CB0  0012               	return		;funcret
  2942  000CB2                     __end_of_DIO1_ISR_Lora_Init:
  2943                           	opt stack 0
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           intcon	equ	0xFF2
  2949                           intcon2	equ	0xFF1
  2950                           indf0	equ	0xFEF
  2951                           postinc0	equ	0xFEE
  2952                           fsr0h	equ	0xFEA
  2953                           fsr0l	equ	0xFE9
  2954                           wreg	equ	0xFE8
  2955                           indf2	equ	0xFDF
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _DIO0_ISR_Lora_Init *****************
  2962 ;; Defined at:
  2963 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    8
  2984 ;; This function calls:
  2985 ;;		_INT1_SetInterruptHandler
  2986 ;; This function is called by:
  2987 ;;		_LORAWAN_PlatformInit
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text18
  2992  000CB2                     __ptext18:
  2993                           	opt stack 0
  2994  000CB2                     _DIO0_ISR_Lora_Init:
  2995                           	opt stack 20
  2996                           
  2997                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  2998                           
  2999                           ;incstack = 0
  3000  000CB2  0E70               	movlw	low _DIO0_ISR_Lora
  3001  000CB4  0100               	movlb	0	; () banked
  3002  000CB6  6FD6               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3003  000CB8  0E0D               	movlw	high _DIO0_ISR_Lora
  3004  000CBA  6FD7               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3005  000CBC  EC84  F006         	call	_INT1_SetInterruptHandler	;wreg free
  3006  000CC0  0012               	return		;funcret
  3007  000CC2                     __end_of_DIO0_ISR_Lora_Init:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           intcon	equ	0xFF2
  3014                           intcon2	equ	0xFF1
  3015                           indf0	equ	0xFEF
  3016                           postinc0	equ	0xFEE
  3017                           fsr0h	equ	0xFEA
  3018                           fsr0l	equ	0xFE9
  3019                           wreg	equ	0xFE8
  3020                           indf2	equ	0xFDF
  3021                           postdec2	equ	0xFDD
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _INTERRUPT_Initialize *****************
  3027 ;; Defined at:
  3028 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		None
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    7
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_SYSTEM_Initialize
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text19
  3057  000D82                     __ptext19:
  3058                           	opt stack 0
  3059  000D82                     _INTERRUPT_Initialize:
  3060                           	opt stack 22
  3061                           
  3062                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3063                           
  3064                           ;incstack = 0
  3065  000D82  9ED0               	bcf	4048,7,c	;volatile
  3066  000D84  0012               	return		;funcret
  3067  000D86                     __end_of_INTERRUPT_Initialize:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           intcon	equ	0xFF2
  3074                           intcon2	equ	0xFF1
  3075                           indf0	equ	0xFEF
  3076                           postinc0	equ	0xFEE
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           indf2	equ	0xFDF
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _EXT_INT_Initialize *****************
  3087 ;; Defined at:
  3088 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    8
  3109 ;; This function calls:
  3110 ;;		_INT1_SetInterruptHandler
  3111 ;;		_INT2_SetInterruptHandler
  3112 ;; This function is called by:
  3113 ;;		_SYSTEM_Initialize
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text20
  3118  000ACC                     __ptext20:
  3119                           	opt stack 0
  3120  000ACC                     _EXT_INT_Initialize:
  3121                           	opt stack 21
  3122                           
  3123                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3124                           
  3125                           ;incstack = 0
  3126  000ACC  90F0               	bcf	intcon3,0,c	;volatile
  3127                           
  3128                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3129  000ACE  8AF1               	bsf	intcon2,5,c	;volatile
  3130                           
  3131                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3132  000AD0  0E92               	movlw	low _INT1_DefaultInterruptHandler
  3133  000AD2  0100               	movlb	0	; () banked
  3134  000AD4  6FD6               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3135  000AD6  0E0D               	movlw	high _INT1_DefaultInterruptHandler
  3136  000AD8  6FD7               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3137  000ADA  EC84  F006         	call	_INT1_SetInterruptHandler	;wreg free
  3138                           
  3139                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3140  000ADE  86F0               	bsf	intcon3,3,c	;volatile
  3141                           
  3142                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3143  000AE0  92F0               	bcf	intcon3,1,c	;volatile
  3144                           
  3145                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3146  000AE2  88F1               	bsf	intcon2,4,c	;volatile
  3147                           
  3148                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3149  000AE4  0E90               	movlw	low _INT2_DefaultInterruptHandler
  3150  000AE6  0100               	movlb	0	; () banked
  3151  000AE8  6FD6               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3152  000AEA  0E0D               	movlw	high _INT2_DefaultInterruptHandler
  3153  000AEC  6FD7               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3154  000AEE  EC7F  F006         	call	_INT2_SetInterruptHandler	;wreg free
  3155                           
  3156                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3157  000AF2  88F0               	bsf	intcon3,4,c	;volatile
  3158  000AF4  0012               	return		;funcret
  3159  000AF6                     __end_of_EXT_INT_Initialize:
  3160                           	opt stack 0
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           intcon	equ	0xFF2
  3166                           intcon2	equ	0xFF1
  3167                           intcon3	equ	0xFF0
  3168                           indf0	equ	0xFEF
  3169                           postinc0	equ	0xFEE
  3170                           fsr0h	equ	0xFEA
  3171                           fsr0l	equ	0xFE9
  3172                           wreg	equ	0xFE8
  3173                           indf2	equ	0xFDF
  3174                           postdec2	equ	0xFDD
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _INT2_SetInterruptHandler *****************
  3180 ;; Defined at:
  3181 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3184 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    7
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_DIO1_ISR_Lora_Init
  3207 ;;		_EXT_INT_Initialize
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text21
  3212  000CFE                     __ptext21:
  3213                           	opt stack 0
  3214  000CFE                     _INT2_SetInterruptHandler:
  3215                           	opt stack 20
  3216                           
  3217                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3218                           
  3219                           ;incstack = 0
  3220  000CFE  C0D6  F0EE         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3221  000D02  C0D7  F0EF         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3222  000D06  0012               	return		;funcret
  3223  000D08                     __end_of_INT2_SetInterruptHandler:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           intcon	equ	0xFF2
  3230                           intcon2	equ	0xFF1
  3231                           intcon3	equ	0xFF0
  3232                           indf0	equ	0xFEF
  3233                           postinc0	equ	0xFEE
  3234                           fsr0h	equ	0xFEA
  3235                           fsr0l	equ	0xFE9
  3236                           wreg	equ	0xFE8
  3237                           indf2	equ	0xFDF
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _INT1_SetInterruptHandler *****************
  3244 ;; Defined at:
  3245 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3248 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;Total ram usage:        2 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    7
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_DIO0_ISR_Lora_Init
  3271 ;;		_EXT_INT_Initialize
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text22
  3276  000D08                     __ptext22:
  3277                           	opt stack 0
  3278  000D08                     _INT1_SetInterruptHandler:
  3279                           	opt stack 20
  3280                           
  3281                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3282                           
  3283                           ;incstack = 0
  3284  000D08  C0D6  F0F0         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3285  000D0C  C0D7  F0F1         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3286  000D10  0012               	return		;funcret
  3287  000D12                     __end_of_INT1_SetInterruptHandler:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           intcon	equ	0xFF2
  3294                           intcon2	equ	0xFF1
  3295                           intcon3	equ	0xFF0
  3296                           indf0	equ	0xFEF
  3297                           postinc0	equ	0xFEE
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           indf2	equ	0xFDF
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _EUSART1_Initialize *****************
  3308 ;; Defined at:
  3309 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    8
  3330 ;; This function calls:
  3331 ;;		_EUSART1_SetErrorHandler
  3332 ;;		_EUSART1_SetFramingErrorHandler
  3333 ;;		_EUSART1_SetOverrunErrorHandler
  3334 ;;		_EUSART1_SetRxInterruptHandler
  3335 ;;		_EUSART1_SetTxInterruptHandler
  3336 ;; This function is called by:
  3337 ;;		_SYSTEM_Initialize
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text23
  3342  0007A2                     __ptext23:
  3343                           	opt stack 0
  3344  0007A2                     _EUSART1_Initialize:
  3345                           	opt stack 21
  3346                           
  3347                           ;eusart1.c: 114: PIE1bits.RC1IE = 0;
  3348                           
  3349                           ;incstack = 0
  3350  0007A2  9A9D               	bcf	3997,5,c	;volatile
  3351                           
  3352                           ;eusart1.c: 115: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3353  0007A4  0ED4               	movlw	low _EUSART1_Receive_ISR
  3354  0007A6  0100               	movlb	0	; () banked
  3355  0007A8  6FD6               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  3356  0007AA  0E00               	movlw	high _EUSART1_Receive_ISR
  3357  0007AC  6FD7               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3358  0007AE  EC8E  F006         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3359                           
  3360                           ;eusart1.c: 116: PIE1bits.TX1IE = 0;
  3361  0007B2  989D               	bcf	3997,4,c	;volatile
  3362                           
  3363                           ;eusart1.c: 117: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3364  0007B4  0E70               	movlw	low _EUSART1_Transmit_ISR
  3365  0007B6  0100               	movlb	0	; () banked
  3366  0007B8  6FD6               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  3367  0007BA  0E0A               	movlw	high _EUSART1_Transmit_ISR
  3368  0007BC  6FD7               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3369  0007BE  EC89  F006         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3370                           
  3371                           ;eusart1.c: 121: BAUDCON1 = 0x08;
  3372  0007C2  0E08               	movlw	8
  3373  0007C4  6EB8               	movwf	4024,c	;volatile
  3374                           
  3375                           ;eusart1.c: 124: RCSTA1 = 0x90;
  3376  0007C6  0E90               	movlw	144
  3377  0007C8  6EAB               	movwf	4011,c	;volatile
  3378                           
  3379                           ;eusart1.c: 127: TXSTA1 = 0x24;
  3380  0007CA  0E24               	movlw	36
  3381  0007CC  6EAC               	movwf	4012,c	;volatile
  3382                           
  3383                           ;eusart1.c: 130: SPBRG1 = 0x14;
  3384  0007CE  0E14               	movlw	20
  3385  0007D0  6EAF               	movwf	4015,c	;volatile
  3386                           
  3387                           ;eusart1.c: 133: SPBRGH1 = 0x34;
  3388  0007D2  0E34               	movlw	52
  3389  0007D4  6EB0               	movwf	4016,c	;volatile
  3390                           
  3391                           ;eusart1.c: 136: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3392  0007D6  0E94               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3393  0007D8  0100               	movlb	0	; () banked
  3394  0007DA  6FD6               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3395  0007DC  0E0D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3396  0007DE  6FD7               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3397  0007E0  EC98  F006         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3398                           
  3399                           ;eusart1.c: 137: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3400  0007E4  0E76               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3401  0007E6  0100               	movlb	0	; () banked
  3402  0007E8  6FD6               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3403  0007EA  0E0D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3404  0007EC  6FD7               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3405  0007EE  EC93  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3406                           
  3407                           ;eusart1.c: 138: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3408  0007F2  0E7C               	movlw	low _EUSART1_DefaultErrorHandler
  3409  0007F4  0100               	movlb	0	; () banked
  3410  0007F6  6FD6               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3411  0007F8  0E0D               	movlw	high _EUSART1_DefaultErrorHandler
  3412  0007FA  6FD7               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3413  0007FC  EC9D  F006         	call	_EUSART1_SetErrorHandler	;wreg free
  3414                           
  3415                           ;eusart1.c: 140: eusart1RxLastError.status = 0;
  3416  000800  0E00               	movlw	0
  3417  000802  0100               	movlb	0	; () banked
  3418  000804  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3419                           
  3420                           ;eusart1.c: 143: eusart1TxHead = 0;
  3421  000806  0E00               	movlw	0
  3422  000808  6F9A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3423                           
  3424                           ;eusart1.c: 144: eusart1TxTail = 0;
  3425  00080A  0E00               	movlw	0
  3426  00080C  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3427                           
  3428                           ;eusart1.c: 145: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3429  00080E  0E01               	movlw	1
  3430  000810  6FF2               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3431                           
  3432                           ;eusart1.c: 147: eusart1RxHead = 0;
  3433  000812  0E00               	movlw	0
  3434  000814  6E48               	movwf	_eusart1RxHead,c	;volatile
  3435                           
  3436                           ;eusart1.c: 148: eusart1RxTail = 0;
  3437  000816  0E00               	movlw	0
  3438  000818  6E47               	movwf	_eusart1RxTail,c	;volatile
  3439                           
  3440                           ;eusart1.c: 149: eusart1RxCount = 0;
  3441  00081A  0E00               	movlw	0
  3442  00081C  6F96               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;eusart1.c: 152: PIE1bits.RC1IE = 1;
  3446  00081E  8A9D               	bsf	3997,5,c	;volatile
  3447                           
  3448                           ; BSR set to: 0
  3449  000820  0012               	return		;funcret
  3450  000822                     __end_of_EUSART1_Initialize:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           intcon	equ	0xFF2
  3457                           intcon2	equ	0xFF1
  3458                           intcon3	equ	0xFF0
  3459                           indf0	equ	0xFEF
  3460                           postinc0	equ	0xFEE
  3461                           fsr0h	equ	0xFEA
  3462                           fsr0l	equ	0xFE9
  3463                           wreg	equ	0xFE8
  3464                           indf2	equ	0xFDF
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3471 ;; Defined at:
  3472 ;;		line 327 in file "mcc_generated_files/eusart1.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3475 ;;		 -> EUSART1_Transmit_ISR(1), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    7
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_EUSART1_Initialize
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text24
  3502  000D12                     __ptext24:
  3503                           	opt stack 0
  3504  000D12                     _EUSART1_SetTxInterruptHandler:
  3505                           	opt stack 21
  3506                           
  3507                           ;eusart1.c: 328: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;incstack = 0
  3511  000D12  C0D6  F1FD         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3512  000D16  C0D7  F1FE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3513  000D1A  0012               	return		;funcret
  3514  000D1C                     __end_of_EUSART1_SetTxInterruptHandler:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           intcon	equ	0xFF2
  3521                           intcon2	equ	0xFF1
  3522                           intcon3	equ	0xFF0
  3523                           indf0	equ	0xFEF
  3524                           postinc0	equ	0xFEE
  3525                           fsr0h	equ	0xFEA
  3526                           fsr0l	equ	0xFE9
  3527                           wreg	equ	0xFE8
  3528                           indf2	equ	0xFDF
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3535 ;; Defined at:
  3536 ;;		line 331 in file "mcc_generated_files/eusart1.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3539 ;;		 -> EUSART1_Receive_ISR(1), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    7
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_EUSART1_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text25
  3566  000D1C                     __ptext25:
  3567                           	opt stack 0
  3568  000D1C                     _EUSART1_SetRxInterruptHandler:
  3569                           	opt stack 21
  3570                           
  3571                           ;eusart1.c: 332: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3572                           
  3573                           ;incstack = 0
  3574  000D1C  C0D6  F1FB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3575  000D20  C0D7  F1FC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3576  000D24  0012               	return		;funcret
  3577  000D26                     __end_of_EUSART1_SetRxInterruptHandler:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           intcon	equ	0xFF2
  3584                           intcon2	equ	0xFF1
  3585                           intcon3	equ	0xFF0
  3586                           indf0	equ	0xFEF
  3587                           postinc0	equ	0xFEE
  3588                           fsr0h	equ	0xFEA
  3589                           fsr0l	equ	0xFE9
  3590                           wreg	equ	0xFE8
  3591                           indf2	equ	0xFDF
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3598 ;; Defined at:
  3599 ;;		line 319 in file "mcc_generated_files/eusart1.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3602 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        2 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_EUSART1_Initialize
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text26
  3629  000D26                     __ptext26:
  3630                           	opt stack 0
  3631  000D26                     _EUSART1_SetOverrunErrorHandler:
  3632                           	opt stack 21
  3633                           
  3634                           ;eusart1.c: 320: EUSART1_OverrunErrorHandler = interruptHandler;
  3635                           
  3636                           ;incstack = 0
  3637  000D26  C0D6  F1F7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3638  000D2A  C0D7  F1F8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3639  000D2E  0012               	return		;funcret
  3640  000D30                     __end_of_EUSART1_SetOverrunErrorHandler:
  3641                           	opt stack 0
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           intcon	equ	0xFF2
  3647                           intcon2	equ	0xFF1
  3648                           intcon3	equ	0xFF0
  3649                           indf0	equ	0xFEF
  3650                           postinc0	equ	0xFEE
  3651                           fsr0h	equ	0xFEA
  3652                           fsr0l	equ	0xFE9
  3653                           wreg	equ	0xFE8
  3654                           indf2	equ	0xFDF
  3655                           postdec2	equ	0xFDD
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3661 ;; Defined at:
  3662 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3665 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        2 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    7
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_EUSART1_Initialize
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text27
  3692  000D30                     __ptext27:
  3693                           	opt stack 0
  3694  000D30                     _EUSART1_SetFramingErrorHandler:
  3695                           	opt stack 21
  3696                           
  3697                           ;eusart1.c: 316: EUSART1_FramingErrorHandler = interruptHandler;
  3698                           
  3699                           ;incstack = 0
  3700  000D30  C0D6  F1F9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3701  000D34  C0D7  F1FA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3702  000D38  0012               	return		;funcret
  3703  000D3A                     __end_of_EUSART1_SetFramingErrorHandler:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           intcon	equ	0xFF2
  3710                           intcon2	equ	0xFF1
  3711                           intcon3	equ	0xFF0
  3712                           indf0	equ	0xFEF
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           indf2	equ	0xFDF
  3718                           postdec2	equ	0xFDD
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _EUSART1_SetErrorHandler *****************
  3724 ;; Defined at:
  3725 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3728 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    7
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_EUSART1_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text28
  3755  000D3A                     __ptext28:
  3756                           	opt stack 0
  3757  000D3A                     _EUSART1_SetErrorHandler:
  3758                           	opt stack 21
  3759                           
  3760                           ;eusart1.c: 324: EUSART1_ErrorHandler = interruptHandler;
  3761                           
  3762                           ;incstack = 0
  3763  000D3A  C0D6  F1F5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3764  000D3E  C0D7  F1F6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3765  000D42  0012               	return		;funcret
  3766  000D44                     __end_of_EUSART1_SetErrorHandler:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           intcon	equ	0xFF2
  3773                           intcon2	equ	0xFF1
  3774                           intcon3	equ	0xFF0
  3775                           indf0	equ	0xFEF
  3776                           postinc0	equ	0xFEE
  3777                           fsr0h	equ	0xFEA
  3778                           fsr0l	equ	0xFE9
  3779                           wreg	equ	0xFE8
  3780                           indf2	equ	0xFDF
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _EUSART1_Write *****************
  3787 ;; Defined at:
  3788 ;;		line 196 in file "mcc_generated_files/eusart1.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  txData          1    wreg     unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  txData          1    0[BANK0 ] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;Total ram usage:        1 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    7
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text29
  3817  000A32                     __ptext29:
  3818                           	opt stack 0
  3819  000A32                     _EUSART1_Write:
  3820                           	opt stack 23
  3821                           
  3822                           ;incstack = 0
  3823                           ;EUSART1_Write@txData stored from wreg
  3824  000A32  0100               	movlb	0	; () banked
  3825  000A34  6FD6               	movwf	EUSART1_Write@txData& (0+255),b
  3826  000A36                     
  3827                           ;eusart1.c: 199: {
  3828                           
  3829                           ;eusart1.c: 198: while(0 == eusart1TxBufferRemaining)
  3830  000A36  0100               	movlb	0	; () banked
  3831  000A38  51F2               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  3832  000A3A  B4D8               	btfsc	status,2,c
  3833  000A3C  D7FC               	goto	l10574
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;eusart1.c: 200: }
  3837                           ;eusart1.c: 202: if(0 == PIE1bits.TX1IE)
  3838  000A3E  B89D               	btfsc	3997,4,c	;volatile
  3839  000A40  D003               	goto	l2540
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;eusart1.c: 203: {
  3843                           ;eusart1.c: 204: TXREG1 = txData;
  3844  000A42  C0D6  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3845                           
  3846                           ;eusart1.c: 205: }
  3847  000A46  D012               	goto	l2541
  3848  000A48                     l2540:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;eusart1.c: 206: else
  3852                           ;eusart1.c: 207: {
  3853                           ;eusart1.c: 208: PIE1bits.TX1IE = 0;
  3854  000A48  989D               	bcf	3997,4,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;eusart1.c: 209: eusart1TxBuffer[eusart1TxHead++] = txData;
  3858  000A4A  519A               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3859  000A4C  0D01               	mullw	1
  3860  000A4E  0E98               	movlw	low _eusart1TxBuffer
  3861  000A50  24F3               	addwf	prodl,w,c
  3862  000A52  6ED9               	movwf	fsr2l,c
  3863  000A54  0E00               	movlw	high _eusart1TxBuffer
  3864  000A56  20F4               	addwfc	prodh,w,c
  3865  000A58  6EDA               	movwf	fsr2h,c
  3866  000A5A  C0D6  FFDF         	movff	EUSART1_Write@txData,indf2
  3867                           
  3868                           ; BSR set to: 0
  3869  000A5E  2B9A               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;eusart1.c: 210: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  3873  000A60  519A               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  3874  000A62  B4D8               	btfsc	status,2,c
  3875  000A64  D002               	goto	l2542
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;eusart1.c: 211: {
  3879                           ;eusart1.c: 212: eusart1TxHead = 0;
  3880  000A66  0E00               	movlw	0
  3881  000A68  6F9A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3882  000A6A                     l2542:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;eusart1.c: 213: }
  3886                           ;eusart1.c: 214: eusart1TxBufferRemaining--;
  3887                           
  3888                           ; BSR set to: 0
  3889  000A6A  07F2               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3890  000A6C                     l2541:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;eusart1.c: 215: }
  3894                           ;eusart1.c: 216: PIE1bits.TX1IE = 1;
  3895                           
  3896                           ; BSR set to: 0
  3897  000A6C  889D               	bsf	3997,4,c	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900  000A6E  0012               	return		;funcret
  3901  000A70                     __end_of_EUSART1_Write:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           intcon2	equ	0xFF1
  3911                           intcon3	equ	0xFF0
  3912                           indf0	equ	0xFEF
  3913                           postinc0	equ	0xFEE
  3914                           fsr0h	equ	0xFEA
  3915                           fsr0l	equ	0xFE9
  3916                           wreg	equ	0xFE8
  3917                           indf2	equ	0xFDF
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function _INTERRUPT_InterruptManager *****************
  3924 ;; Defined at:
  3925 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;Total ram usage:       10 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    6
  3946 ;; This function calls:
  3947 ;;		Absolute function
  3948 ;;		_EUSART1_Receive_ISR
  3949 ;;		_EUSART1_Transmit_ISR
  3950 ;;		_INT1_ISR
  3951 ;;		_INT2_ISR
  3952 ;;		_PIN_MANAGER_IOC
  3953 ;;		_TMR1_ISR
  3954 ;; This function is called by:
  3955 ;;		Interrupt level 2
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	intcode
  3960  000008                     __pintcode:
  3961                           	opt stack 0
  3962  000008                     _INTERRUPT_InterruptManager:
  3963                           	opt stack 20
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  3968  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3969  000010  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3970  000014  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3971  000018  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3972  00001C  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3973  000020  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3974  000024  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3975  000028  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3976  00002C  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3977  000030  EE1E  F0C0         	lfsr	1,___inthi_sp
  3978                           
  3979                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  3980  000034  B6F0               	btfsc	intcon3,3,c	;volatile
  3981  000036  A0F0               	btfss	intcon3,0,c	;volatile
  3982  000038  D003               	goto	i2l2244
  3983                           
  3984                           ;interrupt_manager.c: 62: {
  3985                           ;interrupt_manager.c: 63: INT1_ISR();
  3986  00003A  ECAB  F006         	call	_INT1_ISR	;wreg free
  3987                           
  3988                           ;interrupt_manager.c: 64: }
  3989  00003E  D031               	goto	i2u1266_49
  3990  000040                     i2l2244:
  3991                           
  3992                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  3993  000040  B8F0               	btfsc	intcon3,4,c	;volatile
  3994  000042  A2F0               	btfss	intcon3,1,c	;volatile
  3995  000044  D003               	goto	i2l2246
  3996                           
  3997                           ;interrupt_manager.c: 66: {
  3998                           ;interrupt_manager.c: 67: INT2_ISR();
  3999  000046  ECA7  F006         	call	_INT2_ISR	;wreg free
  4000                           
  4001                           ;interrupt_manager.c: 68: }
  4002  00004A  D02B               	goto	i2u1266_49
  4003  00004C                     i2l2246:
  4004                           
  4005                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  4006  00004C  B6F2               	btfsc	intcon,3,c	;volatile
  4007  00004E  A0F2               	btfss	intcon,0,c	;volatile
  4008  000050  D003               	goto	i2l2248
  4009                           
  4010                           ;interrupt_manager.c: 70: {
  4011                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
  4012  000052  ECA2  F006         	call	_PIN_MANAGER_IOC	;wreg free
  4013                           
  4014                           ;interrupt_manager.c: 72: }
  4015  000056  D025               	goto	i2u1266_49
  4016  000058                     i2l2248:
  4017                           
  4018                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
  4019  000058  ACF2               	btfss	intcon,6,c	;volatile
  4020  00005A  D023               	goto	i2u1266_49
  4021                           
  4022                           ;interrupt_manager.c: 74: {
  4023                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4024  00005C  B09D               	btfsc	3997,0,c	;volatile
  4025  00005E  A09E               	btfss	3998,0,c	;volatile
  4026  000060  D002               	goto	i2l2251
  4027                           
  4028                           ;interrupt_manager.c: 76: {
  4029                           ;interrupt_manager.c: 77: TMR1_ISR();
  4030  000062  EC2F  F006         	call	_TMR1_ISR	;wreg free
  4031  000066                     i2l2251:
  4032                           
  4033                           ;interrupt_manager.c: 78: }
  4034                           ;interrupt_manager.c: 79: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4035  000066  B89D               	btfsc	3997,4,c	;volatile
  4036  000068  A89E               	btfss	3998,4,c	;volatile
  4037  00006A  D00C               	goto	i2u1263_49
  4038                           
  4039                           ;interrupt_manager.c: 80: {
  4040                           ;interrupt_manager.c: 81: EUSART1_TxDefaultInterruptHandler();
  4041  00006C  D801               	call	i2u1263_48
  4042  00006E  D00A               	goto	i2u1263_49
  4043  000070                     i2u1263_48:
  4044  000070  0005               	push	
  4045  000072  6EFA               	movwf	pclath,c
  4046  000074  0101               	movlb	1	; () banked
  4047  000076  51FD               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4048  000078  6EFD               	movwf	tosl,c
  4049  00007A  51FE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4050  00007C  6EFE               	movwf	tosh,c
  4051  00007E  6AFF               	clrf	tosu,c
  4052  000080  50FA               	movf	pclath,w,c
  4053  000082  0012               	return		;indir
  4054  000084                     i2u1263_49:
  4055                           
  4056                           ;interrupt_manager.c: 82: }
  4057                           ;interrupt_manager.c: 83: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4058  000084  BA9D               	btfsc	3997,5,c	;volatile
  4059  000086  AA9E               	btfss	3998,5,c	;volatile
  4060  000088  D00C               	goto	i2u1266_49
  4061                           
  4062                           ;interrupt_manager.c: 84: {
  4063                           ;interrupt_manager.c: 85: EUSART1_RxDefaultInterruptHandler();
  4064  00008A  D801               	call	i2u1266_48
  4065  00008C  D00A               	goto	i2u1266_49
  4066  00008E                     i2u1266_48:
  4067  00008E  0005               	push	
  4068  000090  6EFA               	movwf	pclath,c
  4069  000092  0101               	movlb	1	; () banked
  4070  000094  51FB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4071  000096  6EFD               	movwf	tosl,c
  4072  000098  51FC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4073  00009A  6EFE               	movwf	tosh,c
  4074  00009C  6AFF               	clrf	tosu,c
  4075  00009E  50FA               	movf	pclath,w,c
  4076  0000A0  0012               	return		;indir
  4077  0000A2                     i2u1266_49:
  4078                           
  4079                           ;interrupt_manager.c: 92: else
  4080                           ;interrupt_manager.c: 93: {
  4081                           
  4082                           ;interrupt_manager.c: 90: }
  4083                           ;interrupt_manager.c: 91: }
  4084                           
  4085                           ;interrupt_manager.c: 87: else
  4086                           ;interrupt_manager.c: 88: {
  4087                           
  4088                           ;interrupt_manager.c: 86: }
  4089  0000A2  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4090  0000A6  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4091  0000AA  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4092  0000AE  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4093  0000B2  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4094  0000B6  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4095  0000BA  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4096  0000BE  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4097  0000C2  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4098  0000C6  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4099  0000CA  0011               	retfie		f
  4100  0000CC                     __end_of_INTERRUPT_InterruptManager:
  4101                           	opt stack 0
  4102                           tosu	equ	0xFFF
  4103                           tosh	equ	0xFFE
  4104                           tosl	equ	0xFFD
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           intcon3	equ	0xFF0
  4116                           indf0	equ	0xFEF
  4117                           postinc0	equ	0xFEE
  4118                           fsr0h	equ	0xFEA
  4119                           fsr0l	equ	0xFE9
  4120                           wreg	equ	0xFE8
  4121                           fsr1h	equ	0xFE2
  4122                           fsr1l	equ	0xFE1
  4123                           indf2	equ	0xFDF
  4124                           postdec2	equ	0xFDD
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _TMR1_ISR *****************
  4130 ;; Defined at:
  4131 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    5
  4152 ;; This function calls:
  4153 ;;		_TMR1_CallBack
  4154 ;;		_TMR1_WriteTimer
  4155 ;; This function is called by:
  4156 ;;		_INTERRUPT_InterruptManager
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text31
  4161  000C5E                     __ptext31:
  4162                           	opt stack 0
  4163  000C5E                     _TMR1_ISR:
  4164                           	opt stack 20
  4165                           
  4166                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
  4167                           
  4168                           ;incstack = 0
  4169  000C5E  909E               	bcf	3998,0,c	;volatile
  4170                           
  4171                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
  4172  000C60  C0EA  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  4173  000C64  C0EB  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  4174  000C68  EC21  F006         	call	_TMR1_WriteTimer	;wreg free
  4175                           
  4176                           ;tmr1.c: 167: TMR1_CallBack();
  4177  000C6C  ECC2  F005         	call	_TMR1_CallBack	;wreg free
  4178  000C70  0012               	return		;funcret
  4179  000C72                     __end_of_TMR1_ISR:
  4180                           	opt stack 0
  4181                           tosu	equ	0xFFF
  4182                           tosh	equ	0xFFE
  4183                           tosl	equ	0xFFD
  4184                           pclatu	equ	0xFFB
  4185                           pclath	equ	0xFFA
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           intcon2	equ	0xFF1
  4194                           intcon3	equ	0xFF0
  4195                           indf0	equ	0xFEF
  4196                           postinc0	equ	0xFEE
  4197                           fsr0h	equ	0xFEA
  4198                           fsr0l	equ	0xFE9
  4199                           wreg	equ	0xFE8
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postdec2	equ	0xFDD
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _TMR1_CallBack *****************
  4209 ;; Defined at:
  4210 ;;		line 170 in file "mcc_generated_files/tmr1.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    4
  4231 ;; This function calls:
  4232 ;;		Absolute function
  4233 ;;		_TMR1_DefaultInterruptHandler
  4234 ;;		_TMR_ISR_lora
  4235 ;; This function is called by:
  4236 ;;		_TMR1_ISR
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text32
  4241  000B84                     __ptext32:
  4242                           	opt stack 0
  4243  000B84                     _TMR1_CallBack:
  4244                           	opt stack 20
  4245                           
  4246                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
  4247                           
  4248                           ;incstack = 0
  4249  000B84  0100               	movlb	0	; () banked
  4250  000B86  51E8               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4251  000B88  11E9               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4252  000B8A  B4D8               	btfsc	status,2,c
  4253  000B8C  0012               	return	
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;tmr1.c: 174: {
  4257                           ;tmr1.c: 175: TMR1_InterruptHandler();
  4258  000B8E  D801               	call	i2u902_48
  4259  000B90  0012               	return	
  4260  000B92                     i2u902_48:
  4261  000B92  0005               	push	
  4262  000B94  6EFA               	movwf	pclath,c
  4263  000B96  51E8               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4264  000B98  6EFD               	movwf	tosl,c
  4265  000B9A  51E9               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4266  000B9C  6EFE               	movwf	tosh,c
  4267  000B9E  6AFF               	clrf	tosu,c
  4268  000BA0  50FA               	movf	pclath,w,c
  4269  000BA2  0012               	return		;indir
  4270  000BA4                     __end_of_TMR1_CallBack:
  4271                           	opt stack 0
  4272                           tosu	equ	0xFFF
  4273                           tosh	equ	0xFFE
  4274                           tosl	equ	0xFFD
  4275                           pclatu	equ	0xFFB
  4276                           pclath	equ	0xFFA
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           intcon2	equ	0xFF1
  4285                           intcon3	equ	0xFF0
  4286                           indf0	equ	0xFEF
  4287                           postinc0	equ	0xFEE
  4288                           fsr0h	equ	0xFEA
  4289                           fsr0l	equ	0xFE9
  4290                           wreg	equ	0xFE8
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4300 ;; Defined at:
  4301 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		None
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_TMR1_Initialize
  4325 ;;		_TMR1_CallBack
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text33
  4330  000D8C                     __ptext33:
  4331                           	opt stack 0
  4332  000D8C                     _TMR1_DefaultInterruptHandler:
  4333                           	opt stack 23
  4334                           
  4335                           ;incstack = 0
  4336  000D8C  0012               	return		;funcret
  4337  000D8E                     __end_of_TMR1_DefaultInterruptHandler:
  4338                           	opt stack 0
  4339                           tosu	equ	0xFFF
  4340                           tosh	equ	0xFFE
  4341                           tosl	equ	0xFFD
  4342                           pclatu	equ	0xFFB
  4343                           pclath	equ	0xFFA
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           intcon	equ	0xFF2
  4351                           intcon2	equ	0xFF1
  4352                           intcon3	equ	0xFF0
  4353                           indf0	equ	0xFEF
  4354                           postinc0	equ	0xFEE
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           postdec2	equ	0xFDD
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _TMR_ISR_lora *****************
  4367 ;; Defined at:
  4368 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    3
  4389 ;; This function calls:
  4390 ;;		_SwTimersInterrupt
  4391 ;;		_TMR_SwapTimer
  4392 ;; This function is called by:
  4393 ;;		_TMR_ISR_Lora_Init
  4394 ;;		_TMR1_CallBack
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text34
  4399  0008F4                     __ptext34:
  4400                           	opt stack 0
  4401  0008F4                     _TMR_ISR_lora:
  4402                           	opt stack 20
  4403                           
  4404                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
  4405                           
  4406                           ;incstack = 0
  4407  0008F4  0E01               	movlw	1
  4408  0008F6  0100               	movlb	0	; () banked
  4409  0008F8  6F9C               	movwf	_timerOverflow& (0+255),b	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
  4413  0008FA  ECF1  F002         	call	_SwTimersInterrupt	;wreg free
  4414  0008FE  C021  F0FB         	movff	?_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
  4415  000902  C022  F0FC         	movff	?_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
  4416  000906  C023  F0FD         	movff	?_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
  4417  00090A  C024  F0FE         	movff	?_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
  4418                           
  4419                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
  4420  00090E  0100               	movlb	0	; () banked
  4421  000910  51FE               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
  4422  000912  E11D               	bnz	i2l2171
  4423  000914  05FD               	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
  4424  000916  B0D8               	btfsc	status,0,c
  4425  000918  0012               	return	
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;tmr_lora_addons.c: 66: {
  4429                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
  4430  00091A  C0FB  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
  4431  00091E  C0FC  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
  4432  000922  1E32               	comf	??_TMR_ISR_lora,f,c
  4433  000924  1E33               	comf	??_TMR_ISR_lora+1,f,c
  4434  000926  4A32               	infsnz	??_TMR_ISR_lora,f,c
  4435  000928  2A33               	incf	??_TMR_ISR_lora+1,f,c
  4436  00092A  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
  4437  00092E  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
  4441  000932  C044  F009         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
  4442  000936  C045  F00A         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
  4443  00093A  ECF7  F004         	call	_TMR_SwapTimer	;wreg free
  4444  00093E  C009  F068         	movff	?_TMR_SwapTimer,_ticksAdded	;volatile
  4445  000942  C00A  F069         	movff	?_TMR_SwapTimer+1,_ticksAdded+1	;volatile
  4446  000946  0100               	movlb	0	; () banked
  4447  000948  6B6A               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
  4448  00094A  6B6B               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
  4449  00094C  0012               	return	
  4450  00094E                     i2l2171:
  4451                           
  4452                           ; BSR set to: 0
  4453  00094E  0012               	return		;funcret
  4454  000950                     __end_of_TMR_ISR_lora:
  4455                           	opt stack 0
  4456                           tosu	equ	0xFFF
  4457                           tosh	equ	0xFFE
  4458                           tosl	equ	0xFFD
  4459                           pclatu	equ	0xFFB
  4460                           pclath	equ	0xFFA
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           intcon2	equ	0xFF1
  4469                           intcon3	equ	0xFF0
  4470                           indf0	equ	0xFEF
  4471                           postinc0	equ	0xFEE
  4472                           fsr0h	equ	0xFEA
  4473                           fsr0l	equ	0xFE9
  4474                           wreg	equ	0xFE8
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           indf2	equ	0xFDF
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _TMR_SwapTimer *****************
  4484 ;; Defined at:
  4485 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  timerVal        2    8[COMRAM] unsigned int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    8[COMRAM] unsigned int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:        2 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    1
  4506 ;; This function calls:
  4507 ;;		_TMR1_ReadTimer
  4508 ;;		_TMR1_WriteTimer
  4509 ;; This function is called by:
  4510 ;;		_TMR_ISR_lora
  4511 ;;		_TMR_OverrideRemaining
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text35
  4516  0009EE                     __ptext35:
  4517                           	opt stack 0
  4518  0009EE                     _TMR_SwapTimer:
  4519                           	opt stack 21
  4520                           
  4521                           ;sw_timer.c: 114: static uint16_t oldVal;
  4522                           ;sw_timer.c: 115: static uint16_t retVal;
  4523                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;incstack = 0
  4527  0009EE  ECD2  F005         	call	_TMR1_ReadTimer	;wreg free
  4528  0009F2  C001  F090         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
  4529  0009F6  C002  F091         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
  4530  0009FA                     
  4531                           ;sw_timer.c: 123: ;
  4532  0009FA  ECD2  F005         	call	_TMR1_ReadTimer	;wreg free
  4533  0009FE  0100               	movlb	0	; () banked
  4534  000A00  5190               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
  4535  000A02  1801               	xorwf	?_TMR1_ReadTimer,w,c
  4536  000A04  E104               	bnz	i2l8766
  4537  000A06  5191               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
  4538  000A08  1802               	xorwf	?_TMR1_ReadTimer+1,w,c
  4539  000A0A  B4D8               	btfsc	status,2,c
  4540  000A0C  D7F6               	goto	i2l1535
  4541  000A0E                     i2l8766:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
  4545  000A0E  C009  F001         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
  4546  000A12  C00A  F002         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
  4547  000A16  EC21  F006         	call	_TMR1_WriteTimer	;wreg free
  4548                           
  4549                           ;sw_timer.c: 128: oldVal++;
  4550  000A1A  0100               	movlb	0	; () banked
  4551  000A1C  4B90               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
  4552  000A1E  2B91               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;sw_timer.c: 130: retVal = oldVal;
  4556  000A20  C090  F08E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
  4557  000A24  C091  F08F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;sw_timer.c: 132: return retVal;
  4561  000A28  C08E  F009         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
  4562  000A2C  C08F  F00A         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
  4563  000A30  0012               	return	
  4564  000A32                     __end_of_TMR_SwapTimer:
  4565                           	opt stack 0
  4566                           tosu	equ	0xFFF
  4567                           tosh	equ	0xFFE
  4568                           tosl	equ	0xFFD
  4569                           pclatu	equ	0xFFB
  4570                           pclath	equ	0xFFA
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           intcon2	equ	0xFF1
  4579                           intcon3	equ	0xFF0
  4580                           indf0	equ	0xFEF
  4581                           postinc0	equ	0xFEE
  4582                           fsr0h	equ	0xFEA
  4583                           fsr0l	equ	0xFE9
  4584                           wreg	equ	0xFE8
  4585                           fsr1h	equ	0xFE2
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _TMR1_WriteTimer *****************
  4594 ;; Defined at:
  4595 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  timerVal        2    0[COMRAM] unsigned int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        2 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_TMR_SwapTimer
  4619 ;;		_TMR1_ISR
  4620 ;;		_TMR1_Reload
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text36
  4625  000C42                     __ptext36:
  4626                           	opt stack 0
  4627  000C42                     _TMR1_WriteTimer:
  4628                           	opt stack 24
  4629                           
  4630                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;incstack = 0
  4634  000C42  A4CD               	btfss	4045,2,c	;volatile
  4635  000C44  D007               	goto	i2l2627
  4636                           
  4637                           ;tmr1.c: 124: {
  4638                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
  4639  000C46  90CD               	bcf	4045,0,c	;volatile
  4640                           
  4641                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4642  000C48  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4643  000C4A  6ECF               	movwf	4047,c	;volatile
  4644                           
  4645                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
  4646  000C4C  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4647                           
  4648                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
  4649  000C50  80CD               	bsf	4045,0,c	;volatile
  4650                           
  4651                           ;tmr1.c: 134: }
  4652  000C52  0012               	return	
  4653  000C54                     i2l2627:
  4654                           
  4655                           ;tmr1.c: 135: else
  4656                           ;tmr1.c: 136: {
  4657                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
  4658  000C54  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4659  000C56  6ECF               	movwf	4047,c	;volatile
  4660                           
  4661                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
  4662  000C58  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4663  000C5C  0012               	return	
  4664  000C5E                     __end_of_TMR1_WriteTimer:
  4665                           	opt stack 0
  4666                           tosu	equ	0xFFF
  4667                           tosh	equ	0xFFE
  4668                           tosl	equ	0xFFD
  4669                           pclatu	equ	0xFFB
  4670                           pclath	equ	0xFFA
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           intcon2	equ	0xFF1
  4679                           intcon3	equ	0xFF0
  4680                           indf0	equ	0xFEF
  4681                           postinc0	equ	0xFEE
  4682                           fsr0h	equ	0xFEA
  4683                           fsr0l	equ	0xFE9
  4684                           wreg	equ	0xFE8
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postdec2	equ	0xFDD
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _SwTimersInterrupt *****************
  4694 ;; Defined at:
  4695 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  ticksToNextT    4   44[COMRAM] unsigned long 
  4700 ;;  timeElapsed     4   40[COMRAM] unsigned long 
  4701 ;;  i               1   48[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4   32[COMRAM] unsigned long 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:       17 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		_TMR_GetDeltaTime
  4720 ;; This function is called by:
  4721 ;;		_TMR_ISR_lora
  4722 ;;		_SwTimerReadValue
  4723 ;;		_SwTimerStart
  4724 ;;		_SwTimersCanSleep
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text37
  4729  0005E2                     __ptext37:
  4730                           	opt stack 0
  4731  0005E2                     _SwTimersInterrupt:
  4732                           	opt stack 20
  4733                           
  4734                           ;sw_timer.c: 289: uint8_t i;
  4735                           ;sw_timer.c: 290: uint32_t timeElapsed;
  4736                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
  4737                           
  4738                           ;incstack = 0
  4739  0005E2  682D               	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
  4740  0005E4  682E               	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
  4741  0005E6  682F               	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
  4742  0005E8  6830               	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
  4743                           
  4744                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
  4745  0005EA  EC9D  F001         	call	_TMR_GetDeltaTime	;wreg free
  4746  0005EE  C009  F029         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
  4747  0005F2  C00A  F02A         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
  4748  0005F6  C00B  F02B         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
  4749  0005FA  C00C  F02C         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
  4750                           
  4751                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
  4752  0005FE  0E00               	movlw	0
  4753  000600  6E31               	movwf	SwTimersInterrupt@i,c
  4754  000602  D061               	goto	i2l1592
  4755  000604                     
  4756                           ;sw_timer.c: 298: {
  4757                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
  4758  000604  5031               	movf	SwTimersInterrupt@i,w,c
  4759  000606  0D08               	mullw	8
  4760  000608  0E04               	movlw	4
  4761  00060A  26F3               	addwf	prodl,f,c
  4762  00060C  0E00               	movlw	0
  4763  00060E  22F4               	addwfc	prodh,f,c
  4764  000610  0E00               	movlw	low _swTimers
  4765  000612  24F3               	addwf	prodl,w,c
  4766  000614  6ED9               	movwf	fsr2l,c
  4767  000616  0E03               	movlw	high _swTimers
  4768  000618  20F4               	addwfc	prodh,w,c
  4769  00061A  6EDA               	movwf	fsr2h,c
  4770  00061C  04DE               	decf	postinc2,w,c
  4771  00061E  A4D8               	btfss	status,2,c
  4772  000620  D051               	goto	i2l1597
  4773                           
  4774                           ;sw_timer.c: 302: {
  4775                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
  4776  000622  5031               	movf	SwTimersInterrupt@i,w,c
  4777  000624  0D08               	mullw	8
  4778  000626  0E00               	movlw	low _swTimers
  4779  000628  24F3               	addwf	prodl,w,c
  4780  00062A  6ED9               	movwf	fsr2l,c
  4781  00062C  0E03               	movlw	high _swTimers
  4782  00062E  20F4               	addwfc	prodh,w,c
  4783  000630  6EDA               	movwf	fsr2h,c
  4784  000632  50DE               	movf	postinc2,w,c
  4785  000634  5C29               	subwf	SwTimersInterrupt@timeElapsed,w,c
  4786  000636  50DE               	movf	postinc2,w,c
  4787  000638  582A               	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
  4788  00063A  50DE               	movf	postinc2,w,c
  4789  00063C  582B               	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
  4790  00063E  50DE               	movf	postinc2,w,c
  4791  000640  582C               	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
  4792  000642  A0D8               	btfss	status,0,c
  4793  000644  D00D               	goto	i2l1595
  4794                           
  4795                           ;sw_timer.c: 304: {
  4796                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
  4797  000646  5031               	movf	SwTimersInterrupt@i,w,c
  4798  000648  0D08               	mullw	8
  4799  00064A  0E00               	movlw	low _swTimers
  4800  00064C  24F3               	addwf	prodl,w,c
  4801  00064E  6ED9               	movwf	fsr2l,c
  4802  000650  0E03               	movlw	high _swTimers
  4803  000652  20F4               	addwfc	prodh,w,c
  4804  000654  6EDA               	movwf	fsr2h,c
  4805  000656  6ADE               	clrf	postinc2,c
  4806  000658  6ADE               	clrf	postinc2,c
  4807  00065A  6ADE               	clrf	postinc2,c
  4808  00065C  6ADD               	clrf	postdec2,c
  4809                           
  4810                           ;sw_timer.c: 306: }
  4811  00065E  D032               	goto	i2l1597
  4812  000660                     i2l1595:
  4813                           
  4814                           ;sw_timer.c: 307: else
  4815                           ;sw_timer.c: 308: {
  4816                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
  4817  000660  5031               	movf	SwTimersInterrupt@i,w,c
  4818  000662  0D08               	mullw	8
  4819  000664  0E00               	movlw	low _swTimers
  4820  000666  24F3               	addwf	prodl,w,c
  4821  000668  6ED9               	movwf	fsr2l,c
  4822  00066A  0E03               	movlw	high _swTimers
  4823  00066C  20F4               	addwfc	prodh,w,c
  4824  00066E  6EDA               	movwf	fsr2h,c
  4825  000670  5029               	movf	SwTimersInterrupt@timeElapsed,w,c
  4826  000672  5EDE               	subwf	postinc2,f,c
  4827  000674  502A               	movf	SwTimersInterrupt@timeElapsed+1,w,c
  4828  000676  5ADE               	subwfb	postinc2,f,c
  4829  000678  502B               	movf	SwTimersInterrupt@timeElapsed+2,w,c
  4830  00067A  5ADE               	subwfb	postinc2,f,c
  4831  00067C  502C               	movf	SwTimersInterrupt@timeElapsed+3,w,c
  4832  00067E  5ADE               	subwfb	postinc2,f,c
  4833                           
  4834                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
  4835  000680  5031               	movf	SwTimersInterrupt@i,w,c
  4836  000682  0D08               	mullw	8
  4837  000684  0E00               	movlw	low _swTimers
  4838  000686  24F3               	addwf	prodl,w,c
  4839  000688  6ED9               	movwf	fsr2l,c
  4840  00068A  0E03               	movlw	high _swTimers
  4841  00068C  20F4               	addwfc	prodh,w,c
  4842  00068E  6EDA               	movwf	fsr2h,c
  4843  000690  502D               	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
  4844  000692  5CDE               	subwf	postinc2,w,c
  4845  000694  502E               	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
  4846  000696  58DE               	subwfb	postinc2,w,c
  4847  000698  502F               	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
  4848  00069A  58DE               	subwfb	postinc2,w,c
  4849  00069C  5030               	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
  4850  00069E  58DE               	subwfb	postinc2,w,c
  4851  0006A0  B0D8               	btfsc	status,0,c
  4852  0006A2  D010               	goto	i2l1597
  4853                           
  4854                           ;sw_timer.c: 313: {
  4855                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
  4856  0006A4  5031               	movf	SwTimersInterrupt@i,w,c
  4857  0006A6  0D08               	mullw	8
  4858  0006A8  0E00               	movlw	low _swTimers
  4859  0006AA  24F3               	addwf	prodl,w,c
  4860  0006AC  6ED9               	movwf	fsr2l,c
  4861  0006AE  0E03               	movlw	high _swTimers
  4862  0006B0  20F4               	addwfc	prodh,w,c
  4863  0006B2  6EDA               	movwf	fsr2h,c
  4864  0006B4  CFDE F02D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
  4865  0006B8  CFDE F02E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
  4866  0006BC  CFDE F02F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
  4867  0006C0  CFDE F030          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
  4868  0006C4                     i2l1597:
  4869  0006C4  2A31               	incf	SwTimersInterrupt@i,f,c
  4870  0006C6                     i2l1592:
  4871  0006C6  504A               	movf	_allocatedTimers,w,c	;volatile
  4872  0006C8  5C31               	subwf	SwTimersInterrupt@i,w,c
  4873  0006CA  A0D8               	btfss	status,0,c
  4874  0006CC  D79B               	goto	i2l1593
  4875                           
  4876                           ;sw_timer.c: 315: }
  4877                           ;sw_timer.c: 316: }
  4878                           ;sw_timer.c: 317: }
  4879                           ;sw_timer.c: 318: }
  4880                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
  4881  0006CE  C02D  F021         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
  4882  0006D2  C02E  F022         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
  4883  0006D6  C02F  F023         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
  4884  0006DA  C030  F024         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
  4885  0006DE  0012               	return		;funcret
  4886  0006E0                     __end_of_SwTimersInterrupt:
  4887                           	opt stack 0
  4888                           tosu	equ	0xFFF
  4889                           tosh	equ	0xFFE
  4890                           tosl	equ	0xFFD
  4891                           pclatu	equ	0xFFB
  4892                           pclath	equ	0xFFA
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           prodh	equ	0xFF4
  4898                           prodl	equ	0xFF3
  4899                           intcon	equ	0xFF2
  4900                           intcon2	equ	0xFF1
  4901                           intcon3	equ	0xFF0
  4902                           indf0	equ	0xFEF
  4903                           postinc0	equ	0xFEE
  4904                           fsr0h	equ	0xFEA
  4905                           fsr0l	equ	0xFE9
  4906                           wreg	equ	0xFE8
  4907                           fsr1h	equ	0xFE2
  4908                           fsr1l	equ	0xFE1
  4909                           indf2	equ	0xFDF
  4910                           postinc2	equ	0xFDE
  4911                           postdec2	equ	0xFDD
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function _TMR_GetDeltaTime *****************
  4917 ;; Defined at:
  4918 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4    8[COMRAM] unsigned long 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;Total ram usage:       24 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    1
  4939 ;; This function calls:
  4940 ;;		_TMR1_ReadTimer
  4941 ;; This function is called by:
  4942 ;;		_SwTimersInterrupt
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text38
  4947  00033A                     __ptext38:
  4948                           	opt stack 0
  4949  00033A                     _TMR_GetDeltaTime:
  4950                           	opt stack 20
  4951                           
  4952                           ;sw_timer.c: 90: static uint32_t retVal;
  4953                           ;sw_timer.c: 91: static uint16_t tmrVal;
  4954                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
  4955                           
  4956                           ;incstack = 0
  4957  00033A  ECD2  F005         	call	_TMR1_ReadTimer	;wreg free
  4958  00033E  C001  F092         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
  4959  000342  C002  F093         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
  4960                           
  4961                           ;sw_timer.c: 95: if (timerOverflow == 1)
  4962  000346  0100               	movlb	0	; () banked
  4963  000348  059C               	decf	_timerOverflow& (0+255),w,b	;volatile
  4964  00034A  A4D8               	btfss	status,2,c
  4965  00034C  D065               	goto	i2l1525
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;sw_timer.c: 96: {
  4969                           ;sw_timer.c: 97: timerOverflow = 0;
  4970  00034E  0E00               	movlw	0
  4971  000350  6F9C               	movwf	_timerOverflow& (0+255),b	;volatile
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
  4975  000352  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  4976  000356  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  4977  00035A  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  4978  00035E  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  4979  000362  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  4980  000364  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  4981  000366  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  4982  000368  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  4983  00036A  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  4984  00036C  0E00               	movlw	0
  4985  00036E  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  4986  000370  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  4987  000372  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  4988  000374  5044               	movf	_reloadVal,w,c	;volatile
  4989  000376  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
  4990  000378  5045               	movf	_reloadVal+1,w,c	;volatile
  4991  00037A  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
  4992  00037C  6A13               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),c
  4993  00037E  6A14               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),c
  4994  000380  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  4995  000382  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  4996  000384  1E13               	comf	??_TMR_GetDeltaTime+6,f,c
  4997  000386  1E14               	comf	??_TMR_GetDeltaTime+7,f,c
  4998  000388  2A11               	incf	??_TMR_GetDeltaTime+4,f,c
  4999  00038A  0E00               	movlw	0
  5000  00038C  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  5001  00038E  2213               	addwfc	??_TMR_GetDeltaTime+6,f,c
  5002  000390  2214               	addwfc	??_TMR_GetDeltaTime+7,f,c
  5003  000392  5192               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5004  000394  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
  5005  000396  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5006  000398  5193               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5007  00039A  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
  5008  00039C  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5009  00039E  0E00               	movlw	0
  5010  0003A0  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
  5011  0003A2  6E17               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
  5012  0003A4  0E00               	movlw	0
  5013  0003A6  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  5014  0003A8  6E18               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
  5015  0003AA  500D               	movf	??_TMR_GetDeltaTime,w,c
  5016  0003AC  2415               	addwf	??_TMR_GetDeltaTime+8,w,c
  5017  0003AE  6E19               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),c
  5018  0003B0  500E               	movf	??_TMR_GetDeltaTime+1,w,c
  5019  0003B2  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  5020  0003B4  6E1A               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),c
  5021  0003B6  500F               	movf	??_TMR_GetDeltaTime+2,w,c
  5022  0003B8  2017               	addwfc	??_TMR_GetDeltaTime+10,w,c
  5023  0003BA  6E1B               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),c
  5024  0003BC  5010               	movf	??_TMR_GetDeltaTime+3,w,c
  5025  0003BE  2018               	addwfc	??_TMR_GetDeltaTime+11,w,c
  5026  0003C0  6E1C               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),c
  5027  0003C2  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  5028  0003C4  2419               	addwf	??_TMR_GetDeltaTime+12,w,c
  5029  0003C6  6E1D               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),c
  5030  0003C8  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5031  0003CA  201A               	addwfc	??_TMR_GetDeltaTime+13,w,c
  5032  0003CC  6E1E               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),c
  5033  0003CE  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5034  0003D0  201B               	addwfc	??_TMR_GetDeltaTime+14,w,c
  5035  0003D2  6E1F               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),c
  5036  0003D4  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5037  0003D6  201C               	addwfc	??_TMR_GetDeltaTime+15,w,c
  5038  0003D8  6E20               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),c
  5039  0003DA  0E00               	movlw	0
  5040  0003DC  241D               	addwf	??_TMR_GetDeltaTime+16,w,c
  5041  0003DE  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5042  0003E0  0E00               	movlw	0
  5043  0003E2  201E               	addwfc	??_TMR_GetDeltaTime+17,w,c
  5044  0003E4  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5045  0003E6  0E01               	movlw	1
  5046  0003E8  201F               	addwfc	??_TMR_GetDeltaTime+18,w,c
  5047  0003EA  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5048  0003EC  0E00               	movlw	0
  5049  0003EE  2020               	addwfc	??_TMR_GetDeltaTime+19,w,c
  5050  0003F0  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
  5054  0003F2  C092  F064         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
  5055  0003F6  C093  F065         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
  5056  0003FA  6B66               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
  5057  0003FC  6B67               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;sw_timer.c: 100: ticksAdded = 0;
  5061  0003FE  0E00               	movlw	0
  5062  000400  6F68               	movwf	_ticksAdded& (0+255),b	;volatile
  5063  000402  0E00               	movlw	0
  5064  000404  6F69               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
  5065  000406  0E00               	movlw	0
  5066  000408  6F6A               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
  5067  00040A  0E00               	movlw	0
  5068  00040C  6F6B               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;sw_timer.c: 101: reloadVal = 0;
  5072  00040E  0E00               	movlw	0
  5073  000410  6E45               	movwf	_reloadVal+1,c	;volatile
  5074  000412  0E00               	movlw	0
  5075  000414  6E44               	movwf	_reloadVal,c	;volatile
  5076                           
  5077                           ;sw_timer.c: 102: }
  5078  000416  D03D               	goto	i2l1526
  5079  000418                     i2l1525:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;sw_timer.c: 103: else
  5083                           ;sw_timer.c: 104: {
  5084                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
  5085                           
  5086                           ; BSR set to: 0
  5087  000418  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  5088  00041C  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  5089  000420  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  5090  000424  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  5091  000428  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  5092  00042A  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  5093  00042C  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  5094  00042E  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  5095  000430  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  5096  000432  0E00               	movlw	0
  5097  000434  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  5098  000436  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  5099  000438  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  5100  00043A  C044  F011         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
  5101  00043E  C045  F012         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
  5102  000442  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  5103  000444  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  5104  000446  4A11               	infsnz	??_TMR_GetDeltaTime+4,f,c
  5105  000448  2A12               	incf	??_TMR_GetDeltaTime+5,f,c
  5106  00044A  5192               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5107  00044C  2611               	addwf	??_TMR_GetDeltaTime+4,f,c
  5108  00044E  5193               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5109  000450  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  5110  000452  5011               	movf	??_TMR_GetDeltaTime+4,w,c
  5111  000454  240D               	addwf	??_TMR_GetDeltaTime,w,c
  5112  000456  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
  5113  000458  5012               	movf	??_TMR_GetDeltaTime+5,w,c
  5114  00045A  200E               	addwfc	??_TMR_GetDeltaTime+1,w,c
  5115  00045C  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
  5116  00045E  0E00               	movlw	0
  5117  000460  200F               	addwfc	??_TMR_GetDeltaTime+2,w,c
  5118  000462  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5119  000464  0E00               	movlw	0
  5120  000466  2010               	addwfc	??_TMR_GetDeltaTime+3,w,c
  5121  000468  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5122  00046A  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  5123  00046C  2413               	addwf	??_TMR_GetDeltaTime+6,w,c
  5124  00046E  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5125  000470  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5126  000472  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  5127  000474  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5128  000476  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5129  000478  2015               	addwfc	??_TMR_GetDeltaTime+8,w,c
  5130  00047A  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5131  00047C  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5132  00047E  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  5133  000480  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5134                           
  5135                           ;sw_timer.c: 106: ticksAccounted += retVal;
  5136  000482  5160               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
  5137  000484  2764               	addwf	_ticksAccounted& (0+255),f,b	;volatile
  5138  000486  5161               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
  5139  000488  2365               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
  5140  00048A  5162               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
  5141  00048C  2366               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
  5142  00048E  5163               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
  5143  000490  2367               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
  5144  000492                     i2l1526:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;sw_timer.c: 107: }
  5148                           ;sw_timer.c: 109: return retVal;
  5149                           
  5150                           ; BSR set to: 0
  5151  000492  C060  F009         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
  5152  000496  C061  F00A         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
  5153  00049A  C062  F00B         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
  5154  00049E  C063  F00C         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
  5155  0004A2  0012               	return	
  5156  0004A4                     __end_of_TMR_GetDeltaTime:
  5157                           	opt stack 0
  5158                           tosu	equ	0xFFF
  5159                           tosh	equ	0xFFE
  5160                           tosl	equ	0xFFD
  5161                           pclatu	equ	0xFFB
  5162                           pclath	equ	0xFFA
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           intcon3	equ	0xFF0
  5172                           indf0	equ	0xFEF
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _TMR1_ReadTimer *****************
  5187 ;; Defined at:
  5188 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  readVal         2    4[COMRAM] unsigned int 
  5193 ;;  readValLow      1    7[COMRAM] unsigned char 
  5194 ;;  readValHigh     1    6[COMRAM] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMRAM] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;Total ram usage:        8 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_TMR_GetDeltaTime
  5214 ;;		_TMR_SwapTimer
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text39
  5219  000BA4                     __ptext39:
  5220                           	opt stack 0
  5221  000BA4                     _TMR1_ReadTimer:
  5222                           	opt stack 21
  5223                           
  5224                           ;tmr1.c: 107: uint16_t readVal;
  5225                           ;tmr1.c: 108: uint8_t readValHigh;
  5226                           ;tmr1.c: 109: uint8_t readValLow;
  5227                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;incstack = 0
  5231  000BA4  82CD               	bsf	4045,1,c	;volatile
  5232                           
  5233                           ;tmr1.c: 113: readValLow = TMR1L;
  5234  000BA6  CFCE F008          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  5235                           
  5236                           ;tmr1.c: 114: readValHigh = TMR1H;
  5237  000BAA  CFCF F007          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  5238                           
  5239                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  5240  000BAE  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
  5241  000BB0  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
  5242  000BB2  5008               	movf	TMR1_ReadTimer@readValLow,w,c
  5243  000BB4  6E05               	movwf	TMR1_ReadTimer@readVal,c
  5244  000BB6  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  5245                           
  5246                           ;tmr1.c: 118: return readVal;
  5247  000BBA  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  5248  000BBE  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  5249  000BC2  0012               	return	
  5250  000BC4                     __end_of_TMR1_ReadTimer:
  5251                           	opt stack 0
  5252                           tosu	equ	0xFFF
  5253                           tosh	equ	0xFFE
  5254                           tosl	equ	0xFFD
  5255                           pclatu	equ	0xFFB
  5256                           pclath	equ	0xFFA
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           prodh	equ	0xFF4
  5262                           prodl	equ	0xFF3
  5263                           intcon	equ	0xFF2
  5264                           intcon2	equ	0xFF1
  5265                           intcon3	equ	0xFF0
  5266                           indf0	equ	0xFEF
  5267                           postinc0	equ	0xFEE
  5268                           fsr0h	equ	0xFEA
  5269                           fsr0l	equ	0xFE9
  5270                           wreg	equ	0xFE8
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _PIN_MANAGER_IOC *****************
  5281 ;; Defined at:
  5282 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    2
  5303 ;; This function calls:
  5304 ;;		_IOCB4_ISR
  5305 ;; This function is called by:
  5306 ;;		_INTERRUPT_InterruptManager
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text40
  5311  000D44                     __ptext40:
  5312                           	opt stack 0
  5313  000D44                     _PIN_MANAGER_IOC:
  5314                           	opt stack 23
  5315                           
  5316                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
  5317                           
  5318                           ;incstack = 0
  5319  000D44  B862               	btfsc	3938,4,c	;volatile
  5320                           
  5321                           ;pin_manager.c: 114: {
  5322                           ;pin_manager.c: 115: IOCB4_ISR();
  5323  000D46  ECE2  F005         	call	_IOCB4_ISR	;wreg free
  5324                           
  5325                           ;pin_manager.c: 116: }
  5326                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
  5327  000D4A  90F2               	bcf	intcon,0,c	;volatile
  5328  000D4C  0012               	return		;funcret
  5329  000D4E                     __end_of_PIN_MANAGER_IOC:
  5330                           	opt stack 0
  5331                           tosu	equ	0xFFF
  5332                           tosh	equ	0xFFE
  5333                           tosl	equ	0xFFD
  5334                           pclatu	equ	0xFFB
  5335                           pclath	equ	0xFFA
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           intcon2	equ	0xFF1
  5344                           intcon3	equ	0xFF0
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _IOCB4_ISR *****************
  5360 ;; Defined at:
  5361 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Absolute function
  5384 ;;		_DIO2_ISR_Lora
  5385 ;;		_IOCB4_DefaultInterruptHandler
  5386 ;; This function is called by:
  5387 ;;		_PIN_MANAGER_IOC
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text41
  5392  000BC4                     __ptext41:
  5393                           	opt stack 0
  5394  000BC4                     _IOCB4_ISR:
  5395                           	opt stack 23
  5396                           
  5397                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
  5398                           
  5399                           ;incstack = 0
  5400  000BC4  0100               	movlb	0	; () banked
  5401  000BC6  51EC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5402  000BC8  11ED               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5403  000BCA  B4D8               	btfsc	status,2,c
  5404  000BCC  0012               	return	
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;pin_manager.c: 130: {
  5408                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
  5409  000BCE  D801               	call	i2u894_48
  5410  000BD0  0012               	return	
  5411  000BD2                     i2u894_48:
  5412  000BD2  0005               	push	
  5413  000BD4  6EFA               	movwf	pclath,c
  5414  000BD6  51EC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5415  000BD8  6EFD               	movwf	tosl,c
  5416  000BDA  51ED               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5417  000BDC  6EFE               	movwf	tosh,c
  5418  000BDE  6AFF               	clrf	tosu,c
  5419  000BE0  50FA               	movf	pclath,w,c
  5420  000BE2  0012               	return		;indir
  5421  000BE4                     __end_of_IOCB4_ISR:
  5422                           	opt stack 0
  5423                           tosu	equ	0xFFF
  5424                           tosh	equ	0xFFE
  5425                           tosl	equ	0xFFD
  5426                           pclatu	equ	0xFFB
  5427                           pclath	equ	0xFFA
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           intcon2	equ	0xFF1
  5436                           intcon3	equ	0xFF0
  5437                           indf0	equ	0xFEF
  5438                           postinc0	equ	0xFEE
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           fsr1h	equ	0xFE2
  5443                           fsr1l	equ	0xFE1
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _DIO2_ISR_Lora *****************
  5452 ;; Defined at:
  5453 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_DIO2_ISR_Lora_Init
  5477 ;;		_IOCB4_ISR
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text42
  5482  000D64                     __ptext42:
  5483                           	opt stack 0
  5484  000D64                     _DIO2_ISR_Lora:
  5485                           	opt stack 23
  5486                           
  5487                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
  5488                           
  5489                           ;incstack = 0
  5490  000D64  0100               	movlb	0	; () banked
  5491  000D66  859D               	bsf	_dioStatus& (0+255),2,b	;volatile
  5492                           
  5493                           ; BSR set to: 0
  5494  000D68  0012               	return		;funcret
  5495  000D6A                     __end_of_DIO2_ISR_Lora:
  5496                           	opt stack 0
  5497                           tosu	equ	0xFFF
  5498                           tosh	equ	0xFFE
  5499                           tosl	equ	0xFFD
  5500                           pclatu	equ	0xFFB
  5501                           pclath	equ	0xFFA
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           intcon2	equ	0xFF1
  5510                           intcon3	equ	0xFF0
  5511                           indf0	equ	0xFEF
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  5526 ;; Defined at:
  5527 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		None
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:        0 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_PIN_MANAGER_Initialize
  5551 ;;		_IOCB4_ISR
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text43
  5556  000D8E                     __ptext43:
  5557                           	opt stack 0
  5558  000D8E                     _IOCB4_DefaultInterruptHandler:
  5559                           	opt stack 23
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;incstack = 0
  5563  000D8E  0012               	return		;funcret
  5564  000D90                     __end_of_IOCB4_DefaultInterruptHandler:
  5565                           	opt stack 0
  5566                           tosu	equ	0xFFF
  5567                           tosh	equ	0xFFE
  5568                           tosl	equ	0xFFD
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           intcon2	equ	0xFF1
  5579                           intcon3	equ	0xFF0
  5580                           indf0	equ	0xFEF
  5581                           postinc0	equ	0xFEE
  5582                           fsr0h	equ	0xFEA
  5583                           fsr0l	equ	0xFE9
  5584                           wreg	equ	0xFE8
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function _INT2_ISR *****************
  5595 ;; Defined at:
  5596 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;		None
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;Total ram usage:        0 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    2
  5617 ;; This function calls:
  5618 ;;		_INT2_CallBack
  5619 ;; This function is called by:
  5620 ;;		_INTERRUPT_InterruptManager
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text44
  5625  000D4E                     __ptext44:
  5626                           	opt stack 0
  5627  000D4E                     _INT2_ISR:
  5628                           	opt stack 23
  5629                           
  5630                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
  5631                           
  5632                           ;incstack = 0
  5633  000D4E  92F0               	bcf	intcon3,1,c	;volatile
  5634                           
  5635                           ;ext_int.c: 64: INT2_CallBack();
  5636  000D50  ECF2  F005         	call	_INT2_CallBack	;wreg free
  5637  000D54  0012               	return		;funcret
  5638  000D56                     __end_of_INT2_ISR:
  5639                           	opt stack 0
  5640                           tosu	equ	0xFFF
  5641                           tosh	equ	0xFFE
  5642                           tosl	equ	0xFFD
  5643                           pclatu	equ	0xFFB
  5644                           pclath	equ	0xFFA
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           prodh	equ	0xFF4
  5650                           prodl	equ	0xFF3
  5651                           intcon	equ	0xFF2
  5652                           intcon2	equ	0xFF1
  5653                           intcon3	equ	0xFF0
  5654                           indf0	equ	0xFEF
  5655                           postinc0	equ	0xFEE
  5656                           fsr0h	equ	0xFEA
  5657                           fsr0l	equ	0xFE9
  5658                           wreg	equ	0xFE8
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function _INT2_CallBack *****************
  5669 ;; Defined at:
  5670 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    1
  5691 ;; This function calls:
  5692 ;;		Absolute function
  5693 ;;		_DIO1_ISR_Lora
  5694 ;;		_INT2_DefaultInterruptHandler
  5695 ;; This function is called by:
  5696 ;;		_INT2_ISR
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text45
  5701  000BE4                     __ptext45:
  5702                           	opt stack 0
  5703  000BE4                     _INT2_CallBack:
  5704                           	opt stack 23
  5705                           
  5706                           ;ext_int.c: 71: if(INT2_InterruptHandler)
  5707                           
  5708                           ;incstack = 0
  5709  000BE4  0100               	movlb	0	; () banked
  5710  000BE6  51EE               	movf	_INT2_InterruptHandler& (0+255),w,b
  5711  000BE8  11EF               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5712  000BEA  B4D8               	btfsc	status,2,c
  5713  000BEC  0012               	return	
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;ext_int.c: 72: {
  5717                           ;ext_int.c: 73: INT2_InterruptHandler();
  5718  000BEE  D801               	call	i2u892_48
  5719  000BF0  0012               	return	
  5720  000BF2                     i2u892_48:
  5721  000BF2  0005               	push	
  5722  000BF4  6EFA               	movwf	pclath,c
  5723  000BF6  51EE               	movf	_INT2_InterruptHandler& (0+255),w,b
  5724  000BF8  6EFD               	movwf	tosl,c
  5725  000BFA  51EF               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5726  000BFC  6EFE               	movwf	tosh,c
  5727  000BFE  6AFF               	clrf	tosu,c
  5728  000C00  50FA               	movf	pclath,w,c
  5729  000C02  0012               	return		;indir
  5730  000C04                     __end_of_INT2_CallBack:
  5731                           	opt stack 0
  5732                           tosu	equ	0xFFF
  5733                           tosh	equ	0xFFE
  5734                           tosl	equ	0xFFD
  5735                           pclatu	equ	0xFFB
  5736                           pclath	equ	0xFFA
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           prodh	equ	0xFF4
  5742                           prodl	equ	0xFF3
  5743                           intcon	equ	0xFF2
  5744                           intcon2	equ	0xFF1
  5745                           intcon3	equ	0xFF0
  5746                           indf0	equ	0xFEF
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           fsr1h	equ	0xFE2
  5752                           fsr1l	equ	0xFE1
  5753                           indf2	equ	0xFDF
  5754                           postinc2	equ	0xFDE
  5755                           postdec2	equ	0xFDD
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function _DIO1_ISR_Lora *****************
  5761 ;; Defined at:
  5762 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_DIO1_ISR_Lora_Init
  5786 ;;		_INT2_CallBack
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text46
  5791  000D6A                     __ptext46:
  5792                           	opt stack 0
  5793  000D6A                     _DIO1_ISR_Lora:
  5794                           	opt stack 23
  5795                           
  5796                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
  5797                           
  5798                           ;incstack = 0
  5799  000D6A  0100               	movlb	0	; () banked
  5800  000D6C  839D               	bsf	_dioStatus& (0+255),1,b	;volatile
  5801                           
  5802                           ; BSR set to: 0
  5803  000D6E  0012               	return		;funcret
  5804  000D70                     __end_of_DIO1_ISR_Lora:
  5805                           	opt stack 0
  5806                           tosu	equ	0xFFF
  5807                           tosh	equ	0xFFE
  5808                           tosl	equ	0xFFD
  5809                           pclatu	equ	0xFFB
  5810                           pclath	equ	0xFFA
  5811                           tblptru	equ	0xFF8
  5812                           tblptrh	equ	0xFF7
  5813                           tblptrl	equ	0xFF6
  5814                           tablat	equ	0xFF5
  5815                           prodh	equ	0xFF4
  5816                           prodl	equ	0xFF3
  5817                           intcon	equ	0xFF2
  5818                           intcon2	equ	0xFF1
  5819                           intcon3	equ	0xFF0
  5820                           indf0	equ	0xFEF
  5821                           postinc0	equ	0xFEE
  5822                           fsr0h	equ	0xFEA
  5823                           fsr0l	equ	0xFE9
  5824                           wreg	equ	0xFE8
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           indf2	equ	0xFDF
  5828                           postinc2	equ	0xFDE
  5829                           postdec2	equ	0xFDD
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _INT2_DefaultInterruptHandler *****************
  5835 ;; Defined at:
  5836 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		None
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_EXT_INT_Initialize
  5860 ;;		_INT2_CallBack
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text47
  5865  000D90                     __ptext47:
  5866                           	opt stack 0
  5867  000D90                     _INT2_DefaultInterruptHandler:
  5868                           	opt stack 23
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;incstack = 0
  5872  000D90  0012               	return		;funcret
  5873  000D92                     __end_of_INT2_DefaultInterruptHandler:
  5874                           	opt stack 0
  5875                           tosu	equ	0xFFF
  5876                           tosh	equ	0xFFE
  5877                           tosl	equ	0xFFD
  5878                           pclatu	equ	0xFFB
  5879                           pclath	equ	0xFFA
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           prodh	equ	0xFF4
  5885                           prodl	equ	0xFF3
  5886                           intcon	equ	0xFF2
  5887                           intcon2	equ	0xFF1
  5888                           intcon3	equ	0xFF0
  5889                           indf0	equ	0xFEF
  5890                           postinc0	equ	0xFEE
  5891                           fsr0h	equ	0xFEA
  5892                           fsr0l	equ	0xFE9
  5893                           wreg	equ	0xFE8
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _INT1_ISR *****************
  5904 ;; Defined at:
  5905 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    2
  5926 ;; This function calls:
  5927 ;;		_INT1_CallBack
  5928 ;; This function is called by:
  5929 ;;		_INTERRUPT_InterruptManager
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text48
  5934  000D56                     __ptext48:
  5935                           	opt stack 0
  5936  000D56                     _INT1_ISR:
  5937                           	opt stack 23
  5938                           
  5939                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  5940                           
  5941                           ;incstack = 0
  5942  000D56  90F0               	bcf	intcon3,0,c	;volatile
  5943                           
  5944                           ;ext_int.c: 38: INT1_CallBack();
  5945  000D58  EC02  F006         	call	_INT1_CallBack	;wreg free
  5946  000D5C  0012               	return		;funcret
  5947  000D5E                     __end_of_INT1_ISR:
  5948                           	opt stack 0
  5949                           tosu	equ	0xFFF
  5950                           tosh	equ	0xFFE
  5951                           tosl	equ	0xFFD
  5952                           pclatu	equ	0xFFB
  5953                           pclath	equ	0xFFA
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           intcon2	equ	0xFF1
  5962                           intcon3	equ	0xFF0
  5963                           indf0	equ	0xFEF
  5964                           postinc0	equ	0xFEE
  5965                           fsr0h	equ	0xFEA
  5966                           fsr0l	equ	0xFE9
  5967                           wreg	equ	0xFE8
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _INT1_CallBack *****************
  5978 ;; Defined at:
  5979 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    1
  6000 ;; This function calls:
  6001 ;;		Absolute function
  6002 ;;		_DIO0_ISR_Lora
  6003 ;;		_INT1_DefaultInterruptHandler
  6004 ;; This function is called by:
  6005 ;;		_INT1_ISR
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text49
  6010  000C04                     __ptext49:
  6011                           	opt stack 0
  6012  000C04                     _INT1_CallBack:
  6013                           	opt stack 23
  6014                           
  6015                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  6016                           
  6017                           ;incstack = 0
  6018  000C04  0100               	movlb	0	; () banked
  6019  000C06  51F0               	movf	_INT1_InterruptHandler& (0+255),w,b
  6020  000C08  11F1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6021  000C0A  B4D8               	btfsc	status,2,c
  6022  000C0C  0012               	return	
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;ext_int.c: 46: {
  6026                           ;ext_int.c: 47: INT1_InterruptHandler();
  6027  000C0E  D801               	call	i2u890_48
  6028  000C10  0012               	return	
  6029  000C12                     i2u890_48:
  6030  000C12  0005               	push	
  6031  000C14  6EFA               	movwf	pclath,c
  6032  000C16  51F0               	movf	_INT1_InterruptHandler& (0+255),w,b
  6033  000C18  6EFD               	movwf	tosl,c
  6034  000C1A  51F1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6035  000C1C  6EFE               	movwf	tosh,c
  6036  000C1E  6AFF               	clrf	tosu,c
  6037  000C20  50FA               	movf	pclath,w,c
  6038  000C22  0012               	return		;indir
  6039  000C24                     __end_of_INT1_CallBack:
  6040                           	opt stack 0
  6041                           tosu	equ	0xFFF
  6042                           tosh	equ	0xFFE
  6043                           tosl	equ	0xFFD
  6044                           pclatu	equ	0xFFB
  6045                           pclath	equ	0xFFA
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           intcon2	equ	0xFF1
  6054                           intcon3	equ	0xFF0
  6055                           indf0	equ	0xFEF
  6056                           postinc0	equ	0xFEE
  6057                           fsr0h	equ	0xFEA
  6058                           fsr0l	equ	0xFE9
  6059                           wreg	equ	0xFE8
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           indf2	equ	0xFDF
  6063                           postinc2	equ	0xFDE
  6064                           postdec2	equ	0xFDD
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _DIO0_ISR_Lora *****************
  6070 ;; Defined at:
  6071 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_DIO0_ISR_Lora_Init
  6095 ;;		_INT1_CallBack
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text50
  6100  000D70                     __ptext50:
  6101                           	opt stack 0
  6102  000D70                     _DIO0_ISR_Lora:
  6103                           	opt stack 23
  6104                           
  6105                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
  6106                           
  6107                           ;incstack = 0
  6108  000D70  0100               	movlb	0	; () banked
  6109  000D72  819D               	bsf	_dioStatus& (0+255),0,b	;volatile
  6110                           
  6111                           ; BSR set to: 0
  6112  000D74  0012               	return		;funcret
  6113  000D76                     __end_of_DIO0_ISR_Lora:
  6114                           	opt stack 0
  6115                           tosu	equ	0xFFF
  6116                           tosh	equ	0xFFE
  6117                           tosl	equ	0xFFD
  6118                           pclatu	equ	0xFFB
  6119                           pclath	equ	0xFFA
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           intcon2	equ	0xFF1
  6128                           intcon3	equ	0xFF0
  6129                           indf0	equ	0xFEF
  6130                           postinc0	equ	0xFEE
  6131                           fsr0h	equ	0xFEA
  6132                           fsr0l	equ	0xFE9
  6133                           wreg	equ	0xFE8
  6134                           fsr1h	equ	0xFE2
  6135                           fsr1l	equ	0xFE1
  6136                           indf2	equ	0xFDF
  6137                           postinc2	equ	0xFDE
  6138                           postdec2	equ	0xFDD
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function _INT1_DefaultInterruptHandler *****************
  6144 ;; Defined at:
  6145 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		None
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_EXT_INT_Initialize
  6169 ;;		_INT1_CallBack
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text51
  6174  000D92                     __ptext51:
  6175                           	opt stack 0
  6176  000D92                     _INT1_DefaultInterruptHandler:
  6177                           	opt stack 23
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;incstack = 0
  6181  000D92  0012               	return		;funcret
  6182  000D94                     __end_of_INT1_DefaultInterruptHandler:
  6183                           	opt stack 0
  6184                           tosu	equ	0xFFF
  6185                           tosh	equ	0xFFE
  6186                           tosl	equ	0xFFD
  6187                           pclatu	equ	0xFFB
  6188                           pclath	equ	0xFFA
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           intcon	equ	0xFF2
  6196                           intcon2	equ	0xFF1
  6197                           intcon3	equ	0xFF0
  6198                           indf0	equ	0xFEF
  6199                           postinc0	equ	0xFEE
  6200                           fsr0h	equ	0xFEA
  6201                           fsr0l	equ	0xFE9
  6202                           wreg	equ	0xFE8
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           fsr2h	equ	0xFDA
  6209                           fsr2l	equ	0xFD9
  6210                           status	equ	0xFD8
  6211                           
  6212 ;; *************** function _EUSART1_Transmit_ISR *****************
  6213 ;; Defined at:
  6214 ;;		line 220 in file "mcc_generated_files/eusart1.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_EUSART1_Initialize
  6238 ;;		_INTERRUPT_InterruptManager
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text52
  6243  000A70                     __ptext52:
  6244                           	opt stack 0
  6245  000A70                     _EUSART1_Transmit_ISR:
  6246                           	opt stack 25
  6247                           
  6248                           ;eusart1.c: 224: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6249                           
  6250                           ;incstack = 0
  6251  000A70  0100               	movlb	0	; () banked
  6252  000A72  51F2               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6253  000A74  A4D8               	btfss	status,2,c
  6254  000A76  D012               	goto	i2l2546
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;eusart1.c: 225: {
  6258                           ;eusart1.c: 226: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6259  000A78  5199               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6260  000A7A  0D01               	mullw	1
  6261  000A7C  0E98               	movlw	low _eusart1TxBuffer
  6262  000A7E  24F3               	addwf	prodl,w,c
  6263  000A80  6ED9               	movwf	fsr2l,c
  6264  000A82  0E00               	movlw	high _eusart1TxBuffer
  6265  000A84  20F4               	addwfc	prodh,w,c
  6266  000A86  6EDA               	movwf	fsr2h,c
  6267  000A88  50DF               	movf	indf2,w,c
  6268  000A8A  6EAD               	movwf	4013,c	;volatile
  6269                           
  6270                           ; BSR set to: 0
  6271  000A8C  2B99               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;eusart1.c: 227: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6275  000A8E  5199               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6276  000A90  B4D8               	btfsc	status,2,c
  6277  000A92  D002               	goto	i2l2547
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;eusart1.c: 228: {
  6281                           ;eusart1.c: 229: eusart1TxTail = 0;
  6282  000A94  0E00               	movlw	0
  6283  000A96  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6284  000A98                     i2l2547:
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;eusart1.c: 230: }
  6288                           ;eusart1.c: 231: eusart1TxBufferRemaining++;
  6289                           
  6290                           ; BSR set to: 0
  6291  000A98  2BF2               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6292                           
  6293                           ;eusart1.c: 232: }
  6294  000A9A  0012               	return	
  6295  000A9C                     i2l2546:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;eusart1.c: 233: else
  6299                           ;eusart1.c: 234: {
  6300                           ;eusart1.c: 235: PIE1bits.TX1IE = 0;
  6301  000A9C  989D               	bcf	3997,4,c	;volatile
  6302  000A9E  0012               	return	
  6303  000AA0                     __end_of_EUSART1_Transmit_ISR:
  6304                           	opt stack 0
  6305                           tosu	equ	0xFFF
  6306                           tosh	equ	0xFFE
  6307                           tosl	equ	0xFFD
  6308                           pclatu	equ	0xFFB
  6309                           pclath	equ	0xFFA
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           intcon2	equ	0xFF1
  6318                           intcon3	equ	0xFF0
  6319                           indf0	equ	0xFEF
  6320                           postinc0	equ	0xFEE
  6321                           fsr0h	equ	0xFEA
  6322                           fsr0l	equ	0xFE9
  6323                           wreg	equ	0xFE8
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333 ;; *************** function _EUSART1_Receive_ISR *****************
  6334 ;; Defined at:
  6335 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:        3 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    2
  6356 ;; This function calls:
  6357 ;;		Absolute function
  6358 ;;		_EUSART1_DefaultErrorHandler
  6359 ;;		_EUSART1_DefaultFramingErrorHandler
  6360 ;;		_EUSART1_DefaultOverrunErrorHandler
  6361 ;;		_EUSART1_Read
  6362 ;;		_EUSART1_RxDataHandler
  6363 ;;		_strncat
  6364 ;; This function is called by:
  6365 ;;		_EUSART1_Initialize
  6366 ;;		_INTERRUPT_InterruptManager
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text53
  6371  0000D4                     __ptext53:
  6372                           	opt stack 0
  6373  0000D4                     _EUSART1_Receive_ISR:
  6374                           	opt stack 23
  6375                           
  6376                           ;eusart1.c: 242: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;incstack = 0
  6380  0000D4  5048               	movf	_eusart1RxHead,w,c	;volatile
  6381  0000D6  0D01               	mullw	1
  6382  0000D8  0E46               	movlw	low _eusart1RxStatusBuffer
  6383  0000DA  24F3               	addwf	prodl,w,c
  6384  0000DC  6ED9               	movwf	fsr2l,c
  6385  0000DE  0E00               	movlw	high _eusart1RxStatusBuffer
  6386  0000E0  20F4               	addwfc	prodh,w,c
  6387  0000E2  6EDA               	movwf	fsr2h,c
  6388  0000E4  0E00               	movlw	0
  6389  0000E6  6EDF               	movwf	indf2,c
  6390                           
  6391                           ;eusart1.c: 244: if(RCSTA1bits.FERR){
  6392  0000E8  A4AB               	btfss	4011,2,c	;volatile
  6393  0000EA  D015               	goto	i2u1013_49
  6394                           
  6395                           ;eusart1.c: 245: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  6396  0000EC  5048               	movf	_eusart1RxHead,w,c	;volatile
  6397  0000EE  0D01               	mullw	1
  6398  0000F0  0E46               	movlw	low _eusart1RxStatusBuffer
  6399  0000F2  24F3               	addwf	prodl,w,c
  6400  0000F4  6ED9               	movwf	fsr2l,c
  6401  0000F6  0E00               	movlw	high _eusart1RxStatusBuffer
  6402  0000F8  20F4               	addwfc	prodh,w,c
  6403  0000FA  6EDA               	movwf	fsr2h,c
  6404  0000FC  82DF               	bsf	indf2,1,c
  6405                           
  6406                           ;eusart1.c: 246: EUSART1_FramingErrorHandler();
  6407  0000FE  D801               	call	i2u1013_48
  6408  000100  D00A               	goto	i2u1013_49
  6409  000102                     i2u1013_48:
  6410  000102  0005               	push	
  6411  000104  6EFA               	movwf	pclath,c
  6412  000106  0101               	movlb	1	; () banked
  6413  000108  51F9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6414  00010A  6EFD               	movwf	tosl,c
  6415  00010C  51FA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6416  00010E  6EFE               	movwf	tosh,c
  6417  000110  6AFF               	clrf	tosu,c
  6418  000112  50FA               	movf	pclath,w,c
  6419  000114  0012               	return		;indir
  6420  000116                     i2u1013_49:
  6421                           
  6422                           ;eusart1.c: 247: }
  6423                           ;eusart1.c: 249: if(RCSTA1bits.OERR){
  6424  000116  A2AB               	btfss	4011,1,c	;volatile
  6425  000118  D015               	goto	i2u1015_49
  6426                           
  6427                           ;eusart1.c: 250: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  6428  00011A  5048               	movf	_eusart1RxHead,w,c	;volatile
  6429  00011C  0D01               	mullw	1
  6430  00011E  0E46               	movlw	low _eusart1RxStatusBuffer
  6431  000120  24F3               	addwf	prodl,w,c
  6432  000122  6ED9               	movwf	fsr2l,c
  6433  000124  0E00               	movlw	high _eusart1RxStatusBuffer
  6434  000126  20F4               	addwfc	prodh,w,c
  6435  000128  6EDA               	movwf	fsr2h,c
  6436  00012A  84DF               	bsf	indf2,2,c
  6437                           
  6438                           ;eusart1.c: 251: EUSART1_OverrunErrorHandler();
  6439  00012C  D801               	call	i2u1015_48
  6440  00012E  D00A               	goto	i2u1015_49
  6441  000130                     i2u1015_48:
  6442  000130  0005               	push	
  6443  000132  6EFA               	movwf	pclath,c
  6444  000134  0101               	movlb	1	; () banked
  6445  000136  51F7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6446  000138  6EFD               	movwf	tosl,c
  6447  00013A  51F8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6448  00013C  6EFE               	movwf	tosh,c
  6449  00013E  6AFF               	clrf	tosu,c
  6450  000140  50FA               	movf	pclath,w,c
  6451  000142  0012               	return		;indir
  6452  000144                     i2u1015_49:
  6453                           
  6454                           ;eusart1.c: 252: }
  6455                           ;eusart1.c: 254: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  6456  000144  5048               	movf	_eusart1RxHead,w,c	;volatile
  6457  000146  0D01               	mullw	1
  6458  000148  0E46               	movlw	low _eusart1RxStatusBuffer
  6459  00014A  24F3               	addwf	prodl,w,c
  6460  00014C  6ED9               	movwf	fsr2l,c
  6461  00014E  0E00               	movlw	high _eusart1RxStatusBuffer
  6462  000150  20F4               	addwfc	prodh,w,c
  6463  000152  6EDA               	movwf	fsr2h,c
  6464  000154  50DF               	movf	indf2,w,c
  6465  000156  B4D8               	btfsc	status,2,c
  6466  000158  D00C               	goto	i2l2554
  6467                           
  6468                           ;eusart1.c: 255: EUSART1_ErrorHandler();
  6469  00015A  D801               	call	i2u1017_48
  6470  00015C  0012               	return	
  6471  00015E                     i2u1017_48:
  6472  00015E  0005               	push	
  6473  000160  6EFA               	movwf	pclath,c
  6474  000162  0101               	movlb	1	; () banked
  6475  000164  51F5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6476  000166  6EFD               	movwf	tosl,c
  6477  000168  51F6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6478  00016A  6EFE               	movwf	tosh,c
  6479  00016C  6AFF               	clrf	tosu,c
  6480  00016E  50FA               	movf	pclath,w,c
  6481  000170  0012               	return		;indir
  6482  000172                     i2l2554:
  6483                           
  6484                           ;eusart1.c: 257: EUSART1_RxDataHandler();
  6485  000172  EC8E  F005         	call	_EUSART1_RxDataHandler	;wreg free
  6486                           
  6487                           ;eusart1.c: 258: LATA=0xF0;
  6488  000176  0EF0               	movlw	240
  6489  000178  6E89               	movwf	3977,c	;volatile
  6490                           
  6491                           ;eusart1.c: 260: datax = EUSART1_Read();
  6492  00017A  ECD2  F004         	call	_EUSART1_Read	;wreg free
  6493  00017E  0100               	movlb	0	; () banked
  6494  000180  6F94               	movwf	_datax& (0+255),b
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;eusart1.c: 262: datatobesolved = datax;
  6498  000182  C094  F042         	movff	_datax,_datatobesolved
  6499  000186  6A43               	clrf	_datatobesolved+1,c
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;eusart1.c: 264: bitStatusbefore1 = (datatobesolved >> 0) & 1;
  6503  000188  0E01               	movlw	1
  6504  00018A  1442               	andwf	_datatobesolved,w,c
  6505  00018C  6F8A               	movwf	_bitStatusbefore1& (0+255),b
  6506  00018E  6B8B               	clrf	(_bitStatusbefore1+1)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;eusart1.c: 265: bitStatusbefore2 = (datatobesolved >> 1) & 1;
  6510  000190  3443               	rlcf	_datatobesolved+1,w,c
  6511  000192  3043               	rrcf	_datatobesolved+1,w,c
  6512  000194  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6513  000196  3042               	rrcf	_datatobesolved,w,c
  6514  000198  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6515  00019A  0E01               	movlw	1
  6516  00019C  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6517  00019E  6F88               	movwf	_bitStatusbefore2& (0+255),b
  6518  0001A0  6B89               	clrf	(_bitStatusbefore2+1)& (0+255),b
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;eusart1.c: 266: bitStatusbefore3 = (datatobesolved >> 2) & 1;
  6522  0001A2  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6523  0001A6  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6524  0001AA  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6525  0001AC  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6526  0001AE  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6527  0001B0  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6528  0001B2  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6529  0001B4  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6530  0001B6  0E01               	movlw	1
  6531  0001B8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6532  0001BA  6F86               	movwf	_bitStatusbefore3& (0+255),b
  6533  0001BC  6B87               	clrf	(_bitStatusbefore3+1)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;eusart1.c: 267: bitStatusbefore4 = (datatobesolved >> 3) & 1;
  6537  0001BE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6538  0001C2  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6539  0001C6  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6540  0001C8  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6541  0001CA  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6542  0001CC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6543  0001CE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6544  0001D0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6545  0001D2  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6546  0001D4  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6547  0001D6  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6548  0001D8  0E01               	movlw	1
  6549  0001DA  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6550  0001DC  6F84               	movwf	_bitStatusbefore4& (0+255),b
  6551  0001DE  6B85               	clrf	(_bitStatusbefore4+1)& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eusart1.c: 268: bitStatusbefore5 = (datatobesolved >> 4) & 1;
  6555  0001E0  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6556  0001E4  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6557  0001E8  0E04               	movlw	4
  6558  0001EA  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6559  0001EC                     i2u1018_45:
  6560  0001EC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6561  0001EE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6562  0001F0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6563  0001F2  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6564  0001F4  D7FB               	goto	i2u1018_45
  6565  0001F6  0E01               	movlw	1
  6566  0001F8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6567  0001FA  6F82               	movwf	_bitStatusbefore5& (0+255),b
  6568  0001FC  6B83               	clrf	(_bitStatusbefore5+1)& (0+255),b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;eusart1.c: 269: bitStatusbefore6 = (datatobesolved >> 5) & 1;
  6572  0001FE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6573  000202  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6574  000206  0E05               	movlw	5
  6575  000208  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6576  00020A                     i2u1019_45:
  6577  00020A  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6578  00020C  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6579  00020E  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6580  000210  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6581  000212  D7FB               	goto	i2u1019_45
  6582  000214  0E01               	movlw	1
  6583  000216  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6584  000218  6F80               	movwf	_bitStatusbefore6& (0+255),b
  6585  00021A  6B81               	clrf	(_bitStatusbefore6+1)& (0+255),b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;eusart1.c: 270: bitStatusbefore7 = (datatobesolved >> 6) & 1;
  6589  00021C  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6590  000220  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6591  000224  0E06               	movlw	6
  6592  000226  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6593  000228                     i2u1020_45:
  6594  000228  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6595  00022A  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6596  00022C  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6597  00022E  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6598  000230  D7FB               	goto	i2u1020_45
  6599  000232  0E01               	movlw	1
  6600  000234  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6601  000236  6F7E               	movwf	_bitStatusbefore7& (0+255),b
  6602  000238  6B7F               	clrf	(_bitStatusbefore7+1)& (0+255),b
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;eusart1.c: 272: bitStatus1 = bitStatusbefore1<<0;
  6606  00023A  C08A  F07A         	movff	_bitStatusbefore1,_bitStatus1
  6607  00023E  C08B  F07B         	movff	_bitStatusbefore1+1,_bitStatus1+1
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;eusart1.c: 273: bitStatus2 = bitStatusbefore2<<1;
  6611  000242  90D8               	bcf	status,0,c
  6612  000244  3588               	rlcf	_bitStatusbefore2& (0+255),w,b
  6613  000246  6F78               	movwf	_bitStatus2& (0+255),b
  6614  000248  3589               	rlcf	(_bitStatusbefore2+1)& (0+255),w,b
  6615  00024A  6F79               	movwf	(_bitStatus2+1)& (0+255),b
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;eusart1.c: 274: bitStatus3 = bitStatusbefore3<<2;
  6619  00024C  C086  F009         	movff	_bitStatusbefore3,??_EUSART1_Receive_ISR
  6620  000250  C087  F00A         	movff	_bitStatusbefore3+1,??_EUSART1_Receive_ISR+1
  6621  000254  90D8               	bcf	status,0,c
  6622  000256  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6623  000258  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6624  00025A  90D8               	bcf	status,0,c
  6625  00025C  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6626  00025E  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6627  000260  C009  F076         	movff	??_EUSART1_Receive_ISR,_bitStatus3
  6628  000264  C00A  F077         	movff	??_EUSART1_Receive_ISR+1,_bitStatus3+1
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;eusart1.c: 275: bitStatus4 = bitStatusbefore4<<3;
  6632  000268  C084  F009         	movff	_bitStatusbefore4,??_EUSART1_Receive_ISR
  6633  00026C  C085  F00A         	movff	_bitStatusbefore4+1,??_EUSART1_Receive_ISR+1
  6634  000270  90D8               	bcf	status,0,c
  6635  000272  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6636  000274  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6637  000276  90D8               	bcf	status,0,c
  6638  000278  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6639  00027A  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6640  00027C  90D8               	bcf	status,0,c
  6641  00027E  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6642  000280  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6643  000282  C009  F074         	movff	??_EUSART1_Receive_ISR,_bitStatus4
  6644  000286  C00A  F075         	movff	??_EUSART1_Receive_ISR+1,_bitStatus4+1
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;eusart1.c: 276: bitStatus5 = bitStatusbefore5<<4;
  6648  00028A  C082  F009         	movff	_bitStatusbefore5,??_EUSART1_Receive_ISR
  6649  00028E  C083  F00A         	movff	_bitStatusbefore5+1,??_EUSART1_Receive_ISR+1
  6650  000292  3A09               	swapf	??_EUSART1_Receive_ISR,f,c
  6651  000294  3A0A               	swapf	??_EUSART1_Receive_ISR+1,f,c
  6652  000296  0EF0               	movlw	240
  6653  000298  160A               	andwf	??_EUSART1_Receive_ISR+1,f,c
  6654  00029A  5009               	movf	??_EUSART1_Receive_ISR,w,c
  6655  00029C  0B0F               	andlw	15
  6656  00029E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6657  0002A0  0EF0               	movlw	240
  6658  0002A2  1609               	andwf	??_EUSART1_Receive_ISR,f,c
  6659  0002A4  C009  F072         	movff	??_EUSART1_Receive_ISR,_bitStatus5
  6660  0002A8  C00A  F073         	movff	??_EUSART1_Receive_ISR+1,_bitStatus5+1
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;eusart1.c: 277: bitStatus6 = bitStatusbefore6<<5;
  6664  0002AC  C080  F009         	movff	_bitStatusbefore6,??_EUSART1_Receive_ISR
  6665  0002B0  C081  F00A         	movff	_bitStatusbefore6+1,??_EUSART1_Receive_ISR+1
  6666  0002B4  0E05               	movlw	5
  6667  0002B6                     i2u1021_45:
  6668  0002B6  90D8               	bcf	status,0,c
  6669  0002B8  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6670  0002BA  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6671  0002BC  2EE8               	decfsz	wreg,f,c
  6672  0002BE  D7FB               	goto	i2u1021_45
  6673  0002C0  C009  F070         	movff	??_EUSART1_Receive_ISR,_bitStatus6
  6674  0002C4  C00A  F071         	movff	??_EUSART1_Receive_ISR+1,_bitStatus6+1
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;eusart1.c: 278: bitStatus7 = bitStatusbefore7<<6;
  6678  0002C8  C07E  F009         	movff	_bitStatusbefore7,??_EUSART1_Receive_ISR
  6679  0002CC  C07F  F00A         	movff	_bitStatusbefore7+1,??_EUSART1_Receive_ISR+1
  6680  0002D0  0E06               	movlw	6
  6681  0002D2                     i2u1022_45:
  6682  0002D2  90D8               	bcf	status,0,c
  6683  0002D4  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6684  0002D6  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6685  0002D8  2EE8               	decfsz	wreg,f,c
  6686  0002DA  D7FB               	goto	i2u1022_45
  6687  0002DC  C009  F06E         	movff	??_EUSART1_Receive_ISR,_bitStatus7
  6688  0002E0  C00A  F06F         	movff	??_EUSART1_Receive_ISR+1,_bitStatus7+1
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;eusart1.c: 280: dataresult = bitStatus7 | bitStatus6 | bitStatus5 | bitStatus4 | bitSta
      +                          tus3 | bitStatus2 | bitStatus1;
  6692  0002E4  5170               	movf	_bitStatus6& (0+255),w,b
  6693  0002E6  116E               	iorwf	_bitStatus7& (0+255),w,b
  6694  0002E8  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6695  0002EA  5171               	movf	(_bitStatus6+1)& (0+255),w,b
  6696  0002EC  116F               	iorwf	(_bitStatus7+1)& (0+255),w,b
  6697  0002EE  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6698  0002F0  5172               	movf	_bitStatus5& (0+255),w,b
  6699  0002F2  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6700  0002F4  5173               	movf	(_bitStatus5+1)& (0+255),w,b
  6701  0002F6  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6702  0002F8  5174               	movf	_bitStatus4& (0+255),w,b
  6703  0002FA  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6704  0002FC  5175               	movf	(_bitStatus4+1)& (0+255),w,b
  6705  0002FE  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6706  000300  5176               	movf	_bitStatus3& (0+255),w,b
  6707  000302  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6708  000304  5177               	movf	(_bitStatus3+1)& (0+255),w,b
  6709  000306  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6710  000308  5178               	movf	_bitStatus2& (0+255),w,b
  6711  00030A  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6712  00030C  5179               	movf	(_bitStatus2+1)& (0+255),w,b
  6713  00030E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6714  000310  517A               	movf	_bitStatus1& (0+255),w,b
  6715  000312  1009               	iorwf	??_EUSART1_Receive_ISR,w,c
  6716  000314  6FD4               	movwf	_dataresult& (0+255),b
  6717  000316  517B               	movf	(_bitStatus1+1)& (0+255),w,b
  6718  000318  100A               	iorwf	??_EUSART1_Receive_ISR+1,w,c
  6719  00031A  6FD5               	movwf	(_dataresult+1)& (0+255),b
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;eusart1.c: 282: strncat(dataxstr, &dataresult, 1);
  6723  00031C  0E64               	movlw	low _dataxstr
  6724  00031E  6E01               	movwf	strncat@to,c
  6725  000320  0E04               	movlw	high _dataxstr
  6726  000322  6E02               	movwf	strncat@to+1,c
  6727  000324  0ED4               	movlw	low _dataresult
  6728  000326  6E03               	movwf	strncat@from,c
  6729  000328  0E00               	movlw	high _dataresult
  6730  00032A  6E04               	movwf	strncat@from+1,c
  6731  00032C  0E00               	movlw	0
  6732  00032E  6E06               	movwf	strncat@size+1,c
  6733  000330  0E01               	movlw	1
  6734  000332  6E05               	movwf	strncat@size,c
  6735  000334  EC48  F004         	call	_strncat	;wreg free
  6736  000338  0012               	return	
  6737  00033A                     __end_of_EUSART1_Receive_ISR:
  6738                           	opt stack 0
  6739                           tosu	equ	0xFFF
  6740                           tosh	equ	0xFFE
  6741                           tosl	equ	0xFFD
  6742                           pclatu	equ	0xFFB
  6743                           pclath	equ	0xFFA
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           intcon2	equ	0xFF1
  6752                           intcon3	equ	0xFF0
  6753                           indf0	equ	0xFEF
  6754                           postinc0	equ	0xFEE
  6755                           fsr0h	equ	0xFEA
  6756                           fsr0l	equ	0xFE9
  6757                           wreg	equ	0xFE8
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           fsr2h	equ	0xFDA
  6764                           fsr2l	equ	0xFD9
  6765                           status	equ	0xFD8
  6766                           
  6767 ;; *************** function _strncat *****************
  6768 ;; Defined at:
  6769 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncat.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  to              2    0[COMRAM] PTR unsigned char 
  6772 ;;		 -> dataxstr(2048), 
  6773 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6774 ;;		 -> dataresult(2), 
  6775 ;;  size            2    4[COMRAM] unsigned int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  cp              2    6[COMRAM] PTR unsigned char 
  6778 ;;		 -> dataxstr(2048), 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2    0[COMRAM] PTR unsigned char 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;Total ram usage:        8 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_EUSART1_Receive_ISR
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text54
  6802  000890                     __ptext54:
  6803                           	opt stack 0
  6804  000890                     _strncat:
  6805                           	opt stack 24
  6806                           
  6807                           ;incstack = 0
  6808  000890  C001  F007         	movff	strncat@to,strncat@cp
  6809  000894  C002  F008         	movff	strncat@to+1,strncat@cp+1
  6810  000898  D002               	goto	i2l3328
  6811  00089A  4A07               	infsnz	strncat@cp,f,c
  6812  00089C  2A08               	incf	strncat@cp+1,f,c
  6813  00089E                     i2l3328:
  6814  00089E  C007  FFD9         	movff	strncat@cp,fsr2l
  6815  0008A2  C008  FFDA         	movff	strncat@cp+1,fsr2h
  6816  0008A6  50DF               	movf	indf2,w,c
  6817  0008A8  B4D8               	btfsc	status,2,c
  6818  0008AA  D008               	goto	i2l3331
  6819  0008AC  D7F6               	goto	i2l3329
  6820  0008AE  0605               	decf	strncat@size,f,c
  6821  0008B0  A0D8               	btfss	status,0,c
  6822  0008B2  0606               	decf	strncat@size+1,f,c
  6823  0008B4  4A07               	infsnz	strncat@cp,f,c
  6824  0008B6  2A08               	incf	strncat@cp+1,f,c
  6825  0008B8  4A03               	infsnz	strncat@from,f,c
  6826  0008BA  2A04               	incf	strncat@from+1,f,c
  6827  0008BC                     i2l3331:
  6828  0008BC  5005               	movf	strncat@size,w,c
  6829  0008BE  1006               	iorwf	strncat@size+1,w,c
  6830  0008C0  B4D8               	btfsc	status,2,c
  6831  0008C2  D00D               	goto	i2u899_40
  6832  0008C4  C003  FFD9         	movff	strncat@from,fsr2l
  6833  0008C8  C004  FFDA         	movff	strncat@from+1,fsr2h
  6834  0008CC  C007  FFE9         	movff	strncat@cp,fsr0l
  6835  0008D0  C008  FFEA         	movff	strncat@cp+1,fsr0h
  6836  0008D4  CFDF FFEF          	movff	indf2,indf0
  6837  0008D8  50EF               	movf	indf0,w,c
  6838  0008DA  A4D8               	btfss	status,2,c
  6839  0008DC  D7E8               	goto	i2l3332
  6840  0008DE                     i2u899_40:
  6841  0008DE  5005               	movf	strncat@size,w,c
  6842  0008E0  1006               	iorwf	strncat@size+1,w,c
  6843  0008E2  A4D8               	btfss	status,2,c
  6844  0008E4  0012               	return	
  6845  0008E6  C007  FFD9         	movff	strncat@cp,fsr2l
  6846  0008EA  C008  FFDA         	movff	strncat@cp+1,fsr2h
  6847  0008EE  0E00               	movlw	0
  6848  0008F0  6EDF               	movwf	indf2,c
  6849  0008F2  0012               	return	
  6850  0008F4                     __end_of_strncat:
  6851                           	opt stack 0
  6852                           tosu	equ	0xFFF
  6853                           tosh	equ	0xFFE
  6854                           tosl	equ	0xFFD
  6855                           pclatu	equ	0xFFB
  6856                           pclath	equ	0xFFA
  6857                           tblptru	equ	0xFF8
  6858                           tblptrh	equ	0xFF7
  6859                           tblptrl	equ	0xFF6
  6860                           tablat	equ	0xFF5
  6861                           prodh	equ	0xFF4
  6862                           prodl	equ	0xFF3
  6863                           intcon	equ	0xFF2
  6864                           intcon2	equ	0xFF1
  6865                           intcon3	equ	0xFF0
  6866                           indf0	equ	0xFEF
  6867                           postinc0	equ	0xFEE
  6868                           fsr0h	equ	0xFEA
  6869                           fsr0l	equ	0xFE9
  6870                           wreg	equ	0xFE8
  6871                           fsr1h	equ	0xFE2
  6872                           fsr1l	equ	0xFE1
  6873                           indf2	equ	0xFDF
  6874                           postinc2	equ	0xFDE
  6875                           postdec2	equ	0xFDD
  6876                           fsr2h	equ	0xFDA
  6877                           fsr2l	equ	0xFD9
  6878                           status	equ	0xFD8
  6879                           
  6880 ;; *************** function _EUSART1_Read *****************
  6881 ;; Defined at:
  6882 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  readValue       1    0[COMRAM] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;Total ram usage:        1 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_EUSART1_Receive_ISR
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text55
  6910  0009A4                     __ptext55:
  6911                           	opt stack 0
  6912  0009A4                     _EUSART1_Read:
  6913                           	opt stack 24
  6914                           
  6915                           ;eusart1.c: 176: uint8_t readValue = 0;
  6916                           
  6917                           ;incstack = 0
  6918  0009A4  0E00               	movlw	0
  6919  0009A6  6E01               	movwf	EUSART1_Read@readValue,c
  6920  0009A8                     
  6921                           ;eusart1.c: 179: {
  6922  0009A8  0100               	movlb	0	; () banked
  6923  0009AA  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  6924  0009AC  B4D8               	btfsc	status,2,c
  6925  0009AE  D7FC               	goto	i2l2531
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;eusart1.c: 180: }
  6929                           ;eusart1.c: 182: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxTail];
  6930                           
  6931                           ; BSR set to: 0
  6932  0009B0  5047               	movf	_eusart1RxTail,w,c	;volatile
  6933  0009B2  0D01               	mullw	1
  6934  0009B4  0E46               	movlw	low _eusart1RxStatusBuffer
  6935  0009B6  24F3               	addwf	prodl,w,c
  6936  0009B8  6ED9               	movwf	fsr2l,c
  6937  0009BA  0E00               	movlw	high _eusart1RxStatusBuffer
  6938  0009BC  20F4               	addwfc	prodh,w,c
  6939  0009BE  6EDA               	movwf	fsr2h,c
  6940  0009C0  50DF               	movf	indf2,w,c
  6941  0009C2  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6942                           
  6943                           ;eusart1.c: 184: readValue = eusart1RxBuffer[eusart1RxTail++];
  6944  0009C4  5047               	movf	_eusart1RxTail,w,c	;volatile
  6945  0009C6  0D01               	mullw	1
  6946  0009C8  0E97               	movlw	low _eusart1RxBuffer
  6947  0009CA  24F3               	addwf	prodl,w,c
  6948  0009CC  6ED9               	movwf	fsr2l,c
  6949  0009CE  0E00               	movlw	high _eusart1RxBuffer
  6950  0009D0  20F4               	addwfc	prodh,w,c
  6951  0009D2  6EDA               	movwf	fsr2h,c
  6952  0009D4  50DF               	movf	indf2,w,c
  6953  0009D6  6E01               	movwf	EUSART1_Read@readValue,c
  6954                           
  6955                           ; BSR set to: 0
  6956  0009D8  2A47               	incf	_eusart1RxTail,f,c	;volatile
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;eusart1.c: 185: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  6960  0009DA  5047               	movf	_eusart1RxTail,w,c	;volatile
  6961  0009DC  B4D8               	btfsc	status,2,c
  6962  0009DE  D002               	goto	i2l2533
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;eusart1.c: 186: {
  6966                           ;eusart1.c: 187: eusart1RxTail = 0;
  6967  0009E0  0E00               	movlw	0
  6968  0009E2  6E47               	movwf	_eusart1RxTail,c	;volatile
  6969  0009E4                     i2l2533:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;eusart1.c: 188: }
  6973                           ;eusart1.c: 189: PIE1bits.RC1IE = 0;
  6974                           
  6975                           ; BSR set to: 0
  6976  0009E4  9A9D               	bcf	3997,5,c	;volatile
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;eusart1.c: 190: eusart1RxCount--;
  6980  0009E6  0796               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;eusart1.c: 191: PIE1bits.RC1IE = 1;
  6984  0009E8  8A9D               	bsf	3997,5,c	;volatile
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;eusart1.c: 193: return readValue;
  6988  0009EA  5001               	movf	EUSART1_Read@readValue,w,c
  6989  0009EC  0012               	return	
  6990  0009EE                     __end_of_EUSART1_Read:
  6991                           	opt stack 0
  6992                           tosu	equ	0xFFF
  6993                           tosh	equ	0xFFE
  6994                           tosl	equ	0xFFD
  6995                           pclatu	equ	0xFFB
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           intcon3	equ	0xFF0
  7006                           indf0	equ	0xFEF
  7007                           postinc0	equ	0xFEE
  7008                           fsr0h	equ	0xFEA
  7009                           fsr0l	equ	0xFE9
  7010                           wreg	equ	0xFE8
  7011                           fsr1h	equ	0xFE2
  7012                           fsr1l	equ	0xFE1
  7013                           indf2	equ	0xFDF
  7014                           postinc2	equ	0xFDE
  7015                           postdec2	equ	0xFDD
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7021 ;; Defined at:
  7022 ;;		line 303 in file "mcc_generated_files/eusart1.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		None
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        0 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_EUSART1_Initialize
  7046 ;;		_EUSART1_Receive_ISR
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text56
  7051  000D76                     __ptext56:
  7052                           	opt stack 0
  7053  000D76                     _EUSART1_DefaultOverrunErrorHandler:
  7054                           	opt stack 24
  7055                           
  7056                           ;eusart1.c: 306: RCSTA1bits.CREN = 0;
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;incstack = 0
  7060  000D76  98AB               	bcf	4011,4,c	;volatile
  7061                           
  7062                           ;eusart1.c: 307: RCSTA1bits.CREN = 1;
  7063  000D78  88AB               	bsf	4011,4,c	;volatile
  7064  000D7A  0012               	return		;funcret
  7065  000D7C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7066                           	opt stack 0
  7067                           tosu	equ	0xFFF
  7068                           tosh	equ	0xFFE
  7069                           tosl	equ	0xFFD
  7070                           pclatu	equ	0xFFB
  7071                           pclath	equ	0xFFA
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           intcon2	equ	0xFF1
  7080                           intcon3	equ	0xFF0
  7081                           indf0	equ	0xFEF
  7082                           postinc0	equ	0xFEE
  7083                           fsr0h	equ	0xFEA
  7084                           fsr0l	equ	0xFE9
  7085                           wreg	equ	0xFE8
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           fsr2h	equ	0xFDA
  7092                           fsr2l	equ	0xFD9
  7093                           status	equ	0xFD8
  7094                           
  7095 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7096 ;; Defined at:
  7097 ;;		line 301 in file "mcc_generated_files/eusart1.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		None
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_EUSART1_Initialize
  7121 ;;		_EUSART1_Receive_ISR
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text57
  7126  000D94                     __ptext57:
  7127                           	opt stack 0
  7128  000D94                     _EUSART1_DefaultFramingErrorHandler:
  7129                           	opt stack 24
  7130                           
  7131                           ;incstack = 0
  7132  000D94  0012               	return		;funcret
  7133  000D96                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7134                           	opt stack 0
  7135                           tosu	equ	0xFFF
  7136                           tosh	equ	0xFFE
  7137                           tosl	equ	0xFFD
  7138                           pclatu	equ	0xFFB
  7139                           pclath	equ	0xFFA
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           intcon	equ	0xFF2
  7147                           intcon2	equ	0xFF1
  7148                           intcon3	equ	0xFF0
  7149                           indf0	equ	0xFEF
  7150                           postinc0	equ	0xFEE
  7151                           fsr0h	equ	0xFEA
  7152                           fsr0l	equ	0xFE9
  7153                           wreg	equ	0xFE8
  7154                           fsr1h	equ	0xFE2
  7155                           fsr1l	equ	0xFE1
  7156                           indf2	equ	0xFDF
  7157                           postinc2	equ	0xFDE
  7158                           postdec2	equ	0xFDD
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8
  7162                           
  7163 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7164 ;; Defined at:
  7165 ;;		line 311 in file "mcc_generated_files/eusart1.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;Total ram usage:        0 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    1
  7186 ;; This function calls:
  7187 ;;		_EUSART1_RxDataHandler
  7188 ;; This function is called by:
  7189 ;;		_EUSART1_Initialize
  7190 ;;		_EUSART1_Receive_ISR
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text58
  7195  000D7C                     __ptext58:
  7196                           	opt stack 0
  7197  000D7C                     _EUSART1_DefaultErrorHandler:
  7198                           	opt stack 23
  7199                           
  7200                           ;eusart1.c: 312: EUSART1_RxDataHandler();
  7201                           
  7202                           ;incstack = 0
  7203  000D7C  EC8E  F005         	call	_EUSART1_RxDataHandler	;wreg free
  7204  000D80  0012               	return		;funcret
  7205  000D82                     __end_of_EUSART1_DefaultErrorHandler:
  7206                           	opt stack 0
  7207                           tosu	equ	0xFFF
  7208                           tosh	equ	0xFFE
  7209                           tosl	equ	0xFFD
  7210                           pclatu	equ	0xFFB
  7211                           pclath	equ	0xFFA
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           intcon3	equ	0xFF0
  7221                           indf0	equ	0xFEF
  7222                           postinc0	equ	0xFEE
  7223                           fsr0h	equ	0xFEA
  7224                           fsr0l	equ	0xFE9
  7225                           wreg	equ	0xFE8
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           indf2	equ	0xFDF
  7229                           postinc2	equ	0xFDE
  7230                           postdec2	equ	0xFDD
  7231                           fsr2h	equ	0xFDA
  7232                           fsr2l	equ	0xFD9
  7233                           status	equ	0xFD8
  7234                           
  7235 ;; *************** function _EUSART1_RxDataHandler *****************
  7236 ;; Defined at:
  7237 ;;		line 291 in file "mcc_generated_files/eusart1.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_EUSART1_Receive_ISR
  7261 ;;		_EUSART1_DefaultErrorHandler
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text59
  7266  000B1C                     __ptext59:
  7267                           	opt stack 0
  7268  000B1C                     _EUSART1_RxDataHandler:
  7269                           	opt stack 24
  7270                           
  7271                           ;eusart1.c: 293: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7272                           
  7273                           ;incstack = 0
  7274  000B1C  5048               	movf	_eusart1RxHead,w,c	;volatile
  7275  000B1E  0D01               	mullw	1
  7276  000B20  0E97               	movlw	low _eusart1RxBuffer
  7277  000B22  24F3               	addwf	prodl,w,c
  7278  000B24  6ED9               	movwf	fsr2l,c
  7279  000B26  0E00               	movlw	high _eusart1RxBuffer
  7280  000B28  20F4               	addwfc	prodh,w,c
  7281  000B2A  6EDA               	movwf	fsr2h,c
  7282  000B2C  CFAE FFDF          	movff	4014,indf2	;volatile
  7283  000B30  2A48               	incf	_eusart1RxHead,f,c	;volatile
  7284                           
  7285                           ;eusart1.c: 294: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7286  000B32  5048               	movf	_eusart1RxHead,w,c	;volatile
  7287  000B34  B4D8               	btfsc	status,2,c
  7288  000B36  D002               	goto	i2l2559
  7289                           
  7290                           ;eusart1.c: 295: {
  7291                           ;eusart1.c: 296: eusart1RxHead = 0;
  7292  000B38  0E00               	movlw	0
  7293  000B3A  6E48               	movwf	_eusart1RxHead,c	;volatile
  7294  000B3C                     i2l2559:
  7295                           
  7296                           ;eusart1.c: 297: }
  7297                           ;eusart1.c: 298: eusart1RxCount++;
  7298  000B3C  0100               	movlb	0	; () banked
  7299  000B3E  2B96               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7300                           
  7301                           ; BSR set to: 0
  7302  000B40  0012               	return		;funcret
  7303  000B42                     __end_of_EUSART1_RxDataHandler:
  7304                           	opt stack 0
  7305                           tosu	equ	0xFFF
  7306                           tosh	equ	0xFFE
  7307                           tosl	equ	0xFFD
  7308                           pclatu	equ	0xFFB
  7309                           pclath	equ	0xFFA
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           intcon2	equ	0xFF1
  7318                           intcon3	equ	0xFF0
  7319                           indf0	equ	0xFEF
  7320                           postinc0	equ	0xFEE
  7321                           fsr0h	equ	0xFEA
  7322                           fsr0l	equ	0xFE9
  7323                           wreg	equ	0xFE8
  7324                           fsr1h	equ	0xFE2
  7325                           fsr1l	equ	0xFE1
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           tosu	equ	0xFFF
  7333                           tosh	equ	0xFFE
  7334                           tosl	equ	0xFFD
  7335                           pclatu	equ	0xFFB
  7336                           pclath	equ	0xFFA
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           intcon2	equ	0xFF1
  7345                           intcon3	equ	0xFF0
  7346                           indf0	equ	0xFEF
  7347                           postinc0	equ	0xFEE
  7348                           fsr0h	equ	0xFEA
  7349                           fsr0l	equ	0xFE9
  7350                           wreg	equ	0xFE8
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           indf2	equ	0xFDF
  7354                           postinc2	equ	0xFDE
  7355                           postdec2	equ	0xFDD
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360                           	psect	text60
  7361  000000                     __ptext60:
  7362                           	opt stack 0
  7363                           tosu	equ	0xFFF
  7364                           tosh	equ	0xFFE
  7365                           tosl	equ	0xFFD
  7366                           pclatu	equ	0xFFB
  7367                           pclath	equ	0xFFA
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           intcon2	equ	0xFF1
  7376                           intcon3	equ	0xFF0
  7377                           indf0	equ	0xFEF
  7378                           postinc0	equ	0xFEE
  7379                           fsr0h	equ	0xFEA
  7380                           fsr0l	equ	0xFE9
  7381                           wreg	equ	0xFE8
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           postdec2	equ	0xFDD
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391                           	psect	rparam
  7392  0000                     tosu	equ	0xFFF
  7393                           tosh	equ	0xFFE
  7394                           tosl	equ	0xFFD
  7395                           pclatu	equ	0xFFB
  7396                           pclath	equ	0xFFA
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           intcon3	equ	0xFF0
  7406                           indf0	equ	0xFEF
  7407                           postinc0	equ	0xFEE
  7408                           fsr0h	equ	0xFEA
  7409                           fsr0l	equ	0xFE9
  7410                           wreg	equ	0xFE8
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           fsr2h	equ	0xFDA
  7417                           fsr2l	equ	0xFD9
  7418                           status	equ	0xFD8
  7419                           
  7420                           	psect	temp
  7421  00004C                     btemp:
  7422                           	opt stack 0
  7423  00004C                     	ds	12
  7424  0000                     wtemp0	set	btemp
  7425  0000                     wtemp1	set	btemp+2
  7426  0000                     wtemp2	set	btemp+4
  7427  0000                     wtemp3	set	btemp+6
  7428  0000                     wtemp4	set	btemp+8
  7429  0000                     wtemp5	set	btemp+10
  7430  0000                     wtemp6	set	btemp+1
  7431  0000                     ttemp0	set	btemp
  7432  0000                     ttemp1	set	btemp+3
  7433  0000                     ttemp2	set	btemp+6
  7434  0000                     ttemp3	set	btemp+9
  7435  0000                     ltemp0	set	btemp
  7436  0000                     ltemp1	set	btemp+4
  7437  0000                     ltemp2	set	btemp+8
  7438                           tosu	equ	0xFFF
  7439                           tosh	equ	0xFFE
  7440                           tosl	equ	0xFFD
  7441                           pclatu	equ	0xFFB
  7442                           pclath	equ	0xFFA
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodh	equ	0xFF4
  7448                           prodl	equ	0xFF3
  7449                           intcon	equ	0xFF2
  7450                           intcon2	equ	0xFF1
  7451                           intcon3	equ	0xFF0
  7452                           indf0	equ	0xFEF
  7453                           postinc0	equ	0xFEE
  7454                           fsr0h	equ	0xFEA
  7455                           fsr0l	equ	0xFE9
  7456                           wreg	equ	0xFE8
  7457                           fsr1h	equ	0xFE2
  7458                           fsr1l	equ	0xFE1
  7459                           indf2	equ	0xFDF
  7460                           postinc2	equ	0xFDE
  7461                           postdec2	equ	0xFDD
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         3467
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     61      75
    BANK0           160     16     159
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256      0     192
    BANK4           256      0     100
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S823$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), NULL(NULL[0]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 2
		 -> dataresult(BANK0[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 2048
		 -> dataxstr(BIGRAM[2048]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 2048
		 -> dataxstr(BIGRAM[2048]), 

    substring@s	PTR unsigned char  size(2) Largest target is 2048
		 -> dataxstr(BIGRAM[2048]), 

    substring@sub	PTR unsigned char  size(2) Largest target is 100
		 -> sub(BANK4[100]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 2048
		 -> dataxstr(BIGRAM[2048]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    S1968$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    S823$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S823$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    S283$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    S283$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> UpdateCfList@frequency(COMRAM[4]), ComputeMic@mic(COMRAM[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK2[16]), 
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@computedMic(COMRAM[4]), Channels(BANK2[224]), loRa.activationParameters.applicationEui(BANK1[8]), 
		 -> loRa.activationParameters.deviceEui(BANK1[8]), macBuffer(BIGRAM[271]), loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), 
		 -> AESEncodeLoRa@useKey(COMRAM[16]), RadioConfiguration(BANK0[54]), AESCmac@x(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK2[16]), Channels(BANK2[224]), macBuffer(BIGRAM[271]), 
		 -> loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->_SwTimersInterrupt
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _EUSART1_Receive_ISR->_strncat

Critical Paths under _main in BANK0

    _main->_substring
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2755
                                             14 BANK0      2     2      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _substring
 ---------------------------------------------------------------------------------
 (1) _substring                                           14     6      8     556
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     555
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          10    10      0    1751
                                             51 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1295
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     940
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (8) _TMR_ISR_lora                                         2     2      0     940
                                             49 COMRAM     2     2      0
                  _SwTimersInterrupt
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (9) _TMR_SwapTimer                                        2     0      2     624
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     355
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _SwTimersInterrupt                                   17    13      4     316
                                             32 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (10) _TMR_GetDeltaTime                                   24    20      4      69
                                              8 COMRAM    24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO2_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO1_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO0_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0     456
                                              8 COMRAM     3     3      0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
                       _EUSART1_Read
              _EUSART1_RxDataHandler
                            _strncat
 ---------------------------------------------------------------------------------
 (7) _strncat                                              8     2      6     432
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _substring

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_Read *
     _EUSART1_RxDataHandler *
     _strncat *
   _EUSART1_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC *
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     A1E      37       66.5%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      9F       5       99.4%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3D      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40D      12        0.0%
DATA                 0      0     E2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 21 16:15:02 2020

                    __end_of_DIO3_ISR_Lora_Init 0D8C                        _eusart1TxBufferRemaining 00F2  
            __size_of_IOCB4_SetInterruptHandler 000A                                    _TMR_ISR_lora 08F4  
                    ?_IOCB4_SetInterruptHandler 00D6                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            _DIO2_ISR_Lora_Init 0C92                                 _timer1ReloadVal 00EA  
                                           _sub 0400                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   _INT1_CallBack 0C04  
                           ?_DIO2_ISR_Lora_Init 0001                              __size_of_IOCB4_ISR 0020  
                                          l2540 0A48                                            l2541 0A6C  
                                          l2542 0A6A                                            l2750 04BA  
                                          l2757 086A                                            l2758 082E  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _TMR1 000FCE  
                                          _TMR5 000F4F                                            _WPUB 000F61  
                        ??_LORAWAN_PlatformInit 00D8                                   _INT2_CallBack 0BE4  
                                 _EUSART1_Write 0A32                                            _loRa 0100  
                                          _main 04A4                                   ?_EUSART1_Read 0001  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 004C                                   __CFG_BORV$190 000000  
             __size_of_INT2_SetInterruptHandler 000A                       ?_INT2_SetInterruptHandler 00D6  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00CC                                 _timer5ReloadVal 00E6  
                                 __CFG_IESO$OFF 000000                      ??_TMR1_SetInterruptHandler 00D8  
                        __size_of_TMR_SwapTimer 0044                                    ___param_bank 000000  
                          ??_DIO2_ISR_Lora_Init 00D8                        __size_of_SystemTimerInit 0006  
                              __end_of_INT1_ISR 0D5E                                __end_of_INT2_ISR 0D56  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0CDE  
                                         l10574 0A36                                           l12190 04BA  
                         _eusart1RxStatusBuffer 0046                                           ?_main 0001  
             __end_of_IOCB4_SetInterruptHandler 0CFE                                           _T1CON 000FCD  
                                         _LATC2 007C5A                                           u12730 04CA  
                                         _LATD3 007C63                                           _T5CON 000F4E  
                                         u12957 050C                                           u12967 0566  
                                         u12977 057E                                           u12987 0596  
                                         u12997 05AE                                  __CFG_DEBUG$OFF 000000  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TMR5H 000F50                                           _TMR5L 000F4F  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _TXREG 000FAD  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 0A70                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 0C72                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 0001                                  __CFG_EBTRB$OFF 000000  
                                         _datax 0094                                           __rcon 0049  
                       __end_of_PIN_MANAGER_IOC 0D4E                  ??_INT1_DefaultInterruptHandler 0001  
                                         _randx 00F3                              __CFG_MCLRE$EXTMCLR 000000  
                        _UpdateJoinSuccessState 000000                                  ?_INT2_CallBack 0001  
                      _INT1_SetInterruptHandler 0D08                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 0ACC                                           pclath 000FFA  
                                         tablat 000FF5                                           ltemp0 004C  
                                         ltemp1 0050                                           ltemp2 0054  
                                ??_EUSART1_Read 0001                                           ttemp0 004C  
                                         ttemp1 004F                                           ttemp2 0052  
                                         ttemp3 0055                                           status 000FD8  
                                         wtemp0 004C                                           wtemp1 004E  
                                         wtemp2 0050                                           wtemp3 0052  
                                         wtemp4 0054                                           wtemp5 0056  
                                         wtemp6 004D                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncat 08F4      __end_of_EUSART1_DefaultFramingErrorHandler 0D96  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 0D94  
                               _TMR1_WriteTimer 0C42                                  __CFG_PBADEN$ON 000000  
               ??_IOCB4_DefaultInterruptHandler 0001                                 _TMR5_Initialize 0C24  
                               __initialization 06E0                     __size_of_DIO1_ISR_Lora_Init 0010  
                    __end_of_EUSART1_Initialize 0822                                    __end_of_main 05E2  
                             ?_TMR_GetDeltaTime 0009                               __end_of_IOCB4_ISR 0BE4  
                   ?_INTERRUPT_InterruptManager 0001                              ??_TMR_GetDeltaTime 000D  
                                        ??_main 00E4                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 000E                           ?_EUSART1_Transmit_ISR 0001  
                                 _TMR_SwapTimer 09EE                  _LORAWAN_ReceiveWindow1Callback 000000  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T5GCON 000F4D                         TMR1_WriteTimer@timerVal 0001  
                _LORAWAN_ReceiveWindow2Callback 000000                                          i2l2171 094E  
                                        i2l2251 0066                                          i2l2244 0040  
                                        i2l1525 0418                                          i2l1526 0492  
                                        i2l2246 004C                                          i2l1535 09FA  
                                        i2l2248 0058                                          i2l2531 09A8  
                                        i2l3331 08BC                                          i2l3332 08AE  
                                        i2l2533 09E4                                  __CFG_WDTEN$OFF 000000  
                                        i2l3328 089E                                          i2l1592 06C6  
                                        i2l3329 089A                                          i2l1593 0604  
                                        i2l2554 0172                                          i2l2546 0A9C  
                                        i2l2547 0A98                                          i2l1595 0660  
                                        i2l2627 0C54                                          i2l1597 06C4  
                                        i2l2559 0B3C                                          i2l8766 0A0E  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TRISC2 007CA2                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                      __end_of_DIO0_ISR_Lora_Init 0CC2  
                                        _STable FE67                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 0D8E           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 0D8C                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 00D6                                          clear_0 0748  
                                        clear_1 075A                                          clear_2 0766  
                                        clear_3 0772                                          clear_4 077E  
                                        clear_5 078A                                          clear_6 0796  
              ??_EUSART1_SetOverrunErrorHandler 00D8                 ?_EUSART1_SetOverrunErrorHandler 00D6  
                   __size_of_DIO5_ISR_Lora_Init 0002            __end_of_INT2_DefaultInterruptHandler 0D92  
         __size_of_INT2_DefaultInterruptHandler 0002                    _INT2_DefaultInterruptHandler 0D90  
                               ??_INT1_CallBack 0001                               ??_SystemTimerInit 00D6  
                                ?_TMR_SwapTimer 0009                                    __mediumconst FE66  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_INT2_CallBack 0001  
                               ??_EUSART1_Write 00D6        TMR1_SetInterruptHandler@InterruptHandler 00D6  
     IOCB4_SetInterruptHandler@InterruptHandler 00D6        INT2_SetInterruptHandler@InterruptHandler 00D6  
      INT1_SetInterruptHandler@InterruptHandler 00D6                                ?_PIN_MANAGER_IOC 0001  
                       __end_of_TMR1_WriteTimer 0C5E                                       ??_strncat 0007  
                               _eusart1RxBuffer 0097                   __size_of_INTERRUPT_Initialize 0004  
                         __end_of_TMR1_CallBack 0BA4                                 _eusart1TxBuffer 0098  
                              ?_TMR1_Initialize 0001                         __end_of_TMR5_Initialize 0C42  
                             _SYSTEM_Initialize 0AF6                                      __accesstop 0060  
                       __end_of__initialization 079C                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                _maxPayloadSize FF77                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0026                   __end_of_EUSART1_RxDataHandler 0B42  
                                __pcstackCOMRAM 0001                                      ___inthi_sp 0EC0  
                                  __pidataBANK0 0CDE                                    __pidataBANK2 0C72  
                                  __pidataBANK3 0B64                             ??_SYSTEM_Initialize 00D8  
                              _bitStatusbefore1 008A                                _bitStatusbefore2 0088  
                              _bitStatusbefore3 0086                                _bitStatusbefore4 0084  
                              _bitStatusbefore5 0082                                _bitStatusbefore6 0080  
                              _bitStatusbefore7 007E                      __end_of_DIO4_ISR_Lora_Init 0D8A  
                                     ?_TMR1_ISR 0001                   ?_TMR1_DefaultInterruptHandler 0001  
                               _spreadingFactor FF8E           __end_of_IOCB4_DefaultInterruptHandler 0D90  
        __size_of_IOCB4_DefaultInterruptHandler 0002                   _IOCB4_DefaultInterruptHandler 0D8E  
                        _AutomaticReplyCallback 000000                     ??_IOCB4_SetInterruptHandler 00D8  
                          __end_of_EUSART1_Read 09EE                          ??_EUSART1_Transmit_ISR 0001  
                   __size_of_EXT_INT_Initialize 002A                                  _datatobesolved 0042  
                            _DIO3_ISR_Lora_Init 0D8A                         __size_of_TMR1_ReadTimer 0020  
              __end_of_INT2_SetInterruptHandler 0D08                     __end_of_EUSART1_Receive_ISR 033A  
                 ?_INT2_DefaultInterruptHandler 0001                       __end_of_SYSTEM_Initialize 0B1C  
                                 _eusart1RxHead 0048                                   _eusart1TxHead 009A  
                             ??_SPI2_Initialize 00D6                             ?_DIO3_ISR_Lora_Init 0001  
                                 _eusart1RxTail 0047                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                 _eusart1TxTail 0099               _EUSART1_TxDefaultInterruptHandler 01FD  
               ??_EUSART1_SetRxInterruptHandler 00D8                                 __CFG_PLLCFG$OFF 000000  
                        __end_of_maxPayloadSize FF7F                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                              SwTimersInterrupt@i 0031  
                        __size_of_DIO0_ISR_Lora 0006                                      _dataresult 00D4  
                        __size_of_DIO1_ISR_Lora 0006                                      _bitStatus1 007A  
                                    _bitStatus2 0078                                      _bitStatus3 0076  
                                    _bitStatus4 0074                                      _bitStatus5 0072  
                                    _bitStatus6 0070                                      _bitStatus7 006E  
                                  substring@sub 00D8                 __end_of_EUSART1_SetErrorHandler 0D44  
                            __CFG_CCP2MX$PORTC1 000000                          __size_of_DIO2_ISR_Lora 0006  
                                    ??_TMR1_ISR 0034                              __CFG_CCP3MX$PORTB5 000000  
                          ??_DIO3_ISR_Lora_Init 00D6                               _TMR_ISR_Lora_Init 0C82  
        __end_of_EUSART1_SetFramingErrorHandler 0D3A         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0D30                                 ??_TMR_SwapTimer 000B  
                            ?_TMR_ISR_Lora_Init 0001                      ??_INT1_SetInterruptHandler 00D8  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                           ??_TMR_ISR_Lora_Init 00D8                               __end_of_bandwidth FF8E  
                              ?_TMR1_WriteTimer 0001                              __size_of_substring 006E  
                         TMR_SwapTimer@timerVal 0009                                ?_TMR5_Initialize 0001  
                     _IOCB4_SetInterruptHandler 0CF4                       _AckRetransmissionCallback 000000  
                 __size_of_LORAWAN_PlatformInit 0022                                  _ticksAccounted 0064  
                       __end_of_spreadingFactor FF95                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                     __end_of_TMR_ISR_Lora_Init 0C92                     __size_of_DIO2_ISR_Lora_Init 0010  
                                       _devAddr 00F7                                         __pcinit 06E0  
                                       _appSKey 03A0                                         __ramtop 1000  
                      TMR1_ReadTimer@readValLow 0008                                _counterinterrupt 008C  
                                       __ptext0 04A4                                         __ptext1 0822  
                                       __ptext2 0AF6                                         __ptext3 0C24  
                                       __ptext4 0AA0                                         __ptext5 0CC2  
                                       __ptext6 0950                                         __ptext7 0CD0  
                                       __ptext8 0B42                                         __ptext9 0C82  
                                 _DIO0_ISR_Lora 0D70                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _IOCB4_ISR 0BC4                       TMR1_ReadTimer@readValHigh 0007  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 0CD0  
                  __end_of_macEndDevCmdReplyLen FF9C               __size_of_TMR1_SetInterruptHandler 000A  
                                 _DIO1_ISR_Lora 0D6A                              _EUSART1_Initialize 07A2  
                      ??_PIN_MANAGER_Initialize 00D8                       ?_TMR1_SetInterruptHandler 00D6  
                                       _nwkSKey 03B0                                       _T5CONbits 000F4E  
                 ??_EUSART1_DefaultErrorHandler 0001                       __size_of_TMR_GetDeltaTime 016A  
                                 _DIO2_ISR_Lora 0D64                      __size_of_SYSTEM_Initialize 0026  
                                       _strncat 0890                            end_of_initialization 079C  
                      _INT2_SetInterruptHandler 0CFE                             ?_EUSART1_Initialize 0001  
                         _RADIO_WatchdogTimeout 000000                  ??_INT2_DefaultInterruptHandler 0001  
                                    _modulation FF67                       _LORAWAN_LinkCheckCallback 000000  
                   _EUSART1_OverrunErrorHandler 01F7                                       i2u1020_45 0228  
                                     i2u1021_45 02B6                                       i2u1013_48 0102  
                                     i2u1013_49 0116                                       i2u1022_45 02D2  
                                     i2u1015_48 0130                                       i2u1015_49 0144  
                                     i2u1017_48 015E                                       i2u1018_45 01EC  
                                     i2u1019_45 020A                                       i2u1263_48 0070  
                                     i2u1263_49 0084                                       i2u1266_48 008E  
                                     i2u1266_49 00A2                      __end_of_DIO1_ISR_Lora_Init 0CB2  
                                    _ticksAdded 0068           __end_of_EUSART1_SetRxInterruptHandler 0D26  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 0D1C  
                                       postdec2 000FDD                                 _SystemTimerInit 0D5E  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 004A                            ??_EUSART1_Initialize 00D8  
                            _DIO0_ISR_Lora_Init 0CB2                               __end_of_substring 0890  
                                ?_DIO0_ISR_Lora 0001                           _INT1_InterruptHandler 00F0  
                                     _PORTBbits 000F81                    SwTimersInterrupt@timeElapsed 0029  
                                    ?_IOCB4_ISR 0001                                  ?_DIO1_ISR_Lora 0001  
                                _TMR1_ReadTimer 0BA4                                      _txPower433 FF9C  
                                    _txPower868 FFA2                             ?_DIO0_ISR_Lora_Init 0001  
                                ?_DIO2_ISR_Lora 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 00D6                                  _localDioStatus 004B  
                                  _EUSART1_Read 09A4                               __size_of_INT1_ISR 0008  
                             __size_of_INT2_ISR 0008            __size_of_EUSART1_DefaultErrorHandler 0006  
                          ??_DIO0_ISR_Lora_Init 00D8                                  __end_of_STable FF67  
                    __size_of_TMR_ISR_Lora_Init 0010                    __end_of_INTERRUPT_Initialize 0D86  
                    __end_of_DIO5_ISR_Lora_Init 0D88                                   ?_TMR_ISR_lora 0001  
                             __size_of_TMR1_ISR 0014                          ?_OSCILLATOR_Initialize 0001  
                        __end_of_TMR1_ReadTimer 0BC4                                 _SPI2_Initialize 0CC2  
                           start_initialization 06E0                              _DIO4_ISR_Lora_Init 0D88  
               __size_of_PIN_MANAGER_Initialize 0054                           __end_of_INT1_CallBack 0C24  
 EUSART1_SetRxInterruptHandler@interruptHandler 00D6   EUSART1_SetTxInterruptHandler@interruptHandler 00D6  
                         __end_of_INT2_CallBack 0C04                           __end_of_EUSART1_Write 0A70  
                           ?_DIO4_ISR_Lora_Init 0001                         __end_of_SystemTimerInit 0D64  
                           TMR_SwapTimer@oldVal 0090                        __size_of_PIN_MANAGER_IOC 000A  
                           TMR_SwapTimer@retVal 008E                        __size_of_TMR1_Initialize 002C  
                          _macEndDevCmdReplyLen FF95                           _EUSART1_RxDataHandler 0B1C  
                ?_EUSART1_SetRxInterruptHandler 00D6                                  ??_TMR_ISR_lora 0032  
                               ??_DIO0_ISR_Lora 0001                                     __pdataBANK0 00F3  
                                   __pdataBANK2 02F0                                     __pdataBANK3 03A0  
        SwTimersInterrupt@ticksToNextTimerEvent 002D                            ??_DIO4_ISR_Lora_Init 00D6  
                    __end_of_EXT_INT_Initialize 0AF6                              _RADIO_RxFSKTimeout 000000  
                        __size_of_TMR1_CallBack 0020                                 ??_DIO1_ISR_Lora 0001  
                        TMR_GetDeltaTime@retVal 0060                                 ?_TMR1_ReadTimer 0001  
                                _eusart1RxCount 0096                                     ??_IOCB4_ISR 0001  
                        TMR_GetDeltaTime@tmrVal 0092                                     __pbssBIGRAM 0464  
                               ??_DIO2_ISR_Lora 0001                                     __pbssCOMRAM 003E  
                    __end_of_DefaultChannels433 FFD2                      __end_of_DefaultChannels868 FFFC  
             _EUSART1_RxDefaultInterruptHandler 01FB                   __size_of_EUSART1_Transmit_ISR 0030  
                                 __pcstackBANK0 00D6                                _TMR_GetDeltaTime 033A  
               _UnconfirmedTransmissionCallback 000000                                       _aesBuffer 02E0  
               ??_EUSART1_SetTxInterruptHandler 00D8                ??_EUSART1_SetFramingErrorHandler 00D8  
               ?_EUSART1_SetFramingErrorHandler 00D6                    __size_of_EUSART1_Receive_ISR 0266  
                         _INT2_InterruptHandler 00EE                                       _bandwidth FF87  
                                     __pnvBANK0 00E6                                       __pnvBANK1 01F5  
                        _PIN_MANAGER_Initialize 0950                                       _bitStatus 007C  
                                     _macBuffer 0D73                                       _dioStatus 009D  
                             _SwTimersInterrupt 05E2                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 0CF4                                   __pmediumconst FE66  
                       __end_of_SPI2_Initialize 0CD0                              ?_SwTimersInterrupt 0021  
                   __size_of_DIO3_ISR_Lora_Init 0002                    ??_INTERRUPT_InterruptManager 0034  
                              __CFG_PRICLKEN$ON 000000                    __end_of_LORAWAN_PlatformInit 0B64  
                    ??_INT2_SetInterruptHandler 00D8                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0D7C     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 0D76                             ??_SwTimersInterrupt 0025  
                             _DutyCycleCallback 000000                            _EUSART1_ErrorHandler 01F5  
                         __end_of_TMR_SwapTimer 0A32                         _EUSART1_SetErrorHandler 0D3A  
                                   strncat@from 0003                                     strncat@size 0005  
                                      ?_strncat 0001                            _INTERRUPT_Initialize 0D82  
                                 _TMR1_CallBack 0B84                                        _INT1_ISR 0D56  
                                      _INT2_ISR 0D4E                                        _IOCBbits 000F62  
       EUSART1_SetErrorHandler@interruptHandler 00D6               __size_of_INT1_SetInterruptHandler 000A  
                          __end_of_rxWindowSize FF87                       ?_INT1_SetInterruptHandler 00D6  
                              ?_SystemTimerInit 0001                                       _reloadVal 0044  
                                      _PIE1bits 000F9D                       __end_of_SwTimersInterrupt 06E0  
                      __size_of_TMR1_WriteTimer 001C             __size_of_INTERRUPT_InterruptManager 00C4  
                    __end_of_DIO2_ISR_Lora_Init 0CA2                                        _PIR1bits 000F9E  
                                      _PIR5bits 000F7E                                        i2u902_48 0B92  
                                      i2u890_48 0C12                          ?_EUSART1_RxDataHandler 0001  
                                      i2u892_48 0BF2                        __size_of_TMR5_Initialize 001E  
                                      i2u894_48 0BD2                                        _RCONbits 000FD0  
                                     _rxPayload 003E                                        i2u899_40 08DE  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _TMR1_ISR 0C5E                                        _SSP2STAT 000F6D  
                             ??_PIN_MANAGER_IOC 0001                               ??_TMR1_Initialize 00D8  
                            _DIO1_ISR_Lora_Init 0CA2                                       _substring 0822  
                                      _Channels 0200                             ?_DIO1_ISR_Lora_Init 0001  
                                   _INTCON2bits 000FF1                                     _INTCON3bits 000FF0  
                                     copy_data0 06F4                                       copy_data1 0714  
                                     copy_data2 0734                           ?_INTERRUPT_Initialize 0001  
                                ?_TMR1_CallBack 0001                            __end_of_TMR_ISR_lora 0950  
                         EUSART1_Read@readValue 0001           __end_of_EUSART1_SetTxInterruptHandler 0D1C  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0D12  
                                      __Hrparam 0000                                        __Lrparam 0000  
                          ??_DIO1_ISR_Lora_Init 00D8                              __CFG_BOREN$SBORDIS 000000  
                         TMR1_ReadTimer@readVal 0005                       _ticksToScheduledInterrupt 00FB  
                             __CFG_P2BMX$PORTD2 000000                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 00D6                     __size_of_EUSART1_Initialize 0080  
                      _TMR1_SetInterruptHandler 0CEA                          _IOCB4_InterruptHandler 00EC  
                                   _radioBuffer 0C64                           _TMR1_InterruptHandler 00E8  
                     ??_EUSART1_SetErrorHandler 00D8             __end_of_EUSART1_DefaultErrorHandler 0D82  
                   _EUSART1_DefaultErrorHandler 0D7C                                  _rxWindowOffset FF6F  
                                    ?_substring 00D6                                      substring@c 00E2  
                                    substring@l 00DC                                      substring@p 00DA  
                                    substring@s 00D6                                        _dataxstr 0464  
                               _allocatedTimers 004A                  ?_IOCB4_DefaultInterruptHandler 0001  
                            _DIO5_ISR_Lora_Init 0D86                                        __ptext10 0CEA  
                                      __ptext11 0D5E                                        __ptext20 0ACC  
                                      __ptext12 0D86                                        __ptext21 0CFE  
                                      __ptext13 0D88                                      _T1GCONbits 000FCC  
                                      __ptext22 0D08                                        __ptext14 0D8A  
                                      __ptext31 0C5E                                        __ptext23 07A2  
                                      __ptext15 0C92                                        __ptext40 0D44  
                                      __ptext32 0B84                                        __ptext24 0D12  
                                      __ptext16 0CF4                                        __ptext41 0BC4  
                                      __ptext33 0D8C                                        __ptext25 0D1C  
                                      __ptext17 0CA2                                        __ptext50 0D70  
                                      __ptext42 0D64                                        __ptext34 08F4  
                                      __ptext26 0D26                                        __ptext18 0CB2  
                                      __ptext51 0D92                                        __ptext43 0D8E  
                                      __ptext35 09EE                                        __ptext27 0D30  
                                      __ptext19 0D82                                        __ptext60 0000  
                                      __ptext52 0A70                                        __ptext44 0D4E  
                                      __ptext36 0C42                                        __ptext28 0D3A  
                                      __ptext53 00D4                                        __ptext45 0BE4  
                                      __ptext37 05E2                                        __ptext29 0A32  
                                      __ptext54 0890                                        __ptext46 0D6A  
                                      __ptext38 033A                                        __ptext55 09A4  
                                      __ptext47 0D90                                        __ptext39 0BA4  
                                      __ptext56 0D76                                        __ptext48 0D56  
                                      __ptext57 0D94                                        __ptext49 0C04  
                                      __ptext58 0D7C                                        __ptext59 0B1C  
                                  _SSP2CON1bits 000F6C                             GenerateSubkey@F7103 02F0  
                              __size_of_strncat 0064                                        _counterx 006C  
                           ?_DIO5_ISR_Lora_Init 0001                                   __size_of_main 013E  
                                    _T5GCONbits 000F4D                            _LORAWAN_PlatformInit 0B42  
                               _FskSyncWordBuff FFFC                                   _timerOverflow 009C  
                    __size_of_SwTimersInterrupt 00FE                     __size_of_DIO0_ISR_Lora_Init 0010  
EUSART1_SetOverrunErrorHandler@interruptHandler 00D6                        __end_of_TMR_GetDeltaTime 04A4  
                                      _swTimers 0300                                ??_TMR1_ReadTimer 0003  
            __end_of_INTERRUPT_InterruptManager 00CC                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003                     _EUSART1_FramingErrorHandler 01F9  
                           _EUSART1_Receive_ISR 00D4                                    _SSP2STATbits 000F6D  
                          ??_DIO5_ISR_Lora_Init 00D6            __end_of_INT1_DefaultInterruptHandler 0D94  
         __size_of_INT1_DefaultInterruptHandler 0002                    _INT1_DefaultInterruptHandler 0D92  
                        __end_of_rxWindowOffset FF77                               ??_TMR5_Initialize 00D6  
                            __end_of_modulation FF6F                                   __roundCounter 009B  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 00D6  
                               ??_TMR1_CallBack 0034                              _EXT_INT_Initialize 0ACC  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                         ?_LORAWAN_PlatformInit 0001                         ?_PIN_MANAGER_Initialize 0001  
                            _DefaultChannels433 FFA8                              _DefaultChannels868 FFD2  
                           ?_EXT_INT_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0D30  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0D26  
                                    _RCSTA1bits 000FAB                                       strncat@cp 0007  
                                     strncat@to 0001                    __end_of_EUSART1_Transmit_ISR 0AA0  
                            __end_of_txPower433 FFA2                              __end_of_txPower868 FFA8  
                        __size_of_INT1_CallBack 0020  EUSART1_SetFramingErrorHandler@interruptHandler 00D6  
                ?_EUSART1_SetTxInterruptHandler 00D6                          __size_of_INT2_CallBack 0020  
                   __size_of_DIO4_ISR_Lora_Init 0002                          __size_of_EUSART1_Write 003E  
                            _eusart1RxLastError 0095                           __end_of_DIO0_ISR_Lora 0D76  
                          ??_EXT_INT_Initialize 00D8                                    _rxWindowSize FF7F  
                 ?_INT1_DefaultInterruptHandler 0001                           __end_of_DIO1_ISR_Lora 0D70  
                                   ??_substring 00DE                __end_of_INT1_SetInterruptHandler 0D12  
                         __size_of_TMR_ISR_lora 005C                               __CFG_T3CMX$PORTC0 000000  
                         __end_of_DIO2_ISR_Lora 0D6A                         __end_of_FskSyncWordBuff FFFF  
                         ??_EUSART1_Receive_ISR 0009                  __end_of_PIN_MANAGER_Initialize 09A4  
                             __CFG_FOSC$INTIO67 000000                                 _PIN_MANAGER_IOC 0D44  
                       ??_EUSART1_RxDataHandler 0001                                 _TMR1_Initialize 0AA0  
                            _RadioConfiguration 009E  
