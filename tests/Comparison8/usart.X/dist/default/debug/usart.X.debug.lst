

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 06 17:28:07 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 1.45
    92                           ; Generated 16/11/2017 GMT
    93                           ; 
    94                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18LF46K22 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   127  0000                     
   128 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   129  0000                     
   130 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   131  0000                     
   132 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   133  0000                     
   134 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   135  0000                     
   136 ;; Function _AckRetransmissionCallback is unused but had its address taken
   137  0000                     
   138 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   139  0000                     
   140 ;; Function _AutomaticReplyCallback is unused but had its address taken
   141  0000                     
   142 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   143  0000                     
   144 ;; Function _DutyCycleCallback is unused but had its address taken
   145  0000                     
   146                           	psect	idataBANK0
   147  000E52                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _ticksToScheduledInterrupt
   151  000E52  FFFF               	dw	65535
   152  000E54  FFFF               	dw	65535
   153                           
   154                           	psect	idataBANK1
   155  000E56                     __pidataBANK1:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _devAddr
   159  000E56  5E47               	dw	24135
   160  000E58  3DEF               	dw	15855
   161                           
   162                           	psect	idataBANK2
   163  000E5A                     __pidataBANK2:
   164                           	opt stack 0
   165                           
   166                           ;initializer for _randx
   167  000E5A  0001               	dw	1
   168  000E5C  0000               	dw	0
   169                           
   170                           	psect	idataBANK3
   171  000B4C                     __pidataBANK3:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _appSKey
   175  000B4C  96                 	db	150
   176  000B4D  23                 	db	35
   177  000B4E  5A                 	db	90
   178  000B4F  1F                 	db	31
   179  000B50  9A                 	db	154
   180  000B51  E1                 	db	225
   181  000B52  60                 	db	96
   182  000B53  36                 	db	54
   183  000B54  81                 	db	129
   184  000B55  C4                 	db	196
   185  000B56  E4                 	db	228
   186  000B57  B5                 	db	181
   187  000B58  54                 	db	84
   188  000B59  C3                 	db	195
   189  000B5A  CA                 	db	202
   190  000B5B  B5                 	db	181
   191                           
   192                           ;initializer for _nwkSKey
   193  000B5C  CB                 	db	203
   194  000B5D  1E                 	db	30
   195  000B5E  88                 	db	136
   196  000B5F  5D                 	db	93
   197  000B60  5D                 	db	93
   198  000B61  F1                 	db	241
   199  000B62  12                 	db	18
   200  000B63  D5                 	db	213
   201  000B64  08                 	db	8
   202  000B65  CC                 	db	204
   203  000B66  B9                 	db	185
   204  000B67  D1                 	db	209
   205  000B68  D4                 	db	212
   206  000B69  4B                 	db	75
   207  000B6A  1E                 	db	30
   208  000B6B  DF                 	db	223
   209                           
   210                           ;initializer for GenerateSubkey@F7103
   211  000B6C  00                 	db	0
   212  000B6D  00                 	db	0
   213  000B6E  00                 	db	0
   214  000B6F  00                 	db	0
   215  000B70  00                 	db	0
   216  000B71  00                 	db	0
   217  000B72  00                 	db	0
   218  000B73  00                 	db	0
   219  000B74  00                 	db	0
   220  000B75  00                 	db	0
   221  000B76  00                 	db	0
   222  000B77  00                 	db	0
   223  000B78  00                 	db	0
   224  000B79  00                 	db	0
   225  000B7A  00                 	db	0
   226  000B7B  87                 	db	135
   227                           
   228                           	psect	mediumconst
   229  00FE66                     __pmediumconst:
   230                           	opt stack 0
   231  00FE66  00                 	db	0
   232  00FE67                     _STable:
   233                           	opt stack 0
   234  00FE67  63                 	db	99
   235  00FE68  7C                 	db	124
   236  00FE69  77                 	db	119
   237  00FE6A  7B                 	db	123
   238  00FE6B  F2                 	db	242
   239  00FE6C  6B                 	db	107
   240  00FE6D  6F                 	db	111
   241  00FE6E  C5                 	db	197
   242  00FE6F  30                 	db	48
   243  00FE70  01                 	db	1
   244  00FE71  67                 	db	103
   245  00FE72  2B                 	db	43
   246  00FE73  FE                 	db	254
   247  00FE74  D7                 	db	215
   248  00FE75  AB                 	db	171
   249  00FE76  76                 	db	118
   250  00FE77  CA                 	db	202
   251  00FE78  82                 	db	130
   252  00FE79  C9                 	db	201
   253  00FE7A  7D                 	db	125
   254  00FE7B  FA                 	db	250
   255  00FE7C  59                 	db	89
   256  00FE7D  47                 	db	71
   257  00FE7E  F0                 	db	240
   258  00FE7F  AD                 	db	173
   259  00FE80  D4                 	db	212
   260  00FE81  A2                 	db	162
   261  00FE82  AF                 	db	175
   262  00FE83  9C                 	db	156
   263  00FE84  A4                 	db	164
   264  00FE85  72                 	db	114
   265  00FE86  C0                 	db	192
   266  00FE87  B7                 	db	183
   267  00FE88  FD                 	db	253
   268  00FE89  93                 	db	147
   269  00FE8A  26                 	db	38
   270  00FE8B  36                 	db	54
   271  00FE8C  3F                 	db	63
   272  00FE8D  F7                 	db	247
   273  00FE8E  CC                 	db	204
   274  00FE8F  34                 	db	52
   275  00FE90  A5                 	db	165
   276  00FE91  E5                 	db	229
   277  00FE92  F1                 	db	241
   278  00FE93  71                 	db	113
   279  00FE94  D8                 	db	216
   280  00FE95  31                 	db	49
   281  00FE96  15                 	db	21
   282  00FE97  04                 	db	4
   283  00FE98  C7                 	db	199
   284  00FE99  23                 	db	35
   285  00FE9A  C3                 	db	195
   286  00FE9B  18                 	db	24
   287  00FE9C  96                 	db	150
   288  00FE9D  05                 	db	5
   289  00FE9E  9A                 	db	154
   290  00FE9F  07                 	db	7
   291  00FEA0  12                 	db	18
   292  00FEA1  80                 	db	128
   293  00FEA2  E2                 	db	226
   294  00FEA3  EB                 	db	235
   295  00FEA4  27                 	db	39
   296  00FEA5  B2                 	db	178
   297  00FEA6  75                 	db	117
   298  00FEA7  09                 	db	9
   299  00FEA8  83                 	db	131
   300  00FEA9  2C                 	db	44
   301  00FEAA  1A                 	db	26
   302  00FEAB  1B                 	db	27
   303  00FEAC  6E                 	db	110
   304  00FEAD  5A                 	db	90
   305  00FEAE  A0                 	db	160
   306  00FEAF  52                 	db	82
   307  00FEB0  3B                 	db	59
   308  00FEB1  D6                 	db	214
   309  00FEB2  B3                 	db	179
   310  00FEB3  29                 	db	41
   311  00FEB4  E3                 	db	227
   312  00FEB5  2F                 	db	47
   313  00FEB6  84                 	db	132
   314  00FEB7  53                 	db	83
   315  00FEB8  D1                 	db	209
   316  00FEB9  00                 	db	0
   317  00FEBA  ED                 	db	237
   318  00FEBB  20                 	db	32
   319  00FEBC  FC                 	db	252
   320  00FEBD  B1                 	db	177
   321  00FEBE  5B                 	db	91
   322  00FEBF  6A                 	db	106
   323  00FEC0  CB                 	db	203
   324  00FEC1  BE                 	db	190
   325  00FEC2  39                 	db	57
   326  00FEC3  4A                 	db	74
   327  00FEC4  4C                 	db	76
   328  00FEC5  58                 	db	88
   329  00FEC6  CF                 	db	207
   330  00FEC7  D0                 	db	208
   331  00FEC8  EF                 	db	239
   332  00FEC9  AA                 	db	170
   333  00FECA  FB                 	db	251
   334  00FECB  43                 	db	67
   335  00FECC  4D                 	db	77
   336  00FECD  33                 	db	51
   337  00FECE  85                 	db	133
   338  00FECF  45                 	db	69
   339  00FED0  F9                 	db	249
   340  00FED1  02                 	db	2
   341  00FED2  7F                 	db	127
   342  00FED3  50                 	db	80
   343  00FED4  3C                 	db	60
   344  00FED5  9F                 	db	159
   345  00FED6  A8                 	db	168
   346  00FED7  51                 	db	81
   347  00FED8  A3                 	db	163
   348  00FED9  40                 	db	64
   349  00FEDA  8F                 	db	143
   350  00FEDB  92                 	db	146
   351  00FEDC  9D                 	db	157
   352  00FEDD  38                 	db	56
   353  00FEDE  F5                 	db	245
   354  00FEDF  BC                 	db	188
   355  00FEE0  B6                 	db	182
   356  00FEE1  DA                 	db	218
   357  00FEE2  21                 	db	33
   358  00FEE3  10                 	db	16
   359  00FEE4  FF                 	db	255
   360  00FEE5  F3                 	db	243
   361  00FEE6  D2                 	db	210
   362  00FEE7  CD                 	db	205
   363  00FEE8  0C                 	db	12
   364  00FEE9  13                 	db	19
   365  00FEEA  EC                 	db	236
   366  00FEEB  5F                 	db	95
   367  00FEEC  97                 	db	151
   368  00FEED  44                 	db	68
   369  00FEEE  17                 	db	23
   370  00FEEF  C4                 	db	196
   371  00FEF0  A7                 	db	167
   372  00FEF1  7E                 	db	126
   373  00FEF2  3D                 	db	61
   374  00FEF3  64                 	db	100
   375  00FEF4  5D                 	db	93
   376  00FEF5  19                 	db	25
   377  00FEF6  73                 	db	115
   378  00FEF7  60                 	db	96
   379  00FEF8  81                 	db	129
   380  00FEF9  4F                 	db	79
   381  00FEFA  DC                 	db	220
   382  00FEFB  22                 	db	34
   383  00FEFC  2A                 	db	42
   384  00FEFD  90                 	db	144
   385  00FEFE  88                 	db	136
   386  00FEFF  46                 	db	70
   387  00FF00  EE                 	db	238
   388  00FF01  B8                 	db	184
   389  00FF02  14                 	db	20
   390  00FF03  DE                 	db	222
   391  00FF04  5E                 	db	94
   392  00FF05  0B                 	db	11
   393  00FF06  DB                 	db	219
   394  00FF07  E0                 	db	224
   395  00FF08  32                 	db	50
   396  00FF09  3A                 	db	58
   397  00FF0A  0A                 	db	10
   398  00FF0B  49                 	db	73
   399  00FF0C  06                 	db	6
   400  00FF0D  24                 	db	36
   401  00FF0E  5C                 	db	92
   402  00FF0F  C2                 	db	194
   403  00FF10  D3                 	db	211
   404  00FF11  AC                 	db	172
   405  00FF12  62                 	db	98
   406  00FF13  91                 	db	145
   407  00FF14  95                 	db	149
   408  00FF15  E4                 	db	228
   409  00FF16  79                 	db	121
   410  00FF17  E7                 	db	231
   411  00FF18  C8                 	db	200
   412  00FF19  37                 	db	55
   413  00FF1A  6D                 	db	109
   414  00FF1B  8D                 	db	141
   415  00FF1C  D5                 	db	213
   416  00FF1D  4E                 	db	78
   417  00FF1E  A9                 	db	169
   418  00FF1F  6C                 	db	108
   419  00FF20  56                 	db	86
   420  00FF21  F4                 	db	244
   421  00FF22  EA                 	db	234
   422  00FF23  65                 	db	101
   423  00FF24  7A                 	db	122
   424  00FF25  AE                 	db	174
   425  00FF26  08                 	db	8
   426  00FF27  BA                 	db	186
   427  00FF28  78                 	db	120
   428  00FF29  25                 	db	37
   429  00FF2A  2E                 	db	46
   430  00FF2B  1C                 	db	28
   431  00FF2C  A6                 	db	166
   432  00FF2D  B4                 	db	180
   433  00FF2E  C6                 	db	198
   434  00FF2F  E8                 	db	232
   435  00FF30  DD                 	db	221
   436  00FF31  74                 	db	116
   437  00FF32  1F                 	db	31
   438  00FF33  4B                 	db	75
   439  00FF34  BD                 	db	189
   440  00FF35  8B                 	db	139
   441  00FF36  8A                 	db	138
   442  00FF37  70                 	db	112
   443  00FF38  3E                 	db	62
   444  00FF39  B5                 	db	181
   445  00FF3A  66                 	db	102
   446  00FF3B  48                 	db	72
   447  00FF3C  03                 	db	3
   448  00FF3D  F6                 	db	246
   449  00FF3E  0E                 	db	14
   450  00FF3F  61                 	db	97
   451  00FF40  35                 	db	53
   452  00FF41  57                 	db	87
   453  00FF42  B9                 	db	185
   454  00FF43  86                 	db	134
   455  00FF44  C1                 	db	193
   456  00FF45  1D                 	db	29
   457  00FF46  9E                 	db	158
   458  00FF47  E1                 	db	225
   459  00FF48  F8                 	db	248
   460  00FF49  98                 	db	152
   461  00FF4A  11                 	db	17
   462  00FF4B  69                 	db	105
   463  00FF4C  D9                 	db	217
   464  00FF4D  8E                 	db	142
   465  00FF4E  94                 	db	148
   466  00FF4F  9B                 	db	155
   467  00FF50  1E                 	db	30
   468  00FF51  87                 	db	135
   469  00FF52  E9                 	db	233
   470  00FF53  CE                 	db	206
   471  00FF54  55                 	db	85
   472  00FF55  28                 	db	40
   473  00FF56  DF                 	db	223
   474  00FF57  8C                 	db	140
   475  00FF58  A1                 	db	161
   476  00FF59  89                 	db	137
   477  00FF5A  0D                 	db	13
   478  00FF5B  BF                 	db	191
   479  00FF5C  E6                 	db	230
   480  00FF5D  42                 	db	66
   481  00FF5E  68                 	db	104
   482  00FF5F  41                 	db	65
   483  00FF60  99                 	db	153
   484  00FF61  2D                 	db	45
   485  00FF62  0F                 	db	15
   486  00FF63  B0                 	db	176
   487  00FF64  54                 	db	84
   488  00FF65  BB                 	db	187
   489  00FF66  16                 	db	22
   490  00FF67                     __end_of_STable:
   491                           	opt stack 0
   492  00FF67                     _modulation:
   493                           	opt stack 0
   494  00FF67  01                 	db	1
   495  00FF68  01                 	db	1
   496  00FF69  01                 	db	1
   497  00FF6A  01                 	db	1
   498  00FF6B  01                 	db	1
   499  00FF6C  01                 	db	1
   500  00FF6D  01                 	db	1
   501  00FF6E  00                 	db	0
   502  00FF6F                     __end_of_modulation:
   503                           	opt stack 0
   504  00FF6F                     _rxWindowOffset:
   505                           	opt stack 0
   506  00FF6F  DF                 	db	223
   507  00FF70  CE                 	db	206
   508  00FF71  C6                 	db	198
   509  00FF72  C2                 	db	194
   510  00FF73  BE                 	db	190
   511  00FF74  BC                 	db	188
   512  00FF75  F1                 	db	241
   513  00FF76  FE                 	db	254
   514  00FF77                     __end_of_rxWindowOffset:
   515                           	opt stack 0
   516  00FF77                     _maxPayloadSize:
   517                           	opt stack 0
   518  00FF77  33                 	db	51
   519  00FF78  33                 	db	51
   520  00FF79  33                 	db	51
   521  00FF7A  73                 	db	115
   522  00FF7B  F2                 	db	242
   523  00FF7C  F2                 	db	242
   524  00FF7D  F2                 	db	242
   525  00FF7E  38                 	db	56
   526  00FF7F                     __end_of_maxPayloadSize:
   527                           	opt stack 0
   528  00FF7F                     _rxWindowSize:
   529                           	opt stack 0
   530  00FF7F  08                 	db	8
   531  00FF80  0A                 	db	10
   532  00FF81  0E                 	db	14
   533  00FF82  1A                 	db	26
   534  00FF83  31                 	db	49
   535  00FF84  58                 	db	88
   536  00FF85  3C                 	db	60
   537  00FF86  08                 	db	8
   538  00FF87                     __end_of_rxWindowSize:
   539                           	opt stack 0
   540  00FF87                     _bandwidth:
   541                           	opt stack 0
   542  00FF87  07                 	db	7
   543  00FF88  07                 	db	7
   544  00FF89  07                 	db	7
   545  00FF8A  07                 	db	7
   546  00FF8B  07                 	db	7
   547  00FF8C  07                 	db	7
   548  00FF8D  08                 	db	8
   549  00FF8E                     __end_of_bandwidth:
   550                           	opt stack 0
   551  00FF8E                     _spreadingFactor:
   552                           	opt stack 0
   553  00FF8E  0C                 	db	12
   554  00FF8F  0B                 	db	11
   555  00FF90  0A                 	db	10
   556  00FF91  09                 	db	9
   557  00FF92  08                 	db	8
   558  00FF93  07                 	db	7
   559  00FF94  07                 	db	7
   560  00FF95                     __end_of_spreadingFactor:
   561                           	opt stack 0
   562  00FF95                     _macEndDevCmdReplyLen:
   563                           	opt stack 0
   564  00FF95  01                 	db	1
   565  00FF96  02                 	db	2
   566  00FF97  01                 	db	1
   567  00FF98  02                 	db	2
   568  00FF99  03                 	db	3
   569  00FF9A  02                 	db	2
   570  00FF9B  01                 	db	1
   571  00FF9C                     __end_of_macEndDevCmdReplyLen:
   572                           	opt stack 0
   573  00FF9C  0A                 	db	10
   574  00FF9D  07                 	db	7
   575  00FF9E  04                 	db	4
   576  00FF9F  01                 	db	1
   577  00FFA0  FE                 	db	254
   578  00FFA1  FB                 	db	251
   579  00FFA2                     __end_of_txPower433:
   580                           	opt stack 0
   581  00FFA2                     _txPower868:
   582                           	opt stack 0
   583  00FFA2  14                 	db	20
   584  00FFA3  0E                 	db	14
   585  00FFA4  0B                 	db	11
   586  00FFA5  08                 	db	8
   587  00FFA6  05                 	db	5
   588  00FFA7  02                 	db	2
   589  00FFA8                     __end_of_txPower868:
   590                           	opt stack 0
   591  00FFA8                     _DefaultChannels433:
   592                           	opt stack 0
   593  00FFA8  B9D8               	dw	47576
   594  00FFAA  19D1               	dw	6609
   595  00FFAC  01                 	db	1
   596  00FFAD  50                 	db	80
   597  00FFAE  012E               	dw	302
   598  00FFB0  0000               	dw	0
   599  00FFB2  0000               	dw	0
   600  00FFB4  01                 	db	1
   601  00FFB5  FF                 	db	255
   602  00FFB6  C718               	dw	50968
   603  00FFB8  19D4               	dw	6612
   604  00FFBA  01                 	db	1
   605  00FFBB  50                 	db	80
   606  00FFBC  012E               	dw	302
   607  00FFBE  0000               	dw	0
   608  00FFC0  0000               	dw	0
   609  00FFC2  01                 	db	1
   610  00FFC3  FF                 	db	255
   611  00FFC4  D458               	dw	54360
   612  00FFC6  19D7               	dw	6615
   613  00FFC8  01                 	db	1
   614  00FFC9  50                 	db	80
   615  00FFCA  012E               	dw	302
   616  00FFCC  0000               	dw	0
   617  00FFCE  0000               	dw	0
   618  00FFD0  01                 	db	1
   619  00FFD1  FF                 	db	255
   620  00FFD2                     __end_of_DefaultChannels433:
   621                           	opt stack 0
   622  00FFD2                     _DefaultChannels868:
   623                           	opt stack 0
   624  00FFD2  27A0               	dw	10144
   625  00FFD4  33BE               	dw	13246
   626  00FFD6  01                 	db	1
   627  00FFD7  50                 	db	80
   628  00FFD8  012E               	dw	302
   629  00FFDA  0000               	dw	0
   630  00FFDC  0000               	dw	0
   631  00FFDE  01                 	db	1
   632  00FFDF  FF                 	db	255
   633  00FFE0  34E0               	dw	13536
   634  00FFE2  33C1               	dw	13249
   635  00FFE4  01                 	db	1
   636  00FFE5  50                 	db	80
   637  00FFE6  012E               	dw	302
   638  00FFE8  0000               	dw	0
   639  00FFEA  0000               	dw	0
   640  00FFEC  01                 	db	1
   641  00FFED  FF                 	db	255
   642  00FFEE  4220               	dw	16928
   643  00FFF0  33C4               	dw	13252
   644  00FFF2  01                 	db	1
   645  00FFF3  50                 	db	80
   646  00FFF4  012E               	dw	302
   647  00FFF6  0000               	dw	0
   648  00FFF8  0000               	dw	0
   649  00FFFA  01                 	db	1
   650  00FFFB  FF                 	db	255
   651  00FFFC                     __end_of_DefaultChannels868:
   652                           	opt stack 0
   653  00FFFC                     _FskSyncWordBuff:
   654                           	opt stack 0
   655  00FFFC  C1                 	db	193
   656  00FFFD  94                 	db	148
   657  00FFFE  C1                 	db	193
   658  00FFFF                     __end_of_FskSyncWordBuff:
   659                           	opt stack 0
   660  00FFFF  00                 	db	0	; dummy byte at the end
   661  0000                     
   662                           	psect	nvBANK0
   663  0000F3                     __pnvBANK0:
   664                           	opt stack 0
   665  0000F3                     _timer1ReloadVal:
   666                           	opt stack 0
   667  0000F3                     	ds	2
   668  0000F5                     _IOCB4_InterruptHandler:
   669                           	opt stack 0
   670  0000F5                     	ds	2
   671  0000F7                     _INT2_InterruptHandler:
   672                           	opt stack 0
   673  0000F7                     	ds	2
   674  0000F9                     _INT1_InterruptHandler:
   675                           	opt stack 0
   676  0000F9                     	ds	2
   677  0000FB                     _eusart1TxBufferRemaining:
   678                           	opt stack 0
   679  0000FB                     	ds	1
   680                           
   681                           	psect	nvBANK1
   682  0001F5                     __pnvBANK1:
   683                           	opt stack 0
   684  0001F5                     _timer5ReloadVal:
   685                           	opt stack 0
   686  0001F5                     	ds	2
   687  0001F7                     _TMR1_InterruptHandler:
   688                           	opt stack 0
   689  0001F7                     	ds	2
   690  0001F9                     _EUSART1_TxDefaultInterruptHandler:
   691                           	opt stack 0
   692  0001F9                     	ds	2
   693                           
   694                           	psect	nvBANK2
   695  0002F0                     __pnvBANK2:
   696                           	opt stack 0
   697  0002F0                     _EUSART1_ErrorHandler:
   698                           	opt stack 0
   699  0002F0                     	ds	2
   700  0002F2                     _EUSART1_OverrunErrorHandler:
   701                           	opt stack 0
   702  0002F2                     	ds	2
   703  0002F4                     _EUSART1_FramingErrorHandler:
   704                           	opt stack 0
   705  0002F4                     	ds	2
   706  0002F6                     _EUSART1_RxDefaultInterruptHandler:
   707                           	opt stack 0
   708  0002F6                     	ds	2
   709  0000                     _TMR5	set	3919
   710  0000                     _T5GCONbits	set	3917
   711  0000                     _T5CONbits	set	3918
   712  0000                     _T5CON	set	3918
   713  0000                     _TMR5L	set	3919
   714  0000                     _TMR5H	set	3920
   715  0000                     _T5GCON	set	3917
   716  0000                     _ANSELA	set	3896
   717  0000                     _ANSELE	set	3900
   718  0000                     _ANSELB	set	3897
   719  0000                     _ANSELC	set	3898
   720  0000                     _ANSELD	set	3899
   721  0000                     _TMR1	set	4046
   722  0000                     _TXREG	set	4013
   723  0000                     _PIR5bits	set	3966
   724  0000                     _T1GCONbits	set	4044
   725  0000                     _T1CONbits	set	4045
   726  0000                     _T1CON	set	4045
   727  0000                     _TMR1L	set	4046
   728  0000                     _TMR1H	set	4047
   729  0000                     _T1GCON	set	4044
   730  0000                     _RCREG1	set	4014
   731  0000                     _RCSTA1bits	set	4011
   732  0000                     _TXREG1	set	4013
   733  0000                     _TXSTA1bits	set	4012
   734  0000                     _SPBRGH1	set	4016
   735  0000                     _SPBRG1	set	4015
   736  0000                     _TXSTA1	set	4012
   737  0000                     _RCSTA1	set	4011
   738  0000                     _BAUDCON1	set	4024
   739  0000                     _SSP2STATbits	set	3949
   740  0000                     _SSP2BUF	set	3951
   741  0000                     _SSP2CON1bits	set	3948
   742  0000                     _SSP2ADD	set	3950
   743  0000                     _SSP2CON1	set	3948
   744  0000                     _SSP2STAT	set	3949
   745  0000                     _IOCBbits	set	3938
   746  0000                     _WPUB	set	3937
   747  0000                     _TRISD	set	3989
   748  0000                     _TRISC	set	3988
   749  0000                     _TRISB	set	3987
   750  0000                     _TRISA	set	3986
   751  0000                     _TRISE	set	3990
   752  0000                     _LATC	set	3979
   753  0000                     _LATB	set	3978
   754  0000                     _LATA	set	3977
   755  0000                     _LATD	set	3980
   756  0000                     _LATE	set	3981
   757  0000                     _OSCTUNE	set	3995
   758  0000                     _OSCCON2	set	4050
   759  0000                     _OSCCON	set	4051
   760  0000                     _PIR1bits	set	3998
   761  0000                     _PIE1bits	set	3997
   762  0000                     _RCONbits	set	4048
   763  0000                     _INTCON2bits	set	4081
   764  0000                     _INTCON3bits	set	4080
   765  0000                     _INTCONbits	set	4082
   766  0000                     _PORTBbits	set	3969
   767  0000                     _LATD3	set	31843
   768  0000                     _LATC2	set	31834
   769  0000                     _TRISC2	set	31906
   770                           
   771                           ; #config settings
   772  0000                     
   773                           	psect	cinit
   774  0007A8                     __pcinit:
   775                           	opt stack 0
   776  0007A8                     start_initialization:
   777                           	opt stack 0
   778  0007A8                     __initialization:
   779                           	opt stack 0
   780                           
   781                           ; Initialize objects allocated to BANK3 (48 bytes)
   782                           ; load TBLPTR registers with __pidataBANK3
   783  0007A8  0E4C               	movlw	low __pidataBANK3
   784  0007AA  6EF6               	movwf	tblptrl,c
   785  0007AC  0E0B               	movlw	high __pidataBANK3
   786  0007AE  6EF7               	movwf	tblptrh,c
   787  0007B0  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   788  0007B2  6EF8               	movwf	tblptru,c
   789  0007B4  EE03  F0A8         	lfsr	0,__pdataBANK3
   790  0007B8  EE20 F030          	lfsr	2,48
   791  0007BC                     copy_data0:
   792  0007BC  0009               	tblrd		*+
   793  0007BE  CFF5 FFEE          	movff	tablat,postinc0
   794  0007C2  50DD               	movf	postdec2,w,c
   795  0007C4  50D9               	movf	fsr2l,w,c
   796  0007C6  E1FA               	bnz	copy_data0
   797                           
   798                           ; Initialize objects allocated to BANK2 (4 bytes)
   799                           ; load TBLPTR registers with __pidataBANK2
   800  0007C8  0E5A               	movlw	low __pidataBANK2
   801  0007CA  6EF6               	movwf	tblptrl,c
   802  0007CC  0E0E               	movlw	high __pidataBANK2
   803  0007CE  6EF7               	movwf	tblptrh,c
   804  0007D0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   805  0007D2  6EF8               	movwf	tblptru,c
   806  0007D4  EE02  F0F8         	lfsr	0,__pdataBANK2
   807  0007D8  EE20 F004          	lfsr	2,4
   808  0007DC                     copy_data1:
   809  0007DC  0009               	tblrd		*+
   810  0007DE  CFF5 FFEE          	movff	tablat,postinc0
   811  0007E2  50DD               	movf	postdec2,w,c
   812  0007E4  50D9               	movf	fsr2l,w,c
   813  0007E6  E1FA               	bnz	copy_data1
   814                           
   815                           ; Initialize objects allocated to BANK1 (4 bytes)
   816                           ; load TBLPTR registers with __pidataBANK1
   817  0007E8  0E56               	movlw	low __pidataBANK1
   818  0007EA  6EF6               	movwf	tblptrl,c
   819  0007EC  0E0E               	movlw	high __pidataBANK1
   820  0007EE  6EF7               	movwf	tblptrh,c
   821  0007F0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   822  0007F2  6EF8               	movwf	tblptru,c
   823  0007F4  EE01  F0FB         	lfsr	0,__pdataBANK1
   824  0007F8  EE20 F004          	lfsr	2,4
   825  0007FC                     copy_data2:
   826  0007FC  0009               	tblrd		*+
   827  0007FE  CFF5 FFEE          	movff	tablat,postinc0
   828  000802  50DD               	movf	postdec2,w,c
   829  000804  50D9               	movf	fsr2l,w,c
   830  000806  E1FA               	bnz	copy_data2
   831                           
   832                           ; Initialize objects allocated to BANK0 (4 bytes)
   833                           ; load TBLPTR registers with __pidataBANK0
   834  000808  0E52               	movlw	low __pidataBANK0
   835  00080A  6EF6               	movwf	tblptrl,c
   836  00080C  0E0E               	movlw	high __pidataBANK0
   837  00080E  6EF7               	movwf	tblptrh,c
   838  000810  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   839  000812  6EF8               	movwf	tblptru,c
   840  000814  EE00  F0FC         	lfsr	0,__pdataBANK0
   841  000818  EE20 F004          	lfsr	2,4
   842  00081C                     copy_data3:
   843  00081C  0009               	tblrd		*+
   844  00081E  CFF5 FFEE          	movff	tablat,postinc0
   845  000822  50DD               	movf	postdec2,w,c
   846  000824  50D9               	movf	fsr2l,w,c
   847  000826  E1FA               	bnz	copy_data3
   848                           
   849                           ; Clear objects allocated to BIGRAM (2590 bytes)
   850  000828  EE03  F0D8         	lfsr	0,__pbssBIGRAM
   851  00082C  EE2A F01E          	lfsr	2,2590
   852  000830                     clear_0:
   853  000830  6AEE               	clrf	postinc0,c
   854  000832  50DD               	movf	postdec2,w,c
   855  000834  50D9               	movf	fsr2l,w,c
   856  000836  E1FC               	bnz	clear_0
   857  000838  50DA               	movf	fsr2h,w,c
   858  00083A  E1FA               	bnz	clear_0
   859                           
   860                           ; Clear objects allocated to BANK3 (168 bytes)
   861  00083C  EE03  F000         	lfsr	0,__pbssBANK3
   862  000840  0EA8               	movlw	168
   863  000842                     clear_1:
   864  000842  6AEE               	clrf	postinc0,c
   865  000844  06E8               	decf	wreg,f,c
   866  000846  E1FD               	bnz	clear_1
   867                           
   868                           ; Clear objects allocated to BANK2 (240 bytes)
   869  000848  EE02  F000         	lfsr	0,__pbssBANK2
   870  00084C  0EF0               	movlw	240
   871  00084E                     clear_2:
   872  00084E  6AEE               	clrf	postinc0,c
   873  000850  06E8               	decf	wreg,f,c
   874  000852  E1FD               	bnz	clear_2
   875                           
   876                           ; Clear objects allocated to BANK1 (245 bytes)
   877  000854  EE01  F000         	lfsr	0,__pbssBANK1
   878  000858  0EF5               	movlw	245
   879  00085A                     clear_3:
   880  00085A  6AEE               	clrf	postinc0,c
   881  00085C  06E8               	decf	wreg,f,c
   882  00085E  E1FD               	bnz	clear_3
   883                           
   884                           ; Clear objects allocated to BANK0 (131 bytes)
   885  000860  EE00  F060         	lfsr	0,__pbssBANK0
   886  000864  0E83               	movlw	131
   887  000866                     clear_4:
   888  000866  6AEE               	clrf	postinc0,c
   889  000868  06E8               	decf	wreg,f,c
   890  00086A  E1FD               	bnz	clear_4
   891                           
   892                           ; Clear objects allocated to COMRAM (14 bytes)
   893  00086C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   894  000870  0E0E               	movlw	14
   895  000872                     clear_5:
   896  000872  6AEE               	clrf	postinc0,c
   897  000874  06E8               	decf	wreg,f,c
   898  000876  E1FD               	bnz	clear_5
   899  000878                     end_of_initialization:
   900                           	opt stack 0
   901  000878                     __end_of__initialization:
   902                           	opt stack 0
   903  000878  0100               	movlb	0
   904  00087A  EF9D  F001         	goto	_main	;jump to C main() function
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           postdec2	equ	0xFDD
   912                           fsr2h	equ	0xFDA
   913                           fsr2l	equ	0xFD9
   914                           
   915                           	psect	bssCOMRAM
   916  00003E                     __pbssCOMRAM:
   917                           	opt stack 0
   918  00003E                     _rxPayload:
   919                           	opt stack 0
   920  00003E                     	ds	4
   921  000042                     _datatobesolved:
   922                           	opt stack 0
   923  000042                     	ds	2
   924  000044                     _reloadVal:
   925                           	opt stack 0
   926  000044                     	ds	2
   927  000046                     _eusart1RxStatusBuffer:
   928                           	opt stack 0
   929  000046                     	ds	1
   930  000047                     _eusart1RxTail:
   931                           	opt stack 0
   932  000047                     	ds	1
   933  000048                     _eusart1RxHead:
   934                           	opt stack 0
   935  000048                     	ds	1
   936  000049                     __rcon:
   937                           	opt stack 0
   938  000049                     	ds	1
   939  00004A                     _allocatedTimers:
   940                           	opt stack 0
   941  00004A                     	ds	1
   942  00004B                     _localDioStatus:
   943                           	opt stack 0
   944  00004B                     	ds	1
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           postdec2	equ	0xFDD
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           
   955                           	psect	bssBANK0
   956  000060                     __pbssBANK0:
   957                           	opt stack 0
   958  000060                     TMR_GetDeltaTime@retVal:
   959                           	opt stack 0
   960  000060                     	ds	4
   961  000064                     _ticksAccounted:
   962                           	opt stack 0
   963  000064                     	ds	4
   964  000068                     _ticksAdded:
   965                           	opt stack 0
   966  000068                     	ds	4
   967  00006C                     _c:
   968                           	opt stack 0
   969  00006C                     	ds	2
   970  00006E                     _length:
   971                           	opt stack 0
   972  00006E                     	ds	2
   973  000070                     _position:
   974                           	opt stack 0
   975  000070                     	ds	2
   976  000072                     _n:
   977                           	opt stack 0
   978  000072                     	ds	2
   979  000074                     _countera:
   980                           	opt stack 0
   981  000074                     	ds	2
   982  000076                     _counterx:
   983                           	opt stack 0
   984  000076                     	ds	2
   985  000078                     _bitStatus7:
   986                           	opt stack 0
   987  000078                     	ds	2
   988  00007A                     _bitStatus6:
   989                           	opt stack 0
   990  00007A                     	ds	2
   991  00007C                     _bitStatus5:
   992                           	opt stack 0
   993  00007C                     	ds	2
   994  00007E                     _bitStatus4:
   995                           	opt stack 0
   996  00007E                     	ds	2
   997  000080                     _bitStatus3:
   998                           	opt stack 0
   999  000080                     	ds	2
  1000  000082                     _bitStatus2:
  1001                           	opt stack 0
  1002  000082                     	ds	2
  1003  000084                     _bitStatus1:
  1004                           	opt stack 0
  1005  000084                     	ds	2
  1006  000086                     _bitStatus:
  1007                           	opt stack 0
  1008  000086                     	ds	2
  1009  000088                     _bitStatusbefore7:
  1010                           	opt stack 0
  1011  000088                     	ds	2
  1012  00008A                     _bitStatusbefore6:
  1013                           	opt stack 0
  1014  00008A                     	ds	2
  1015  00008C                     _bitStatusbefore5:
  1016                           	opt stack 0
  1017  00008C                     	ds	2
  1018  00008E                     _bitStatusbefore4:
  1019                           	opt stack 0
  1020  00008E                     	ds	2
  1021  000090                     _bitStatusbefore3:
  1022                           	opt stack 0
  1023  000090                     	ds	2
  1024  000092                     _bitStatusbefore2:
  1025                           	opt stack 0
  1026  000092                     	ds	2
  1027  000094                     _bitStatusbefore1:
  1028                           	opt stack 0
  1029  000094                     	ds	2
  1030  000096                     _counterinterrupt:
  1031                           	opt stack 0
  1032  000096                     	ds	2
  1033  000098                     TMR_SwapTimer@retVal:
  1034                           	opt stack 0
  1035  000098                     	ds	2
  1036  00009A                     TMR_SwapTimer@oldVal:
  1037                           	opt stack 0
  1038  00009A                     	ds	2
  1039  00009C                     TMR_GetDeltaTime@tmrVal:
  1040                           	opt stack 0
  1041  00009C                     	ds	2
  1042  00009E                     _character:
  1043                           	opt stack 0
  1044  00009E                     	ds	1
  1045  00009F                     _counter:
  1046                           	opt stack 0
  1047  00009F                     	ds	1
  1048  0000A0                     _dataxsolved:
  1049                           	opt stack 0
  1050  0000A0                     	ds	1
  1051  0000A1                     _datax:
  1052                           	opt stack 0
  1053  0000A1                     	ds	1
  1054  0000A2                     _eusart1RxLastError:
  1055                           	opt stack 0
  1056  0000A2                     	ds	1
  1057  0000A3                     _eusart1RxCount:
  1058                           	opt stack 0
  1059  0000A3                     	ds	1
  1060  0000A4                     _eusart1RxBuffer:
  1061                           	opt stack 0
  1062  0000A4                     	ds	1
  1063  0000A5                     _eusart1TxBuffer:
  1064                           	opt stack 0
  1065  0000A5                     	ds	1
  1066  0000A6                     _eusart1TxTail:
  1067                           	opt stack 0
  1068  0000A6                     	ds	1
  1069  0000A7                     _eusart1TxHead:
  1070                           	opt stack 0
  1071  0000A7                     	ds	1
  1072  0000A8                     __roundCounter:
  1073                           	opt stack 0
  1074  0000A8                     	ds	1
  1075  0000A9                     _timerOverflow:
  1076                           	opt stack 0
  1077  0000A9                     	ds	1
  1078  0000AA                     _dioStatus:
  1079                           	opt stack 0
  1080  0000AA                     	ds	1
  1081  0000AB                     _RadioConfiguration:
  1082                           	opt stack 0
  1083  0000AB                     	ds	54
  1084  0000E1                     _dataresult:
  1085                           	opt stack 0
  1086  0000E1                     	ds	2
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           
  1097                           	psect	dataBANK0
  1098  0000FC                     __pdataBANK0:
  1099                           	opt stack 0
  1100  0000FC                     _ticksToScheduledInterrupt:
  1101                           	opt stack 0
  1102  0000FC                     	ds	4
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec2	equ	0xFDD
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           
  1113                           	psect	bssBANK1
  1114  000100                     __pbssBANK1:
  1115                           	opt stack 0
  1116  000100                     _loRa:
  1117                           	opt stack 0
  1118  000100                     	ds	245
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           postdec2	equ	0xFDD
  1126                           fsr2h	equ	0xFDA
  1127                           fsr2l	equ	0xFD9
  1128                           
  1129                           	psect	dataBANK1
  1130  0001FB                     __pdataBANK1:
  1131                           	opt stack 0
  1132  0001FB                     _devAddr:
  1133                           	opt stack 0
  1134  0001FB                     	ds	4
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           postinc0	equ	0xFEE
  1140                           wreg	equ	0xFE8
  1141                           postdec2	equ	0xFDD
  1142                           fsr2h	equ	0xFDA
  1143                           fsr2l	equ	0xFD9
  1144                           
  1145                           	psect	bssBANK2
  1146  000200                     __pbssBANK2:
  1147                           	opt stack 0
  1148  000200                     _Channels:
  1149                           	opt stack 0
  1150  000200                     	ds	224
  1151  0002E0                     _aesBuffer:
  1152                           	opt stack 0
  1153  0002E0                     	ds	16
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec2	equ	0xFDD
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           
  1164                           	psect	dataBANK2
  1165  0002F8                     __pdataBANK2:
  1166                           	opt stack 0
  1167  0002F8                     _randx:
  1168                           	opt stack 0
  1169  0002F8                     	ds	4
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec2	equ	0xFDD
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           
  1180                           	psect	bssBANK3
  1181  000300                     __pbssBANK3:
  1182                           	opt stack 0
  1183  000300                     _swTimers:
  1184                           	opt stack 0
  1185  000300                     	ds	160
  1186  0003A0                     _readurt:
  1187                           	opt stack 0
  1188  0003A0                     	ds	8
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec2	equ	0xFDD
  1196                           fsr2h	equ	0xFDA
  1197                           fsr2l	equ	0xFD9
  1198                           
  1199                           	psect	dataBANK3
  1200  0003A8                     __pdataBANK3:
  1201                           	opt stack 0
  1202  0003A8                     _appSKey:
  1203                           	opt stack 0
  1204  0003A8                     	ds	16
  1205  0003B8                     _nwkSKey:
  1206                           	opt stack 0
  1207  0003B8                     	ds	16
  1208  0003C8                     GenerateSubkey@F7103:
  1209                           	opt stack 0
  1210  0003C8                     	ds	16
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec2	equ	0xFDD
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           
  1221                           	psect	bssBIGRAM
  1222  0003D8                     __pbssBIGRAM:
  1223                           	opt stack 0
  1224  0003D8                     _sub:
  1225                           	opt stack 0
  1226  0003D8                     	ds	1024
  1227  0007D8                     _dataxstr:
  1228                           	opt stack 0
  1229  0007D8                     	ds	1024
  1230  000BD8                     _radioBuffer:
  1231                           	opt stack 0
  1232  000BD8                     	ds	271
  1233  000CE7                     _macBuffer:
  1234                           	opt stack 0
  1235  000CE7                     	ds	271
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec2	equ	0xFDD
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           
  1246                           	psect	cstackBANK0
  1247  0000E3                     __pcstackBANK0:
  1248                           	opt stack 0
  1249  0000E3                     EUSART1_Write@txData:
  1250                           	opt stack 0
  1251  0000E3                     INT1_SetInterruptHandler@InterruptHandler:
  1252                           	opt stack 0
  1253  0000E3                     INT2_SetInterruptHandler@InterruptHandler:
  1254                           	opt stack 0
  1255  0000E3                     IOCB4_SetInterruptHandler@InterruptHandler:
  1256                           	opt stack 0
  1257  0000E3                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1258                           	opt stack 0
  1259  0000E3                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1260                           	opt stack 0
  1261  0000E3                     EUSART1_SetErrorHandler@interruptHandler:
  1262                           	opt stack 0
  1263  0000E3                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1264                           	opt stack 0
  1265  0000E3                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1266                           	opt stack 0
  1267  0000E3                     TMR1_SetInterruptHandler@InterruptHandler:
  1268                           	opt stack 0
  1269  0000E3                     substring@s:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0x0
  1273  0000E3                     	ds	2
  1274  0000E5                     substring@sub:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278  0000E5                     	ds	2
  1279  0000E7                     substring@p:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0x4
  1283  0000E7                     	ds	2
  1284  0000E9                     substring@l:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x6
  1288  0000E9                     	ds	2
  1289  0000EB                     ??_substring:
  1290                           
  1291                           ; 1 bytes @ 0x8
  1292  0000EB                     	ds	4
  1293  0000EF                     substring@c:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0xC
  1297  0000EF                     	ds	2
  1298  0000F1                     ??_main:
  1299                           
  1300                           ; 1 bytes @ 0xE
  1301  0000F1                     	ds	2
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           postdec2	equ	0xFDD
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           
  1312                           	psect	cstackCOMRAM
  1313  000001                     __pcstackCOMRAM:
  1314                           	opt stack 0
  1315  000001                     ?_TMR1_ReadTimer:
  1316                           	opt stack 0
  1317  000001                     EUSART1_Read@readValue:
  1318                           	opt stack 0
  1319  000001                     TMR1_WriteTimer@timerVal:
  1320                           	opt stack 0
  1321  000001                     strncat@to:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x0
  1325  000001                     	ds	2
  1326  000003                     ??_TMR1_ReadTimer:
  1327  000003                     strncat@from:
  1328                           	opt stack 0
  1329                           
  1330                           ; 2 bytes @ 0x2
  1331  000003                     	ds	2
  1332  000005                     TMR1_ReadTimer@readVal:
  1333                           	opt stack 0
  1334  000005                     strncat@size:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x4
  1338  000005                     	ds	2
  1339  000007                     TMR1_ReadTimer@readValHigh:
  1340                           	opt stack 0
  1341  000007                     strncat@cp:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x6
  1345  000007                     	ds	1
  1346  000008                     TMR1_ReadTimer@readValLow:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x7
  1350  000008                     	ds	1
  1351  000009                     ??_EUSART1_Receive_ISR:
  1352  000009                     ?_TMR_SwapTimer:
  1353                           	opt stack 0
  1354  000009                     ?_TMR_GetDeltaTime:
  1355                           	opt stack 0
  1356  000009                     TMR_SwapTimer@timerVal:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x8
  1360  000009                     	ds	2
  1361  00000B                     
  1362                           ; 1 bytes @ 0xA
  1363  00000B                     	ds	2
  1364  00000D                     ??_TMR_GetDeltaTime:
  1365                           
  1366                           ; 1 bytes @ 0xC
  1367  00000D                     	ds	20
  1368  000021                     ?_SwTimersInterrupt:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x20
  1372  000021                     	ds	4
  1373  000025                     
  1374                           ; 1 bytes @ 0x24
  1375  000025                     	ds	4
  1376  000029                     SwTimersInterrupt@timeElapsed:
  1377                           	opt stack 0
  1378                           
  1379                           ; 4 bytes @ 0x28
  1380  000029                     	ds	4
  1381  00002D                     SwTimersInterrupt@ticksToNextTimerEvent:
  1382                           	opt stack 0
  1383                           
  1384                           ; 4 bytes @ 0x2C
  1385  00002D                     	ds	4
  1386  000031                     SwTimersInterrupt@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x30
  1390  000031                     	ds	1
  1391  000032                     ??_TMR_ISR_lora:
  1392                           
  1393                           ; 1 bytes @ 0x31
  1394  000032                     	ds	2
  1395  000034                     ??_INTERRUPT_InterruptManager:
  1396                           
  1397                           ; 1 bytes @ 0x33
  1398  000034                     	ds	10
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           postdec2	equ	0xFDD
  1406                           fsr2h	equ	0xFDA
  1407                           fsr2l	equ	0xFD9
  1408                           
  1409 ;;
  1410 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1411 ;;
  1412 ;; *************** function _main *****************
  1413 ;; Defined at:
  1414 ;;		line 130 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels required when called:   11
  1434 ;; This function calls:
  1435 ;;		_EUSART1_Write
  1436 ;;		_SYSTEM_Initialize
  1437 ;;		_substring
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text0
  1444  00033A                     __ptext0:
  1445                           	opt stack 0
  1446  00033A                     _main:
  1447                           	opt stack 20
  1448                           
  1449                           ;main.c: 132: SYSTEM_Initialize();
  1450                           
  1451                           ;incstack = 0
  1452  00033A  EC01  F006         	call	_SYSTEM_Initialize	;wreg free
  1453                           
  1454                           ;main.c: 133: (INTCONbits.GIE = 1);
  1455  00033E  8EF2               	bsf	intcon,7,c	;volatile
  1456                           
  1457                           ;main.c: 134: (INTCONbits.PEIE = 1);
  1458  000340  8CF2               	bsf	intcon,6,c	;volatile
  1459                           
  1460                           ;main.c: 152: TRISA = 0xF0;
  1461  000342  0EF0               	movlw	240
  1462  000344  6E92               	movwf	3986,c	;volatile
  1463                           
  1464                           ;main.c: 160: counterx=0;
  1465  000346  0E00               	movlw	0
  1466  000348  0100               	movlb	0	; () banked
  1467  00034A  6F77               	movwf	(_counterx+1)& (0+255),b
  1468  00034C  0E00               	movlw	0
  1469  00034E  6F76               	movwf	_counterx& (0+255),b
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;main.c: 161: countera=0;
  1473  000350  0E00               	movlw	0
  1474  000352  6F75               	movwf	(_countera+1)& (0+255),b
  1475  000354  0E00               	movlw	0
  1476  000356  6F74               	movwf	_countera& (0+255),b
  1477  000358                     l12302:
  1478                           
  1479                           ;main.c: 175: {
  1480                           ;main.c: 176: if(counterx <1){
  1481  000358  0100               	movlb	0	; () banked
  1482  00035A  BF77               	btfsc	(_counterx+1)& (0+255),7,b
  1483  00035C  D005               	goto	u12760
  1484  00035E  5177               	movf	(_counterx+1)& (0+255),w,b
  1485  000360  E1FB               	bnz	l12302
  1486  000362  0576               	decf	_counterx& (0+255),w,b
  1487  000364  B0D8               	btfsc	status,0,c
  1488  000366  D7F8               	goto	l2818
  1489  000368                     u12760:
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;main.c: 177: LATA=0xFF;
  1493  000368  6889               	setf	3977,c	;volatile
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;main.c: 179: EUSART1_Write(0b10101111);
  1497  00036A  0EAF               	movlw	175
  1498  00036C  EC87  F005         	call	_EUSART1_Write
  1499                           
  1500                           ;main.c: 180: EUSART1_Write(0b00111111);
  1501  000370  0E3F               	movlw	63
  1502  000372  EC87  F005         	call	_EUSART1_Write
  1503                           
  1504                           ;main.c: 181: EUSART1_Write(0b00100001);
  1505  000376  0E21               	movlw	33
  1506  000378  EC87  F005         	call	_EUSART1_Write
  1507                           
  1508                           ;main.c: 182: EUSART1_Write(0b10001101);
  1509  00037C  0E8D               	movlw	141
  1510  00037E  EC87  F005         	call	_EUSART1_Write
  1511                           
  1512                           ;main.c: 183: EUSART1_Write(0b00001010);
  1513  000382  0E0A               	movlw	10
  1514  000384  EC87  F005         	call	_EUSART1_Write
  1515                           
  1516                           ;main.c: 189: EUSART1_Write(0b00101110);
  1517  000388  0E2E               	movlw	46
  1518  00038A  EC87  F005         	call	_EUSART1_Write
  1519                           
  1520                           ;main.c: 190: EUSART1_Write(0b00110000);
  1521  00038E  0E30               	movlw	48
  1522  000390  EC87  F005         	call	_EUSART1_Write
  1523                           
  1524                           ;main.c: 191: EUSART1_Write(0b00110000);
  1525  000394  0E30               	movlw	48
  1526  000396  EC87  F005         	call	_EUSART1_Write
  1527                           
  1528                           ;main.c: 193: LATA=0xF0;
  1529  00039A  0EF0               	movlw	240
  1530  00039C  6E89               	movwf	3977,c	;volatile
  1531                           
  1532                           ;main.c: 195: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1533  00039E  0E29               	movlw	41
  1534  0003A0  0100               	movlb	0	; () banked
  1535  0003A2  6FF2               	movwf	(??_main+1)& (0+255),b
  1536  0003A4  0E96               	movlw	150
  1537  0003A6  6FF1               	movwf	??_main& (0+255),b
  1538  0003A8  0E7F               	movlw	127
  1539  0003AA                     u12987:
  1540  0003AA  2EE8               	decfsz	wreg,f,c
  1541  0003AC  D7FE               	bra	u12987
  1542  0003AE  2FF1               	decfsz	??_main& (0+255),f,b
  1543  0003B0  D7FC               	bra	u12987
  1544  0003B2  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1545  0003B4  D7FA               	bra	u12987
  1546                           
  1547                           ;main.c: 199: LATA=0xFF;
  1548  0003B6  6889               	setf	3977,c	;volatile
  1549                           
  1550                           ;main.c: 202: EUSART1_Write(0b00101110);
  1551  0003B8  0E2E               	movlw	46
  1552  0003BA  EC87  F005         	call	_EUSART1_Write
  1553                           
  1554                           ;main.c: 203: EUSART1_Write(0b00110000);
  1555  0003BE  0E30               	movlw	48
  1556  0003C0  EC87  F005         	call	_EUSART1_Write
  1557                           
  1558                           ;main.c: 204: EUSART1_Write(0b00110000);
  1559  0003C4  0E30               	movlw	48
  1560  0003C6  EC87  F005         	call	_EUSART1_Write
  1561                           
  1562                           ;main.c: 205: EUSART1_Write(0b10110111);
  1563  0003CA  0EB7               	movlw	183
  1564  0003CC  EC87  F005         	call	_EUSART1_Write
  1565                           
  1566                           ;main.c: 206: EUSART1_Write(0b10001101);
  1567  0003D0  0E8D               	movlw	141
  1568  0003D2  EC87  F005         	call	_EUSART1_Write
  1569                           
  1570                           ;main.c: 207: EUSART1_Write(0b00001010);
  1571  0003D6  0E0A               	movlw	10
  1572  0003D8  EC87  F005         	call	_EUSART1_Write
  1573                           
  1574                           ;main.c: 209: EUSART1_Write(0x61);
  1575  0003DC  0E61               	movlw	97
  1576  0003DE  EC87  F005         	call	_EUSART1_Write
  1577                           
  1578                           ;main.c: 210: EUSART1_Write(0x61);
  1579  0003E2  0E61               	movlw	97
  1580  0003E4  EC87  F005         	call	_EUSART1_Write
  1581                           
  1582                           ;main.c: 211: EUSART1_Write(0x61);
  1583  0003E8  0E61               	movlw	97
  1584  0003EA  EC87  F005         	call	_EUSART1_Write
  1585                           
  1586                           ;main.c: 212: LATA=0xF0;
  1587  0003EE  0EF0               	movlw	240
  1588  0003F0  6E89               	movwf	3977,c	;volatile
  1589                           
  1590                           ;main.c: 238: counterx++;
  1591  0003F2  0100               	movlb	0	; () banked
  1592  0003F4  4B76               	infsnz	_counterx& (0+255),f,b
  1593  0003F6  2B77               	incf	(_counterx+1)& (0+255),f,b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 239: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1597  0003F8  0E29               	movlw	41
  1598  0003FA  0100               	movlb	0	; () banked
  1599  0003FC  6FF2               	movwf	(??_main+1)& (0+255),b
  1600  0003FE  0E96               	movlw	150
  1601  000400  6FF1               	movwf	??_main& (0+255),b
  1602  000402  0E7F               	movlw	127
  1603  000404                     u12997:
  1604  000404  2EE8               	decfsz	wreg,f,c
  1605  000406  D7FE               	bra	u12997
  1606  000408  2FF1               	decfsz	??_main& (0+255),f,b
  1607  00040A  D7FC               	bra	u12997
  1608  00040C  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1609  00040E  D7FA               	bra	u12997
  1610                           
  1611                           ;main.c: 240: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1612  000410  0E29               	movlw	41
  1613  000412  0100               	movlb	0	; () banked
  1614  000414  6FF2               	movwf	(??_main+1)& (0+255),b
  1615  000416  0E96               	movlw	150
  1616  000418  6FF1               	movwf	??_main& (0+255),b
  1617  00041A  0E7F               	movlw	127
  1618  00041C                     u13007:
  1619  00041C  2EE8               	decfsz	wreg,f,c
  1620  00041E  D7FE               	bra	u13007
  1621  000420  2FF1               	decfsz	??_main& (0+255),f,b
  1622  000422  D7FC               	bra	u13007
  1623  000424  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1624  000426  D7FA               	bra	u13007
  1625                           
  1626                           ;main.c: 241: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1627  000428  0E29               	movlw	41
  1628  00042A  0100               	movlb	0	; () banked
  1629  00042C  6FF2               	movwf	(??_main+1)& (0+255),b
  1630  00042E  0E96               	movlw	150
  1631  000430  6FF1               	movwf	??_main& (0+255),b
  1632  000432  0E7F               	movlw	127
  1633  000434                     u13017:
  1634  000434  2EE8               	decfsz	wreg,f,c
  1635  000436  D7FE               	bra	u13017
  1636  000438  2FF1               	decfsz	??_main& (0+255),f,b
  1637  00043A  D7FC               	bra	u13017
  1638  00043C  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1639  00043E  D7FA               	bra	u13017
  1640                           
  1641                           ;main.c: 242: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1642  000440  0E29               	movlw	41
  1643  000442  0100               	movlb	0	; () banked
  1644  000444  6FF2               	movwf	(??_main+1)& (0+255),b
  1645  000446  0E96               	movlw	150
  1646  000448  6FF1               	movwf	??_main& (0+255),b
  1647  00044A  0E7F               	movlw	127
  1648  00044C                     u13027:
  1649  00044C  2EE8               	decfsz	wreg,f,c
  1650  00044E  D7FE               	bra	u13027
  1651  000450  2FF1               	decfsz	??_main& (0+255),f,b
  1652  000452  D7FC               	bra	u13027
  1653  000454  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1654  000456  D7FA               	bra	u13027
  1655                           
  1656                           ;main.c: 243: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1657  000458  0E29               	movlw	41
  1658  00045A  0100               	movlb	0	; () banked
  1659  00045C  6FF2               	movwf	(??_main+1)& (0+255),b
  1660  00045E  0E96               	movlw	150
  1661  000460  6FF1               	movwf	??_main& (0+255),b
  1662  000462  0E7F               	movlw	127
  1663  000464                     u13037:
  1664  000464  2EE8               	decfsz	wreg,f,c
  1665  000466  D7FE               	bra	u13037
  1666  000468  2FF1               	decfsz	??_main& (0+255),f,b
  1667  00046A  D7FC               	bra	u13037
  1668  00046C  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1669  00046E  D7FA               	bra	u13037
  1670                           
  1671                           ;main.c: 244: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1672  000470  0E29               	movlw	41
  1673  000472  0100               	movlb	0	; () banked
  1674  000474  6FF2               	movwf	(??_main+1)& (0+255),b
  1675  000476  0E96               	movlw	150
  1676  000478  6FF1               	movwf	??_main& (0+255),b
  1677  00047A  0E7F               	movlw	127
  1678  00047C                     u13047:
  1679  00047C  2EE8               	decfsz	wreg,f,c
  1680  00047E  D7FE               	bra	u13047
  1681  000480  2FF1               	decfsz	??_main& (0+255),f,b
  1682  000482  D7FC               	bra	u13047
  1683  000484  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1684  000486  D7FA               	bra	u13047
  1685                           
  1686                           ;main.c: 245: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1687  000488  0E29               	movlw	41
  1688  00048A  0100               	movlb	0	; () banked
  1689  00048C  6FF2               	movwf	(??_main+1)& (0+255),b
  1690  00048E  0E96               	movlw	150
  1691  000490  6FF1               	movwf	??_main& (0+255),b
  1692  000492  0E7F               	movlw	127
  1693  000494                     u13057:
  1694  000494  2EE8               	decfsz	wreg,f,c
  1695  000496  D7FE               	bra	u13057
  1696  000498  2FF1               	decfsz	??_main& (0+255),f,b
  1697  00049A  D7FC               	bra	u13057
  1698  00049C  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1699  00049E  D7FA               	bra	u13057
  1700                           
  1701                           ;main.c: 246: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1702  0004A0  0E29               	movlw	41
  1703  0004A2  0100               	movlb	0	; () banked
  1704  0004A4  6FF2               	movwf	(??_main+1)& (0+255),b
  1705  0004A6  0E96               	movlw	150
  1706  0004A8  6FF1               	movwf	??_main& (0+255),b
  1707  0004AA  0E7F               	movlw	127
  1708  0004AC                     u13067:
  1709  0004AC  2EE8               	decfsz	wreg,f,c
  1710  0004AE  D7FE               	bra	u13067
  1711  0004B0  2FF1               	decfsz	??_main& (0+255),f,b
  1712  0004B2  D7FC               	bra	u13067
  1713  0004B4  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1714  0004B6  D7FA               	bra	u13067
  1715                           
  1716                           ;main.c: 247: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1717  0004B8  0E29               	movlw	41
  1718  0004BA  0100               	movlb	0	; () banked
  1719  0004BC  6FF2               	movwf	(??_main+1)& (0+255),b
  1720  0004BE  0E96               	movlw	150
  1721  0004C0  6FF1               	movwf	??_main& (0+255),b
  1722  0004C2  0E7F               	movlw	127
  1723  0004C4                     u13077:
  1724  0004C4  2EE8               	decfsz	wreg,f,c
  1725  0004C6  D7FE               	bra	u13077
  1726  0004C8  2FF1               	decfsz	??_main& (0+255),f,b
  1727  0004CA  D7FC               	bra	u13077
  1728  0004CC  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1729  0004CE  D7FA               	bra	u13077
  1730                           
  1731                           ;main.c: 248: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1732  0004D0  0E29               	movlw	41
  1733  0004D2  0100               	movlb	0	; () banked
  1734  0004D4  6FF2               	movwf	(??_main+1)& (0+255),b
  1735  0004D6  0E96               	movlw	150
  1736  0004D8  6FF1               	movwf	??_main& (0+255),b
  1737  0004DA  0E7F               	movlw	127
  1738  0004DC                     u13087:
  1739  0004DC  2EE8               	decfsz	wreg,f,c
  1740  0004DE  D7FE               	bra	u13087
  1741  0004E0  2FF1               	decfsz	??_main& (0+255),f,b
  1742  0004E2  D7FC               	bra	u13087
  1743  0004E4  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1744  0004E6  D7FA               	bra	u13087
  1745                           
  1746                           ;main.c: 249: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1747  0004E8  0E29               	movlw	41
  1748  0004EA  0100               	movlb	0	; () banked
  1749  0004EC  6FF2               	movwf	(??_main+1)& (0+255),b
  1750  0004EE  0E96               	movlw	150
  1751  0004F0  6FF1               	movwf	??_main& (0+255),b
  1752  0004F2  0E7F               	movlw	127
  1753  0004F4                     u13097:
  1754  0004F4  2EE8               	decfsz	wreg,f,c
  1755  0004F6  D7FE               	bra	u13097
  1756  0004F8  2FF1               	decfsz	??_main& (0+255),f,b
  1757  0004FA  D7FC               	bra	u13097
  1758  0004FC  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1759  0004FE  D7FA               	bra	u13097
  1760                           
  1761                           ;main.c: 250: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1762  000500  0E29               	movlw	41
  1763  000502  0100               	movlb	0	; () banked
  1764  000504  6FF2               	movwf	(??_main+1)& (0+255),b
  1765  000506  0E96               	movlw	150
  1766  000508  6FF1               	movwf	??_main& (0+255),b
  1767  00050A  0E7F               	movlw	127
  1768  00050C                     u13107:
  1769  00050C  2EE8               	decfsz	wreg,f,c
  1770  00050E  D7FE               	bra	u13107
  1771  000510  2FF1               	decfsz	??_main& (0+255),f,b
  1772  000512  D7FC               	bra	u13107
  1773  000514  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  1774  000516  D7FA               	bra	u13107
  1775                           
  1776                           ;main.c: 251: substring(dataxstr, sub, 30, 10);
  1777  000518  0ED8               	movlw	low _dataxstr
  1778  00051A  0100               	movlb	0	; () banked
  1779  00051C  6FE3               	movwf	substring@s& (0+255),b
  1780  00051E  0E07               	movlw	high _dataxstr
  1781  000520  6FE4               	movwf	(substring@s+1)& (0+255),b
  1782  000522  0ED8               	movlw	low _sub
  1783  000524  6FE5               	movwf	substring@sub& (0+255),b
  1784  000526  0E03               	movlw	high _sub
  1785  000528  6FE6               	movwf	(substring@sub+1)& (0+255),b
  1786  00052A  0E00               	movlw	0
  1787  00052C  6FE8               	movwf	(substring@p+1)& (0+255),b
  1788  00052E  0E1E               	movlw	30
  1789  000530  6FE7               	movwf	substring@p& (0+255),b
  1790  000532  0E00               	movlw	0
  1791  000534  6FEA               	movwf	(substring@l+1)& (0+255),b
  1792  000536  0E0A               	movlw	10
  1793  000538  6FE9               	movwf	substring@l& (0+255),b
  1794  00053A  EC7F  F004         	call	_substring	;wreg free
  1795  00053E  D70C               	goto	l2818
  1796  000540                     __end_of_main:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           intcon	equ	0xFF2
  1803                           postinc0	equ	0xFEE
  1804                           wreg	equ	0xFE8
  1805                           postdec2	equ	0xFDD
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _substring *****************
  1811 ;; Defined at:
  1812 ;;		line 320 in file "main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1815 ;;		 -> dataxstr(1024), 
  1816 ;;  sub             2    2[BANK0 ] PTR unsigned char 
  1817 ;;		 -> sub(1024), 
  1818 ;;  p               2    4[BANK0 ] int 
  1819 ;;  l               2    6[BANK0 ] int 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  c               2   12[BANK0 ] int 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1831 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;Total ram usage:       14 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    7
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text1
  1846  0008FE                     __ptext1:
  1847                           	opt stack 0
  1848  0008FE                     _substring:
  1849                           	opt stack 23
  1850                           
  1851                           ;main.c: 321: int c = 0;
  1852                           
  1853                           ;incstack = 0
  1854  0008FE  0E00               	movlw	0
  1855  000900  0100               	movlb	0	; () banked
  1856  000902  6FF0               	movwf	(substring@c+1)& (0+255),b
  1857  000904  0E00               	movlw	0
  1858  000906  6FEF               	movwf	substring@c& (0+255),b
  1859                           
  1860                           ;main.c: 323: while (c < l) {
  1861  000908  D01E               	goto	l2825
  1862  00090A                     
  1863                           ; BSR set to: 0
  1864                           ;main.c: 324: sub[c] = s[p+c-1];
  1865                           
  1866                           ; BSR set to: 0
  1867  00090A  0EFF               	movlw	255
  1868  00090C  6FEB               	movwf	??_substring& (0+255),b
  1869  00090E  0EFF               	movlw	255
  1870  000910  6FEC               	movwf	(??_substring+1)& (0+255),b
  1871  000912  51EF               	movf	substring@c& (0+255),w,b
  1872  000914  25E7               	addwf	substring@p& (0+255),w,b
  1873  000916  6FED               	movwf	(??_substring+2)& (0+255),b
  1874  000918  51F0               	movf	(substring@c+1)& (0+255),w,b
  1875  00091A  21E8               	addwfc	(substring@p+1)& (0+255),w,b
  1876  00091C  6FEE               	movwf	(??_substring+3)& (0+255),b
  1877  00091E  51EB               	movf	??_substring& (0+255),w,b
  1878  000920  27ED               	addwf	(??_substring+2)& (0+255),f,b
  1879  000922  51EC               	movf	(??_substring+1)& (0+255),w,b
  1880  000924  23EE               	addwfc	(??_substring+3)& (0+255),f,b
  1881  000926  51ED               	movf	(??_substring+2)& (0+255),w,b
  1882  000928  25E3               	addwf	substring@s& (0+255),w,b
  1883  00092A  6ED9               	movwf	fsr2l,c
  1884  00092C  51EE               	movf	(??_substring+3)& (0+255),w,b
  1885  00092E  21E4               	addwfc	(substring@s+1)& (0+255),w,b
  1886  000930  6EDA               	movwf	fsr2h,c
  1887  000932  51EF               	movf	substring@c& (0+255),w,b
  1888  000934  25E5               	addwf	substring@sub& (0+255),w,b
  1889  000936  6EE9               	movwf	fsr0l,c
  1890  000938  51F0               	movf	(substring@c+1)& (0+255),w,b
  1891  00093A  21E6               	addwfc	(substring@sub+1)& (0+255),w,b
  1892  00093C  6EEA               	movwf	fsr0h,c
  1893  00093E  CFDF FFEF          	movff	indf2,indf0
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main.c: 325: c++;
  1897  000942  4BEF               	infsnz	substring@c& (0+255),f,b
  1898  000944  2BF0               	incf	(substring@c+1)& (0+255),f,b
  1899  000946                     l2825:
  1900                           
  1901                           ; BSR set to: 0
  1902                           
  1903                           ; BSR set to: 0
  1904  000946  51E9               	movf	substring@l& (0+255),w,b
  1905  000948  5DEF               	subwf	substring@c& (0+255),w,b
  1906  00094A  51F0               	movf	(substring@c+1)& (0+255),w,b
  1907  00094C  0A80               	xorlw	128
  1908  00094E  6FEB               	movwf	??_substring& (0+255),b
  1909  000950  51EA               	movf	(substring@l+1)& (0+255),w,b
  1910  000952  0A80               	xorlw	128
  1911  000954  59EB               	subwfb	??_substring& (0+255),w,b
  1912  000956  A0D8               	btfss	status,0,c
  1913  000958  D7D8               	goto	l2826
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 326: }
  1917                           ;main.c: 327: sub[c] = '\0';
  1918                           
  1919                           ; BSR set to: 0
  1920  00095A  51EF               	movf	substring@c& (0+255),w,b
  1921  00095C  25E5               	addwf	substring@sub& (0+255),w,b
  1922  00095E  6ED9               	movwf	fsr2l,c
  1923  000960  51F0               	movf	(substring@c+1)& (0+255),w,b
  1924  000962  21E6               	addwfc	(substring@sub+1)& (0+255),w,b
  1925  000964  6EDA               	movwf	fsr2h,c
  1926  000966  0E00               	movlw	0
  1927  000968  6EDF               	movwf	indf2,c
  1928                           
  1929                           ; BSR set to: 0
  1930  00096A  0012               	return		;funcret
  1931  00096C                     __end_of_substring:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           intcon	equ	0xFF2
  1938                           indf0	equ	0xFEF
  1939                           postinc0	equ	0xFEE
  1940                           fsr0h	equ	0xFEA
  1941                           fsr0l	equ	0xFE9
  1942                           wreg	equ	0xFE8
  1943                           indf2	equ	0xFDF
  1944                           postdec2	equ	0xFDD
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _SYSTEM_Initialize *****************
  1950 ;; Defined at:
  1951 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:   10
  1972 ;; This function calls:
  1973 ;;		_EUSART1_Initialize
  1974 ;;		_EXT_INT_Initialize
  1975 ;;		_INTERRUPT_Initialize
  1976 ;;		_LORAWAN_PlatformInit
  1977 ;;		_OSCILLATOR_Initialize
  1978 ;;		_PIN_MANAGER_Initialize
  1979 ;;		_SPI2_Initialize
  1980 ;;		_TMR1_Initialize
  1981 ;;		_TMR5_Initialize
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text2
  1988  000C02                     __ptext2:
  1989                           	opt stack 0
  1990  000C02                     _SYSTEM_Initialize:
  1991                           	opt stack 20
  1992                           
  1993                           ;mcc.c: 53: INTERRUPT_Initialize();
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;incstack = 0
  1997  000C02  EC2F  F007         	call	_INTERRUPT_Initialize	;wreg free
  1998                           
  1999                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2000  000C06  EC16  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  2001                           
  2002                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2003  000C0A  ECD6  F006         	call	_OSCILLATOR_Initialize	;wreg free
  2004                           
  2005                           ;mcc.c: 56: SPI2_Initialize();
  2006  000C0E  ECCF  F006         	call	_SPI2_Initialize	;wreg free
  2007                           
  2008                           ;mcc.c: 59: TMR5_Initialize();
  2009  000C12  EC88  F006         	call	_TMR5_Initialize	;wreg free
  2010                           
  2011                           ;mcc.c: 60: EXT_INT_Initialize();
  2012  000C16  ECEC  F005         	call	_EXT_INT_Initialize	;wreg free
  2013                           
  2014                           ;mcc.c: 61: TMR1_Initialize();
  2015  000C1A  ECD6  F005         	call	_TMR1_Initialize	;wreg free
  2016                           
  2017                           ;mcc.c: 62: EUSART1_Initialize();
  2018  000C1E  EC3F  F004         	call	_EUSART1_Initialize	;wreg free
  2019                           
  2020                           ;mcc.c: 63: LORAWAN_PlatformInit();
  2021  000C22  EC27  F006         	call	_LORAWAN_PlatformInit	;wreg free
  2022  000C26  0012               	return		;funcret
  2023  000C28                     __end_of_SYSTEM_Initialize:
  2024                           	opt stack 0
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           intcon	equ	0xFF2
  2030                           indf0	equ	0xFEF
  2031                           postinc0	equ	0xFEE
  2032                           fsr0h	equ	0xFEA
  2033                           fsr0l	equ	0xFE9
  2034                           wreg	equ	0xFE8
  2035                           indf2	equ	0xFDF
  2036                           postdec2	equ	0xFDD
  2037                           fsr2h	equ	0xFDA
  2038                           fsr2l	equ	0xFD9
  2039                           status	equ	0xFD8
  2040                           
  2041 ;; *************** function _TMR5_Initialize *****************
  2042 ;; Defined at:
  2043 ;;		line 63 in file "mcc_generated_files/tmr5.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    7
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_SYSTEM_Initialize
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text3
  2072  000D10                     __ptext3:
  2073                           	opt stack 0
  2074  000D10                     _TMR5_Initialize:
  2075                           	opt stack 22
  2076                           
  2077                           ;tmr5.c: 68: T5GCON = 0x00;
  2078                           
  2079                           ;incstack = 0
  2080  000D10  0E00               	movlw	0
  2081  000D12  010F               	movlb	15	; () banked
  2082  000D14  6F4D               	movwf	77,b	;volatile
  2083                           
  2084                           ;tmr5.c: 71: TMR5H = 0x10;
  2085  000D16  0E10               	movlw	16
  2086  000D18  6F50               	movwf	80,b	;volatile
  2087                           
  2088                           ;tmr5.c: 74: TMR5L = 0x00;
  2089  000D1A  0E00               	movlw	0
  2090  000D1C  6F4F               	movwf	79,b	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;tmr5.c: 77: timer5ReloadVal=TMR5;
  2094  000D1E  CF4F F1F5          	movff	3919,_timer5ReloadVal	;volatile
  2095  000D22  CF50 F1F6          	movff	3920,_timer5ReloadVal+1	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;tmr5.c: 80: PIR5bits.TMR5IF = 0;
  2099  000D26  927E               	bcf	3966,1,c	;volatile
  2100                           
  2101                           ;tmr5.c: 83: T5CON = 0xBD;
  2102  000D28  0EBD               	movlw	189
  2103  000D2A  6F4E               	movwf	78,b	;volatile
  2104                           
  2105                           ; BSR set to: 15
  2106  000D2C  0012               	return		;funcret
  2107  000D2E                     __end_of_TMR5_Initialize:
  2108                           	opt stack 0
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           intcon	equ	0xFF2
  2114                           indf0	equ	0xFEF
  2115                           postinc0	equ	0xFEE
  2116                           fsr0h	equ	0xFEA
  2117                           fsr0l	equ	0xFE9
  2118                           wreg	equ	0xFE8
  2119                           indf2	equ	0xFDF
  2120                           postdec2	equ	0xFDD
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _TMR1_Initialize *****************
  2126 ;; Defined at:
  2127 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    8
  2148 ;; This function calls:
  2149 ;;		_TMR1_SetInterruptHandler
  2150 ;; This function is called by:
  2151 ;;		_SYSTEM_Initialize
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text4
  2156  000BAC                     __ptext4:
  2157                           	opt stack 0
  2158  000BAC                     _TMR1_Initialize:
  2159                           	opt stack 21
  2160                           
  2161                           ;tmr1.c: 69: T1GCON = 0x00;
  2162                           
  2163                           ; BSR set to: 15
  2164                           ;incstack = 0
  2165  000BAC  0E00               	movlw	0
  2166  000BAE  6ECC               	movwf	4044,c	;volatile
  2167                           
  2168                           ;tmr1.c: 72: TMR1H = 0x00;
  2169  000BB0  0E00               	movlw	0
  2170  000BB2  6ECF               	movwf	4047,c	;volatile
  2171                           
  2172                           ;tmr1.c: 75: TMR1L = 0x00;
  2173  000BB4  0E00               	movlw	0
  2174  000BB6  6ECE               	movwf	4046,c	;volatile
  2175                           
  2176                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2177  000BB8  CFCE F0F3          	movff	4046,_timer1ReloadVal	;volatile
  2178  000BBC  CFCF F0F4          	movff	4047,_timer1ReloadVal+1	;volatile
  2179                           
  2180                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2181  000BC0  909E               	bcf	3998,0,c	;volatile
  2182                           
  2183                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2184  000BC2  809D               	bsf	3997,0,c	;volatile
  2185                           
  2186                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2187  000BC4  0E68               	movlw	low _TMR1_DefaultInterruptHandler
  2188  000BC6  0100               	movlb	0	; () banked
  2189  000BC8  6FE3               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2190  000BCA  0E0E               	movlw	high _TMR1_DefaultInterruptHandler
  2191  000BCC  6FE4               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2192  000BCE  ECDD  F006         	call	_TMR1_SetInterruptHandler	;wreg free
  2193                           
  2194                           ;tmr1.c: 90: T1CON = 0x8D;
  2195  000BD2  0E8D               	movlw	141
  2196  000BD4  6ECD               	movwf	4045,c	;volatile
  2197  000BD6  0012               	return		;funcret
  2198  000BD8                     __end_of_TMR1_Initialize:
  2199                           	opt stack 0
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           intcon	equ	0xFF2
  2205                           indf0	equ	0xFEF
  2206                           postinc0	equ	0xFEE
  2207                           fsr0h	equ	0xFEA
  2208                           fsr0l	equ	0xFE9
  2209                           wreg	equ	0xFE8
  2210                           indf2	equ	0xFDF
  2211                           postdec2	equ	0xFDD
  2212                           fsr2h	equ	0xFDA
  2213                           fsr2l	equ	0xFD9
  2214                           status	equ	0xFD8
  2215                           
  2216 ;; *************** function _SPI2_Initialize *****************
  2217 ;; Defined at:
  2218 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    7
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_SYSTEM_Initialize
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text5
  2247  000D9E                     __ptext5:
  2248                           	opt stack 0
  2249  000D9E                     _SPI2_Initialize:
  2250                           	opt stack 22
  2251                           
  2252                           ;spi2.c: 70: SSP2STAT = 0x40;
  2253                           
  2254                           ;incstack = 0
  2255  000D9E  0E40               	movlw	64
  2256  000DA0  6E6D               	movwf	3949,c	;volatile
  2257                           
  2258                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2259  000DA2  0E20               	movlw	32
  2260  000DA4  6E6C               	movwf	3948,c	;volatile
  2261                           
  2262                           ;spi2.c: 76: SSP2ADD = 0x00;
  2263  000DA6  0E00               	movlw	0
  2264  000DA8  6E6E               	movwf	3950,c	;volatile
  2265  000DAA  0012               	return		;funcret
  2266  000DAC                     __end_of_SPI2_Initialize:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           intcon	equ	0xFF2
  2273                           indf0	equ	0xFEF
  2274                           postinc0	equ	0xFEE
  2275                           fsr0h	equ	0xFEA
  2276                           fsr0l	equ	0xFE9
  2277                           wreg	equ	0xFE8
  2278                           indf2	equ	0xFDF
  2279                           postdec2	equ	0xFDD
  2280                           fsr2h	equ	0xFDA
  2281                           fsr2l	equ	0xFD9
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _PIN_MANAGER_Initialize *****************
  2285 ;; Defined at:
  2286 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    8
  2307 ;; This function calls:
  2308 ;;		_IOCB4_SetInterruptHandler
  2309 ;; This function is called by:
  2310 ;;		_SYSTEM_Initialize
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text6
  2315  000A2C                     __ptext6:
  2316                           	opt stack 0
  2317  000A2C                     _PIN_MANAGER_Initialize:
  2318                           	opt stack 21
  2319                           
  2320                           ;pin_manager.c: 62: LATE = 0x00;
  2321                           
  2322                           ;incstack = 0
  2323  000A2C  0E00               	movlw	0
  2324  000A2E  6E8D               	movwf	3981,c	;volatile
  2325                           
  2326                           ;pin_manager.c: 63: LATD = 0x00;
  2327  000A30  0E00               	movlw	0
  2328  000A32  6E8C               	movwf	3980,c	;volatile
  2329                           
  2330                           ;pin_manager.c: 64: LATA = 0x00;
  2331  000A34  0E00               	movlw	0
  2332  000A36  6E89               	movwf	3977,c	;volatile
  2333                           
  2334                           ;pin_manager.c: 65: LATB = 0x00;
  2335  000A38  0E00               	movlw	0
  2336  000A3A  6E8A               	movwf	3978,c	;volatile
  2337                           
  2338                           ;pin_manager.c: 66: LATC = 0x00;
  2339  000A3C  0E00               	movlw	0
  2340  000A3E  6E8B               	movwf	3979,c	;volatile
  2341                           
  2342                           ;pin_manager.c: 71: TRISE = 0x07;
  2343  000A40  0E07               	movlw	7
  2344  000A42  6E96               	movwf	3990,c	;volatile
  2345                           
  2346                           ;pin_manager.c: 72: TRISA = 0xFF;
  2347  000A44  6892               	setf	3986,c	;volatile
  2348                           
  2349                           ;pin_manager.c: 73: TRISB = 0xFF;
  2350  000A46  6893               	setf	3987,c	;volatile
  2351                           
  2352                           ;pin_manager.c: 74: TRISC = 0xBE;
  2353  000A48  0EBE               	movlw	190
  2354  000A4A  6E94               	movwf	3988,c	;volatile
  2355                           
  2356                           ;pin_manager.c: 75: TRISD = 0xE6;
  2357  000A4C  0EE6               	movlw	230
  2358  000A4E  6E95               	movwf	3989,c	;volatile
  2359                           
  2360                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2361  000A50  0EE4               	movlw	228
  2362  000A52  010F               	movlb	15	; () banked
  2363  000A54  6F3B               	movwf	59,b	;volatile
  2364                           
  2365                           ;pin_manager.c: 81: ANSELC = 0x38;
  2366  000A56  0E38               	movlw	56
  2367  000A58  6F3A               	movwf	58,b	;volatile
  2368                           
  2369                           ;pin_manager.c: 82: ANSELB = 0x28;
  2370  000A5A  0E28               	movlw	40
  2371  000A5C  6F39               	movwf	57,b	;volatile
  2372                           
  2373                           ;pin_manager.c: 83: ANSELE = 0x07;
  2374  000A5E  0E07               	movlw	7
  2375  000A60  6F3C               	movwf	60,b	;volatile
  2376                           
  2377                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2378  000A62  0E2F               	movlw	47
  2379  000A64  6F38               	movwf	56,b	;volatile
  2380                           
  2381                           ;pin_manager.c: 89: WPUB = 0x00;
  2382  000A66  0E00               	movlw	0
  2383  000A68  6E61               	movwf	3937,c	;volatile
  2384                           
  2385                           ; BSR set to: 15
  2386                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2387  000A6A  8EF1               	bsf	intcon2,7,c	;volatile
  2388                           
  2389                           ; BSR set to: 15
  2390                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2391  000A6C  8862               	bsf	3938,4,c	;volatile
  2392                           
  2393                           ; BSR set to: 15
  2394                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2395  000A6E  0E6A               	movlw	low _IOCB4_DefaultInterruptHandler
  2396  000A70  0100               	movlb	0	; () banked
  2397  000A72  6FE3               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2398  000A74  0E0E               	movlw	high _IOCB4_DefaultInterruptHandler
  2399  000A76  6FE4               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2400  000A78  ECE2  F006         	call	_IOCB4_SetInterruptHandler	;wreg free
  2401                           
  2402                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2403  000A7C  86F2               	bsf	intcon,3,c	;volatile
  2404  000A7E  0012               	return		;funcret
  2405  000A80                     __end_of_PIN_MANAGER_Initialize:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           intcon	equ	0xFF2
  2412                           intcon2	equ	0xFF1
  2413                           indf0	equ	0xFEF
  2414                           postinc0	equ	0xFEE
  2415                           fsr0h	equ	0xFEA
  2416                           fsr0l	equ	0xFE9
  2417                           wreg	equ	0xFE8
  2418                           indf2	equ	0xFDF
  2419                           postdec2	equ	0xFDD
  2420                           fsr2h	equ	0xFDA
  2421                           fsr2l	equ	0xFD9
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _OSCILLATOR_Initialize *****************
  2425 ;; Defined at:
  2426 ;;		line 66 in file "mcc_generated_files/mcc.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    7
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_SYSTEM_Initialize
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text7
  2455  000DAC                     __ptext7:
  2456                           	opt stack 0
  2457  000DAC                     _OSCILLATOR_Initialize:
  2458                           	opt stack 22
  2459                           
  2460                           ;mcc.c: 69: OSCCON = 0x70;
  2461                           
  2462                           ;incstack = 0
  2463  000DAC  0E70               	movlw	112
  2464  000DAE  6ED3               	movwf	4051,c	;volatile
  2465                           
  2466                           ;mcc.c: 71: OSCCON2 = 0x04;
  2467  000DB0  0E04               	movlw	4
  2468  000DB2  6ED2               	movwf	4050,c	;volatile
  2469                           
  2470                           ;mcc.c: 73: OSCTUNE = 0x00;
  2471  000DB4  0E00               	movlw	0
  2472  000DB6  6E9B               	movwf	3995,c	;volatile
  2473  000DB8  0012               	return		;funcret
  2474  000DBA                     __end_of_OSCILLATOR_Initialize:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           intcon	equ	0xFF2
  2481                           intcon2	equ	0xFF1
  2482                           indf0	equ	0xFEF
  2483                           postinc0	equ	0xFEE
  2484                           fsr0h	equ	0xFEA
  2485                           fsr0l	equ	0xFE9
  2486                           wreg	equ	0xFE8
  2487                           indf2	equ	0xFDF
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _LORAWAN_PlatformInit *****************
  2494 ;; Defined at:
  2495 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    9
  2516 ;; This function calls:
  2517 ;;		_DIO0_ISR_Lora_Init
  2518 ;;		_DIO1_ISR_Lora_Init
  2519 ;;		_DIO2_ISR_Lora_Init
  2520 ;;		_DIO3_ISR_Lora_Init
  2521 ;;		_DIO4_ISR_Lora_Init
  2522 ;;		_DIO5_ISR_Lora_Init
  2523 ;;		_SystemTimerInit
  2524 ;;		_TMR_ISR_Lora_Init
  2525 ;; This function is called by:
  2526 ;;		_SYSTEM_Initialize
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text8
  2531  000C4E                     __ptext8:
  2532                           	opt stack 0
  2533  000C4E                     _LORAWAN_PlatformInit:
  2534                           	opt stack 20
  2535                           
  2536                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2537                           
  2538                           ;incstack = 0
  2539  000C4E  ECAF  F006         	call	_TMR_ISR_Lora_Init	;wreg free
  2540                           
  2541                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2542  000C52  ECC7  F006         	call	_DIO0_ISR_Lora_Init	;wreg free
  2543                           
  2544                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2545  000C56  ECBF  F006         	call	_DIO1_ISR_Lora_Init	;wreg free
  2546                           
  2547                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2548  000C5A  ECB7  F006         	call	_DIO2_ISR_Lora_Init	;wreg free
  2549                           
  2550                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2551  000C5E  EC33  F007         	call	_DIO3_ISR_Lora_Init	;wreg free
  2552                           
  2553                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2554  000C62  EC32  F007         	call	_DIO4_ISR_Lora_Init	;wreg free
  2555                           
  2556                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2557  000C66  EC31  F007         	call	_DIO5_ISR_Lora_Init	;wreg free
  2558                           
  2559                           ;lorawan_init.c: 82: SystemTimerInit();
  2560  000C6A  EC17  F007         	call	_SystemTimerInit	;wreg free
  2561  000C6E  0012               	return		;funcret
  2562  000C70                     __end_of_LORAWAN_PlatformInit:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           intcon	equ	0xFF2
  2569                           intcon2	equ	0xFF1
  2570                           indf0	equ	0xFEF
  2571                           postinc0	equ	0xFEE
  2572                           fsr0h	equ	0xFEA
  2573                           fsr0l	equ	0xFE9
  2574                           wreg	equ	0xFE8
  2575                           indf2	equ	0xFDF
  2576                           postdec2	equ	0xFDD
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _TMR_ISR_Lora_Init *****************
  2582 ;; Defined at:
  2583 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    8
  2604 ;; This function calls:
  2605 ;;		_TMR1_SetInterruptHandler
  2606 ;; This function is called by:
  2607 ;;		_LORAWAN_PlatformInit
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text9
  2612  000D5E                     __ptext9:
  2613                           	opt stack 0
  2614  000D5E                     _TMR_ISR_Lora_Init:
  2615                           	opt stack 20
  2616                           
  2617                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2618                           
  2619                           ;incstack = 0
  2620  000D5E  0ED0               	movlw	low _TMR_ISR_lora
  2621  000D60  0100               	movlb	0	; () banked
  2622  000D62  6FE3               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2623  000D64  0E09               	movlw	high _TMR_ISR_lora
  2624  000D66  6FE4               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2625  000D68  ECDD  F006         	call	_TMR1_SetInterruptHandler	;wreg free
  2626  000D6C  0012               	return		;funcret
  2627  000D6E                     __end_of_TMR_ISR_Lora_Init:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           intcon	equ	0xFF2
  2634                           intcon2	equ	0xFF1
  2635                           indf0	equ	0xFEF
  2636                           postinc0	equ	0xFEE
  2637                           fsr0h	equ	0xFEA
  2638                           fsr0l	equ	0xFE9
  2639                           wreg	equ	0xFE8
  2640                           indf2	equ	0xFDF
  2641                           postdec2	equ	0xFDD
  2642                           fsr2h	equ	0xFDA
  2643                           fsr2l	equ	0xFD9
  2644                           status	equ	0xFD8
  2645                           
  2646 ;; *************** function _TMR1_SetInterruptHandler *****************
  2647 ;; Defined at:
  2648 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2651 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;Total ram usage:        2 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    7
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_TMR_ISR_Lora_Init
  2674 ;;		_TMR1_Initialize
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text10
  2679  000DBA                     __ptext10:
  2680                           	opt stack 0
  2681  000DBA                     _TMR1_SetInterruptHandler:
  2682                           	opt stack 21
  2683                           
  2684                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2685                           
  2686                           ;incstack = 0
  2687  000DBA  C0E3  F1F7         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2688  000DBE  C0E4  F1F8         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2689  000DC2  0012               	return		;funcret
  2690  000DC4                     __end_of_TMR1_SetInterruptHandler:
  2691                           	opt stack 0
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           intcon	equ	0xFF2
  2697                           intcon2	equ	0xFF1
  2698                           indf0	equ	0xFEF
  2699                           postinc0	equ	0xFEE
  2700                           fsr0h	equ	0xFEA
  2701                           fsr0l	equ	0xFE9
  2702                           wreg	equ	0xFE8
  2703                           indf2	equ	0xFDF
  2704                           postdec2	equ	0xFDD
  2705                           fsr2h	equ	0xFDA
  2706                           fsr2l	equ	0xFD9
  2707                           status	equ	0xFD8
  2708                           
  2709 ;; *************** function _SystemTimerInit *****************
  2710 ;; Defined at:
  2711 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    7
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_LORAWAN_PlatformInit
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text11
  2740  000E2E                     __ptext11:
  2741                           	opt stack 0
  2742  000E2E                     _SystemTimerInit:
  2743                           	opt stack 21
  2744                           
  2745                           ;sw_timer.c: 137: allocatedTimers = 0;
  2746                           
  2747                           ;incstack = 0
  2748  000E2E  0E00               	movlw	0
  2749  000E30  6E4A               	movwf	_allocatedTimers,c	;volatile
  2750  000E32  0012               	return		;funcret
  2751  000E34                     __end_of_SystemTimerInit:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           intcon	equ	0xFF2
  2758                           intcon2	equ	0xFF1
  2759                           indf0	equ	0xFEF
  2760                           postinc0	equ	0xFEE
  2761                           fsr0h	equ	0xFEA
  2762                           fsr0l	equ	0xFE9
  2763                           wreg	equ	0xFE8
  2764                           indf2	equ	0xFDF
  2765                           postdec2	equ	0xFDD
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2771 ;; Defined at:
  2772 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;		None
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		None
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        0 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    7
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_LORAWAN_PlatformInit
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text12
  2801  000E62                     __ptext12:
  2802                           	opt stack 0
  2803  000E62                     _DIO5_ISR_Lora_Init:
  2804                           	opt stack 21
  2805                           
  2806                           ;incstack = 0
  2807  000E62  0012               	return		;funcret
  2808  000E64                     __end_of_DIO5_ISR_Lora_Init:
  2809                           	opt stack 0
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           intcon	equ	0xFF2
  2815                           intcon2	equ	0xFF1
  2816                           indf0	equ	0xFEF
  2817                           postinc0	equ	0xFEE
  2818                           fsr0h	equ	0xFEA
  2819                           fsr0l	equ	0xFE9
  2820                           wreg	equ	0xFE8
  2821                           indf2	equ	0xFDF
  2822                           postdec2	equ	0xFDD
  2823                           fsr2h	equ	0xFDA
  2824                           fsr2l	equ	0xFD9
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2828 ;; Defined at:
  2829 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		None
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    7
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_LORAWAN_PlatformInit
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text13
  2858  000E64                     __ptext13:
  2859                           	opt stack 0
  2860  000E64                     _DIO4_ISR_Lora_Init:
  2861                           	opt stack 21
  2862                           
  2863                           ;incstack = 0
  2864  000E64  0012               	return		;funcret
  2865  000E66                     __end_of_DIO4_ISR_Lora_Init:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           intcon	equ	0xFF2
  2872                           intcon2	equ	0xFF1
  2873                           indf0	equ	0xFEF
  2874                           postinc0	equ	0xFEE
  2875                           fsr0h	equ	0xFEA
  2876                           fsr0l	equ	0xFE9
  2877                           wreg	equ	0xFE8
  2878                           indf2	equ	0xFDF
  2879                           postdec2	equ	0xFDD
  2880                           fsr2h	equ	0xFDA
  2881                           fsr2l	equ	0xFD9
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2885 ;; Defined at:
  2886 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		None
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    7
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_LORAWAN_PlatformInit
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text14
  2915  000E66                     __ptext14:
  2916                           	opt stack 0
  2917  000E66                     _DIO3_ISR_Lora_Init:
  2918                           	opt stack 21
  2919                           
  2920                           ;incstack = 0
  2921  000E66  0012               	return		;funcret
  2922  000E68                     __end_of_DIO3_ISR_Lora_Init:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           intcon	equ	0xFF2
  2929                           intcon2	equ	0xFF1
  2930                           indf0	equ	0xFEF
  2931                           postinc0	equ	0xFEE
  2932                           fsr0h	equ	0xFEA
  2933                           fsr0l	equ	0xFE9
  2934                           wreg	equ	0xFE8
  2935                           indf2	equ	0xFDF
  2936                           postdec2	equ	0xFDD
  2937                           fsr2h	equ	0xFDA
  2938                           fsr2l	equ	0xFD9
  2939                           status	equ	0xFD8
  2940                           
  2941 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2942 ;; Defined at:
  2943 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    8
  2964 ;; This function calls:
  2965 ;;		_IOCB4_SetInterruptHandler
  2966 ;; This function is called by:
  2967 ;;		_LORAWAN_PlatformInit
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text15
  2972  000D6E                     __ptext15:
  2973                           	opt stack 0
  2974  000D6E                     _DIO2_ISR_Lora_Init:
  2975                           	opt stack 20
  2976                           
  2977                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2978                           
  2979                           ;incstack = 0
  2980  000D6E  0E34               	movlw	low _DIO2_ISR_Lora
  2981  000D70  0100               	movlb	0	; () banked
  2982  000D72  6FE3               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2983  000D74  0E0E               	movlw	high _DIO2_ISR_Lora
  2984  000D76  6FE4               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2985  000D78  ECE2  F006         	call	_IOCB4_SetInterruptHandler	;wreg free
  2986  000D7C  0012               	return		;funcret
  2987  000D7E                     __end_of_DIO2_ISR_Lora_Init:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           intcon	equ	0xFF2
  2994                           intcon2	equ	0xFF1
  2995                           indf0	equ	0xFEF
  2996                           postinc0	equ	0xFEE
  2997                           fsr0h	equ	0xFEA
  2998                           fsr0l	equ	0xFE9
  2999                           wreg	equ	0xFE8
  3000                           indf2	equ	0xFDF
  3001                           postdec2	equ	0xFDD
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3007 ;; Defined at:
  3008 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3011 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    7
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_DIO2_ISR_Lora_Init
  3034 ;;		_PIN_MANAGER_Initialize
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text16
  3039  000DC4                     __ptext16:
  3040                           	opt stack 0
  3041  000DC4                     _IOCB4_SetInterruptHandler:
  3042                           	opt stack 21
  3043                           
  3044                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  3045                           
  3046                           ;incstack = 0
  3047  000DC4  C0E3  F0F5         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3048  000DC8  C0E4  F0F6         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3049  000DCC  0012               	return		;funcret
  3050  000DCE                     __end_of_IOCB4_SetInterruptHandler:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           intcon	equ	0xFF2
  3057                           intcon2	equ	0xFF1
  3058                           indf0	equ	0xFEF
  3059                           postinc0	equ	0xFEE
  3060                           fsr0h	equ	0xFEA
  3061                           fsr0l	equ	0xFE9
  3062                           wreg	equ	0xFE8
  3063                           indf2	equ	0xFDF
  3064                           postdec2	equ	0xFDD
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3070 ;; Defined at:
  3071 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    8
  3092 ;; This function calls:
  3093 ;;		_INT2_SetInterruptHandler
  3094 ;; This function is called by:
  3095 ;;		_LORAWAN_PlatformInit
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text17
  3100  000D7E                     __ptext17:
  3101                           	opt stack 0
  3102  000D7E                     _DIO1_ISR_Lora_Init:
  3103                           	opt stack 20
  3104                           
  3105                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3106                           
  3107                           ;incstack = 0
  3108  000D7E  0E3A               	movlw	low _DIO1_ISR_Lora
  3109  000D80  0100               	movlb	0	; () banked
  3110  000D82  6FE3               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3111  000D84  0E0E               	movlw	high _DIO1_ISR_Lora
  3112  000D86  6FE4               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3113  000D88  ECE7  F006         	call	_INT2_SetInterruptHandler	;wreg free
  3114  000D8C  0012               	return		;funcret
  3115  000D8E                     __end_of_DIO1_ISR_Lora_Init:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           intcon	equ	0xFF2
  3122                           intcon2	equ	0xFF1
  3123                           indf0	equ	0xFEF
  3124                           postinc0	equ	0xFEE
  3125                           fsr0h	equ	0xFEA
  3126                           fsr0l	equ	0xFE9
  3127                           wreg	equ	0xFE8
  3128                           indf2	equ	0xFDF
  3129                           postdec2	equ	0xFDD
  3130                           fsr2h	equ	0xFDA
  3131                           fsr2l	equ	0xFD9
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3135 ;; Defined at:
  3136 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    8
  3157 ;; This function calls:
  3158 ;;		_INT1_SetInterruptHandler
  3159 ;; This function is called by:
  3160 ;;		_LORAWAN_PlatformInit
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text18
  3165  000D8E                     __ptext18:
  3166                           	opt stack 0
  3167  000D8E                     _DIO0_ISR_Lora_Init:
  3168                           	opt stack 20
  3169                           
  3170                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3171                           
  3172                           ;incstack = 0
  3173  000D8E  0E40               	movlw	low _DIO0_ISR_Lora
  3174  000D90  0100               	movlb	0	; () banked
  3175  000D92  6FE3               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3176  000D94  0E0E               	movlw	high _DIO0_ISR_Lora
  3177  000D96  6FE4               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3178  000D98  ECEC  F006         	call	_INT1_SetInterruptHandler	;wreg free
  3179  000D9C  0012               	return		;funcret
  3180  000D9E                     __end_of_DIO0_ISR_Lora_Init:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           intcon	equ	0xFF2
  3187                           intcon2	equ	0xFF1
  3188                           indf0	equ	0xFEF
  3189                           postinc0	equ	0xFEE
  3190                           fsr0h	equ	0xFEA
  3191                           fsr0l	equ	0xFE9
  3192                           wreg	equ	0xFE8
  3193                           indf2	equ	0xFDF
  3194                           postdec2	equ	0xFDD
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function _INTERRUPT_Initialize *****************
  3200 ;; Defined at:
  3201 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		None
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    7
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_SYSTEM_Initialize
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text19
  3230  000E5E                     __ptext19:
  3231                           	opt stack 0
  3232  000E5E                     _INTERRUPT_Initialize:
  3233                           	opt stack 22
  3234                           
  3235                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3236                           
  3237                           ;incstack = 0
  3238  000E5E  9ED0               	bcf	4048,7,c	;volatile
  3239  000E60  0012               	return		;funcret
  3240  000E62                     __end_of_INTERRUPT_Initialize:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           intcon	equ	0xFF2
  3247                           intcon2	equ	0xFF1
  3248                           indf0	equ	0xFEF
  3249                           postinc0	equ	0xFEE
  3250                           fsr0h	equ	0xFEA
  3251                           fsr0l	equ	0xFE9
  3252                           wreg	equ	0xFE8
  3253                           indf2	equ	0xFDF
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _EXT_INT_Initialize *****************
  3260 ;; Defined at:
  3261 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    8
  3282 ;; This function calls:
  3283 ;;		_INT1_SetInterruptHandler
  3284 ;;		_INT2_SetInterruptHandler
  3285 ;; This function is called by:
  3286 ;;		_SYSTEM_Initialize
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text20
  3291  000BD8                     __ptext20:
  3292                           	opt stack 0
  3293  000BD8                     _EXT_INT_Initialize:
  3294                           	opt stack 21
  3295                           
  3296                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3297                           
  3298                           ;incstack = 0
  3299  000BD8  90F0               	bcf	intcon3,0,c	;volatile
  3300                           
  3301                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3302  000BDA  8AF1               	bsf	intcon2,5,c	;volatile
  3303                           
  3304                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3305  000BDC  0E6E               	movlw	low _INT1_DefaultInterruptHandler
  3306  000BDE  0100               	movlb	0	; () banked
  3307  000BE0  6FE3               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3308  000BE2  0E0E               	movlw	high _INT1_DefaultInterruptHandler
  3309  000BE4  6FE4               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3310  000BE6  ECEC  F006         	call	_INT1_SetInterruptHandler	;wreg free
  3311                           
  3312                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3313  000BEA  86F0               	bsf	intcon3,3,c	;volatile
  3314                           
  3315                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3316  000BEC  92F0               	bcf	intcon3,1,c	;volatile
  3317                           
  3318                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3319  000BEE  88F1               	bsf	intcon2,4,c	;volatile
  3320                           
  3321                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3322  000BF0  0E6C               	movlw	low _INT2_DefaultInterruptHandler
  3323  000BF2  0100               	movlb	0	; () banked
  3324  000BF4  6FE3               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3325  000BF6  0E0E               	movlw	high _INT2_DefaultInterruptHandler
  3326  000BF8  6FE4               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3327  000BFA  ECE7  F006         	call	_INT2_SetInterruptHandler	;wreg free
  3328                           
  3329                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3330  000BFE  88F0               	bsf	intcon3,4,c	;volatile
  3331  000C00  0012               	return		;funcret
  3332  000C02                     __end_of_EXT_INT_Initialize:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           intcon	equ	0xFF2
  3339                           intcon2	equ	0xFF1
  3340                           intcon3	equ	0xFF0
  3341                           indf0	equ	0xFEF
  3342                           postinc0	equ	0xFEE
  3343                           fsr0h	equ	0xFEA
  3344                           fsr0l	equ	0xFE9
  3345                           wreg	equ	0xFE8
  3346                           indf2	equ	0xFDF
  3347                           postdec2	equ	0xFDD
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _INT2_SetInterruptHandler *****************
  3353 ;; Defined at:
  3354 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3357 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    7
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_DIO1_ISR_Lora_Init
  3380 ;;		_EXT_INT_Initialize
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text21
  3385  000DCE                     __ptext21:
  3386                           	opt stack 0
  3387  000DCE                     _INT2_SetInterruptHandler:
  3388                           	opt stack 20
  3389                           
  3390                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3391                           
  3392                           ;incstack = 0
  3393  000DCE  C0E3  F0F7         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3394  000DD2  C0E4  F0F8         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3395  000DD6  0012               	return		;funcret
  3396  000DD8                     __end_of_INT2_SetInterruptHandler:
  3397                           	opt stack 0
  3398                           tblptru	equ	0xFF8
  3399                           tblptrh	equ	0xFF7
  3400                           tblptrl	equ	0xFF6
  3401                           tablat	equ	0xFF5
  3402                           intcon	equ	0xFF2
  3403                           intcon2	equ	0xFF1
  3404                           intcon3	equ	0xFF0
  3405                           indf0	equ	0xFEF
  3406                           postinc0	equ	0xFEE
  3407                           fsr0h	equ	0xFEA
  3408                           fsr0l	equ	0xFE9
  3409                           wreg	equ	0xFE8
  3410                           indf2	equ	0xFDF
  3411                           postdec2	equ	0xFDD
  3412                           fsr2h	equ	0xFDA
  3413                           fsr2l	equ	0xFD9
  3414                           status	equ	0xFD8
  3415                           
  3416 ;; *************** function _INT1_SetInterruptHandler *****************
  3417 ;; Defined at:
  3418 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3421 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;Total ram usage:        2 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    7
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_DIO0_ISR_Lora_Init
  3444 ;;		_EXT_INT_Initialize
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text22
  3449  000DD8                     __ptext22:
  3450                           	opt stack 0
  3451  000DD8                     _INT1_SetInterruptHandler:
  3452                           	opt stack 20
  3453                           
  3454                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3455                           
  3456                           ;incstack = 0
  3457  000DD8  C0E3  F0F9         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3458  000DDC  C0E4  F0FA         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3459  000DE0  0012               	return		;funcret
  3460  000DE2                     __end_of_INT1_SetInterruptHandler:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           intcon	equ	0xFF2
  3467                           intcon2	equ	0xFF1
  3468                           intcon3	equ	0xFF0
  3469                           indf0	equ	0xFEF
  3470                           postinc0	equ	0xFEE
  3471                           fsr0h	equ	0xFEA
  3472                           fsr0l	equ	0xFE9
  3473                           wreg	equ	0xFE8
  3474                           indf2	equ	0xFDF
  3475                           postdec2	equ	0xFDD
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _EUSART1_Initialize *****************
  3481 ;; Defined at:
  3482 ;;		line 115 in file "mcc_generated_files/eusart1.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    8
  3503 ;; This function calls:
  3504 ;;		_EUSART1_SetErrorHandler
  3505 ;;		_EUSART1_SetFramingErrorHandler
  3506 ;;		_EUSART1_SetOverrunErrorHandler
  3507 ;;		_EUSART1_SetRxInterruptHandler
  3508 ;;		_EUSART1_SetTxInterruptHandler
  3509 ;; This function is called by:
  3510 ;;		_SYSTEM_Initialize
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text23
  3515  00087E                     __ptext23:
  3516                           	opt stack 0
  3517  00087E                     _EUSART1_Initialize:
  3518                           	opt stack 21
  3519                           
  3520                           ;eusart1.c: 118: PIE1bits.RC1IE = 0;
  3521                           
  3522                           ;incstack = 0
  3523  00087E  9A9D               	bcf	3997,5,c	;volatile
  3524                           
  3525                           ;eusart1.c: 119: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3526  000880  0ED4               	movlw	low _EUSART1_Receive_ISR
  3527  000882  0100               	movlb	0	; () banked
  3528  000884  6FE3               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  3529  000886  0E00               	movlw	high _EUSART1_Receive_ISR
  3530  000888  6FE4               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3531  00088A  ECF6  F006         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3532                           
  3533                           ;eusart1.c: 120: PIE1bits.TX1IE = 0;
  3534  00088E  989D               	bcf	3997,4,c	;volatile
  3535                           
  3536                           ;eusart1.c: 121: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3537  000890  0E7C               	movlw	low _EUSART1_Transmit_ISR
  3538  000892  0100               	movlb	0	; () banked
  3539  000894  6FE3               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  3540  000896  0E0B               	movlw	high _EUSART1_Transmit_ISR
  3541  000898  6FE4               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3542  00089A  ECF1  F006         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3543                           
  3544                           ;eusart1.c: 125: BAUDCON1 = 0x08;
  3545  00089E  0E08               	movlw	8
  3546  0008A0  6EB8               	movwf	4024,c	;volatile
  3547                           
  3548                           ;eusart1.c: 128: RCSTA1 = 0x90;
  3549  0008A2  0E90               	movlw	144
  3550  0008A4  6EAB               	movwf	4011,c	;volatile
  3551                           
  3552                           ;eusart1.c: 131: TXSTA1 = 0x24;
  3553  0008A6  0E24               	movlw	36
  3554  0008A8  6EAC               	movwf	4012,c	;volatile
  3555                           
  3556                           ;eusart1.c: 134: SPBRG1 = 0x14;
  3557  0008AA  0E14               	movlw	20
  3558  0008AC  6EAF               	movwf	4015,c	;volatile
  3559                           
  3560                           ;eusart1.c: 137: SPBRGH1 = 0x34;
  3561  0008AE  0E34               	movlw	52
  3562  0008B0  6EB0               	movwf	4016,c	;volatile
  3563                           
  3564                           ;eusart1.c: 140: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3565  0008B2  0E70               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3566  0008B4  0100               	movlb	0	; () banked
  3567  0008B6  6FE3               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3568  0008B8  0E0E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3569  0008BA  6FE4               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3570  0008BC  EC00  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3571                           
  3572                           ;eusart1.c: 141: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3573  0008C0  0E46               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3574  0008C2  0100               	movlb	0	; () banked
  3575  0008C4  6FE3               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3576  0008C6  0E0E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3577  0008C8  6FE4               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3578  0008CA  ECFB  F006         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3579                           
  3580                           ;eusart1.c: 142: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3581  0008CE  0E4C               	movlw	low _EUSART1_DefaultErrorHandler
  3582  0008D0  0100               	movlb	0	; () banked
  3583  0008D2  6FE3               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3584  0008D4  0E0E               	movlw	high _EUSART1_DefaultErrorHandler
  3585  0008D6  6FE4               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3586  0008D8  EC05  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3587                           
  3588                           ;eusart1.c: 144: eusart1RxLastError.status = 0;
  3589  0008DC  0E00               	movlw	0
  3590  0008DE  0100               	movlb	0	; () banked
  3591  0008E0  6FA2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3592                           
  3593                           ;eusart1.c: 147: eusart1TxHead = 0;
  3594  0008E2  0E00               	movlw	0
  3595  0008E4  6FA7               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3596                           
  3597                           ;eusart1.c: 148: eusart1TxTail = 0;
  3598  0008E6  0E00               	movlw	0
  3599  0008E8  6FA6               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3600                           
  3601                           ;eusart1.c: 149: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3602  0008EA  0E01               	movlw	1
  3603  0008EC  6FFB               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3604                           
  3605                           ;eusart1.c: 151: eusart1RxHead = 0;
  3606  0008EE  0E00               	movlw	0
  3607  0008F0  6E48               	movwf	_eusart1RxHead,c	;volatile
  3608                           
  3609                           ;eusart1.c: 152: eusart1RxTail = 0;
  3610  0008F2  0E00               	movlw	0
  3611  0008F4  6E47               	movwf	_eusart1RxTail,c	;volatile
  3612                           
  3613                           ;eusart1.c: 153: eusart1RxCount = 0;
  3614  0008F6  0E00               	movlw	0
  3615  0008F8  6FA3               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;eusart1.c: 156: PIE1bits.RC1IE = 1;
  3619  0008FA  8A9D               	bsf	3997,5,c	;volatile
  3620                           
  3621                           ; BSR set to: 0
  3622  0008FC  0012               	return		;funcret
  3623  0008FE                     __end_of_EUSART1_Initialize:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           intcon	equ	0xFF2
  3630                           intcon2	equ	0xFF1
  3631                           intcon3	equ	0xFF0
  3632                           indf0	equ	0xFEF
  3633                           postinc0	equ	0xFEE
  3634                           fsr0h	equ	0xFEA
  3635                           fsr0l	equ	0xFE9
  3636                           wreg	equ	0xFE8
  3637                           indf2	equ	0xFDF
  3638                           postdec2	equ	0xFDD
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3644 ;; Defined at:
  3645 ;;		line 331 in file "mcc_generated_files/eusart1.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3648 ;;		 -> EUSART1_Transmit_ISR(1), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    7
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_EUSART1_Initialize
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text24
  3675  000DE2                     __ptext24:
  3676                           	opt stack 0
  3677  000DE2                     _EUSART1_SetTxInterruptHandler:
  3678                           	opt stack 21
  3679                           
  3680                           ;eusart1.c: 332: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;incstack = 0
  3684  000DE2  C0E3  F1F9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3685  000DE6  C0E4  F1FA         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3686  000DEA  0012               	return		;funcret
  3687  000DEC                     __end_of_EUSART1_SetTxInterruptHandler:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           intcon	equ	0xFF2
  3694                           intcon2	equ	0xFF1
  3695                           intcon3	equ	0xFF0
  3696                           indf0	equ	0xFEF
  3697                           postinc0	equ	0xFEE
  3698                           fsr0h	equ	0xFEA
  3699                           fsr0l	equ	0xFE9
  3700                           wreg	equ	0xFE8
  3701                           indf2	equ	0xFDF
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3708 ;; Defined at:
  3709 ;;		line 335 in file "mcc_generated_files/eusart1.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3712 ;;		 -> EUSART1_Receive_ISR(1), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        2 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    7
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_EUSART1_Initialize
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text25
  3739  000DEC                     __ptext25:
  3740                           	opt stack 0
  3741  000DEC                     _EUSART1_SetRxInterruptHandler:
  3742                           	opt stack 21
  3743                           
  3744                           ;eusart1.c: 336: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3745                           
  3746                           ;incstack = 0
  3747  000DEC  C0E3  F2F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3748  000DF0  C0E4  F2F7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3749  000DF4  0012               	return		;funcret
  3750  000DF6                     __end_of_EUSART1_SetRxInterruptHandler:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           intcon	equ	0xFF2
  3757                           intcon2	equ	0xFF1
  3758                           intcon3	equ	0xFF0
  3759                           indf0	equ	0xFEF
  3760                           postinc0	equ	0xFEE
  3761                           fsr0h	equ	0xFEA
  3762                           fsr0l	equ	0xFE9
  3763                           wreg	equ	0xFE8
  3764                           indf2	equ	0xFDF
  3765                           postdec2	equ	0xFDD
  3766                           fsr2h	equ	0xFDA
  3767                           fsr2l	equ	0xFD9
  3768                           status	equ	0xFD8
  3769                           
  3770 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3771 ;; Defined at:
  3772 ;;		line 323 in file "mcc_generated_files/eusart1.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3775 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        2 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    7
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_EUSART1_Initialize
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text26
  3802  000DF6                     __ptext26:
  3803                           	opt stack 0
  3804  000DF6                     _EUSART1_SetOverrunErrorHandler:
  3805                           	opt stack 21
  3806                           
  3807                           ;eusart1.c: 324: EUSART1_OverrunErrorHandler = interruptHandler;
  3808                           
  3809                           ;incstack = 0
  3810  000DF6  C0E3  F2F2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3811  000DFA  C0E4  F2F3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3812  000DFE  0012               	return		;funcret
  3813  000E00                     __end_of_EUSART1_SetOverrunErrorHandler:
  3814                           	opt stack 0
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           intcon	equ	0xFF2
  3820                           intcon2	equ	0xFF1
  3821                           intcon3	equ	0xFF0
  3822                           indf0	equ	0xFEF
  3823                           postinc0	equ	0xFEE
  3824                           fsr0h	equ	0xFEA
  3825                           fsr0l	equ	0xFE9
  3826                           wreg	equ	0xFE8
  3827                           indf2	equ	0xFDF
  3828                           postdec2	equ	0xFDD
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3834 ;; Defined at:
  3835 ;;		line 319 in file "mcc_generated_files/eusart1.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3838 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    7
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_EUSART1_Initialize
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text27
  3865  000E00                     __ptext27:
  3866                           	opt stack 0
  3867  000E00                     _EUSART1_SetFramingErrorHandler:
  3868                           	opt stack 21
  3869                           
  3870                           ;eusart1.c: 320: EUSART1_FramingErrorHandler = interruptHandler;
  3871                           
  3872                           ;incstack = 0
  3873  000E00  C0E3  F2F4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3874  000E04  C0E4  F2F5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3875  000E08  0012               	return		;funcret
  3876  000E0A                     __end_of_EUSART1_SetFramingErrorHandler:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           intcon	equ	0xFF2
  3883                           intcon2	equ	0xFF1
  3884                           intcon3	equ	0xFF0
  3885                           indf0	equ	0xFEF
  3886                           postinc0	equ	0xFEE
  3887                           fsr0h	equ	0xFEA
  3888                           fsr0l	equ	0xFE9
  3889                           wreg	equ	0xFE8
  3890                           indf2	equ	0xFDF
  3891                           postdec2	equ	0xFDD
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function _EUSART1_SetErrorHandler *****************
  3897 ;; Defined at:
  3898 ;;		line 327 in file "mcc_generated_files/eusart1.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3901 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        2 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    7
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_EUSART1_Initialize
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text28
  3928  000E0A                     __ptext28:
  3929                           	opt stack 0
  3930  000E0A                     _EUSART1_SetErrorHandler:
  3931                           	opt stack 21
  3932                           
  3933                           ;eusart1.c: 328: EUSART1_ErrorHandler = interruptHandler;
  3934                           
  3935                           ;incstack = 0
  3936  000E0A  C0E3  F2F0         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3937  000E0E  C0E4  F2F1         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3938  000E12  0012               	return		;funcret
  3939  000E14                     __end_of_EUSART1_SetErrorHandler:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           intcon	equ	0xFF2
  3946                           intcon2	equ	0xFF1
  3947                           intcon3	equ	0xFF0
  3948                           indf0	equ	0xFEF
  3949                           postinc0	equ	0xFEE
  3950                           fsr0h	equ	0xFEA
  3951                           fsr0l	equ	0xFE9
  3952                           wreg	equ	0xFE8
  3953                           indf2	equ	0xFDF
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _EUSART1_Write *****************
  3960 ;; Defined at:
  3961 ;;		line 200 in file "mcc_generated_files/eusart1.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  txData          1    wreg     unsigned char 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  txData          1    0[BANK0 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;Total ram usage:        1 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    7
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text29
  3990  000B0E                     __ptext29:
  3991                           	opt stack 0
  3992  000B0E                     _EUSART1_Write:
  3993                           	opt stack 23
  3994                           
  3995                           ;incstack = 0
  3996                           ;EUSART1_Write@txData stored from wreg
  3997  000B0E  0100               	movlb	0	; () banked
  3998  000B10  6FE3               	movwf	EUSART1_Write@txData& (0+255),b
  3999  000B12                     
  4000                           ;eusart1.c: 203: {
  4001                           
  4002                           ;eusart1.c: 202: while(0 == eusart1TxBufferRemaining)
  4003  000B12  0100               	movlb	0	; () banked
  4004  000B14  51FB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  4005  000B16  B4D8               	btfsc	status,2,c
  4006  000B18  D7FC               	goto	l10676
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;eusart1.c: 204: }
  4010                           ;eusart1.c: 206: if(0 == PIE1bits.TX1IE)
  4011  000B1A  B89D               	btfsc	3997,4,c	;volatile
  4012  000B1C  D003               	goto	l2540
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;eusart1.c: 207: {
  4016                           ;eusart1.c: 208: TXREG1 = txData;
  4017  000B1E  C0E3  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4018                           
  4019                           ;eusart1.c: 209: }
  4020  000B22  D012               	goto	l2541
  4021  000B24                     l2540:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;eusart1.c: 210: else
  4025                           ;eusart1.c: 211: {
  4026                           ;eusart1.c: 212: PIE1bits.TX1IE = 0;
  4027  000B24  989D               	bcf	3997,4,c	;volatile
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;eusart1.c: 213: eusart1TxBuffer[eusart1TxHead++] = txData;
  4031  000B26  51A7               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  4032  000B28  0D01               	mullw	1
  4033  000B2A  0EA5               	movlw	low _eusart1TxBuffer
  4034  000B2C  24F3               	addwf	prodl,w,c
  4035  000B2E  6ED9               	movwf	fsr2l,c
  4036  000B30  0E00               	movlw	high _eusart1TxBuffer
  4037  000B32  20F4               	addwfc	prodh,w,c
  4038  000B34  6EDA               	movwf	fsr2h,c
  4039  000B36  C0E3  FFDF         	movff	EUSART1_Write@txData,indf2
  4040                           
  4041                           ; BSR set to: 0
  4042  000B3A  2BA7               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;eusart1.c: 214: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  4046  000B3C  51A7               	movf	_eusart1TxHead& (0+255),w,b	;volatile
  4047  000B3E  B4D8               	btfsc	status,2,c
  4048  000B40  D002               	goto	l2542
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;eusart1.c: 215: {
  4052                           ;eusart1.c: 216: eusart1TxHead = 0;
  4053  000B42  0E00               	movlw	0
  4054  000B44  6FA7               	movwf	_eusart1TxHead& (0+255),b	;volatile
  4055  000B46                     l2542:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;eusart1.c: 217: }
  4059                           ;eusart1.c: 218: eusart1TxBufferRemaining--;
  4060                           
  4061                           ; BSR set to: 0
  4062  000B46  07FB               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4063  000B48                     l2541:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;eusart1.c: 219: }
  4067                           ;eusart1.c: 220: PIE1bits.TX1IE = 1;
  4068                           
  4069                           ; BSR set to: 0
  4070  000B48  889D               	bsf	3997,4,c	;volatile
  4071                           
  4072                           ; BSR set to: 0
  4073  000B4A  0012               	return		;funcret
  4074  000B4C                     __end_of_EUSART1_Write:
  4075                           	opt stack 0
  4076                           tblptru	equ	0xFF8
  4077                           tblptrh	equ	0xFF7
  4078                           tblptrl	equ	0xFF6
  4079                           tablat	equ	0xFF5
  4080                           prodh	equ	0xFF4
  4081                           prodl	equ	0xFF3
  4082                           intcon	equ	0xFF2
  4083                           intcon2	equ	0xFF1
  4084                           intcon3	equ	0xFF0
  4085                           indf0	equ	0xFEF
  4086                           postinc0	equ	0xFEE
  4087                           fsr0h	equ	0xFEA
  4088                           fsr0l	equ	0xFE9
  4089                           wreg	equ	0xFE8
  4090                           indf2	equ	0xFDF
  4091                           postdec2	equ	0xFDD
  4092                           fsr2h	equ	0xFDA
  4093                           fsr2l	equ	0xFD9
  4094                           status	equ	0xFD8
  4095                           
  4096 ;; *************** function _INTERRUPT_InterruptManager *****************
  4097 ;; Defined at:
  4098 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:       10 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    6
  4119 ;; This function calls:
  4120 ;;		Absolute function
  4121 ;;		_EUSART1_Receive_ISR
  4122 ;;		_EUSART1_Transmit_ISR
  4123 ;;		_INT1_ISR
  4124 ;;		_INT2_ISR
  4125 ;;		_PIN_MANAGER_IOC
  4126 ;;		_TMR1_ISR
  4127 ;; This function is called by:
  4128 ;;		Interrupt level 2
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	intcode
  4133  000008                     __pintcode:
  4134                           	opt stack 0
  4135  000008                     _INTERRUPT_InterruptManager:
  4136                           	opt stack 20
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;incstack = 0
  4140  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  4141  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4142  000010  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4143  000014  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4144  000018  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4145  00001C  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4146  000020  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4147  000024  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4148  000028  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4149  00002C  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4150  000030  EE1E  F062         	lfsr	1,___inthi_sp
  4151                           
  4152                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  4153  000034  B6F0               	btfsc	intcon3,3,c	;volatile
  4154  000036  A0F0               	btfss	intcon3,0,c	;volatile
  4155  000038  D003               	goto	i2l2244
  4156                           
  4157                           ;interrupt_manager.c: 62: {
  4158                           ;interrupt_manager.c: 63: INT1_ISR();
  4159  00003A  EC13  F007         	call	_INT1_ISR	;wreg free
  4160                           
  4161                           ;interrupt_manager.c: 64: }
  4162  00003E  D031               	goto	i2u1268_49
  4163  000040                     i2l2244:
  4164                           
  4165                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
  4166  000040  B8F0               	btfsc	intcon3,4,c	;volatile
  4167  000042  A2F0               	btfss	intcon3,1,c	;volatile
  4168  000044  D003               	goto	i2l2246
  4169                           
  4170                           ;interrupt_manager.c: 66: {
  4171                           ;interrupt_manager.c: 67: INT2_ISR();
  4172  000046  EC0F  F007         	call	_INT2_ISR	;wreg free
  4173                           
  4174                           ;interrupt_manager.c: 68: }
  4175  00004A  D02B               	goto	i2u1268_49
  4176  00004C                     i2l2246:
  4177                           
  4178                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
  4179  00004C  B6F2               	btfsc	intcon,3,c	;volatile
  4180  00004E  A0F2               	btfss	intcon,0,c	;volatile
  4181  000050  D003               	goto	i2l2248
  4182                           
  4183                           ;interrupt_manager.c: 70: {
  4184                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
  4185  000052  EC0A  F007         	call	_PIN_MANAGER_IOC	;wreg free
  4186                           
  4187                           ;interrupt_manager.c: 72: }
  4188  000056  D025               	goto	i2u1268_49
  4189  000058                     i2l2248:
  4190                           
  4191                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
  4192  000058  ACF2               	btfss	intcon,6,c	;volatile
  4193  00005A  D023               	goto	i2u1268_49
  4194                           
  4195                           ;interrupt_manager.c: 74: {
  4196                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4197  00005C  B09D               	btfsc	3997,0,c	;volatile
  4198  00005E  A09E               	btfss	3998,0,c	;volatile
  4199  000060  D002               	goto	i2l2251
  4200                           
  4201                           ;interrupt_manager.c: 76: {
  4202                           ;interrupt_manager.c: 77: TMR1_ISR();
  4203  000062  ECA5  F006         	call	_TMR1_ISR	;wreg free
  4204  000066                     i2l2251:
  4205                           
  4206                           ;interrupt_manager.c: 78: }
  4207                           ;interrupt_manager.c: 79: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4208  000066  B89D               	btfsc	3997,4,c	;volatile
  4209  000068  A89E               	btfss	3998,4,c	;volatile
  4210  00006A  D00C               	goto	i2u1265_49
  4211                           
  4212                           ;interrupt_manager.c: 80: {
  4213                           ;interrupt_manager.c: 81: EUSART1_TxDefaultInterruptHandler();
  4214  00006C  D801               	call	i2u1265_48
  4215  00006E  D00A               	goto	i2u1265_49
  4216  000070                     i2u1265_48:
  4217  000070  0005               	push	
  4218  000072  6EFA               	movwf	pclath,c
  4219  000074  0101               	movlb	1	; () banked
  4220  000076  51F9               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4221  000078  6EFD               	movwf	tosl,c
  4222  00007A  51FA               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4223  00007C  6EFE               	movwf	tosh,c
  4224  00007E  6AFF               	clrf	tosu,c
  4225  000080  50FA               	movf	pclath,w,c
  4226  000082  0012               	return		;indir
  4227  000084                     i2u1265_49:
  4228                           
  4229                           ;interrupt_manager.c: 82: }
  4230                           ;interrupt_manager.c: 83: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4231  000084  BA9D               	btfsc	3997,5,c	;volatile
  4232  000086  AA9E               	btfss	3998,5,c	;volatile
  4233  000088  D00C               	goto	i2u1268_49
  4234                           
  4235                           ;interrupt_manager.c: 84: {
  4236                           ;interrupt_manager.c: 85: EUSART1_RxDefaultInterruptHandler();
  4237  00008A  D801               	call	i2u1268_48
  4238  00008C  D00A               	goto	i2u1268_49
  4239  00008E                     i2u1268_48:
  4240  00008E  0005               	push	
  4241  000090  6EFA               	movwf	pclath,c
  4242  000092  0102               	movlb	2	; () banked
  4243  000094  51F6               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4244  000096  6EFD               	movwf	tosl,c
  4245  000098  51F7               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4246  00009A  6EFE               	movwf	tosh,c
  4247  00009C  6AFF               	clrf	tosu,c
  4248  00009E  50FA               	movf	pclath,w,c
  4249  0000A0  0012               	return		;indir
  4250  0000A2                     i2u1268_49:
  4251                           
  4252                           ;interrupt_manager.c: 92: else
  4253                           ;interrupt_manager.c: 93: {
  4254                           
  4255                           ;interrupt_manager.c: 90: }
  4256                           ;interrupt_manager.c: 91: }
  4257                           
  4258                           ;interrupt_manager.c: 87: else
  4259                           ;interrupt_manager.c: 88: {
  4260                           
  4261                           ;interrupt_manager.c: 86: }
  4262  0000A2  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4263  0000A6  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4264  0000AA  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4265  0000AE  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4266  0000B2  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4267  0000B6  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4268  0000BA  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4269  0000BE  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4270  0000C2  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4271  0000C6  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4272  0000CA  0011               	retfie		f
  4273  0000CC                     __end_of_INTERRUPT_InterruptManager:
  4274                           	opt stack 0
  4275                           tosu	equ	0xFFF
  4276                           tosh	equ	0xFFE
  4277                           tosl	equ	0xFFD
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           intcon2	equ	0xFF1
  4288                           intcon3	equ	0xFF0
  4289                           indf0	equ	0xFEF
  4290                           postinc0	equ	0xFEE
  4291                           fsr0h	equ	0xFEA
  4292                           fsr0l	equ	0xFE9
  4293                           wreg	equ	0xFE8
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           indf2	equ	0xFDF
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _TMR1_ISR *****************
  4303 ;; Defined at:
  4304 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    5
  4325 ;; This function calls:
  4326 ;;		_TMR1_CallBack
  4327 ;;		_TMR1_WriteTimer
  4328 ;; This function is called by:
  4329 ;;		_INTERRUPT_InterruptManager
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text31
  4334  000D4A                     __ptext31:
  4335                           	opt stack 0
  4336  000D4A                     _TMR1_ISR:
  4337                           	opt stack 20
  4338                           
  4339                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
  4340                           
  4341                           ;incstack = 0
  4342  000D4A  909E               	bcf	3998,0,c	;volatile
  4343                           
  4344                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
  4345  000D4C  C0F3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  4346  000D50  C0F4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  4347  000D54  EC97  F006         	call	_TMR1_WriteTimer	;wreg free
  4348                           
  4349                           ;tmr1.c: 167: TMR1_CallBack();
  4350  000D58  EC38  F006         	call	_TMR1_CallBack	;wreg free
  4351  000D5C  0012               	return		;funcret
  4352  000D5E                     __end_of_TMR1_ISR:
  4353                           	opt stack 0
  4354                           tosu	equ	0xFFF
  4355                           tosh	equ	0xFFE
  4356                           tosl	equ	0xFFD
  4357                           pclatu	equ	0xFFB
  4358                           pclath	equ	0xFFA
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           intcon	equ	0xFF2
  4366                           intcon2	equ	0xFF1
  4367                           intcon3	equ	0xFF0
  4368                           indf0	equ	0xFEF
  4369                           postinc0	equ	0xFEE
  4370                           fsr0h	equ	0xFEA
  4371                           fsr0l	equ	0xFE9
  4372                           wreg	equ	0xFE8
  4373                           fsr1h	equ	0xFE2
  4374                           fsr1l	equ	0xFE1
  4375                           indf2	equ	0xFDF
  4376                           postdec2	equ	0xFDD
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _TMR1_CallBack *****************
  4382 ;; Defined at:
  4383 ;;		line 170 in file "mcc_generated_files/tmr1.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    4
  4404 ;; This function calls:
  4405 ;;		Absolute function
  4406 ;;		_TMR1_DefaultInterruptHandler
  4407 ;;		_TMR_ISR_lora
  4408 ;; This function is called by:
  4409 ;;		_TMR1_ISR
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text32
  4414  000C70                     __ptext32:
  4415                           	opt stack 0
  4416  000C70                     _TMR1_CallBack:
  4417                           	opt stack 20
  4418                           
  4419                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
  4420                           
  4421                           ;incstack = 0
  4422  000C70  0101               	movlb	1	; () banked
  4423  000C72  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4424  000C74  11F8               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4425  000C76  B4D8               	btfsc	status,2,c
  4426  000C78  0012               	return	
  4427                           
  4428                           ; BSR set to: 1
  4429                           ;tmr1.c: 174: {
  4430                           ;tmr1.c: 175: TMR1_InterruptHandler();
  4431  000C7A  D801               	call	i2u904_48
  4432  000C7C  0012               	return	
  4433  000C7E                     i2u904_48:
  4434  000C7E  0005               	push	
  4435  000C80  6EFA               	movwf	pclath,c
  4436  000C82  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4437  000C84  6EFD               	movwf	tosl,c
  4438  000C86  51F8               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4439  000C88  6EFE               	movwf	tosh,c
  4440  000C8A  6AFF               	clrf	tosu,c
  4441  000C8C  50FA               	movf	pclath,w,c
  4442  000C8E  0012               	return		;indir
  4443  000C90                     __end_of_TMR1_CallBack:
  4444                           	opt stack 0
  4445                           tosu	equ	0xFFF
  4446                           tosh	equ	0xFFE
  4447                           tosl	equ	0xFFD
  4448                           pclatu	equ	0xFFB
  4449                           pclath	equ	0xFFA
  4450                           tblptru	equ	0xFF8
  4451                           tblptrh	equ	0xFF7
  4452                           tblptrl	equ	0xFF6
  4453                           tablat	equ	0xFF5
  4454                           prodh	equ	0xFF4
  4455                           prodl	equ	0xFF3
  4456                           intcon	equ	0xFF2
  4457                           intcon2	equ	0xFF1
  4458                           intcon3	equ	0xFF0
  4459                           indf0	equ	0xFEF
  4460                           postinc0	equ	0xFEE
  4461                           fsr0h	equ	0xFEA
  4462                           fsr0l	equ	0xFE9
  4463                           wreg	equ	0xFE8
  4464                           fsr1h	equ	0xFE2
  4465                           fsr1l	equ	0xFE1
  4466                           indf2	equ	0xFDF
  4467                           postdec2	equ	0xFDD
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4473 ;; Defined at:
  4474 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		None
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_TMR1_Initialize
  4498 ;;		_TMR1_CallBack
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text33
  4503  000E68                     __ptext33:
  4504                           	opt stack 0
  4505  000E68                     _TMR1_DefaultInterruptHandler:
  4506                           	opt stack 23
  4507                           
  4508                           ;incstack = 0
  4509  000E68  0012               	return		;funcret
  4510  000E6A                     __end_of_TMR1_DefaultInterruptHandler:
  4511                           	opt stack 0
  4512                           tosu	equ	0xFFF
  4513                           tosh	equ	0xFFE
  4514                           tosl	equ	0xFFD
  4515                           pclatu	equ	0xFFB
  4516                           pclath	equ	0xFFA
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           intcon	equ	0xFF2
  4524                           intcon2	equ	0xFF1
  4525                           intcon3	equ	0xFF0
  4526                           indf0	equ	0xFEF
  4527                           postinc0	equ	0xFEE
  4528                           fsr0h	equ	0xFEA
  4529                           fsr0l	equ	0xFE9
  4530                           wreg	equ	0xFE8
  4531                           fsr1h	equ	0xFE2
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postdec2	equ	0xFDD
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _TMR_ISR_lora *****************
  4540 ;; Defined at:
  4541 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;Total ram usage:        2 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    3
  4562 ;; This function calls:
  4563 ;;		_SwTimersInterrupt
  4564 ;;		_TMR_SwapTimer
  4565 ;; This function is called by:
  4566 ;;		_TMR_ISR_Lora_Init
  4567 ;;		_TMR1_CallBack
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text34
  4572  0009D0                     __ptext34:
  4573                           	opt stack 0
  4574  0009D0                     _TMR_ISR_lora:
  4575                           	opt stack 20
  4576                           
  4577                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
  4578                           
  4579                           ;incstack = 0
  4580  0009D0  0E01               	movlw	1
  4581  0009D2  0100               	movlb	0	; () banked
  4582  0009D4  6FA9               	movwf	_timerOverflow& (0+255),b	;volatile
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
  4586  0009D6  EC55  F003         	call	_SwTimersInterrupt	;wreg free
  4587  0009DA  C021  F0FC         	movff	?_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
  4588  0009DE  C022  F0FD         	movff	?_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
  4589  0009E2  C023  F0FE         	movff	?_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
  4590  0009E6  C024  F0FF         	movff	?_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
  4591                           
  4592                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
  4593  0009EA  0100               	movlb	0	; () banked
  4594  0009EC  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
  4595  0009EE  E11D               	bnz	i2l2171
  4596  0009F0  05FE               	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
  4597  0009F2  B0D8               	btfsc	status,0,c
  4598  0009F4  0012               	return	
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;tmr_lora_addons.c: 66: {
  4602                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
  4603  0009F6  C0FC  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
  4604  0009FA  C0FD  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
  4605  0009FE  1E32               	comf	??_TMR_ISR_lora,f,c
  4606  000A00  1E33               	comf	??_TMR_ISR_lora+1,f,c
  4607  000A02  4A32               	infsnz	??_TMR_ISR_lora,f,c
  4608  000A04  2A33               	incf	??_TMR_ISR_lora+1,f,c
  4609  000A06  C032  F044         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
  4610  000A0A  C033  F045         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
  4614  000A0E  C044  F009         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
  4615  000A12  C045  F00A         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
  4616  000A16  EC65  F005         	call	_TMR_SwapTimer	;wreg free
  4617  000A1A  C009  F068         	movff	?_TMR_SwapTimer,_ticksAdded	;volatile
  4618  000A1E  C00A  F069         	movff	?_TMR_SwapTimer+1,_ticksAdded+1	;volatile
  4619  000A22  0100               	movlb	0	; () banked
  4620  000A24  6B6A               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
  4621  000A26  6B6B               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
  4622  000A28  0012               	return	
  4623  000A2A                     i2l2171:
  4624                           
  4625                           ; BSR set to: 0
  4626  000A2A  0012               	return		;funcret
  4627  000A2C                     __end_of_TMR_ISR_lora:
  4628                           	opt stack 0
  4629                           tosu	equ	0xFFF
  4630                           tosh	equ	0xFFE
  4631                           tosl	equ	0xFFD
  4632                           pclatu	equ	0xFFB
  4633                           pclath	equ	0xFFA
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           prodh	equ	0xFF4
  4639                           prodl	equ	0xFF3
  4640                           intcon	equ	0xFF2
  4641                           intcon2	equ	0xFF1
  4642                           intcon3	equ	0xFF0
  4643                           indf0	equ	0xFEF
  4644                           postinc0	equ	0xFEE
  4645                           fsr0h	equ	0xFEA
  4646                           fsr0l	equ	0xFE9
  4647                           wreg	equ	0xFE8
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _TMR_SwapTimer *****************
  4657 ;; Defined at:
  4658 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  timerVal        2    8[COMRAM] unsigned int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    8[COMRAM] unsigned int 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:        2 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		_TMR1_ReadTimer
  4681 ;;		_TMR1_WriteTimer
  4682 ;; This function is called by:
  4683 ;;		_TMR_ISR_lora
  4684 ;;		_TMR_OverrideRemaining
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text35
  4689  000ACA                     __ptext35:
  4690                           	opt stack 0
  4691  000ACA                     _TMR_SwapTimer:
  4692                           	opt stack 21
  4693                           
  4694                           ;sw_timer.c: 114: static uint16_t oldVal;
  4695                           ;sw_timer.c: 115: static uint16_t retVal;
  4696                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;incstack = 0
  4700  000ACA  EC48  F006         	call	_TMR1_ReadTimer	;wreg free
  4701  000ACE  C001  F09A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
  4702  000AD2  C002  F09B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
  4703  000AD6                     
  4704                           ;sw_timer.c: 123: ;
  4705  000AD6  EC48  F006         	call	_TMR1_ReadTimer	;wreg free
  4706  000ADA  0100               	movlb	0	; () banked
  4707  000ADC  519A               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
  4708  000ADE  1801               	xorwf	?_TMR1_ReadTimer,w,c
  4709  000AE0  E104               	bnz	i2l8868
  4710  000AE2  519B               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
  4711  000AE4  1802               	xorwf	?_TMR1_ReadTimer+1,w,c
  4712  000AE6  B4D8               	btfsc	status,2,c
  4713  000AE8  D7F6               	goto	i2l1535
  4714  000AEA                     i2l8868:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
  4718  000AEA  C009  F001         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
  4719  000AEE  C00A  F002         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
  4720  000AF2  EC97  F006         	call	_TMR1_WriteTimer	;wreg free
  4721                           
  4722                           ;sw_timer.c: 128: oldVal++;
  4723  000AF6  0100               	movlb	0	; () banked
  4724  000AF8  4B9A               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
  4725  000AFA  2B9B               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;sw_timer.c: 130: retVal = oldVal;
  4729  000AFC  C09A  F098         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
  4730  000B00  C09B  F099         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;sw_timer.c: 132: return retVal;
  4734  000B04  C098  F009         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
  4735  000B08  C099  F00A         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
  4736  000B0C  0012               	return	
  4737  000B0E                     __end_of_TMR_SwapTimer:
  4738                           	opt stack 0
  4739                           tosu	equ	0xFFF
  4740                           tosh	equ	0xFFE
  4741                           tosl	equ	0xFFD
  4742                           pclatu	equ	0xFFB
  4743                           pclath	equ	0xFFA
  4744                           tblptru	equ	0xFF8
  4745                           tblptrh	equ	0xFF7
  4746                           tblptrl	equ	0xFF6
  4747                           tablat	equ	0xFF5
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           intcon	equ	0xFF2
  4751                           intcon2	equ	0xFF1
  4752                           intcon3	equ	0xFF0
  4753                           indf0	equ	0xFEF
  4754                           postinc0	equ	0xFEE
  4755                           fsr0h	equ	0xFEA
  4756                           fsr0l	equ	0xFE9
  4757                           wreg	equ	0xFE8
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           postdec2	equ	0xFDD
  4762                           fsr2h	equ	0xFDA
  4763                           fsr2l	equ	0xFD9
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _TMR1_WriteTimer *****************
  4767 ;; Defined at:
  4768 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  timerVal        2    0[COMRAM] unsigned int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_TMR_SwapTimer
  4792 ;;		_TMR1_ISR
  4793 ;;		_TMR1_Reload
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text36
  4798  000D2E                     __ptext36:
  4799                           	opt stack 0
  4800  000D2E                     _TMR1_WriteTimer:
  4801                           	opt stack 24
  4802                           
  4803                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;incstack = 0
  4807  000D2E  A4CD               	btfss	4045,2,c	;volatile
  4808  000D30  D007               	goto	i2l2627
  4809                           
  4810                           ;tmr1.c: 124: {
  4811                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
  4812  000D32  90CD               	bcf	4045,0,c	;volatile
  4813                           
  4814                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
  4815  000D34  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4816  000D36  6ECF               	movwf	4047,c	;volatile
  4817                           
  4818                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
  4819  000D38  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4820                           
  4821                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
  4822  000D3C  80CD               	bsf	4045,0,c	;volatile
  4823                           
  4824                           ;tmr1.c: 134: }
  4825  000D3E  0012               	return	
  4826  000D40                     i2l2627:
  4827                           
  4828                           ;tmr1.c: 135: else
  4829                           ;tmr1.c: 136: {
  4830                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
  4831  000D40  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  4832  000D42  6ECF               	movwf	4047,c	;volatile
  4833                           
  4834                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
  4835  000D44  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4836  000D48  0012               	return	
  4837  000D4A                     __end_of_TMR1_WriteTimer:
  4838                           	opt stack 0
  4839                           tosu	equ	0xFFF
  4840                           tosh	equ	0xFFE
  4841                           tosl	equ	0xFFD
  4842                           pclatu	equ	0xFFB
  4843                           pclath	equ	0xFFA
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           intcon2	equ	0xFF1
  4852                           intcon3	equ	0xFF0
  4853                           indf0	equ	0xFEF
  4854                           postinc0	equ	0xFEE
  4855                           fsr0h	equ	0xFEA
  4856                           fsr0l	equ	0xFE9
  4857                           wreg	equ	0xFE8
  4858                           fsr1h	equ	0xFE2
  4859                           fsr1l	equ	0xFE1
  4860                           indf2	equ	0xFDF
  4861                           postdec2	equ	0xFDD
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _SwTimersInterrupt *****************
  4867 ;; Defined at:
  4868 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  ticksToNextT    4   44[COMRAM] unsigned long 
  4873 ;;  timeElapsed     4   40[COMRAM] unsigned long 
  4874 ;;  i               1   48[COMRAM] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  4   32[COMRAM] unsigned long 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:       17 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    2
  4891 ;; This function calls:
  4892 ;;		_TMR_GetDeltaTime
  4893 ;; This function is called by:
  4894 ;;		_TMR_ISR_lora
  4895 ;;		_SwTimerReadValue
  4896 ;;		_SwTimerStart
  4897 ;;		_SwTimersCanSleep
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text37
  4902  0006AA                     __ptext37:
  4903                           	opt stack 0
  4904  0006AA                     _SwTimersInterrupt:
  4905                           	opt stack 20
  4906                           
  4907                           ;sw_timer.c: 289: uint8_t i;
  4908                           ;sw_timer.c: 290: uint32_t timeElapsed;
  4909                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
  4910                           
  4911                           ;incstack = 0
  4912  0006AA  682D               	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
  4913  0006AC  682E               	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
  4914  0006AE  682F               	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
  4915  0006B0  6830               	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
  4916                           
  4917                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
  4918  0006B2  ECA0  F002         	call	_TMR_GetDeltaTime	;wreg free
  4919  0006B6  C009  F029         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
  4920  0006BA  C00A  F02A         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
  4921  0006BE  C00B  F02B         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
  4922  0006C2  C00C  F02C         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
  4923                           
  4924                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
  4925  0006C6  0E00               	movlw	0
  4926  0006C8  6E31               	movwf	SwTimersInterrupt@i,c
  4927  0006CA  D061               	goto	i2l1592
  4928  0006CC                     
  4929                           ;sw_timer.c: 298: {
  4930                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
  4931  0006CC  5031               	movf	SwTimersInterrupt@i,w,c
  4932  0006CE  0D08               	mullw	8
  4933  0006D0  0E04               	movlw	4
  4934  0006D2  26F3               	addwf	prodl,f,c
  4935  0006D4  0E00               	movlw	0
  4936  0006D6  22F4               	addwfc	prodh,f,c
  4937  0006D8  0E00               	movlw	low _swTimers
  4938  0006DA  24F3               	addwf	prodl,w,c
  4939  0006DC  6ED9               	movwf	fsr2l,c
  4940  0006DE  0E03               	movlw	high _swTimers
  4941  0006E0  20F4               	addwfc	prodh,w,c
  4942  0006E2  6EDA               	movwf	fsr2h,c
  4943  0006E4  04DE               	decf	postinc2,w,c
  4944  0006E6  A4D8               	btfss	status,2,c
  4945  0006E8  D051               	goto	i2l1597
  4946                           
  4947                           ;sw_timer.c: 302: {
  4948                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
  4949  0006EA  5031               	movf	SwTimersInterrupt@i,w,c
  4950  0006EC  0D08               	mullw	8
  4951  0006EE  0E00               	movlw	low _swTimers
  4952  0006F0  24F3               	addwf	prodl,w,c
  4953  0006F2  6ED9               	movwf	fsr2l,c
  4954  0006F4  0E03               	movlw	high _swTimers
  4955  0006F6  20F4               	addwfc	prodh,w,c
  4956  0006F8  6EDA               	movwf	fsr2h,c
  4957  0006FA  50DE               	movf	postinc2,w,c
  4958  0006FC  5C29               	subwf	SwTimersInterrupt@timeElapsed,w,c
  4959  0006FE  50DE               	movf	postinc2,w,c
  4960  000700  582A               	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
  4961  000702  50DE               	movf	postinc2,w,c
  4962  000704  582B               	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
  4963  000706  50DE               	movf	postinc2,w,c
  4964  000708  582C               	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
  4965  00070A  A0D8               	btfss	status,0,c
  4966  00070C  D00D               	goto	i2l1595
  4967                           
  4968                           ;sw_timer.c: 304: {
  4969                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
  4970  00070E  5031               	movf	SwTimersInterrupt@i,w,c
  4971  000710  0D08               	mullw	8
  4972  000712  0E00               	movlw	low _swTimers
  4973  000714  24F3               	addwf	prodl,w,c
  4974  000716  6ED9               	movwf	fsr2l,c
  4975  000718  0E03               	movlw	high _swTimers
  4976  00071A  20F4               	addwfc	prodh,w,c
  4977  00071C  6EDA               	movwf	fsr2h,c
  4978  00071E  6ADE               	clrf	postinc2,c
  4979  000720  6ADE               	clrf	postinc2,c
  4980  000722  6ADE               	clrf	postinc2,c
  4981  000724  6ADD               	clrf	postdec2,c
  4982                           
  4983                           ;sw_timer.c: 306: }
  4984  000726  D032               	goto	i2l1597
  4985  000728                     i2l1595:
  4986                           
  4987                           ;sw_timer.c: 307: else
  4988                           ;sw_timer.c: 308: {
  4989                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
  4990  000728  5031               	movf	SwTimersInterrupt@i,w,c
  4991  00072A  0D08               	mullw	8
  4992  00072C  0E00               	movlw	low _swTimers
  4993  00072E  24F3               	addwf	prodl,w,c
  4994  000730  6ED9               	movwf	fsr2l,c
  4995  000732  0E03               	movlw	high _swTimers
  4996  000734  20F4               	addwfc	prodh,w,c
  4997  000736  6EDA               	movwf	fsr2h,c
  4998  000738  5029               	movf	SwTimersInterrupt@timeElapsed,w,c
  4999  00073A  5EDE               	subwf	postinc2,f,c
  5000  00073C  502A               	movf	SwTimersInterrupt@timeElapsed+1,w,c
  5001  00073E  5ADE               	subwfb	postinc2,f,c
  5002  000740  502B               	movf	SwTimersInterrupt@timeElapsed+2,w,c
  5003  000742  5ADE               	subwfb	postinc2,f,c
  5004  000744  502C               	movf	SwTimersInterrupt@timeElapsed+3,w,c
  5005  000746  5ADE               	subwfb	postinc2,f,c
  5006                           
  5007                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
  5008  000748  5031               	movf	SwTimersInterrupt@i,w,c
  5009  00074A  0D08               	mullw	8
  5010  00074C  0E00               	movlw	low _swTimers
  5011  00074E  24F3               	addwf	prodl,w,c
  5012  000750  6ED9               	movwf	fsr2l,c
  5013  000752  0E03               	movlw	high _swTimers
  5014  000754  20F4               	addwfc	prodh,w,c
  5015  000756  6EDA               	movwf	fsr2h,c
  5016  000758  502D               	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
  5017  00075A  5CDE               	subwf	postinc2,w,c
  5018  00075C  502E               	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
  5019  00075E  58DE               	subwfb	postinc2,w,c
  5020  000760  502F               	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
  5021  000762  58DE               	subwfb	postinc2,w,c
  5022  000764  5030               	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
  5023  000766  58DE               	subwfb	postinc2,w,c
  5024  000768  B0D8               	btfsc	status,0,c
  5025  00076A  D010               	goto	i2l1597
  5026                           
  5027                           ;sw_timer.c: 313: {
  5028                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
  5029  00076C  5031               	movf	SwTimersInterrupt@i,w,c
  5030  00076E  0D08               	mullw	8
  5031  000770  0E00               	movlw	low _swTimers
  5032  000772  24F3               	addwf	prodl,w,c
  5033  000774  6ED9               	movwf	fsr2l,c
  5034  000776  0E03               	movlw	high _swTimers
  5035  000778  20F4               	addwfc	prodh,w,c
  5036  00077A  6EDA               	movwf	fsr2h,c
  5037  00077C  CFDE F02D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
  5038  000780  CFDE F02E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
  5039  000784  CFDE F02F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
  5040  000788  CFDE F030          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
  5041  00078C                     i2l1597:
  5042  00078C  2A31               	incf	SwTimersInterrupt@i,f,c
  5043  00078E                     i2l1592:
  5044  00078E  504A               	movf	_allocatedTimers,w,c	;volatile
  5045  000790  5C31               	subwf	SwTimersInterrupt@i,w,c
  5046  000792  A0D8               	btfss	status,0,c
  5047  000794  D79B               	goto	i2l1593
  5048                           
  5049                           ;sw_timer.c: 315: }
  5050                           ;sw_timer.c: 316: }
  5051                           ;sw_timer.c: 317: }
  5052                           ;sw_timer.c: 318: }
  5053                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
  5054  000796  C02D  F021         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
  5055  00079A  C02E  F022         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
  5056  00079E  C02F  F023         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
  5057  0007A2  C030  F024         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
  5058  0007A6  0012               	return		;funcret
  5059  0007A8                     __end_of_SwTimersInterrupt:
  5060                           	opt stack 0
  5061                           tosu	equ	0xFFF
  5062                           tosh	equ	0xFFE
  5063                           tosl	equ	0xFFD
  5064                           pclatu	equ	0xFFB
  5065                           pclath	equ	0xFFA
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           intcon2	equ	0xFF1
  5074                           intcon3	equ	0xFF0
  5075                           indf0	equ	0xFEF
  5076                           postinc0	equ	0xFEE
  5077                           fsr0h	equ	0xFEA
  5078                           fsr0l	equ	0xFE9
  5079                           wreg	equ	0xFE8
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           indf2	equ	0xFDF
  5083                           postinc2	equ	0xFDE
  5084                           postdec2	equ	0xFDD
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089 ;; *************** function _TMR_GetDeltaTime *****************
  5090 ;; Defined at:
  5091 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  4    8[COMRAM] unsigned long 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;Total ram usage:       24 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    1
  5112 ;; This function calls:
  5113 ;;		_TMR1_ReadTimer
  5114 ;; This function is called by:
  5115 ;;		_SwTimersInterrupt
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text38
  5120  000540                     __ptext38:
  5121                           	opt stack 0
  5122  000540                     _TMR_GetDeltaTime:
  5123                           	opt stack 20
  5124                           
  5125                           ;sw_timer.c: 90: static uint32_t retVal;
  5126                           ;sw_timer.c: 91: static uint16_t tmrVal;
  5127                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
  5128                           
  5129                           ;incstack = 0
  5130  000540  EC48  F006         	call	_TMR1_ReadTimer	;wreg free
  5131  000544  C001  F09C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
  5132  000548  C002  F09D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
  5133                           
  5134                           ;sw_timer.c: 95: if (timerOverflow == 1)
  5135  00054C  0100               	movlb	0	; () banked
  5136  00054E  05A9               	decf	_timerOverflow& (0+255),w,b	;volatile
  5137  000550  A4D8               	btfss	status,2,c
  5138  000552  D065               	goto	i2l1525
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;sw_timer.c: 96: {
  5142                           ;sw_timer.c: 97: timerOverflow = 0;
  5143  000554  0E00               	movlw	0
  5144  000556  6FA9               	movwf	_timerOverflow& (0+255),b	;volatile
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
  5148  000558  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  5149  00055C  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  5150  000560  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  5151  000564  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  5152  000568  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  5153  00056A  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  5154  00056C  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  5155  00056E  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  5156  000570  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  5157  000572  0E00               	movlw	0
  5158  000574  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  5159  000576  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  5160  000578  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  5161  00057A  5044               	movf	_reloadVal,w,c	;volatile
  5162  00057C  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
  5163  00057E  5045               	movf	_reloadVal+1,w,c	;volatile
  5164  000580  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
  5165  000582  6A13               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),c
  5166  000584  6A14               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),c
  5167  000586  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  5168  000588  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  5169  00058A  1E13               	comf	??_TMR_GetDeltaTime+6,f,c
  5170  00058C  1E14               	comf	??_TMR_GetDeltaTime+7,f,c
  5171  00058E  2A11               	incf	??_TMR_GetDeltaTime+4,f,c
  5172  000590  0E00               	movlw	0
  5173  000592  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  5174  000594  2213               	addwfc	??_TMR_GetDeltaTime+6,f,c
  5175  000596  2214               	addwfc	??_TMR_GetDeltaTime+7,f,c
  5176  000598  519C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5177  00059A  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
  5178  00059C  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5179  00059E  519D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5180  0005A0  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
  5181  0005A2  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5182  0005A4  0E00               	movlw	0
  5183  0005A6  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
  5184  0005A8  6E17               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
  5185  0005AA  0E00               	movlw	0
  5186  0005AC  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  5187  0005AE  6E18               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
  5188  0005B0  500D               	movf	??_TMR_GetDeltaTime,w,c
  5189  0005B2  2415               	addwf	??_TMR_GetDeltaTime+8,w,c
  5190  0005B4  6E19               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),c
  5191  0005B6  500E               	movf	??_TMR_GetDeltaTime+1,w,c
  5192  0005B8  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  5193  0005BA  6E1A               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),c
  5194  0005BC  500F               	movf	??_TMR_GetDeltaTime+2,w,c
  5195  0005BE  2017               	addwfc	??_TMR_GetDeltaTime+10,w,c
  5196  0005C0  6E1B               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),c
  5197  0005C2  5010               	movf	??_TMR_GetDeltaTime+3,w,c
  5198  0005C4  2018               	addwfc	??_TMR_GetDeltaTime+11,w,c
  5199  0005C6  6E1C               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),c
  5200  0005C8  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  5201  0005CA  2419               	addwf	??_TMR_GetDeltaTime+12,w,c
  5202  0005CC  6E1D               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),c
  5203  0005CE  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5204  0005D0  201A               	addwfc	??_TMR_GetDeltaTime+13,w,c
  5205  0005D2  6E1E               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),c
  5206  0005D4  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5207  0005D6  201B               	addwfc	??_TMR_GetDeltaTime+14,w,c
  5208  0005D8  6E1F               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),c
  5209  0005DA  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5210  0005DC  201C               	addwfc	??_TMR_GetDeltaTime+15,w,c
  5211  0005DE  6E20               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),c
  5212  0005E0  0E00               	movlw	0
  5213  0005E2  241D               	addwf	??_TMR_GetDeltaTime+16,w,c
  5214  0005E4  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5215  0005E6  0E00               	movlw	0
  5216  0005E8  201E               	addwfc	??_TMR_GetDeltaTime+17,w,c
  5217  0005EA  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5218  0005EC  0E01               	movlw	1
  5219  0005EE  201F               	addwfc	??_TMR_GetDeltaTime+18,w,c
  5220  0005F0  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5221  0005F2  0E00               	movlw	0
  5222  0005F4  2020               	addwfc	??_TMR_GetDeltaTime+19,w,c
  5223  0005F6  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
  5227  0005F8  C09C  F064         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
  5228  0005FC  C09D  F065         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
  5229  000600  6B66               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
  5230  000602  6B67               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;sw_timer.c: 100: ticksAdded = 0;
  5234  000604  0E00               	movlw	0
  5235  000606  6F68               	movwf	_ticksAdded& (0+255),b	;volatile
  5236  000608  0E00               	movlw	0
  5237  00060A  6F69               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
  5238  00060C  0E00               	movlw	0
  5239  00060E  6F6A               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
  5240  000610  0E00               	movlw	0
  5241  000612  6F6B               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;sw_timer.c: 101: reloadVal = 0;
  5245  000614  0E00               	movlw	0
  5246  000616  6E45               	movwf	_reloadVal+1,c	;volatile
  5247  000618  0E00               	movlw	0
  5248  00061A  6E44               	movwf	_reloadVal,c	;volatile
  5249                           
  5250                           ;sw_timer.c: 102: }
  5251  00061C  D03D               	goto	i2l1526
  5252  00061E                     i2l1525:
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;sw_timer.c: 103: else
  5256                           ;sw_timer.c: 104: {
  5257                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
  5258                           
  5259                           ; BSR set to: 0
  5260  00061E  C064  F00D         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
  5261  000622  C065  F00E         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
  5262  000626  C066  F00F         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
  5263  00062A  C067  F010         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
  5264  00062E  1E0D               	comf	??_TMR_GetDeltaTime,f,c
  5265  000630  1E0E               	comf	??_TMR_GetDeltaTime+1,f,c
  5266  000632  1E0F               	comf	??_TMR_GetDeltaTime+2,f,c
  5267  000634  1E10               	comf	??_TMR_GetDeltaTime+3,f,c
  5268  000636  2A0D               	incf	??_TMR_GetDeltaTime,f,c
  5269  000638  0E00               	movlw	0
  5270  00063A  220E               	addwfc	??_TMR_GetDeltaTime+1,f,c
  5271  00063C  220F               	addwfc	??_TMR_GetDeltaTime+2,f,c
  5272  00063E  2210               	addwfc	??_TMR_GetDeltaTime+3,f,c
  5273  000640  C044  F011         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
  5274  000644  C045  F012         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
  5275  000648  1E11               	comf	??_TMR_GetDeltaTime+4,f,c
  5276  00064A  1E12               	comf	??_TMR_GetDeltaTime+5,f,c
  5277  00064C  4A11               	infsnz	??_TMR_GetDeltaTime+4,f,c
  5278  00064E  2A12               	incf	??_TMR_GetDeltaTime+5,f,c
  5279  000650  519C               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
  5280  000652  2611               	addwf	??_TMR_GetDeltaTime+4,f,c
  5281  000654  519D               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
  5282  000656  2212               	addwfc	??_TMR_GetDeltaTime+5,f,c
  5283  000658  5011               	movf	??_TMR_GetDeltaTime+4,w,c
  5284  00065A  240D               	addwf	??_TMR_GetDeltaTime,w,c
  5285  00065C  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
  5286  00065E  5012               	movf	??_TMR_GetDeltaTime+5,w,c
  5287  000660  200E               	addwfc	??_TMR_GetDeltaTime+1,w,c
  5288  000662  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
  5289  000664  0E00               	movlw	0
  5290  000666  200F               	addwfc	??_TMR_GetDeltaTime+2,w,c
  5291  000668  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
  5292  00066A  0E00               	movlw	0
  5293  00066C  2010               	addwfc	??_TMR_GetDeltaTime+3,w,c
  5294  00066E  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
  5295  000670  5168               	movf	_ticksAdded& (0+255),w,b	;volatile
  5296  000672  2413               	addwf	??_TMR_GetDeltaTime+6,w,c
  5297  000674  6F60               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
  5298  000676  5169               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
  5299  000678  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
  5300  00067A  6F61               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
  5301  00067C  516A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
  5302  00067E  2015               	addwfc	??_TMR_GetDeltaTime+8,w,c
  5303  000680  6F62               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
  5304  000682  516B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
  5305  000684  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
  5306  000686  6F63               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
  5307                           
  5308                           ;sw_timer.c: 106: ticksAccounted += retVal;
  5309  000688  5160               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
  5310  00068A  2764               	addwf	_ticksAccounted& (0+255),f,b	;volatile
  5311  00068C  5161               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
  5312  00068E  2365               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
  5313  000690  5162               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
  5314  000692  2366               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
  5315  000694  5163               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
  5316  000696  2367               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
  5317  000698                     i2l1526:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;sw_timer.c: 107: }
  5321                           ;sw_timer.c: 109: return retVal;
  5322                           
  5323                           ; BSR set to: 0
  5324  000698  C060  F009         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
  5325  00069C  C061  F00A         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
  5326  0006A0  C062  F00B         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
  5327  0006A4  C063  F00C         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
  5328  0006A8  0012               	return	
  5329  0006AA                     __end_of_TMR_GetDeltaTime:
  5330                           	opt stack 0
  5331                           tosu	equ	0xFFF
  5332                           tosh	equ	0xFFE
  5333                           tosl	equ	0xFFD
  5334                           pclatu	equ	0xFFB
  5335                           pclath	equ	0xFFA
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           intcon2	equ	0xFF1
  5344                           intcon3	equ	0xFF0
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _TMR1_ReadTimer *****************
  5360 ;; Defined at:
  5361 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  readVal         2    4[COMRAM] unsigned int 
  5366 ;;  readValLow      1    7[COMRAM] unsigned char 
  5367 ;;  readValHigh     1    6[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    0[COMRAM] unsigned int 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;Total ram usage:        8 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_TMR_GetDeltaTime
  5387 ;;		_TMR_SwapTimer
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text39
  5392  000C90                     __ptext39:
  5393                           	opt stack 0
  5394  000C90                     _TMR1_ReadTimer:
  5395                           	opt stack 21
  5396                           
  5397                           ;tmr1.c: 107: uint16_t readVal;
  5398                           ;tmr1.c: 108: uint8_t readValHigh;
  5399                           ;tmr1.c: 109: uint8_t readValLow;
  5400                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;incstack = 0
  5404  000C90  82CD               	bsf	4045,1,c	;volatile
  5405                           
  5406                           ;tmr1.c: 113: readValLow = TMR1L;
  5407  000C92  CFCE F008          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  5408                           
  5409                           ;tmr1.c: 114: readValHigh = TMR1H;
  5410  000C96  CFCF F007          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  5411                           
  5412                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  5413  000C9A  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
  5414  000C9C  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
  5415  000C9E  5008               	movf	TMR1_ReadTimer@readValLow,w,c
  5416  000CA0  6E05               	movwf	TMR1_ReadTimer@readVal,c
  5417  000CA2  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  5418                           
  5419                           ;tmr1.c: 118: return readVal;
  5420  000CA6  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  5421  000CAA  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  5422  000CAE  0012               	return	
  5423  000CB0                     __end_of_TMR1_ReadTimer:
  5424                           	opt stack 0
  5425                           tosu	equ	0xFFF
  5426                           tosh	equ	0xFFE
  5427                           tosl	equ	0xFFD
  5428                           pclatu	equ	0xFFB
  5429                           pclath	equ	0xFFA
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon2	equ	0xFF1
  5438                           intcon3	equ	0xFF0
  5439                           indf0	equ	0xFEF
  5440                           postinc0	equ	0xFEE
  5441                           fsr0h	equ	0xFEA
  5442                           fsr0l	equ	0xFE9
  5443                           wreg	equ	0xFE8
  5444                           fsr1h	equ	0xFE2
  5445                           fsr1l	equ	0xFE1
  5446                           indf2	equ	0xFDF
  5447                           postinc2	equ	0xFDE
  5448                           postdec2	equ	0xFDD
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           
  5453 ;; *************** function _PIN_MANAGER_IOC *****************
  5454 ;; Defined at:
  5455 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;Total ram usage:        0 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    2
  5476 ;; This function calls:
  5477 ;;		_IOCB4_ISR
  5478 ;; This function is called by:
  5479 ;;		_INTERRUPT_InterruptManager
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text40
  5484  000E14                     __ptext40:
  5485                           	opt stack 0
  5486  000E14                     _PIN_MANAGER_IOC:
  5487                           	opt stack 23
  5488                           
  5489                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
  5490                           
  5491                           ;incstack = 0
  5492  000E14  B862               	btfsc	3938,4,c	;volatile
  5493                           
  5494                           ;pin_manager.c: 114: {
  5495                           ;pin_manager.c: 115: IOCB4_ISR();
  5496  000E16  EC58  F006         	call	_IOCB4_ISR	;wreg free
  5497                           
  5498                           ;pin_manager.c: 116: }
  5499                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
  5500  000E1A  90F2               	bcf	intcon,0,c	;volatile
  5501  000E1C  0012               	return		;funcret
  5502  000E1E                     __end_of_PIN_MANAGER_IOC:
  5503                           	opt stack 0
  5504                           tosu	equ	0xFFF
  5505                           tosh	equ	0xFFE
  5506                           tosl	equ	0xFFD
  5507                           pclatu	equ	0xFFB
  5508                           pclath	equ	0xFFA
  5509                           tblptru	equ	0xFF8
  5510                           tblptrh	equ	0xFF7
  5511                           tblptrl	equ	0xFF6
  5512                           tablat	equ	0xFF5
  5513                           prodh	equ	0xFF4
  5514                           prodl	equ	0xFF3
  5515                           intcon	equ	0xFF2
  5516                           intcon2	equ	0xFF1
  5517                           intcon3	equ	0xFF0
  5518                           indf0	equ	0xFEF
  5519                           postinc0	equ	0xFEE
  5520                           fsr0h	equ	0xFEA
  5521                           fsr0l	equ	0xFE9
  5522                           wreg	equ	0xFE8
  5523                           fsr1h	equ	0xFE2
  5524                           fsr1l	equ	0xFE1
  5525                           indf2	equ	0xFDF
  5526                           postinc2	equ	0xFDE
  5527                           postdec2	equ	0xFDD
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _IOCB4_ISR *****************
  5533 ;; Defined at:
  5534 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    1
  5555 ;; This function calls:
  5556 ;;		Absolute function
  5557 ;;		_DIO2_ISR_Lora
  5558 ;;		_IOCB4_DefaultInterruptHandler
  5559 ;; This function is called by:
  5560 ;;		_PIN_MANAGER_IOC
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text41
  5565  000CB0                     __ptext41:
  5566                           	opt stack 0
  5567  000CB0                     _IOCB4_ISR:
  5568                           	opt stack 23
  5569                           
  5570                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
  5571                           
  5572                           ;incstack = 0
  5573  000CB0  0100               	movlb	0	; () banked
  5574  000CB2  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5575  000CB4  11F6               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5576  000CB6  B4D8               	btfsc	status,2,c
  5577  000CB8  0012               	return	
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;pin_manager.c: 130: {
  5581                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
  5582  000CBA  D801               	call	i2u896_48
  5583  000CBC  0012               	return	
  5584  000CBE                     i2u896_48:
  5585  000CBE  0005               	push	
  5586  000CC0  6EFA               	movwf	pclath,c
  5587  000CC2  51F5               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  5588  000CC4  6EFD               	movwf	tosl,c
  5589  000CC6  51F6               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  5590  000CC8  6EFE               	movwf	tosh,c
  5591  000CCA  6AFF               	clrf	tosu,c
  5592  000CCC  50FA               	movf	pclath,w,c
  5593  000CCE  0012               	return		;indir
  5594  000CD0                     __end_of_IOCB4_ISR:
  5595                           	opt stack 0
  5596                           tosu	equ	0xFFF
  5597                           tosh	equ	0xFFE
  5598                           tosl	equ	0xFFD
  5599                           pclatu	equ	0xFFB
  5600                           pclath	equ	0xFFA
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           intcon2	equ	0xFF1
  5609                           intcon3	equ	0xFF0
  5610                           indf0	equ	0xFEF
  5611                           postinc0	equ	0xFEE
  5612                           fsr0h	equ	0xFEA
  5613                           fsr0l	equ	0xFE9
  5614                           wreg	equ	0xFE8
  5615                           fsr1h	equ	0xFE2
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function _DIO2_ISR_Lora *****************
  5625 ;; Defined at:
  5626 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;Total ram usage:        0 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_DIO2_ISR_Lora_Init
  5650 ;;		_IOCB4_ISR
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text42
  5655  000E34                     __ptext42:
  5656                           	opt stack 0
  5657  000E34                     _DIO2_ISR_Lora:
  5658                           	opt stack 23
  5659                           
  5660                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
  5661                           
  5662                           ;incstack = 0
  5663  000E34  0100               	movlb	0	; () banked
  5664  000E36  85AA               	bsf	_dioStatus& (0+255),2,b	;volatile
  5665                           
  5666                           ; BSR set to: 0
  5667  000E38  0012               	return		;funcret
  5668  000E3A                     __end_of_DIO2_ISR_Lora:
  5669                           	opt stack 0
  5670                           tosu	equ	0xFFF
  5671                           tosh	equ	0xFFE
  5672                           tosl	equ	0xFFD
  5673                           pclatu	equ	0xFFB
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           intcon2	equ	0xFF1
  5683                           intcon3	equ	0xFF0
  5684                           indf0	equ	0xFEF
  5685                           postinc0	equ	0xFEE
  5686                           fsr0h	equ	0xFEA
  5687                           fsr0l	equ	0xFE9
  5688                           wreg	equ	0xFE8
  5689                           fsr1h	equ	0xFE2
  5690                           fsr1l	equ	0xFE1
  5691                           indf2	equ	0xFDF
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  5699 ;; Defined at:
  5700 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		None
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_PIN_MANAGER_Initialize
  5724 ;;		_IOCB4_ISR
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text43
  5729  000E6A                     __ptext43:
  5730                           	opt stack 0
  5731  000E6A                     _IOCB4_DefaultInterruptHandler:
  5732                           	opt stack 23
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;incstack = 0
  5736  000E6A  0012               	return		;funcret
  5737  000E6C                     __end_of_IOCB4_DefaultInterruptHandler:
  5738                           	opt stack 0
  5739                           tosu	equ	0xFFF
  5740                           tosh	equ	0xFFE
  5741                           tosl	equ	0xFFD
  5742                           pclatu	equ	0xFFB
  5743                           pclath	equ	0xFFA
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           intcon2	equ	0xFF1
  5752                           intcon3	equ	0xFF0
  5753                           indf0	equ	0xFEF
  5754                           postinc0	equ	0xFEE
  5755                           fsr0h	equ	0xFEA
  5756                           fsr0l	equ	0xFE9
  5757                           wreg	equ	0xFE8
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           indf2	equ	0xFDF
  5761                           postinc2	equ	0xFDE
  5762                           postdec2	equ	0xFDD
  5763                           fsr2h	equ	0xFDA
  5764                           fsr2l	equ	0xFD9
  5765                           status	equ	0xFD8
  5766                           
  5767 ;; *************** function _INT2_ISR *****************
  5768 ;; Defined at:
  5769 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    2
  5790 ;; This function calls:
  5791 ;;		_INT2_CallBack
  5792 ;; This function is called by:
  5793 ;;		_INTERRUPT_InterruptManager
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text44
  5798  000E1E                     __ptext44:
  5799                           	opt stack 0
  5800  000E1E                     _INT2_ISR:
  5801                           	opt stack 23
  5802                           
  5803                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
  5804                           
  5805                           ;incstack = 0
  5806  000E1E  92F0               	bcf	intcon3,1,c	;volatile
  5807                           
  5808                           ;ext_int.c: 64: INT2_CallBack();
  5809  000E20  EC68  F006         	call	_INT2_CallBack	;wreg free
  5810  000E24  0012               	return		;funcret
  5811  000E26                     __end_of_INT2_ISR:
  5812                           	opt stack 0
  5813                           tosu	equ	0xFFF
  5814                           tosh	equ	0xFFE
  5815                           tosl	equ	0xFFD
  5816                           pclatu	equ	0xFFB
  5817                           pclath	equ	0xFFA
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           prodh	equ	0xFF4
  5823                           prodl	equ	0xFF3
  5824                           intcon	equ	0xFF2
  5825                           intcon2	equ	0xFF1
  5826                           intcon3	equ	0xFF0
  5827                           indf0	equ	0xFEF
  5828                           postinc0	equ	0xFEE
  5829                           fsr0h	equ	0xFEA
  5830                           fsr0l	equ	0xFE9
  5831                           wreg	equ	0xFE8
  5832                           fsr1h	equ	0xFE2
  5833                           fsr1l	equ	0xFE1
  5834                           indf2	equ	0xFDF
  5835                           postinc2	equ	0xFDE
  5836                           postdec2	equ	0xFDD
  5837                           fsr2h	equ	0xFDA
  5838                           fsr2l	equ	0xFD9
  5839                           status	equ	0xFD8
  5840                           
  5841 ;; *************** function _INT2_CallBack *****************
  5842 ;; Defined at:
  5843 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;		None
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        0 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    1
  5864 ;; This function calls:
  5865 ;;		Absolute function
  5866 ;;		_DIO1_ISR_Lora
  5867 ;;		_INT2_DefaultInterruptHandler
  5868 ;; This function is called by:
  5869 ;;		_INT2_ISR
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text45
  5874  000CD0                     __ptext45:
  5875                           	opt stack 0
  5876  000CD0                     _INT2_CallBack:
  5877                           	opt stack 23
  5878                           
  5879                           ;ext_int.c: 71: if(INT2_InterruptHandler)
  5880                           
  5881                           ;incstack = 0
  5882  000CD0  0100               	movlb	0	; () banked
  5883  000CD2  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
  5884  000CD4  11F8               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5885  000CD6  B4D8               	btfsc	status,2,c
  5886  000CD8  0012               	return	
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;ext_int.c: 72: {
  5890                           ;ext_int.c: 73: INT2_InterruptHandler();
  5891  000CDA  D801               	call	i2u894_48
  5892  000CDC  0012               	return	
  5893  000CDE                     i2u894_48:
  5894  000CDE  0005               	push	
  5895  000CE0  6EFA               	movwf	pclath,c
  5896  000CE2  51F7               	movf	_INT2_InterruptHandler& (0+255),w,b
  5897  000CE4  6EFD               	movwf	tosl,c
  5898  000CE6  51F8               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  5899  000CE8  6EFE               	movwf	tosh,c
  5900  000CEA  6AFF               	clrf	tosu,c
  5901  000CEC  50FA               	movf	pclath,w,c
  5902  000CEE  0012               	return		;indir
  5903  000CF0                     __end_of_INT2_CallBack:
  5904                           	opt stack 0
  5905                           tosu	equ	0xFFF
  5906                           tosh	equ	0xFFE
  5907                           tosl	equ	0xFFD
  5908                           pclatu	equ	0xFFB
  5909                           pclath	equ	0xFFA
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           intcon	equ	0xFF2
  5917                           intcon2	equ	0xFF1
  5918                           intcon3	equ	0xFF0
  5919                           indf0	equ	0xFEF
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           fsr1h	equ	0xFE2
  5925                           fsr1l	equ	0xFE1
  5926                           indf2	equ	0xFDF
  5927                           postinc2	equ	0xFDE
  5928                           postdec2	equ	0xFDD
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function _DIO1_ISR_Lora *****************
  5934 ;; Defined at:
  5935 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_DIO1_ISR_Lora_Init
  5959 ;;		_INT2_CallBack
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text46
  5964  000E3A                     __ptext46:
  5965                           	opt stack 0
  5966  000E3A                     _DIO1_ISR_Lora:
  5967                           	opt stack 23
  5968                           
  5969                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
  5970                           
  5971                           ;incstack = 0
  5972  000E3A  0100               	movlb	0	; () banked
  5973  000E3C  83AA               	bsf	_dioStatus& (0+255),1,b	;volatile
  5974                           
  5975                           ; BSR set to: 0
  5976  000E3E  0012               	return		;funcret
  5977  000E40                     __end_of_DIO1_ISR_Lora:
  5978                           	opt stack 0
  5979                           tosu	equ	0xFFF
  5980                           tosh	equ	0xFFE
  5981                           tosl	equ	0xFFD
  5982                           pclatu	equ	0xFFB
  5983                           pclath	equ	0xFFA
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           intcon2	equ	0xFF1
  5992                           intcon3	equ	0xFF0
  5993                           indf0	equ	0xFEF
  5994                           postinc0	equ	0xFEE
  5995                           fsr0h	equ	0xFEA
  5996                           fsr0l	equ	0xFE9
  5997                           wreg	equ	0xFE8
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function _INT2_DefaultInterruptHandler *****************
  6008 ;; Defined at:
  6009 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		None
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_EXT_INT_Initialize
  6033 ;;		_INT2_CallBack
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text47
  6038  000E6C                     __ptext47:
  6039                           	opt stack 0
  6040  000E6C                     _INT2_DefaultInterruptHandler:
  6041                           	opt stack 23
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;incstack = 0
  6045  000E6C  0012               	return		;funcret
  6046  000E6E                     __end_of_INT2_DefaultInterruptHandler:
  6047                           	opt stack 0
  6048                           tosu	equ	0xFFF
  6049                           tosh	equ	0xFFE
  6050                           tosl	equ	0xFFD
  6051                           pclatu	equ	0xFFB
  6052                           pclath	equ	0xFFA
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           prodh	equ	0xFF4
  6058                           prodl	equ	0xFF3
  6059                           intcon	equ	0xFF2
  6060                           intcon2	equ	0xFF1
  6061                           intcon3	equ	0xFF0
  6062                           indf0	equ	0xFEF
  6063                           postinc0	equ	0xFEE
  6064                           fsr0h	equ	0xFEA
  6065                           fsr0l	equ	0xFE9
  6066                           wreg	equ	0xFE8
  6067                           fsr1h	equ	0xFE2
  6068                           fsr1l	equ	0xFE1
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           postdec2	equ	0xFDD
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function _INT1_ISR *****************
  6077 ;; Defined at:
  6078 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      void 
  6085 ;; Registers used:
  6086 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;Total ram usage:        0 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    2
  6099 ;; This function calls:
  6100 ;;		_INT1_CallBack
  6101 ;; This function is called by:
  6102 ;;		_INTERRUPT_InterruptManager
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text48
  6107  000E26                     __ptext48:
  6108                           	opt stack 0
  6109  000E26                     _INT1_ISR:
  6110                           	opt stack 23
  6111                           
  6112                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
  6113                           
  6114                           ;incstack = 0
  6115  000E26  90F0               	bcf	intcon3,0,c	;volatile
  6116                           
  6117                           ;ext_int.c: 38: INT1_CallBack();
  6118  000E28  EC78  F006         	call	_INT1_CallBack	;wreg free
  6119  000E2C  0012               	return		;funcret
  6120  000E2E                     __end_of_INT1_ISR:
  6121                           	opt stack 0
  6122                           tosu	equ	0xFFF
  6123                           tosh	equ	0xFFE
  6124                           tosl	equ	0xFFD
  6125                           pclatu	equ	0xFFB
  6126                           pclath	equ	0xFFA
  6127                           tblptru	equ	0xFF8
  6128                           tblptrh	equ	0xFF7
  6129                           tblptrl	equ	0xFF6
  6130                           tablat	equ	0xFF5
  6131                           prodh	equ	0xFF4
  6132                           prodl	equ	0xFF3
  6133                           intcon	equ	0xFF2
  6134                           intcon2	equ	0xFF1
  6135                           intcon3	equ	0xFF0
  6136                           indf0	equ	0xFEF
  6137                           postinc0	equ	0xFEE
  6138                           fsr0h	equ	0xFEA
  6139                           fsr0l	equ	0xFE9
  6140                           wreg	equ	0xFE8
  6141                           fsr1h	equ	0xFE2
  6142                           fsr1l	equ	0xFE1
  6143                           indf2	equ	0xFDF
  6144                           postinc2	equ	0xFDE
  6145                           postdec2	equ	0xFDD
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function _INT1_CallBack *****************
  6151 ;; Defined at:
  6152 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    1
  6173 ;; This function calls:
  6174 ;;		Absolute function
  6175 ;;		_DIO0_ISR_Lora
  6176 ;;		_INT1_DefaultInterruptHandler
  6177 ;; This function is called by:
  6178 ;;		_INT1_ISR
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text49
  6183  000CF0                     __ptext49:
  6184                           	opt stack 0
  6185  000CF0                     _INT1_CallBack:
  6186                           	opt stack 23
  6187                           
  6188                           ;ext_int.c: 45: if(INT1_InterruptHandler)
  6189                           
  6190                           ;incstack = 0
  6191  000CF0  0100               	movlb	0	; () banked
  6192  000CF2  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
  6193  000CF4  11FA               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6194  000CF6  B4D8               	btfsc	status,2,c
  6195  000CF8  0012               	return	
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;ext_int.c: 46: {
  6199                           ;ext_int.c: 47: INT1_InterruptHandler();
  6200  000CFA  D801               	call	i2u892_48
  6201  000CFC  0012               	return	
  6202  000CFE                     i2u892_48:
  6203  000CFE  0005               	push	
  6204  000D00  6EFA               	movwf	pclath,c
  6205  000D02  51F9               	movf	_INT1_InterruptHandler& (0+255),w,b
  6206  000D04  6EFD               	movwf	tosl,c
  6207  000D06  51FA               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  6208  000D08  6EFE               	movwf	tosh,c
  6209  000D0A  6AFF               	clrf	tosu,c
  6210  000D0C  50FA               	movf	pclath,w,c
  6211  000D0E  0012               	return		;indir
  6212  000D10                     __end_of_INT1_CallBack:
  6213                           	opt stack 0
  6214                           tosu	equ	0xFFF
  6215                           tosh	equ	0xFFE
  6216                           tosl	equ	0xFFD
  6217                           pclatu	equ	0xFFB
  6218                           pclath	equ	0xFFA
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           prodh	equ	0xFF4
  6224                           prodl	equ	0xFF3
  6225                           intcon	equ	0xFF2
  6226                           intcon2	equ	0xFF1
  6227                           intcon3	equ	0xFF0
  6228                           indf0	equ	0xFEF
  6229                           postinc0	equ	0xFEE
  6230                           fsr0h	equ	0xFEA
  6231                           fsr0l	equ	0xFE9
  6232                           wreg	equ	0xFE8
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _DIO0_ISR_Lora *****************
  6243 ;; Defined at:
  6244 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_DIO0_ISR_Lora_Init
  6268 ;;		_INT1_CallBack
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text50
  6273  000E40                     __ptext50:
  6274                           	opt stack 0
  6275  000E40                     _DIO0_ISR_Lora:
  6276                           	opt stack 23
  6277                           
  6278                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
  6279                           
  6280                           ;incstack = 0
  6281  000E40  0100               	movlb	0	; () banked
  6282  000E42  81AA               	bsf	_dioStatus& (0+255),0,b	;volatile
  6283                           
  6284                           ; BSR set to: 0
  6285  000E44  0012               	return		;funcret
  6286  000E46                     __end_of_DIO0_ISR_Lora:
  6287                           	opt stack 0
  6288                           tosu	equ	0xFFF
  6289                           tosh	equ	0xFFE
  6290                           tosl	equ	0xFFD
  6291                           pclatu	equ	0xFFB
  6292                           pclath	equ	0xFFA
  6293                           tblptru	equ	0xFF8
  6294                           tblptrh	equ	0xFF7
  6295                           tblptrl	equ	0xFF6
  6296                           tablat	equ	0xFF5
  6297                           prodh	equ	0xFF4
  6298                           prodl	equ	0xFF3
  6299                           intcon	equ	0xFF2
  6300                           intcon2	equ	0xFF1
  6301                           intcon3	equ	0xFF0
  6302                           indf0	equ	0xFEF
  6303                           postinc0	equ	0xFEE
  6304                           fsr0h	equ	0xFEA
  6305                           fsr0l	equ	0xFE9
  6306                           wreg	equ	0xFE8
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           postdec2	equ	0xFDD
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function _INT1_DefaultInterruptHandler *****************
  6317 ;; Defined at:
  6318 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;		None
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		None
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_EXT_INT_Initialize
  6342 ;;		_INT1_CallBack
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text51
  6347  000E6E                     __ptext51:
  6348                           	opt stack 0
  6349  000E6E                     _INT1_DefaultInterruptHandler:
  6350                           	opt stack 23
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;incstack = 0
  6354  000E6E  0012               	return		;funcret
  6355  000E70                     __end_of_INT1_DefaultInterruptHandler:
  6356                           	opt stack 0
  6357                           tosu	equ	0xFFF
  6358                           tosh	equ	0xFFE
  6359                           tosl	equ	0xFFD
  6360                           pclatu	equ	0xFFB
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           intcon2	equ	0xFF1
  6370                           intcon3	equ	0xFF0
  6371                           indf0	equ	0xFEF
  6372                           postinc0	equ	0xFEE
  6373                           fsr0h	equ	0xFEA
  6374                           fsr0l	equ	0xFE9
  6375                           wreg	equ	0xFE8
  6376                           fsr1h	equ	0xFE2
  6377                           fsr1l	equ	0xFE1
  6378                           indf2	equ	0xFDF
  6379                           postinc2	equ	0xFDE
  6380                           postdec2	equ	0xFDD
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8
  6384                           
  6385 ;; *************** function _EUSART1_Transmit_ISR *****************
  6386 ;; Defined at:
  6387 ;;		line 224 in file "mcc_generated_files/eusart1.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:        0 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_EUSART1_Initialize
  6411 ;;		_INTERRUPT_InterruptManager
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text52
  6416  000B7C                     __ptext52:
  6417                           	opt stack 0
  6418  000B7C                     _EUSART1_Transmit_ISR:
  6419                           	opt stack 25
  6420                           
  6421                           ;eusart1.c: 228: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6422                           
  6423                           ;incstack = 0
  6424  000B7C  0100               	movlb	0	; () banked
  6425  000B7E  51FB               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6426  000B80  A4D8               	btfss	status,2,c
  6427  000B82  D012               	goto	i2l2546
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;eusart1.c: 229: {
  6431                           ;eusart1.c: 230: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6432  000B84  51A6               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6433  000B86  0D01               	mullw	1
  6434  000B88  0EA5               	movlw	low _eusart1TxBuffer
  6435  000B8A  24F3               	addwf	prodl,w,c
  6436  000B8C  6ED9               	movwf	fsr2l,c
  6437  000B8E  0E00               	movlw	high _eusart1TxBuffer
  6438  000B90  20F4               	addwfc	prodh,w,c
  6439  000B92  6EDA               	movwf	fsr2h,c
  6440  000B94  50DF               	movf	indf2,w,c
  6441  000B96  6EAD               	movwf	4013,c	;volatile
  6442                           
  6443                           ; BSR set to: 0
  6444  000B98  2BA6               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;eusart1.c: 231: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6448  000B9A  51A6               	movf	_eusart1TxTail& (0+255),w,b	;volatile
  6449  000B9C  B4D8               	btfsc	status,2,c
  6450  000B9E  D002               	goto	i2l2547
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;eusart1.c: 232: {
  6454                           ;eusart1.c: 233: eusart1TxTail = 0;
  6455  000BA0  0E00               	movlw	0
  6456  000BA2  6FA6               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6457  000BA4                     i2l2547:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;eusart1.c: 234: }
  6461                           ;eusart1.c: 235: eusart1TxBufferRemaining++;
  6462                           
  6463                           ; BSR set to: 0
  6464  000BA4  2BFB               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6465                           
  6466                           ;eusart1.c: 236: }
  6467  000BA6  0012               	return	
  6468  000BA8                     i2l2546:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;eusart1.c: 237: else
  6472                           ;eusart1.c: 238: {
  6473                           ;eusart1.c: 239: PIE1bits.TX1IE = 0;
  6474  000BA8  989D               	bcf	3997,4,c	;volatile
  6475  000BAA  0012               	return	
  6476  000BAC                     __end_of_EUSART1_Transmit_ISR:
  6477                           	opt stack 0
  6478                           tosu	equ	0xFFF
  6479                           tosh	equ	0xFFE
  6480                           tosl	equ	0xFFD
  6481                           pclatu	equ	0xFFB
  6482                           pclath	equ	0xFFA
  6483                           tblptru	equ	0xFF8
  6484                           tblptrh	equ	0xFF7
  6485                           tblptrl	equ	0xFF6
  6486                           tablat	equ	0xFF5
  6487                           prodh	equ	0xFF4
  6488                           prodl	equ	0xFF3
  6489                           intcon	equ	0xFF2
  6490                           intcon2	equ	0xFF1
  6491                           intcon3	equ	0xFF0
  6492                           indf0	equ	0xFEF
  6493                           postinc0	equ	0xFEE
  6494                           fsr0h	equ	0xFEA
  6495                           fsr0l	equ	0xFE9
  6496                           wreg	equ	0xFE8
  6497                           fsr1h	equ	0xFE2
  6498                           fsr1l	equ	0xFE1
  6499                           indf2	equ	0xFDF
  6500                           postinc2	equ	0xFDE
  6501                           postdec2	equ	0xFDD
  6502                           fsr2h	equ	0xFDA
  6503                           fsr2l	equ	0xFD9
  6504                           status	equ	0xFD8
  6505                           
  6506 ;; *************** function _EUSART1_Receive_ISR *****************
  6507 ;; Defined at:
  6508 ;;		line 243 in file "mcc_generated_files/eusart1.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;Total ram usage:        3 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    2
  6529 ;; This function calls:
  6530 ;;		Absolute function
  6531 ;;		_EUSART1_DefaultErrorHandler
  6532 ;;		_EUSART1_DefaultFramingErrorHandler
  6533 ;;		_EUSART1_DefaultOverrunErrorHandler
  6534 ;;		_EUSART1_Read
  6535 ;;		_EUSART1_RxDataHandler
  6536 ;;		_strncat
  6537 ;; This function is called by:
  6538 ;;		_EUSART1_Initialize
  6539 ;;		_INTERRUPT_InterruptManager
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text53
  6544  0000D4                     __ptext53:
  6545                           	opt stack 0
  6546  0000D4                     _EUSART1_Receive_ISR:
  6547                           	opt stack 23
  6548                           
  6549                           ;eusart1.c: 246: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;incstack = 0
  6553  0000D4  5048               	movf	_eusart1RxHead,w,c	;volatile
  6554  0000D6  0D01               	mullw	1
  6555  0000D8  0E46               	movlw	low _eusart1RxStatusBuffer
  6556  0000DA  24F3               	addwf	prodl,w,c
  6557  0000DC  6ED9               	movwf	fsr2l,c
  6558  0000DE  0E00               	movlw	high _eusart1RxStatusBuffer
  6559  0000E0  20F4               	addwfc	prodh,w,c
  6560  0000E2  6EDA               	movwf	fsr2h,c
  6561  0000E4  0E00               	movlw	0
  6562  0000E6  6EDF               	movwf	indf2,c
  6563                           
  6564                           ;eusart1.c: 248: if(RCSTA1bits.FERR){
  6565  0000E8  A4AB               	btfss	4011,2,c	;volatile
  6566  0000EA  D015               	goto	i2u1015_49
  6567                           
  6568                           ;eusart1.c: 249: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  6569  0000EC  5048               	movf	_eusart1RxHead,w,c	;volatile
  6570  0000EE  0D01               	mullw	1
  6571  0000F0  0E46               	movlw	low _eusart1RxStatusBuffer
  6572  0000F2  24F3               	addwf	prodl,w,c
  6573  0000F4  6ED9               	movwf	fsr2l,c
  6574  0000F6  0E00               	movlw	high _eusart1RxStatusBuffer
  6575  0000F8  20F4               	addwfc	prodh,w,c
  6576  0000FA  6EDA               	movwf	fsr2h,c
  6577  0000FC  82DF               	bsf	indf2,1,c
  6578                           
  6579                           ;eusart1.c: 250: EUSART1_FramingErrorHandler();
  6580  0000FE  D801               	call	i2u1015_48
  6581  000100  D00A               	goto	i2u1015_49
  6582  000102                     i2u1015_48:
  6583  000102  0005               	push	
  6584  000104  6EFA               	movwf	pclath,c
  6585  000106  0102               	movlb	2	; () banked
  6586  000108  51F4               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6587  00010A  6EFD               	movwf	tosl,c
  6588  00010C  51F5               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6589  00010E  6EFE               	movwf	tosh,c
  6590  000110  6AFF               	clrf	tosu,c
  6591  000112  50FA               	movf	pclath,w,c
  6592  000114  0012               	return		;indir
  6593  000116                     i2u1015_49:
  6594                           
  6595                           ;eusart1.c: 251: }
  6596                           ;eusart1.c: 253: if(RCSTA1bits.OERR){
  6597  000116  A2AB               	btfss	4011,1,c	;volatile
  6598  000118  D015               	goto	i2u1017_49
  6599                           
  6600                           ;eusart1.c: 254: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  6601  00011A  5048               	movf	_eusart1RxHead,w,c	;volatile
  6602  00011C  0D01               	mullw	1
  6603  00011E  0E46               	movlw	low _eusart1RxStatusBuffer
  6604  000120  24F3               	addwf	prodl,w,c
  6605  000122  6ED9               	movwf	fsr2l,c
  6606  000124  0E00               	movlw	high _eusart1RxStatusBuffer
  6607  000126  20F4               	addwfc	prodh,w,c
  6608  000128  6EDA               	movwf	fsr2h,c
  6609  00012A  84DF               	bsf	indf2,2,c
  6610                           
  6611                           ;eusart1.c: 255: EUSART1_OverrunErrorHandler();
  6612  00012C  D801               	call	i2u1017_48
  6613  00012E  D00A               	goto	i2u1017_49
  6614  000130                     i2u1017_48:
  6615  000130  0005               	push	
  6616  000132  6EFA               	movwf	pclath,c
  6617  000134  0102               	movlb	2	; () banked
  6618  000136  51F2               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6619  000138  6EFD               	movwf	tosl,c
  6620  00013A  51F3               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6621  00013C  6EFE               	movwf	tosh,c
  6622  00013E  6AFF               	clrf	tosu,c
  6623  000140  50FA               	movf	pclath,w,c
  6624  000142  0012               	return		;indir
  6625  000144                     i2u1017_49:
  6626                           
  6627                           ;eusart1.c: 256: }
  6628                           ;eusart1.c: 258: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  6629  000144  5048               	movf	_eusart1RxHead,w,c	;volatile
  6630  000146  0D01               	mullw	1
  6631  000148  0E46               	movlw	low _eusart1RxStatusBuffer
  6632  00014A  24F3               	addwf	prodl,w,c
  6633  00014C  6ED9               	movwf	fsr2l,c
  6634  00014E  0E00               	movlw	high _eusart1RxStatusBuffer
  6635  000150  20F4               	addwfc	prodh,w,c
  6636  000152  6EDA               	movwf	fsr2h,c
  6637  000154  50DF               	movf	indf2,w,c
  6638  000156  B4D8               	btfsc	status,2,c
  6639  000158  D00C               	goto	i2l2554
  6640                           
  6641                           ;eusart1.c: 259: EUSART1_ErrorHandler();
  6642  00015A  D801               	call	i2u1019_48
  6643  00015C  0012               	return	
  6644  00015E                     i2u1019_48:
  6645  00015E  0005               	push	
  6646  000160  6EFA               	movwf	pclath,c
  6647  000162  0102               	movlb	2	; () banked
  6648  000164  51F0               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6649  000166  6EFD               	movwf	tosl,c
  6650  000168  51F1               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6651  00016A  6EFE               	movwf	tosh,c
  6652  00016C  6AFF               	clrf	tosu,c
  6653  00016E  50FA               	movf	pclath,w,c
  6654  000170  0012               	return		;indir
  6655  000172                     i2l2554:
  6656                           
  6657                           ;eusart1.c: 261: EUSART1_RxDataHandler();
  6658  000172  EC14  F006         	call	_EUSART1_RxDataHandler	;wreg free
  6659                           
  6660                           ;eusart1.c: 262: LATA=0xF0;
  6661  000176  0EF0               	movlw	240
  6662  000178  6E89               	movwf	3977,c	;volatile
  6663                           
  6664                           ;eusart1.c: 264: datax = EUSART1_Read();
  6665  00017A  EC40  F005         	call	_EUSART1_Read	;wreg free
  6666  00017E  0100               	movlb	0	; () banked
  6667  000180  6FA1               	movwf	_datax& (0+255),b
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;eusart1.c: 266: datatobesolved = datax;
  6671  000182  C0A1  F042         	movff	_datax,_datatobesolved
  6672  000186  6A43               	clrf	_datatobesolved+1,c
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;eusart1.c: 268: bitStatusbefore1 = (datatobesolved >> 0) & 1;
  6676  000188  0E01               	movlw	1
  6677  00018A  1442               	andwf	_datatobesolved,w,c
  6678  00018C  6F94               	movwf	_bitStatusbefore1& (0+255),b
  6679  00018E  6B95               	clrf	(_bitStatusbefore1+1)& (0+255),b
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;eusart1.c: 269: bitStatusbefore2 = (datatobesolved >> 1) & 1;
  6683  000190  3443               	rlcf	_datatobesolved+1,w,c
  6684  000192  3043               	rrcf	_datatobesolved+1,w,c
  6685  000194  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6686  000196  3042               	rrcf	_datatobesolved,w,c
  6687  000198  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6688  00019A  0E01               	movlw	1
  6689  00019C  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6690  00019E  6F92               	movwf	_bitStatusbefore2& (0+255),b
  6691  0001A0  6B93               	clrf	(_bitStatusbefore2+1)& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;eusart1.c: 270: bitStatusbefore3 = (datatobesolved >> 2) & 1;
  6695  0001A2  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6696  0001A6  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6697  0001AA  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6698  0001AC  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6699  0001AE  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6700  0001B0  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6701  0001B2  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6702  0001B4  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6703  0001B6  0E01               	movlw	1
  6704  0001B8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6705  0001BA  6F90               	movwf	_bitStatusbefore3& (0+255),b
  6706  0001BC  6B91               	clrf	(_bitStatusbefore3+1)& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;eusart1.c: 271: bitStatusbefore4 = (datatobesolved >> 3) & 1;
  6710  0001BE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6711  0001C2  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6712  0001C6  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6713  0001C8  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6714  0001CA  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6715  0001CC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6716  0001CE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6717  0001D0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6718  0001D2  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6719  0001D4  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6720  0001D6  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6721  0001D8  0E01               	movlw	1
  6722  0001DA  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6723  0001DC  6F8E               	movwf	_bitStatusbefore4& (0+255),b
  6724  0001DE  6B8F               	clrf	(_bitStatusbefore4+1)& (0+255),b
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;eusart1.c: 272: bitStatusbefore5 = (datatobesolved >> 4) & 1;
  6728  0001E0  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6729  0001E4  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6730  0001E8  0E04               	movlw	4
  6731  0001EA  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6732  0001EC                     i2u1020_45:
  6733  0001EC  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6734  0001EE  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6735  0001F0  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6736  0001F2  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6737  0001F4  D7FB               	goto	i2u1020_45
  6738  0001F6  0E01               	movlw	1
  6739  0001F8  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6740  0001FA  6F8C               	movwf	_bitStatusbefore5& (0+255),b
  6741  0001FC  6B8D               	clrf	(_bitStatusbefore5+1)& (0+255),b
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;eusart1.c: 273: bitStatusbefore6 = (datatobesolved >> 5) & 1;
  6745  0001FE  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6746  000202  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6747  000206  0E05               	movlw	5
  6748  000208  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6749  00020A                     i2u1021_45:
  6750  00020A  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6751  00020C  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6752  00020E  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6753  000210  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6754  000212  D7FB               	goto	i2u1021_45
  6755  000214  0E01               	movlw	1
  6756  000216  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6757  000218  6F8A               	movwf	_bitStatusbefore6& (0+255),b
  6758  00021A  6B8B               	clrf	(_bitStatusbefore6+1)& (0+255),b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;eusart1.c: 274: bitStatusbefore7 = (datatobesolved >> 6) & 1;
  6762  00021C  C042  F009         	movff	_datatobesolved,??_EUSART1_Receive_ISR
  6763  000220  C043  F00A         	movff	_datatobesolved+1,??_EUSART1_Receive_ISR+1
  6764  000224  0E06               	movlw	6
  6765  000226  6E0B               	movwf	(??_EUSART1_Receive_ISR+2)& (0+255),c
  6766  000228                     i2u1022_45:
  6767  000228  340A               	rlcf	??_EUSART1_Receive_ISR+1,w,c
  6768  00022A  320A               	rrcf	??_EUSART1_Receive_ISR+1,f,c
  6769  00022C  3209               	rrcf	??_EUSART1_Receive_ISR,f,c
  6770  00022E  2E0B               	decfsz	(??_EUSART1_Receive_ISR+2)& (0+255),f,c
  6771  000230  D7FB               	goto	i2u1022_45
  6772  000232  0E01               	movlw	1
  6773  000234  1409               	andwf	??_EUSART1_Receive_ISR,w,c
  6774  000236  6F88               	movwf	_bitStatusbefore7& (0+255),b
  6775  000238  6B89               	clrf	(_bitStatusbefore7+1)& (0+255),b
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;eusart1.c: 276: bitStatus1 = bitStatusbefore1<<0;
  6779  00023A  C094  F084         	movff	_bitStatusbefore1,_bitStatus1
  6780  00023E  C095  F085         	movff	_bitStatusbefore1+1,_bitStatus1+1
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;eusart1.c: 277: bitStatus2 = bitStatusbefore2<<1;
  6784  000242  90D8               	bcf	status,0,c
  6785  000244  3592               	rlcf	_bitStatusbefore2& (0+255),w,b
  6786  000246  6F82               	movwf	_bitStatus2& (0+255),b
  6787  000248  3593               	rlcf	(_bitStatusbefore2+1)& (0+255),w,b
  6788  00024A  6F83               	movwf	(_bitStatus2+1)& (0+255),b
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;eusart1.c: 278: bitStatus3 = bitStatusbefore3<<2;
  6792  00024C  C090  F009         	movff	_bitStatusbefore3,??_EUSART1_Receive_ISR
  6793  000250  C091  F00A         	movff	_bitStatusbefore3+1,??_EUSART1_Receive_ISR+1
  6794  000254  90D8               	bcf	status,0,c
  6795  000256  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6796  000258  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6797  00025A  90D8               	bcf	status,0,c
  6798  00025C  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6799  00025E  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6800  000260  C009  F080         	movff	??_EUSART1_Receive_ISR,_bitStatus3
  6801  000264  C00A  F081         	movff	??_EUSART1_Receive_ISR+1,_bitStatus3+1
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;eusart1.c: 279: bitStatus4 = bitStatusbefore4<<3;
  6805  000268  C08E  F009         	movff	_bitStatusbefore4,??_EUSART1_Receive_ISR
  6806  00026C  C08F  F00A         	movff	_bitStatusbefore4+1,??_EUSART1_Receive_ISR+1
  6807  000270  90D8               	bcf	status,0,c
  6808  000272  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6809  000274  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6810  000276  90D8               	bcf	status,0,c
  6811  000278  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6812  00027A  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6813  00027C  90D8               	bcf	status,0,c
  6814  00027E  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6815  000280  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6816  000282  C009  F07E         	movff	??_EUSART1_Receive_ISR,_bitStatus4
  6817  000286  C00A  F07F         	movff	??_EUSART1_Receive_ISR+1,_bitStatus4+1
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;eusart1.c: 280: bitStatus5 = bitStatusbefore5<<4;
  6821  00028A  C08C  F009         	movff	_bitStatusbefore5,??_EUSART1_Receive_ISR
  6822  00028E  C08D  F00A         	movff	_bitStatusbefore5+1,??_EUSART1_Receive_ISR+1
  6823  000292  3A09               	swapf	??_EUSART1_Receive_ISR,f,c
  6824  000294  3A0A               	swapf	??_EUSART1_Receive_ISR+1,f,c
  6825  000296  0EF0               	movlw	240
  6826  000298  160A               	andwf	??_EUSART1_Receive_ISR+1,f,c
  6827  00029A  5009               	movf	??_EUSART1_Receive_ISR,w,c
  6828  00029C  0B0F               	andlw	15
  6829  00029E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6830  0002A0  0EF0               	movlw	240
  6831  0002A2  1609               	andwf	??_EUSART1_Receive_ISR,f,c
  6832  0002A4  C009  F07C         	movff	??_EUSART1_Receive_ISR,_bitStatus5
  6833  0002A8  C00A  F07D         	movff	??_EUSART1_Receive_ISR+1,_bitStatus5+1
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;eusart1.c: 281: bitStatus6 = bitStatusbefore6<<5;
  6837  0002AC  C08A  F009         	movff	_bitStatusbefore6,??_EUSART1_Receive_ISR
  6838  0002B0  C08B  F00A         	movff	_bitStatusbefore6+1,??_EUSART1_Receive_ISR+1
  6839  0002B4  0E05               	movlw	5
  6840  0002B6                     i2u1023_45:
  6841  0002B6  90D8               	bcf	status,0,c
  6842  0002B8  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6843  0002BA  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6844  0002BC  2EE8               	decfsz	wreg,f,c
  6845  0002BE  D7FB               	goto	i2u1023_45
  6846  0002C0  C009  F07A         	movff	??_EUSART1_Receive_ISR,_bitStatus6
  6847  0002C4  C00A  F07B         	movff	??_EUSART1_Receive_ISR+1,_bitStatus6+1
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;eusart1.c: 282: bitStatus7 = bitStatusbefore7<<6;
  6851  0002C8  C088  F009         	movff	_bitStatusbefore7,??_EUSART1_Receive_ISR
  6852  0002CC  C089  F00A         	movff	_bitStatusbefore7+1,??_EUSART1_Receive_ISR+1
  6853  0002D0  0E06               	movlw	6
  6854  0002D2                     i2u1024_45:
  6855  0002D2  90D8               	bcf	status,0,c
  6856  0002D4  3609               	rlcf	??_EUSART1_Receive_ISR,f,c
  6857  0002D6  360A               	rlcf	??_EUSART1_Receive_ISR+1,f,c
  6858  0002D8  2EE8               	decfsz	wreg,f,c
  6859  0002DA  D7FB               	goto	i2u1024_45
  6860  0002DC  C009  F078         	movff	??_EUSART1_Receive_ISR,_bitStatus7
  6861  0002E0  C00A  F079         	movff	??_EUSART1_Receive_ISR+1,_bitStatus7+1
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;eusart1.c: 284: dataresult = bitStatus7 | bitStatus6 | bitStatus5 | bitStatus4 | bitSta
      +                          tus3 | bitStatus2 | bitStatus1;
  6865  0002E4  517A               	movf	_bitStatus6& (0+255),w,b
  6866  0002E6  1178               	iorwf	_bitStatus7& (0+255),w,b
  6867  0002E8  6E09               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6868  0002EA  517B               	movf	(_bitStatus6+1)& (0+255),w,b
  6869  0002EC  1179               	iorwf	(_bitStatus7+1)& (0+255),w,b
  6870  0002EE  6E0A               	movwf	(??_EUSART1_Receive_ISR+1)& (0+255),c
  6871  0002F0  517C               	movf	_bitStatus5& (0+255),w,b
  6872  0002F2  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6873  0002F4  517D               	movf	(_bitStatus5+1)& (0+255),w,b
  6874  0002F6  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6875  0002F8  517E               	movf	_bitStatus4& (0+255),w,b
  6876  0002FA  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6877  0002FC  517F               	movf	(_bitStatus4+1)& (0+255),w,b
  6878  0002FE  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6879  000300  5180               	movf	_bitStatus3& (0+255),w,b
  6880  000302  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6881  000304  5181               	movf	(_bitStatus3+1)& (0+255),w,b
  6882  000306  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6883  000308  5182               	movf	_bitStatus2& (0+255),w,b
  6884  00030A  1209               	iorwf	??_EUSART1_Receive_ISR,f,c
  6885  00030C  5183               	movf	(_bitStatus2+1)& (0+255),w,b
  6886  00030E  120A               	iorwf	??_EUSART1_Receive_ISR+1,f,c
  6887  000310  5184               	movf	_bitStatus1& (0+255),w,b
  6888  000312  1009               	iorwf	??_EUSART1_Receive_ISR,w,c
  6889  000314  6FE1               	movwf	_dataresult& (0+255),b
  6890  000316  5185               	movf	(_bitStatus1+1)& (0+255),w,b
  6891  000318  100A               	iorwf	??_EUSART1_Receive_ISR+1,w,c
  6892  00031A  6FE2               	movwf	(_dataresult+1)& (0+255),b
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;eusart1.c: 286: strncat(dataxstr, &dataresult, 1);
  6896  00031C  0ED8               	movlw	low _dataxstr
  6897  00031E  6E01               	movwf	strncat@to,c
  6898  000320  0E07               	movlw	high _dataxstr
  6899  000322  6E02               	movwf	strncat@to+1,c
  6900  000324  0EE1               	movlw	low _dataresult
  6901  000326  6E03               	movwf	strncat@from,c
  6902  000328  0E00               	movlw	high _dataresult
  6903  00032A  6E04               	movwf	strncat@from+1,c
  6904  00032C  0E00               	movlw	0
  6905  00032E  6E06               	movwf	strncat@size+1,c
  6906  000330  0E01               	movlw	1
  6907  000332  6E05               	movwf	strncat@size,c
  6908  000334  ECB6  F004         	call	_strncat	;wreg free
  6909  000338  0012               	return	
  6910  00033A                     __end_of_EUSART1_Receive_ISR:
  6911                           	opt stack 0
  6912                           tosu	equ	0xFFF
  6913                           tosh	equ	0xFFE
  6914                           tosl	equ	0xFFD
  6915                           pclatu	equ	0xFFB
  6916                           pclath	equ	0xFFA
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           intcon	equ	0xFF2
  6924                           intcon2	equ	0xFF1
  6925                           intcon3	equ	0xFF0
  6926                           indf0	equ	0xFEF
  6927                           postinc0	equ	0xFEE
  6928                           fsr0h	equ	0xFEA
  6929                           fsr0l	equ	0xFE9
  6930                           wreg	equ	0xFE8
  6931                           fsr1h	equ	0xFE2
  6932                           fsr1l	equ	0xFE1
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _strncat *****************
  6941 ;; Defined at:
  6942 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncat.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  to              2    0[COMRAM] PTR unsigned char 
  6945 ;;		 -> dataxstr(1024), 
  6946 ;;  from            2    2[COMRAM] PTR const unsigned char 
  6947 ;;		 -> dataresult(2), 
  6948 ;;  size            2    4[COMRAM] unsigned int 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  cp              2    6[COMRAM] PTR unsigned char 
  6951 ;;		 -> dataxstr(1024), 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  2    0[COMRAM] PTR unsigned char 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6961 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;Total ram usage:        8 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_EUSART1_Receive_ISR
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text54
  6975  00096C                     __ptext54:
  6976                           	opt stack 0
  6977  00096C                     _strncat:
  6978                           	opt stack 24
  6979                           
  6980                           ;incstack = 0
  6981  00096C  C001  F007         	movff	strncat@to,strncat@cp
  6982  000970  C002  F008         	movff	strncat@to+1,strncat@cp+1
  6983  000974  D002               	goto	i2l3396
  6984  000976  4A07               	infsnz	strncat@cp,f,c
  6985  000978  2A08               	incf	strncat@cp+1,f,c
  6986  00097A                     i2l3396:
  6987  00097A  C007  FFD9         	movff	strncat@cp,fsr2l
  6988  00097E  C008  FFDA         	movff	strncat@cp+1,fsr2h
  6989  000982  50DF               	movf	indf2,w,c
  6990  000984  B4D8               	btfsc	status,2,c
  6991  000986  D008               	goto	i2l3399
  6992  000988  D7F6               	goto	i2l3397
  6993  00098A  0605               	decf	strncat@size,f,c
  6994  00098C  A0D8               	btfss	status,0,c
  6995  00098E  0606               	decf	strncat@size+1,f,c
  6996  000990  4A07               	infsnz	strncat@cp,f,c
  6997  000992  2A08               	incf	strncat@cp+1,f,c
  6998  000994  4A03               	infsnz	strncat@from,f,c
  6999  000996  2A04               	incf	strncat@from+1,f,c
  7000  000998                     i2l3399:
  7001  000998  5005               	movf	strncat@size,w,c
  7002  00099A  1006               	iorwf	strncat@size+1,w,c
  7003  00099C  B4D8               	btfsc	status,2,c
  7004  00099E  D00D               	goto	i2u901_40
  7005  0009A0  C003  FFD9         	movff	strncat@from,fsr2l
  7006  0009A4  C004  FFDA         	movff	strncat@from+1,fsr2h
  7007  0009A8  C007  FFE9         	movff	strncat@cp,fsr0l
  7008  0009AC  C008  FFEA         	movff	strncat@cp+1,fsr0h
  7009  0009B0  CFDF FFEF          	movff	indf2,indf0
  7010  0009B4  50EF               	movf	indf0,w,c
  7011  0009B6  A4D8               	btfss	status,2,c
  7012  0009B8  D7E8               	goto	i2l3400
  7013  0009BA                     i2u901_40:
  7014  0009BA  5005               	movf	strncat@size,w,c
  7015  0009BC  1006               	iorwf	strncat@size+1,w,c
  7016  0009BE  A4D8               	btfss	status,2,c
  7017  0009C0  0012               	return	
  7018  0009C2  C007  FFD9         	movff	strncat@cp,fsr2l
  7019  0009C6  C008  FFDA         	movff	strncat@cp+1,fsr2h
  7020  0009CA  0E00               	movlw	0
  7021  0009CC  6EDF               	movwf	indf2,c
  7022  0009CE  0012               	return	
  7023  0009D0                     __end_of_strncat:
  7024                           	opt stack 0
  7025                           tosu	equ	0xFFF
  7026                           tosh	equ	0xFFE
  7027                           tosl	equ	0xFFD
  7028                           pclatu	equ	0xFFB
  7029                           pclath	equ	0xFFA
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           prodh	equ	0xFF4
  7035                           prodl	equ	0xFF3
  7036                           intcon	equ	0xFF2
  7037                           intcon2	equ	0xFF1
  7038                           intcon3	equ	0xFF0
  7039                           indf0	equ	0xFEF
  7040                           postinc0	equ	0xFEE
  7041                           fsr0h	equ	0xFEA
  7042                           fsr0l	equ	0xFE9
  7043                           wreg	equ	0xFE8
  7044                           fsr1h	equ	0xFE2
  7045                           fsr1l	equ	0xFE1
  7046                           indf2	equ	0xFDF
  7047                           postinc2	equ	0xFDE
  7048                           postdec2	equ	0xFDD
  7049                           fsr2h	equ	0xFDA
  7050                           fsr2l	equ	0xFD9
  7051                           status	equ	0xFD8
  7052                           
  7053 ;; *************** function _EUSART1_Read *****************
  7054 ;; Defined at:
  7055 ;;		line 178 in file "mcc_generated_files/eusart1.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  readValue       1    0[COMRAM] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      unsigned char 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;Total ram usage:        1 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_EUSART1_Receive_ISR
  7079 ;;		_UART_Read_Text
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text55
  7084  000A80                     __ptext55:
  7085                           	opt stack 0
  7086  000A80                     _EUSART1_Read:
  7087                           	opt stack 24
  7088                           
  7089                           ;eusart1.c: 180: uint8_t readValue = 0;
  7090                           
  7091                           ;incstack = 0
  7092  000A80  0E00               	movlw	0
  7093  000A82  6E01               	movwf	EUSART1_Read@readValue,c
  7094  000A84                     
  7095                           ;eusart1.c: 183: {
  7096  000A84  0100               	movlb	0	; () banked
  7097  000A86  51A3               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7098  000A88  B4D8               	btfsc	status,2,c
  7099  000A8A  D7FC               	goto	i2l2531
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;eusart1.c: 184: }
  7103                           ;eusart1.c: 186: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxTail];
  7104                           
  7105                           ; BSR set to: 0
  7106  000A8C  5047               	movf	_eusart1RxTail,w,c	;volatile
  7107  000A8E  0D01               	mullw	1
  7108  000A90  0E46               	movlw	low _eusart1RxStatusBuffer
  7109  000A92  24F3               	addwf	prodl,w,c
  7110  000A94  6ED9               	movwf	fsr2l,c
  7111  000A96  0E00               	movlw	high _eusart1RxStatusBuffer
  7112  000A98  20F4               	addwfc	prodh,w,c
  7113  000A9A  6EDA               	movwf	fsr2h,c
  7114  000A9C  50DF               	movf	indf2,w,c
  7115  000A9E  6FA2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7116                           
  7117                           ;eusart1.c: 188: readValue = eusart1RxBuffer[eusart1RxTail++];
  7118  000AA0  5047               	movf	_eusart1RxTail,w,c	;volatile
  7119  000AA2  0D01               	mullw	1
  7120  000AA4  0EA4               	movlw	low _eusart1RxBuffer
  7121  000AA6  24F3               	addwf	prodl,w,c
  7122  000AA8  6ED9               	movwf	fsr2l,c
  7123  000AAA  0E00               	movlw	high _eusart1RxBuffer
  7124  000AAC  20F4               	addwfc	prodh,w,c
  7125  000AAE  6EDA               	movwf	fsr2h,c
  7126  000AB0  50DF               	movf	indf2,w,c
  7127  000AB2  6E01               	movwf	EUSART1_Read@readValue,c
  7128                           
  7129                           ; BSR set to: 0
  7130  000AB4  2A47               	incf	_eusart1RxTail,f,c	;volatile
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;eusart1.c: 189: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7134  000AB6  5047               	movf	_eusart1RxTail,w,c	;volatile
  7135  000AB8  B4D8               	btfsc	status,2,c
  7136  000ABA  D002               	goto	i2l2533
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;eusart1.c: 190: {
  7140                           ;eusart1.c: 191: eusart1RxTail = 0;
  7141  000ABC  0E00               	movlw	0
  7142  000ABE  6E47               	movwf	_eusart1RxTail,c	;volatile
  7143  000AC0                     i2l2533:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;eusart1.c: 192: }
  7147                           ;eusart1.c: 193: PIE1bits.RC1IE = 0;
  7148                           
  7149                           ; BSR set to: 0
  7150  000AC0  9A9D               	bcf	3997,5,c	;volatile
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;eusart1.c: 194: eusart1RxCount--;
  7154  000AC2  07A3               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;eusart1.c: 195: PIE1bits.RC1IE = 1;
  7158  000AC4  8A9D               	bsf	3997,5,c	;volatile
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;eusart1.c: 197: return readValue;
  7162  000AC6  5001               	movf	EUSART1_Read@readValue,w,c
  7163  000AC8  0012               	return	
  7164  000ACA                     __end_of_EUSART1_Read:
  7165                           	opt stack 0
  7166                           tosu	equ	0xFFF
  7167                           tosh	equ	0xFFE
  7168                           tosl	equ	0xFFD
  7169                           pclatu	equ	0xFFB
  7170                           pclath	equ	0xFFA
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           intcon	equ	0xFF2
  7178                           intcon2	equ	0xFF1
  7179                           intcon3	equ	0xFF0
  7180                           indf0	equ	0xFEF
  7181                           postinc0	equ	0xFEE
  7182                           fsr0h	equ	0xFEA
  7183                           fsr0l	equ	0xFE9
  7184                           wreg	equ	0xFE8
  7185                           fsr1h	equ	0xFE2
  7186                           fsr1l	equ	0xFE1
  7187                           indf2	equ	0xFDF
  7188                           postinc2	equ	0xFDE
  7189                           postdec2	equ	0xFDD
  7190                           fsr2h	equ	0xFDA
  7191                           fsr2l	equ	0xFD9
  7192                           status	equ	0xFD8
  7193                           
  7194 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7195 ;; Defined at:
  7196 ;;		line 307 in file "mcc_generated_files/eusart1.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		None
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;Total ram usage:        0 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_EUSART1_Initialize
  7220 ;;		_EUSART1_Receive_ISR
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text56
  7225  000E46                     __ptext56:
  7226                           	opt stack 0
  7227  000E46                     _EUSART1_DefaultOverrunErrorHandler:
  7228                           	opt stack 24
  7229                           
  7230                           ;eusart1.c: 310: RCSTA1bits.CREN = 0;
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;incstack = 0
  7234  000E46  98AB               	bcf	4011,4,c	;volatile
  7235                           
  7236                           ;eusart1.c: 311: RCSTA1bits.CREN = 1;
  7237  000E48  88AB               	bsf	4011,4,c	;volatile
  7238  000E4A  0012               	return		;funcret
  7239  000E4C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7240                           	opt stack 0
  7241                           tosu	equ	0xFFF
  7242                           tosh	equ	0xFFE
  7243                           tosl	equ	0xFFD
  7244                           pclatu	equ	0xFFB
  7245                           pclath	equ	0xFFA
  7246                           tblptru	equ	0xFF8
  7247                           tblptrh	equ	0xFF7
  7248                           tblptrl	equ	0xFF6
  7249                           tablat	equ	0xFF5
  7250                           prodh	equ	0xFF4
  7251                           prodl	equ	0xFF3
  7252                           intcon	equ	0xFF2
  7253                           intcon2	equ	0xFF1
  7254                           intcon3	equ	0xFF0
  7255                           indf0	equ	0xFEF
  7256                           postinc0	equ	0xFEE
  7257                           fsr0h	equ	0xFEA
  7258                           fsr0l	equ	0xFE9
  7259                           wreg	equ	0xFE8
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           postdec2	equ	0xFDD
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7270 ;; Defined at:
  7271 ;;		line 305 in file "mcc_generated_files/eusart1.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		None
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_EUSART1_Initialize
  7295 ;;		_EUSART1_Receive_ISR
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text57
  7300  000E70                     __ptext57:
  7301                           	opt stack 0
  7302  000E70                     _EUSART1_DefaultFramingErrorHandler:
  7303                           	opt stack 24
  7304                           
  7305                           ;incstack = 0
  7306  000E70  0012               	return		;funcret
  7307  000E72                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7308                           	opt stack 0
  7309                           tosu	equ	0xFFF
  7310                           tosh	equ	0xFFE
  7311                           tosl	equ	0xFFD
  7312                           pclatu	equ	0xFFB
  7313                           pclath	equ	0xFFA
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon2	equ	0xFF1
  7322                           intcon3	equ	0xFF0
  7323                           indf0	equ	0xFEF
  7324                           postinc0	equ	0xFEE
  7325                           fsr0h	equ	0xFEA
  7326                           fsr0l	equ	0xFE9
  7327                           wreg	equ	0xFE8
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           postinc2	equ	0xFDE
  7332                           postdec2	equ	0xFDD
  7333                           fsr2h	equ	0xFDA
  7334                           fsr2l	equ	0xFD9
  7335                           status	equ	0xFD8
  7336                           
  7337 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7338 ;; Defined at:
  7339 ;;		line 315 in file "mcc_generated_files/eusart1.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;		None
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;Total ram usage:        0 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    1
  7360 ;; This function calls:
  7361 ;;		_EUSART1_RxDataHandler
  7362 ;; This function is called by:
  7363 ;;		_EUSART1_Initialize
  7364 ;;		_EUSART1_Receive_ISR
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text58
  7369  000E4C                     __ptext58:
  7370                           	opt stack 0
  7371  000E4C                     _EUSART1_DefaultErrorHandler:
  7372                           	opt stack 23
  7373                           
  7374                           ;eusart1.c: 316: EUSART1_RxDataHandler();
  7375                           
  7376                           ;incstack = 0
  7377  000E4C  EC14  F006         	call	_EUSART1_RxDataHandler	;wreg free
  7378  000E50  0012               	return		;funcret
  7379  000E52                     __end_of_EUSART1_DefaultErrorHandler:
  7380                           	opt stack 0
  7381                           tosu	equ	0xFFF
  7382                           tosh	equ	0xFFE
  7383                           tosl	equ	0xFFD
  7384                           pclatu	equ	0xFFB
  7385                           pclath	equ	0xFFA
  7386                           tblptru	equ	0xFF8
  7387                           tblptrh	equ	0xFF7
  7388                           tblptrl	equ	0xFF6
  7389                           tablat	equ	0xFF5
  7390                           prodh	equ	0xFF4
  7391                           prodl	equ	0xFF3
  7392                           intcon	equ	0xFF2
  7393                           intcon2	equ	0xFF1
  7394                           intcon3	equ	0xFF0
  7395                           indf0	equ	0xFEF
  7396                           postinc0	equ	0xFEE
  7397                           fsr0h	equ	0xFEA
  7398                           fsr0l	equ	0xFE9
  7399                           wreg	equ	0xFE8
  7400                           fsr1h	equ	0xFE2
  7401                           fsr1l	equ	0xFE1
  7402                           indf2	equ	0xFDF
  7403                           postinc2	equ	0xFDE
  7404                           postdec2	equ	0xFDD
  7405                           fsr2h	equ	0xFDA
  7406                           fsr2l	equ	0xFD9
  7407                           status	equ	0xFD8
  7408                           
  7409 ;; *************** function _EUSART1_RxDataHandler *****************
  7410 ;; Defined at:
  7411 ;;		line 295 in file "mcc_generated_files/eusart1.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_EUSART1_Receive_ISR
  7435 ;;		_EUSART1_DefaultErrorHandler
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text59
  7440  000C28                     __ptext59:
  7441                           	opt stack 0
  7442  000C28                     _EUSART1_RxDataHandler:
  7443                           	opt stack 24
  7444                           
  7445                           ;eusart1.c: 297: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7446                           
  7447                           ;incstack = 0
  7448  000C28  5048               	movf	_eusart1RxHead,w,c	;volatile
  7449  000C2A  0D01               	mullw	1
  7450  000C2C  0EA4               	movlw	low _eusart1RxBuffer
  7451  000C2E  24F3               	addwf	prodl,w,c
  7452  000C30  6ED9               	movwf	fsr2l,c
  7453  000C32  0E00               	movlw	high _eusart1RxBuffer
  7454  000C34  20F4               	addwfc	prodh,w,c
  7455  000C36  6EDA               	movwf	fsr2h,c
  7456  000C38  CFAE FFDF          	movff	4014,indf2	;volatile
  7457  000C3C  2A48               	incf	_eusart1RxHead,f,c	;volatile
  7458                           
  7459                           ;eusart1.c: 298: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7460  000C3E  5048               	movf	_eusart1RxHead,w,c	;volatile
  7461  000C40  B4D8               	btfsc	status,2,c
  7462  000C42  D002               	goto	i2l2559
  7463                           
  7464                           ;eusart1.c: 299: {
  7465                           ;eusart1.c: 300: eusart1RxHead = 0;
  7466  000C44  0E00               	movlw	0
  7467  000C46  6E48               	movwf	_eusart1RxHead,c	;volatile
  7468  000C48                     i2l2559:
  7469                           
  7470                           ;eusart1.c: 301: }
  7471                           ;eusart1.c: 302: eusart1RxCount++;
  7472  000C48  0100               	movlb	0	; () banked
  7473  000C4A  2BA3               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7474                           
  7475                           ; BSR set to: 0
  7476  000C4C  0012               	return		;funcret
  7477  000C4E                     __end_of_EUSART1_RxDataHandler:
  7478                           	opt stack 0
  7479                           tosu	equ	0xFFF
  7480                           tosh	equ	0xFFE
  7481                           tosl	equ	0xFFD
  7482                           pclatu	equ	0xFFB
  7483                           pclath	equ	0xFFA
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           intcon2	equ	0xFF1
  7492                           intcon3	equ	0xFF0
  7493                           indf0	equ	0xFEF
  7494                           postinc0	equ	0xFEE
  7495                           fsr0h	equ	0xFEA
  7496                           fsr0l	equ	0xFE9
  7497                           wreg	equ	0xFE8
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           fsr2h	equ	0xFDA
  7504                           fsr2l	equ	0xFD9
  7505                           status	equ	0xFD8
  7506                           tosu	equ	0xFFF
  7507                           tosh	equ	0xFFE
  7508                           tosl	equ	0xFFD
  7509                           pclatu	equ	0xFFB
  7510                           pclath	equ	0xFFA
  7511                           tblptru	equ	0xFF8
  7512                           tblptrh	equ	0xFF7
  7513                           tblptrl	equ	0xFF6
  7514                           tablat	equ	0xFF5
  7515                           prodh	equ	0xFF4
  7516                           prodl	equ	0xFF3
  7517                           intcon	equ	0xFF2
  7518                           intcon2	equ	0xFF1
  7519                           intcon3	equ	0xFF0
  7520                           indf0	equ	0xFEF
  7521                           postinc0	equ	0xFEE
  7522                           fsr0h	equ	0xFEA
  7523                           fsr0l	equ	0xFE9
  7524                           wreg	equ	0xFE8
  7525                           fsr1h	equ	0xFE2
  7526                           fsr1l	equ	0xFE1
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534                           	psect	text60
  7535  000000                     __ptext60:
  7536                           	opt stack 0
  7537                           tosu	equ	0xFFF
  7538                           tosh	equ	0xFFE
  7539                           tosl	equ	0xFFD
  7540                           pclatu	equ	0xFFB
  7541                           pclath	equ	0xFFA
  7542                           tblptru	equ	0xFF8
  7543                           tblptrh	equ	0xFF7
  7544                           tblptrl	equ	0xFF6
  7545                           tablat	equ	0xFF5
  7546                           prodh	equ	0xFF4
  7547                           prodl	equ	0xFF3
  7548                           intcon	equ	0xFF2
  7549                           intcon2	equ	0xFF1
  7550                           intcon3	equ	0xFF0
  7551                           indf0	equ	0xFEF
  7552                           postinc0	equ	0xFEE
  7553                           fsr0h	equ	0xFEA
  7554                           fsr0l	equ	0xFE9
  7555                           wreg	equ	0xFE8
  7556                           fsr1h	equ	0xFE2
  7557                           fsr1l	equ	0xFE1
  7558                           indf2	equ	0xFDF
  7559                           postinc2	equ	0xFDE
  7560                           postdec2	equ	0xFDD
  7561                           fsr2h	equ	0xFDA
  7562                           fsr2l	equ	0xFD9
  7563                           status	equ	0xFD8
  7564                           
  7565                           	psect	rparam
  7566  0000                     tosu	equ	0xFFF
  7567                           tosh	equ	0xFFE
  7568                           tosl	equ	0xFFD
  7569                           pclatu	equ	0xFFB
  7570                           pclath	equ	0xFFA
  7571                           tblptru	equ	0xFF8
  7572                           tblptrh	equ	0xFF7
  7573                           tblptrl	equ	0xFF6
  7574                           tablat	equ	0xFF5
  7575                           prodh	equ	0xFF4
  7576                           prodl	equ	0xFF3
  7577                           intcon	equ	0xFF2
  7578                           intcon2	equ	0xFF1
  7579                           intcon3	equ	0xFF0
  7580                           indf0	equ	0xFEF
  7581                           postinc0	equ	0xFEE
  7582                           fsr0h	equ	0xFEA
  7583                           fsr0l	equ	0xFE9
  7584                           wreg	equ	0xFE8
  7585                           fsr1h	equ	0xFE2
  7586                           fsr1l	equ	0xFE1
  7587                           indf2	equ	0xFDF
  7588                           postinc2	equ	0xFDE
  7589                           postdec2	equ	0xFDD
  7590                           fsr2h	equ	0xFDA
  7591                           fsr2l	equ	0xFD9
  7592                           status	equ	0xFD8
  7593                           
  7594                           	psect	temp
  7595  00004C                     btemp:
  7596                           	opt stack 0
  7597  00004C                     	ds	12
  7598  0000                     wtemp0	set	btemp
  7599  0000                     wtemp1	set	btemp+2
  7600  0000                     wtemp2	set	btemp+4
  7601  0000                     wtemp3	set	btemp+6
  7602  0000                     wtemp4	set	btemp+8
  7603  0000                     wtemp5	set	btemp+10
  7604  0000                     wtemp6	set	btemp+1
  7605  0000                     ttemp0	set	btemp
  7606  0000                     ttemp1	set	btemp+3
  7607  0000                     ttemp2	set	btemp+6
  7608  0000                     ttemp3	set	btemp+9
  7609  0000                     ltemp0	set	btemp
  7610  0000                     ltemp1	set	btemp+4
  7611  0000                     ltemp2	set	btemp+8
  7612                           tosu	equ	0xFFF
  7613                           tosh	equ	0xFFE
  7614                           tosl	equ	0xFFD
  7615                           pclatu	equ	0xFFB
  7616                           pclath	equ	0xFFA
  7617                           tblptru	equ	0xFF8
  7618                           tblptrh	equ	0xFF7
  7619                           tblptrl	equ	0xFF6
  7620                           tablat	equ	0xFF5
  7621                           prodh	equ	0xFF4
  7622                           prodl	equ	0xFF3
  7623                           intcon	equ	0xFF2
  7624                           intcon2	equ	0xFF1
  7625                           intcon3	equ	0xFF0
  7626                           indf0	equ	0xFEF
  7627                           postinc0	equ	0xFEE
  7628                           fsr0h	equ	0xFEA
  7629                           fsr0l	equ	0xFE9
  7630                           wreg	equ	0xFE8
  7631                           fsr1h	equ	0xFE2
  7632                           fsr1l	equ	0xFE1
  7633                           indf2	equ	0xFDF
  7634                           postinc2	equ	0xFDE
  7635                           postdec2	equ	0xFDD
  7636                           fsr2h	equ	0xFDA
  7637                           fsr2l	equ	0xFD9
  7638                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         3388
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     61      75
    BANK0           160     16     160
    BANK1           256      0     255
    BANK2           256      0     252
    BANK3           256      0     216
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    S823$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), NULL(NULL[0]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 2
		 -> dataresult(BANK0[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    substring@s	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    substring@sub	PTR unsigned char  size(2) Largest target is 1024
		 -> sub(BIGRAM[1024]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 1024
		 -> dataxstr(BIGRAM[1024]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 4
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), Absolute function(), 

    S1968$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 4
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), AutomaticReplyCallback(), UnconfirmedTransmissionCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow2Callback(), LORAWAN_ReceiveWindow1Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@hdr(COMRAM[2]), 

    S823$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 0

    S823$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7205,)void  size(2) Largest target is 0

    S283$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> Absolute function(), 

    S283$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> UpdateCfList@frequency(COMRAM[4]), ComputeMic@mic(COMRAM[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK2[16]), 
		 -> radioBuffer(BIGRAM[271]), LORAWAN_RxDone@computedMic(COMRAM[4]), Channels(BANK2[224]), loRa.activationParameters.applicationEui(BANK1[8]), 
		 -> loRa.activationParameters.deviceEui(BANK1[8]), macBuffer(BIGRAM[271]), loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), 
		 -> AESEncodeLoRa@useKey(COMRAM[16]), RadioConfiguration(BANK0[54]), AESCmac@x(COMRAM[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK2[16]), Channels(BANK2[224]), macBuffer(BIGRAM[271]), 
		 -> loRa.activationParameters(BANK1[105]), loRa(BANK1[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(COMRAM[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->_SwTimersInterrupt
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _EUSART1_Receive_ISR->_strncat

Critical Paths under _main in BANK0

    _main->_substring
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2755
                                             14 BANK0      2     2      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _substring
 ---------------------------------------------------------------------------------
 (1) _substring                                           14     6      8     556
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     555
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          10    10      0    1751
                                             51 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1295
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0     940
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (8) _TMR_ISR_lora                                         2     2      0     940
                                             49 COMRAM     2     2      0
                  _SwTimersInterrupt
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (9) _TMR_SwapTimer                                        2     0      2     624
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     355
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _SwTimersInterrupt                                   17    13      4     316
                                             32 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (10) _TMR_GetDeltaTime                                   24    20      4      69
                                              8 COMRAM    24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCB4_ISR                                            0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCB4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO2_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO1_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DIO0_ISR_Lora                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0     456
                                              8 COMRAM     3     3      0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
                       _EUSART1_Read
              _EUSART1_RxDataHandler
                            _strncat
 ---------------------------------------------------------------------------------
 (7) _strncat                                              8     2      6     432
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR5_Initialize
   _substring

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_Read *
     _EUSART1_RxDataHandler *
     _strncat *
   _EUSART1_Transmit_ISR *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC *
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     A1E      37       66.5%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D8      11       84.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3D      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3BE      12        0.0%
DATA                 0      0     DDC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 06 17:28:07 2020

                    __end_of_DIO3_ISR_Lora_Init 0E68                        _eusart1TxBufferRemaining 00FB  
                                             _c 006C                                               _n 0072  
            __size_of_IOCB4_SetInterruptHandler 000A                                    _TMR_ISR_lora 09D0  
                    ?_IOCB4_SetInterruptHandler 00E3                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            _DIO2_ISR_Lora_Init 0D6E                                 _timer1ReloadVal 00F3  
                                           _sub 03D8                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                   _INT1_CallBack 0CF0  
                           ?_DIO2_ISR_Lora_Init 0001                              __size_of_IOCB4_ISR 0020  
                                          l2540 0B24                                            l2541 0B48  
                                          l2542 0B46                                            l2825 0946  
                                          l2826 090A                                            l2818 0358  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _TMR1 000FCE  
                                          _TMR5 000F4F                                            _WPUB 000F61  
                        ??_LORAWAN_PlatformInit 00E5                                   _INT2_CallBack 0CD0  
                                 _EUSART1_Write 0B0E                                            _loRa 0100  
                                          _main 033A                                   ?_EUSART1_Read 0001  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 004C                                   __CFG_BORV$190 000000  
             __size_of_INT2_SetInterruptHandler 000A                       ?_INT2_SetInterruptHandler 00E3  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00CC                                 _timer5ReloadVal 01F5  
                                 __CFG_IESO$OFF 000000                      ??_TMR1_SetInterruptHandler 00E5  
                        __size_of_TMR_SwapTimer 0044                                    ___param_bank 000000  
                          ??_DIO2_ISR_Lora_Init 00E5                        __size_of_SystemTimerInit 0006  
                              __end_of_INT1_ISR 0E2E                                __end_of_INT2_ISR 0E26  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0DBA  
                                         l12302 0358                                           l10676 0B12  
                         _eusart1RxStatusBuffer 0046                                           ?_main 0001  
             __end_of_IOCB4_SetInterruptHandler 0DCE                                           u13007 041C  
                                         _T1CON 000FCD                                           u13017 0434  
                                         u13107 050C                                           u13027 044C  
                                         u13037 0464                                           u13047 047C  
                                         u13057 0494                                           u13067 04AC  
                                         u13077 04C4                                           u13087 04DC  
                                         _LATC2 007C5A                                           u13097 04F4  
                                         _LATD3 007C63                                           u12760 0368  
                                         _T5CON 000F4E                                           u12987 03AA  
                                         u12997 0404                                  __CFG_DEBUG$OFF 000000  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TMR5H 000F50                                           _TMR5L 000F4F  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _TXREG 000FAD  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 0B7C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 0D5E                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 0001                                  __CFG_EBTRB$OFF 000000  
                                         _datax 00A1                                           __rcon 0049  
                       __end_of_PIN_MANAGER_IOC 0E1E                  ??_INT1_DefaultInterruptHandler 0001  
                                         _randx 02F8                              __CFG_MCLRE$EXTMCLR 000000  
                        _UpdateJoinSuccessState 000000                                  ?_INT2_CallBack 0001  
                      _INT1_SetInterruptHandler 0DD8                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 0BD8                                           pclath 000FFA  
                                         tablat 000FF5                                           ltemp0 004C  
                                         ltemp1 0050                                           ltemp2 0054  
                                ??_EUSART1_Read 0001                                           ttemp0 004C  
                                         ttemp1 004F                                           ttemp2 0052  
                                         ttemp3 0055                                           status 000FD8  
                                         wtemp0 004C                                           wtemp1 004E  
                                         wtemp2 0050                                           wtemp3 0052  
                                         wtemp4 0054                                           wtemp5 0056  
                                         wtemp6 004D                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncat 09D0      __end_of_EUSART1_DefaultFramingErrorHandler 0E72  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 0E70  
                               _TMR1_WriteTimer 0D2E                                  __CFG_PBADEN$ON 000000  
               ??_IOCB4_DefaultInterruptHandler 0001                                 _TMR5_Initialize 0D10  
                               __initialization 07A8                     __size_of_DIO1_ISR_Lora_Init 0010  
                    __end_of_EUSART1_Initialize 08FE                                    __end_of_main 0540  
                             ?_TMR_GetDeltaTime 0009                               __end_of_IOCB4_ISR 0CD0  
                   ?_INTERRUPT_InterruptManager 0001                              ??_TMR_GetDeltaTime 000D  
                                        ??_main 00F1                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 000E                           ?_EUSART1_Transmit_ISR 0001  
                                 _TMR_SwapTimer 0ACA                  _LORAWAN_ReceiveWindow1Callback 000000  
                                        _ANSELA 000F38                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T5GCON 000F4D                         TMR1_WriteTimer@timerVal 0001  
                _LORAWAN_ReceiveWindow2Callback 000000                                          i2l2171 0A2A  
                                        i2l2251 0066                                          i2l2244 0040  
                                        i2l1525 061E                                          i2l1526 0698  
                                        i2l2246 004C                                          i2l1535 0AD6  
                                        i2l3400 098A                                          i2l2248 0058  
                                        i2l2531 0A84                                          i2l2533 0AC0  
                                __CFG_WDTEN$OFF 000000                                          i2l1592 078E  
                                        i2l1593 06CC                                          i2l2554 0172  
                                        i2l2546 0BA8                                          i2l2547 0BA4  
                                        i2l1595 0728                                          i2l2627 0D40  
                                        i2l1597 078C                                          i2l2559 0C48  
                                        i2l3396 097A                                          i2l3397 0976  
                                        i2l3399 0998                                          i2l8868 0AEA  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TRISC2 007CA2                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                      __end_of_DIO0_ISR_Lora_Init 0D9E  
                                        _STable FE67                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 0E6A           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 0E68                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 00E3                                          _length 006E  
                                        clear_0 0830                                          clear_1 0842  
                                        clear_2 084E                                          clear_3 085A  
                                        clear_4 0866                                          clear_5 0872  
              ??_EUSART1_SetOverrunErrorHandler 00E5                 ?_EUSART1_SetOverrunErrorHandler 00E3  
                   __size_of_DIO5_ISR_Lora_Init 0002            __end_of_INT2_DefaultInterruptHandler 0E6E  
         __size_of_INT2_DefaultInterruptHandler 0002                    _INT2_DefaultInterruptHandler 0E6C  
                               ??_INT1_CallBack 0001                               ??_SystemTimerInit 00E3  
                                ?_TMR_SwapTimer 0009                                    __mediumconst FE66  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_INT2_CallBack 0001  
                               ??_EUSART1_Write 00E3        TMR1_SetInterruptHandler@InterruptHandler 00E3  
     IOCB4_SetInterruptHandler@InterruptHandler 00E3        INT2_SetInterruptHandler@InterruptHandler 00E3  
      INT1_SetInterruptHandler@InterruptHandler 00E3                                ?_PIN_MANAGER_IOC 0001  
                       __end_of_TMR1_WriteTimer 0D4A                                       ??_strncat 0007  
                               _eusart1RxBuffer 00A4                   __size_of_INTERRUPT_Initialize 0004  
                         __end_of_TMR1_CallBack 0C90                                 _eusart1TxBuffer 00A5  
                              ?_TMR1_Initialize 0001                         __end_of_TMR5_Initialize 0D2E  
                             _SYSTEM_Initialize 0C02                                      __accesstop 0060  
                       __end_of__initialization 0878                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                              ?_SYSTEM_Initialize 0001  
                                _maxPayloadSize FF77                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0026                   __end_of_EUSART1_RxDataHandler 0C4E  
                                __pcstackCOMRAM 0001                                      ___inthi_sp 0E62  
                                  __pidataBANK0 0E52                                    __pidataBANK1 0E56  
                                  __pidataBANK2 0E5A                                    __pidataBANK3 0B4C  
                           ??_SYSTEM_Initialize 00E5                                _bitStatusbefore1 0094  
                              _bitStatusbefore2 0092                                _bitStatusbefore3 0090  
                              _bitStatusbefore4 008E                                _bitStatusbefore5 008C  
                              _bitStatusbefore6 008A                                _bitStatusbefore7 0088  
                    __end_of_DIO4_ISR_Lora_Init 0E66                                       ?_TMR1_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                 _spreadingFactor FF8E  
         __end_of_IOCB4_DefaultInterruptHandler 0E6C          __size_of_IOCB4_DefaultInterruptHandler 0002  
                 _IOCB4_DefaultInterruptHandler 0E6A                          _AutomaticReplyCallback 000000  
                   ??_IOCB4_SetInterruptHandler 00E5                            __end_of_EUSART1_Read 0ACA  
                        ??_EUSART1_Transmit_ISR 0001                     __size_of_EXT_INT_Initialize 002A  
                                _datatobesolved 0042                              _DIO3_ISR_Lora_Init 0E66  
                       __size_of_TMR1_ReadTimer 0020                __end_of_INT2_SetInterruptHandler 0DD8  
                   __end_of_EUSART1_Receive_ISR 033A                   ?_INT2_DefaultInterruptHandler 0001  
                     __end_of_SYSTEM_Initialize 0C28                                   _eusart1RxHead 0048  
                                 _eusart1TxHead 00A7                               ??_SPI2_Initialize 00E3  
                           ?_DIO3_ISR_Lora_Init 0001                                   _eusart1RxTail 0047  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                 _eusart1TxTail 00A6               _EUSART1_TxDefaultInterruptHandler 01F9  
               ??_EUSART1_SetRxInterruptHandler 00E5                                 __CFG_PLLCFG$OFF 000000  
                        __end_of_maxPayloadSize FF7F                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                              SwTimersInterrupt@i 0031  
                        __size_of_DIO0_ISR_Lora 0006                                      _dataresult 00E1  
                        __size_of_DIO1_ISR_Lora 0006                                      _bitStatus1 0084  
                                    _bitStatus2 0082                                      _bitStatus3 0080  
                                    _bitStatus4 007E                                      _bitStatus5 007C  
                                    _bitStatus6 007A                                      _bitStatus7 0078  
                                  substring@sub 00E5                 __end_of_EUSART1_SetErrorHandler 0E14  
                            __CFG_CCP2MX$PORTC1 000000                          __size_of_DIO2_ISR_Lora 0006  
                                    ??_TMR1_ISR 0034                              __CFG_CCP3MX$PORTB5 000000  
                          ??_DIO3_ISR_Lora_Init 00E3                               _TMR_ISR_Lora_Init 0D5E  
        __end_of_EUSART1_SetFramingErrorHandler 0E0A         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0E00                                 ??_TMR_SwapTimer 000B  
                            ?_TMR_ISR_Lora_Init 0001                      ??_INT1_SetInterruptHandler 00E5  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                           ??_TMR_ISR_Lora_Init 00E5                               __end_of_bandwidth FF8E  
                              ?_TMR1_WriteTimer 0001                              __size_of_substring 006E  
                         TMR_SwapTimer@timerVal 0009                                ?_TMR5_Initialize 0001  
                     _IOCB4_SetInterruptHandler 0DC4                       _AckRetransmissionCallback 000000  
                 __size_of_LORAWAN_PlatformInit 0022                                  _ticksAccounted 0064  
                       __end_of_spreadingFactor FF95                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                     __end_of_TMR_ISR_Lora_Init 0D6E                     __size_of_DIO2_ISR_Lora_Init 0010  
                                       _devAddr 01FB                                         __pcinit 07A8  
                                       _appSKey 03A8                                         __ramtop 1000  
                      TMR1_ReadTimer@readValLow 0008                                _counterinterrupt 0096  
                                       __ptext0 033A                                         __ptext1 08FE  
                                       __ptext2 0C02                                         __ptext3 0D10  
                                       __ptext4 0BAC                                         __ptext5 0D9E  
                                       __ptext6 0A2C                                         __ptext7 0DAC  
                                       __ptext8 0C4E                                         __ptext9 0D5E  
                                 _DIO0_ISR_Lora 0E40                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _IOCB4_ISR 0CB0                       TMR1_ReadTimer@readValHigh 0007  
                                     _T1CONbits 000FCD                                         _counter 009F  
                         _OSCILLATOR_Initialize 0DAC                                         _readurt 03A0  
                  __end_of_macEndDevCmdReplyLen FF9C               __size_of_TMR1_SetInterruptHandler 000A  
                                 _DIO1_ISR_Lora 0E3A                              _EUSART1_Initialize 087E  
                      ??_PIN_MANAGER_Initialize 00E5                       ?_TMR1_SetInterruptHandler 00E3  
                                       _nwkSKey 03B8                                       _T5CONbits 000F4E  
                 ??_EUSART1_DefaultErrorHandler 0001                       __size_of_TMR_GetDeltaTime 016A  
                                 _DIO2_ISR_Lora 0E34                      __size_of_SYSTEM_Initialize 0026  
                                       _strncat 096C                            end_of_initialization 0878  
                      _INT2_SetInterruptHandler 0DCE                             ?_EUSART1_Initialize 0001  
                         _RADIO_WatchdogTimeout 000000                  ??_INT2_DefaultInterruptHandler 0001  
                                    _modulation FF67                       _LORAWAN_LinkCheckCallback 000000  
                   _EUSART1_OverrunErrorHandler 02F2                                       i2u1020_45 01EC  
                                     i2u1021_45 020A                                       i2u1022_45 0228  
                                     i2u1023_45 02B6                                       i2u1015_48 0102  
                                     i2u1015_49 0116                                       i2u1024_45 02D2  
                                     i2u1017_48 0130                                       i2u1017_49 0144  
                                     i2u1019_48 015E                                       i2u1265_48 0070  
                                     i2u1265_49 0084                                       i2u1268_48 008E  
                                     i2u1268_49 00A2                      __end_of_DIO1_ISR_Lora_Init 0D8E  
                                    _ticksAdded 0068           __end_of_EUSART1_SetRxInterruptHandler 0DF6  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 0DEC  
                                       postdec2 000FDD                                 _SystemTimerInit 0E2E  
                                       postinc0 000FEE                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 004A                            ??_EUSART1_Initialize 00E5  
                            _DIO0_ISR_Lora_Init 0D8E                               __end_of_substring 096C  
                                ?_DIO0_ISR_Lora 0001                           _INT1_InterruptHandler 00F9  
                                     _PORTBbits 000F81                    SwTimersInterrupt@timeElapsed 0029  
                                    ?_IOCB4_ISR 0001                                  ?_DIO1_ISR_Lora 0001  
                                _TMR1_ReadTimer 0C90                                      _txPower433 FF9C  
                                    _txPower868 FFA2                             ?_DIO0_ISR_Lora_Init 0001  
                                ?_DIO2_ISR_Lora 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 00E3                                  _localDioStatus 004B  
                                  _EUSART1_Read 0A80                               __size_of_INT1_ISR 0008  
                             __size_of_INT2_ISR 0008            __size_of_EUSART1_DefaultErrorHandler 0006  
                          ??_DIO0_ISR_Lora_Init 00E5                                  __end_of_STable FF67  
                    __size_of_TMR_ISR_Lora_Init 0010                    __end_of_INTERRUPT_Initialize 0E62  
                    __end_of_DIO5_ISR_Lora_Init 0E64                                   ?_TMR_ISR_lora 0001  
                             __size_of_TMR1_ISR 0014                          ?_OSCILLATOR_Initialize 0001  
                        __end_of_TMR1_ReadTimer 0CB0                                 _SPI2_Initialize 0D9E  
                           start_initialization 07A8                              _DIO4_ISR_Lora_Init 0E64  
               __size_of_PIN_MANAGER_Initialize 0054                           __end_of_INT1_CallBack 0D10  
 EUSART1_SetRxInterruptHandler@interruptHandler 00E3   EUSART1_SetTxInterruptHandler@interruptHandler 00E3  
                         __end_of_INT2_CallBack 0CF0                           __end_of_EUSART1_Write 0B4C  
                           ?_DIO4_ISR_Lora_Init 0001                         __end_of_SystemTimerInit 0E34  
                           TMR_SwapTimer@oldVal 009A                        __size_of_PIN_MANAGER_IOC 000A  
                           TMR_SwapTimer@retVal 0098                        __size_of_TMR1_Initialize 002C  
                          _macEndDevCmdReplyLen FF95                           _EUSART1_RxDataHandler 0C28  
                ?_EUSART1_SetRxInterruptHandler 00E3                                  ??_TMR_ISR_lora 0032  
                               ??_DIO0_ISR_Lora 0001                                     __pdataBANK0 00FC  
                                   __pdataBANK1 01FB                                     __pdataBANK2 02F8  
                                   __pdataBANK3 03A8          SwTimersInterrupt@ticksToNextTimerEvent 002D  
                          ??_DIO4_ISR_Lora_Init 00E3                      __end_of_EXT_INT_Initialize 0C02  
                            _RADIO_RxFSKTimeout 000000                          __size_of_TMR1_CallBack 0020  
                               ??_DIO1_ISR_Lora 0001                          TMR_GetDeltaTime@retVal 0060  
                               ?_TMR1_ReadTimer 0001                                  _eusart1RxCount 00A3  
                                   ??_IOCB4_ISR 0001                          TMR_GetDeltaTime@tmrVal 009C  
                                   __pbssBIGRAM 03D8                                 ??_DIO2_ISR_Lora 0001  
                                   __pbssCOMRAM 003E                      __end_of_DefaultChannels433 FFD2  
                    __end_of_DefaultChannels868 FFFC               _EUSART1_RxDefaultInterruptHandler 02F6  
                 __size_of_EUSART1_Transmit_ISR 0030                                   __pcstackBANK0 00E3  
                              _TMR_GetDeltaTime 0540                 _UnconfirmedTransmissionCallback 000000  
                                     _aesBuffer 02E0                 ??_EUSART1_SetTxInterruptHandler 00E5  
              ??_EUSART1_SetFramingErrorHandler 00E5                 ?_EUSART1_SetFramingErrorHandler 00E3  
                  __size_of_EUSART1_Receive_ISR 0266                           _INT2_InterruptHandler 00F7  
                                     _bandwidth FF87                                       __pnvBANK0 00F3  
                                     __pnvBANK1 01F5                                       __pnvBANK2 02F0  
                                     _character 009E                          _PIN_MANAGER_Initialize 0A2C  
                                     _bitStatus 0086                                       _macBuffer 0CE7  
                                     _dioStatus 00AA                               _SwTimersInterrupt 06AA  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 0DC4  
                                 __pmediumconst FE66                                     _dataxsolved 00A0  
                       __end_of_SPI2_Initialize 0DAC                              ?_SwTimersInterrupt 0021  
                   __size_of_DIO3_ISR_Lora_Init 0002                    ??_INTERRUPT_InterruptManager 0034  
                              __CFG_PRICLKEN$ON 000000                    __end_of_LORAWAN_PlatformInit 0C70  
                    ??_INT2_SetInterruptHandler 00E5                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0E4C     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 0E46                             ??_SwTimersInterrupt 0025  
                             _DutyCycleCallback 000000                            _EUSART1_ErrorHandler 02F0  
                         __end_of_TMR_SwapTimer 0B0E                         _EUSART1_SetErrorHandler 0E0A  
                                   strncat@from 0003                                     strncat@size 0005  
                                      ?_strncat 0001                            _INTERRUPT_Initialize 0E5E  
                                 _TMR1_CallBack 0C70                                        _INT1_ISR 0E26  
                                      _INT2_ISR 0E1E                                        _IOCBbits 000F62  
       EUSART1_SetErrorHandler@interruptHandler 00E3               __size_of_INT1_SetInterruptHandler 000A  
                          __end_of_rxWindowSize FF87                       ?_INT1_SetInterruptHandler 00E3  
                              ?_SystemTimerInit 0001                                       _reloadVal 0044  
                                      _PIE1bits 000F9D                       __end_of_SwTimersInterrupt 07A8  
                      __size_of_TMR1_WriteTimer 001C             __size_of_INTERRUPT_InterruptManager 00C4  
                    __end_of_DIO2_ISR_Lora_Init 0D7E                                        _PIR1bits 000F9E  
                                      _PIR5bits 000F7E                                        i2u901_40 09BA  
                                      i2u904_48 0C7E                          ?_EUSART1_RxDataHandler 0001  
                                      i2u892_48 0CFE                        __size_of_TMR5_Initialize 001E  
                                      i2u894_48 0CDE                                        _RCONbits 000FD0  
                                      i2u896_48 0CBE                                       _rxPayload 003E  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _TMR1_ISR 0D4A                                        _SSP2STAT 000F6D  
                             ??_PIN_MANAGER_IOC 0001                               ??_TMR1_Initialize 00E5  
                            _DIO1_ISR_Lora_Init 0D7E                                       _substring 08FE  
                                      _Channels 0200                             ?_DIO1_ISR_Lora_Init 0001  
                                   _INTCON2bits 000FF1                                     _INTCON3bits 000FF0  
                                     copy_data0 07BC                                       copy_data1 07DC  
                                     copy_data2 07FC                                       copy_data3 081C  
                         ?_INTERRUPT_Initialize 0001                                  ?_TMR1_CallBack 0001  
                          __end_of_TMR_ISR_lora 0A2C                           EUSART1_Read@readValue 0001  
         __end_of_EUSART1_SetTxInterruptHandler 0DEC          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 0DE2                                        __Hrparam 0000  
                                      __Lrparam 0000                            ??_DIO1_ISR_Lora_Init 00E5  
                            __CFG_BOREN$SBORDIS 000000                           TMR1_ReadTimer@readVal 0005  
                     _ticksToScheduledInterrupt 00FC                               __CFG_P2BMX$PORTD2 000000  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 00E3  
                   __size_of_EUSART1_Initialize 0080                        _TMR1_SetInterruptHandler 0DBA  
                        _IOCB4_InterruptHandler 00F5                                     _radioBuffer 0BD8  
                         _TMR1_InterruptHandler 01F7                       ??_EUSART1_SetErrorHandler 00E5  
           __end_of_EUSART1_DefaultErrorHandler 0E52                     _EUSART1_DefaultErrorHandler 0E4C  
                                _rxWindowOffset FF6F                                      ?_substring 00E3  
                                    substring@c 00EF                                      substring@l 00E9  
                                    substring@p 00E7                                      substring@s 00E3  
                                      _dataxstr 07D8                                 _allocatedTimers 004A  
                ?_IOCB4_DefaultInterruptHandler 0001                              _DIO5_ISR_Lora_Init 0E62  
                                      __ptext10 0DBA                                        __ptext11 0E2E  
                                      __ptext20 0BD8                                        __ptext12 0E62  
                                      __ptext21 0DCE                                        __ptext13 0E64  
                                    _T1GCONbits 000FCC                                        __ptext22 0DD8  
                                      __ptext14 0E66                                        __ptext31 0D4A  
                                      __ptext23 087E                                        __ptext15 0D6E  
                                      __ptext40 0E14                                        __ptext32 0C70  
                                      __ptext24 0DE2                                        __ptext16 0DC4  
                                      __ptext41 0CB0                                        __ptext33 0E68  
                                      __ptext25 0DEC                                        __ptext17 0D7E  
                                      __ptext50 0E40                                        __ptext42 0E34  
                                      __ptext34 09D0                                        __ptext26 0DF6  
                                      __ptext18 0D8E                                        __ptext51 0E6E  
                                      __ptext43 0E6A                                        __ptext35 0ACA  
                                      __ptext27 0E00                                        __ptext19 0E5E  
                                      __ptext60 0000                                        __ptext52 0B7C  
                                      __ptext44 0E1E                                        __ptext36 0D2E  
                                      __ptext28 0E0A                                        __ptext53 00D4  
                                      __ptext45 0CD0                                        __ptext37 06AA  
                                      __ptext29 0B0E                                        __ptext54 096C  
                                      __ptext46 0E3A                                        __ptext38 0540  
                                      __ptext55 0A80                                        __ptext47 0E6C  
                                      __ptext39 0C90                                        __ptext56 0E46  
                                      __ptext48 0E26                                        __ptext57 0E70  
                                      __ptext49 0CF0                                        __ptext58 0E4C  
                                      __ptext59 0C28                                    _SSP2CON1bits 000F6C  
                           GenerateSubkey@F7103 03C8                                __size_of_strncat 0064  
                                      _countera 0074                                        _counterx 0076  
                           ?_DIO5_ISR_Lora_Init 0001                                   __size_of_main 0206  
                                    _T5GCONbits 000F4D                            _LORAWAN_PlatformInit 0C4E  
                               _FskSyncWordBuff FFFC                                   _timerOverflow 00A9  
                    __size_of_SwTimersInterrupt 00FE                     __size_of_DIO0_ISR_Lora_Init 0010  
EUSART1_SetOverrunErrorHandler@interruptHandler 00E3                        __end_of_TMR_GetDeltaTime 06AA  
                                      _swTimers 0300                                ??_TMR1_ReadTimer 0003  
                                      _position 0070              __end_of_INTERRUPT_InterruptManager 00CC  
                    _INTERRUPT_InterruptManager 0008                               ??_TMR1_WriteTimer 0003  
                   _EUSART1_FramingErrorHandler 02F4                             _EUSART1_Receive_ISR 00D4  
                                  _SSP2STATbits 000F6D                            ??_DIO5_ISR_Lora_Init 00E3  
          __end_of_INT1_DefaultInterruptHandler 0E70           __size_of_INT1_DefaultInterruptHandler 0002  
                  _INT1_DefaultInterruptHandler 0E6E                          __end_of_rxWindowOffset FF77  
                             ??_TMR5_Initialize 00E3                              __end_of_modulation FF6F  
                                 __roundCounter 00A8                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 00E3                                 ??_TMR1_CallBack 0034  
                            _EXT_INT_Initialize 0BD8                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                           ?_LORAWAN_PlatformInit 0001  
                       ?_PIN_MANAGER_Initialize 0001                              _DefaultChannels433 FFA8  
                            _DefaultChannels868 FFD2                             ?_EXT_INT_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 0E00         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0DF6                                      _RCSTA1bits 000FAB  
                                     strncat@cp 0007                                       strncat@to 0001  
                  __end_of_EUSART1_Transmit_ISR 0BAC                              __end_of_txPower433 FFA2  
                            __end_of_txPower868 FFA8                          __size_of_INT1_CallBack 0020  
EUSART1_SetFramingErrorHandler@interruptHandler 00E3                  ?_EUSART1_SetTxInterruptHandler 00E3  
                        __size_of_INT2_CallBack 0020                     __size_of_DIO4_ISR_Lora_Init 0002  
                        __size_of_EUSART1_Write 003E                              _eusart1RxLastError 00A2  
                         __end_of_DIO0_ISR_Lora 0E46                            ??_EXT_INT_Initialize 00E5  
                                  _rxWindowSize FF7F                   ?_INT1_DefaultInterruptHandler 0001  
                         __end_of_DIO1_ISR_Lora 0E40                                     ??_substring 00EB  
              __end_of_INT1_SetInterruptHandler 0DE2                           __size_of_TMR_ISR_lora 005C  
                             __CFG_T3CMX$PORTC0 000000                           __end_of_DIO2_ISR_Lora 0E3A  
                       __end_of_FskSyncWordBuff FFFF                           ??_EUSART1_Receive_ISR 0009  
                __end_of_PIN_MANAGER_Initialize 0A80                               __CFG_FOSC$INTIO67 000000  
                               _PIN_MANAGER_IOC 0E14                         ??_EUSART1_RxDataHandler 0001  
                               _TMR1_Initialize 0BAC                              _RadioConfiguration 00AB  
