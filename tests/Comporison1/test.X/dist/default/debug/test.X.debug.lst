

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 21 10:10:48 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   148                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   149  0000                     
   150                           ; Version 1.45
   151                           ; Generated 16/11/2017 GMT
   152                           ; 
   153                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18LF46K22 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     
   185 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   186  0000                     
   187 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   188  0000                     
   189 ;; Function _DutyCycleCallback is unused but had its address taken
   190  0000                     
   191 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   192  0000                     
   193 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   194  0000                     
   195 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   196  0000                     
   197 ;; Function _AckRetransmissionCallback is unused but had its address taken
   198  0000                     
   199 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   200  0000                     
   201 ;; Function _AutomaticReplyCallback is unused but had its address taken
   202  0000                     
   203 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   204  0000                     
   205 ;; Function _RxData is unused but had its address taken
   206  0000                     
   207 ;; Function _RxJoinResponse is unused but had its address taken
   208  0000                     
   209                           	psect	idataCOMRAM
   210  00386A                     __pidataCOMRAM:
   211                           	opt stack 0
   212                           
   213                           ;initializer for _randx
   214  00386A  0001               	dw	1
   215  00386C  0000               	dw	0
   216                           
   217                           	psect	idataBANK0
   218  00386E                     __pidataBANK0:
   219                           	opt stack 0
   220                           
   221                           ;initializer for _ticksToScheduledInterrupt
   222  00386E  FFFF               	dw	65535
   223  003870  FFFF               	dw	65535
   224                           
   225                           	psect	idataBANK1
   226  00339C                     __pidataBANK1:
   227                           	opt stack 0
   228                           
   229                           ;initializer for GenerateSubkey@F7103
   230  00339C  00                 	db	0
   231  00339D  00                 	db	0
   232  00339E  00                 	db	0
   233  00339F  00                 	db	0
   234  0033A0  00                 	db	0
   235  0033A1  00                 	db	0
   236  0033A2  00                 	db	0
   237  0033A3  00                 	db	0
   238  0033A4  00                 	db	0
   239  0033A5  00                 	db	0
   240  0033A6  00                 	db	0
   241  0033A7  00                 	db	0
   242  0033A8  00                 	db	0
   243  0033A9  00                 	db	0
   244  0033AA  00                 	db	0
   245  0033AB  87                 	db	135
   246                           
   247                           ;initializer for _devAddr
   248  0033AC  5E47               	dw	24135
   249  0033AE  3DEF               	dw	15855
   250                           
   251                           ;initializer for _appSKey
   252  0033B0  96                 	db	150
   253  0033B1  23                 	db	35
   254  0033B2  5A                 	db	90
   255  0033B3  1F                 	db	31
   256  0033B4  9A                 	db	154
   257  0033B5  E1                 	db	225
   258  0033B6  60                 	db	96
   259  0033B7  36                 	db	54
   260  0033B8  81                 	db	129
   261  0033B9  C4                 	db	196
   262  0033BA  E4                 	db	228
   263  0033BB  B5                 	db	181
   264  0033BC  54                 	db	84
   265  0033BD  C3                 	db	195
   266  0033BE  CA                 	db	202
   267  0033BF  B5                 	db	181
   268                           
   269                           ;initializer for _nwkSKey
   270  0033C0  CB                 	db	203
   271  0033C1  1E                 	db	30
   272  0033C2  88                 	db	136
   273  0033C3  5D                 	db	93
   274  0033C4  5D                 	db	93
   275  0033C5  F1                 	db	241
   276  0033C6  12                 	db	18
   277  0033C7  D5                 	db	213
   278  0033C8  08                 	db	8
   279  0033C9  CC                 	db	204
   280  0033CA  B9                 	db	185
   281  0033CB  D1                 	db	209
   282  0033CC  D4                 	db	212
   283  0033CD  4B                 	db	75
   284  0033CE  1E                 	db	30
   285  0033CF  DF                 	db	223
   286                           
   287                           	psect	mediumconst
   288  00FE66                     __pmediumconst:
   289                           	opt stack 0
   290  00FE66  00                 	db	0
   291  00FE67                     _STable:
   292                           	opt stack 0
   293  00FE67  63                 	db	99
   294  00FE68  7C                 	db	124
   295  00FE69  77                 	db	119
   296  00FE6A  7B                 	db	123
   297  00FE6B  F2                 	db	242
   298  00FE6C  6B                 	db	107
   299  00FE6D  6F                 	db	111
   300  00FE6E  C5                 	db	197
   301  00FE6F  30                 	db	48
   302  00FE70  01                 	db	1
   303  00FE71  67                 	db	103
   304  00FE72  2B                 	db	43
   305  00FE73  FE                 	db	254
   306  00FE74  D7                 	db	215
   307  00FE75  AB                 	db	171
   308  00FE76  76                 	db	118
   309  00FE77  CA                 	db	202
   310  00FE78  82                 	db	130
   311  00FE79  C9                 	db	201
   312  00FE7A  7D                 	db	125
   313  00FE7B  FA                 	db	250
   314  00FE7C  59                 	db	89
   315  00FE7D  47                 	db	71
   316  00FE7E  F0                 	db	240
   317  00FE7F  AD                 	db	173
   318  00FE80  D4                 	db	212
   319  00FE81  A2                 	db	162
   320  00FE82  AF                 	db	175
   321  00FE83  9C                 	db	156
   322  00FE84  A4                 	db	164
   323  00FE85  72                 	db	114
   324  00FE86  C0                 	db	192
   325  00FE87  B7                 	db	183
   326  00FE88  FD                 	db	253
   327  00FE89  93                 	db	147
   328  00FE8A  26                 	db	38
   329  00FE8B  36                 	db	54
   330  00FE8C  3F                 	db	63
   331  00FE8D  F7                 	db	247
   332  00FE8E  CC                 	db	204
   333  00FE8F  34                 	db	52
   334  00FE90  A5                 	db	165
   335  00FE91  E5                 	db	229
   336  00FE92  F1                 	db	241
   337  00FE93  71                 	db	113
   338  00FE94  D8                 	db	216
   339  00FE95  31                 	db	49
   340  00FE96  15                 	db	21
   341  00FE97  04                 	db	4
   342  00FE98  C7                 	db	199
   343  00FE99  23                 	db	35
   344  00FE9A  C3                 	db	195
   345  00FE9B  18                 	db	24
   346  00FE9C  96                 	db	150
   347  00FE9D  05                 	db	5
   348  00FE9E  9A                 	db	154
   349  00FE9F  07                 	db	7
   350  00FEA0  12                 	db	18
   351  00FEA1  80                 	db	128
   352  00FEA2  E2                 	db	226
   353  00FEA3  EB                 	db	235
   354  00FEA4  27                 	db	39
   355  00FEA5  B2                 	db	178
   356  00FEA6  75                 	db	117
   357  00FEA7  09                 	db	9
   358  00FEA8  83                 	db	131
   359  00FEA9  2C                 	db	44
   360  00FEAA  1A                 	db	26
   361  00FEAB  1B                 	db	27
   362  00FEAC  6E                 	db	110
   363  00FEAD  5A                 	db	90
   364  00FEAE  A0                 	db	160
   365  00FEAF  52                 	db	82
   366  00FEB0  3B                 	db	59
   367  00FEB1  D6                 	db	214
   368  00FEB2  B3                 	db	179
   369  00FEB3  29                 	db	41
   370  00FEB4  E3                 	db	227
   371  00FEB5  2F                 	db	47
   372  00FEB6  84                 	db	132
   373  00FEB7  53                 	db	83
   374  00FEB8  D1                 	db	209
   375  00FEB9  00                 	db	0
   376  00FEBA  ED                 	db	237
   377  00FEBB  20                 	db	32
   378  00FEBC  FC                 	db	252
   379  00FEBD  B1                 	db	177
   380  00FEBE  5B                 	db	91
   381  00FEBF  6A                 	db	106
   382  00FEC0  CB                 	db	203
   383  00FEC1  BE                 	db	190
   384  00FEC2  39                 	db	57
   385  00FEC3  4A                 	db	74
   386  00FEC4  4C                 	db	76
   387  00FEC5  58                 	db	88
   388  00FEC6  CF                 	db	207
   389  00FEC7  D0                 	db	208
   390  00FEC8  EF                 	db	239
   391  00FEC9  AA                 	db	170
   392  00FECA  FB                 	db	251
   393  00FECB  43                 	db	67
   394  00FECC  4D                 	db	77
   395  00FECD  33                 	db	51
   396  00FECE  85                 	db	133
   397  00FECF  45                 	db	69
   398  00FED0  F9                 	db	249
   399  00FED1  02                 	db	2
   400  00FED2  7F                 	db	127
   401  00FED3  50                 	db	80
   402  00FED4  3C                 	db	60
   403  00FED5  9F                 	db	159
   404  00FED6  A8                 	db	168
   405  00FED7  51                 	db	81
   406  00FED8  A3                 	db	163
   407  00FED9  40                 	db	64
   408  00FEDA  8F                 	db	143
   409  00FEDB  92                 	db	146
   410  00FEDC  9D                 	db	157
   411  00FEDD  38                 	db	56
   412  00FEDE  F5                 	db	245
   413  00FEDF  BC                 	db	188
   414  00FEE0  B6                 	db	182
   415  00FEE1  DA                 	db	218
   416  00FEE2  21                 	db	33
   417  00FEE3  10                 	db	16
   418  00FEE4  FF                 	db	255
   419  00FEE5  F3                 	db	243
   420  00FEE6  D2                 	db	210
   421  00FEE7  CD                 	db	205
   422  00FEE8  0C                 	db	12
   423  00FEE9  13                 	db	19
   424  00FEEA  EC                 	db	236
   425  00FEEB  5F                 	db	95
   426  00FEEC  97                 	db	151
   427  00FEED  44                 	db	68
   428  00FEEE  17                 	db	23
   429  00FEEF  C4                 	db	196
   430  00FEF0  A7                 	db	167
   431  00FEF1  7E                 	db	126
   432  00FEF2  3D                 	db	61
   433  00FEF3  64                 	db	100
   434  00FEF4  5D                 	db	93
   435  00FEF5  19                 	db	25
   436  00FEF6  73                 	db	115
   437  00FEF7  60                 	db	96
   438  00FEF8  81                 	db	129
   439  00FEF9  4F                 	db	79
   440  00FEFA  DC                 	db	220
   441  00FEFB  22                 	db	34
   442  00FEFC  2A                 	db	42
   443  00FEFD  90                 	db	144
   444  00FEFE  88                 	db	136
   445  00FEFF  46                 	db	70
   446  00FF00  EE                 	db	238
   447  00FF01  B8                 	db	184
   448  00FF02  14                 	db	20
   449  00FF03  DE                 	db	222
   450  00FF04  5E                 	db	94
   451  00FF05  0B                 	db	11
   452  00FF06  DB                 	db	219
   453  00FF07  E0                 	db	224
   454  00FF08  32                 	db	50
   455  00FF09  3A                 	db	58
   456  00FF0A  0A                 	db	10
   457  00FF0B  49                 	db	73
   458  00FF0C  06                 	db	6
   459  00FF0D  24                 	db	36
   460  00FF0E  5C                 	db	92
   461  00FF0F  C2                 	db	194
   462  00FF10  D3                 	db	211
   463  00FF11  AC                 	db	172
   464  00FF12  62                 	db	98
   465  00FF13  91                 	db	145
   466  00FF14  95                 	db	149
   467  00FF15  E4                 	db	228
   468  00FF16  79                 	db	121
   469  00FF17  E7                 	db	231
   470  00FF18  C8                 	db	200
   471  00FF19  37                 	db	55
   472  00FF1A  6D                 	db	109
   473  00FF1B  8D                 	db	141
   474  00FF1C  D5                 	db	213
   475  00FF1D  4E                 	db	78
   476  00FF1E  A9                 	db	169
   477  00FF1F  6C                 	db	108
   478  00FF20  56                 	db	86
   479  00FF21  F4                 	db	244
   480  00FF22  EA                 	db	234
   481  00FF23  65                 	db	101
   482  00FF24  7A                 	db	122
   483  00FF25  AE                 	db	174
   484  00FF26  08                 	db	8
   485  00FF27  BA                 	db	186
   486  00FF28  78                 	db	120
   487  00FF29  25                 	db	37
   488  00FF2A  2E                 	db	46
   489  00FF2B  1C                 	db	28
   490  00FF2C  A6                 	db	166
   491  00FF2D  B4                 	db	180
   492  00FF2E  C6                 	db	198
   493  00FF2F  E8                 	db	232
   494  00FF30  DD                 	db	221
   495  00FF31  74                 	db	116
   496  00FF32  1F                 	db	31
   497  00FF33  4B                 	db	75
   498  00FF34  BD                 	db	189
   499  00FF35  8B                 	db	139
   500  00FF36  8A                 	db	138
   501  00FF37  70                 	db	112
   502  00FF38  3E                 	db	62
   503  00FF39  B5                 	db	181
   504  00FF3A  66                 	db	102
   505  00FF3B  48                 	db	72
   506  00FF3C  03                 	db	3
   507  00FF3D  F6                 	db	246
   508  00FF3E  0E                 	db	14
   509  00FF3F  61                 	db	97
   510  00FF40  35                 	db	53
   511  00FF41  57                 	db	87
   512  00FF42  B9                 	db	185
   513  00FF43  86                 	db	134
   514  00FF44  C1                 	db	193
   515  00FF45  1D                 	db	29
   516  00FF46  9E                 	db	158
   517  00FF47  E1                 	db	225
   518  00FF48  F8                 	db	248
   519  00FF49  98                 	db	152
   520  00FF4A  11                 	db	17
   521  00FF4B  69                 	db	105
   522  00FF4C  D9                 	db	217
   523  00FF4D  8E                 	db	142
   524  00FF4E  94                 	db	148
   525  00FF4F  9B                 	db	155
   526  00FF50  1E                 	db	30
   527  00FF51  87                 	db	135
   528  00FF52  E9                 	db	233
   529  00FF53  CE                 	db	206
   530  00FF54  55                 	db	85
   531  00FF55  28                 	db	40
   532  00FF56  DF                 	db	223
   533  00FF57  8C                 	db	140
   534  00FF58  A1                 	db	161
   535  00FF59  89                 	db	137
   536  00FF5A  0D                 	db	13
   537  00FF5B  BF                 	db	191
   538  00FF5C  E6                 	db	230
   539  00FF5D  42                 	db	66
   540  00FF5E  68                 	db	104
   541  00FF5F  41                 	db	65
   542  00FF60  99                 	db	153
   543  00FF61  2D                 	db	45
   544  00FF62  0F                 	db	15
   545  00FF63  B0                 	db	176
   546  00FF64  54                 	db	84
   547  00FF65  BB                 	db	187
   548  00FF66  16                 	db	22
   549  00FF67                     __end_of_STable:
   550                           	opt stack 0
   551  00FF67                     _modulation:
   552                           	opt stack 0
   553  00FF67  01                 	db	1
   554  00FF68  01                 	db	1
   555  00FF69  01                 	db	1
   556  00FF6A  01                 	db	1
   557  00FF6B  01                 	db	1
   558  00FF6C  01                 	db	1
   559  00FF6D  01                 	db	1
   560  00FF6E  00                 	db	0
   561  00FF6F                     __end_of_modulation:
   562                           	opt stack 0
   563  00FF6F                     _rxWindowOffset:
   564                           	opt stack 0
   565  00FF6F  DF                 	db	223
   566  00FF70  CE                 	db	206
   567  00FF71  C6                 	db	198
   568  00FF72  C2                 	db	194
   569  00FF73  BE                 	db	190
   570  00FF74  BC                 	db	188
   571  00FF75  F1                 	db	241
   572  00FF76  FE                 	db	254
   573  00FF77                     __end_of_rxWindowOffset:
   574                           	opt stack 0
   575  00FF77                     _maxPayloadSize:
   576                           	opt stack 0
   577  00FF77  33                 	db	51
   578  00FF78  33                 	db	51
   579  00FF79  33                 	db	51
   580  00FF7A  73                 	db	115
   581  00FF7B  F2                 	db	242
   582  00FF7C  F2                 	db	242
   583  00FF7D  F2                 	db	242
   584  00FF7E  38                 	db	56
   585  00FF7F                     __end_of_maxPayloadSize:
   586                           	opt stack 0
   587  00FF7F                     _rxWindowSize:
   588                           	opt stack 0
   589  00FF7F  08                 	db	8
   590  00FF80  0A                 	db	10
   591  00FF81  0E                 	db	14
   592  00FF82  1A                 	db	26
   593  00FF83  31                 	db	49
   594  00FF84  58                 	db	88
   595  00FF85  3C                 	db	60
   596  00FF86  08                 	db	8
   597  00FF87                     __end_of_rxWindowSize:
   598                           	opt stack 0
   599  00FF87                     _macEndDevCmdReplyLen:
   600                           	opt stack 0
   601  00FF87  01                 	db	1
   602  00FF88  02                 	db	2
   603  00FF89  01                 	db	1
   604  00FF8A  02                 	db	2
   605  00FF8B  03                 	db	3
   606  00FF8C  02                 	db	2
   607  00FF8D  01                 	db	1
   608  00FF8E                     __end_of_macEndDevCmdReplyLen:
   609                           	opt stack 0
   610  00FF8E                     _bandwidth:
   611                           	opt stack 0
   612  00FF8E  07                 	db	7
   613  00FF8F  07                 	db	7
   614  00FF90  07                 	db	7
   615  00FF91  07                 	db	7
   616  00FF92  07                 	db	7
   617  00FF93  07                 	db	7
   618  00FF94  08                 	db	8
   619  00FF95                     __end_of_bandwidth:
   620                           	opt stack 0
   621  00FF95                     _spreadingFactor:
   622                           	opt stack 0
   623  00FF95  0C                 	db	12
   624  00FF96  0B                 	db	11
   625  00FF97  0A                 	db	10
   626  00FF98  09                 	db	9
   627  00FF99  08                 	db	8
   628  00FF9A  07                 	db	7
   629  00FF9B  07                 	db	7
   630  00FF9C                     __end_of_spreadingFactor:
   631                           	opt stack 0
   632  00FF9C  0A                 	db	10
   633  00FF9D  07                 	db	7
   634  00FF9E  04                 	db	4
   635  00FF9F  01                 	db	1
   636  00FFA0  FE                 	db	254
   637  00FFA1  FB                 	db	251
   638  00FFA2                     __end_of_txPower433:
   639                           	opt stack 0
   640  00FFA2                     _txPower868:
   641                           	opt stack 0
   642  00FFA2  14                 	db	20
   643  00FFA3  0E                 	db	14
   644  00FFA4  0B                 	db	11
   645  00FFA5  08                 	db	8
   646  00FFA6  05                 	db	5
   647  00FFA7  02                 	db	2
   648  00FFA8                     __end_of_txPower868:
   649                           	opt stack 0
   650  00FFA8                     _DefaultChannels433:
   651                           	opt stack 0
   652  00FFA8  B9D8               	dw	47576
   653  00FFAA  19D1               	dw	6609
   654  00FFAC  01                 	db	1
   655  00FFAD  50                 	db	80
   656  00FFAE  012E               	dw	302
   657  00FFB0  0000               	dw	0
   658  00FFB2  0000               	dw	0
   659  00FFB4  01                 	db	1
   660  00FFB5  FF                 	db	255
   661  00FFB6  C718               	dw	50968
   662  00FFB8  19D4               	dw	6612
   663  00FFBA  01                 	db	1
   664  00FFBB  50                 	db	80
   665  00FFBC  012E               	dw	302
   666  00FFBE  0000               	dw	0
   667  00FFC0  0000               	dw	0
   668  00FFC2  01                 	db	1
   669  00FFC3  FF                 	db	255
   670  00FFC4  D458               	dw	54360
   671  00FFC6  19D7               	dw	6615
   672  00FFC8  01                 	db	1
   673  00FFC9  50                 	db	80
   674  00FFCA  012E               	dw	302
   675  00FFCC  0000               	dw	0
   676  00FFCE  0000               	dw	0
   677  00FFD0  01                 	db	1
   678  00FFD1  FF                 	db	255
   679  00FFD2                     __end_of_DefaultChannels433:
   680                           	opt stack 0
   681  00FFD2                     _DefaultChannels868:
   682                           	opt stack 0
   683  00FFD2  27A0               	dw	10144
   684  00FFD4  33BE               	dw	13246
   685  00FFD6  01                 	db	1
   686  00FFD7  50                 	db	80
   687  00FFD8  012E               	dw	302
   688  00FFDA  0000               	dw	0
   689  00FFDC  0000               	dw	0
   690  00FFDE  01                 	db	1
   691  00FFDF  FF                 	db	255
   692  00FFE0  34E0               	dw	13536
   693  00FFE2  33C1               	dw	13249
   694  00FFE4  01                 	db	1
   695  00FFE5  50                 	db	80
   696  00FFE6  012E               	dw	302
   697  00FFE8  0000               	dw	0
   698  00FFEA  0000               	dw	0
   699  00FFEC  01                 	db	1
   700  00FFED  FF                 	db	255
   701  00FFEE  4220               	dw	16928
   702  00FFF0  33C4               	dw	13252
   703  00FFF2  01                 	db	1
   704  00FFF3  50                 	db	80
   705  00FFF4  012E               	dw	302
   706  00FFF6  0000               	dw	0
   707  00FFF8  0000               	dw	0
   708  00FFFA  01                 	db	1
   709  00FFFB  FF                 	db	255
   710  00FFFC                     __end_of_DefaultChannels868:
   711                           	opt stack 0
   712  00FFFC                     _FskSyncWordBuff:
   713                           	opt stack 0
   714  00FFFC  C1                 	db	193
   715  00FFFD  94                 	db	148
   716  00FFFE  C1                 	db	193
   717  00FFFF                     __end_of_FskSyncWordBuff:
   718                           	opt stack 0
   719  00FFFF  00                 	db	0	; dummy byte at the end
   720  0000                     
   721                           	psect	nvCOMRAM
   722  000048                     __pnvCOMRAM:
   723                           	opt stack 0
   724  000048                     _TMR1_InterruptHandler:
   725                           	opt stack 0
   726  000048                     	ds	2
   727  00004A                     _timer1ReloadVal:
   728                           	opt stack 0
   729  00004A                     	ds	2
   730  00004C                     _IOCB4_InterruptHandler:
   731                           	opt stack 0
   732  00004C                     	ds	2
   733  00004E                     _INT2_InterruptHandler:
   734                           	opt stack 0
   735  00004E                     	ds	2
   736  000050                     _INT1_InterruptHandler:
   737                           	opt stack 0
   738  000050                     	ds	2
   739  0000                     _ANSELA	set	3896
   740  0000                     _ANSELE	set	3900
   741  0000                     _ANSELB	set	3897
   742  0000                     _ANSELC	set	3898
   743  0000                     _ANSELD	set	3899
   744  0000                     _TMR1	set	4046
   745  0000                     _T1GCONbits	set	4044
   746  0000                     _T1CONbits	set	4045
   747  0000                     _T1CON	set	4045
   748  0000                     _TMR1L	set	4046
   749  0000                     _TMR1H	set	4047
   750  0000                     _T1GCON	set	4044
   751  0000                     _IOCBbits	set	3938
   752  0000                     _WPUB	set	3937
   753  0000                     _TRISD	set	3989
   754  0000                     _TRISC	set	3988
   755  0000                     _TRISB	set	3987
   756  0000                     _TRISA	set	3986
   757  0000                     _TRISE	set	3990
   758  0000                     _LATC	set	3979
   759  0000                     _LATB	set	3978
   760  0000                     _LATA	set	3977
   761  0000                     _LATD	set	3980
   762  0000                     _LATE	set	3981
   763  0000                     _OSCTUNE	set	3995
   764  0000                     _OSCCON2	set	4050
   765  0000                     _OSCCON	set	4051
   766  0000                     _PIR1bits	set	3998
   767  0000                     _PIE1bits	set	3997
   768  0000                     _RCONbits	set	4048
   769  0000                     _INTCON2bits	set	4081
   770  0000                     _INTCON3bits	set	4080
   771  0000                     _SSP2STATbits	set	3949
   772  0000                     _SSP2BUF	set	3951
   773  0000                     _SSP2CON1bits	set	3948
   774  0000                     _SSP2ADD	set	3950
   775  0000                     _SSP2CON1	set	3948
   776  0000                     _SSP2STAT	set	3949
   777  0000                     _PORTBbits	set	3969
   778  0000                     _INTCONbits	set	4082
   779  0000                     _LATD3	set	31843
   780  0000                     _LATC2	set	31834
   781  0000                     _TRISC2	set	31906
   782                           
   783                           ; #config settings
   784  0000                     
   785                           	psect	cinit
   786  00253A                     __pcinit:
   787                           	opt stack 0
   788  00253A                     start_initialization:
   789                           	opt stack 0
   790  00253A                     __initialization:
   791                           	opt stack 0
   792                           
   793                           ; Initialize objects allocated to BANK1 (52 bytes)
   794                           ; load TBLPTR registers with __pidataBANK1
   795  00253A  0E9C               	movlw	low __pidataBANK1
   796  00253C  6EF6               	movwf	tblptrl,c
   797  00253E  0E33               	movlw	high __pidataBANK1
   798  002540  6EF7               	movwf	tblptrh,c
   799  002542  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   800  002544  6EF8               	movwf	tblptru,c
   801  002546  EE01  F0AC         	lfsr	0,__pdataBANK1
   802  00254A  EE20 F034          	lfsr	2,52
   803  00254E                     copy_data0:
   804  00254E  0009               	tblrd		*+
   805  002550  CFF5 FFEE          	movff	tablat,postinc0
   806  002554  50DD               	movf	postdec2,w,c
   807  002556  50D9               	movf	fsr2l,w,c
   808  002558  E1FA               	bnz	copy_data0
   809                           
   810                           ; Initialize objects allocated to BANK0 (4 bytes)
   811                           ; load TBLPTR registers with __pidataBANK0
   812  00255A  0E6E               	movlw	low __pidataBANK0
   813  00255C  6EF6               	movwf	tblptrl,c
   814  00255E  0E38               	movlw	high __pidataBANK0
   815  002560  6EF7               	movwf	tblptrh,c
   816  002562  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   817  002564  6EF8               	movwf	tblptru,c
   818  002566  EE00  F0FC         	lfsr	0,__pdataBANK0
   819  00256A  EE20 F004          	lfsr	2,4
   820  00256E                     copy_data1:
   821  00256E  0009               	tblrd		*+
   822  002570  CFF5 FFEE          	movff	tablat,postinc0
   823  002574  50DD               	movf	postdec2,w,c
   824  002576  50D9               	movf	fsr2l,w,c
   825  002578  E1FA               	bnz	copy_data1
   826                           
   827                           ; Initialize objects allocated to COMRAM (4 bytes)
   828                           ; load TBLPTR registers with __pidataCOMRAM
   829  00257A  0E6A               	movlw	low __pidataCOMRAM
   830  00257C  6EF6               	movwf	tblptrl,c
   831  00257E  0E38               	movlw	high __pidataCOMRAM
   832  002580  6EF7               	movwf	tblptrh,c
   833  002582  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   834  002584  6EF8               	movwf	tblptru,c
   835  002586  EE00  F052         	lfsr	0,__pdataCOMRAM
   836  00258A  EE20 F004          	lfsr	2,4
   837  00258E                     copy_data2:
   838  00258E  0009               	tblrd		*+
   839  002590  CFF5 FFEE          	movff	tablat,postinc0
   840  002594  50DD               	movf	postdec2,w,c
   841  002596  50D9               	movf	fsr2l,w,c
   842  002598  E1FA               	bnz	copy_data2
   843                           
   844                           ; Clear objects allocated to BIGRAM (542 bytes)
   845  00259A  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   846  00259E  EE22 F01E          	lfsr	2,542
   847  0025A2                     clear_0:
   848  0025A2  6AEE               	clrf	postinc0,c
   849  0025A4  50DD               	movf	postdec2,w,c
   850  0025A6  50D9               	movf	fsr2l,w,c
   851  0025A8  E1FC               	bnz	clear_0
   852  0025AA  50DA               	movf	fsr2h,w,c
   853  0025AC  E1FA               	bnz	clear_0
   854                           
   855                           ; Clear objects allocated to BANK4 (224 bytes)
   856  0025AE  EE04  F000         	lfsr	0,__pbssBANK4
   857  0025B2  0EE0               	movlw	224
   858  0025B4                     clear_1:
   859  0025B4  6AEE               	clrf	postinc0,c
   860  0025B6  06E8               	decf	wreg,f,c
   861  0025B8  E1FD               	bnz	clear_1
   862                           
   863                           ; Clear objects allocated to BANK3 (160 bytes)
   864  0025BA  EE03  F000         	lfsr	0,__pbssBANK3
   865  0025BE  0EA0               	movlw	160
   866  0025C0                     clear_2:
   867  0025C0  6AEE               	clrf	postinc0,c
   868  0025C2  06E8               	decf	wreg,f,c
   869  0025C4  E1FD               	bnz	clear_2
   870                           
   871                           ; Clear objects allocated to BANK2 (245 bytes)
   872  0025C6  EE02  F000         	lfsr	0,__pbssBANK2
   873  0025CA  0EF5               	movlw	245
   874  0025CC                     clear_3:
   875  0025CC  6AEE               	clrf	postinc0,c
   876  0025CE  06E8               	decf	wreg,f,c
   877  0025D0  E1FD               	bnz	clear_3
   878                           
   879                           ; Clear objects allocated to BANK1 (70 bytes)
   880  0025D2  EE01  F066         	lfsr	0,__pbssBANK1
   881  0025D6  0E46               	movlw	70
   882  0025D8                     clear_4:
   883  0025D8  6AEE               	clrf	postinc0,c
   884  0025DA  06E8               	decf	wreg,f,c
   885  0025DC  E1FD               	bnz	clear_4
   886                           
   887                           ; Clear objects allocated to BANK0 (28 bytes)
   888  0025DE  EE00  F0E0         	lfsr	0,__pbssBANK0
   889  0025E2  0E1C               	movlw	28
   890  0025E4                     clear_5:
   891  0025E4  6AEE               	clrf	postinc0,c
   892  0025E6  06E8               	decf	wreg,f,c
   893  0025E8  E1FD               	bnz	clear_5
   894                           
   895                           ; Clear objects allocated to COMRAM (2 bytes)
   896  0025EA  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   897  0025EC  6A56               	clrf	__pbssCOMRAM& (0+255),c
   898  0025EE                     end_of_initialization:
   899                           	opt stack 0
   900  0025EE                     __end_of__initialization:
   901                           	opt stack 0
   902  0025EE  0100               	movlb	0
   903  0025F0  EF88  F014         	goto	_main	;jump to C main() function
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec2	equ	0xFDD
   911                           fsr2h	equ	0xFDA
   912                           fsr2l	equ	0xFD9
   913                           
   914                           	psect	bssCOMRAM
   915  000056                     __pbssCOMRAM:
   916                           	opt stack 0
   917  000056                     _localDioStatus:
   918                           	opt stack 0
   919  000056                     	ds	1
   920  000057                     _dioStatus:
   921                           	opt stack 0
   922  000057                     	ds	1
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec2	equ	0xFDD
   930                           fsr2h	equ	0xFDA
   931                           fsr2l	equ	0xFD9
   932                           
   933                           	psect	dataCOMRAM
   934  000052                     __pdataCOMRAM:
   935                           	opt stack 0
   936  000052                     _randx:
   937                           	opt stack 0
   938  000052                     	ds	4
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           
   949                           	psect	bssBANK0
   950  0000E0                     __pbssBANK0:
   951                           	opt stack 0
   952  0000E0                     _rxPayload:
   953                           	opt stack 0
   954  0000E0                     	ds	4
   955  0000E4                     TMR_GetDeltaTime@retVal:
   956                           	opt stack 0
   957  0000E4                     	ds	4
   958  0000E8                     _ticksAccounted:
   959                           	opt stack 0
   960  0000E8                     	ds	4
   961  0000EC                     _ticksAdded:
   962                           	opt stack 0
   963  0000EC                     	ds	4
   964  0000F0                     TMR_SwapTimer@retVal:
   965                           	opt stack 0
   966  0000F0                     	ds	2
   967  0000F2                     TMR_SwapTimer@oldVal:
   968                           	opt stack 0
   969  0000F2                     	ds	2
   970  0000F4                     TMR_GetDeltaTime@tmrVal:
   971                           	opt stack 0
   972  0000F4                     	ds	2
   973  0000F6                     _reloadVal:
   974                           	opt stack 0
   975  0000F6                     	ds	2
   976  0000F8                     __rcon:
   977                           	opt stack 0
   978  0000F8                     	ds	1
   979  0000F9                     __roundCounter:
   980                           	opt stack 0
   981  0000F9                     	ds	1
   982  0000FA                     _allocatedTimers:
   983                           	opt stack 0
   984  0000FA                     	ds	1
   985  0000FB                     _timerOverflow:
   986                           	opt stack 0
   987  0000FB                     	ds	1
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec2	equ	0xFDD
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           
   998                           	psect	dataBANK0
   999  0000FC                     __pdataBANK0:
  1000                           	opt stack 0
  1001  0000FC                     _ticksToScheduledInterrupt:
  1002                           	opt stack 0
  1003  0000FC                     	ds	4
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           postdec2	equ	0xFDD
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           
  1014                           	psect	bssBANK1
  1015  000166                     __pbssBANK1:
  1016                           	opt stack 0
  1017  000166                     _RadioConfiguration:
  1018                           	opt stack 0
  1019  000166                     	ds	54
  1020  00019C                     _aesBuffer:
  1021                           	opt stack 0
  1022  00019C                     	ds	16
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec2	equ	0xFDD
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           
  1033                           	psect	dataBANK1
  1034  0001AC                     __pdataBANK1:
  1035                           	opt stack 0
  1036  0001AC                     GenerateSubkey@F7103:
  1037                           	opt stack 0
  1038  0001AC                     	ds	16
  1039  0001BC                     _devAddr:
  1040                           	opt stack 0
  1041  0001BC                     	ds	4
  1042  0001C0                     _appSKey:
  1043                           	opt stack 0
  1044  0001C0                     	ds	16
  1045  0001D0                     _nwkSKey:
  1046                           	opt stack 0
  1047  0001D0                     	ds	16
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           postdec2	equ	0xFDD
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           
  1058                           	psect	bssBANK2
  1059  000200                     __pbssBANK2:
  1060                           	opt stack 0
  1061  000200                     _loRa:
  1062                           	opt stack 0
  1063  000200                     	ds	245
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec2	equ	0xFDD
  1071                           fsr2h	equ	0xFDA
  1072                           fsr2l	equ	0xFD9
  1073                           
  1074                           	psect	bssBANK3
  1075  000300                     __pbssBANK3:
  1076                           	opt stack 0
  1077  000300                     _swTimers:
  1078                           	opt stack 0
  1079  000300                     	ds	160
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec2	equ	0xFDD
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           
  1090                           	psect	bssBANK4
  1091  000400                     __pbssBANK4:
  1092                           	opt stack 0
  1093  000400                     _Channels:
  1094                           	opt stack 0
  1095  000400                     	ds	224
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec2	equ	0xFDD
  1103                           fsr2h	equ	0xFDA
  1104                           fsr2l	equ	0xFD9
  1105                           
  1106                           	psect	bssBIGRAM
  1107  0004E0                     __pbssBIGRAM:
  1108                           	opt stack 0
  1109  0004E0                     _macBuffer:
  1110                           	opt stack 0
  1111  0004E0                     	ds	271
  1112  0005EF                     _radioBuffer:
  1113                           	opt stack 0
  1114  0005EF                     	ds	271
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec2	equ	0xFDD
  1122                           fsr2h	equ	0xFDA
  1123                           fsr2l	equ	0xFD9
  1124                           
  1125                           	psect	cstackBANK1
  1126  000100                     __pcstackBANK1:
  1127                           	opt stack 0
  1128  000100                     AESCmac@k2:
  1129                           	opt stack 0
  1130                           
  1131                           ; 16 bytes @ 0x0
  1132  000100                     	ds	16
  1133  000110                     AESCmac@k1:
  1134                           	opt stack 0
  1135                           
  1136                           ; 16 bytes @ 0x10
  1137  000110                     	ds	16
  1138  000120                     AESCmac@mLast:
  1139                           	opt stack 0
  1140                           
  1141                           ; 16 bytes @ 0x20
  1142  000120                     	ds	16
  1143  000130                     AESCmac@padded:
  1144                           	opt stack 0
  1145                           
  1146                           ; 16 bytes @ 0x30
  1147  000130                     	ds	16
  1148  000140                     AESCmac@y:
  1149                           	opt stack 0
  1150                           
  1151                           ; 16 bytes @ 0x40
  1152  000140                     	ds	16
  1153  000150                     AESCmac@x:
  1154                           	opt stack 0
  1155                           
  1156                           ; 16 bytes @ 0x50
  1157  000150                     	ds	16
  1158  000160                     AESCmac@ptr:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x60
  1162  000160                     	ds	2
  1163  000162                     AESCmac@flag:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x62
  1167  000162                     	ds	1
  1168  000163                     AESCmac@n:
  1169                           	opt stack 0
  1170                           
  1171                           ; 1 bytes @ 0x63
  1172  000163                     	ds	1
  1173  000164                     AESCmac@j:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x64
  1177  000164                     	ds	1
  1178  000165                     AESCmac@i:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x65
  1182  000165                     	ds	1
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec2	equ	0xFDD
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           
  1193                           	psect	cstackBANK0
  1194  000060                     __pcstackBANK0:
  1195                           	opt stack 0
  1196  000060                     ??_UpdateMinMaxChDataRate:
  1197  000060                     ?_TMR1_ReadTimer:
  1198                           	opt stack 0
  1199  000060                     ?___lmul:
  1200                           	opt stack 0
  1201  000060                     ?___lldiv:
  1202                           	opt stack 0
  1203  000060                     ?___llmod:
  1204                           	opt stack 0
  1205  000060                     HALResetPinOutputValue@value:
  1206                           	opt stack 0
  1207  000060                     SwTimerCreate@retVal:
  1208                           	opt stack 0
  1209  000060                     SwTimerStop@timerId:
  1210                           	opt stack 0
  1211  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1212                           	opt stack 0
  1213  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1214                           	opt stack 0
  1215  000060                     RADIO_SetOutputPower@power:
  1216                           	opt stack 0
  1217  000060                     RADIO_SetCRC@crc:
  1218                           	opt stack 0
  1219  000060                     RADIO_SetIQInverted@iqInverted:
  1220                           	opt stack 0
  1221  000060                     RADIO_SetBandwidth@bandwidth:
  1222                           	opt stack 0
  1223  000060                     RADIO_SetModulation@modulation:
  1224                           	opt stack 0
  1225  000060                     UpdateJoinInProgress@state:
  1226                           	opt stack 0
  1227  000060                     SPI2_Exchange8bit@data:
  1228                           	opt stack 0
  1229  000060                     FillSubKey@source:
  1230                           	opt stack 0
  1231  000060                     SwTimerSetCallback@callback:
  1232                           	opt stack 0
  1233  000060                     EncKeySchedule@key:
  1234                           	opt stack 0
  1235  000060                     EncodeShiftRow@stateTable:
  1236                           	opt stack 0
  1237  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1238                           	opt stack 0
  1239  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1240                           	opt stack 0
  1241  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1242                           	opt stack 0
  1243  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1244                           	opt stack 0
  1245  000060                     TMR1_WriteTimer@timerVal:
  1246                           	opt stack 0
  1247  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1248                           	opt stack 0
  1249  000060                     memcpy@d1:
  1250                           	opt stack 0
  1251  000060                     memset@p1:
  1252                           	opt stack 0
  1253  000060                     SystemBlockingWaitMs@ms:
  1254                           	opt stack 0
  1255  000060                     SwTimerSetTimeout@timeout:
  1256                           	opt stack 0
  1257  000060                     RADIO_SetChannelFrequency@frequency:
  1258                           	opt stack 0
  1259  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1260                           	opt stack 0
  1261  000060                     ___lmul@multiplier:
  1262                           	opt stack 0
  1263  000060                     ___lldiv@dividend:
  1264                           	opt stack 0
  1265  000060                     ___llmod@dividend:
  1266                           	opt stack 0
  1267                           
  1268                           ; 4 bytes @ 0x0
  1269  000060                     	ds	1
  1270  000061                     HALSPISend@data:
  1271                           	opt stack 0
  1272  000061                     UpdateMinMaxChDataRate@i:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x1
  1276  000061                     	ds	1
  1277  000062                     ??_TMR1_ReadTimer:
  1278  000062                     ??_EncKeySchedule:
  1279  000062                     SwTimerSetCallback@callbackParameter:
  1280                           	opt stack 0
  1281  000062                     EncodeShiftRow@temp:
  1282                           	opt stack 0
  1283  000062                     RADIO_RegisterWrite@value:
  1284                           	opt stack 0
  1285  000062                     RADIO_RegisterRead@reg:
  1286                           	opt stack 0
  1287  000062                     FillSubKey@key:
  1288                           	opt stack 0
  1289  000062                     memcpy@s1:
  1290                           	opt stack 0
  1291  000062                     memset@c:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x2
  1295  000062                     	ds	1
  1296  000063                     SwTimerSetCallback@timerId:
  1297                           	opt stack 0
  1298  000063                     RADIO_RegisterWrite@reg:
  1299                           	opt stack 0
  1300  000063                     RADIO_RegisterRead@readValue:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x3
  1304  000063                     	ds	1
  1305  000064                     ??_SystemBlockingWaitMs:
  1306  000064                     ??_SwTimerSetTimeout:
  1307  000064                     FillSubKey@size:
  1308                           	opt stack 0
  1309  000064                     RADIO_WritePower@ocp:
  1310                           	opt stack 0
  1311  000064                     _EncKeySchedule$513:
  1312                           	opt stack 0
  1313  000064                     TMR1_ReadTimer@readVal:
  1314                           	opt stack 0
  1315  000064                     memcpy@n:
  1316                           	opt stack 0
  1317  000064                     memset@n:
  1318                           	opt stack 0
  1319  000064                     ___lmul@multiplicand:
  1320                           	opt stack 0
  1321  000064                     ___lldiv@divisor:
  1322                           	opt stack 0
  1323  000064                     ___llmod@divisor:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x4
  1327  000064                     	ds	1
  1328  000065                     ??_FillSubKey:
  1329  000065                     RADIO_WriteMode@newModulation:
  1330                           	opt stack 0
  1331  000065                     RADIO_WritePower@paDac:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x5
  1335  000065                     	ds	1
  1336  000066                     FillSubKey@carry:
  1337                           	opt stack 0
  1338  000066                     RADIO_WriteMode@blocking:
  1339                           	opt stack 0
  1340  000066                     RADIO_WritePower@power:
  1341                           	opt stack 0
  1342  000066                     TMR1_ReadTimer@readValHigh:
  1343                           	opt stack 0
  1344  000066                     AESEncode@block:
  1345                           	opt stack 0
  1346  000066                     memcpy@d:
  1347                           	opt stack 0
  1348  000066                     memset@p:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x6
  1352  000066                     	ds	1
  1353  000067                     FillSubKey@i:
  1354                           	opt stack 0
  1355  000067                     RADIO_WriteMode@currentModulation:
  1356                           	opt stack 0
  1357  000067                     TMR1_ReadTimer@readValLow:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0x7
  1361  000067                     	ds	1
  1362  000068                     ?_TMR_SwapTimer:
  1363                           	opt stack 0
  1364  000068                     ?_TMR_GetDeltaTime:
  1365                           	opt stack 0
  1366  000068                     SwTimerSetTimeout@timerId:
  1367                           	opt stack 0
  1368  000068                     RADIO_WriteMode@dioMapping:
  1369                           	opt stack 0
  1370  000068                     ___llmod@counter:
  1371                           	opt stack 0
  1372  000068                     TMR_SwapTimer@timerVal:
  1373                           	opt stack 0
  1374  000068                     AESEncode@key:
  1375                           	opt stack 0
  1376  000068                     memcpy@s:
  1377                           	opt stack 0
  1378  000068                     ___lmul@product:
  1379                           	opt stack 0
  1380  000068                     ___lldiv@quotient:
  1381                           	opt stack 0
  1382                           
  1383                           ; 4 bytes @ 0x8
  1384  000068                     	ds	1
  1385  000069                     RADIO_WriteMode@currentMode:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x9
  1389  000069                     	ds	1
  1390  00006A                     ??_AESEncode:
  1391  00006A                     RADIO_WriteMode@newMode:
  1392                           	opt stack 0
  1393  00006A                     memcpy@tmp:
  1394                           	opt stack 0
  1395  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1396                           	opt stack 0
  1397                           
  1398                           ; 4 bytes @ 0xA
  1399  00006A                     	ds	1
  1400  00006B                     RADIO_WriteMode@opMode:
  1401                           	opt stack 0
  1402  00006B                     InitDefault868Channels@i:
  1403                           	opt stack 0
  1404  00006B                     InitDefault433Channels@i:
  1405                           	opt stack 0
  1406  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1407                           	opt stack 0
  1408  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1409                           	opt stack 0
  1410  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1411                           	opt stack 0
  1412                           
  1413                           ; 2 bytes @ 0xB
  1414  00006B                     	ds	1
  1415  00006C                     ??_TMR_GetDeltaTime:
  1416  00006C                     ?_rand:
  1417                           	opt stack 0
  1418  00006C                     ?_RADIO_ReadRandom:
  1419                           	opt stack 0
  1420  00006C                     ___lldiv@counter:
  1421                           	opt stack 0
  1422                           
  1423                           ; 1 bytes @ 0xC
  1424  00006C                     	ds	1
  1425  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1426                           	opt stack 0
  1427  00006D                     RADIO_WriteFrequency@frequency:
  1428                           	opt stack 0
  1429  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1430                           	opt stack 0
  1431  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1432                           	opt stack 0
  1433                           
  1434                           ; 4 bytes @ 0xD
  1435  00006D                     	ds	1
  1436  00006E                     ??_TMR_OverrideRemaining:
  1437  00006E                     ??_RADIO_ReadRandom:
  1438  00006E                     ?___lwmod:
  1439                           	opt stack 0
  1440  00006E                     ___lwmod@dividend:
  1441                           	opt stack 0
  1442  00006E                     ConfigureRadio@freq:
  1443                           	opt stack 0
  1444                           
  1445                           ; 4 bytes @ 0xE
  1446  00006E                     	ds	1
  1447  00006F                     RADIO_ReadRandom@retVal:
  1448                           	opt stack 0
  1449                           
  1450                           ; 2 bytes @ 0xF
  1451  00006F                     	ds	1
  1452  000070                     TMR_OverrideRemaining@tmrVal:
  1453                           	opt stack 0
  1454  000070                     ___lwmod@divisor:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x10
  1458  000070                     	ds	1
  1459  000071                     RADIO_ReadRandom@i:
  1460                           	opt stack 0
  1461  000071                     RADIO_WriteFrequency@num_mod:
  1462                           	opt stack 0
  1463  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1464                           	opt stack 0
  1465  000071                     RADIO_WriteFSKBitRate@num:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x11
  1469  000071                     	ds	1
  1470  000072                     ConfigureRadio@dataRate:
  1471                           	opt stack 0
  1472  000072                     ___lwmod@counter:
  1473                           	opt stack 0
  1474  000072                     TMR_OverrideRemaining@oldReloadVal:
  1475                           	opt stack 0
  1476  000072                     _AESEncode$508:
  1477                           	opt stack 0
  1478  000072                     srand@x:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x12
  1482  000072                     	ds	1
  1483  000073                     ?_Random:
  1484                           	opt stack 0
  1485  000073                     Random@max:
  1486                           	opt stack 0
  1487  000073                     ConfigureRadioTx@freq:
  1488                           	opt stack 0
  1489                           
  1490                           ; 4 bytes @ 0x13
  1491  000073                     	ds	1
  1492  000074                     _AESEncode$509:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x14
  1496  000074                     	ds	1
  1497  000075                     SearchAvailableChannel@transmissionType:
  1498                           	opt stack 0
  1499  000075                     RADIO_WriteFrequency@num:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x15
  1503  000075                     	ds	1
  1504  000076                     _AESEncode$510:
  1505                           	opt stack 0
  1506  000076                     SearchAvailableChannel@channelIndex:
  1507                           	opt stack 0
  1508                           
  1509                           ; 2 bytes @ 0x16
  1510  000076                     	ds	1
  1511  000077                     ConfigureRadioTx@dataRate:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x17
  1515  000077                     	ds	1
  1516  000078                     ??_SearchAvailableChannel:
  1517  000078                     AESEncode@aux:
  1518                           	opt stack 0
  1519  000078                     ConfigureRadioTx@txPower:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x18
  1523  000078                     	ds	1
  1524  000079                     AESEncode@aux2:
  1525                           	opt stack 0
  1526  000079                     RADIO_Init@radioBuffer:
  1527                           	opt stack 0
  1528  000079                     RADIO_WriteConfiguration@symbolTimeout:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x19
  1532  000079                     	ds	1
  1533  00007A                     AESEncode@aux1:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x1A
  1537  00007A                     	ds	1
  1538  00007B                     ??_RADIO_WriteConfiguration:
  1539  00007B                     AESEncode@aux3:
  1540                           	opt stack 0
  1541  00007B                     RADIO_Init@frequency:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x1B
  1545  00007B                     	ds	1
  1546  00007C                     AESEncode@i:
  1547                           	opt stack 0
  1548  00007C                     SearchAvailableChannel@randomNumberCopy:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0x1C
  1552  00007C                     	ds	1
  1553  00007D                     SearchAvailableChannel@result:
  1554                           	opt stack 0
  1555  00007D                     AESEncodeLoRa@block:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x1D
  1559  00007D                     	ds	1
  1560  00007E                     RADIO_WriteConfiguration@i:
  1561                           	opt stack 0
  1562  00007E                     SearchAvailableChannel@maxChannels:
  1563                           	opt stack 0
  1564                           
  1565                           ; 1 bytes @ 0x1E
  1566  00007E                     	ds	1
  1567  00007F                     ??_RADIO_Init:
  1568  00007F                     SearchAvailableChannel@randomNumber:
  1569                           	opt stack 0
  1570  00007F                     AESEncodeLoRa@key:
  1571                           	opt stack 0
  1572  00007F                     RADIO_WriteConfiguration@tempValue:
  1573                           	opt stack 0
  1574                           
  1575                           ; 4 bytes @ 0x1F
  1576  00007F                     	ds	1
  1577  000080                     ?_SwTimersInterrupt:
  1578                           	opt stack 0
  1579  000080                     SearchAvailableChannel@i:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x20
  1583  000080                     	ds	1
  1584  000081                     SelectChannelForTransmission@transmissionType:
  1585                           	opt stack 0
  1586  000081                     AESEncodeLoRa@useKey:
  1587                           	opt stack 0
  1588                           
  1589                           ; 16 bytes @ 0x21
  1590  000081                     	ds	1
  1591  000082                     SelectChannelForTransmission@result:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0x22
  1595  000082                     	ds	1
  1596  000083                     RADIO_WriteConfiguration@regValue:
  1597                           	opt stack 0
  1598  000083                     SelectChannelForTransmission@channelIndex:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x23
  1602  000083                     	ds	1
  1603  000084                     
  1604                           ; 1 bytes @ 0x24
  1605  000084                     	ds	4
  1606  000088                     SwTimersInterrupt@timeElapsed:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x28
  1610  000088                     	ds	4
  1611  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  1612                           	opt stack 0
  1613                           
  1614                           ; 4 bytes @ 0x2C
  1615  00008C                     	ds	4
  1616  000090                     SwTimersInterrupt@i:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x30
  1620  000090                     	ds	1
  1621  000091                     GenerateSubkey@key:
  1622                           	opt stack 0
  1623                           
  1624                           ; 2 bytes @ 0x31
  1625  000091                     	ds	2
  1626  000093                     GenerateSubkey@k1:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x33
  1630  000093                     	ds	2
  1631  000095                     GenerateSubkey@k2:
  1632                           	opt stack 0
  1633  000095                     SwTimerStart@ticksRemaining:
  1634                           	opt stack 0
  1635                           
  1636                           ; 4 bytes @ 0x35
  1637  000095                     	ds	2
  1638  000097                     ??_GenerateSubkey:
  1639                           
  1640                           ; 1 bytes @ 0x37
  1641  000097                     	ds	1
  1642  000098                     GenerateSubkey@const_Rb:
  1643                           	opt stack 0
  1644                           
  1645                           ; 16 bytes @ 0x38
  1646  000098                     	ds	1
  1647  000099                     SwTimerStart@timerId:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x39
  1651  000099                     	ds	1
  1652  00009A                     ?_RADIO_Transmit:
  1653                           	opt stack 0
  1654  00009A                     RADIO_Transmit@buffer:
  1655                           	opt stack 0
  1656  00009A                     LORAWAN_LinkCheckConfigure@period:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x3A
  1660  00009A                     	ds	2
  1661  00009C                     ??_LORAWAN_LinkCheckConfigure:
  1662  00009C                     RADIO_Transmit@bufferLen:
  1663                           	opt stack 0
  1664                           
  1665                           ; 1 bytes @ 0x3C
  1666  00009C                     	ds	1
  1667  00009D                     ??_RADIO_Transmit:
  1668                           
  1669                           ; 1 bytes @ 0x3D
  1670  00009D                     	ds	3
  1671  0000A0                     _LORAWAN_LinkCheckConfigure$2491:
  1672                           	opt stack 0
  1673                           
  1674                           ; 4 bytes @ 0x40
  1675  0000A0                     	ds	1
  1676  0000A1                     _RADIO_Transmit$771:
  1677                           	opt stack 0
  1678                           
  1679                           ; 4 bytes @ 0x41
  1680  0000A1                     	ds	3
  1681  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x44
  1685  0000A4                     	ds	1
  1686  0000A5                     LORAWAN_Reset@ismBandNew:
  1687                           	opt stack 0
  1688  0000A5                     _RADIO_Transmit$773:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x45
  1692  0000A5                     	ds	1
  1693  0000A6                     LORAWAN_Init@RxPayload:
  1694                           	opt stack 0
  1695                           
  1696                           ; 2 bytes @ 0x46
  1697  0000A6                     	ds	2
  1698  0000A8                     LORAWAN_Init@RxJoinResponse:
  1699                           	opt stack 0
  1700  0000A8                     GenerateSubkey@l:
  1701                           	opt stack 0
  1702                           
  1703                           ; 16 bytes @ 0x48
  1704  0000A8                     	ds	1
  1705  0000A9                     RADIO_Transmit@regValue:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x49
  1709  0000A9                     	ds	1
  1710  0000AA                     RADIO_Transmit@i:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x4A
  1714  0000AA                     	ds	14
  1715  0000B8                     GenerateSubkey@i:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x58
  1719  0000B8                     	ds	1
  1720  0000B9                     AESCmac@key:
  1721                           	opt stack 0
  1722                           
  1723                           ; 2 bytes @ 0x59
  1724  0000B9                     	ds	2
  1725  0000BB                     AESCmac@output:
  1726                           	opt stack 0
  1727                           
  1728                           ; 2 bytes @ 0x5B
  1729  0000BB                     	ds	2
  1730  0000BD                     AESCmac@input:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x5D
  1734  0000BD                     	ds	2
  1735  0000BF                     AESCmac@size:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x5F
  1739  0000BF                     	ds	1
  1740  0000C0                     ??_AESCmac:
  1741                           
  1742                           ; 1 bytes @ 0x60
  1743  0000C0                     	ds	7
  1744  0000C7                     ?_ComputeMic:
  1745                           	opt stack 0
  1746  0000C7                     ComputeMic@key:
  1747                           	opt stack 0
  1748                           
  1749                           ; 2 bytes @ 0x67
  1750  0000C7                     	ds	2
  1751  0000C9                     ComputeMic@buffer:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x69
  1755  0000C9                     	ds	2
  1756  0000CB                     ComputeMic@bufferLength:
  1757                           	opt stack 0
  1758                           
  1759                           ; 1 bytes @ 0x6B
  1760  0000CB                     	ds	1
  1761  0000CC                     ComputeMic@mic:
  1762                           	opt stack 0
  1763                           
  1764                           ; 4 bytes @ 0x6C
  1765  0000CC                     	ds	4
  1766  0000D0                     ??_PrepareJoinRequestFrame:
  1767                           
  1768                           ; 1 bytes @ 0x70
  1769  0000D0                     	ds	4
  1770  0000D4                     PrepareJoinRequestFrame@mic:
  1771                           	opt stack 0
  1772                           
  1773                           ; 4 bytes @ 0x74
  1774  0000D4                     	ds	4
  1775  0000D8                     PrepareJoinRequestFrame@mhdr:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x78
  1779  0000D8                     	ds	1
  1780  0000D9                     PrepareJoinRequestFrame@iCtr:
  1781                           	opt stack 0
  1782                           
  1783                           ; 1 bytes @ 0x79
  1784  0000D9                     	ds	1
  1785  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x7A
  1789  0000DA                     	ds	1
  1790  0000DB                     LORAWAN_Join@bufferIndex:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x7B
  1794  0000DB                     	ds	1
  1795  0000DC                     LORAWAN_Join@result:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x7C
  1799  0000DC                     	ds	1
  1800  0000DD                     LORAWAN_Join@activationTypeNew:
  1801                           	opt stack 0
  1802                           
  1803                           ; 1 bytes @ 0x7D
  1804  0000DD                     	ds	1
  1805  0000DE                     ??_main:
  1806                           
  1807                           ; 1 bytes @ 0x7E
  1808  0000DE                     	ds	2
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec2	equ	0xFDD
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           
  1819                           	psect	cstackCOMRAM
  1820  000001                     __pcstackCOMRAM:
  1821                           	opt stack 0
  1822  000001                     ?i2_TMR1_ReadTimer:
  1823                           	opt stack 0
  1824  000001                     i2TMR1_WriteTimer@timerVal:
  1825                           	opt stack 0
  1826                           
  1827                           ; 2 bytes @ 0x0
  1828  000001                     	ds	2
  1829  000003                     ??i2_TMR1_ReadTimer:
  1830  000003                     
  1831                           ; 1 bytes @ 0x2
  1832  000003                     	ds	2
  1833  000005                     i2TMR1_ReadTimer@readVal:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x4
  1837  000005                     	ds	2
  1838  000007                     i2TMR1_ReadTimer@readValHigh:
  1839                           	opt stack 0
  1840                           
  1841                           ; 1 bytes @ 0x6
  1842  000007                     	ds	1
  1843  000008                     i2TMR1_ReadTimer@readValLow:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0x7
  1847  000008                     	ds	1
  1848  000009                     ?i2_TMR_SwapTimer:
  1849                           	opt stack 0
  1850  000009                     ?i2_TMR_GetDeltaTime:
  1851                           	opt stack 0
  1852  000009                     i2TMR_SwapTimer@timerVal:
  1853                           	opt stack 0
  1854                           
  1855                           ; 2 bytes @ 0x8
  1856  000009                     	ds	2
  1857  00000B                     
  1858                           ; 1 bytes @ 0xA
  1859  00000B                     	ds	2
  1860  00000D                     ??i2_TMR_GetDeltaTime:
  1861                           
  1862                           ; 1 bytes @ 0xC
  1863  00000D                     	ds	20
  1864  000021                     ?i2_SwTimersInterrupt:
  1865                           	opt stack 0
  1866                           
  1867                           ; 4 bytes @ 0x20
  1868  000021                     	ds	4
  1869  000025                     
  1870                           ; 1 bytes @ 0x24
  1871  000025                     	ds	4
  1872  000029                     i2SwTimersInterrupt@timeElapsed:
  1873                           	opt stack 0
  1874                           
  1875                           ; 4 bytes @ 0x28
  1876  000029                     	ds	4
  1877  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  1878                           	opt stack 0
  1879                           
  1880                           ; 4 bytes @ 0x2C
  1881  00002D                     	ds	4
  1882  000031                     i2SwTimersInterrupt@i:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x30
  1886  000031                     	ds	1
  1887  000032                     ??_TMR_ISR_lora:
  1888                           
  1889                           ; 1 bytes @ 0x31
  1890  000032                     	ds	2
  1891  000034                     ??_INTERRUPT_InterruptManager:
  1892                           
  1893                           ; 1 bytes @ 0x33
  1894  000034                     	ds	8
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           
  1905 ;;
  1906 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1907 ;;
  1908 ;; *************** function _main *****************
  1909 ;; Defined at:
  1910 ;;		line 60 in file "main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        2 bytes
  1929 ;; Hardware stack levels required when called:   15
  1930 ;; This function calls:
  1931 ;;		_LORAWAN_Init
  1932 ;;		_LORAWAN_Join
  1933 ;;		_LORAWAN_SetApplicationSessionKey
  1934 ;;		_LORAWAN_SetDeviceAddress
  1935 ;;		_LORAWAN_SetNetworkSessionKey
  1936 ;;		_SYSTEM_Initialize
  1937 ;; This function is called by:
  1938 ;;		Startup code after reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text0
  1943  002910                     __ptext0:
  1944                           	opt stack 0
  1945  002910                     _main:
  1946                           	opt stack 16
  1947                           
  1948                           ;main.c: 63: SYSTEM_Initialize();
  1949                           
  1950                           ;incstack = 0
  1951  002910  EC14  F01B         	call	_SYSTEM_Initialize	;wreg free
  1952                           
  1953                           ;main.c: 89: (INTCONbits.GIE = 1);
  1954  002914  8EF2               	bsf	intcon,7,c	;volatile
  1955                           
  1956                           ;main.c: 92: (INTCONbits.PEIE = 1);
  1957  002916  8CF2               	bsf	intcon,6,c	;volatile
  1958                           
  1959                           ;main.c: 94: LORAWAN_Init(RxData, RxJoinResponse);
  1960  002918  0E00               	movlw	0
  1961  00291A  0100               	movlb	0	; () banked
  1962  00291C  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  1963  00291E  0E00               	movlw	0
  1964  002920  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  1965  002922  0E00               	movlw	0
  1966  002924  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  1967  002926  0E00               	movlw	0
  1968  002928  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  1969  00292A  EC5B  F017         	call	_LORAWAN_Init	;wreg free
  1970                           
  1971                           ;main.c: 95: LORAWAN_SetNetworkSessionKey(nwkSKey);
  1972  00292E  0ED0               	movlw	low _nwkSKey
  1973  002930  0100               	movlb	0	; () banked
  1974  002932  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  1975  002934  0E01               	movlw	high _nwkSKey
  1976  002936  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  1977  002938  EC30  F01A         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  1978                           
  1979                           ;main.c: 96: LORAWAN_SetApplicationSessionKey(appSKey);
  1980  00293C  0EC0               	movlw	low _appSKey
  1981  00293E  0100               	movlb	0	; () banked
  1982  002940  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  1983  002942  0E01               	movlw	high _appSKey
  1984  002944  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  1985  002946  EC47  F01A         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  1986                           
  1987                           ;main.c: 97: LORAWAN_SetDeviceAddress(devAddr);
  1988  00294A  C1BC  F060         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  1989  00294E  C1BD  F061         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  1990  002952  C1BE  F062         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  1991  002956  C1BF  F063         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  1992  00295A  EC87  F01B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  1993                           
  1994                           ;main.c: 98: LORAWAN_Join(ABP);
  1995  00295E  0E01               	movlw	1
  1996  002960  EC4E  F013         	call	_LORAWAN_Join
  1997                           
  1998                           ;main.c: 100: TRISA = 0xF0;
  1999  002964  0EF0               	movlw	240
  2000  002966  6E92               	movwf	3986,c	;volatile
  2001  002968                     
  2002                           ;main.c: 111: {
  2003                           ;main.c: 147: _delay((unsigned long)((500)*(16000000/4000.0)));
  2004  002968  0E0B               	movlw	11
  2005  00296A  0100               	movlb	0	; () banked
  2006  00296C  6FDF               	movwf	(??_main+1)& (0+255),b
  2007  00296E  0E26               	movlw	38
  2008  002970  6FDE               	movwf	??_main& (0+255),b
  2009  002972  0E5D               	movlw	93
  2010  002974                     u13317:
  2011  002974  2EE8               	decfsz	wreg,f,c
  2012  002976  D7FE               	bra	u13317
  2013  002978  2FDE               	decfsz	??_main& (0+255),f,b
  2014  00297A  D7FC               	bra	u13317
  2015  00297C  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  2016  00297E  D7FA               	bra	u13317
  2017  002980  D000               	nop2	
  2018                           
  2019                           ;main.c: 149: _delay((unsigned long)((500)*(16000000/4000.0)));
  2020  002982  0E0B               	movlw	11
  2021  002984  0100               	movlb	0	; () banked
  2022  002986  6FDF               	movwf	(??_main+1)& (0+255),b
  2023  002988  0E26               	movlw	38
  2024  00298A  6FDE               	movwf	??_main& (0+255),b
  2025  00298C  0E5D               	movlw	93
  2026  00298E                     u13327:
  2027  00298E  2EE8               	decfsz	wreg,f,c
  2028  002990  D7FE               	bra	u13327
  2029  002992  2FDE               	decfsz	??_main& (0+255),f,b
  2030  002994  D7FC               	bra	u13327
  2031  002996  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  2032  002998  D7FA               	bra	u13327
  2033  00299A  D000               	nop2	
  2034  00299C  D7E5               	goto	l2487
  2035  00299E                     __end_of_main:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postdec2	equ	0xFDD
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           
  2048 ;; *************** function _SYSTEM_Initialize *****************
  2049 ;; Defined at:
  2050 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:   10
  2071 ;; This function calls:
  2072 ;;		_EXT_INT_Initialize
  2073 ;;		_INTERRUPT_Initialize
  2074 ;;		_LORAWAN_PlatformInit
  2075 ;;		_OSCILLATOR_Initialize
  2076 ;;		_PIN_MANAGER_Initialize
  2077 ;;		_SPI2_Initialize
  2078 ;;		_TMR1_Initialize
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text1
  2085  003628                     __ptext1:
  2086                           	opt stack 0
  2087  003628                     _SYSTEM_Initialize:
  2088                           	opt stack 20
  2089                           
  2090                           ;mcc.c: 53: INTERRUPT_Initialize();
  2091                           
  2092                           ;incstack = 0
  2093  003628  EC39  F01C         	call	_INTERRUPT_Initialize	;wreg free
  2094                           
  2095                           ;mcc.c: 54: SPI2_Initialize();
  2096  00362C  ECC6  F01B         	call	_SPI2_Initialize	;wreg free
  2097                           
  2098                           ;mcc.c: 55: PIN_MANAGER_Initialize();
  2099  003630  EC41  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  2100                           
  2101                           ;mcc.c: 56: OSCILLATOR_Initialize();
  2102  003634  ECCD  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  2103                           
  2104                           ;mcc.c: 57: TMR1_Initialize();
  2105  003638  EC5E  F01A         	call	_TMR1_Initialize	;wreg free
  2106                           
  2107                           ;mcc.c: 58: EXT_INT_Initialize();
  2108  00363C  EC74  F01A         	call	_EXT_INT_Initialize	;wreg free
  2109                           
  2110                           ;mcc.c: 59: LORAWAN_PlatformInit();
  2111  003640  ECB1  F01A         	call	_LORAWAN_PlatformInit	;wreg free
  2112  003644  0012               	return		;funcret
  2113  003646                     __end_of_SYSTEM_Initialize:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           intcon	equ	0xFF2
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postdec2	equ	0xFDD
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           
  2126 ;; *************** function _TMR1_Initialize *****************
  2127 ;; Defined at:
  2128 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    8
  2149 ;; This function calls:
  2150 ;;		_TMR1_SetInterruptHandler
  2151 ;; This function is called by:
  2152 ;;		_SYSTEM_Initialize
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text2
  2157  0034BC                     __ptext2:
  2158                           	opt stack 0
  2159  0034BC                     _TMR1_Initialize:
  2160                           	opt stack 21
  2161                           
  2162                           ;tmr1.c: 69: T1GCON = 0x00;
  2163                           
  2164                           ;incstack = 0
  2165  0034BC  0E00               	movlw	0
  2166  0034BE  6ECC               	movwf	4044,c	;volatile
  2167                           
  2168                           ;tmr1.c: 72: TMR1H = 0x00;
  2169  0034C0  0E00               	movlw	0
  2170  0034C2  6ECF               	movwf	4047,c	;volatile
  2171                           
  2172                           ;tmr1.c: 75: TMR1L = 0x00;
  2173  0034C4  0E00               	movlw	0
  2174  0034C6  6ECE               	movwf	4046,c	;volatile
  2175                           
  2176                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2177  0034C8  CFCE F04A          	movff	4046,_timer1ReloadVal	;volatile
  2178  0034CC  CFCF F04B          	movff	4047,_timer1ReloadVal+1	;volatile
  2179                           
  2180                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2181  0034D0  909E               	bcf	3998,0,c	;volatile
  2182                           
  2183                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2184  0034D2  809D               	bsf	3997,0,c	;volatile
  2185                           
  2186                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2187  0034D4  0E98               	movlw	low _TMR1_DefaultInterruptHandler
  2188  0034D6  0100               	movlb	0	; () banked
  2189  0034D8  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2190  0034DA  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  2191  0034DC  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2192  0034DE  ECE8  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  2193                           
  2194                           ;tmr1.c: 90: T1CON = 0x8D;
  2195  0034E2  0E8D               	movlw	141
  2196  0034E4  6ECD               	movwf	4045,c	;volatile
  2197  0034E6  0012               	return		;funcret
  2198  0034E8                     __end_of_TMR1_Initialize:
  2199                           	opt stack 0
  2200                           tblptru	equ	0xFF8
  2201                           tblptrh	equ	0xFF7
  2202                           tblptrl	equ	0xFF6
  2203                           tablat	equ	0xFF5
  2204                           intcon	equ	0xFF2
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec2	equ	0xFDD
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           
  2211 ;; *************** function _SPI2_Initialize *****************
  2212 ;; Defined at:
  2213 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    7
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_SYSTEM_Initialize
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text3
  2242  00378C                     __ptext3:
  2243                           	opt stack 0
  2244  00378C                     _SPI2_Initialize:
  2245                           	opt stack 22
  2246                           
  2247                           ;spi2.c: 70: SSP2STAT = 0x40;
  2248                           
  2249                           ;incstack = 0
  2250  00378C  0E40               	movlw	64
  2251  00378E  6E6D               	movwf	3949,c	;volatile
  2252                           
  2253                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2254  003790  0E20               	movlw	32
  2255  003792  6E6C               	movwf	3948,c	;volatile
  2256                           
  2257                           ;spi2.c: 76: SSP2ADD = 0x00;
  2258  003794  0E00               	movlw	0
  2259  003796  6E6E               	movwf	3950,c	;volatile
  2260  003798  0012               	return		;funcret
  2261  00379A                     __end_of_SPI2_Initialize:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           wreg	equ	0xFE8
  2270                           postdec2	equ	0xFDD
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           
  2274 ;; *************** function _PIN_MANAGER_Initialize *****************
  2275 ;; Defined at:
  2276 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    8
  2297 ;; This function calls:
  2298 ;;		_IOCB4_SetInterruptHandler
  2299 ;; This function is called by:
  2300 ;;		_SYSTEM_Initialize
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text4
  2305  003082                     __ptext4:
  2306                           	opt stack 0
  2307  003082                     _PIN_MANAGER_Initialize:
  2308                           	opt stack 21
  2309                           
  2310                           ;pin_manager.c: 62: LATE = 0x00;
  2311                           
  2312                           ;incstack = 0
  2313  003082  0E00               	movlw	0
  2314  003084  6E8D               	movwf	3981,c	;volatile
  2315                           
  2316                           ;pin_manager.c: 63: LATD = 0x00;
  2317  003086  0E00               	movlw	0
  2318  003088  6E8C               	movwf	3980,c	;volatile
  2319                           
  2320                           ;pin_manager.c: 64: LATA = 0x00;
  2321  00308A  0E00               	movlw	0
  2322  00308C  6E89               	movwf	3977,c	;volatile
  2323                           
  2324                           ;pin_manager.c: 65: LATB = 0x00;
  2325  00308E  0E00               	movlw	0
  2326  003090  6E8A               	movwf	3978,c	;volatile
  2327                           
  2328                           ;pin_manager.c: 66: LATC = 0x00;
  2329  003092  0E00               	movlw	0
  2330  003094  6E8B               	movwf	3979,c	;volatile
  2331                           
  2332                           ;pin_manager.c: 71: TRISE = 0x07;
  2333  003096  0E07               	movlw	7
  2334  003098  6E96               	movwf	3990,c	;volatile
  2335                           
  2336                           ;pin_manager.c: 72: TRISA = 0xFF;
  2337  00309A  6892               	setf	3986,c	;volatile
  2338                           
  2339                           ;pin_manager.c: 73: TRISB = 0xFF;
  2340  00309C  6893               	setf	3987,c	;volatile
  2341                           
  2342                           ;pin_manager.c: 74: TRISC = 0xFE;
  2343  00309E  0EFE               	movlw	254
  2344  0030A0  6E94               	movwf	3988,c	;volatile
  2345                           
  2346                           ;pin_manager.c: 75: TRISD = 0xE6;
  2347  0030A2  0EE6               	movlw	230
  2348  0030A4  6E95               	movwf	3989,c	;volatile
  2349                           
  2350                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2351  0030A6  0EE4               	movlw	228
  2352  0030A8  010F               	movlb	15	; () banked
  2353  0030AA  6F3B               	movwf	59,b	;volatile
  2354                           
  2355                           ;pin_manager.c: 81: ANSELC = 0xF8;
  2356  0030AC  0EF8               	movlw	248
  2357  0030AE  6F3A               	movwf	58,b	;volatile
  2358                           
  2359                           ;pin_manager.c: 82: ANSELB = 0x28;
  2360  0030B0  0E28               	movlw	40
  2361  0030B2  6F39               	movwf	57,b	;volatile
  2362                           
  2363                           ;pin_manager.c: 83: ANSELE = 0x07;
  2364  0030B4  0E07               	movlw	7
  2365  0030B6  6F3C               	movwf	60,b	;volatile
  2366                           
  2367                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2368  0030B8  0E2F               	movlw	47
  2369  0030BA  6F38               	movwf	56,b	;volatile
  2370                           
  2371                           ;pin_manager.c: 89: WPUB = 0x00;
  2372  0030BC  0E00               	movlw	0
  2373  0030BE  6E61               	movwf	3937,c	;volatile
  2374                           
  2375                           ; BSR set to: 15
  2376                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2377  0030C0  8EF1               	bsf	intcon2,7,c	;volatile
  2378                           
  2379                           ; BSR set to: 15
  2380                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2381  0030C2  8862               	bsf	3938,4,c	;volatile
  2382                           
  2383                           ; BSR set to: 15
  2384                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2385  0030C4  0E9A               	movlw	low _IOCB4_DefaultInterruptHandler
  2386  0030C6  0100               	movlb	0	; () banked
  2387  0030C8  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2388  0030CA  0E38               	movlw	high _IOCB4_DefaultInterruptHandler
  2389  0030CC  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2390  0030CE  ECED  F01B         	call	_IOCB4_SetInterruptHandler	;wreg free
  2391                           
  2392                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2393  0030D2  86F2               	bsf	intcon,3,c	;volatile
  2394  0030D4  0012               	return		;funcret
  2395  0030D6                     __end_of_PIN_MANAGER_Initialize:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           intcon	equ	0xFF2
  2402                           intcon2	equ	0xFF1
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           
  2409 ;; *************** function _OSCILLATOR_Initialize *****************
  2410 ;; Defined at:
  2411 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        0 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    7
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_SYSTEM_Initialize
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text5
  2440  00379A                     __ptext5:
  2441                           	opt stack 0
  2442  00379A                     _OSCILLATOR_Initialize:
  2443                           	opt stack 22
  2444                           
  2445                           ;mcc.c: 65: OSCCON = 0x70;
  2446                           
  2447                           ;incstack = 0
  2448  00379A  0E70               	movlw	112
  2449  00379C  6ED3               	movwf	4051,c	;volatile
  2450                           
  2451                           ;mcc.c: 67: OSCCON2 = 0x04;
  2452  00379E  0E04               	movlw	4
  2453  0037A0  6ED2               	movwf	4050,c	;volatile
  2454                           
  2455                           ;mcc.c: 69: OSCTUNE = 0x00;
  2456  0037A2  0E00               	movlw	0
  2457  0037A4  6E9B               	movwf	3995,c	;volatile
  2458  0037A6  0012               	return		;funcret
  2459  0037A8                     __end_of_OSCILLATOR_Initialize:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           intcon	equ	0xFF2
  2466                           intcon2	equ	0xFF1
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec2	equ	0xFDD
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           
  2473 ;; *************** function _LORAWAN_PlatformInit *****************
  2474 ;; Defined at:
  2475 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    9
  2496 ;; This function calls:
  2497 ;;		_DIO0_ISR_Lora_Init
  2498 ;;		_DIO1_ISR_Lora_Init
  2499 ;;		_DIO2_ISR_Lora_Init
  2500 ;;		_DIO3_ISR_Lora_Init
  2501 ;;		_DIO4_ISR_Lora_Init
  2502 ;;		_DIO5_ISR_Lora_Init
  2503 ;;		_SystemTimerInit
  2504 ;;		_TMR_ISR_Lora_Init
  2505 ;; This function is called by:
  2506 ;;		_SYSTEM_Initialize
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text6
  2511  003562                     __ptext6:
  2512                           	opt stack 0
  2513  003562                     _LORAWAN_PlatformInit:
  2514                           	opt stack 20
  2515                           
  2516                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2517                           
  2518                           ;incstack = 0
  2519  003562  ECA6  F01B         	call	_TMR_ISR_Lora_Init	;wreg free
  2520                           
  2521                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2522  003566  ECBE  F01B         	call	_DIO0_ISR_Lora_Init	;wreg free
  2523                           
  2524                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2525  00356A  ECB6  F01B         	call	_DIO1_ISR_Lora_Init	;wreg free
  2526                           
  2527                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2528  00356E  ECAE  F01B         	call	_DIO2_ISR_Lora_Init	;wreg free
  2529                           
  2530                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2531  003572  EC4B  F01C         	call	_DIO3_ISR_Lora_Init	;wreg free
  2532                           
  2533                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2534  003576  EC4A  F01C         	call	_DIO4_ISR_Lora_Init	;wreg free
  2535                           
  2536                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2537  00357A  EC49  F01C         	call	_DIO5_ISR_Lora_Init	;wreg free
  2538                           
  2539                           ;lorawan_init.c: 82: SystemTimerInit();
  2540  00357E  EC29  F01C         	call	_SystemTimerInit	;wreg free
  2541  003582  0012               	return		;funcret
  2542  003584                     __end_of_LORAWAN_PlatformInit:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           intcon	equ	0xFF2
  2549                           intcon2	equ	0xFF1
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           
  2556 ;; *************** function _TMR_ISR_Lora_Init *****************
  2557 ;; Defined at:
  2558 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    8
  2579 ;; This function calls:
  2580 ;;		_TMR1_SetInterruptHandler
  2581 ;; This function is called by:
  2582 ;;		_LORAWAN_PlatformInit
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text7
  2587  00374C                     __ptext7:
  2588                           	opt stack 0
  2589  00374C                     _TMR_ISR_Lora_Init:
  2590                           	opt stack 20
  2591                           
  2592                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2593                           
  2594                           ;incstack = 0
  2595  00374C  0E78               	movlw	low _TMR_ISR_lora
  2596  00374E  0100               	movlb	0	; () banked
  2597  003750  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2598  003752  0E2F               	movlw	high _TMR_ISR_lora
  2599  003754  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2600  003756  ECE8  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  2601  00375A  0012               	return		;funcret
  2602  00375C                     __end_of_TMR_ISR_Lora_Init:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           intcon	equ	0xFF2
  2609                           intcon2	equ	0xFF1
  2610                           postinc0	equ	0xFEE
  2611                           wreg	equ	0xFE8
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           
  2616 ;; *************** function _TMR1_SetInterruptHandler *****************
  2617 ;; Defined at:
  2618 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2621 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;Total ram usage:        2 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    7
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_TMR_ISR_Lora_Init
  2644 ;;		_TMR1_Initialize
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text8
  2649  0037D0                     __ptext8:
  2650                           	opt stack 0
  2651  0037D0                     _TMR1_SetInterruptHandler:
  2652                           	opt stack 21
  2653                           
  2654                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2655                           
  2656                           ;incstack = 0
  2657  0037D0  C060  F048         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2658  0037D4  C061  F049         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2659  0037D8  0012               	return		;funcret
  2660  0037DA                     __end_of_TMR1_SetInterruptHandler:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           intcon	equ	0xFF2
  2667                           intcon2	equ	0xFF1
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postdec2	equ	0xFDD
  2671                           fsr2h	equ	0xFDA
  2672                           fsr2l	equ	0xFD9
  2673                           
  2674 ;; *************** function _SystemTimerInit *****************
  2675 ;; Defined at:
  2676 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    7
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_LORAWAN_PlatformInit
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text9
  2705  003852                     __ptext9:
  2706                           	opt stack 0
  2707  003852                     _SystemTimerInit:
  2708                           	opt stack 21
  2709                           
  2710                           ;sw_timer.c: 137: allocatedTimers = 0;
  2711                           
  2712                           ;incstack = 0
  2713  003852  0E00               	movlw	0
  2714  003854  0100               	movlb	0	; () banked
  2715  003856  6FFA               	movwf	_allocatedTimers& (0+255),b	;volatile
  2716                           
  2717                           ; BSR set to: 0
  2718  003858  0012               	return		;funcret
  2719  00385A                     __end_of_SystemTimerInit:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           intcon	equ	0xFF2
  2726                           intcon2	equ	0xFF1
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec2	equ	0xFDD
  2730                           fsr2h	equ	0xFDA
  2731                           fsr2l	equ	0xFD9
  2732                           
  2733 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2734 ;; Defined at:
  2735 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		None
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    7
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_LORAWAN_PlatformInit
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text10
  2764  003892                     __ptext10:
  2765                           	opt stack 0
  2766  003892                     _DIO5_ISR_Lora_Init:
  2767                           	opt stack 21
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;incstack = 0
  2771  003892  0012               	return		;funcret
  2772  003894                     __end_of_DIO5_ISR_Lora_Init:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           tblptrh	equ	0xFF7
  2776                           tblptrl	equ	0xFF6
  2777                           tablat	equ	0xFF5
  2778                           intcon	equ	0xFF2
  2779                           intcon2	equ	0xFF1
  2780                           postinc0	equ	0xFEE
  2781                           wreg	equ	0xFE8
  2782                           postdec2	equ	0xFDD
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           
  2786 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2787 ;; Defined at:
  2788 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		None
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    7
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_LORAWAN_PlatformInit
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text11
  2817  003894                     __ptext11:
  2818                           	opt stack 0
  2819  003894                     _DIO4_ISR_Lora_Init:
  2820                           	opt stack 21
  2821                           
  2822                           ;incstack = 0
  2823  003894  0012               	return		;funcret
  2824  003896                     __end_of_DIO4_ISR_Lora_Init:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           intcon	equ	0xFF2
  2831                           intcon2	equ	0xFF1
  2832                           postinc0	equ	0xFEE
  2833                           wreg	equ	0xFE8
  2834                           postdec2	equ	0xFDD
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           
  2838 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2839 ;; Defined at:
  2840 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		None
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    7
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_LORAWAN_PlatformInit
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text12
  2869  003896                     __ptext12:
  2870                           	opt stack 0
  2871  003896                     _DIO3_ISR_Lora_Init:
  2872                           	opt stack 21
  2873                           
  2874                           ;incstack = 0
  2875  003896  0012               	return		;funcret
  2876  003898                     __end_of_DIO3_ISR_Lora_Init:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           intcon	equ	0xFF2
  2883                           intcon2	equ	0xFF1
  2884                           postinc0	equ	0xFEE
  2885                           wreg	equ	0xFE8
  2886                           postdec2	equ	0xFDD
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           
  2890 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2891 ;; Defined at:
  2892 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    8
  2913 ;; This function calls:
  2914 ;;		_IOCB4_SetInterruptHandler
  2915 ;; This function is called by:
  2916 ;;		_LORAWAN_PlatformInit
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text13
  2921  00375C                     __ptext13:
  2922                           	opt stack 0
  2923  00375C                     _DIO2_ISR_Lora_Init:
  2924                           	opt stack 20
  2925                           
  2926                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2927                           
  2928                           ;incstack = 0
  2929  00375C  0E86               	movlw	low _DIO2_ISR_Lora
  2930  00375E  0100               	movlb	0	; () banked
  2931  003760  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2932  003762  0E38               	movlw	high _DIO2_ISR_Lora
  2933  003764  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2934  003766  ECED  F01B         	call	_IOCB4_SetInterruptHandler	;wreg free
  2935  00376A  0012               	return		;funcret
  2936  00376C                     __end_of_DIO2_ISR_Lora_Init:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           intcon	equ	0xFF2
  2943                           intcon2	equ	0xFF1
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postdec2	equ	0xFDD
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           
  2950 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2951 ;; Defined at:
  2952 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2955 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    7
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_DIO2_ISR_Lora_Init
  2978 ;;		_PIN_MANAGER_Initialize
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text14
  2983  0037DA                     __ptext14:
  2984                           	opt stack 0
  2985  0037DA                     _IOCB4_SetInterruptHandler:
  2986                           	opt stack 21
  2987                           
  2988                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  2989                           
  2990                           ;incstack = 0
  2991  0037DA  C060  F04C         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2992  0037DE  C061  F04D         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2993  0037E2  0012               	return		;funcret
  2994  0037E4                     __end_of_IOCB4_SetInterruptHandler:
  2995                           	opt stack 0
  2996                           tblptru	equ	0xFF8
  2997                           tblptrh	equ	0xFF7
  2998                           tblptrl	equ	0xFF6
  2999                           tablat	equ	0xFF5
  3000                           intcon	equ	0xFF2
  3001                           intcon2	equ	0xFF1
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           postdec2	equ	0xFDD
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           
  3008 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3009 ;; Defined at:
  3010 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    8
  3031 ;; This function calls:
  3032 ;;		_INT2_SetInterruptHandler
  3033 ;; This function is called by:
  3034 ;;		_LORAWAN_PlatformInit
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text15
  3039  00376C                     __ptext15:
  3040                           	opt stack 0
  3041  00376C                     _DIO1_ISR_Lora_Init:
  3042                           	opt stack 20
  3043                           
  3044                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3045                           
  3046                           ;incstack = 0
  3047  00376C  0E8A               	movlw	low _DIO1_ISR_Lora
  3048  00376E  0100               	movlb	0	; () banked
  3049  003770  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3050  003772  0E38               	movlw	high _DIO1_ISR_Lora
  3051  003774  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3052  003776  ECF2  F01B         	call	_INT2_SetInterruptHandler	;wreg free
  3053  00377A  0012               	return		;funcret
  3054  00377C                     __end_of_DIO1_ISR_Lora_Init:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           intcon	equ	0xFF2
  3061                           intcon2	equ	0xFF1
  3062                           postinc0	equ	0xFEE
  3063                           wreg	equ	0xFE8
  3064                           postdec2	equ	0xFDD
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           
  3068 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3069 ;; Defined at:
  3070 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    8
  3091 ;; This function calls:
  3092 ;;		_INT1_SetInterruptHandler
  3093 ;; This function is called by:
  3094 ;;		_LORAWAN_PlatformInit
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text16
  3099  00377C                     __ptext16:
  3100                           	opt stack 0
  3101  00377C                     _DIO0_ISR_Lora_Init:
  3102                           	opt stack 20
  3103                           
  3104                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3105                           
  3106                           ;incstack = 0
  3107  00377C  0E8E               	movlw	low _DIO0_ISR_Lora
  3108  00377E  0100               	movlb	0	; () banked
  3109  003780  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3110  003782  0E38               	movlw	high _DIO0_ISR_Lora
  3111  003784  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3112  003786  ECF7  F01B         	call	_INT1_SetInterruptHandler	;wreg free
  3113  00378A  0012               	return		;funcret
  3114  00378C                     __end_of_DIO0_ISR_Lora_Init:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           intcon	equ	0xFF2
  3121                           intcon2	equ	0xFF1
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           postdec2	equ	0xFDD
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           
  3128 ;; *************** function _INTERRUPT_Initialize *****************
  3129 ;; Defined at:
  3130 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		None
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    7
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_SYSTEM_Initialize
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text17
  3159  003872                     __ptext17:
  3160                           	opt stack 0
  3161  003872                     _INTERRUPT_Initialize:
  3162                           	opt stack 22
  3163                           
  3164                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3165                           
  3166                           ;incstack = 0
  3167  003872  9ED0               	bcf	4048,7,c	;volatile
  3168  003874  0012               	return		;funcret
  3169  003876                     __end_of_INTERRUPT_Initialize:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           postdec2	equ	0xFDD
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           
  3183 ;; *************** function _EXT_INT_Initialize *****************
  3184 ;; Defined at:
  3185 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    8
  3206 ;; This function calls:
  3207 ;;		_INT1_SetInterruptHandler
  3208 ;;		_INT2_SetInterruptHandler
  3209 ;; This function is called by:
  3210 ;;		_SYSTEM_Initialize
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text18
  3215  0034E8                     __ptext18:
  3216                           	opt stack 0
  3217  0034E8                     _EXT_INT_Initialize:
  3218                           	opt stack 21
  3219                           
  3220                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3221                           
  3222                           ;incstack = 0
  3223  0034E8  90F0               	bcf	intcon3,0,c	;volatile
  3224                           
  3225                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3226  0034EA  8AF1               	bsf	intcon2,5,c	;volatile
  3227                           
  3228                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3229  0034EC  0E9E               	movlw	low _INT1_DefaultInterruptHandler
  3230  0034EE  0100               	movlb	0	; () banked
  3231  0034F0  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3232  0034F2  0E38               	movlw	high _INT1_DefaultInterruptHandler
  3233  0034F4  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3234  0034F6  ECF7  F01B         	call	_INT1_SetInterruptHandler	;wreg free
  3235                           
  3236                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3237  0034FA  86F0               	bsf	intcon3,3,c	;volatile
  3238                           
  3239                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3240  0034FC  92F0               	bcf	intcon3,1,c	;volatile
  3241                           
  3242                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3243  0034FE  88F1               	bsf	intcon2,4,c	;volatile
  3244                           
  3245                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3246  003500  0E9C               	movlw	low _INT2_DefaultInterruptHandler
  3247  003502  0100               	movlb	0	; () banked
  3248  003504  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3249  003506  0E38               	movlw	high _INT2_DefaultInterruptHandler
  3250  003508  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3251  00350A  ECF2  F01B         	call	_INT2_SetInterruptHandler	;wreg free
  3252                           
  3253                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3254  00350E  88F0               	bsf	intcon3,4,c	;volatile
  3255  003510  0012               	return		;funcret
  3256  003512                     __end_of_EXT_INT_Initialize:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           intcon	equ	0xFF2
  3263                           intcon2	equ	0xFF1
  3264                           intcon3	equ	0xFF0
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           
  3271 ;; *************** function _INT2_SetInterruptHandler *****************
  3272 ;; Defined at:
  3273 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3276 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:        2 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    7
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_DIO1_ISR_Lora_Init
  3299 ;;		_EXT_INT_Initialize
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text19
  3304  0037E4                     __ptext19:
  3305                           	opt stack 0
  3306  0037E4                     _INT2_SetInterruptHandler:
  3307                           	opt stack 20
  3308                           
  3309                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3310                           
  3311                           ;incstack = 0
  3312  0037E4  C060  F04E         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3313  0037E8  C061  F04F         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3314  0037EC  0012               	return		;funcret
  3315  0037EE                     __end_of_INT2_SetInterruptHandler:
  3316                           	opt stack 0
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           intcon	equ	0xFF2
  3322                           intcon2	equ	0xFF1
  3323                           intcon3	equ	0xFF0
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           postdec2	equ	0xFDD
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           
  3330 ;; *************** function _INT1_SetInterruptHandler *****************
  3331 ;; Defined at:
  3332 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3335 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        2 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    7
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_DIO0_ISR_Lora_Init
  3358 ;;		_EXT_INT_Initialize
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text20
  3363  0037EE                     __ptext20:
  3364                           	opt stack 0
  3365  0037EE                     _INT1_SetInterruptHandler:
  3366                           	opt stack 20
  3367                           
  3368                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3369                           
  3370                           ;incstack = 0
  3371  0037EE  C060  F050         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3372  0037F2  C061  F051         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3373  0037F6  0012               	return		;funcret
  3374  0037F8                     __end_of_INT1_SetInterruptHandler:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           intcon	equ	0xFF2
  3381                           intcon2	equ	0xFF1
  3382                           intcon3	equ	0xFF0
  3383                           postinc0	equ	0xFEE
  3384                           wreg	equ	0xFE8
  3385                           postdec2	equ	0xFDD
  3386                           fsr2h	equ	0xFDA
  3387                           fsr2l	equ	0xFD9
  3388                           
  3389 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  3390 ;; Defined at:
  3391 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  3394 ;;		 -> nwkSKey(16), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    8
  3413 ;; This function calls:
  3414 ;;		_memcpy
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text21
  3421  003460                     __ptext21:
  3422                           	opt stack 0
  3423  003460                     _LORAWAN_SetNetworkSessionKey:
  3424                           	opt stack 22
  3425                           
  3426                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  3427                           
  3428                           ;incstack = 0
  3429  003460  0100               	movlb	0	; () banked
  3430  003462  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  3431  003464  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  3432  003466  B4D8               	btfsc	status,2,c
  3433  003468  0012               	return	
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;lorawan.c: 382: {
  3437                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  3438  00346A  0E22               	movlw	low (_loRa+34)
  3439  00346C  6F60               	movwf	memcpy@d1& (0+255),b
  3440  00346E  0E02               	movlw	high (_loRa+34)
  3441  003470  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3442  003472  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  3443  003476  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  3444  00347A  0E00               	movlw	0
  3445  00347C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3446  00347E  0E10               	movlw	16
  3447  003480  6F64               	movwf	memcpy@n& (0+255),b
  3448  003482  EC8C  F017         	call	_memcpy	;wreg free
  3449                           
  3450                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  3451  003486  0102               	movlb	2	; () banked
  3452  003488  89A5               	bsf	(_loRa+165)& (0+255),4,b
  3453                           
  3454                           ; BSR set to: 2
  3455                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  3456  00348A  9902               	bcf	(_loRa+2)& (0+255),4,b
  3457  00348C  0012               	return	
  3458  00348E                     __end_of_LORAWAN_SetNetworkSessionKey:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           intcon	equ	0xFF2
  3465                           intcon2	equ	0xFF1
  3466                           intcon3	equ	0xFF0
  3467                           postinc0	equ	0xFEE
  3468                           wreg	equ	0xFE8
  3469                           postdec2	equ	0xFDD
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  3475 ;; Defined at:
  3476 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		None
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:        4 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    7
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text22
  3505  00370E                     __ptext22:
  3506                           	opt stack 0
  3507  00370E                     _LORAWAN_SetDeviceAddress:
  3508                           	opt stack 23
  3509                           
  3510                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  3511                           
  3512                           ;incstack = 0
  3513  00370E  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  3514  003712  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  3515  003716  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  3516  00371A  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  3517                           
  3518                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  3519  00371E  0102               	movlb	2	; () banked
  3520  003720  85A5               	bsf	(_loRa+165)& (0+255),2,b
  3521                           
  3522                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  3523  003722  9902               	bcf	(_loRa+2)& (0+255),4,b
  3524                           
  3525                           ; BSR set to: 2
  3526  003724  0012               	return		;funcret
  3527  003726                     __end_of_LORAWAN_SetDeviceAddress:
  3528                           	opt stack 0
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           intcon3	equ	0xFF0
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           postdec2	equ	0xFDD
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  3544 ;; Defined at:
  3545 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  3548 ;;		 -> appSKey(16), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        2 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    8
  3567 ;; This function calls:
  3568 ;;		_memcpy
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text23
  3575  00348E                     __ptext23:
  3576                           	opt stack 0
  3577  00348E                     _LORAWAN_SetApplicationSessionKey:
  3578                           	opt stack 22
  3579                           
  3580                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  3581                           
  3582                           ; BSR set to: 2
  3583                           ;incstack = 0
  3584  00348E  0100               	movlb	0	; () banked
  3585  003490  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  3586  003492  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  3587  003494  B4D8               	btfsc	status,2,c
  3588  003496  0012               	return	
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;lorawan.c: 397: {
  3592                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  3593  003498  0E32               	movlw	low (_loRa+50)
  3594  00349A  6F60               	movwf	memcpy@d1& (0+255),b
  3595  00349C  0E02               	movlw	high (_loRa+50)
  3596  00349E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3597  0034A0  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  3598  0034A4  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  3599  0034A8  0E00               	movlw	0
  3600  0034AA  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3601  0034AC  0E10               	movlw	16
  3602  0034AE  6F64               	movwf	memcpy@n& (0+255),b
  3603  0034B0  EC8C  F017         	call	_memcpy	;wreg free
  3604                           
  3605                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  3606  0034B4  0102               	movlb	2	; () banked
  3607  0034B6  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  3608                           
  3609                           ; BSR set to: 2
  3610                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  3611  0034B8  9902               	bcf	(_loRa+2)& (0+255),4,b
  3612  0034BA  0012               	return	
  3613  0034BC                     __end_of_LORAWAN_SetApplicationSessionKey:
  3614                           	opt stack 0
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           intcon	equ	0xFF2
  3620                           intcon2	equ	0xFF1
  3621                           intcon3	equ	0xFF0
  3622                           postinc0	equ	0xFEE
  3623                           wreg	equ	0xFE8
  3624                           postdec2	equ	0xFDD
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function _LORAWAN_Join *****************
  3630 ;; Defined at:
  3631 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  activationTy    1    wreg     enum E7213
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  activationTy    1  125[BANK0 ] enum E7213
  3636 ;;  result          1  124[BANK0 ] enum E7190
  3637 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      enum E7190
  3640 ;; Registers used:
  3641 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:        3 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:   14
  3654 ;; This function calls:
  3655 ;;		_PrepareJoinRequestFrame
  3656 ;;		_RADIO_Transmit
  3657 ;;		_SelectChannelForTransmission
  3658 ;;		_SwTimerSetTimeout
  3659 ;;		_SwTimerStart
  3660 ;;		_UpdateJoinInProgress
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text24
  3667  00269C                     __ptext24:
  3668                           	opt stack 0
  3669  00269C                     _LORAWAN_Join:
  3670                           	opt stack 16
  3671                           
  3672                           ;incstack = 0
  3673                           ;LORAWAN_Join@activationTypeNew stored from wreg
  3674  00269C  0100               	movlb	0	; () banked
  3675  00269E  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
  3676                           
  3677                           ;lorawan.c: 117: uint8_t bufferIndex;
  3678                           ;lorawan.c: 118: LorawanError_t result;
  3679                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
  3680  0026A0  0102               	movlb	2	; () banked
  3681  0026A2  B103               	btfsc	(_loRa+3)& (0+255),0,b
  3682  0026A4  0012               	return	
  3683                           
  3684                           ; BSR set to: 2
  3685                           ;lorawan.c: 123: }
  3686                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
  3687                           
  3688                           ; BSR set to: 2
  3689                           ;lorawan.c: 121: {
  3690                           ;lorawan.c: 122: return MAC_PAUSED;
  3691                           ;	Return value of _LORAWAN_Join is never used
  3692  0026A6  BF02               	btfsc	(_loRa+2)& (0+255),7,b
  3693  0026A8  0012               	return	
  3694                           
  3695                           ; BSR set to: 2
  3696                           ;lorawan.c: 128: }
  3697                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
  3698                           
  3699                           ; BSR set to: 2
  3700                           
  3701                           ; BSR set to: 2
  3702                           ;lorawan.c: 126: {
  3703                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
  3704                           ;	Return value of _LORAWAN_Join is never used
  3705  0026AA  5102               	movf	(_loRa+2)& (0+255),w,b
  3706  0026AC  0B0F               	andlw	15
  3707  0026AE  0900               	iorlw	0
  3708  0026B0  A4D8               	btfss	status,2,c
  3709  0026B2  0012               	return	
  3710                           
  3711                           ; BSR set to: 2
  3712                           ;lorawan.c: 133: }
  3713                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
  3714                           
  3715                           ; BSR set to: 2
  3716                           ;lorawan.c: 131: {
  3717                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
  3718                           ;	Return value of _LORAWAN_Join is never used
  3719  0026B4  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
  3720                           
  3721                           ; BSR set to: 2
  3722                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
  3723  0026B8  0100               	movlb	0	; () banked
  3724  0026BA  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
  3725  0026BC  A4D8               	btfss	status,2,c
  3726  0026BE  D024               	goto	l1499
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;lorawan.c: 138: {
  3730                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
  3731  0026C0  0102               	movlb	2	; () banked
  3732  0026C2  A1A5               	btfss	(_loRa+165)& (0+255),0,b
  3733  0026C4  0012               	return	
  3734                           
  3735                           ; BSR set to: 2
  3736  0026C6  A3A5               	btfss	(_loRa+165)& (0+255),1,b
  3737  0026C8  0012               	return	
  3738                           
  3739                           ; BSR set to: 2
  3740  0026CA  A7A5               	btfss	(_loRa+165)& (0+255),3,b
  3741  0026CC  0012               	return	
  3742                           
  3743                           ; BSR set to: 2
  3744                           ;lorawan.c: 144: else
  3745                           ;lorawan.c: 145: {
  3746                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
  3747                           
  3748                           ; BSR set to: 2
  3749                           
  3750                           ; BSR set to: 2
  3751                           ;lorawan.c: 143: }
  3752                           
  3753                           ; BSR set to: 2
  3754                           ;lorawan.c: 141: {
  3755                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
  3756                           ;	Return value of _LORAWAN_Join is never used
  3757  0026CE  EC73  F00A         	call	_PrepareJoinRequestFrame	;wreg free
  3758  0026D2  0100               	movlb	0	; () banked
  3759  0026D4  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
  3760                           
  3761                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
  3762  0026D6  0E00               	movlw	0
  3763  0026D8  EC26  F016         	call	_SelectChannelForTransmission
  3764  0026DC  0100               	movlb	0	; () banked
  3765  0026DE  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;lorawan.c: 149: if (result == OK)
  3769  0026E0  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
  3770  0026E2  A4D8               	btfss	status,2,c
  3771  0026E4  0012               	return	
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;lorawan.c: 150: {
  3775                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
  3776  0026E6  0EE0               	movlw	low _macBuffer
  3777  0026E8  6F9A               	movwf	RADIO_Transmit@buffer& (0+255),b
  3778  0026EA  0E04               	movlw	high _macBuffer
  3779  0026EC  6F9B               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  3780  0026EE  C0DB  F09C         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
  3781  0026F2  EC8B  F007         	call	_RADIO_Transmit	;wreg free
  3782  0026F6  0100               	movlb	0	; () banked
  3783  0026F8  519A               	movf	?_RADIO_Transmit& (0+255),w,b
  3784  0026FA  119B               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  3785  0026FC  A4D8               	btfss	status,2,c
  3786  0026FE  0012               	return	
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;lorawan.c: 152: {
  3790                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
  3791  002700  0E01               	movlw	1
  3792  002702  EC6D  F01B         	call	_UpdateJoinInProgress
  3793                           
  3794                           ;lorawan.c: 164: }
  3795                           ;lorawan.c: 165: }
  3796                           ;lorawan.c: 166: }
  3797                           
  3798                           ;lorawan.c: 161: else
  3799                           ;lorawan.c: 162: {
  3800                           ;lorawan.c: 163: return result;
  3801                           ;	Return value of _LORAWAN_Join is never used
  3802                           
  3803                           ;lorawan.c: 159: }
  3804                           ;lorawan.c: 160: }
  3805                           
  3806                           ;lorawan.c: 156: else
  3807                           ;lorawan.c: 157: {
  3808                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
  3809                           ;	Return value of _LORAWAN_Join is never used
  3810                           
  3811                           ;lorawan.c: 155: }
  3812                           
  3813                           ;lorawan.c: 154: return OK;
  3814                           ;	Return value of _LORAWAN_Join is never used
  3815  002706  0012               	return	
  3816  002708                     l1499:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;lorawan.c: 167: else
  3820                           ;lorawan.c: 168: {
  3821                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
  3822  002708  0102               	movlb	2	; () banked
  3823  00270A  ABA5               	btfss	(_loRa+165)& (0+255),5,b
  3824  00270C  0012               	return	
  3825                           
  3826                           ; BSR set to: 2
  3827  00270E  A9A5               	btfss	(_loRa+165)& (0+255),4,b
  3828  002710  0012               	return	
  3829                           
  3830                           ; BSR set to: 2
  3831  002712  A5A5               	btfss	(_loRa+165)& (0+255),2,b
  3832  002714  0012               	return	
  3833                           
  3834                           ; BSR set to: 2
  3835                           ;lorawan.c: 174: else
  3836                           ;lorawan.c: 175: {
  3837                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
  3838                           
  3839                           ; BSR set to: 2
  3840                           
  3841                           ; BSR set to: 2
  3842                           ;lorawan.c: 173: }
  3843                           
  3844                           ; BSR set to: 2
  3845                           ;lorawan.c: 171: {
  3846                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
  3847                           ;	Return value of _LORAWAN_Join is never used
  3848  002716  0E07               	movlw	7
  3849  002718  EC6D  F01B         	call	_UpdateJoinInProgress
  3850                           
  3851                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
  3852  00271C  0E8F               	movlw	143
  3853  00271E  0100               	movlb	0	; () banked
  3854  002720  6F60               	movwf	SwTimerSetTimeout@timeout& (0+255),b
  3855  002722  0E02               	movlw	2
  3856  002724  6F61               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
  3857  002726  0E00               	movlw	0
  3858  002728  6F62               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
  3859  00272A  0E00               	movlw	0
  3860  00272C  6F63               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
  3861  00272E  0102               	movlb	2	; () banked
  3862  002730  51F3               	movf	(_loRa+243)& (0+255),w,b
  3863  002732  EC6F  F019         	call	_SwTimerSetTimeout
  3864                           
  3865                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
  3866  002736  0102               	movlb	2	; () banked
  3867  002738  51F3               	movf	(_loRa+243)& (0+255),w,b
  3868  00273A  ECF2  F013         	call	_SwTimerStart
  3869                           
  3870                           ;lorawan.c: 180: return OK;
  3871                           ;	Return value of _LORAWAN_Join is never used
  3872  00273E  0012               	return	
  3873  002740                     __end_of_LORAWAN_Join:
  3874                           	opt stack 0
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           intcon	equ	0xFF2
  3880                           intcon2	equ	0xFF1
  3881                           intcon3	equ	0xFF0
  3882                           postinc0	equ	0xFEE
  3883                           wreg	equ	0xFE8
  3884                           postdec2	equ	0xFDD
  3885                           fsr2h	equ	0xFDA
  3886                           fsr2l	equ	0xFD9
  3887                           status	equ	0xFD8
  3888                           
  3889 ;; *************** function _UpdateJoinInProgress *****************
  3890 ;; Defined at:
  3891 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  state           1    wreg     unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  state           1    0[BANK0 ] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;Total ram usage:        1 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    7
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_LORAWAN_Join
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text25
  3920  0036DA                     __ptext25:
  3921                           	opt stack 0
  3922  0036DA                     _UpdateJoinInProgress:
  3923                           	opt stack 22
  3924                           
  3925                           ;incstack = 0
  3926                           ;UpdateJoinInProgress@state stored from wreg
  3927  0036DA  0100               	movlb	0	; () banked
  3928  0036DC  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
  3929                           
  3930                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
  3931  0036DE  0102               	movlb	2	; () banked
  3932  0036E0  9902               	bcf	(_loRa+2)& (0+255),4,b
  3933                           
  3934                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
  3935  0036E2  8500               	bsf	_loRa& (0+255),2,b
  3936                           
  3937                           ; BSR set to: 2
  3938                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
  3939  0036E4  5102               	movf	(_loRa+2)& (0+255),w,b
  3940  0036E6  0100               	movlb	0	; () banked
  3941  0036E8  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
  3942  0036EA  0BF0               	andlw	-16
  3943  0036EC  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
  3944  0036EE  0102               	movlb	2	; () banked
  3945  0036F0  6F02               	movwf	(_loRa+2)& (0+255),b
  3946                           
  3947                           ; BSR set to: 2
  3948  0036F2  0012               	return		;funcret
  3949  0036F4                     __end_of_UpdateJoinInProgress:
  3950                           	opt stack 0
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           intcon	equ	0xFF2
  3956                           intcon2	equ	0xFF1
  3957                           intcon3	equ	0xFF0
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _SelectChannelForTransmission *****************
  3966 ;; Defined at:
  3967 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  transmission    1    wreg     unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  transmission    1   33[BANK0 ] unsigned char 
  3972 ;;  channelIndex    1   35[BANK0 ] unsigned char 
  3973 ;;  result          1   34[BANK0 ] enum E7249
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      enum E7249
  3976 ;; Registers used:
  3977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        3 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:   11
  3990 ;; This function calls:
  3991 ;;		_ConfigureRadioTx
  3992 ;;		_SearchAvailableChannel
  3993 ;; This function is called by:
  3994 ;;		_LORAWAN_RxTimeout
  3995 ;;		_LORAWAN_Join
  3996 ;;		_AckRetransmissionCallback
  3997 ;;		_UnconfirmedTransmissionCallback
  3998 ;;		_LORAWAN_Send
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text26
  4003  002C4C                     __ptext26:
  4004                           	opt stack 0
  4005  002C4C                     _SelectChannelForTransmission:
  4006                           	opt stack 18
  4007                           
  4008                           ; BSR set to: 2
  4009                           ;incstack = 0
  4010                           ;SelectChannelForTransmission@transmissionType stored from wreg
  4011  002C4C  0100               	movlb	0	; () banked
  4012  002C4E  6F81               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
  4013                           
  4014                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
  4015  002C50  0E00               	movlw	0
  4016  002C52  0100               	movlb	0	; () banked
  4017  002C54  6F82               	movwf	SelectChannelForTransmission@result& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;lorawan_eu.c: 922: uint8_t channelIndex;
  4021                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
  4022  002C56  C081  F075         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
  4023  002C5A  0E83               	movlw	low SelectChannelForTransmission@channelIndex
  4024  002C5C  6F76               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
  4025  002C5E  0E00               	movlw	high SelectChannelForTransmission@channelIndex
  4026  002C60  6F77               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
  4027  002C62  0E10               	movlw	16
  4028  002C64  ECAC  F00E         	call	_SearchAvailableChannel
  4029  002C68  0100               	movlb	0	; () banked
  4030  002C6A  6F82               	movwf	SelectChannelForTransmission@result& (0+255),b
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;lorawan_eu.c: 926: if (result == OK)
  4034  002C6C  5182               	movf	SelectChannelForTransmission@result& (0+255),w,b
  4035  002C6E  A4D8               	btfss	status,2,c
  4036  002C70  D020               	goto	l1185
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;lorawan_eu.c: 927: {
  4040                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
  4041  002C72  C083  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
  4045  002C76  5183               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
  4046  002C78  0D0E               	mullw	14
  4047  002C7A  0E00               	movlw	low _Channels
  4048  002C7C  24F3               	addwf	prodl,w,c
  4049  002C7E  6ED9               	movwf	fsr2l,c
  4050  002C80  0E04               	movlw	high _Channels
  4051  002C82  20F4               	addwfc	prodh,w,c
  4052  002C84  6EDA               	movwf	fsr2h,c
  4053  002C86  CFDE F213          	movff	postinc2,_loRa+19
  4054  002C8A  CFDE F214          	movff	postinc2,_loRa+20
  4055  002C8E  CFDE F215          	movff	postinc2,_loRa+21
  4056  002C92  CFDE F216          	movff	postinc2,_loRa+22
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
  4060  002C96  C2DF  F217         	movff	_loRa+223,_loRa+23
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
  4064  002C9A  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
  4065  002C9E  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
  4066  002CA2  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
  4067  002CA6  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
  4068  002CAA  0102               	movlb	2	; () banked
  4069  002CAC  5117               	movf	(_loRa+23)& (0+255),w,b
  4070  002CAE  EC6B  F018         	call	_ConfigureRadioTx
  4071  002CB2                     l1185:
  4072                           
  4073                           ;lorawan_eu.c: 933: }
  4074                           ;lorawan_eu.c: 934: return result;
  4075  002CB2  0100               	movlb	0	; () banked
  4076  002CB4  5182               	movf	SelectChannelForTransmission@result& (0+255),w,b
  4077  002CB6  0012               	return	
  4078  002CB8                     __end_of_SelectChannelForTransmission:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           intcon	equ	0xFF2
  4087                           intcon2	equ	0xFF1
  4088                           intcon3	equ	0xFF0
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _SearchAvailableChannel *****************
  4098 ;; Defined at:
  4099 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  maxChannels     1    wreg     unsigned char 
  4102 ;;  transmission    1   21[BANK0 ] unsigned char 
  4103 ;;  channelIndex    2   22[BANK0 ] PTR unsigned char 
  4104 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  maxChannels     1   30[BANK0 ] unsigned char 
  4107 ;;  i               1   32[BANK0 ] unsigned char 
  4108 ;;  randomNumber    1   31[BANK0 ] unsigned char 
  4109 ;;  result          1   29[BANK0 ] enum E7249
  4110 ;;  randomNumber    1   28[BANK0 ] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      enum E7249
  4113 ;; Registers used:
  4114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4120 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;Total ram usage:       12 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:   10
  4127 ;; This function calls:
  4128 ;;		_Random
  4129 ;; This function is called by:
  4130 ;;		_SelectChannelForTransmission
  4131 ;;		_LORAWAN_RxDone
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text27
  4136  001D58                     __ptext27:
  4137                           	opt stack 0
  4138  001D58                     _SearchAvailableChannel:
  4139                           	opt stack 18
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143                           ;SearchAvailableChannel@maxChannels stored from wreg
  4144  001D58  0100               	movlb	0	; () banked
  4145  001D5A  6F7E               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
  4146                           
  4147                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
  4148                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
  4149  001D5C  0E00               	movlw	0
  4150  001D5E  0100               	movlb	0	; () banked
  4151  001D60  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
  4155  001D62  C07E  F073         	movff	SearchAvailableChannel@maxChannels,Random@max
  4156  001D66  6B74               	clrf	(Random@max+1)& (0+255),b
  4157  001D68  ECC2  F01A         	call	_Random	;wreg free
  4158  001D6C  0100               	movlb	0	; () banked
  4159  001D6E  2973               	incf	?_Random& (0+255),w,b
  4160  001D70  6F7F               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
  4164  001D72  C07F  F07C         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
  4165                           
  4166                           ;lorawan_eu.c: 786: while (randomNumber)
  4167  001D76  D074               	goto	l1149
  4168  001D78                     
  4169                           ; BSR set to: 0
  4170                           ;lorawan_eu.c: 787: {
  4171                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
  4172                           
  4173                           ; BSR set to: 0
  4174  001D78  0E00               	movlw	0
  4175  001D7A  6F80               	movwf	SearchAvailableChannel@i& (0+255),b
  4176  001D7C  D063               	goto	l1140
  4177  001D7E                     
  4178                           ; BSR set to: 0
  4179                           ;lorawan_eu.c: 789: {
  4180                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
  4181                           
  4182                           ; BSR set to: 0
  4183  001D7E  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4184  001D80  0D0E               	mullw	14
  4185  001D82  0E04               	movlw	4
  4186  001D84  26F3               	addwf	prodl,f,c
  4187  001D86  0E00               	movlw	0
  4188  001D88  22F4               	addwfc	prodh,f,c
  4189  001D8A  0E00               	movlw	low _Channels
  4190  001D8C  24F3               	addwf	prodl,w,c
  4191  001D8E  6ED9               	movwf	fsr2l,c
  4192  001D90  0E04               	movlw	high _Channels
  4193  001D92  20F4               	addwfc	prodh,w,c
  4194  001D94  6EDA               	movwf	fsr2h,c
  4195  001D96  04DE               	decf	postinc2,w,c
  4196  001D98  A4D8               	btfss	status,2,c
  4197  001D9A  D052               	goto	l1145
  4198                           
  4199                           ; BSR set to: 0
  4200  001D9C  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4201  001D9E  0D0E               	mullw	14
  4202  001DA0  0E08               	movlw	8
  4203  001DA2  26F3               	addwf	prodl,f,c
  4204  001DA4  0E00               	movlw	0
  4205  001DA6  22F4               	addwfc	prodh,f,c
  4206  001DA8  0E00               	movlw	low _Channels
  4207  001DAA  24F3               	addwf	prodl,w,c
  4208  001DAC  6ED9               	movwf	fsr2l,c
  4209  001DAE  0E04               	movlw	high _Channels
  4210  001DB0  20F4               	addwfc	prodh,w,c
  4211  001DB2  6EDA               	movwf	fsr2h,c
  4212  001DB4  50DE               	movf	postinc2,w,c
  4213  001DB6  10DE               	iorwf	postinc2,w,c
  4214  001DB8  10DE               	iorwf	postinc2,w,c
  4215  001DBA  10DE               	iorwf	postinc2,w,c
  4216  001DBC  A4D8               	btfss	status,2,c
  4217  001DBE  D040               	goto	l1145
  4218                           
  4219                           ; BSR set to: 0
  4220  001DC0  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4221  001DC2  0D0E               	mullw	14
  4222  001DC4  0E05               	movlw	5
  4223  001DC6  26F3               	addwf	prodl,f,c
  4224  001DC8  0E00               	movlw	0
  4225  001DCA  22F4               	addwfc	prodh,f,c
  4226  001DCC  0E00               	movlw	low _Channels
  4227  001DCE  24F3               	addwf	prodl,w,c
  4228  001DD0  6ED9               	movwf	fsr2l,c
  4229  001DD2  0E04               	movlw	high _Channels
  4230  001DD4  20F4               	addwfc	prodh,w,c
  4231  001DD6  6EDA               	movwf	fsr2h,c
  4232  001DD8  0104               	movlb	4	; () banked
  4233  001DDA  50DF               	movf	223,w,c
  4234  001DDC  0B0F               	andlw	15
  4235  001DDE  0100               	movlb	0	; () banked
  4236  001DE0  6F78               	movwf	??_SearchAvailableChannel& (0+255),b
  4237  001DE2  5178               	movf	??_SearchAvailableChannel& (0+255),w,b
  4238  001DE4  0102               	movlb	2	; () banked
  4239  001DE6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
  4240  001DE8  A0D8               	btfss	status,0,c
  4241  001DEA  D02A               	goto	l1145
  4242                           
  4243                           ; BSR set to: 2
  4244  001DEC  0100               	movlb	0	; () banked
  4245  001DEE  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4246  001DF0  0D0E               	mullw	14
  4247  001DF2  0E05               	movlw	5
  4248  001DF4  26F3               	addwf	prodl,f,c
  4249  001DF6  0E00               	movlw	0
  4250  001DF8  22F4               	addwfc	prodh,f,c
  4251  001DFA  0E00               	movlw	low _Channels
  4252  001DFC  24F3               	addwf	prodl,w,c
  4253  001DFE  6ED9               	movwf	fsr2l,c
  4254  001E00  0E04               	movlw	high _Channels
  4255  001E02  20F4               	addwfc	prodh,w,c
  4256  001E04  6EDA               	movwf	fsr2h,c
  4257  001E06  0104               	movlb	4	; () banked
  4258  001E08  38DF               	swapf	223,w,c
  4259  001E0A  0B0F               	andlw	15
  4260  001E0C  0100               	movlb	0	; () banked
  4261  001E0E  6F78               	movwf	??_SearchAvailableChannel& (0+255),b
  4262  001E10  0102               	movlb	2	; () banked
  4263  001E12  51DF               	movf	(_loRa+223)& (0+255),w,b
  4264  001E14  0100               	movlb	0	; () banked
  4265  001E16  5D78               	subwf	??_SearchAvailableChannel& (0+255),w,b
  4266  001E18  A0D8               	btfss	status,0,c
  4267  001E1A  D012               	goto	l1145
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;lorawan_eu.c: 791: {
  4271                           ;lorawan_eu.c: 792: if (transmissionType == 0)
  4272  001E1C  5175               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
  4273  001E1E  A4D8               	btfss	status,2,c
  4274  001E20  D00E               	goto	l1143
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;lorawan_eu.c: 793: {
  4278                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
  4279  001E22  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4280  001E24  0D0E               	mullw	14
  4281  001E26  0E0C               	movlw	12
  4282  001E28  26F3               	addwf	prodl,f,c
  4283  001E2A  0E00               	movlw	0
  4284  001E2C  22F4               	addwfc	prodh,f,c
  4285  001E2E  0E00               	movlw	low _Channels
  4286  001E30  24F3               	addwf	prodl,w,c
  4287  001E32  6ED9               	movwf	fsr2l,c
  4288  001E34  0E04               	movlw	high _Channels
  4289  001E36  20F4               	addwfc	prodh,w,c
  4290  001E38  6EDA               	movwf	fsr2h,c
  4291  001E3A  04DE               	decf	postinc2,w,c
  4292  001E3C  B4D8               	btfsc	status,2,c
  4293  001E3E                     l1143:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;lorawan_eu.c: 799: else
  4297                           ;lorawan_eu.c: 800: {
  4298                           ;lorawan_eu.c: 801: randomNumber --;
  4299                           
  4300                           ; BSR set to: 0
  4301  001E3E  077F               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
  4302  001E40                     l1145:
  4303                           
  4304                           ; BSR set to: 0
  4305  001E40  0100               	movlb	0	; () banked
  4306  001E42  2B80               	incf	SearchAvailableChannel@i& (0+255),f,b
  4307  001E44                     l1140:
  4308                           
  4309                           ; BSR set to: 0
  4310                           
  4311                           ; BSR set to: 0
  4312  001E44  517E               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
  4313  001E46  5D80               	subwf	SearchAvailableChannel@i& (0+255),w,b
  4314  001E48  B0D8               	btfsc	status,0,c
  4315  001E4A  D003               	goto	u11230
  4316                           
  4317                           ; BSR set to: 0
  4318  001E4C  517F               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4319  001E4E  A4D8               	btfss	status,2,c
  4320  001E50  D796               	goto	l1141
  4321  001E52                     u11230:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;lorawan_eu.c: 802: }
  4325                           ;lorawan_eu.c: 803: }
  4326                           ;lorawan_eu.c: 804: }
  4327                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
  4328                           
  4329                           ; BSR set to: 0
  4330                           
  4331                           ; BSR set to: 0
  4332  001E52  517C               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
  4333  001E54  197F               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4334  001E56  A4D8               	btfss	status,2,c
  4335  001E58  D003               	goto	l1149
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;lorawan_eu.c: 807: {
  4339                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
  4340  001E5A  0E09               	movlw	9
  4341  001E5C  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4342                           
  4343                           ;lorawan_eu.c: 809: break;
  4344  001E5E  D003               	goto	u11250
  4345  001E60                     l1149:
  4346                           
  4347                           ; BSR set to: 0
  4348                           
  4349                           ; BSR set to: 0
  4350                           
  4351                           ; BSR set to: 0
  4352  001E60  517F               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4353  001E62  A4D8               	btfss	status,2,c
  4354  001E64  D789               	goto	l1139
  4355  001E66                     u11250:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;lorawan_eu.c: 810: }
  4359                           ;lorawan_eu.c: 811: }
  4360                           ;lorawan_eu.c: 813: if ( i != 0)
  4361                           
  4362                           ; BSR set to: 0
  4363  001E66  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4364  001E68  B4D8               	btfsc	status,2,c
  4365  001E6A  D007               	goto	l1151
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;lorawan_eu.c: 814: {
  4369                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
  4370  001E6C  0580               	decf	SearchAvailableChannel@i& (0+255),w,b
  4371  001E6E  C076  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
  4372  001E72  C077  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
  4373  001E76  6EDF               	movwf	indf2,c
  4374                           
  4375                           ;lorawan_eu.c: 816: }
  4376  001E78  D002               	goto	l1152
  4377  001E7A                     l1151:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;lorawan_eu.c: 817: else
  4381                           ;lorawan_eu.c: 818: {
  4382                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
  4383                           
  4384                           ; BSR set to: 0
  4385  001E7A  0E09               	movlw	9
  4386  001E7C  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4387  001E7E                     l1152:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;lorawan_eu.c: 820: }
  4391                           ;lorawan_eu.c: 821: return result;
  4392  001E7E  517D               	movf	SearchAvailableChannel@result& (0+255),w,b
  4393  001E80  0012               	return	
  4394  001E82                     __end_of_SearchAvailableChannel:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           prodh	equ	0xFF4
  4401                           prodl	equ	0xFF3
  4402                           intcon	equ	0xFF2
  4403                           intcon2	equ	0xFF1
  4404                           intcon3	equ	0xFF0
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           indf2	equ	0xFDF
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _ConfigureRadioTx *****************
  4415 ;; Defined at:
  4416 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  dataRate        1    wreg     unsigned char 
  4419 ;;  freq            4   19[BANK0 ] unsigned long 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  dataRate        1   23[BANK0 ] unsigned char 
  4422 ;;  txPower         1   24[BANK0 ] char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;Total ram usage:        6 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:   10
  4439 ;; This function calls:
  4440 ;;		_ConfigureRadio
  4441 ;;		_RADIO_SetCRC
  4442 ;;		_RADIO_SetIQInverted
  4443 ;;		_RADIO_SetOutputPower
  4444 ;; This function is called by:
  4445 ;;		_SelectChannelForTransmission
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text28
  4450  0030D6                     __ptext28:
  4451                           	opt stack 0
  4452  0030D6                     _ConfigureRadioTx:
  4453                           	opt stack 18
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;incstack = 0
  4457                           ;ConfigureRadioTx@dataRate stored from wreg
  4458  0030D6  0100               	movlb	0	; () banked
  4459  0030D8  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
  4460                           
  4461                           ;lorawan_eu.c: 1257: int8_t txPower;
  4462                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
  4463  0030DA  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
  4464  0030DE  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
  4465  0030E2  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
  4466  0030E6  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
  4467  0030EA  0100               	movlb	0	; () banked
  4468  0030EC  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
  4469  0030EE  ECFA  F012         	call	_ConfigureRadio
  4470                           
  4471                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
  4472  0030F2  0102               	movlb	2	; () banked
  4473  0030F4  51A4               	movf	(_loRa+164)& (0+255),w,b
  4474                           
  4475                           ; BSR set to: 2
  4476                           ;lorawan_eu.c: 1265: else
  4477                           ;lorawan_eu.c: 1266: {
  4478                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
  4479                           
  4480                           ; BSR set to: 2
  4481                           
  4482                           ;lorawan_eu.c: 1264: }
  4483                           
  4484                           ; BSR set to: 2
  4485                           ;lorawan_eu.c: 1262: {
  4486                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
  4487  0030F6  51E1               	movf	(_loRa+225)& (0+255),w,b
  4488  0030F8  0D01               	mullw	1
  4489  0030FA  0EA2               	movlw	low _txPower868
  4490  0030FC  24F3               	addwf	prodl,w,c
  4491  0030FE  6EF6               	movwf	tblptrl,c
  4492  003100  0EFF               	movlw	high _txPower868
  4493  003102  20F4               	addwfc	prodh,w,c
  4494  003104  6EF7               	movwf	tblptrh,c
  4495  003106                     	if	1	;There are 3 active tblptr bytes
  4496  003106  6AF8               	clrf	tblptru,c
  4497  003108  0E00               	movlw	low (__mediumconst shr (0+16))
  4498  00310A  22F8               	addwfc	tblptru,f,c
  4499  00310C                     	endif
  4500  00310C  0008               	tblrd		*
  4501  00310E  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
  4502                           
  4503                           ; BSR set to: 2
  4504                           ;lorawan_eu.c: 1268: }
  4505                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
  4506                           
  4507                           ; BSR set to: 2
  4508  003112  0100               	movlb	0	; () banked
  4509  003114  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
  4510  003116  ECFC  F01B         	call	_RADIO_SetOutputPower
  4511                           
  4512                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
  4513  00311A  0E01               	movlw	1
  4514  00311C  EC06  F01C         	call	_RADIO_SetCRC
  4515                           
  4516                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
  4517  003120  0E00               	movlw	0
  4518  003122  EC01  F01C         	call	_RADIO_SetIQInverted
  4519  003126  0012               	return		;funcret
  4520  003128                     __end_of_ConfigureRadioTx:
  4521                           	opt stack 0
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           intcon2	equ	0xFF1
  4530                           intcon3	equ	0xFF0
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           fsr2h	equ	0xFDA
  4537                           fsr2l	equ	0xFD9
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _RADIO_SetOutputPower *****************
  4541 ;; Defined at:
  4542 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  power           1    wreg     char 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  power           1    0[BANK0 ] char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;Total ram usage:        1 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    7
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_ConfigureRadioTx
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text29
  4571  0037F8                     __ptext29:
  4572                           	opt stack 0
  4573  0037F8                     _RADIO_SetOutputPower:
  4574                           	opt stack 20
  4575                           
  4576                           ;incstack = 0
  4577                           ;RADIO_SetOutputPower@power stored from wreg
  4578  0037F8  0100               	movlb	0	; () banked
  4579  0037FA  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
  4580                           
  4581                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
  4582  0037FC  C060  F181         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
  4583  003800  0012               	return		;funcret
  4584  003802                     __end_of_RADIO_SetOutputPower:
  4585                           	opt stack 0
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           intcon2	equ	0xFF1
  4594                           intcon3	equ	0xFF0
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _RADIO_SetIQInverted *****************
  4605 ;; Defined at:
  4606 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  iqInverted      1    wreg     unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  iqInverted      1    0[BANK0 ] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;Total ram usage:        1 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    7
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_ConfigureRadioTx
  4631 ;;		_ConfigureRadioRx
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text30
  4636  003802                     __ptext30:
  4637                           	opt stack 0
  4638  003802                     _RADIO_SetIQInverted:
  4639                           	opt stack 20
  4640                           
  4641                           ;incstack = 0
  4642                           ;RADIO_SetIQInverted@iqInverted stored from wreg
  4643  003802  0100               	movlb	0	; () banked
  4644  003804  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
  4645                           
  4646                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
  4647  003806  C060  F186         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
  4648  00380A  0012               	return		;funcret
  4649  00380C                     __end_of_RADIO_SetIQInverted:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           prodh	equ	0xFF4
  4656                           prodl	equ	0xFF3
  4657                           intcon	equ	0xFF2
  4658                           intcon2	equ	0xFF1
  4659                           intcon3	equ	0xFF0
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           indf2	equ	0xFDF
  4663                           postinc2	equ	0xFDE
  4664                           postdec2	equ	0xFDD
  4665                           fsr2h	equ	0xFDA
  4666                           fsr2l	equ	0xFD9
  4667                           status	equ	0xFD8
  4668                           
  4669 ;; *************** function _RADIO_SetCRC *****************
  4670 ;; Defined at:
  4671 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  crc             1    wreg     unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  crc             1    0[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        1 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    7
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_ConfigureRadioTx
  4696 ;;		_ConfigureRadioRx
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text31
  4701  00380C                     __ptext31:
  4702                           	opt stack 0
  4703  00380C                     _RADIO_SetCRC:
  4704                           	opt stack 20
  4705                           
  4706                           ;incstack = 0
  4707                           ;RADIO_SetCRC@crc stored from wreg
  4708  00380C  0100               	movlb	0	; () banked
  4709  00380E  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
  4710                           
  4711                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
  4712  003810  C060  F182         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
  4713  003814  0012               	return		;funcret
  4714  003816                     __end_of_RADIO_SetCRC:
  4715                           	opt stack 0
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodh	equ	0xFF4
  4721                           prodl	equ	0xFF3
  4722                           intcon	equ	0xFF2
  4723                           intcon2	equ	0xFF1
  4724                           intcon3	equ	0xFF0
  4725                           postinc0	equ	0xFEE
  4726                           wreg	equ	0xFE8
  4727                           indf2	equ	0xFDF
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _ConfigureRadio *****************
  4735 ;; Defined at:
  4736 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  dataRate        1    wreg     unsigned char 
  4739 ;;  freq            4   14[BANK0 ] unsigned long 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  dataRate        1   18[BANK0 ] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        5 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    9
  4758 ;; This function calls:
  4759 ;;		_RADIO_SetBandwidth
  4760 ;;		_RADIO_SetChannelFrequency
  4761 ;;		_RADIO_SetFSKSyncWord
  4762 ;;		_RADIO_SetFrequencyHopPeriod
  4763 ;;		_RADIO_SetLoRaSyncWord
  4764 ;;		_RADIO_SetModulation
  4765 ;;		_RADIO_SetSpreadingFactor
  4766 ;; This function is called by:
  4767 ;;		_ConfigureRadioTx
  4768 ;;		_ConfigureRadioRx
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text32
  4773  0025F4                     __ptext32:
  4774                           	opt stack 0
  4775  0025F4                     _ConfigureRadio:
  4776                           	opt stack 18
  4777                           
  4778                           ;incstack = 0
  4779                           ;ConfigureRadio@dataRate stored from wreg
  4780  0025F4  0100               	movlb	0	; () banked
  4781  0025F6  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
  4782                           
  4783                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
  4784  0025F8  0100               	movlb	0	; () banked
  4785  0025FA  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4786  0025FC  0D01               	mullw	1
  4787  0025FE  0E67               	movlw	low _modulation
  4788  002600  24F3               	addwf	prodl,w,c
  4789  002602  6EF6               	movwf	tblptrl,c
  4790  002604  0EFF               	movlw	high _modulation
  4791  002606  20F4               	addwfc	prodh,w,c
  4792  002608  6EF7               	movwf	tblptrh,c
  4793  00260A                     	if	1	;There are 3 active tblptr bytes
  4794  00260A  6AF8               	clrf	tblptru,c
  4795  00260C  0E00               	movlw	low (__mediumconst shr (0+16))
  4796  00260E  22F8               	addwfc	tblptru,f,c
  4797  002610                     	endif
  4798  002610  0008               	tblrd		*
  4799  002612  50F5               	movf	tablat,w,c
  4800  002614  EC10  F01C         	call	_RADIO_SetModulation
  4801                           
  4802                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
  4803  002618  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
  4804  00261C  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
  4805  002620  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
  4806  002624  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
  4807  002628  EC15  F015         	call	_RADIO_SetChannelFrequency	;wreg free
  4808                           
  4809                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
  4810  00262C  0E00               	movlw	0
  4811  00262E  0100               	movlb	0	; () banked
  4812  002630  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
  4813  002632  0E00               	movlw	0
  4814  002634  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
  4815  002636  EC15  F01C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
  4816                           
  4817                           ;lorawan_eu.c: 869: if (dataRate <= 6)
  4818  00263A  0E07               	movlw	7
  4819  00263C  0100               	movlb	0	; () banked
  4820  00263E  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
  4821  002640  D024               	goto	l1165
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;lorawan_eu.c: 870: {
  4825                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
  4826  002642  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4827  002644  0D01               	mullw	1
  4828  002646  0E95               	movlw	low _spreadingFactor
  4829  002648  24F3               	addwf	prodl,w,c
  4830  00264A  6EF6               	movwf	tblptrl,c
  4831  00264C  0EFF               	movlw	high _spreadingFactor
  4832  00264E  20F4               	addwfc	prodh,w,c
  4833  002650  6EF7               	movwf	tblptrh,c
  4834  002652                     	if	1	;There are 3 active tblptr bytes
  4835  002652  6AF8               	clrf	tblptru,c
  4836  002654  0E00               	movlw	low (__mediumconst shr (0+16))
  4837  002656  22F8               	addwfc	tblptru,f,c
  4838  002658                     	endif
  4839  002658  0008               	tblrd		*
  4840  00265A  50F5               	movf	tablat,w,c
  4841  00265C  EC0B  F01C         	call	_RADIO_SetSpreadingFactor
  4842                           
  4843                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
  4844  002660  0100               	movlb	0	; () banked
  4845  002662  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4846  002664  0D01               	mullw	1
  4847  002666  0E8E               	movlw	low _bandwidth
  4848  002668  24F3               	addwf	prodl,w,c
  4849  00266A  6EF6               	movwf	tblptrl,c
  4850  00266C  0EFF               	movlw	high _bandwidth
  4851  00266E  20F4               	addwfc	prodh,w,c
  4852  002670  6EF7               	movwf	tblptrh,c
  4853  002672                     	if	1	;There are 3 active tblptr bytes
  4854  002672  6AF8               	clrf	tblptru,c
  4855  002674  0E00               	movlw	low (__mediumconst shr (0+16))
  4856  002676  22F8               	addwfc	tblptru,f,c
  4857  002678                     	endif
  4858  002678  0008               	tblrd		*
  4859  00267A  50F5               	movf	tablat,w,c
  4860  00267C  EC1A  F01C         	call	_RADIO_SetBandwidth
  4861                           
  4862                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
  4863  002680  0102               	movlb	2	; () banked
  4864  002682  51F4               	movf	(_loRa+244)& (0+255),w,b
  4865  002684  EC1F  F01C         	call	_RADIO_SetLoRaSyncWord
  4866                           
  4867                           ;lorawan_eu.c: 875: }
  4868  002688  0012               	return	
  4869  00268A                     l1165:
  4870                           
  4871                           ;lorawan_eu.c: 876: else
  4872                           ;lorawan_eu.c: 877: {
  4873                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
  4874  00268A  0EFC               	movlw	low _FskSyncWordBuff
  4875  00268C  0100               	movlb	0	; () banked
  4876  00268E  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
  4877  002690  0EFF               	movlw	high _FskSyncWordBuff
  4878  002692  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
  4879  002694  0E03               	movlw	3
  4880  002696  ECE8  F019         	call	_RADIO_SetFSKSyncWord
  4881  00269A  0012               	return	
  4882  00269C                     __end_of_ConfigureRadio:
  4883                           	opt stack 0
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           prodh	equ	0xFF4
  4889                           prodl	equ	0xFF3
  4890                           intcon	equ	0xFF2
  4891                           intcon2	equ	0xFF1
  4892                           intcon3	equ	0xFF0
  4893                           postinc0	equ	0xFEE
  4894                           wreg	equ	0xFE8
  4895                           indf2	equ	0xFDF
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902 ;; *************** function _RADIO_SetSpreadingFactor *****************
  4903 ;; Defined at:
  4904 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  spreadingFac    1    wreg     enum E6994
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  spreadingFac    1    0[BANK0 ] enum E6994
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:        1 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    7
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_ConfigureRadio
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text33
  4933  003816                     __ptext33:
  4934                           	opt stack 0
  4935  003816                     _RADIO_SetSpreadingFactor:
  4936                           	opt stack 19
  4937                           
  4938                           ;incstack = 0
  4939                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
  4940  003816  0100               	movlb	0	; () banked
  4941  003818  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
  4942                           
  4943                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
  4944  00381A  C060  F17F         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
  4945  00381E  0012               	return		;funcret
  4946  003820                     __end_of_RADIO_SetSpreadingFactor:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           intcon2	equ	0xFF1
  4956                           intcon3	equ	0xFF0
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _RADIO_SetModulation *****************
  4967 ;; Defined at:
  4968 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  modulation      1    wreg     enum E6984
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  modulation      1    0[BANK0 ] enum E6984
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		wreg
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;Total ram usage:        1 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    7
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_ConfigureRadio
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text34
  4997  003820                     __ptext34:
  4998                           	opt stack 0
  4999  003820                     _RADIO_SetModulation:
  5000                           	opt stack 19
  5001                           
  5002                           ;incstack = 0
  5003                           ;RADIO_SetModulation@modulation stored from wreg
  5004  003820  0100               	movlb	0	; () banked
  5005  003822  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
  5006                           
  5007                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
  5008  003824  C060  F17E         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
  5009  003828  0012               	return		;funcret
  5010  00382A                     __end_of_RADIO_SetModulation:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           intcon	equ	0xFF2
  5019                           intcon2	equ	0xFF1
  5020                           intcon3	equ	0xFF0
  5021                           postinc0	equ	0xFEE
  5022                           wreg	equ	0xFE8
  5023                           indf2	equ	0xFDF
  5024                           postinc2	equ	0xFDE
  5025                           postdec2	equ	0xFDD
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
  5031 ;; Defined at:
  5032 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		None
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        2 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    7
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_ConfigureRadio
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text35
  5061  00382A                     __ptext35:
  5062                           	opt stack 0
  5063  00382A                     _RADIO_SetFrequencyHopPeriod:
  5064                           	opt stack 19
  5065                           
  5066                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
  5067                           
  5068                           ;incstack = 0
  5069  00382A  C060  F184         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
  5070  00382E  C061  F185         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
  5071  003832  0012               	return		;funcret
  5072  003834                     __end_of_RADIO_SetFrequencyHopPeriod:
  5073                           	opt stack 0
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           prodh	equ	0xFF4
  5079                           prodl	equ	0xFF3
  5080                           intcon	equ	0xFF2
  5081                           intcon2	equ	0xFF1
  5082                           intcon3	equ	0xFF0
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           indf2	equ	0xFDF
  5086                           postinc2	equ	0xFDE
  5087                           postdec2	equ	0xFDD
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _RADIO_SetFSKSyncWord *****************
  5093 ;; Defined at:
  5094 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  syncWordLen     1    wreg     unsigned char 
  5097 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
  5098 ;;		 -> FskSyncWordBuff(3), 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;Total ram usage:        3 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    8
  5117 ;; This function calls:
  5118 ;;		_memcpy
  5119 ;; This function is called by:
  5120 ;;		_ConfigureRadio
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text36
  5125  0033D0                     __ptext36:
  5126                           	opt stack 0
  5127  0033D0                     _RADIO_SetFSKSyncWord:
  5128                           	opt stack 18
  5129                           
  5130                           ;incstack = 0
  5131                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
  5132  0033D0  0100               	movlb	0	; () banked
  5133  0033D2  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5134                           
  5135                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
  5136  0033D4  0E08               	movlw	8
  5137  0033D6  0100               	movlb	0	; () banked
  5138  0033D8  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5139  0033DA  D002               	goto	l801
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;radio_driver_SX1276.c: 1627: {
  5143                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
  5144  0033DC  0E08               	movlw	8
  5145  0033DE  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5146  0033E0                     l801:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;radio_driver_SX1276.c: 1629: }
  5150                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
  5151                           
  5152                           ; BSR set to: 0
  5153  0033E0  0E75               	movlw	low (_RadioConfiguration+15)
  5154  0033E2  6F60               	movwf	memcpy@d1& (0+255),b
  5155  0033E4  0E01               	movlw	high (_RadioConfiguration+15)
  5156  0033E6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  5157  0033E8  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
  5158  0033EC  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
  5159  0033F0  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
  5160  0033F4  6B65               	clrf	(memcpy@n+1)& (0+255),b
  5161  0033F6  EC8C  F017         	call	_memcpy	;wreg free
  5162                           
  5163                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
  5164  0033FA  C06D  F17D         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
  5165  0033FE  0012               	return		;funcret
  5166  003400                     __end_of_RADIO_SetFSKSyncWord:
  5167                           	opt stack 0
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           intcon	equ	0xFF2
  5175                           intcon2	equ	0xFF1
  5176                           intcon3	equ	0xFF0
  5177                           postinc0	equ	0xFEE
  5178                           wreg	equ	0xFE8
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _RADIO_SetChannelFrequency *****************
  5187 ;; Defined at:
  5188 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  frequency       4    0[BANK0 ] unsigned long 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2    0[BANK0 ] enum E7038
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;Total ram usage:        4 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    7
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_ConfigureRadio
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text37
  5217  002A2A                     __ptext37:
  5218                           	opt stack 0
  5219  002A2A                     _RADIO_SetChannelFrequency:
  5220                           	opt stack 19
  5221                           
  5222                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
  5223                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
  5224                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
  5225                           
  5226                           ;incstack = 0
  5227  002A2A  0E40               	movlw	64
  5228  002A2C  0100               	movlb	0	; () banked
  5229  002A2E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5230  002A30  0E74               	movlw	116
  5231  002A32  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5232  002A34  0E2A               	movlw	42
  5233  002A36  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5234  002A38  0E08               	movlw	8
  5235  002A3A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5236  002A3C  A0D8               	btfss	status,0,c
  5237  002A3E  D00A               	goto	u7700
  5238                           
  5239                           ; BSR set to: 0
  5240  002A40  0EC1               	movlw	193
  5241  002A42  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5242  002A44  0E49               	movlw	73
  5243  002A46  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5244  002A48  0E6E               	movlw	110
  5245  002A4A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5246  002A4C  0E0A               	movlw	10
  5247  002A4E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5248  002A50  A0D8               	btfss	status,0,c
  5249  002A52  D027               	goto	u7740
  5250  002A54                     u7700:
  5251                           
  5252                           ; BSR set to: 0
  5253                           
  5254                           ; BSR set to: 0
  5255  002A54  0E80               	movlw	128
  5256  002A56  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5257  002A58  0E1A               	movlw	26
  5258  002A5A  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5259  002A5C  0E70               	movlw	112
  5260  002A5E  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5261  002A60  0E18               	movlw	24
  5262  002A62  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5263  002A64  A0D8               	btfss	status,0,c
  5264  002A66  D00A               	goto	u7720
  5265                           
  5266                           ; BSR set to: 0
  5267  002A68  0E41               	movlw	65
  5268  002A6A  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5269  002A6C  0EDD               	movlw	221
  5270  002A6E  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5271  002A70  0E4A               	movlw	74
  5272  002A72  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5273  002A74  0E1F               	movlw	31
  5274  002A76  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5275  002A78  A0D8               	btfss	status,0,c
  5276  002A7A  D013               	goto	u7740
  5277  002A7C                     u7720:
  5278                           
  5279                           ; BSR set to: 0
  5280                           
  5281                           ; BSR set to: 0
  5282  002A7C  0E80               	movlw	128
  5283  002A7E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5284  002A80  0E13               	movlw	19
  5285  002A82  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5286  002A84  0E61               	movlw	97
  5287  002A86  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5288  002A88  0E33               	movlw	51
  5289  002A8A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5290  002A8C  A0D8               	btfss	status,0,c
  5291  002A8E  0012               	return	
  5292                           
  5293                           ; BSR set to: 0
  5294  002A90  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5295  002A92  0EF7               	movlw	247
  5296  002A94  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5297  002A96  0ECB               	movlw	203
  5298  002A98  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5299  002A9A  0E3C               	movlw	60
  5300  002A9C  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5301  002A9E  B0D8               	btfsc	status,0,c
  5302  002AA0  0012               	return	
  5303  002AA2                     u7740:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;radio_driver_SX1276.c: 1449: {
  5307                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
  5308  002AA2  C060  F166         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
  5309  002AA6  C061  F167         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
  5310  002AAA  C062  F168         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
  5311  002AAE  C063  F169         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;radio_driver_SX1276.c: 1453: else
  5315                           ;radio_driver_SX1276.c: 1454: {
  5316                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
  5317                           ;	Return value of _RADIO_SetChannelFrequency is never used
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;radio_driver_SX1276.c: 1452: }
  5321                           
  5322                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
  5323                           ;	Return value of _RADIO_SetChannelFrequency is never used
  5324  002AB2  0012               	return	
  5325  002AB4                     __end_of_RADIO_SetChannelFrequency:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           prodh	equ	0xFF4
  5332                           prodl	equ	0xFF3
  5333                           intcon	equ	0xFF2
  5334                           intcon2	equ	0xFF1
  5335                           intcon3	equ	0xFF0
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _RADIO_SetBandwidth *****************
  5346 ;; Defined at:
  5347 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  bandwidth       1    wreg     enum E7002
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  bandwidth       1    0[BANK0 ] enum E7002
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    7
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_ConfigureRadio
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text38
  5376  003834                     __ptext38:
  5377                           	opt stack 0
  5378  003834                     _RADIO_SetBandwidth:
  5379                           	opt stack 19
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;incstack = 0
  5383                           ;RADIO_SetBandwidth@bandwidth stored from wreg
  5384  003834  0100               	movlb	0	; () banked
  5385  003836  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
  5386                           
  5387                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
  5388  003838  C060  F180         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
  5389  00383C  0012               	return		;funcret
  5390  00383E                     __end_of_RADIO_SetBandwidth:
  5391                           	opt stack 0
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           intcon2	equ	0xFF1
  5400                           intcon3	equ	0xFF0
  5401                           postinc0	equ	0xFEE
  5402                           wreg	equ	0xFE8
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _RADIO_Transmit *****************
  5411 ;; Defined at:
  5412 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  buffer          2   58[BANK0 ] PTR unsigned char 
  5415 ;;		 -> macBuffer(271), 
  5416 ;;  bufferLen       1   60[BANK0 ] unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  i               1   74[BANK0 ] unsigned char 
  5419 ;;  regValue        1   73[BANK0 ] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  2   58[BANK0 ] enum E7038
  5422 ;; Registers used:
  5423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5429 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;Total ram usage:       17 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:   12
  5436 ;; This function calls:
  5437 ;;		_HALSPICSAssert
  5438 ;;		_HALSPICSDeassert
  5439 ;;		_HALSPISend
  5440 ;;		_RADIO_RegisterRead
  5441 ;;		_RADIO_RegisterWrite
  5442 ;;		_RADIO_WriteConfiguration
  5443 ;;		_RADIO_WriteMode
  5444 ;;		_SwTimerSetTimeout
  5445 ;;		_SwTimerStart
  5446 ;;		_SwTimerStop
  5447 ;;		___lldiv
  5448 ;; This function is called by:
  5449 ;;		_LORAWAN_RxTimeout
  5450 ;;		_LORAWAN_Join
  5451 ;;		_AckRetransmissionCallback
  5452 ;;		_UnconfirmedTransmissionCallback
  5453 ;;		_LORAWAN_Send
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text39
  5458  000F16                     __ptext39:
  5459                           	opt stack 0
  5460  000F16                     _RADIO_Transmit:
  5461                           	opt stack 17
  5462                           
  5463                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
  5464                           ;radio_driver_SX1276.c: 789: uint8_t i;
  5465                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  5466                           
  5467                           ;incstack = 0
  5468  000F16  0101               	movlb	1	; () banked
  5469  000F18  A589               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  5470  000F1A  D006               	goto	l496
  5471                           
  5472                           ; BSR set to: 1
  5473                           ;radio_driver_SX1276.c: 792: {
  5474                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
  5475  000F1C  0E80               	movlw	128
  5476  000F1E  0100               	movlb	0	; () banked
  5477  000F20  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5478  000F22  0E03               	movlw	3
  5479  000F24  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5480                           
  5481                           ; BSR set to: 0
  5482  000F26  0012               	return	
  5483  000F28                     l496:
  5484                           
  5485                           ;radio_driver_SX1276.c: 794: }
  5486                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
  5487                           
  5488                           ; BSR set to: 0
  5489  000F28  C189  F09D         	movff	_RadioConfiguration+35,??_RADIO_Transmit
  5490  000F2C  0E03               	movlw	3
  5491  000F2E  0100               	movlb	0	; () banked
  5492  000F30  179D               	andwf	??_RADIO_Transmit& (0+255),f,b
  5493  000F32  B4D8               	btfsc	status,2,c
  5494  000F34  D005               	goto	l498
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;radio_driver_SX1276.c: 797: {
  5498                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
  5499  000F36  0E80               	movlw	128
  5500  000F38  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5501  000F3A  0E04               	movlw	4
  5502  000F3C  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5503                           
  5504                           ; BSR set to: 0
  5505  000F3E  0012               	return	
  5506  000F40                     l498:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;radio_driver_SX1276.c: 799: }
  5510                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
  5511                           
  5512                           ; BSR set to: 0
  5513  000F40  0101               	movlb	1	; () banked
  5514  000F42  517E               	movf	(_RadioConfiguration+24)& (0+255),w,b
  5515  000F44  A4D8               	btfss	status,2,c
  5516  000F46  D009               	goto	l499
  5517                           
  5518                           ; BSR set to: 1
  5519  000F48  0E40               	movlw	64
  5520  000F4A  0100               	movlb	0	; () banked
  5521  000F4C  659C               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
  5522  000F4E  D005               	goto	l499
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;radio_driver_SX1276.c: 802: {
  5526                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
  5527  000F50  0E80               	movlw	128
  5528  000F52  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5529  000F54  0E02               	movlw	2
  5530  000F56  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5531                           
  5532                           ; BSR set to: 0
  5533  000F58  0012               	return	
  5534  000F5A                     l499:
  5535                           
  5536                           ;radio_driver_SX1276.c: 804: }
  5537                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
  5538                           
  5539                           ; BSR set to: 0
  5540  000F5A  0101               	movlb	1	; () banked
  5541  000F5C  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5542  000F5E  EC9D  F01A         	call	_SwTimerStop
  5543                           
  5544                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
  5545  000F62  0E00               	movlw	0
  5546  000F64  0100               	movlb	0	; () banked
  5547  000F66  6F7A               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
  5548  000F68  0E04               	movlw	4
  5549  000F6A  6F79               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
  5550  000F6C  EC43  F000         	call	_RADIO_WriteConfiguration	;wreg free
  5551                           
  5552                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
  5553  000F70  0101               	movlb	1	; () banked
  5554  000F72  057E               	decf	(_RadioConfiguration+24)& (0+255),w,b
  5555  000F74  A4D8               	btfss	status,2,c
  5556  000F76  D027               	goto	l500
  5557                           
  5558                           ; BSR set to: 1
  5559                           ;radio_driver_SX1276.c: 813: {
  5560                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
  5561  000F78  C09C  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
  5562  000F7C  0E22               	movlw	34
  5563  000F7E  ECE4  F01A         	call	_RADIO_RegisterWrite
  5564                           
  5565                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
  5566  000F82  0E0A               	movlw	10
  5567  000F84  EC89  F01A         	call	_RADIO_RegisterRead
  5568  000F88  0100               	movlb	0	; () banked
  5569  000F8A  6FA9               	movwf	RADIO_Transmit@regValue& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
  5573  000F8C  0EF0               	movlw	240
  5574  000F8E  17A9               	andwf	RADIO_Transmit@regValue& (0+255),f,b
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
  5578  000F90  87A9               	bsf	RADIO_Transmit@regValue& (0+255),3,b
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
  5582  000F92  C0A9  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
  5583  000F96  0E0A               	movlw	10
  5584  000F98  ECE4  F01A         	call	_RADIO_RegisterWrite
  5585                           
  5586                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
  5587  000F9C  0E40               	movlw	64
  5588  000F9E  0100               	movlb	0	; () banked
  5589  000FA0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5590  000FA2  0E40               	movlw	64
  5591  000FA4  ECE4  F01A         	call	_RADIO_RegisterWrite
  5592                           
  5593                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
  5594  000FA8  0E00               	movlw	0
  5595  000FAA  0100               	movlb	0	; () banked
  5596  000FAC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5597  000FAE  0E41               	movlw	65
  5598  000FB0  ECE4  F01A         	call	_RADIO_RegisterWrite
  5599                           
  5600                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
  5601  000FB4  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5602  000FB8  0E01               	movlw	1
  5603  000FBA  0100               	movlb	0	; () banked
  5604  000FBC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5605  000FBE  0E01               	movlw	1
  5606  000FC0  EC42  F010         	call	_RADIO_WriteMode
  5607                           
  5608                           ;radio_driver_SX1276.c: 828: }
  5609  000FC4  D00C               	goto	l501
  5610  000FC6                     l500:
  5611                           
  5612                           ;radio_driver_SX1276.c: 829: else
  5613                           ;radio_driver_SX1276.c: 830: {
  5614                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
  5615  000FC6  0E00               	movlw	0
  5616  000FC8  0100               	movlb	0	; () banked
  5617  000FCA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5618  000FCC  0E40               	movlw	64
  5619  000FCE  ECE4  F01A         	call	_RADIO_RegisterWrite
  5620                           
  5621                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
  5622  000FD2  0E00               	movlw	0
  5623  000FD4  0100               	movlb	0	; () banked
  5624  000FD6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5625  000FD8  0E41               	movlw	65
  5626  000FDA  ECE4  F01A         	call	_RADIO_RegisterWrite
  5627  000FDE                     l501:
  5628                           
  5629                           ;radio_driver_SX1276.c: 834: }
  5630                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
  5631  000FDE  0101               	movlb	1	; () banked
  5632  000FE0  517E               	movf	(_RadioConfiguration+24)& (0+255),w,b
  5633  000FE2  A4D8               	btfss	status,2,c
  5634  000FE4  D005               	goto	l502
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;radio_driver_SX1276.c: 837: {
  5638                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
  5639  000FE6  C09C  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
  5640  000FEA  0E00               	movlw	0
  5641  000FEC  ECE4  F01A         	call	_RADIO_RegisterWrite
  5642  000FF0                     l502:
  5643                           
  5644                           ;radio_driver_SX1276.c: 840: }
  5645                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
  5646  000FF0  EC3D  F01C         	call	_HALSPICSAssert	;wreg free
  5647                           
  5648                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
  5649  000FF4  0E80               	movlw	128
  5650  000FF6  ECDB  F01B         	call	_HALSPISend
  5651                           
  5652                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
  5653  000FFA  0E00               	movlw	0
  5654  000FFC  0100               	movlb	0	; () banked
  5655  000FFE  6FAA               	movwf	RADIO_Transmit@i& (0+255),b
  5656  001000  D00D               	goto	l503
  5657  001002                     
  5658                           ; BSR set to: 0
  5659                           ;radio_driver_SX1276.c: 846: {
  5660                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
  5661                           
  5662                           ; BSR set to: 0
  5663  001002  51AA               	movf	RADIO_Transmit@i& (0+255),w,b
  5664  001004  0D01               	mullw	1
  5665  001006  50F3               	movf	prodl,w,c
  5666  001008  259A               	addwf	RADIO_Transmit@buffer& (0+255),w,b
  5667  00100A  6ED9               	movwf	fsr2l,c
  5668  00100C  50F4               	movf	prodh,w,c
  5669  00100E  219B               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
  5670  001010  6EDA               	movwf	fsr2h,c
  5671  001012  50DF               	movf	indf2,w,c
  5672  001014  ECDB  F01B         	call	_HALSPISend
  5673  001018  0100               	movlb	0	; () banked
  5674  00101A  2BAA               	incf	RADIO_Transmit@i& (0+255),f,b
  5675  00101C                     l503:
  5676                           
  5677                           ; BSR set to: 0
  5678                           
  5679                           ; BSR set to: 0
  5680  00101C  519C               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
  5681  00101E  5DAA               	subwf	RADIO_Transmit@i& (0+255),w,b
  5682  001020  A0D8               	btfss	status,0,c
  5683  001022  D7EF               	goto	l504
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;radio_driver_SX1276.c: 848: }
  5687                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
  5688                           
  5689                           ; BSR set to: 0
  5690  001024  EC3B  F01C         	call	_HALSPICSDeassert	;wreg free
  5691                           
  5692                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
  5693  001028  0101               	movlb	1	; () banked
  5694  00102A  8189               	bsf	(_RadioConfiguration+35)& (0+255),0,b
  5695                           
  5696                           ; BSR set to: 1
  5697                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
  5698  00102C  0EE7               	movlw	231
  5699  00102E  1789               	andwf	(_RadioConfiguration+35)& (0+255),f,b
  5700                           
  5701                           ; BSR set to: 1
  5702                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
  5703  001030  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5704  001034  0E00               	movlw	0
  5705  001036  0100               	movlb	0	; () banked
  5706  001038  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5707  00103A  0E03               	movlw	3
  5708  00103C  EC42  F010         	call	_RADIO_WriteMode
  5709                           
  5710                           ; BSR set to: 0
  5711                           
  5712                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
  5713  001040  0E00               	movlw	0
  5714  001042  0100               	movlb	0	; () banked
  5715  001044  6FA1               	movwf	_RADIO_Transmit$771& (0+255),b
  5716  001046  0E00               	movlw	0
  5717  001048  6FA2               	movwf	(_RADIO_Transmit$771+1)& (0+255),b
  5718  00104A  0E0A               	movlw	10
  5719  00104C  6FA3               	movwf	(_RADIO_Transmit$771+2)& (0+255),b
  5720  00104E  0E00               	movlw	0
  5721  001050  6FA4               	movwf	(_RADIO_Transmit$771+3)& (0+255),b
  5722                           
  5723                           ; BSR set to: 0
  5724                           
  5725                           ; BSR set to: 0
  5726  001052  C0A1  F060         	movff	_RADIO_Transmit$771,SwTimerSetTimeout@timeout
  5727  001056  C0A2  F061         	movff	_RADIO_Transmit$771+1,SwTimerSetTimeout@timeout+1
  5728  00105A  C0A3  F062         	movff	_RADIO_Transmit$771+2,SwTimerSetTimeout@timeout+2
  5729  00105E  C0A4  F063         	movff	_RADIO_Transmit$771+3,SwTimerSetTimeout@timeout+3
  5730  001062  0101               	movlb	1	; () banked
  5731  001064  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5732  001066  EC6F  F019         	call	_SwTimerSetTimeout
  5733                           
  5734                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
  5735  00106A  0101               	movlb	1	; () banked
  5736  00106C  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5737  00106E  ECF2  F013         	call	_SwTimerStart
  5738                           
  5739                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
  5740  001072  0101               	movlb	1	; () banked
  5741  001074  5190               	movf	(_RadioConfiguration+42)& (0+255),w,b
  5742  001076  1191               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
  5743  001078  1192               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
  5744  00107A  1193               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
  5745  00107C  B4D8               	btfsc	status,2,c
  5746  00107E  D061               	goto	l510
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;radio_driver_SX1276.c: 866: {
  5750                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
  5751  001080  5193               	movf	(_RadioConfiguration+45)& (0+255),w,b
  5752  001082  E107               	bnz	u11370
  5753  001084  2990               	incf	(_RadioConfiguration+42)& (0+255),w,b
  5754  001086  0EFF               	movlw	255
  5755  001088  5991               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
  5756  00108A  0E0F               	movlw	15
  5757  00108C  5992               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
  5758  00108E  A0D8               	btfss	status,0,c
  5759  001090  D01D               	goto	l512
  5760  001092                     u11370:
  5761                           
  5762                           ; BSR set to: 1
  5763  001092  C190  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
  5764  001096  C191  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
  5765  00109A  C192  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
  5766  00109E  C193  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
  5767  0010A2  0E7D               	movlw	125
  5768  0010A4  0100               	movlb	0	; () banked
  5769  0010A6  6F64               	movwf	___lldiv@divisor& (0+255),b
  5770  0010A8  0E00               	movlw	0
  5771  0010AA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5772  0010AC  0E00               	movlw	0
  5773  0010AE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5774  0010B0  0E00               	movlw	0
  5775  0010B2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5776  0010B4  ECE4  F015         	call	___lldiv	;wreg free
  5777  0010B8  0E0C               	movlw	12
  5778  0010BA                     u11385:
  5779  0010BA  90D8               	bcf	status,0,c
  5780  0010BC  0100               	movlb	0	; () banked
  5781  0010BE  3760               	rlcf	?___lldiv& (0+255),f,b
  5782  0010C0  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
  5783  0010C2  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
  5784  0010C4  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
  5785  0010C6  2EE8               	decfsz	wreg,f,c
  5786  0010C8  D7F8               	goto	u11385
  5787  0010CA  D023               	goto	L1
  5788  0010CC                     l512:
  5789                           
  5790                           ; BSR set to: 0
  5791  0010CC  C190  F09D         	movff	_RadioConfiguration+42,??_RADIO_Transmit
  5792  0010D0  C191  F09E         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
  5793  0010D4  C192  F09F         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
  5794  0010D8  C193  F0A0         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
  5795  0010DC  0E0C               	movlw	12
  5796  0010DE                     u11395:
  5797  0010DE  90D8               	bcf	status,0,c
  5798  0010E0  0100               	movlb	0	; () banked
  5799  0010E2  379D               	rlcf	??_RADIO_Transmit& (0+255),f,b
  5800  0010E4  379E               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
  5801  0010E6  379F               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
  5802  0010E8  37A0               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
  5803  0010EA  2EE8               	decfsz	wreg,f,c
  5804  0010EC  D7F8               	goto	u11395
  5805  0010EE  C09D  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
  5806  0010F2  C09E  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
  5807  0010F6  C09F  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
  5808  0010FA  C0A0  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
  5809  0010FE  0E7D               	movlw	125
  5810  001100  6F64               	movwf	___lldiv@divisor& (0+255),b
  5811  001102  0E00               	movlw	0
  5812  001104  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5813  001106  0E00               	movlw	0
  5814  001108  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5815  00110A  0E00               	movlw	0
  5816  00110C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5817  00110E  ECE4  F015         	call	___lldiv	;wreg free
  5818  001112                     L1:
  5819  001112  C060  F0A5         	movff	?___lldiv,_RADIO_Transmit$773
  5820  001116  C061  F0A6         	movff	?___lldiv+1,_RADIO_Transmit$773+1
  5821  00111A  C062  F0A7         	movff	?___lldiv+2,_RADIO_Transmit$773+2
  5822  00111E  C063  F0A8         	movff	?___lldiv+3,_RADIO_Transmit$773+3
  5823  001122  C0A5  F060         	movff	_RADIO_Transmit$773,SwTimerSetTimeout@timeout
  5824  001126  C0A6  F061         	movff	_RADIO_Transmit$773+1,SwTimerSetTimeout@timeout+1
  5825  00112A  C0A7  F062         	movff	_RADIO_Transmit$773+2,SwTimerSetTimeout@timeout+2
  5826  00112E  C0A8  F063         	movff	_RADIO_Transmit$773+3,SwTimerSetTimeout@timeout+3
  5827  001132  0101               	movlb	1	; () banked
  5828  001134  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
  5829  001136  EC6F  F019         	call	_SwTimerSetTimeout
  5830                           
  5831                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
  5832  00113A  0101               	movlb	1	; () banked
  5833  00113C  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
  5834  00113E  ECF2  F013         	call	_SwTimerStart
  5835  001142                     l510:
  5836                           
  5837                           ;radio_driver_SX1276.c: 869: }
  5838                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
  5839  001142  0E00               	movlw	0
  5840  001144  0100               	movlb	0	; () banked
  5841  001146  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5842  001148  0E00               	movlw	0
  5843  00114A  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5844  00114C  0012               	return	
  5845  00114E                     __end_of_RADIO_Transmit:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           intcon	equ	0xFF2
  5854                           intcon2	equ	0xFF1
  5855                           intcon3	equ	0xFF0
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           indf2	equ	0xFDF
  5859                           postinc2	equ	0xFDE
  5860                           postdec2	equ	0xFDD
  5861                           fsr2h	equ	0xFDA
  5862                           fsr2l	equ	0xFD9
  5863                           status	equ	0xFD8
  5864                           
  5865 ;; *************** function _RADIO_WriteConfiguration *****************
  5866 ;; Defined at:
  5867 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  symbolTimeou    2   25[BANK0 ] unsigned int 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  tempValue       4   31[BANK0 ] unsigned long 
  5872 ;;  regValue        1   35[BANK0 ] unsigned char 
  5873 ;;  i               1   30[BANK0 ] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;Total ram usage:       11 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:   11
  5890 ;; This function calls:
  5891 ;;		_RADIO_RegisterRead
  5892 ;;		_RADIO_RegisterWrite
  5893 ;;		_RADIO_WriteFSKBitRate
  5894 ;;		_RADIO_WriteFSKFrequencyDeviation
  5895 ;;		_RADIO_WriteFrequency
  5896 ;;		_RADIO_WriteMode
  5897 ;;		_RADIO_WritePower
  5898 ;;		___lmul
  5899 ;; This function is called by:
  5900 ;;		_RADIO_Transmit
  5901 ;;		_RADIO_TransmitCW
  5902 ;;		_RADIO_ReceiveStart
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text40
  5907  000086                     __ptext40:
  5908                           	opt stack 0
  5909  000086                     _RADIO_WriteConfiguration:
  5910                           	opt stack 17
  5911                           
  5912                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
  5913                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
  5914                           ;radio_driver_SX1276.c: 537: uint8_t i;
  5915                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;incstack = 0
  5919  000086  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5920  00008A  0E00               	movlw	0
  5921  00008C  0100               	movlb	0	; () banked
  5922  00008E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5923  000090  0E00               	movlw	0
  5924  000092  EC42  F010         	call	_RADIO_WriteMode
  5925                           
  5926                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
  5927  000096  C166  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
  5928  00009A  C167  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
  5929  00009E  C168  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
  5930  0000A2  C169  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
  5931  0000A6  ECB6  F011         	call	_RADIO_WriteFrequency	;wreg free
  5932                           
  5933                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
  5934  0000AA  0101               	movlb	1	; () banked
  5935  0000AC  5181               	movf	(_RadioConfiguration+27)& (0+255),w,b
  5936  0000AE  EC3E  F011         	call	_RADIO_WritePower
  5937                           
  5938                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
  5939  0000B2  0101               	movlb	1	; () banked
  5940  0000B4  057E               	decf	(_RadioConfiguration+24)& (0+255),w,b
  5941  0000B6  A4D8               	btfss	status,2,c
  5942  0000B8  D1ED               	goto	l452
  5943                           
  5944                           ; BSR set to: 1
  5945                           ;radio_driver_SX1276.c: 545: {
  5946                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
  5947  0000BA  C174  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
  5948  0000BE  0E39               	movlw	57
  5949  0000C0  ECE4  F01A         	call	_RADIO_RegisterWrite
  5950                           
  5951                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
  5952                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
  5953                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
  5954                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
  5955  0000C4  C188  F07B         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
  5956  0000C8  0E01               	movlw	1
  5957  0000CA  0100               	movlb	0	; () banked
  5958  0000CC  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  5959  0000CE  0101               	movlb	1	; () banked
  5960  0000D0  90D8               	bcf	status,0,c
  5961  0000D2  3587               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
  5962  0000D4  0100               	movlb	0	; () banked
  5963  0000D6  6F7C               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  5964  0000D8  0101               	movlb	1	; () banked
  5965  0000DA  3980               	swapf	(_RadioConfiguration+26)& (0+255),w,b
  5966  0000DC  0BF0               	andlw	240
  5967  0000DE  0100               	movlb	0	; () banked
  5968  0000E0  117C               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
  5969  0000E2  117B               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
  5970  0000E4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5971  0000E6  0E1D               	movlw	29
  5972  0000E8  ECE4  F01A         	call	_RADIO_RegisterWrite
  5973                           
  5974                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
  5975                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
  5976                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
  5977                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
  5978  0000EC  C079  F07B         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
  5979  0000F0  C07A  F07C         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
  5980  0000F4  C07C  F07B         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
  5981  0000F8  0100               	movlb	0	; () banked
  5982  0000FA  6B7C               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  5983  0000FC  0E03               	movlw	3
  5984  0000FE  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  5985  000100  C182  F07D         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
  5986  000104  0E01               	movlw	1
  5987  000106  177D               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5988  000108  90D8               	bcf	status,0,c
  5989  00010A  377D               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5990  00010C  90D8               	bcf	status,0,c
  5991  00010E  377D               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5992  000110  0101               	movlb	1	; () banked
  5993  000112  397F               	swapf	(_RadioConfiguration+25)& (0+255),w,b
  5994  000114  0BF0               	andlw	240
  5995  000116  0100               	movlb	0	; () banked
  5996  000118  117D               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
  5997  00011A  117B               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
  5998  00011C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5999  00011E  0E1E               	movlw	30
  6000  000120  ECE4  F01A         	call	_RADIO_RegisterWrite
  6001                           
  6002                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
  6003  000124  0101               	movlb	1	; () banked
  6004  000126  5184               	movf	(_RadioConfiguration+30)& (0+255),w,b
  6005  000128  1185               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  6006  00012A  B4D8               	btfsc	status,2,c
  6007  00012C  D06F               	goto	l453
  6008                           
  6009                           ; BSR set to: 1
  6010                           ;radio_driver_SX1276.c: 561: {
  6011                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
  6012  00012E  C184  F07F         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
  6013  000132  C185  F080         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
  6014  000136  0100               	movlb	0	; () banked
  6015  000138  6B81               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6016  00013A  6B82               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6017                           
  6018                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
  6019  00013C  D04E               	goto	l454
  6020  00013E                     
  6021                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
  6022                           
  6023                           ; BSR set to: 0
  6024  00013E  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6025  000142  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6026  000146  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6027  00014A  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6028  00014E  0E7D               	movlw	125
  6029  000150  0100               	movlb	0	; () banked
  6030  000152  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6031  000154  0E00               	movlw	0
  6032  000156  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6033  000158  0E00               	movlw	0
  6034  00015A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6035  00015C  0E00               	movlw	0
  6036  00015E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6037  000160  ECEA  F017         	call	___lmul	;wreg free
  6038  000164  D027               	goto	L3
  6039  000166                     
  6040                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
  6041  000166  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6042  00016A  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6043  00016E  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6044  000172  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6045  000176  0EFA               	movlw	250
  6046  000178  0100               	movlb	0	; () banked
  6047  00017A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6048  00017C  0E00               	movlw	0
  6049  00017E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6050  000180  0E00               	movlw	0
  6051  000182  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6052  000184  0E00               	movlw	0
  6053  000186  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6054  000188  ECEA  F017         	call	___lmul	;wreg free
  6055  00018C  D013               	goto	L3
  6056  00018E                     
  6057                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
  6058  00018E  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6059  000192  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6060  000196  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6061  00019A  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6062  00019E  0EF4               	movlw	244
  6063  0001A0  0100               	movlb	0	; () banked
  6064  0001A2  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6065  0001A4  0E01               	movlw	1
  6066  0001A6  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6067  0001A8  0E00               	movlw	0
  6068  0001AA  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6069  0001AC  0E00               	movlw	0
  6070  0001AE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6071  0001B0  ECEA  F017         	call	___lmul	;wreg free
  6072  0001B4                     L3:
  6073  0001B4  C060  F07F         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
  6074  0001B8  C061  F080         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
  6075  0001BC  C062  F081         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
  6076  0001C0  C063  F082         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
  6077                           
  6078                           ;radio_driver_SX1276.c: 574: break;
  6079  0001C4  D016               	goto	l456
  6080  0001C6                     
  6081                           ;radio_driver_SX1276.c: 577: tempValue = 0;
  6082  0001C6  0E00               	movlw	0
  6083  0001C8  0100               	movlb	0	; () banked
  6084  0001CA  6F7F               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
  6085  0001CC  0E00               	movlw	0
  6086  0001CE  6F80               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
  6087  0001D0  0E00               	movlw	0
  6088  0001D2  6F81               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6089  0001D4  0E00               	movlw	0
  6090  0001D6  6F82               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;radio_driver_SX1276.c: 579: }
  6094                           
  6095                           ;radio_driver_SX1276.c: 578: break;
  6096  0001D8  D00C               	goto	l456
  6097  0001DA                     l454:
  6098                           
  6099                           ; BSR set to: 0
  6100                           
  6101                           ; BSR set to: 0
  6102  0001DA  0101               	movlb	1	; () banked
  6103  0001DC  5180               	movf	(_RadioConfiguration+26)& (0+255),w,b
  6104                           
  6105                           ; Switch size 1, requested type "space"
  6106                           ; Number of cases is 3, Range of values is 7 to 9
  6107                           ; switch strategies available:
  6108                           ; Name         Instructions Cycles
  6109                           ; simple_byte           10     6 (average)
  6110                           ;	Chosen strategy is simple_byte
  6111  0001DE  0A07               	xorlw	7	; case 7
  6112  0001E0  B4D8               	btfsc	status,2,c
  6113  0001E2  D7AD               	goto	l455
  6114  0001E4  0A0F               	xorlw	15	; case 8
  6115  0001E6  B4D8               	btfsc	status,2,c
  6116  0001E8  D7BE               	goto	l457
  6117  0001EA  0A01               	xorlw	1	; case 9
  6118  0001EC  B4D8               	btfsc	status,2,c
  6119  0001EE  D7CF               	goto	l458
  6120  0001F0  D7EA               	goto	l459
  6121  0001F2                     l456:
  6122                           
  6123                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
  6124                           
  6125                           ; BSR set to: 1
  6126  0001F2  0101               	movlb	1	; () banked
  6127  0001F4  297F               	incf	(_RadioConfiguration+25)& (0+255),w,b
  6128  0001F6  0100               	movlb	0	; () banked
  6129  0001F8  6F7B               	movwf	??_RADIO_WriteConfiguration& (0+255),b
  6130  0001FA  D005               	goto	u9490
  6131  0001FC                     u9495:
  6132  0001FC  90D8               	bcf	status,0,c
  6133  0001FE  3382               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
  6134  000200  3381               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
  6135  000202  3380               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
  6136  000204  337F               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
  6137  000206                     u9490:
  6138  000206  2F7B               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
  6139  000208  D7F9               	goto	u9495
  6140                           
  6141                           ;radio_driver_SX1276.c: 582: }
  6142  00020A  D009               	goto	l460
  6143  00020C                     l453:
  6144                           
  6145                           ;radio_driver_SX1276.c: 583: else
  6146                           ;radio_driver_SX1276.c: 584: {
  6147                           ;radio_driver_SX1276.c: 585: tempValue = 0;
  6148  00020C  0E00               	movlw	0
  6149  00020E  0100               	movlb	0	; () banked
  6150  000210  6F7F               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
  6151  000212  0E00               	movlw	0
  6152  000214  6F80               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
  6153  000216  0E00               	movlw	0
  6154  000218  6F81               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6155  00021A  0E00               	movlw	0
  6156  00021C  6F82               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6157  00021E                     l460:
  6158                           
  6159                           ;radio_driver_SX1276.c: 586: }
  6160                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
  6161                           
  6162                           ; BSR set to: 0
  6163  00021E  C07F  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
  6164  000222  0E24               	movlw	36
  6165  000224  ECE4  F01A         	call	_RADIO_RegisterWrite
  6166                           
  6167                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
  6168  000228  C079  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
  6169  00022C  0E1F               	movlw	31
  6170  00022E  ECE4  F01A         	call	_RADIO_RegisterWrite
  6171                           
  6172                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
  6173  000232  0E26               	movlw	38
  6174  000234  EC89  F01A         	call	_RADIO_RegisterRead
  6175  000238  0100               	movlb	0	; () banked
  6176  00023A  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;radio_driver_SX1276.c: 596: if (
  6180                           ;radio_driver_SX1276.c: 597: (
  6181                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
  6182                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
  6183                           ;radio_driver_SX1276.c: 600: ) ||
  6184                           ;radio_driver_SX1276.c: 601: (
  6185                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
  6186                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
  6187                           ;radio_driver_SX1276.c: 604: )
  6188                           ;radio_driver_SX1276.c: 605: )
  6189  00023C  0E0C               	movlw	12
  6190  00023E  0101               	movlb	1	; () banked
  6191  000240  197F               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
  6192  000242  A4D8               	btfss	status,2,c
  6193  000244  D008               	goto	u9520
  6194                           
  6195                           ; BSR set to: 1
  6196  000246  0E07               	movlw	7
  6197  000248  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6198  00024A  B4D8               	btfsc	status,2,c
  6199  00024C  D00C               	goto	u9540
  6200                           
  6201                           ; BSR set to: 1
  6202  00024E  0E08               	movlw	8
  6203  000250  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6204  000252  B4D8               	btfsc	status,2,c
  6205  000254  D008               	goto	u9540
  6206  000256                     u9520:
  6207                           
  6208                           ; BSR set to: 1
  6209                           
  6210                           ; BSR set to: 1
  6211  000256  0E0B               	movlw	11
  6212  000258  197F               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
  6213  00025A  A4D8               	btfss	status,2,c
  6214  00025C  D007               	goto	l461
  6215                           
  6216                           ; BSR set to: 1
  6217  00025E  0E07               	movlw	7
  6218  000260  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6219  000262  A4D8               	btfss	status,2,c
  6220  000264  D003               	goto	l461
  6221  000266                     u9540:
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;radio_driver_SX1276.c: 606: {
  6225                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
  6226                           
  6227                           ; BSR set to: 1
  6228  000266  0100               	movlb	0	; () banked
  6229  000268  8783               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
  6230                           
  6231                           ;radio_driver_SX1276.c: 608: }
  6232  00026A  D002               	goto	l466
  6233  00026C                     l461:
  6234                           
  6235                           ;radio_driver_SX1276.c: 609: else
  6236                           ;radio_driver_SX1276.c: 610: {
  6237                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
  6238                           
  6239                           ; BSR set to: 0
  6240  00026C  0100               	movlb	0	; () banked
  6241  00026E  9783               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
  6242  000270                     l466:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;radio_driver_SX1276.c: 612: }
  6246                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
  6247  000270  8583               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
  6251  000272  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6252  000276  0E26               	movlw	38
  6253  000278  ECE4  F01A         	call	_RADIO_RegisterWrite
  6254                           
  6255                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
  6256  00027C  0E31               	movlw	49
  6257  00027E  EC89  F01A         	call	_RADIO_RegisterRead
  6258  000282  0100               	movlb	0	; () banked
  6259  000284  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
  6263  000286  0EF8               	movlw	248
  6264  000288  1783               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
  6268  00028A  0E03               	movlw	3
  6269  00028C  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
  6273  00028E  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6274  000292  0E31               	movlw	49
  6275  000294  ECE4  F01A         	call	_RADIO_RegisterWrite
  6276                           
  6277                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
  6278  000298  0E0A               	movlw	10
  6279  00029A  0100               	movlb	0	; () banked
  6280  00029C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6281  00029E  0E37               	movlw	55
  6282  0002A0  ECE4  F01A         	call	_RADIO_RegisterWrite
  6283                           
  6284                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
  6285  0002A4  0E12               	movlw	18
  6286  0002A6  0101               	movlb	1	; () banked
  6287  0002A8  1997               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
  6288  0002AA  A4D8               	btfss	status,2,c
  6289  0002AC  D02F               	goto	l471
  6290                           
  6291                           ; BSR set to: 1
  6292                           ;radio_driver_SX1276.c: 626: {
  6293                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
  6294                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
  6295  0002AE  0E07               	movlw	7
  6296  0002B0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6297  0002B2  B4D8               	btfsc	status,2,c
  6298  0002B4  D004               	goto	u9570
  6299                           
  6300                           ; BSR set to: 1
  6301  0002B6  0E08               	movlw	8
  6302  0002B8  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6303  0002BA  A4D8               	btfss	status,2,c
  6304  0002BC  D017               	goto	l468
  6305  0002BE                     u9570:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;radio_driver_SX1276.c: 631: {
  6309                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
  6310                           
  6311                           ; BSR set to: 1
  6312  0002BE  0E31               	movlw	49
  6313  0002C0  EC89  F01A         	call	_RADIO_RegisterRead
  6314  0002C4  0100               	movlb	0	; () banked
  6315  0002C6  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
  6319  0002C8  9F83               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
  6323  0002CA  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6324  0002CE  0E31               	movlw	49
  6325  0002D0  ECE4  F01A         	call	_RADIO_RegisterWrite
  6326                           
  6327                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
  6328  0002D4  0E40               	movlw	64
  6329  0002D6  0100               	movlb	0	; () banked
  6330  0002D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6331  0002DA  0E2F               	movlw	47
  6332  0002DC  ECE4  F01A         	call	_RADIO_RegisterWrite
  6333                           
  6334                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
  6335  0002E0  0E00               	movlw	0
  6336  0002E2  0100               	movlb	0	; () banked
  6337  0002E4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6338  0002E6  0E30               	movlw	48
  6339  0002E8  ECE4  F01A         	call	_RADIO_RegisterWrite
  6340  0002EC                     l468:
  6341                           
  6342                           ;radio_driver_SX1276.c: 637: }
  6343                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
  6344  0002EC  0E09               	movlw	9
  6345  0002EE  0101               	movlb	1	; () banked
  6346  0002F0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6347  0002F2  A4D8               	btfss	status,2,c
  6348  0002F4  D00B               	goto	l471
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;radio_driver_SX1276.c: 640: {
  6352                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
  6353  0002F6  0E31               	movlw	49
  6354  0002F8  EC89  F01A         	call	_RADIO_RegisterRead
  6355  0002FC  0100               	movlb	0	; () banked
  6356  0002FE  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
  6360  000300  8F83               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
  6364  000302  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6365  000306  0E31               	movlw	49
  6366  000308  ECE4  F01A         	call	_RADIO_RegisterWrite
  6367  00030C                     l471:
  6368                           
  6369                           ;radio_driver_SX1276.c: 644: }
  6370                           ;radio_driver_SX1276.c: 645: }
  6371                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
  6372  00030C  0E33               	movlw	51
  6373  00030E  EC89  F01A         	call	_RADIO_RegisterRead
  6374  000312  0100               	movlb	0	; () banked
  6375  000314  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
  6379  000316  9D83               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
  6383  000318  8183               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
  6387  00031A  C186  F07B         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
  6388  00031E  0E01               	movlw	1
  6389  000320  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  6390  000322  0E06               	movlw	6
  6391  000324  6F7C               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  6392  000326                     u9595:
  6393  000326  90D8               	bcf	status,0,c
  6394  000328  377B               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
  6395  00032A  2F7C               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
  6396  00032C  D7FC               	goto	u9595
  6397  00032E  517B               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
  6398  000330  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
  6402  000332  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6403  000336  0E33               	movlw	51
  6404  000338  ECE4  F01A         	call	_RADIO_RegisterWrite
  6405                           
  6406                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
  6407  00033C  C186  F07B         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
  6408  000340  0E01               	movlw	1
  6409  000342  0100               	movlb	0	; () banked
  6410  000344  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  6411  000346  90D8               	bcf	status,0,c
  6412  000348  377B               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
  6413  00034A  90D8               	bcf	status,0,c
  6414  00034C  357B               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
  6415  00034E  0AFF               	xorlw	255
  6416  000350  0B1D               	andlw	29
  6417  000352  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
  6421  000354  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6422  000358  0E3B               	movlw	59
  6423  00035A  ECE4  F01A         	call	_RADIO_RegisterWrite
  6424                           
  6425                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
  6426  00035E  0101               	movlb	1	; () banked
  6427  000360  5173               	movf	(_RadioConfiguration+13)& (0+255),w,b
  6428  000362  0100               	movlb	0	; () banked
  6429  000364  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6430  000366  0E20               	movlw	32
  6431  000368  ECE4  F01A         	call	_RADIO_RegisterWrite
  6432                           
  6433                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
  6434  00036C  C172  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
  6435  000370  0E21               	movlw	33
  6436  000372  ECE4  F01A         	call	_RADIO_RegisterWrite
  6437                           
  6438                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
  6439  000376  0E00               	movlw	0
  6440  000378  0100               	movlb	0	; () banked
  6441  00037A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6442  00037C  0E0D               	movlw	13
  6443  00037E  ECE4  F01A         	call	_RADIO_RegisterWrite
  6444                           
  6445                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
  6446  000382  0E00               	movlw	0
  6447  000384  0100               	movlb	0	; () banked
  6448  000386  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6449  000388  0E0E               	movlw	14
  6450  00038A  ECE4  F01A         	call	_RADIO_RegisterWrite
  6451                           
  6452                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
  6453  00038E  0E00               	movlw	0
  6454  000390  0100               	movlb	0	; () banked
  6455  000392  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6456  000394  0E0F               	movlw	15
  6457  000396  ECE4  F01A         	call	_RADIO_RegisterWrite
  6458                           
  6459                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
  6460  00039A  0E12               	movlw	18
  6461  00039C  0101               	movlb	1	; () banked
  6462  00039E  1997               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
  6463  0003A0  A4D8               	btfss	status,2,c
  6464  0003A2  D071               	goto	l478
  6465                           
  6466                           ; BSR set to: 1
  6467                           ;radio_driver_SX1276.c: 665: {
  6468                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
  6469                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
  6470                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
  6471                           ;radio_driver_SX1276.c: 669: )
  6472  0003A4  0E09               	movlw	9
  6473  0003A6  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6474  0003A8  A4D8               	btfss	status,2,c
  6475  0003AA  D020               	goto	l473
  6476                           
  6477                           ; BSR set to: 1
  6478  0003AC  0E80               	movlw	128
  6479  0003AE  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6480  0003B0  0E13               	movlw	19
  6481  0003B2  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6482  0003B4  0E61               	movlw	97
  6483  0003B6  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6484  0003B8  0E33               	movlw	51
  6485  0003BA  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6486  0003BC  A0D8               	btfss	status,0,c
  6487  0003BE  D016               	goto	l473
  6488                           
  6489                           ; BSR set to: 1
  6490  0003C0  0566               	decf	_RadioConfiguration& (0+255),w,b
  6491  0003C2  0EF7               	movlw	247
  6492  0003C4  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6493  0003C6  0ECB               	movlw	203
  6494  0003C8  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6495  0003CA  0E3C               	movlw	60
  6496  0003CC  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6497  0003CE  B0D8               	btfsc	status,0,c
  6498  0003D0  D00D               	goto	l473
  6499                           
  6500                           ; BSR set to: 1
  6501                           ;radio_driver_SX1276.c: 670: {
  6502                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
  6503  0003D2  0E02               	movlw	2
  6504  0003D4  0100               	movlb	0	; () banked
  6505  0003D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6506  0003D8  0E36               	movlw	54
  6507  0003DA  ECE4  F01A         	call	_RADIO_RegisterWrite
  6508                           
  6509                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
  6510  0003DE  0E64               	movlw	100
  6511  0003E0  0100               	movlb	0	; () banked
  6512  0003E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6513  0003E4  0E3A               	movlw	58
  6514  0003E6  ECE4  F01A         	call	_RADIO_RegisterWrite
  6515                           
  6516                           ;radio_driver_SX1276.c: 673: }
  6517  0003EA  D02C               	goto	l476
  6518  0003EC                     l473:
  6519                           
  6520                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
  6521                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
  6522                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
  6523                           ;radio_driver_SX1276.c: 677: )
  6524  0003EC  0E09               	movlw	9
  6525  0003EE  0101               	movlb	1	; () banked
  6526  0003F0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6527  0003F2  A4D8               	btfss	status,2,c
  6528  0003F4  D021               	goto	l475
  6529                           
  6530                           ; BSR set to: 1
  6531  0003F6  0E80               	movlw	128
  6532  0003F8  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6533  0003FA  0E1A               	movlw	26
  6534  0003FC  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6535  0003FE  0E70               	movlw	112
  6536  000400  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6537  000402  0E18               	movlw	24
  6538  000404  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6539  000406  A0D8               	btfss	status,0,c
  6540  000408  D017               	goto	l475
  6541                           
  6542                           ; BSR set to: 1
  6543  00040A  0E41               	movlw	65
  6544  00040C  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6545  00040E  0EDD               	movlw	221
  6546  000410  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6547  000412  0E4A               	movlw	74
  6548  000414  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6549  000416  0E1F               	movlw	31
  6550  000418  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6551  00041A  B0D8               	btfsc	status,0,c
  6552  00041C  D00D               	goto	l475
  6553                           
  6554                           ; BSR set to: 1
  6555                           ;radio_driver_SX1276.c: 678: {
  6556                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
  6557  00041E  0E02               	movlw	2
  6558  000420  0100               	movlb	0	; () banked
  6559  000422  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6560  000424  0E36               	movlw	54
  6561  000426  ECE4  F01A         	call	_RADIO_RegisterWrite
  6562                           
  6563                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
  6564  00042A  0E7F               	movlw	127
  6565  00042C  0100               	movlb	0	; () banked
  6566  00042E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6567  000430  0E3A               	movlw	58
  6568  000432  ECE4  F01A         	call	_RADIO_RegisterWrite
  6569                           
  6570                           ;radio_driver_SX1276.c: 681: }
  6571  000436  D006               	goto	l476
  6572  000438                     l475:
  6573                           
  6574                           ;radio_driver_SX1276.c: 682: else
  6575                           ;radio_driver_SX1276.c: 683: {
  6576                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
  6577  000438  0E03               	movlw	3
  6578  00043A  0100               	movlb	0	; () banked
  6579  00043C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6580  00043E  0E36               	movlw	54
  6581  000440  ECE4  F01A         	call	_RADIO_RegisterWrite
  6582  000444                     l476:
  6583                           
  6584                           ;radio_driver_SX1276.c: 685: }
  6585                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
  6586  000444  0E09               	movlw	9
  6587  000446  0101               	movlb	1	; () banked
  6588  000448  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6589  00044A  A4D8               	btfss	status,2,c
  6590  00044C  D010               	goto	l477
  6591                           
  6592                           ; BSR set to: 1
  6593  00044E  0586               	decf	(_RadioConfiguration+32)& (0+255),w,b
  6594  000450  A4D8               	btfss	status,2,c
  6595  000452  D00D               	goto	l477
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;radio_driver_SX1276.c: 689: {
  6599                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
  6600  000454  0E65               	movlw	101
  6601  000456  0100               	movlb	0	; () banked
  6602  000458  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6603  00045A  0E3A               	movlw	58
  6604  00045C  ECE4  F01A         	call	_RADIO_RegisterWrite
  6605                           
  6606                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
  6607  000460  0E19               	movlw	25
  6608  000462  0100               	movlb	0	; () banked
  6609  000464  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6610  000466  0E3B               	movlw	59
  6611  000468  ECE4  F01A         	call	_RADIO_RegisterWrite
  6612                           
  6613                           ;radio_driver_SX1276.c: 692: }
  6614  00046C  D00C               	goto	l478
  6615  00046E                     l477:
  6616                           
  6617                           ;radio_driver_SX1276.c: 693: else
  6618                           ;radio_driver_SX1276.c: 694: {
  6619                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
  6620  00046E  0E65               	movlw	101
  6621  000470  0100               	movlb	0	; () banked
  6622  000472  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6623  000474  0E3A               	movlw	58
  6624  000476  ECE4  F01A         	call	_RADIO_RegisterWrite
  6625                           
  6626                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
  6627  00047A  0E1D               	movlw	29
  6628  00047C  0100               	movlb	0	; () banked
  6629  00047E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6630  000480  0E3B               	movlw	59
  6631  000482  ECE4  F01A         	call	_RADIO_RegisterWrite
  6632  000486                     l478:
  6633                           
  6634                           ;radio_driver_SX1276.c: 697: }
  6635                           ;radio_driver_SX1276.c: 698: }
  6636                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
  6637  000486  0EFF               	movlw	255
  6638  000488  0100               	movlb	0	; () banked
  6639  00048A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6640  00048C  0E12               	movlw	18
  6641  00048E  ECE4  F01A         	call	_RADIO_RegisterWrite
  6642                           
  6643                           ;radio_driver_SX1276.c: 702: }
  6644  000492  0012               	return	
  6645  000494                     l452:
  6646                           
  6647                           ;radio_driver_SX1276.c: 703: else
  6648                           ;radio_driver_SX1276.c: 704: {
  6649                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
  6650  000494  C16A  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
  6651  000498  C16B  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
  6652  00049C  C16C  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
  6653  0004A0  C16D  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
  6654  0004A4  EC5C  F016         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
  6655                           
  6656                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
  6657  0004A8  C16E  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
  6658  0004AC  C16F  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
  6659  0004B0  C170  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
  6660  0004B4  C171  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
  6661  0004B8  EC91  F016         	call	_RADIO_WriteFSKBitRate	;wreg free
  6662                           
  6663                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
  6664  0004BC  0101               	movlb	1	; () banked
  6665  0004BE  5173               	movf	(_RadioConfiguration+13)& (0+255),w,b
  6666  0004C0  0100               	movlb	0	; () banked
  6667  0004C2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6668  0004C4  0E25               	movlw	37
  6669  0004C6  ECE4  F01A         	call	_RADIO_RegisterWrite
  6670                           
  6671                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
  6672  0004CA  C172  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
  6673  0004CE  0E26               	movlw	38
  6674  0004D0  ECE4  F01A         	call	_RADIO_RegisterWrite
  6675                           
  6676                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
  6677  0004D4  0E0A               	movlw	10
  6678  0004D6  EC89  F01A         	call	_RADIO_RegisterRead
  6679  0004DA  0100               	movlb	0	; () banked
  6680  0004DC  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
  6684  0004DE  0E9F               	movlw	159
  6685  0004E0  1783               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
  6689  0004E2  0101               	movlb	1	; () banked
  6690  0004E4  3999               	swapf	(_RadioConfiguration+51)& (0+255),w,b
  6691  0004E6  46E8               	rlncf	wreg,f,c
  6692  0004E8  0BE0               	andlw	224
  6693  0004EA  0100               	movlb	0	; () banked
  6694  0004EC  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6695                           
  6696                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
  6697  0004EE  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6698  0004F2  0E0A               	movlw	10
  6699  0004F4  ECE4  F01A         	call	_RADIO_RegisterWrite
  6700                           
  6701                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
  6702  0004F8  0EC8               	movlw	200
  6703  0004FA  0100               	movlb	0	; () banked
  6704  0004FC  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
  6708  0004FE  0101               	movlb	1	; () banked
  6709  000500  5182               	movf	(_RadioConfiguration+28)& (0+255),w,b
  6710  000502  B4D8               	btfsc	status,2,c
  6711  000504  D002               	goto	l480
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;radio_driver_SX1276.c: 722: {
  6715                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
  6716  000506  0100               	movlb	0	; () banked
  6717  000508  8983               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
  6718  00050A                     l480:
  6719                           
  6720                           ;radio_driver_SX1276.c: 724: }
  6721                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
  6722                           
  6723                           ; BSR set to: 0
  6724  00050A  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6725  00050E  0E30               	movlw	48
  6726  000510  ECE4  F01A         	call	_RADIO_RegisterWrite
  6727                           
  6728                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
  6729  000514  0E00               	movlw	0
  6730  000516  0100               	movlb	0	; () banked
  6731  000518  6F7E               	movwf	RADIO_WriteConfiguration@i& (0+255),b
  6732  00051A  D010               	goto	l481
  6733  00051C                     
  6734                           ; BSR set to: 0
  6735                           ;radio_driver_SX1276.c: 729: {
  6736                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
  6737                           
  6738                           ; BSR set to: 0
  6739  00051C  517E               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
  6740  00051E  0D01               	mullw	1
  6741  000520  0E75               	movlw	low (_RadioConfiguration+15)
  6742  000522  24F3               	addwf	prodl,w,c
  6743  000524  6ED9               	movwf	fsr2l,c
  6744  000526  0E01               	movlw	high (_RadioConfiguration+15)
  6745  000528  20F4               	addwfc	prodh,w,c
  6746  00052A  6EDA               	movwf	fsr2h,c
  6747  00052C  50DF               	movf	indf2,w,c
  6748  00052E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6749  000530  517E               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
  6750  000532  0F28               	addlw	40
  6751  000534  ECE4  F01A         	call	_RADIO_RegisterWrite
  6752  000538  0100               	movlb	0	; () banked
  6753  00053A  2B7E               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
  6754  00053C                     l481:
  6755                           
  6756                           ; BSR set to: 0
  6757                           
  6758                           ; BSR set to: 0
  6759  00053C  0101               	movlb	1	; () banked
  6760  00053E  517D               	movf	(_RadioConfiguration+23)& (0+255),w,b
  6761  000540  0100               	movlb	0	; () banked
  6762  000542  5D7E               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
  6763  000544  A0D8               	btfss	status,0,c
  6764  000546  D7EA               	goto	l482
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;radio_driver_SX1276.c: 733: }
  6768                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
  6769                           
  6770                           ; BSR set to: 0
  6771  000548  0101               	movlb	1	; () banked
  6772  00054A  517D               	movf	(_RadioConfiguration+23)& (0+255),w,b
  6773  00054C  B4D8               	btfsc	status,2,c
  6774  00054E  D008               	goto	l484
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;radio_driver_SX1276.c: 737: {
  6778                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
  6779  000550  057D               	decf	(_RadioConfiguration+23)& (0+255),w,b
  6780  000552  0910               	iorlw	16
  6781  000554  0100               	movlb	0	; () banked
  6782  000556  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6783  000558  0E27               	movlw	39
  6784  00055A  ECE4  F01A         	call	_RADIO_RegisterWrite
  6785                           
  6786                           ;radio_driver_SX1276.c: 739: }
  6787  00055E  D006               	goto	l485
  6788  000560                     l484:
  6789                           
  6790                           ;radio_driver_SX1276.c: 740: else
  6791                           ;radio_driver_SX1276.c: 741: {
  6792                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
  6793  000560  0E00               	movlw	0
  6794  000562  0100               	movlb	0	; () banked
  6795  000564  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6796  000566  0E27               	movlw	39
  6797  000568  ECE4  F01A         	call	_RADIO_RegisterWrite
  6798  00056C                     l485:
  6799                           
  6800                           ;radio_driver_SX1276.c: 743: }
  6801                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
  6802  00056C  0EFF               	movlw	255
  6803  00056E  0100               	movlb	0	; () banked
  6804  000570  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6805  000572  0E3E               	movlw	62
  6806  000574  ECE4  F01A         	call	_RADIO_RegisterWrite
  6807                           
  6808                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
  6809  000578  0EFF               	movlw	255
  6810  00057A  0100               	movlb	0	; () banked
  6811  00057C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6812  00057E  0E3F               	movlw	63
  6813  000580  ECE4  F01A         	call	_RADIO_RegisterWrite
  6814  000584  0012               	return	
  6815  000586                     __end_of_RADIO_WriteConfiguration:
  6816                           	opt stack 0
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           prodh	equ	0xFF4
  6822                           prodl	equ	0xFF3
  6823                           intcon	equ	0xFF2
  6824                           intcon2	equ	0xFF1
  6825                           intcon3	equ	0xFF0
  6826                           postinc0	equ	0xFEE
  6827                           wreg	equ	0xFE8
  6828                           indf2	equ	0xFDF
  6829                           postinc2	equ	0xFDE
  6830                           postdec2	equ	0xFDD
  6831                           fsr2h	equ	0xFDA
  6832                           fsr2l	equ	0xFD9
  6833                           status	equ	0xFD8
  6834                           
  6835 ;; *************** function _RADIO_WritePower *****************
  6836 ;; Defined at:
  6837 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  power           1    wreg     char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  power           1    6[BANK0 ] char 
  6842 ;;  paDac           1    5[BANK0 ] unsigned char 
  6843 ;;  ocp             1    4[BANK0 ] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;Total ram usage:        3 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:   10
  6860 ;; This function calls:
  6861 ;;		_RADIO_RegisterRead
  6862 ;;		_RADIO_RegisterWrite
  6863 ;; This function is called by:
  6864 ;;		_RADIO_WriteConfiguration
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text41
  6869  00227C                     __ptext41:
  6870                           	opt stack 0
  6871  00227C                     _RADIO_WritePower:
  6872                           	opt stack 17
  6873                           
  6874                           ;incstack = 0
  6875                           ;RADIO_WritePower@power stored from wreg
  6876  00227C  0100               	movlb	0	; () banked
  6877  00227E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6878                           
  6879                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
  6880                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
  6881                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
  6882  002280  0101               	movlb	1	; () banked
  6883  002282  5183               	movf	(_RadioConfiguration+29)& (0+255),w,b
  6884  002284  A4D8               	btfss	status,2,c
  6885  002286  D030               	goto	l423
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;radio_driver_SX1276.c: 348: {
  6889                           ;radio_driver_SX1276.c: 350: if (power < -3)
  6890  002288  0100               	movlb	0	; () banked
  6891  00228A  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6892  00228C  0A80               	xorlw	128
  6893  00228E  0F83               	addlw	131
  6894  002290  B0D8               	btfsc	status,0,c
  6895  002292  D002               	goto	l424
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;radio_driver_SX1276.c: 351: {
  6899                           ;radio_driver_SX1276.c: 352: power = -3;
  6900  002294  0EFD               	movlw	253
  6901  002296  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6902  002298                     l424:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;radio_driver_SX1276.c: 353: }
  6906                           ;radio_driver_SX1276.c: 354: if (power > 15)
  6907                           
  6908                           ; BSR set to: 0
  6909  002298  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6910  00229A  0A80               	xorlw	128
  6911  00229C  0F70               	addlw	-144
  6912  00229E  A0D8               	btfss	status,0,c
  6913  0022A0  D002               	goto	l425
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;radio_driver_SX1276.c: 355: {
  6917                           ;radio_driver_SX1276.c: 356: power = 15;
  6918  0022A2  0E0F               	movlw	15
  6919  0022A4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6920  0022A6                     l425:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;radio_driver_SX1276.c: 357: }
  6924                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
  6925                           
  6926                           ; BSR set to: 0
  6927  0022A6  0E4D               	movlw	77
  6928  0022A8  EC89  F01A         	call	_RADIO_RegisterRead
  6929  0022AC  0100               	movlb	0	; () banked
  6930  0022AE  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
  6934  0022B0  0EF8               	movlw	248
  6935  0022B2  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
  6939  0022B4  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
  6943  0022B6  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
  6944  0022BA  0E4D               	movlw	77
  6945  0022BC  ECE4  F01A         	call	_RADIO_RegisterWrite
  6946                           
  6947                           ;radio_driver_SX1276.c: 364: if (power < 0)
  6948  0022C0  0100               	movlb	0	; () banked
  6949  0022C2  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
  6950  0022C4  D009               	goto	l426
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;radio_driver_SX1276.c: 365: {
  6954                           ;radio_driver_SX1276.c: 369: power += 3;
  6955  0022C6  0E03               	movlw	3
  6956  0022C8  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
  6960  0022CA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6961  0022CC  0920               	iorlw	32
  6962  0022CE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6963  0022D0  0E09               	movlw	9
  6964  0022D2  ECE4  F01A         	call	_RADIO_RegisterWrite
  6965                           
  6966                           ;radio_driver_SX1276.c: 371: }
  6967  0022D6  0012               	return	
  6968  0022D8                     l426:
  6969                           
  6970                           ;radio_driver_SX1276.c: 372: else
  6971                           ;radio_driver_SX1276.c: 373: {
  6972                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
  6973  0022D8  0100               	movlb	0	; () banked
  6974  0022DA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6975  0022DC  0970               	iorlw	112
  6976  0022DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6977  0022E0  0E09               	movlw	9
  6978  0022E2  ECE4  F01A         	call	_RADIO_RegisterWrite
  6979                           
  6980                           ;radio_driver_SX1276.c: 378: }
  6981                           ;radio_driver_SX1276.c: 379: }
  6982  0022E6  0012               	return	
  6983  0022E8                     l423:
  6984                           
  6985                           ;radio_driver_SX1276.c: 380: else
  6986                           ;radio_driver_SX1276.c: 381: {
  6987                           ;radio_driver_SX1276.c: 385: if (power < 2)
  6988  0022E8  0100               	movlb	0	; () banked
  6989  0022EA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6990  0022EC  0A80               	xorlw	128
  6991  0022EE  0F7E               	addlw	-130
  6992  0022F0  B0D8               	btfsc	status,0,c
  6993  0022F2  D002               	goto	l429
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;radio_driver_SX1276.c: 386: {
  6997                           ;radio_driver_SX1276.c: 387: power = 2;
  6998  0022F4  0E02               	movlw	2
  6999  0022F6  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7000  0022F8                     l429:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;radio_driver_SX1276.c: 388: }
  7004                           ;radio_driver_SX1276.c: 391: if (power >= 20)
  7005                           
  7006                           ; BSR set to: 0
  7007  0022F8  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7008  0022FA  0A80               	xorlw	128
  7009  0022FC  0F6C               	addlw	-148
  7010  0022FE  A0D8               	btfss	status,0,c
  7011  002300  D002               	goto	l430
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;radio_driver_SX1276.c: 392: {
  7015                           ;radio_driver_SX1276.c: 393: power = 20;
  7016  002302  0E14               	movlw	20
  7017  002304  D006               	goto	L4
  7018  002306                     l430:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;radio_driver_SX1276.c: 395: else if (power > 17)
  7022                           
  7023                           ; BSR set to: 0
  7024  002306  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7025  002308  0A80               	xorlw	128
  7026  00230A  0F6E               	addlw	-146
  7027  00230C  A0D8               	btfss	status,0,c
  7028  00230E  D002               	goto	l432
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;radio_driver_SX1276.c: 396: {
  7032                           ;radio_driver_SX1276.c: 397: power = 17;
  7033  002310  0E11               	movlw	17
  7034  002312                     L4:
  7035  002312  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7036  002314                     l432:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;radio_driver_SX1276.c: 398: }
  7040                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
  7041                           
  7042                           ; BSR set to: 0
  7043                           
  7044                           ; BSR set to: 0
  7045  002314  0E0B               	movlw	11
  7046  002316  EC89  F01A         	call	_RADIO_RegisterRead
  7047  00231A  0100               	movlb	0	; () banked
  7048  00231C  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
  7052  00231E  0E4D               	movlw	77
  7053  002320  EC89  F01A         	call	_RADIO_RegisterRead
  7054  002324  0100               	movlb	0	; () banked
  7055  002326  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
  7059  002328  0EF8               	movlw	248
  7060  00232A  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;radio_driver_SX1276.c: 403: if (power == 20)
  7064  00232C  0E14               	movlw	20
  7065  00232E  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
  7066  002330  A4D8               	btfss	status,2,c
  7067  002332  D006               	goto	l433
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;radio_driver_SX1276.c: 404: {
  7071                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
  7072  002334  0E07               	movlw	7
  7073  002336  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;radio_driver_SX1276.c: 406: power = 15;
  7077  002338  0E0F               	movlw	15
  7078  00233A  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
  7082  00233C  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
  7083                           
  7084                           ;radio_driver_SX1276.c: 408: }
  7085  00233E  D004               	goto	l434
  7086  002340                     l433:
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;radio_driver_SX1276.c: 409: else
  7090                           ;radio_driver_SX1276.c: 410: {
  7091                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
  7092                           
  7093                           ; BSR set to: 0
  7094  002340  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;radio_driver_SX1276.c: 412: power -= 2;
  7098  002342  0EFE               	movlw	254
  7099  002344  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
  7103  002346  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
  7104  002348                     l434:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;radio_driver_SX1276.c: 414: }
  7108                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
  7109                           
  7110                           ; BSR set to: 0
  7111  002348  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
  7112  00234C  0E4D               	movlw	77
  7113  00234E  ECE4  F01A         	call	_RADIO_RegisterWrite
  7114                           
  7115                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
  7116  002352  0100               	movlb	0	; () banked
  7117  002354  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7118  002356  0980               	iorlw	128
  7119  002358  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7120  00235A  0E09               	movlw	9
  7121  00235C  ECE4  F01A         	call	_RADIO_RegisterWrite
  7122                           
  7123                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
  7124  002360  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
  7125  002364  0E0B               	movlw	11
  7126  002366  ECE4  F01A         	call	_RADIO_RegisterWrite
  7127  00236A  0012               	return	
  7128  00236C                     __end_of_RADIO_WritePower:
  7129                           	opt stack 0
  7130                           tblptru	equ	0xFF8
  7131                           tblptrh	equ	0xFF7
  7132                           tblptrl	equ	0xFF6
  7133                           tablat	equ	0xFF5
  7134                           prodh	equ	0xFF4
  7135                           prodl	equ	0xFF3
  7136                           intcon	equ	0xFF2
  7137                           intcon2	equ	0xFF1
  7138                           intcon3	equ	0xFF0
  7139                           postinc0	equ	0xFEE
  7140                           wreg	equ	0xFE8
  7141                           indf2	equ	0xFDF
  7142                           postinc2	equ	0xFDE
  7143                           postdec2	equ	0xFDD
  7144                           fsr2h	equ	0xFDA
  7145                           fsr2l	equ	0xFD9
  7146                           status	equ	0xFD8
  7147                           
  7148 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
  7149 ;; Defined at:
  7150 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  num             4   17[BANK0 ] unsigned long 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;Total ram usage:        8 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:   10
  7171 ;; This function calls:
  7172 ;;		_RADIO_RegisterWrite
  7173 ;;		___lldiv
  7174 ;; This function is called by:
  7175 ;;		_RADIO_WriteConfiguration
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text42
  7180  002CB8                     __ptext42:
  7181                           	opt stack 0
  7182  002CB8                     _RADIO_WriteFSKFrequencyDeviation:
  7183                           	opt stack 17
  7184                           
  7185                           ;radio_driver_SX1276.c: 296: uint32_t num;
  7186                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
  7187                           
  7188                           ;incstack = 0
  7189  002CB8  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
  7190  002CBC  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
  7191  002CC0  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
  7192  002CC4  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
  7193                           
  7194                           ;radio_driver_SX1276.c: 304: num <<= (8);
  7195  002CC8  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
  7196  002CCC  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
  7197  002CD0  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
  7198  002CD4  0100               	movlb	0	; () banked
  7199  002CD6  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;radio_driver_SX1276.c: 305: num /= 15625;
  7203  002CD8  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
  7204  002CDC  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
  7205  002CE0  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
  7206  002CE4  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
  7207  002CE8  0E09               	movlw	9
  7208  002CEA  6F64               	movwf	___lldiv@divisor& (0+255),b
  7209  002CEC  0E3D               	movlw	61
  7210  002CEE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7211  002CF0  0E00               	movlw	0
  7212  002CF2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7213  002CF4  0E00               	movlw	0
  7214  002CF6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7215  002CF8  ECE4  F015         	call	___lldiv	;wreg free
  7216  002CFC  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
  7217  002D00  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
  7218  002D04  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
  7219  002D08  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
  7220                           
  7221                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
  7222  002D0C  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
  7223  002D10  0E04               	movlw	4
  7224  002D12  ECE4  F01A         	call	_RADIO_RegisterWrite
  7225                           
  7226                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
  7227  002D16  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
  7228  002D1A  0E05               	movlw	5
  7229  002D1C  ECE4  F01A         	call	_RADIO_RegisterWrite
  7230  002D20  0012               	return		;funcret
  7231  002D22                     __end_of_RADIO_WriteFSKFrequencyDeviation:
  7232                           	opt stack 0
  7233                           tblptru	equ	0xFF8
  7234                           tblptrh	equ	0xFF7
  7235                           tblptrl	equ	0xFF6
  7236                           tablat	equ	0xFF5
  7237                           prodh	equ	0xFF4
  7238                           prodl	equ	0xFF3
  7239                           intcon	equ	0xFF2
  7240                           intcon2	equ	0xFF1
  7241                           intcon3	equ	0xFF0
  7242                           postinc0	equ	0xFEE
  7243                           wreg	equ	0xFE8
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function _RADIO_WriteFSKBitRate *****************
  7252 ;; Defined at:
  7253 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  bitRate         4   13[BANK0 ] unsigned long 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  num             4   17[BANK0 ] unsigned long 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        8 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:   10
  7274 ;; This function calls:
  7275 ;;		_RADIO_RegisterWrite
  7276 ;;		___lldiv
  7277 ;; This function is called by:
  7278 ;;		_RADIO_WriteConfiguration
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text43
  7283  002D22                     __ptext43:
  7284                           	opt stack 0
  7285  002D22                     _RADIO_WriteFSKBitRate:
  7286                           	opt stack 17
  7287                           
  7288                           ;radio_driver_SX1276.c: 318: uint32_t num;
  7289                           ;radio_driver_SX1276.c: 320: num = 32000000;
  7290                           
  7291                           ;incstack = 0
  7292  002D22  0E00               	movlw	0
  7293  002D24  0100               	movlb	0	; () banked
  7294  002D26  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
  7295  002D28  0E48               	movlw	72
  7296  002D2A  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
  7297  002D2C  0EE8               	movlw	232
  7298  002D2E  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
  7299  002D30  0E01               	movlw	1
  7300  002D32  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;radio_driver_SX1276.c: 321: num /= bitRate;
  7304  002D34  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
  7305  002D38  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
  7306  002D3C  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
  7307  002D40  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
  7308  002D44  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
  7309  002D48  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
  7310  002D4C  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
  7311  002D50  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
  7312  002D54  ECE4  F015         	call	___lldiv	;wreg free
  7313  002D58  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
  7314  002D5C  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
  7315  002D60  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
  7316  002D64  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
  7317                           
  7318                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
  7319  002D68  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
  7320  002D6C  0E02               	movlw	2
  7321  002D6E  ECE4  F01A         	call	_RADIO_RegisterWrite
  7322                           
  7323                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
  7324  002D72  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
  7325  002D76  0E03               	movlw	3
  7326  002D78  ECE4  F01A         	call	_RADIO_RegisterWrite
  7327                           
  7328                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
  7329  002D7C  0E00               	movlw	0
  7330  002D7E  0100               	movlb	0	; () banked
  7331  002D80  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7332  002D82  0E5D               	movlw	93
  7333  002D84  ECE4  F01A         	call	_RADIO_RegisterWrite
  7334  002D88  0012               	return		;funcret
  7335  002D8A                     __end_of_RADIO_WriteFSKBitRate:
  7336                           	opt stack 0
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           intcon2	equ	0xFF1
  7345                           intcon3	equ	0xFF0
  7346                           postinc0	equ	0xFEE
  7347                           wreg	equ	0xFE8
  7348                           indf2	equ	0xFDF
  7349                           postinc2	equ	0xFDE
  7350                           postdec2	equ	0xFDD
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8
  7354                           
  7355 ;; *************** function _PrepareJoinRequestFrame *****************
  7356 ;; Defined at:
  7357 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  mic             4  116[BANK0 ] unsigned long 
  7362 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
  7363 ;;  iCtr            1  121[BANK0 ] unsigned char 
  7364 ;;  mhdr            1  120[BANK0 ] struct .
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      unsigned char 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;Total ram usage:       11 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:   13
  7381 ;; This function calls:
  7382 ;;		_ComputeMic
  7383 ;;		_Random
  7384 ;;		_memcpy
  7385 ;;		_memset
  7386 ;; This function is called by:
  7387 ;;		_LORAWAN_Join
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text44
  7392  0014E6                     __ptext44:
  7393                           	opt stack 0
  7394  0014E6                     _PrepareJoinRequestFrame:
  7395                           	opt stack 16
  7396                           
  7397                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
  7398                           
  7399                           ;incstack = 0
  7400  0014E6  0E00               	movlw	0
  7401  0014E8  0100               	movlb	0	; () banked
  7402  0014EA  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;lorawan.c: 1809: Mhdr_t mhdr;
  7406                           ;lorawan.c: 1810: uint32_t mic;
  7407                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
  7408  0014EC  0EE0               	movlw	low _macBuffer
  7409  0014EE  6F60               	movwf	memset@p1& (0+255),b
  7410  0014F0  0E04               	movlw	high _macBuffer
  7411  0014F2  6F61               	movwf	(memset@p1+1)& (0+255),b
  7412  0014F4  0E00               	movlw	0
  7413  0014F6  6F63               	movwf	(memset@c+1)& (0+255),b
  7414  0014F8  0E00               	movlw	0
  7415  0014FA  6F62               	movwf	memset@c& (0+255),b
  7416  0014FC  0E01               	movlw	1
  7417  0014FE  6F65               	movwf	(memset@n+1)& (0+255),b
  7418  001500  0E0F               	movlw	15
  7419  001502  6F64               	movwf	memset@n& (0+255),b
  7420  001504  EC18  F01A         	call	_memset	;wreg free
  7421                           
  7422                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
  7423  001508  0100               	movlb	0	; () banked
  7424  00150A  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
  7425  00150C  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
  7426  00150E  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;lorawan.c: 1815: mhdr.bits.major = 0;
  7430  001510  0EFC               	movlw	-4
  7431  001512  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
  7435  001514  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
  7436  001516  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
  7437  001518  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
  7441  00151A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7442  00151C  0D01               	mullw	1
  7443  00151E  0EE0               	movlw	low _macBuffer
  7444  001520  24F3               	addwf	prodl,w,c
  7445  001522  6ED9               	movwf	fsr2l,c
  7446  001524  0E04               	movlw	high _macBuffer
  7447  001526  20F4               	addwfc	prodh,w,c
  7448  001528  6EDA               	movwf	fsr2h,c
  7449  00152A  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
  7450                           
  7451                           ; BSR set to: 0
  7452  00152E  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
  7456  001530  0E00               	movlw	0
  7457  001532  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
  7458  001534                     l11114:
  7459                           
  7460                           ; BSR set to: 0
  7461  001534  0E07               	movlw	7
  7462  001536  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
  7463  001538  D001               	goto	l2034
  7464  00153A  D022               	goto	u11810
  7465  00153C                     l2034:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;lorawan.c: 1821: {
  7469                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
  7470                           
  7471                           ; BSR set to: 0
  7472  00153C  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7473  00153E  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
  7474  001540  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
  7475  001542  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
  7476  001544  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7477  001546  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
  7478  001548  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7479  00154A  0E07               	movlw	7
  7480  00154C  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
  7481  00154E  0E00               	movlw	0
  7482  001550  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7483  001552  0E52               	movlw	low (_loRa+82)
  7484  001554  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
  7485  001556  6ED9               	movwf	fsr2l,c
  7486  001558  0E02               	movlw	high (_loRa+82)
  7487  00155A  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
  7488  00155C  6EDA               	movwf	fsr2h,c
  7489  00155E  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7490  001560  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
  7491  001564  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
  7492  001566  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
  7493  001568  0E00               	movlw	0
  7494  00156A  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
  7495  00156C  0EE0               	movlw	low _macBuffer
  7496  00156E  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
  7497  001570  6EE9               	movwf	fsr0l,c
  7498  001572  0E04               	movlw	high _macBuffer
  7499  001574  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
  7500  001576  6EEA               	movwf	fsr0h,c
  7501  001578  CFDF FFEF          	movff	indf2,indf0
  7502                           
  7503                           ; BSR set to: 0
  7504  00157C  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
  7505  00157E  D7DA               	goto	l11114
  7506  001580                     u11810:
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;lorawan.c: 1823: }
  7510                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
  7511                           
  7512                           ; BSR set to: 0
  7513  001580  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7514  001582  0F08               	addlw	8
  7515  001584  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
  7519  001586  0E00               	movlw	0
  7520  001588  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
  7521  00158A                     l11128:
  7522                           
  7523                           ; BSR set to: 0
  7524  00158A  0E07               	movlw	7
  7525  00158C  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
  7526  00158E  D001               	goto	l2036
  7527  001590  D022               	goto	u11830
  7528  001592                     l2036:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;lorawan.c: 1828: {
  7532                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
  7533                           
  7534                           ; BSR set to: 0
  7535  001592  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7536  001594  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
  7537  001596  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
  7538  001598  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
  7539  00159A  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7540  00159C  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
  7541  00159E  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7542  0015A0  0E07               	movlw	7
  7543  0015A2  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
  7544  0015A4  0E00               	movlw	0
  7545  0015A6  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7546  0015A8  0E5A               	movlw	low (_loRa+90)
  7547  0015AA  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
  7548  0015AC  6ED9               	movwf	fsr2l,c
  7549  0015AE  0E02               	movlw	high (_loRa+90)
  7550  0015B0  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
  7551  0015B2  6EDA               	movwf	fsr2h,c
  7552  0015B4  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7553  0015B6  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
  7554  0015BA  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
  7555  0015BC  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
  7556  0015BE  0E00               	movlw	0
  7557  0015C0  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
  7558  0015C2  0EE0               	movlw	low _macBuffer
  7559  0015C4  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
  7560  0015C6  6EE9               	movwf	fsr0l,c
  7561  0015C8  0E04               	movlw	high _macBuffer
  7562  0015CA  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
  7563  0015CC  6EEA               	movwf	fsr0h,c
  7564  0015CE  CFDF FFEF          	movff	indf2,indf0
  7565                           
  7566                           ; BSR set to: 0
  7567  0015D2  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
  7568  0015D4  D7DA               	goto	l11128
  7569  0015D6                     u11830:
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;lorawan.c: 1830: }
  7573                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
  7574                           
  7575                           ; BSR set to: 0
  7576  0015D6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7577  0015D8  0F08               	addlw	8
  7578  0015DA  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
  7582  0015DC  0EFF               	movlw	255
  7583  0015DE  6F74               	movwf	(Random@max+1)& (0+255),b
  7584  0015E0  6973               	setf	Random@max& (0+255),b
  7585  0015E2  ECC2  F01A         	call	_Random	;wreg free
  7586  0015E6  C073  F2D2         	movff	?_Random,_loRa+210
  7587  0015EA  C074  F2D3         	movff	?_Random+1,_loRa+211
  7588                           
  7589                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
  7590  0015EE  0100               	movlb	0	; () banked
  7591  0015F0  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7592  0015F2  0D01               	mullw	1
  7593  0015F4  0EE0               	movlw	low _macBuffer
  7594  0015F6  24F3               	addwf	prodl,w,c
  7595  0015F8  6F60               	movwf	memcpy@d1& (0+255),b
  7596  0015FA  0E04               	movlw	high _macBuffer
  7597  0015FC  20F4               	addwfc	prodh,w,c
  7598  0015FE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7599  001600  0ED2               	movlw	low (_loRa+210)
  7600  001602  6F62               	movwf	memcpy@s1& (0+255),b
  7601  001604  0E02               	movlw	high (_loRa+210)
  7602  001606  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7603  001608  0E00               	movlw	0
  7604  00160A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7605  00160C  0E02               	movlw	2
  7606  00160E  6F64               	movwf	memcpy@n& (0+255),b
  7607  001610  EC8C  F017         	call	_memcpy	;wreg free
  7608                           
  7609                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
  7610  001614  0100               	movlb	0	; () banked
  7611  001616  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7612  001618  0F02               	addlw	2
  7613  00161A  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
  7617  00161C  0E42               	movlw	low (_loRa+66)
  7618  00161E  6FC7               	movwf	ComputeMic@key& (0+255),b
  7619  001620  0E02               	movlw	high (_loRa+66)
  7620  001622  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
  7621  001624  0EE0               	movlw	low _macBuffer
  7622  001626  6FC9               	movwf	ComputeMic@buffer& (0+255),b
  7623  001628  0E04               	movlw	high _macBuffer
  7624  00162A  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
  7625  00162C  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
  7626  001630  ECF9  F016         	call	_ComputeMic	;wreg free
  7627  001634  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
  7628  001638  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
  7629  00163C  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
  7630  001640  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
  7631                           
  7632                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
  7633  001644  0100               	movlb	0	; () banked
  7634  001646  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7635  001648  0D01               	mullw	1
  7636  00164A  0EE0               	movlw	low _macBuffer
  7637  00164C  24F3               	addwf	prodl,w,c
  7638  00164E  6F60               	movwf	memcpy@d1& (0+255),b
  7639  001650  0E04               	movlw	high _macBuffer
  7640  001652  20F4               	addwfc	prodh,w,c
  7641  001654  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7642  001656  0ED4               	movlw	low PrepareJoinRequestFrame@mic
  7643  001658  6F62               	movwf	memcpy@s1& (0+255),b
  7644  00165A  0E00               	movlw	high PrepareJoinRequestFrame@mic
  7645  00165C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7646  00165E  0E00               	movlw	0
  7647  001660  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7648  001662  0E04               	movlw	4
  7649  001664  6F64               	movwf	memcpy@n& (0+255),b
  7650  001666  EC8C  F017         	call	_memcpy	;wreg free
  7651                           
  7652                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
  7653  00166A  0100               	movlb	0	; () banked
  7654  00166C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7655  00166E  0F04               	addlw	4
  7656  001670  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;lorawan.c: 1842: return bufferIndex;
  7660  001672  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7661  001674  0012               	return	
  7662  001676                     __end_of_PrepareJoinRequestFrame:
  7663                           	opt stack 0
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           intcon	equ	0xFF2
  7671                           intcon2	equ	0xFF1
  7672                           intcon3	equ	0xFF0
  7673                           indf0	equ	0xFEF
  7674                           postinc0	equ	0xFEE
  7675                           fsr0h	equ	0xFEA
  7676                           fsr0l	equ	0xFE9
  7677                           wreg	equ	0xFE8
  7678                           indf2	equ	0xFDF
  7679                           postinc2	equ	0xFDE
  7680                           postdec2	equ	0xFDD
  7681                           fsr2h	equ	0xFDA
  7682                           fsr2l	equ	0xFD9
  7683                           status	equ	0xFD8
  7684                           
  7685 ;; *************** function _Random *****************
  7686 ;; Defined at:
  7687 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  max             2   19[BANK0 ] unsigned int 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  2   19[BANK0 ] unsigned int 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:        2 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    9
  7708 ;; This function calls:
  7709 ;;		___lwmod
  7710 ;;		_rand
  7711 ;; This function is called by:
  7712 ;;		_SearchAvailableChannel
  7713 ;;		_PrepareJoinRequestFrame
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text45
  7718  003584                     __ptext45:
  7719                           	opt stack 0
  7720  003584                     _Random:
  7721                           	opt stack 18
  7722                           
  7723                           ;lorawan.c: 1118: return (rand () % max);
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;incstack = 0
  7727  003584  EC16  F018         	call	_rand	;wreg free
  7728  003588  C06C  F06E         	movff	?_rand,___lwmod@dividend
  7729  00358C  C06D  F06F         	movff	?_rand+1,___lwmod@dividend+1
  7730  003590  C073  F070         	movff	Random@max,___lwmod@divisor
  7731  003594  C074  F071         	movff	Random@max+1,___lwmod@divisor+1
  7732  003598  EC09  F019         	call	___lwmod	;wreg free
  7733  00359C  C06E  F073         	movff	?___lwmod,?_Random
  7734  0035A0  C06F  F074         	movff	?___lwmod+1,?_Random+1
  7735  0035A4  0012               	return	
  7736  0035A6                     __end_of_Random:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodh	equ	0xFF4
  7743                           prodl	equ	0xFF3
  7744                           intcon	equ	0xFF2
  7745                           intcon2	equ	0xFF1
  7746                           intcon3	equ	0xFF0
  7747                           indf0	equ	0xFEF
  7748                           postinc0	equ	0xFEE
  7749                           fsr0h	equ	0xFEA
  7750                           fsr0l	equ	0xFE9
  7751                           wreg	equ	0xFE8
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           fsr2h	equ	0xFDA
  7756                           fsr2l	equ	0xFD9
  7757                           status	equ	0xFD8
  7758                           
  7759 ;; *************** function _rand *****************
  7760 ;; Defined at:
  7761 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;		None
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  2   12[BANK0 ] int 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;Total ram usage:        2 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    8
  7782 ;; This function calls:
  7783 ;;		___lmul
  7784 ;; This function is called by:
  7785 ;;		_Random
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text46
  7790  00302C                     __ptext46:
  7791                           	opt stack 0
  7792  00302C                     _rand:
  7793                           	opt stack 18
  7794                           
  7795                           ;incstack = 0
  7796  00302C  C052  F060         	movff	_randx,___lmul@multiplier
  7797  003030  C053  F061         	movff	_randx+1,___lmul@multiplier+1
  7798  003034  C054  F062         	movff	_randx+2,___lmul@multiplier+2
  7799  003038  C055  F063         	movff	_randx+3,___lmul@multiplier+3
  7800  00303C  0E6D               	movlw	109
  7801  00303E  0100               	movlb	0	; () banked
  7802  003040  6F64               	movwf	___lmul@multiplicand& (0+255),b
  7803  003042  0E4E               	movlw	78
  7804  003044  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7805  003046  0EC6               	movlw	198
  7806  003048  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7807  00304A  0E41               	movlw	65
  7808  00304C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7809  00304E  ECEA  F017         	call	___lmul	;wreg free
  7810  003052  C060  F052         	movff	?___lmul,_randx
  7811  003056  C061  F053         	movff	?___lmul+1,_randx+1
  7812  00305A  C062  F054         	movff	?___lmul+2,_randx+2
  7813  00305E  C063  F055         	movff	?___lmul+3,_randx+3
  7814  003062  0E39               	movlw	57
  7815  003064  2652               	addwf	_randx,f,c
  7816  003066  0E30               	movlw	48
  7817  003068  2253               	addwfc	_randx+1,f,c
  7818  00306A  0E00               	movlw	0
  7819  00306C  2254               	addwfc	_randx+2,f,c
  7820  00306E  0E00               	movlw	0
  7821  003070  2255               	addwfc	_randx+3,f,c
  7822  003072  0EFF               	movlw	255
  7823  003074  1454               	andwf	_randx+2,w,c
  7824  003076  0100               	movlb	0	; () banked
  7825  003078  6F6C               	movwf	?_rand& (0+255),b
  7826  00307A  0E7F               	movlw	127
  7827  00307C  1455               	andwf	_randx+3,w,c
  7828  00307E  6F6D               	movwf	(?_rand+1)& (0+255),b
  7829  003080  0012               	return	
  7830  003082                     __end_of_rand:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           intcon	equ	0xFF2
  7839                           intcon2	equ	0xFF1
  7840                           intcon3	equ	0xFF0
  7841                           indf0	equ	0xFEF
  7842                           postinc0	equ	0xFEE
  7843                           fsr0h	equ	0xFEA
  7844                           fsr0l	equ	0xFE9
  7845                           wreg	equ	0xFE8
  7846                           indf2	equ	0xFDF
  7847                           postinc2	equ	0xFDE
  7848                           postdec2	equ	0xFDD
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function ___lwmod *****************
  7854 ;; Defined at:
  7855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  dividend        2   14[BANK0 ] unsigned int 
  7858 ;;  divisor         2   16[BANK0 ] unsigned int 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  counter         1   18[BANK0 ] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  2   14[BANK0 ] unsigned int 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;Total ram usage:        5 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    7
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_Random
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text47
  7885  003212                     __ptext47:
  7886                           	opt stack 0
  7887  003212                     ___lwmod:
  7888                           	opt stack 19
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;incstack = 0
  7892  003212  0100               	movlb	0	; () banked
  7893  003214  5170               	movf	___lwmod@divisor& (0+255),w,b
  7894  003216  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7895  003218  B4D8               	btfsc	status,2,c
  7896  00321A  D018               	goto	l2909
  7897                           
  7898                           ; BSR set to: 0
  7899  00321C  0E01               	movlw	1
  7900  00321E  6F72               	movwf	___lwmod@counter& (0+255),b
  7901  003220  D004               	goto	l2904
  7902  003222                     
  7903                           ; BSR set to: 0
  7904                           
  7905                           ; BSR set to: 0
  7906  003222  90D8               	bcf	status,0,c
  7907  003224  3770               	rlcf	___lwmod@divisor& (0+255),f,b
  7908  003226  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7909  003228  2B72               	incf	___lwmod@counter& (0+255),f,b
  7910  00322A                     l2904:
  7911                           
  7912                           ; BSR set to: 0
  7913                           
  7914                           ; BSR set to: 0
  7915  00322A  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7916  00322C  D7FA               	goto	l2905
  7917  00322E                     u8300:
  7918                           
  7919                           ; BSR set to: 0
  7920                           
  7921                           ; BSR set to: 0
  7922                           
  7923                           ; BSR set to: 0
  7924  00322E  5170               	movf	___lwmod@divisor& (0+255),w,b
  7925  003230  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
  7926  003232  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7927  003234  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7928  003236  A0D8               	btfss	status,0,c
  7929  003238  D004               	goto	l2908
  7930                           
  7931                           ; BSR set to: 0
  7932  00323A  5170               	movf	___lwmod@divisor& (0+255),w,b
  7933  00323C  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
  7934  00323E  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7935  003240  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7936  003242                     l2908:
  7937                           
  7938                           ; BSR set to: 0
  7939                           
  7940                           ; BSR set to: 0
  7941  003242  90D8               	bcf	status,0,c
  7942  003244  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7943  003246  3370               	rrcf	___lwmod@divisor& (0+255),f,b
  7944                           
  7945                           ; BSR set to: 0
  7946  003248  2F72               	decfsz	___lwmod@counter& (0+255),f,b
  7947  00324A  D7F1               	goto	u8300
  7948  00324C                     l2909:
  7949                           
  7950                           ; BSR set to: 0
  7951                           
  7952                           ; BSR set to: 0
  7953  00324C  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
  7954  003250  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
  7955                           
  7956                           ; BSR set to: 0
  7957  003254  0012               	return		;funcret
  7958  003256                     __end_of___lwmod:
  7959                           	opt stack 0
  7960                           tblptru	equ	0xFF8
  7961                           tblptrh	equ	0xFF7
  7962                           tblptrl	equ	0xFF6
  7963                           tablat	equ	0xFF5
  7964                           prodh	equ	0xFF4
  7965                           prodl	equ	0xFF3
  7966                           intcon	equ	0xFF2
  7967                           intcon2	equ	0xFF1
  7968                           intcon3	equ	0xFF0
  7969                           indf0	equ	0xFEF
  7970                           postinc0	equ	0xFEE
  7971                           fsr0h	equ	0xFEA
  7972                           fsr0l	equ	0xFE9
  7973                           wreg	equ	0xFE8
  7974                           indf2	equ	0xFDF
  7975                           postinc2	equ	0xFDE
  7976                           postdec2	equ	0xFDD
  7977                           fsr2h	equ	0xFDA
  7978                           fsr2l	equ	0xFD9
  7979                           status	equ	0xFD8
  7980                           
  7981 ;; *************** function _ComputeMic *****************
  7982 ;; Defined at:
  7983 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  key             2  103[BANK0 ] PTR unsigned char 
  7986 ;;		 -> loRa.activationParameters(105), loRa(245), 
  7987 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
  7988 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
  7989 ;;  bufferLength    1  107[BANK0 ] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  mic             4  108[BANK0 ] unsigned long 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  4  103[BANK0 ] unsigned long 
  7994 ;; Registers used:
  7995 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8001 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;Total ram usage:        9 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:   12
  8008 ;; This function calls:
  8009 ;;		_AESCmac
  8010 ;;		_memcpy
  8011 ;; This function is called by:
  8012 ;;		_PrepareJoinRequestFrame
  8013 ;;		_LORAWAN_RxDone
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text48
  8018  002DF2                     __ptext48:
  8019                           	opt stack 0
  8020  002DF2                     _ComputeMic:
  8021                           	opt stack 16
  8022                           
  8023                           ;lorawan.c: 2196: uint32_t mic = 0;
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;incstack = 0
  8027  002DF2  0E00               	movlw	0
  8028  002DF4  0100               	movlb	0	; () banked
  8029  002DF6  6FCC               	movwf	ComputeMic@mic& (0+255),b
  8030  002DF8  0E00               	movlw	0
  8031  002DFA  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
  8032  002DFC  0E00               	movlw	0
  8033  002DFE  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
  8034  002E00  0E00               	movlw	0
  8035  002E02  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
  8039  002E04  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
  8040  002E08  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
  8041  002E0C  0E9C               	movlw	low _aesBuffer
  8042  002E0E  6FBB               	movwf	AESCmac@output& (0+255),b
  8043  002E10  0E01               	movlw	high _aesBuffer
  8044  002E12  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
  8045  002E14  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
  8046  002E18  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
  8047  002E1C  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
  8048  002E20  ECC3  F002         	call	_AESCmac	;wreg free
  8049                           
  8050                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
  8051  002E24  0ECC               	movlw	low ComputeMic@mic
  8052  002E26  0100               	movlb	0	; () banked
  8053  002E28  6F60               	movwf	memcpy@d1& (0+255),b
  8054  002E2A  0E00               	movlw	high ComputeMic@mic
  8055  002E2C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8056  002E2E  0E9C               	movlw	low _aesBuffer
  8057  002E30  6F62               	movwf	memcpy@s1& (0+255),b
  8058  002E32  0E01               	movlw	high _aesBuffer
  8059  002E34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8060  002E36  0E00               	movlw	0
  8061  002E38  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8062  002E3A  0E04               	movlw	4
  8063  002E3C  6F64               	movwf	memcpy@n& (0+255),b
  8064  002E3E  EC8C  F017         	call	_memcpy	;wreg free
  8065                           
  8066                           ;lorawan.c: 2202: return mic;
  8067  002E42  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
  8068  002E46  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
  8069  002E4A  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
  8070  002E4E  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
  8071  002E52  0012               	return	
  8072  002E54                     __end_of_ComputeMic:
  8073                           	opt stack 0
  8074                           tblptru	equ	0xFF8
  8075                           tblptrh	equ	0xFF7
  8076                           tblptrl	equ	0xFF6
  8077                           tablat	equ	0xFF5
  8078                           prodh	equ	0xFF4
  8079                           prodl	equ	0xFF3
  8080                           intcon	equ	0xFF2
  8081                           intcon2	equ	0xFF1
  8082                           intcon3	equ	0xFF0
  8083                           indf0	equ	0xFEF
  8084                           postinc0	equ	0xFEE
  8085                           fsr0h	equ	0xFEA
  8086                           fsr0l	equ	0xFE9
  8087                           wreg	equ	0xFE8
  8088                           indf2	equ	0xFDF
  8089                           postinc2	equ	0xFDE
  8090                           postdec2	equ	0xFDD
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8
  8094                           
  8095 ;; *************** function _AESCmac *****************
  8096 ;; Defined at:
  8097 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  key             2   89[BANK0 ] PTR unsigned char 
  8100 ;;		 -> loRa.activationParameters(105), loRa(245), 
  8101 ;;  output          2   91[BANK0 ] PTR unsigned char 
  8102 ;;		 -> aesBuffer(16), 
  8103 ;;  input           2   93[BANK0 ] PTR unsigned char 
  8104 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
  8105 ;;  size            1   95[BANK0 ] unsigned char 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  x              16   80[BANK1 ] unsigned char [16]
  8108 ;;  y              16   64[BANK1 ] unsigned char [16]
  8109 ;;  padded         16   48[BANK1 ] unsigned char [16]
  8110 ;;  mLast          16   32[BANK1 ] unsigned char [16]
  8111 ;;  k1             16   16[BANK1 ] unsigned char [16]
  8112 ;;  k2             16    0[BANK1 ] unsigned char [16]
  8113 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
  8114 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
  8115 ;;  i               1  101[BANK1 ] unsigned char 
  8116 ;;  j               1  100[BANK1 ] unsigned char 
  8117 ;;  n               1   99[BANK1 ] unsigned char 
  8118 ;;  flag            1   98[BANK1 ] unsigned char 
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8128 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;Total ram usage:      116 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:   11
  8135 ;; This function calls:
  8136 ;;		_AESEncodeLoRa
  8137 ;;		_GenerateSubkey
  8138 ;;		_memcpy
  8139 ;;		_memset
  8140 ;; This function is called by:
  8141 ;;		_ComputeMic
  8142 ;;		_LORAWAN_RxDone
  8143 ;;		_AssemblePacket
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text49
  8148  000586                     __ptext49:
  8149                           	opt stack 0
  8150  000586                     _AESCmac:
  8151                           	opt stack 16
  8152                           
  8153                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
  8154                           
  8155                           ;incstack = 0
  8156  000586  0E00               	movlw	0
  8157  000588  0101               	movlb	1	; () banked
  8158  00058A  6F63               	movwf	AESCmac@n& (0+255),b
  8159  00058C  0E00               	movlw	0
  8160  00058E  6F65               	movwf	AESCmac@i& (0+255),b
  8161  000590  0E00               	movlw	0
  8162  000592  6F64               	movwf	AESCmac@j& (0+255),b
  8163                           
  8164                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
  8165  000594  0E00               	movlw	0
  8166  000596  6F62               	movwf	AESCmac@flag& (0+255),b
  8167                           
  8168                           ; BSR set to: 1
  8169                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
  8170                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
  8171                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
  8172  000598  0E00               	movlw	0
  8173  00059A  6F60               	movwf	AESCmac@ptr& (0+255),b
  8174  00059C  0E00               	movlw	0
  8175  00059E  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
  8176                           
  8177                           ; BSR set to: 1
  8178                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
  8179  0005A0  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
  8180  0005A4  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
  8181  0005A8  0E10               	movlw	low AESCmac@k1
  8182  0005AA  0100               	movlb	0	; () banked
  8183  0005AC  6F93               	movwf	GenerateSubkey@k1& (0+255),b
  8184  0005AE  0E01               	movlw	high AESCmac@k1
  8185  0005B0  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
  8186  0005B2  0E00               	movlw	low AESCmac@k2
  8187  0005B4  6F95               	movwf	GenerateSubkey@k2& (0+255),b
  8188  0005B6  0E01               	movlw	high AESCmac@k2
  8189  0005B8  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
  8190  0005BA  EC06  F00E         	call	_GenerateSubkey	;wreg free
  8191                           
  8192                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
  8193  0005BE  0100               	movlb	0	; () banked
  8194  0005C0  51BF               	movf	AESCmac@size& (0+255),w,b
  8195  0005C2  6FC0               	movwf	??_AESCmac& (0+255),b
  8196  0005C4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8197  0005C6  0E0F               	movlw	15
  8198  0005C8  27C0               	addwf	??_AESCmac& (0+255),f,b
  8199  0005CA  0E00               	movlw	0
  8200  0005CC  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
  8201  0005CE  0E04               	movlw	4
  8202  0005D0  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8203  0005D2                     u8345:
  8204  0005D2  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
  8205  0005D4  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
  8206  0005D6  33C0               	rrcf	??_AESCmac& (0+255),f,b
  8207  0005D8  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
  8208  0005DA  D7FB               	goto	u8345
  8209  0005DC  51C0               	movf	??_AESCmac& (0+255),w,b
  8210  0005DE  0101               	movlb	1	; () banked
  8211  0005E0  6F63               	movwf	AESCmac@n& (0+255),b
  8212                           
  8213                           ; BSR set to: 1
  8214                           ;lorawan_aes_cmac.c: 52: if (n == 0)
  8215  0005E2  5163               	movf	AESCmac@n& (0+255),w,b
  8216  0005E4  A4D8               	btfss	status,2,c
  8217  0005E6  D004               	goto	l41
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;lorawan_aes_cmac.c: 53: {
  8221                           ;lorawan_aes_cmac.c: 54: n = 1;
  8222  0005E8  0E01               	movlw	1
  8223  0005EA  6F63               	movwf	AESCmac@n& (0+255),b
  8224                           
  8225                           ;lorawan_aes_cmac.c: 55: flag = 0;
  8226  0005EC  0E00               	movlw	0
  8227  0005EE  D00B               	goto	L5
  8228  0005F0                     l41:
  8229                           
  8230                           ; BSR set to: 1
  8231                           ;lorawan_aes_cmac.c: 57: else
  8232                           ;lorawan_aes_cmac.c: 58: {
  8233                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
  8234                           
  8235                           ; BSR set to: 1
  8236  0005F0  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
  8237  0005F4  0E0F               	movlw	15
  8238  0005F6  0100               	movlb	0	; () banked
  8239  0005F8  17C0               	andwf	??_AESCmac& (0+255),f,b
  8240  0005FA  A4D8               	btfss	status,2,c
  8241  0005FC  D002               	goto	u8360
  8242  0005FE  0E01               	movlw	1
  8243  000600  D001               	goto	u8370
  8244  000602                     u8360:
  8245  000602  0E00               	movlw	0
  8246  000604                     u8370:
  8247  000604  0101               	movlb	1	; () banked
  8248  000606                     L5:
  8249  000606  6F62               	movwf	AESCmac@flag& (0+255),b
  8250                           
  8251                           ; BSR set to: 1
  8252                           ;lorawan_aes_cmac.c: 60: }
  8253                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
  8254  000608  0562               	decf	AESCmac@flag& (0+255),w,b
  8255  00060A  A4D8               	btfss	status,2,c
  8256  00060C  D048               	goto	l43
  8257                           
  8258                           ; BSR set to: 1
  8259                           ;lorawan_aes_cmac.c: 63: {
  8260                           ;lorawan_aes_cmac.c: 64: j = 0;
  8261  00060E  0E00               	movlw	0
  8262  000610  6F64               	movwf	AESCmac@j& (0+255),b
  8263                           
  8264                           ; BSR set to: 1
  8265                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
  8266  000612  3963               	swapf	AESCmac@n& (0+255),w,b
  8267  000614  0BF0               	andlw	240
  8268  000616  0FF0               	addlw	240
  8269  000618  6F65               	movwf	AESCmac@i& (0+255),b
  8270  00061A  D024               	goto	l44
  8271  00061C                     
  8272                           ;lorawan_aes_cmac.c: 66: {
  8273                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
  8274                           
  8275                           ; BSR set to: 1
  8276  00061C  0101               	movlb	1	; () banked
  8277  00061E  5164               	movf	AESCmac@j& (0+255),w,b
  8278  000620  0D01               	mullw	1
  8279  000622  0E20               	movlw	low AESCmac@mLast
  8280  000624  24F3               	addwf	prodl,w,c
  8281  000626  6ED9               	movwf	fsr2l,c
  8282  000628  0E01               	movlw	high AESCmac@mLast
  8283  00062A  20F4               	addwfc	prodh,w,c
  8284  00062C  6EDA               	movwf	fsr2h,c
  8285  00062E  5164               	movf	AESCmac@j& (0+255),w,b
  8286  000630  0D01               	mullw	1
  8287  000632  0E10               	movlw	low AESCmac@k1
  8288  000634  24F3               	addwf	prodl,w,c
  8289  000636  6EE9               	movwf	fsr0l,c
  8290  000638  0E01               	movlw	high AESCmac@k1
  8291  00063A  20F4               	addwfc	prodh,w,c
  8292  00063C  6EEA               	movwf	fsr0h,c
  8293  00063E  50EF               	movf	indf0,w,c
  8294  000640  0100               	movlb	0	; () banked
  8295  000642  6FC0               	movwf	??_AESCmac& (0+255),b
  8296  000644  0101               	movlb	1	; () banked
  8297  000646  5165               	movf	AESCmac@i& (0+255),w,b
  8298  000648  0D01               	mullw	1
  8299  00064A  50F3               	movf	prodl,w,c
  8300  00064C  0100               	movlb	0	; () banked
  8301  00064E  25BD               	addwf	AESCmac@input& (0+255),w,b
  8302  000650  6EE9               	movwf	fsr0l,c
  8303  000652  50F4               	movf	prodh,w,c
  8304  000654  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8305  000656  6EEA               	movwf	fsr0h,c
  8306  000658  50EF               	movf	indf0,w,c
  8307  00065A  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8308  00065C  6EDF               	movwf	indf2,c
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;lorawan_aes_cmac.c: 68: j++;
  8312  00065E  0101               	movlb	1	; () banked
  8313  000660  2B64               	incf	AESCmac@j& (0+255),f,b
  8314                           
  8315                           ; BSR set to: 1
  8316  000662  2B65               	incf	AESCmac@i& (0+255),f,b
  8317  000664                     l44:
  8318                           
  8319                           ; BSR set to: 1
  8320                           
  8321                           ; BSR set to: 1
  8322  000664  5163               	movf	AESCmac@n& (0+255),w,b
  8323  000666  0100               	movlb	0	; () banked
  8324  000668  6FC0               	movwf	??_AESCmac& (0+255),b
  8325  00066A  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8326  00066C  3BC0               	swapf	??_AESCmac& (0+255),f,b
  8327  00066E  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
  8328  000670  0EF0               	movlw	240
  8329  000672  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
  8330  000674  51C0               	movf	??_AESCmac& (0+255),w,b
  8331  000676  0B0F               	andlw	15
  8332  000678  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
  8333  00067A  0EF0               	movlw	240
  8334  00067C  17C0               	andwf	??_AESCmac& (0+255),f,b
  8335  00067E  0101               	movlb	1	; () banked
  8336  000680  5165               	movf	AESCmac@i& (0+255),w,b
  8337  000682  0100               	movlb	0	; () banked
  8338  000684  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8339  000686  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8340  000688  51C0               	movf	??_AESCmac& (0+255),w,b
  8341  00068A  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
  8342  00068C  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8343  00068E  0A80               	xorlw	128
  8344  000690  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
  8345  000692  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8346  000694  0A80               	xorlw	128
  8347  000696  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
  8348  000698  B0D8               	btfsc	status,0,c
  8349  00069A  D07F               	goto	u8450
  8350  00069C  D7BF               	goto	l45
  8351  00069E                     l43:
  8352                           
  8353                           ;lorawan_aes_cmac.c: 71: else
  8354                           ;lorawan_aes_cmac.c: 72: {
  8355                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
  8356                           
  8357                           ; BSR set to: 0
  8358  00069E  0100               	movlb	0	; () banked
  8359  0006A0  51BF               	movf	AESCmac@size& (0+255),w,b
  8360  0006A2  0B0F               	andlw	15
  8361  0006A4  6FC0               	movwf	??_AESCmac& (0+255),b
  8362  0006A6  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8363  0006A8  1FC0               	comf	??_AESCmac& (0+255),f,b
  8364  0006AA  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
  8365  0006AC  4BC0               	infsnz	??_AESCmac& (0+255),f,b
  8366  0006AE  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
  8367  0006B0  51BF               	movf	AESCmac@size& (0+255),w,b
  8368  0006B2  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8369  0006B4  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8370  0006B6  51C0               	movf	??_AESCmac& (0+255),w,b
  8371  0006B8  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
  8372  0006BA  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8373  0006BC  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
  8374  0006BE  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
  8375  0006C0  25BD               	addwf	AESCmac@input& (0+255),w,b
  8376  0006C2  0101               	movlb	1	; () banked
  8377  0006C4  6F60               	movwf	AESCmac@ptr& (0+255),b
  8378  0006C6  0100               	movlb	0	; () banked
  8379  0006C8  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8380  0006CA  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8381  0006CC  0101               	movlb	1	; () banked
  8382  0006CE  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
  8383                           
  8384                           ; BSR set to: 1
  8385                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
  8386  0006D0  0E00               	movlw	0
  8387  0006D2  6F65               	movwf	AESCmac@i& (0+255),b
  8388  0006D4                     l8976:
  8389                           
  8390                           ; BSR set to: 1
  8391  0006D4  0E0F               	movlw	15
  8392  0006D6  6565               	cpfsgt	AESCmac@i& (0+255),b
  8393  0006D8  D001               	goto	l48
  8394  0006DA  D036               	goto	u8430
  8395  0006DC                     l48:
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;lorawan_aes_cmac.c: 76: {
  8399                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
  8400                           
  8401                           ; BSR set to: 1
  8402  0006DC  0100               	movlb	0	; () banked
  8403  0006DE  51BF               	movf	AESCmac@size& (0+255),w,b
  8404  0006E0  0B0F               	andlw	15
  8405  0006E2  0101               	movlb	1	; () banked
  8406  0006E4  6165               	cpfslt	AESCmac@i& (0+255),b
  8407  0006E6  D013               	goto	l50
  8408                           
  8409                           ; BSR set to: 1
  8410                           ;lorawan_aes_cmac.c: 78: {
  8411                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
  8412  0006E8  5165               	movf	AESCmac@i& (0+255),w,b
  8413  0006EA  0D01               	mullw	1
  8414  0006EC  50F3               	movf	prodl,w,c
  8415  0006EE  2560               	addwf	AESCmac@ptr& (0+255),w,b
  8416  0006F0  6ED9               	movwf	fsr2l,c
  8417  0006F2  50F4               	movf	prodh,w,c
  8418  0006F4  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
  8419  0006F6  6EDA               	movwf	fsr2h,c
  8420  0006F8  5165               	movf	AESCmac@i& (0+255),w,b
  8421  0006FA  0D01               	mullw	1
  8422  0006FC  0E30               	movlw	low AESCmac@padded
  8423  0006FE  24F3               	addwf	prodl,w,c
  8424  000700  6EE9               	movwf	fsr0l,c
  8425  000702  0E01               	movlw	high AESCmac@padded
  8426  000704  20F4               	addwfc	prodh,w,c
  8427  000706  6EEA               	movwf	fsr0h,c
  8428  000708  CFDF FFEF          	movff	indf2,indf0
  8429                           
  8430                           ;lorawan_aes_cmac.c: 80: }
  8431  00070C  D01B               	goto	l53
  8432  00070E                     l50:
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;lorawan_aes_cmac.c: 81: else
  8436                           ;lorawan_aes_cmac.c: 82: {
  8437                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
  8438                           
  8439                           ; BSR set to: 1
  8440  00070E  0100               	movlb	0	; () banked
  8441  000710  51BF               	movf	AESCmac@size& (0+255),w,b
  8442  000712  0B0F               	andlw	15
  8443  000714  0101               	movlb	1	; () banked
  8444  000716  1965               	xorwf	AESCmac@i& (0+255),w,b
  8445  000718  A4D8               	btfss	status,2,c
  8446  00071A  D00A               	goto	l52
  8447                           
  8448                           ; BSR set to: 1
  8449                           ;lorawan_aes_cmac.c: 84: {
  8450                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
  8451  00071C  5165               	movf	AESCmac@i& (0+255),w,b
  8452  00071E  0D01               	mullw	1
  8453  000720  0E30               	movlw	low AESCmac@padded
  8454  000722  24F3               	addwf	prodl,w,c
  8455  000724  6ED9               	movwf	fsr2l,c
  8456  000726  0E01               	movlw	high AESCmac@padded
  8457  000728  20F4               	addwfc	prodh,w,c
  8458  00072A  6EDA               	movwf	fsr2h,c
  8459  00072C  0E80               	movlw	128
  8460  00072E  D009               	goto	L6
  8461  000730                     l52:
  8462                           
  8463                           ; BSR set to: 1
  8464                           ;lorawan_aes_cmac.c: 87: else
  8465                           ;lorawan_aes_cmac.c: 88: {
  8466                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
  8467                           
  8468                           ; BSR set to: 1
  8469  000730  5165               	movf	AESCmac@i& (0+255),w,b
  8470  000732  0D01               	mullw	1
  8471  000734  0E30               	movlw	low AESCmac@padded
  8472  000736  24F3               	addwf	prodl,w,c
  8473  000738  6ED9               	movwf	fsr2l,c
  8474  00073A  0E01               	movlw	high AESCmac@padded
  8475  00073C  20F4               	addwfc	prodh,w,c
  8476  00073E  6EDA               	movwf	fsr2h,c
  8477  000740  0E00               	movlw	0
  8478  000742                     L6:
  8479  000742  6EDF               	movwf	indf2,c
  8480  000744                     l53:
  8481                           
  8482                           ; BSR set to: 1
  8483                           
  8484                           ; BSR set to: 1
  8485                           
  8486                           ; BSR set to: 1
  8487  000744  2B65               	incf	AESCmac@i& (0+255),f,b
  8488  000746  D7C6               	goto	l8976
  8489  000748                     u8430:
  8490                           
  8491                           ; BSR set to: 1
  8492                           ;lorawan_aes_cmac.c: 90: }
  8493                           ;lorawan_aes_cmac.c: 91: }
  8494                           ;lorawan_aes_cmac.c: 92: }
  8495                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
  8496                           
  8497                           ; BSR set to: 1
  8498  000748  0E00               	movlw	0
  8499  00074A  6F65               	movwf	AESCmac@i& (0+255),b
  8500  00074C                     l8996:
  8501                           
  8502                           ; BSR set to: 1
  8503  00074C  0E0F               	movlw	15
  8504  00074E  6565               	cpfsgt	AESCmac@i& (0+255),b
  8505  000750  D001               	goto	l54
  8506  000752  D023               	goto	u8450
  8507  000754                     l54:
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;lorawan_aes_cmac.c: 96: {
  8511                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
  8512                           
  8513                           ; BSR set to: 1
  8514  000754  5165               	movf	AESCmac@i& (0+255),w,b
  8515  000756  0D01               	mullw	1
  8516  000758  0E20               	movlw	low AESCmac@mLast
  8517  00075A  24F3               	addwf	prodl,w,c
  8518  00075C  6ED9               	movwf	fsr2l,c
  8519  00075E  0E01               	movlw	high AESCmac@mLast
  8520  000760  20F4               	addwfc	prodh,w,c
  8521  000762  6EDA               	movwf	fsr2h,c
  8522  000764  5165               	movf	AESCmac@i& (0+255),w,b
  8523  000766  0D01               	mullw	1
  8524  000768  0E00               	movlw	low AESCmac@k2
  8525  00076A  24F3               	addwf	prodl,w,c
  8526  00076C  6EE9               	movwf	fsr0l,c
  8527  00076E  0E01               	movlw	high AESCmac@k2
  8528  000770  20F4               	addwfc	prodh,w,c
  8529  000772  6EEA               	movwf	fsr0h,c
  8530  000774  50EF               	movf	indf0,w,c
  8531  000776  0100               	movlb	0	; () banked
  8532  000778  6FC0               	movwf	??_AESCmac& (0+255),b
  8533  00077A  0101               	movlb	1	; () banked
  8534  00077C  5165               	movf	AESCmac@i& (0+255),w,b
  8535  00077E  0D01               	mullw	1
  8536  000780  0E30               	movlw	low AESCmac@padded
  8537  000782  24F3               	addwf	prodl,w,c
  8538  000784  6EE9               	movwf	fsr0l,c
  8539  000786  0E01               	movlw	high AESCmac@padded
  8540  000788  20F4               	addwfc	prodh,w,c
  8541  00078A  6EEA               	movwf	fsr0h,c
  8542  00078C  50EF               	movf	indf0,w,c
  8543  00078E  0100               	movlb	0	; () banked
  8544  000790  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8545  000792  6EDF               	movwf	indf2,c
  8546                           
  8547                           ; BSR set to: 0
  8548  000794  0101               	movlb	1	; () banked
  8549  000796  2B65               	incf	AESCmac@i& (0+255),f,b
  8550  000798  D7D9               	goto	l8996
  8551  00079A                     u8450:
  8552                           
  8553                           ;lorawan_aes_cmac.c: 98: }
  8554                           ;lorawan_aes_cmac.c: 99: }
  8555                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
  8556                           
  8557                           ; BSR set to: 1
  8558                           
  8559                           ; BSR set to: 1
  8560  00079A  0E50               	movlw	low AESCmac@x
  8561  00079C  0100               	movlb	0	; () banked
  8562  00079E  6F60               	movwf	memset@p1& (0+255),b
  8563  0007A0  0E01               	movlw	high AESCmac@x
  8564  0007A2  6F61               	movwf	(memset@p1+1)& (0+255),b
  8565  0007A4  0E00               	movlw	0
  8566  0007A6  6F63               	movwf	(memset@c+1)& (0+255),b
  8567  0007A8  0E00               	movlw	0
  8568  0007AA  6F62               	movwf	memset@c& (0+255),b
  8569  0007AC  0E00               	movlw	0
  8570  0007AE  6F65               	movwf	(memset@n+1)& (0+255),b
  8571  0007B0  0E10               	movlw	16
  8572  0007B2  6F64               	movwf	memset@n& (0+255),b
  8573  0007B4  EC18  F01A         	call	_memset	;wreg free
  8574                           
  8575                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
  8576  0007B8  0E00               	movlw	0
  8577  0007BA  0101               	movlb	1	; () banked
  8578  0007BC  6F65               	movwf	AESCmac@i& (0+255),b
  8579  0007BE  D056               	goto	l56
  8580  0007C0                     
  8581                           ;lorawan_aes_cmac.c: 104: {
  8582                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
  8583                           
  8584                           ; BSR set to: 1
  8585  0007C0  0E00               	movlw	0
  8586  0007C2  0101               	movlb	1	; () banked
  8587  0007C4  6F64               	movwf	AESCmac@j& (0+255),b
  8588  0007C6                     l9012:
  8589                           
  8590                           ; BSR set to: 1
  8591  0007C6  0E0F               	movlw	15
  8592  0007C8  6564               	cpfsgt	AESCmac@j& (0+255),b
  8593  0007CA  D001               	goto	l58
  8594  0007CC  D033               	goto	u8470
  8595  0007CE                     l58:
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;lorawan_aes_cmac.c: 106: {
  8599                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
  8600                           
  8601                           ; BSR set to: 1
  8602  0007CE  5164               	movf	AESCmac@j& (0+255),w,b
  8603  0007D0  0D01               	mullw	1
  8604  0007D2  0E40               	movlw	low AESCmac@y
  8605  0007D4  24F3               	addwf	prodl,w,c
  8606  0007D6  6ED9               	movwf	fsr2l,c
  8607  0007D8  0E01               	movlw	high AESCmac@y
  8608  0007DA  20F4               	addwfc	prodh,w,c
  8609  0007DC  6EDA               	movwf	fsr2h,c
  8610  0007DE  5165               	movf	AESCmac@i& (0+255),w,b
  8611  0007E0  0100               	movlb	0	; () banked
  8612  0007E2  6FC0               	movwf	??_AESCmac& (0+255),b
  8613  0007E4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8614  0007E6  3BC0               	swapf	??_AESCmac& (0+255),f,b
  8615  0007E8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
  8616  0007EA  0EF0               	movlw	240
  8617  0007EC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
  8618  0007EE  51C0               	movf	??_AESCmac& (0+255),w,b
  8619  0007F0  0B0F               	andlw	15
  8620  0007F2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
  8621  0007F4  0EF0               	movlw	240
  8622  0007F6  17C0               	andwf	??_AESCmac& (0+255),f,b
  8623  0007F8  0101               	movlb	1	; () banked
  8624  0007FA  5164               	movf	AESCmac@j& (0+255),w,b
  8625  0007FC  0100               	movlb	0	; () banked
  8626  0007FE  27C0               	addwf	??_AESCmac& (0+255),f,b
  8627  000800  0E00               	movlw	0
  8628  000802  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
  8629  000804  51C0               	movf	??_AESCmac& (0+255),w,b
  8630  000806  25BD               	addwf	AESCmac@input& (0+255),w,b
  8631  000808  6EE9               	movwf	fsr0l,c
  8632  00080A  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8633  00080C  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8634  00080E  6EEA               	movwf	fsr0h,c
  8635  000810  50EF               	movf	indf0,w,c
  8636  000812  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8637  000814  0101               	movlb	1	; () banked
  8638  000816  5164               	movf	AESCmac@j& (0+255),w,b
  8639  000818  0D01               	mullw	1
  8640  00081A  0E50               	movlw	low AESCmac@x
  8641  00081C  24F3               	addwf	prodl,w,c
  8642  00081E  6EE9               	movwf	fsr0l,c
  8643  000820  0E01               	movlw	high AESCmac@x
  8644  000822  20F4               	addwfc	prodh,w,c
  8645  000824  6EEA               	movwf	fsr0h,c
  8646  000826  50EF               	movf	indf0,w,c
  8647  000828  0100               	movlb	0	; () banked
  8648  00082A  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
  8649  00082C  6EDF               	movwf	indf2,c
  8650                           
  8651                           ; BSR set to: 0
  8652  00082E  0101               	movlb	1	; () banked
  8653  000830  2B64               	incf	AESCmac@j& (0+255),f,b
  8654  000832  D7C9               	goto	l9012
  8655  000834                     u8470:
  8656                           
  8657                           ; BSR set to: 1
  8658                           ;lorawan_aes_cmac.c: 108: }
  8659                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
  8660                           
  8661                           ; BSR set to: 1
  8662  000834  0E50               	movlw	low AESCmac@x
  8663  000836  0100               	movlb	0	; () banked
  8664  000838  6F60               	movwf	memcpy@d1& (0+255),b
  8665  00083A  0E01               	movlw	high AESCmac@x
  8666  00083C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8667  00083E  0E40               	movlw	low AESCmac@y
  8668  000840  6F62               	movwf	memcpy@s1& (0+255),b
  8669  000842  0E01               	movlw	high AESCmac@y
  8670  000844  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8671  000846  0E00               	movlw	0
  8672  000848  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8673  00084A  0E10               	movlw	16
  8674  00084C  6F64               	movwf	memcpy@n& (0+255),b
  8675  00084E  EC8C  F017         	call	_memcpy	;wreg free
  8676                           
  8677                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
  8678  000852  0E50               	movlw	low AESCmac@x
  8679  000854  0100               	movlb	0	; () banked
  8680  000856  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8681  000858  0E01               	movlw	high AESCmac@x
  8682  00085A  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8683  00085C  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
  8684  000860  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
  8685  000864  ECB3  F019         	call	_AESEncodeLoRa	;wreg free
  8686  000868  0101               	movlb	1	; () banked
  8687  00086A  2B65               	incf	AESCmac@i& (0+255),f,b
  8688  00086C                     l56:
  8689                           
  8690                           ; BSR set to: 1
  8691                           
  8692                           ; BSR set to: 1
  8693  00086C  0EFF               	movlw	255
  8694  00086E  0100               	movlb	0	; () banked
  8695  000870  6FC0               	movwf	??_AESCmac& (0+255),b
  8696  000872  0EFF               	movlw	255
  8697  000874  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
  8698  000876  0101               	movlb	1	; () banked
  8699  000878  5163               	movf	AESCmac@n& (0+255),w,b
  8700  00087A  0100               	movlb	0	; () banked
  8701  00087C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8702  00087E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8703  000880  51C0               	movf	??_AESCmac& (0+255),w,b
  8704  000882  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
  8705  000884  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8706  000886  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
  8707  000888  0101               	movlb	1	; () banked
  8708  00088A  5165               	movf	AESCmac@i& (0+255),w,b
  8709  00088C  0100               	movlb	0	; () banked
  8710  00088E  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
  8711  000890  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
  8712  000892  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
  8713  000894  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
  8714  000896  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
  8715  000898  0A80               	xorlw	128
  8716  00089A  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
  8717  00089C  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8718  00089E  0A80               	xorlw	128
  8719  0008A0  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
  8720  0008A2  A0D8               	btfss	status,0,c
  8721  0008A4  D78D               	goto	l57
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;lorawan_aes_cmac.c: 111: }
  8725                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
  8726                           
  8727                           ; BSR set to: 0
  8728  0008A6  0E00               	movlw	0
  8729  0008A8  0101               	movlb	1	; () banked
  8730  0008AA  6F65               	movwf	AESCmac@i& (0+255),b
  8731  0008AC                     l9032:
  8732                           
  8733                           ; BSR set to: 1
  8734  0008AC  0E0F               	movlw	15
  8735  0008AE  6565               	cpfsgt	AESCmac@i& (0+255),b
  8736  0008B0  D001               	goto	l61
  8737  0008B2  D023               	goto	u8500
  8738  0008B4                     l61:
  8739                           
  8740                           ; BSR set to: 1
  8741                           ;lorawan_aes_cmac.c: 114: {
  8742                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
  8743                           
  8744                           ; BSR set to: 1
  8745  0008B4  5165               	movf	AESCmac@i& (0+255),w,b
  8746  0008B6  0D01               	mullw	1
  8747  0008B8  0E40               	movlw	low AESCmac@y
  8748  0008BA  24F3               	addwf	prodl,w,c
  8749  0008BC  6ED9               	movwf	fsr2l,c
  8750  0008BE  0E01               	movlw	high AESCmac@y
  8751  0008C0  20F4               	addwfc	prodh,w,c
  8752  0008C2  6EDA               	movwf	fsr2h,c
  8753  0008C4  5165               	movf	AESCmac@i& (0+255),w,b
  8754  0008C6  0D01               	mullw	1
  8755  0008C8  0E20               	movlw	low AESCmac@mLast
  8756  0008CA  24F3               	addwf	prodl,w,c
  8757  0008CC  6EE9               	movwf	fsr0l,c
  8758  0008CE  0E01               	movlw	high AESCmac@mLast
  8759  0008D0  20F4               	addwfc	prodh,w,c
  8760  0008D2  6EEA               	movwf	fsr0h,c
  8761  0008D4  50EF               	movf	indf0,w,c
  8762  0008D6  0100               	movlb	0	; () banked
  8763  0008D8  6FC0               	movwf	??_AESCmac& (0+255),b
  8764  0008DA  0101               	movlb	1	; () banked
  8765  0008DC  5165               	movf	AESCmac@i& (0+255),w,b
  8766  0008DE  0D01               	mullw	1
  8767  0008E0  0E50               	movlw	low AESCmac@x
  8768  0008E2  24F3               	addwf	prodl,w,c
  8769  0008E4  6EE9               	movwf	fsr0l,c
  8770  0008E6  0E01               	movlw	high AESCmac@x
  8771  0008E8  20F4               	addwfc	prodh,w,c
  8772  0008EA  6EEA               	movwf	fsr0h,c
  8773  0008EC  50EF               	movf	indf0,w,c
  8774  0008EE  0100               	movlb	0	; () banked
  8775  0008F0  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8776  0008F2  6EDF               	movwf	indf2,c
  8777                           
  8778                           ; BSR set to: 0
  8779  0008F4  0101               	movlb	1	; () banked
  8780  0008F6  2B65               	incf	AESCmac@i& (0+255),f,b
  8781  0008F8  D7D9               	goto	l9032
  8782  0008FA                     u8500:
  8783                           
  8784                           ; BSR set to: 1
  8785                           ;lorawan_aes_cmac.c: 116: }
  8786                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
  8787                           
  8788                           ; BSR set to: 1
  8789  0008FA  0E40               	movlw	low AESCmac@y
  8790  0008FC  0100               	movlb	0	; () banked
  8791  0008FE  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8792  000900  0E01               	movlw	high AESCmac@y
  8793  000902  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8794  000904  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
  8795  000908  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
  8796  00090C  ECB3  F019         	call	_AESEncodeLoRa	;wreg free
  8797                           
  8798                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
  8799  000910  C0BB  F060         	movff	AESCmac@output,memcpy@d1
  8800  000914  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
  8801  000918  0E40               	movlw	low AESCmac@y
  8802  00091A  0100               	movlb	0	; () banked
  8803  00091C  6F62               	movwf	memcpy@s1& (0+255),b
  8804  00091E  0E01               	movlw	high AESCmac@y
  8805  000920  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8806  000922  0E00               	movlw	0
  8807  000924  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8808  000926  0E10               	movlw	16
  8809  000928  6F64               	movwf	memcpy@n& (0+255),b
  8810  00092A  EC8C  F017         	call	_memcpy	;wreg free
  8811  00092E  0012               	return		;funcret
  8812  000930                     __end_of_AESCmac:
  8813                           	opt stack 0
  8814                           tblptru	equ	0xFF8
  8815                           tblptrh	equ	0xFF7
  8816                           tblptrl	equ	0xFF6
  8817                           tablat	equ	0xFF5
  8818                           prodh	equ	0xFF4
  8819                           prodl	equ	0xFF3
  8820                           intcon	equ	0xFF2
  8821                           intcon2	equ	0xFF1
  8822                           intcon3	equ	0xFF0
  8823                           indf0	equ	0xFEF
  8824                           postinc0	equ	0xFEE
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           indf2	equ	0xFDF
  8829                           postinc2	equ	0xFDE
  8830                           postdec2	equ	0xFDD
  8831                           fsr2h	equ	0xFDA
  8832                           fsr2l	equ	0xFD9
  8833                           status	equ	0xFD8
  8834                           
  8835 ;; *************** function _GenerateSubkey *****************
  8836 ;; Defined at:
  8837 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  key             2   49[BANK0 ] PTR unsigned char 
  8840 ;;		 -> loRa.activationParameters(105), loRa(245), 
  8841 ;;  k1              2   51[BANK0 ] PTR unsigned char 
  8842 ;;		 -> AESCmac@k1(16), 
  8843 ;;  k2              2   53[BANK0 ] PTR unsigned char 
  8844 ;;		 -> AESCmac@k2(16), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  l              16   72[BANK0 ] unsigned char [16]
  8847 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
  8848 ;;  i               1   88[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8858 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;Total ram usage:       40 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:   10
  8865 ;; This function calls:
  8866 ;;		_AESEncodeLoRa
  8867 ;;		_FillSubKey
  8868 ;;		_memset
  8869 ;; This function is called by:
  8870 ;;		_AESCmac
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text50
  8875  001C0C                     __ptext50:
  8876                           	opt stack 0
  8877  001C0C                     _GenerateSubkey:
  8878                           	opt stack 16
  8879                           
  8880                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
  8881                           
  8882                           ;incstack = 0
  8883  001C0C  0E00               	movlw	0
  8884  001C0E  0100               	movlb	0	; () banked
  8885  001C10  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
  8889                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
  8890                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
  8891  001C12  EE21  F0AC         	lfsr	2,GenerateSubkey@F7103
  8892  001C16  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
  8893  001C1A  0E0F               	movlw	15
  8894  001C1C                     u7521:
  8895  001C1C  CFDB FFEB          	movff	plusw2,plusw0
  8896  001C20  06E8               	decf	wreg,f,c
  8897  001C22  E2FC               	bc	u7521
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
  8901  001C24  0EA8               	movlw	low GenerateSubkey@l
  8902  001C26  6F60               	movwf	memset@p1& (0+255),b
  8903  001C28  0E00               	movlw	high GenerateSubkey@l
  8904  001C2A  6F61               	movwf	(memset@p1+1)& (0+255),b
  8905  001C2C  0E00               	movlw	0
  8906  001C2E  6F63               	movwf	(memset@c+1)& (0+255),b
  8907  001C30  0E00               	movlw	0
  8908  001C32  6F62               	movwf	memset@c& (0+255),b
  8909  001C34  0E00               	movlw	0
  8910  001C36  6F65               	movwf	(memset@n+1)& (0+255),b
  8911  001C38  0E10               	movlw	16
  8912  001C3A  6F64               	movwf	memset@n& (0+255),b
  8913  001C3C  EC18  F01A         	call	_memset	;wreg free
  8914                           
  8915                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
  8916  001C40  0EA8               	movlw	low GenerateSubkey@l
  8917  001C42  0100               	movlb	0	; () banked
  8918  001C44  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8919  001C46  0E00               	movlw	high GenerateSubkey@l
  8920  001C48  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8921  001C4A  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
  8922  001C4E  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
  8923  001C52  ECB3  F019         	call	_AESEncodeLoRa	;wreg free
  8924                           
  8925                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
  8926  001C56  0100               	movlb	0	; () banked
  8927  001C58  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
  8928  001C5A  D00D               	goto	l68
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;lorawan_aes_cmac.c: 138: {
  8932                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
  8933  001C5C  0EA8               	movlw	low GenerateSubkey@l
  8934  001C5E  6F60               	movwf	FillSubKey@source& (0+255),b
  8935  001C60  0E00               	movlw	high GenerateSubkey@l
  8936  001C62  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
  8937  001C64  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
  8938  001C68  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
  8939  001C6C  0E10               	movlw	16
  8940  001C6E  6F64               	movwf	FillSubKey@size& (0+255),b
  8941  001C70  EC2A  F017         	call	_FillSubKey	;wreg free
  8942                           
  8943                           ;lorawan_aes_cmac.c: 140: }
  8944  001C74  D02A               	goto	u7550
  8945  001C76                     l68:
  8946                           
  8947                           ;lorawan_aes_cmac.c: 141: else
  8948                           ;lorawan_aes_cmac.c: 142: {
  8949                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
  8950  001C76  0EA8               	movlw	low GenerateSubkey@l
  8951  001C78  0100               	movlb	0	; () banked
  8952  001C7A  6F60               	movwf	FillSubKey@source& (0+255),b
  8953  001C7C  0E00               	movlw	high GenerateSubkey@l
  8954  001C7E  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
  8955  001C80  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
  8956  001C84  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
  8957  001C88  0E10               	movlw	16
  8958  001C8A  6F64               	movwf	FillSubKey@size& (0+255),b
  8959  001C8C  EC2A  F017         	call	_FillSubKey	;wreg free
  8960                           
  8961                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
  8962  001C90  0E00               	movlw	0
  8963  001C92  0100               	movlb	0	; () banked
  8964  001C94  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  8965  001C96                     l8368:
  8966                           
  8967                           ; BSR set to: 0
  8968  001C96  0E0F               	movlw	15
  8969  001C98  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
  8970  001C9A  D001               	goto	l70
  8971  001C9C  D016               	goto	u7550
  8972  001C9E                     l70:
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;lorawan_aes_cmac.c: 146: {
  8976                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
  8977                           
  8978                           ; BSR set to: 0
  8979  001C9E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  8980  001CA0  0D01               	mullw	1
  8981  001CA2  0E98               	movlw	low GenerateSubkey@const_Rb
  8982  001CA4  24F3               	addwf	prodl,w,c
  8983  001CA6  6ED9               	movwf	fsr2l,c
  8984  001CA8  0E00               	movlw	high GenerateSubkey@const_Rb
  8985  001CAA  20F4               	addwfc	prodh,w,c
  8986  001CAC  6EDA               	movwf	fsr2h,c
  8987  001CAE  50DF               	movf	indf2,w,c
  8988  001CB0  6F97               	movwf	??_GenerateSubkey& (0+255),b
  8989  001CB2  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  8990  001CB4  0D01               	mullw	1
  8991  001CB6  50F3               	movf	prodl,w,c
  8992  001CB8  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
  8993  001CBA  6ED9               	movwf	fsr2l,c
  8994  001CBC  50F4               	movf	prodh,w,c
  8995  001CBE  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
  8996  001CC0  6EDA               	movwf	fsr2h,c
  8997  001CC2  5197               	movf	??_GenerateSubkey& (0+255),w,b
  8998  001CC4  1ADF               	xorwf	indf2,f,c
  8999                           
  9000                           ; BSR set to: 0
  9001  001CC6  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
  9002  001CC8  D7E6               	goto	l8368
  9003  001CCA                     u7550:
  9004                           
  9005                           ;lorawan_aes_cmac.c: 148: }
  9006                           ;lorawan_aes_cmac.c: 149: }
  9007                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
  9008                           
  9009                           ; BSR set to: 0
  9010                           
  9011                           ; BSR set to: 0
  9012  001CCA  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
  9013  001CCE  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
  9014  001CD2  0100               	movlb	0	; () banked
  9015  001CD4  BEDF               	btfsc	indf2,7,c
  9016  001CD6  D00D               	goto	l72
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;lorawan_aes_cmac.c: 153: {
  9020                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
  9021  001CD8  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
  9022  001CDC  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
  9023  001CE0  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
  9024  001CE4  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
  9025  001CE8  0E10               	movlw	16
  9026  001CEA  6F64               	movwf	FillSubKey@size& (0+255),b
  9027  001CEC  EC2A  F017         	call	_FillSubKey	;wreg free
  9028                           
  9029                           ;lorawan_aes_cmac.c: 155: }
  9030  001CF0  0012               	return	
  9031  001CF2                     l72:
  9032                           
  9033                           ;lorawan_aes_cmac.c: 156: else
  9034                           ;lorawan_aes_cmac.c: 157: {
  9035                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
  9036  001CF2  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
  9037  001CF6  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
  9038  001CFA  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
  9039  001CFE  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
  9040  001D02  0E10               	movlw	16
  9041  001D04  0100               	movlb	0	; () banked
  9042  001D06  6F64               	movwf	FillSubKey@size& (0+255),b
  9043  001D08  EC2A  F017         	call	_FillSubKey	;wreg free
  9044                           
  9045                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
  9046  001D0C  0E00               	movlw	0
  9047  001D0E  0100               	movlb	0	; () banked
  9048  001D10  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  9049  001D12                     l8386:
  9050                           
  9051                           ; BSR set to: 0
  9052  001D12  0E0F               	movlw	15
  9053  001D14  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
  9054  001D16  D001               	goto	l74
  9055  001D18  0012               	return	
  9056  001D1A                     l74:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;lorawan_aes_cmac.c: 161: {
  9060                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
  9061                           
  9062                           ; BSR set to: 0
  9063  001D1A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9064  001D1C  0D01               	mullw	1
  9065  001D1E  50F3               	movf	prodl,w,c
  9066  001D20  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
  9067  001D22  6ED9               	movwf	fsr2l,c
  9068  001D24  50F4               	movf	prodh,w,c
  9069  001D26  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
  9070  001D28  6EDA               	movwf	fsr2h,c
  9071  001D2A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9072  001D2C  0D01               	mullw	1
  9073  001D2E  0E98               	movlw	low GenerateSubkey@const_Rb
  9074  001D30  24F3               	addwf	prodl,w,c
  9075  001D32  6EE9               	movwf	fsr0l,c
  9076  001D34  0E00               	movlw	high GenerateSubkey@const_Rb
  9077  001D36  20F4               	addwfc	prodh,w,c
  9078  001D38  6EEA               	movwf	fsr0h,c
  9079  001D3A  50EF               	movf	indf0,w,c
  9080  001D3C  6F97               	movwf	??_GenerateSubkey& (0+255),b
  9081  001D3E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9082  001D40  0D01               	mullw	1
  9083  001D42  50F3               	movf	prodl,w,c
  9084  001D44  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
  9085  001D46  6EE9               	movwf	fsr0l,c
  9086  001D48  50F4               	movf	prodh,w,c
  9087  001D4A  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
  9088  001D4C  6EEA               	movwf	fsr0h,c
  9089  001D4E  50EF               	movf	indf0,w,c
  9090  001D50  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
  9091  001D52  6EDF               	movwf	indf2,c
  9092                           
  9093                           ; BSR set to: 0
  9094  001D54  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
  9095  001D56  D7DD               	goto	l8386
  9096  001D58                     __end_of_GenerateSubkey:
  9097                           	opt stack 0
  9098                           tblptru	equ	0xFF8
  9099                           tblptrh	equ	0xFF7
  9100                           tblptrl	equ	0xFF6
  9101                           tablat	equ	0xFF5
  9102                           prodh	equ	0xFF4
  9103                           prodl	equ	0xFF3
  9104                           intcon	equ	0xFF2
  9105                           intcon2	equ	0xFF1
  9106                           intcon3	equ	0xFF0
  9107                           indf0	equ	0xFEF
  9108                           postinc0	equ	0xFEE
  9109                           plusw0	equ	0xFEB
  9110                           fsr0h	equ	0xFEA
  9111                           fsr0l	equ	0xFE9
  9112                           wreg	equ	0xFE8
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           plusw2	equ	0xFDB
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function _FillSubKey *****************
  9122 ;; Defined at:
  9123 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  source          2    0[BANK0 ] PTR unsigned char 
  9126 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
  9127 ;;  key             2    2[BANK0 ] PTR unsigned char 
  9128 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
  9129 ;;  size            1    4[BANK0 ] unsigned char 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  i               1    7[BANK0 ] unsigned char 
  9132 ;;  carry           1    6[BANK0 ] unsigned char 
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9142 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9145 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;Total ram usage:        8 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    7
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_GenerateSubkey
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text51
  9157  002E54                     __ptext51:
  9158                           	opt stack 0
  9159  002E54                     _FillSubKey:
  9160                           	opt stack 18
  9161                           
  9162                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
  9163                           
  9164                           ;incstack = 0
  9165  002E54  0E00               	movlw	0
  9166  002E56  0100               	movlb	0	; () banked
  9167  002E58  6F67               	movwf	FillSubKey@i& (0+255),b
  9168                           
  9169                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
  9170  002E5A  0E00               	movlw	0
  9171  002E5C  6F66               	movwf	FillSubKey@carry& (0+255),b
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;lorawan_aes_cmac.c: 172: i=size;
  9175  002E5E  C064  F067         	movff	FillSubKey@size,FillSubKey@i
  9176                           
  9177                           ;lorawan_aes_cmac.c: 174: while(i--)
  9178  002E62  D024               	goto	l79
  9179  002E64                     
  9180                           ; BSR set to: 0
  9181                           ;lorawan_aes_cmac.c: 175: {
  9182                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
  9183                           
  9184                           ; BSR set to: 0
  9185  002E64  5167               	movf	FillSubKey@i& (0+255),w,b
  9186  002E66  0D01               	mullw	1
  9187  002E68  50F3               	movf	prodl,w,c
  9188  002E6A  2562               	addwf	FillSubKey@key& (0+255),w,b
  9189  002E6C  6ED9               	movwf	fsr2l,c
  9190  002E6E  50F4               	movf	prodh,w,c
  9191  002E70  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
  9192  002E72  6EDA               	movwf	fsr2h,c
  9193  002E74  5167               	movf	FillSubKey@i& (0+255),w,b
  9194  002E76  0D01               	mullw	1
  9195  002E78  50F3               	movf	prodl,w,c
  9196  002E7A  2560               	addwf	FillSubKey@source& (0+255),w,b
  9197  002E7C  6EE9               	movwf	fsr0l,c
  9198  002E7E  50F4               	movf	prodh,w,c
  9199  002E80  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
  9200  002E82  6EEA               	movwf	fsr0h,c
  9201  002E84  50EF               	movf	indf0,w,c
  9202  002E86  6F65               	movwf	??_FillSubKey& (0+255),b
  9203  002E88  90D8               	bcf	status,0,c
  9204  002E8A  3565               	rlcf	??_FillSubKey& (0+255),w,b
  9205  002E8C  1166               	iorwf	FillSubKey@carry& (0+255),w,b
  9206  002E8E  6EDF               	movwf	indf2,c
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
  9210  002E90  5167               	movf	FillSubKey@i& (0+255),w,b
  9211  002E92  0D01               	mullw	1
  9212  002E94  50F3               	movf	prodl,w,c
  9213  002E96  2560               	addwf	FillSubKey@source& (0+255),w,b
  9214  002E98  6ED9               	movwf	fsr2l,c
  9215  002E9A  50F4               	movf	prodh,w,c
  9216  002E9C  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
  9217  002E9E  6EDA               	movwf	fsr2h,c
  9218  002EA0  AEDF               	btfss	indf2,7,c
  9219  002EA2  D002               	goto	u6720
  9220  002EA4  0E01               	movlw	1
  9221  002EA6  D001               	goto	u6730
  9222  002EA8                     u6720:
  9223  002EA8  0E00               	movlw	0
  9224  002EAA                     u6730:
  9225  002EAA  6F66               	movwf	FillSubKey@carry& (0+255),b
  9226  002EAC                     l79:
  9227                           
  9228                           ; BSR set to: 0
  9229                           
  9230                           ; BSR set to: 0
  9231  002EAC  0767               	decf	FillSubKey@i& (0+255),f,b
  9232  002EAE  2967               	incf	FillSubKey@i& (0+255),w,b
  9233  002EB0  B4D8               	btfsc	status,2,c
  9234  002EB2  0012               	return	
  9235  002EB4  D7D7               	goto	l80
  9236  002EB6                     __end_of_FillSubKey:
  9237                           	opt stack 0
  9238                           tblptru	equ	0xFF8
  9239                           tblptrh	equ	0xFF7
  9240                           tblptrl	equ	0xFF6
  9241                           tablat	equ	0xFF5
  9242                           prodh	equ	0xFF4
  9243                           prodl	equ	0xFF3
  9244                           intcon	equ	0xFF2
  9245                           intcon2	equ	0xFF1
  9246                           intcon3	equ	0xFF0
  9247                           indf0	equ	0xFEF
  9248                           postinc0	equ	0xFEE
  9249                           plusw0	equ	0xFEB
  9250                           fsr0h	equ	0xFEA
  9251                           fsr0l	equ	0xFE9
  9252                           wreg	equ	0xFE8
  9253                           indf2	equ	0xFDF
  9254                           postinc2	equ	0xFDE
  9255                           postdec2	equ	0xFDD
  9256                           plusw2	equ	0xFDB
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _AESEncodeLoRa *****************
  9262 ;; Defined at:
  9263 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  block           2   29[BANK0 ] PTR unsigned char 
  9266 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
  9267 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
  9268 ;;  key             2   31[BANK0 ] PTR unsigned char 
  9269 ;;		 -> loRa.activationParameters(105), loRa(245), 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  useKey         16   33[BANK0 ] unsigned char [16]
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;Total ram usage:       20 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    9
  9288 ;; This function calls:
  9289 ;;		_AESEncode
  9290 ;;		_memcpy
  9291 ;; This function is called by:
  9292 ;;		_AESCmac
  9293 ;;		_GenerateSubkey
  9294 ;;		_LORAWAN_RxDone
  9295 ;;		_ComputeSessionKeys
  9296 ;;		_EncryptFRMPayload
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text52
  9301  003366                     __ptext52:
  9302                           	opt stack 0
  9303  003366                     _AESEncodeLoRa:
  9304                           	opt stack 16
  9305                           
  9306                           ;lorawan_aes.c: 36: uint8_t useKey[16];
  9307                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;incstack = 0
  9311  003366  0E81               	movlw	low AESEncodeLoRa@useKey
  9312  003368  0100               	movlb	0	; () banked
  9313  00336A  6F60               	movwf	memcpy@d1& (0+255),b
  9314  00336C  0E00               	movlw	high AESEncodeLoRa@useKey
  9315  00336E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9316  003370  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
  9317  003374  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
  9318  003378  0E00               	movlw	0
  9319  00337A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  9320  00337C  0E10               	movlw	16
  9321  00337E  6F64               	movwf	memcpy@n& (0+255),b
  9322  003380  EC8C  F017         	call	_memcpy	;wreg free
  9323                           
  9324                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
  9325  003384  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
  9326  003388  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
  9327  00338C  0E81               	movlw	low AESEncodeLoRa@useKey
  9328  00338E  0100               	movlb	0	; () banked
  9329  003390  6F68               	movwf	AESEncode@key& (0+255),b
  9330  003392  0E00               	movlw	high AESEncodeLoRa@useKey
  9331  003394  6F69               	movwf	(AESEncode@key+1)& (0+255),b
  9332  003396  EC98  F004         	call	_AESEncode	;wreg free
  9333  00339A  0012               	return		;funcret
  9334  00339C                     __end_of_AESEncodeLoRa:
  9335                           	opt stack 0
  9336                           tblptru	equ	0xFF8
  9337                           tblptrh	equ	0xFF7
  9338                           tblptrl	equ	0xFF6
  9339                           tablat	equ	0xFF5
  9340                           prodh	equ	0xFF4
  9341                           prodl	equ	0xFF3
  9342                           intcon	equ	0xFF2
  9343                           intcon2	equ	0xFF1
  9344                           intcon3	equ	0xFF0
  9345                           indf0	equ	0xFEF
  9346                           postinc0	equ	0xFEE
  9347                           plusw0	equ	0xFEB
  9348                           fsr0h	equ	0xFEA
  9349                           fsr0l	equ	0xFE9
  9350                           wreg	equ	0xFE8
  9351                           indf2	equ	0xFDF
  9352                           postinc2	equ	0xFDE
  9353                           postdec2	equ	0xFDD
  9354                           plusw2	equ	0xFDB
  9355                           fsr2h	equ	0xFDA
  9356                           fsr2l	equ	0xFD9
  9357                           status	equ	0xFD8
  9358                           
  9359 ;; *************** function _AESEncode *****************
  9360 ;; Defined at:
  9361 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  block           2    6[BANK0 ] PTR unsigned char 
  9364 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
  9365 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
  9366 ;;  key             2    8[BANK0 ] PTR unsigned char 
  9367 ;;		 -> AESEncodeLoRa@useKey(16), 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  aux3            1   27[BANK0 ] unsigned char 
  9370 ;;  aux1            1   26[BANK0 ] unsigned char 
  9371 ;;  aux2            1   25[BANK0 ] unsigned char 
  9372 ;;  aux             1   24[BANK0 ] unsigned char 
  9373 ;;  i               1   28[BANK0 ] unsigned char 
  9374 ;;  temp            1    0        unsigned char 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9384 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;Total ram usage:       23 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:    8
  9391 ;; This function calls:
  9392 ;;		_EncKeySchedule
  9393 ;;		_EncodeShiftRow
  9394 ;; This function is called by:
  9395 ;;		_AESEncodeLoRa
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text53
  9400  000930                     __ptext53:
  9401                           	opt stack 0
  9402  000930                     _AESEncode:
  9403                           	opt stack 16
  9404                           
  9405                           ;AES.c: 250: unsigned char i;
  9406                           ;AES.c: 251: unsigned char temp;
  9407                           ;AES.c: 254: _roundCounter = 10;
  9408                           
  9409                           ;incstack = 0
  9410  000930  0E0A               	movlw	10
  9411  000932  0100               	movlb	0	; () banked
  9412  000934  6FF9               	movwf	__roundCounter& (0+255),b
  9413                           
  9414                           ;AES.c: 256: _rcon = 0x01;
  9415  000936  0E01               	movlw	1
  9416  000938  6FF8               	movwf	__rcon& (0+255),b
  9417                           
  9418                           ;AES.c: 259: for(i=0;i<16;i++)
  9419  00093A  0E00               	movlw	0
  9420  00093C  6F7C               	movwf	AESEncode@i& (0+255),b
  9421  00093E                     l7682:
  9422                           
  9423                           ; BSR set to: 0
  9424  00093E  0E0F               	movlw	15
  9425  000940  657C               	cpfsgt	AESEncode@i& (0+255),b
  9426  000942  D001               	goto	l300
  9427  000944  D016               	goto	u6490
  9428  000946                     l300:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;AES.c: 260: {
  9432                           ;AES.c: 261: block[i] ^= key[i];
  9433                           
  9434                           ; BSR set to: 0
  9435  000946  517C               	movf	AESEncode@i& (0+255),w,b
  9436  000948  0D01               	mullw	1
  9437  00094A  50F3               	movf	prodl,w,c
  9438  00094C  2568               	addwf	AESEncode@key& (0+255),w,b
  9439  00094E  6ED9               	movwf	fsr2l,c
  9440  000950  50F4               	movf	prodh,w,c
  9441  000952  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
  9442  000954  6EDA               	movwf	fsr2h,c
  9443  000956  50DF               	movf	indf2,w,c
  9444  000958  6F6A               	movwf	??_AESEncode& (0+255),b
  9445  00095A  517C               	movf	AESEncode@i& (0+255),w,b
  9446  00095C  0D01               	mullw	1
  9447  00095E  50F3               	movf	prodl,w,c
  9448  000960  2566               	addwf	AESEncode@block& (0+255),w,b
  9449  000962  6ED9               	movwf	fsr2l,c
  9450  000964  50F4               	movf	prodh,w,c
  9451  000966  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9452  000968  6EDA               	movwf	fsr2h,c
  9453  00096A  516A               	movf	??_AESEncode& (0+255),w,b
  9454  00096C  1ADF               	xorwf	indf2,f,c
  9455                           
  9456                           ; BSR set to: 0
  9457  00096E  2B7C               	incf	AESEncode@i& (0+255),f,b
  9458  000970  D7E6               	goto	l7682
  9459  000972                     u6490:
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;AES.c: 265: {
  9463                           ;AES.c: 268: for(i=0;i<16;i++)
  9464                           
  9465                           ; BSR set to: 0
  9466                           
  9467                           ;AES.c: 262: }
  9468                           ;AES.c: 264: do
  9469                           
  9470                           ; BSR set to: 0
  9471  000972  0E00               	movlw	0
  9472  000974  6F7C               	movwf	AESEncode@i& (0+255),b
  9473  000976                     l7694:
  9474                           
  9475                           ; BSR set to: 0
  9476  000976  0E0F               	movlw	15
  9477  000978  657C               	cpfsgt	AESEncode@i& (0+255),b
  9478  00097A  D001               	goto	l303
  9479  00097C  D022               	goto	u6510
  9480  00097E                     l303:
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;AES.c: 269: {
  9484                           ;AES.c: 270: block[i]=STable[block[i]];
  9485                           
  9486                           ; BSR set to: 0
  9487  00097E  517C               	movf	AESEncode@i& (0+255),w,b
  9488  000980  0D01               	mullw	1
  9489  000982  50F3               	movf	prodl,w,c
  9490  000984  2566               	addwf	AESEncode@block& (0+255),w,b
  9491  000986  6ED9               	movwf	fsr2l,c
  9492  000988  50F4               	movf	prodh,w,c
  9493  00098A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9494  00098C  6EDA               	movwf	fsr2h,c
  9495  00098E  50DF               	movf	indf2,w,c
  9496  000990  6F6A               	movwf	??_AESEncode& (0+255),b
  9497  000992  516A               	movf	??_AESEncode& (0+255),w,b
  9498  000994  0D01               	mullw	1
  9499  000996  0E67               	movlw	low _STable
  9500  000998  24F3               	addwf	prodl,w,c
  9501  00099A  6EF6               	movwf	tblptrl,c
  9502  00099C  0EFE               	movlw	high _STable
  9503  00099E  20F4               	addwfc	prodh,w,c
  9504  0009A0  6EF7               	movwf	tblptrh,c
  9505  0009A2                     	if	1	;There are 3 active tblptr bytes
  9506  0009A2  6AF8               	clrf	tblptru,c
  9507  0009A4  0E00               	movlw	low (__mediumconst shr (0+16))
  9508  0009A6  22F8               	addwfc	tblptru,f,c
  9509  0009A8                     	endif
  9510  0009A8  517C               	movf	AESEncode@i& (0+255),w,b
  9511  0009AA  0D01               	mullw	1
  9512  0009AC  50F3               	movf	prodl,w,c
  9513  0009AE  2566               	addwf	AESEncode@block& (0+255),w,b
  9514  0009B0  6ED9               	movwf	fsr2l,c
  9515  0009B2  50F4               	movf	prodh,w,c
  9516  0009B4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9517  0009B6  6EDA               	movwf	fsr2h,c
  9518  0009B8  0008               	tblrd		*
  9519  0009BA  CFF5 FFDF          	movff	tablat,indf2
  9520                           
  9521                           ; BSR set to: 0
  9522  0009BE  2B7C               	incf	AESEncode@i& (0+255),f,b
  9523  0009C0  D7DA               	goto	l7694
  9524  0009C2                     u6510:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;AES.c: 271: }
  9528                           ;AES.c: 274: EncodeShiftRow(block);
  9529                           
  9530                           ; BSR set to: 0
  9531  0009C2  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
  9532  0009C6  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
  9533  0009CA  ECA5  F00C         	call	_EncodeShiftRow	;wreg free
  9534                           
  9535                           ;AES.c: 277: if(_roundCounter != 1)
  9536  0009CE  0100               	movlb	0	; () banked
  9537  0009D0  05F9               	decf	__roundCounter& (0+255),w,b
  9538  0009D2  B4D8               	btfsc	status,2,c
  9539  0009D4  D126               	goto	u6570
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;AES.c: 278: {
  9543                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
  9544                           ;AES.c: 281: for(i=0;i<16;i+=4)
  9545  0009D6  0E00               	movlw	0
  9546  0009D8  6F7C               	movwf	AESEncode@i& (0+255),b
  9547  0009DA                     l7710:
  9548                           
  9549                           ; BSR set to: 0
  9550  0009DA  0E0F               	movlw	15
  9551  0009DC  657C               	cpfsgt	AESEncode@i& (0+255),b
  9552  0009DE  D001               	goto	l306
  9553  0009E0  D120               	goto	u6570
  9554  0009E2                     l306:
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;AES.c: 282: {
  9558                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
  9559                           
  9560                           ; BSR set to: 0
  9561  0009E2  517C               	movf	AESEncode@i& (0+255),w,b
  9562  0009E4  6F6A               	movwf	??_AESEncode& (0+255),b
  9563  0009E6  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9564  0009E8  0E01               	movlw	1
  9565  0009EA  276A               	addwf	??_AESEncode& (0+255),f,b
  9566  0009EC  0E00               	movlw	0
  9567  0009EE  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9568  0009F0  516A               	movf	??_AESEncode& (0+255),w,b
  9569  0009F2  2566               	addwf	AESEncode@block& (0+255),w,b
  9570  0009F4  6ED9               	movwf	fsr2l,c
  9571  0009F6  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9572  0009F8  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9573  0009FA  6EDA               	movwf	fsr2h,c
  9574  0009FC  50DF               	movf	indf2,w,c
  9575  0009FE  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9576  000A00  517C               	movf	AESEncode@i& (0+255),w,b
  9577  000A02  2566               	addwf	AESEncode@block& (0+255),w,b
  9578  000A04  6ED9               	movwf	fsr2l,c
  9579  000A06  0E00               	movlw	0
  9580  000A08  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9581  000A0A  6EDA               	movwf	fsr2h,c
  9582  000A0C  50DF               	movf	indf2,w,c
  9583  000A0E  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9584  000A10  6F7A               	movwf	AESEncode@aux1& (0+255),b
  9585                           
  9586                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
  9587  000A12  517C               	movf	AESEncode@i& (0+255),w,b
  9588  000A14  6F6A               	movwf	??_AESEncode& (0+255),b
  9589  000A16  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9590  000A18  0E03               	movlw	3
  9591  000A1A  276A               	addwf	??_AESEncode& (0+255),f,b
  9592  000A1C  0E00               	movlw	0
  9593  000A1E  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9594  000A20  516A               	movf	??_AESEncode& (0+255),w,b
  9595  000A22  2566               	addwf	AESEncode@block& (0+255),w,b
  9596  000A24  6ED9               	movwf	fsr2l,c
  9597  000A26  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9598  000A28  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9599  000A2A  6EDA               	movwf	fsr2h,c
  9600  000A2C  50DF               	movf	indf2,w,c
  9601  000A2E  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9602  000A30  517C               	movf	AESEncode@i& (0+255),w,b
  9603  000A32  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
  9604  000A34  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
  9605  000A36  0E02               	movlw	2
  9606  000A38  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
  9607  000A3A  0E00               	movlw	0
  9608  000A3C  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
  9609  000A3E  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9610  000A40  2566               	addwf	AESEncode@block& (0+255),w,b
  9611  000A42  6ED9               	movwf	fsr2l,c
  9612  000A44  516E               	movf	(??_AESEncode+4)& (0+255),w,b
  9613  000A46  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9614  000A48  6EDA               	movwf	fsr2h,c
  9615  000A4A  50DF               	movf	indf2,w,c
  9616  000A4C  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9617  000A4E  6F7B               	movwf	AESEncode@aux3& (0+255),b
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;AES.c: 285: aux = aux1 ^ aux3;
  9621  000A50  517A               	movf	AESEncode@aux1& (0+255),w,b
  9622  000A52  197B               	xorwf	AESEncode@aux3& (0+255),w,b
  9623  000A54  6F78               	movwf	AESEncode@aux& (0+255),b
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
  9627  000A56  517C               	movf	AESEncode@i& (0+255),w,b
  9628  000A58  6F6A               	movwf	??_AESEncode& (0+255),b
  9629  000A5A  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9630  000A5C  0E01               	movlw	1
  9631  000A5E  276A               	addwf	??_AESEncode& (0+255),f,b
  9632  000A60  0E00               	movlw	0
  9633  000A62  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9634  000A64  516A               	movf	??_AESEncode& (0+255),w,b
  9635  000A66  2566               	addwf	AESEncode@block& (0+255),w,b
  9636  000A68  6ED9               	movwf	fsr2l,c
  9637  000A6A  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9638  000A6C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9639  000A6E  6EDA               	movwf	fsr2h,c
  9640  000A70  50DF               	movf	indf2,w,c
  9641  000A72  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9642  000A74  517C               	movf	AESEncode@i& (0+255),w,b
  9643  000A76  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
  9644  000A78  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
  9645  000A7A  0E02               	movlw	2
  9646  000A7C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
  9647  000A7E  0E00               	movlw	0
  9648  000A80  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
  9649  000A82  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9650  000A84  2566               	addwf	AESEncode@block& (0+255),w,b
  9651  000A86  6ED9               	movwf	fsr2l,c
  9652  000A88  516E               	movf	(??_AESEncode+4)& (0+255),w,b
  9653  000A8A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9654  000A8C  6EDA               	movwf	fsr2h,c
  9655  000A8E  50DF               	movf	indf2,w,c
  9656  000A90  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9657  000A92  6F79               	movwf	AESEncode@aux2& (0+255),b
  9658                           
  9659                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
  9660  000A94  0E7F               	movlw	127
  9661  000A96  657A               	cpfsgt	AESEncode@aux1& (0+255),b
  9662  000A98  D00C               	goto	l309
  9663                           
  9664                           ; BSR set to: 0
  9665  000A9A  0E1B               	movlw	27
  9666  000A9C  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
  9667  000AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9668  000AA2  90D8               	bcf	status,0,c
  9669  000AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
  9670  000AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9671  000AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
  9672  000AAA  6F72               	movwf	_AESEncode$508& (0+255),b
  9673  000AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9674  000AAE  6F73               	movwf	(_AESEncode$508+1)& (0+255),b
  9675  000AB0  D005               	goto	l311
  9676  000AB2                     l309:
  9677                           
  9678                           ; BSR set to: 0
  9679                           
  9680                           ; BSR set to: 0
  9681  000AB2  90D8               	bcf	status,0,c
  9682  000AB4  357A               	rlcf	AESEncode@aux1& (0+255),w,b
  9683  000AB6  6F72               	movwf	_AESEncode$508& (0+255),b
  9684  000AB8  6B73               	clrf	(_AESEncode$508+1)& (0+255),b
  9685  000ABA  3773               	rlcf	(_AESEncode$508+1)& (0+255),f,b
  9686  000ABC                     l311:
  9687                           
  9688                           ; BSR set to: 0
  9689                           
  9690                           ; BSR set to: 0
  9691  000ABC  C072  F07A         	movff	_AESEncode$508,AESEncode@aux1
  9692                           
  9693                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
  9694  000AC0  0E7F               	movlw	127
  9695  000AC2  6579               	cpfsgt	AESEncode@aux2& (0+255),b
  9696  000AC4  D00C               	goto	l313
  9697                           
  9698                           ; BSR set to: 0
  9699  000AC6  0E1B               	movlw	27
  9700  000AC8  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
  9701  000ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9702  000ACE  90D8               	bcf	status,0,c
  9703  000AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
  9704  000AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9705  000AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
  9706  000AD6  6F74               	movwf	_AESEncode$509& (0+255),b
  9707  000AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9708  000ADA  6F75               	movwf	(_AESEncode$509+1)& (0+255),b
  9709  000ADC  D005               	goto	l315
  9710  000ADE                     l313:
  9711                           
  9712                           ; BSR set to: 0
  9713                           
  9714                           ; BSR set to: 0
  9715  000ADE  90D8               	bcf	status,0,c
  9716  000AE0  3579               	rlcf	AESEncode@aux2& (0+255),w,b
  9717  000AE2  6F74               	movwf	_AESEncode$509& (0+255),b
  9718  000AE4  6B75               	clrf	(_AESEncode$509+1)& (0+255),b
  9719  000AE6  3775               	rlcf	(_AESEncode$509+1)& (0+255),f,b
  9720  000AE8                     l315:
  9721                           
  9722                           ; BSR set to: 0
  9723                           
  9724                           ; BSR set to: 0
  9725  000AE8  C074  F079         	movff	_AESEncode$509,AESEncode@aux2
  9726                           
  9727                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
  9728  000AEC  0E7F               	movlw	127
  9729  000AEE  657B               	cpfsgt	AESEncode@aux3& (0+255),b
  9730  000AF0  D00C               	goto	l317
  9731                           
  9732                           ; BSR set to: 0
  9733  000AF2  0E1B               	movlw	27
  9734  000AF4  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
  9735  000AF8  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9736  000AFA  90D8               	bcf	status,0,c
  9737  000AFC  376A               	rlcf	??_AESEncode& (0+255),f,b
  9738  000AFE  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9739  000B00  196A               	xorwf	??_AESEncode& (0+255),w,b
  9740  000B02  6F76               	movwf	_AESEncode$510& (0+255),b
  9741  000B04  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9742  000B06  6F77               	movwf	(_AESEncode$510+1)& (0+255),b
  9743  000B08  D005               	goto	l319
  9744  000B0A                     l317:
  9745                           
  9746                           ; BSR set to: 0
  9747                           
  9748                           ; BSR set to: 0
  9749  000B0A  90D8               	bcf	status,0,c
  9750  000B0C  357B               	rlcf	AESEncode@aux3& (0+255),w,b
  9751  000B0E  6F76               	movwf	_AESEncode$510& (0+255),b
  9752  000B10  6B77               	clrf	(_AESEncode$510+1)& (0+255),b
  9753  000B12  3777               	rlcf	(_AESEncode$510+1)& (0+255),f,b
  9754  000B14                     l319:
  9755                           
  9756                           ; BSR set to: 0
  9757                           
  9758                           ; BSR set to: 0
  9759  000B14  C076  F07B         	movff	_AESEncode$510,AESEncode@aux3
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
  9763  000B18  517C               	movf	AESEncode@i& (0+255),w,b
  9764  000B1A  2566               	addwf	AESEncode@block& (0+255),w,b
  9765  000B1C  6ED9               	movwf	fsr2l,c
  9766  000B1E  0E00               	movlw	0
  9767  000B20  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9768  000B22  6EDA               	movwf	fsr2h,c
  9769  000B24  517C               	movf	AESEncode@i& (0+255),w,b
  9770  000B26  2566               	addwf	AESEncode@block& (0+255),w,b
  9771  000B28  6EE9               	movwf	fsr0l,c
  9772  000B2A  0E00               	movlw	0
  9773  000B2C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9774  000B2E  6EEA               	movwf	fsr0h,c
  9775  000B30  50EF               	movf	indf0,w,c
  9776  000B32  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9777  000B34  197A               	xorwf	AESEncode@aux1& (0+255),w,b
  9778  000B36  6EDF               	movwf	indf2,c
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
  9782  000B38  517C               	movf	AESEncode@i& (0+255),w,b
  9783  000B3A  6F6A               	movwf	??_AESEncode& (0+255),b
  9784  000B3C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9785  000B3E  0E01               	movlw	1
  9786  000B40  276A               	addwf	??_AESEncode& (0+255),f,b
  9787  000B42  0E00               	movlw	0
  9788  000B44  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9789  000B46  516A               	movf	??_AESEncode& (0+255),w,b
  9790  000B48  2566               	addwf	AESEncode@block& (0+255),w,b
  9791  000B4A  6ED9               	movwf	fsr2l,c
  9792  000B4C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9793  000B4E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9794  000B50  6EDA               	movwf	fsr2h,c
  9795  000B52  517C               	movf	AESEncode@i& (0+255),w,b
  9796  000B54  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9797  000B56  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9798  000B58  0E01               	movlw	1
  9799  000B5A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9800  000B5C  0E00               	movlw	0
  9801  000B5E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9802  000B60  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9803  000B62  2566               	addwf	AESEncode@block& (0+255),w,b
  9804  000B64  6EE9               	movwf	fsr0l,c
  9805  000B66  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9806  000B68  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9807  000B6A  6EEA               	movwf	fsr0h,c
  9808  000B6C  50EF               	movf	indf0,w,c
  9809  000B6E  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9810  000B70  1979               	xorwf	AESEncode@aux2& (0+255),w,b
  9811  000B72  6EDF               	movwf	indf2,c
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
  9815  000B74  517C               	movf	AESEncode@i& (0+255),w,b
  9816  000B76  6F6A               	movwf	??_AESEncode& (0+255),b
  9817  000B78  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9818  000B7A  0E02               	movlw	2
  9819  000B7C  276A               	addwf	??_AESEncode& (0+255),f,b
  9820  000B7E  0E00               	movlw	0
  9821  000B80  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9822  000B82  516A               	movf	??_AESEncode& (0+255),w,b
  9823  000B84  2566               	addwf	AESEncode@block& (0+255),w,b
  9824  000B86  6ED9               	movwf	fsr2l,c
  9825  000B88  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9826  000B8A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9827  000B8C  6EDA               	movwf	fsr2h,c
  9828  000B8E  517C               	movf	AESEncode@i& (0+255),w,b
  9829  000B90  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9830  000B92  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9831  000B94  0E02               	movlw	2
  9832  000B96  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9833  000B98  0E00               	movlw	0
  9834  000B9A  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9835  000B9C  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9836  000B9E  2566               	addwf	AESEncode@block& (0+255),w,b
  9837  000BA0  6EE9               	movwf	fsr0l,c
  9838  000BA2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9839  000BA4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9840  000BA6  6EEA               	movwf	fsr0h,c
  9841  000BA8  50EF               	movf	indf0,w,c
  9842  000BAA  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9843  000BAC  197B               	xorwf	AESEncode@aux3& (0+255),w,b
  9844  000BAE  6EDF               	movwf	indf2,c
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
  9848  000BB0  517C               	movf	AESEncode@i& (0+255),w,b
  9849  000BB2  6F6A               	movwf	??_AESEncode& (0+255),b
  9850  000BB4  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9851  000BB6  0E03               	movlw	3
  9852  000BB8  276A               	addwf	??_AESEncode& (0+255),f,b
  9853  000BBA  0E00               	movlw	0
  9854  000BBC  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9855  000BBE  516A               	movf	??_AESEncode& (0+255),w,b
  9856  000BC0  2566               	addwf	AESEncode@block& (0+255),w,b
  9857  000BC2  6ED9               	movwf	fsr2l,c
  9858  000BC4  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9859  000BC6  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9860  000BC8  6EDA               	movwf	fsr2h,c
  9861  000BCA  517C               	movf	AESEncode@i& (0+255),w,b
  9862  000BCC  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9863  000BCE  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9864  000BD0  0E02               	movlw	2
  9865  000BD2  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9866  000BD4  0E00               	movlw	0
  9867  000BD6  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9868  000BD8  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9869  000BDA  2566               	addwf	AESEncode@block& (0+255),w,b
  9870  000BDC  6EE9               	movwf	fsr0l,c
  9871  000BDE  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9872  000BE0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9873  000BE2  6EEA               	movwf	fsr0h,c
  9874  000BE4  50EF               	movf	indf0,w,c
  9875  000BE6  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
  9876  000BE8  517C               	movf	AESEncode@i& (0+255),w,b
  9877  000BEA  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
  9878  000BEC  6B70               	clrf	(??_AESEncode+6)& (0+255),b
  9879  000BEE  0E01               	movlw	1
  9880  000BF0  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
  9881  000BF2  0E00               	movlw	0
  9882  000BF4  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
  9883  000BF6  516F               	movf	(??_AESEncode+5)& (0+255),w,b
  9884  000BF8  2566               	addwf	AESEncode@block& (0+255),w,b
  9885  000BFA  6EE9               	movwf	fsr0l,c
  9886  000BFC  5170               	movf	(??_AESEncode+6)& (0+255),w,b
  9887  000BFE  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9888  000C00  6EEA               	movwf	fsr0h,c
  9889  000C02  50EF               	movf	indf0,w,c
  9890  000C04  6F71               	movwf	(??_AESEncode+7)& (0+255),b
  9891  000C06  517C               	movf	AESEncode@i& (0+255),w,b
  9892  000C08  2566               	addwf	AESEncode@block& (0+255),w,b
  9893  000C0A  6EE9               	movwf	fsr0l,c
  9894  000C0C  0E00               	movlw	0
  9895  000C0E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9896  000C10  6EEA               	movwf	fsr0h,c
  9897  000C12  50EF               	movf	indf0,w,c
  9898  000C14  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
  9899  000C16  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
  9900  000C18  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9901  000C1A  6EDF               	movwf	indf2,c
  9902  000C1C  0E04               	movlw	4
  9903  000C1E  277C               	addwf	AESEncode@i& (0+255),f,b
  9904  000C20  D6DC               	goto	l7710
  9905  000C22                     u6570:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;AES.c: 296: }
  9909                           ;AES.c: 297: }
  9910                           ;AES.c: 299: EncKeySchedule(key);
  9911                           
  9912                           ; BSR set to: 0
  9913                           
  9914                           ; BSR set to: 0
  9915  000C22  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
  9916  000C26  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
  9917  000C2A  EC39  F006         	call	_EncKeySchedule	;wreg free
  9918                           
  9919                           ;AES.c: 302: for(i=0;i<16;i++)
  9920  000C2E  0E00               	movlw	0
  9921  000C30  0100               	movlb	0	; () banked
  9922  000C32  6F7C               	movwf	AESEncode@i& (0+255),b
  9923  000C34                     l7750:
  9924                           
  9925                           ; BSR set to: 0
  9926  000C34  0E0F               	movlw	15
  9927  000C36  657C               	cpfsgt	AESEncode@i& (0+255),b
  9928  000C38  D001               	goto	l320
  9929  000C3A  D016               	goto	u6590
  9930  000C3C                     l320:
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;AES.c: 303: {
  9934                           ;AES.c: 304: block[i] ^= key[i];
  9935                           
  9936                           ; BSR set to: 0
  9937  000C3C  517C               	movf	AESEncode@i& (0+255),w,b
  9938  000C3E  0D01               	mullw	1
  9939  000C40  50F3               	movf	prodl,w,c
  9940  000C42  2568               	addwf	AESEncode@key& (0+255),w,b
  9941  000C44  6ED9               	movwf	fsr2l,c
  9942  000C46  50F4               	movf	prodh,w,c
  9943  000C48  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
  9944  000C4A  6EDA               	movwf	fsr2h,c
  9945  000C4C  50DF               	movf	indf2,w,c
  9946  000C4E  6F6A               	movwf	??_AESEncode& (0+255),b
  9947  000C50  517C               	movf	AESEncode@i& (0+255),w,b
  9948  000C52  0D01               	mullw	1
  9949  000C54  50F3               	movf	prodl,w,c
  9950  000C56  2566               	addwf	AESEncode@block& (0+255),w,b
  9951  000C58  6ED9               	movwf	fsr2l,c
  9952  000C5A  50F4               	movf	prodh,w,c
  9953  000C5C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9954  000C5E  6EDA               	movwf	fsr2h,c
  9955  000C60  516A               	movf	??_AESEncode& (0+255),w,b
  9956  000C62  1ADF               	xorwf	indf2,f,c
  9957                           
  9958                           ; BSR set to: 0
  9959  000C64  2B7C               	incf	AESEncode@i& (0+255),f,b
  9960  000C66  D7E6               	goto	l7750
  9961  000C68                     u6590:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;AES.c: 305: }
  9965                           ;AES.c: 307: _roundCounter--;
  9966                           
  9967                           ; BSR set to: 0
  9968  000C68  07F9               	decf	__roundCounter& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;AES.c: 308: }
  9972                           ;AES.c: 309: while(_roundCounter !=0);
  9973  000C6A  51F9               	movf	__roundCounter& (0+255),w,b
  9974  000C6C  B4D8               	btfsc	status,2,c
  9975  000C6E  0012               	return	
  9976  000C70  D680               	goto	u6490
  9977  000C72                     __end_of_AESEncode:
  9978                           	opt stack 0
  9979                           tblptru	equ	0xFF8
  9980                           tblptrh	equ	0xFF7
  9981                           tblptrl	equ	0xFF6
  9982                           tablat	equ	0xFF5
  9983                           prodh	equ	0xFF4
  9984                           prodl	equ	0xFF3
  9985                           intcon	equ	0xFF2
  9986                           intcon2	equ	0xFF1
  9987                           intcon3	equ	0xFF0
  9988                           indf0	equ	0xFEF
  9989                           postinc0	equ	0xFEE
  9990                           plusw0	equ	0xFEB
  9991                           fsr0h	equ	0xFEA
  9992                           fsr0l	equ	0xFE9
  9993                           wreg	equ	0xFE8
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           plusw2	equ	0xFDB
  9998                           fsr2h	equ	0xFDA
  9999                           fsr2l	equ	0xFD9
 10000                           status	equ	0xFD8
 10001                           
 10002 ;; *************** function _EncodeShiftRow *****************
 10003 ;; Defined at:
 10004 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 10007 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 10008 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;  temp            1    2[BANK0 ] unsigned char 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10023 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10024 ;;Total ram usage:        3 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    7
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_AESEncode
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text54
 10035  00194A                     __ptext54:
 10036                           	opt stack 0
 10037  00194A                     _EncodeShiftRow:
 10038                           	opt stack 16
 10039                           
 10040                           ;AES.c: 387: unsigned char temp;
 10041                           ;AES.c: 392: temp=stateTable[1];
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;incstack = 0
 10045  00194A  0100               	movlb	0	; () banked
 10046  00194C  EE20 F001          	lfsr	2,1
 10047  001950  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10048  001952  26D9               	addwf	fsr2l,f,c
 10049  001954  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10050  001956  22DA               	addwfc	fsr2h,f,c
 10051  001958  50DF               	movf	indf2,w,c
 10052  00195A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;AES.c: 393: stateTable[1]=stateTable[5];
 10056  00195C  EE20 F005          	lfsr	2,5
 10057  001960  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10058  001962  26D9               	addwf	fsr2l,f,c
 10059  001964  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10060  001966  22DA               	addwfc	fsr2h,f,c
 10061  001968  EE00 F001          	lfsr	0,1
 10062  00196C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10063  00196E  26E9               	addwf	fsr0l,f,c
 10064  001970  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10065  001972  22EA               	addwfc	fsr0h,f,c
 10066  001974  CFDF FFEF          	movff	indf2,indf0
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;AES.c: 394: stateTable[5]=stateTable[9];
 10070  001978  EE20 F009          	lfsr	2,9
 10071  00197C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10072  00197E  26D9               	addwf	fsr2l,f,c
 10073  001980  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10074  001982  22DA               	addwfc	fsr2h,f,c
 10075  001984  EE00 F005          	lfsr	0,5
 10076  001988  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10077  00198A  26E9               	addwf	fsr0l,f,c
 10078  00198C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10079  00198E  22EA               	addwfc	fsr0h,f,c
 10080  001990  CFDF FFEF          	movff	indf2,indf0
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;AES.c: 395: stateTable[9]=stateTable[13];
 10084  001994  EE20 F00D          	lfsr	2,13
 10085  001998  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10086  00199A  26D9               	addwf	fsr2l,f,c
 10087  00199C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10088  00199E  22DA               	addwfc	fsr2h,f,c
 10089  0019A0  EE00 F009          	lfsr	0,9
 10090  0019A4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10091  0019A6  26E9               	addwf	fsr0l,f,c
 10092  0019A8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10093  0019AA  22EA               	addwfc	fsr0h,f,c
 10094  0019AC  CFDF FFEF          	movff	indf2,indf0
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;AES.c: 396: stateTable[13]=temp;
 10098  0019B0  EE20 F00D          	lfsr	2,13
 10099  0019B4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10100  0019B6  26D9               	addwf	fsr2l,f,c
 10101  0019B8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10102  0019BA  22DA               	addwfc	fsr2h,f,c
 10103  0019BC  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;AES.c: 399: temp=stateTable[2];
 10107  0019C0  EE20 F002          	lfsr	2,2
 10108  0019C4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10109  0019C6  26D9               	addwf	fsr2l,f,c
 10110  0019C8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10111  0019CA  22DA               	addwfc	fsr2h,f,c
 10112  0019CC  50DF               	movf	indf2,w,c
 10113  0019CE  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;AES.c: 400: stateTable[2]=stateTable[10];
 10117  0019D0  EE20 F00A          	lfsr	2,10
 10118  0019D4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10119  0019D6  26D9               	addwf	fsr2l,f,c
 10120  0019D8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10121  0019DA  22DA               	addwfc	fsr2h,f,c
 10122  0019DC  EE00 F002          	lfsr	0,2
 10123  0019E0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10124  0019E2  26E9               	addwf	fsr0l,f,c
 10125  0019E4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10126  0019E6  22EA               	addwfc	fsr0h,f,c
 10127  0019E8  CFDF FFEF          	movff	indf2,indf0
 10128                           
 10129                           ;AES.c: 401: stateTable[10]=temp;
 10130  0019EC  EE20 F00A          	lfsr	2,10
 10131  0019F0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10132  0019F2  26D9               	addwf	fsr2l,f,c
 10133  0019F4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10134  0019F6  22DA               	addwfc	fsr2h,f,c
 10135  0019F8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10136                           
 10137                           ;AES.c: 402: temp=stateTable[14];
 10138  0019FC  EE20 F00E          	lfsr	2,14
 10139  001A00  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10140  001A02  26D9               	addwf	fsr2l,f,c
 10141  001A04  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10142  001A06  22DA               	addwfc	fsr2h,f,c
 10143  001A08  50DF               	movf	indf2,w,c
 10144  001A0A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;AES.c: 403: stateTable[14]=stateTable[6];
 10148  001A0C  EE20 F006          	lfsr	2,6
 10149  001A10  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10150  001A12  26D9               	addwf	fsr2l,f,c
 10151  001A14  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10152  001A16  22DA               	addwfc	fsr2h,f,c
 10153  001A18  EE00 F00E          	lfsr	0,14
 10154  001A1C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10155  001A1E  26E9               	addwf	fsr0l,f,c
 10156  001A20  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10157  001A22  22EA               	addwfc	fsr0h,f,c
 10158  001A24  CFDF FFEF          	movff	indf2,indf0
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;AES.c: 404: stateTable[6]=temp;
 10162  001A28  EE20 F006          	lfsr	2,6
 10163  001A2C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10164  001A2E  26D9               	addwf	fsr2l,f,c
 10165  001A30  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10166  001A32  22DA               	addwfc	fsr2h,f,c
 10167  001A34  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;AES.c: 407: temp=stateTable[3];
 10171  001A38  EE20 F003          	lfsr	2,3
 10172  001A3C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10173  001A3E  26D9               	addwf	fsr2l,f,c
 10174  001A40  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10175  001A42  22DA               	addwfc	fsr2h,f,c
 10176  001A44  50DF               	movf	indf2,w,c
 10177  001A46  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;AES.c: 408: stateTable[3]=stateTable[15];
 10181  001A48  EE20 F00F          	lfsr	2,15
 10182  001A4C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10183  001A4E  26D9               	addwf	fsr2l,f,c
 10184  001A50  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10185  001A52  22DA               	addwfc	fsr2h,f,c
 10186  001A54  EE00 F003          	lfsr	0,3
 10187  001A58  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10188  001A5A  26E9               	addwf	fsr0l,f,c
 10189  001A5C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10190  001A5E  22EA               	addwfc	fsr0h,f,c
 10191  001A60  CFDF FFEF          	movff	indf2,indf0
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;AES.c: 409: stateTable[15]=stateTable[11];
 10195  001A64  EE20 F00B          	lfsr	2,11
 10196  001A68  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10197  001A6A  26D9               	addwf	fsr2l,f,c
 10198  001A6C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10199  001A6E  22DA               	addwfc	fsr2h,f,c
 10200  001A70  EE00 F00F          	lfsr	0,15
 10201  001A74  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10202  001A76  26E9               	addwf	fsr0l,f,c
 10203  001A78  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10204  001A7A  22EA               	addwfc	fsr0h,f,c
 10205  001A7C  CFDF FFEF          	movff	indf2,indf0
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;AES.c: 410: stateTable[11]=stateTable[7];
 10209  001A80  EE20 F007          	lfsr	2,7
 10210  001A84  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10211  001A86  26D9               	addwf	fsr2l,f,c
 10212  001A88  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10213  001A8A  22DA               	addwfc	fsr2h,f,c
 10214  001A8C  EE00 F00B          	lfsr	0,11
 10215  001A90  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10216  001A92  26E9               	addwf	fsr0l,f,c
 10217  001A94  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10218  001A96  22EA               	addwfc	fsr0h,f,c
 10219  001A98  CFDF FFEF          	movff	indf2,indf0
 10220                           
 10221                           ;AES.c: 411: stateTable[7]=temp;
 10222  001A9C  EE20 F007          	lfsr	2,7
 10223  001AA0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10224  001AA2  26D9               	addwf	fsr2l,f,c
 10225  001AA4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10226  001AA6  22DA               	addwfc	fsr2h,f,c
 10227  001AA8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10228                           
 10229                           ; BSR set to: 0
 10230  001AAC  0012               	return		;funcret
 10231  001AAE                     __end_of_EncodeShiftRow:
 10232                           	opt stack 0
 10233                           tblptru	equ	0xFF8
 10234                           tblptrh	equ	0xFF7
 10235                           tblptrl	equ	0xFF6
 10236                           tablat	equ	0xFF5
 10237                           prodh	equ	0xFF4
 10238                           prodl	equ	0xFF3
 10239                           intcon	equ	0xFF2
 10240                           intcon2	equ	0xFF1
 10241                           intcon3	equ	0xFF0
 10242                           indf0	equ	0xFEF
 10243                           postinc0	equ	0xFEE
 10244                           plusw0	equ	0xFEB
 10245                           fsr0h	equ	0xFEA
 10246                           fsr0l	equ	0xFE9
 10247                           wreg	equ	0xFE8
 10248                           indf2	equ	0xFDF
 10249                           postinc2	equ	0xFDE
 10250                           postdec2	equ	0xFDD
 10251                           plusw2	equ	0xFDB
 10252                           fsr2h	equ	0xFDA
 10253                           fsr2l	equ	0xFD9
 10254                           status	equ	0xFD8
 10255                           
 10256 ;; *************** function _EncKeySchedule *****************
 10257 ;; Defined at:
 10258 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  key             2    0[BANK0 ] PTR unsigned char 
 10261 ;;		 -> AESEncodeLoRa@useKey(16), 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;Total ram usage:        6 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    7
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_AESEncode
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text55
 10288  000C72                     __ptext55:
 10289                           	opt stack 0
 10290  000C72                     _EncKeySchedule:
 10291                           	opt stack 16
 10292                           
 10293                           ;AES.c: 340: key[0]^=STable[key[13]];
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;incstack = 0
 10297  000C72  0100               	movlb	0	; () banked
 10298  000C74  EE20 F00D          	lfsr	2,13
 10299  000C78  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10300  000C7A  26D9               	addwf	fsr2l,f,c
 10301  000C7C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10302  000C7E  22DA               	addwfc	fsr2h,f,c
 10303  000C80  50DF               	movf	indf2,w,c
 10304  000C82  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10305  000C84  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10306  000C86  0D01               	mullw	1
 10307  000C88  0E67               	movlw	low _STable
 10308  000C8A  24F3               	addwf	prodl,w,c
 10309  000C8C  6EF6               	movwf	tblptrl,c
 10310  000C8E  0EFE               	movlw	high _STable
 10311  000C90  20F4               	addwfc	prodh,w,c
 10312  000C92  6EF7               	movwf	tblptrh,c
 10313  000C94                     	if	1	;There are 3 active tblptr bytes
 10314  000C94  6AF8               	clrf	tblptru,c
 10315  000C96  0E00               	movlw	low (__mediumconst shr (0+16))
 10316  000C98  22F8               	addwfc	tblptru,f,c
 10317  000C9A                     	endif
 10318  000C9A  0008               	tblrd		*
 10319  000C9C  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10320  000CA0  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10321  000CA4  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10322  000CA8  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10323  000CAA  1ADF               	xorwf	indf2,f,c
 10324                           
 10325                           ;AES.c: 341: key[1]^=STable[key[14]];
 10326  000CAC  EE20 F00E          	lfsr	2,14
 10327  000CB0  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10328  000CB2  26D9               	addwf	fsr2l,f,c
 10329  000CB4  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10330  000CB6  22DA               	addwfc	fsr2h,f,c
 10331  000CB8  50DF               	movf	indf2,w,c
 10332  000CBA  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10333  000CBC  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10334  000CBE  0D01               	mullw	1
 10335  000CC0  0E67               	movlw	low _STable
 10336  000CC2  24F3               	addwf	prodl,w,c
 10337  000CC4  6EF6               	movwf	tblptrl,c
 10338  000CC6  0EFE               	movlw	high _STable
 10339  000CC8  20F4               	addwfc	prodh,w,c
 10340  000CCA  6EF7               	movwf	tblptrh,c
 10341  000CCC                     	if	1	;There are 3 active tblptr bytes
 10342  000CCC  6AF8               	clrf	tblptru,c
 10343  000CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 10344  000CD0  22F8               	addwfc	tblptru,f,c
 10345  000CD2                     	endif
 10346  000CD2  0008               	tblrd		*
 10347  000CD4  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10348  000CD8  EE20 F001          	lfsr	2,1
 10349  000CDC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10350  000CDE  26D9               	addwf	fsr2l,f,c
 10351  000CE0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10352  000CE2  22DA               	addwfc	fsr2h,f,c
 10353  000CE4  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10354  000CE6  1ADF               	xorwf	indf2,f,c
 10355                           
 10356                           ;AES.c: 342: key[2]^=STable[key[15]];
 10357  000CE8  EE20 F00F          	lfsr	2,15
 10358  000CEC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10359  000CEE  26D9               	addwf	fsr2l,f,c
 10360  000CF0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10361  000CF2  22DA               	addwfc	fsr2h,f,c
 10362  000CF4  50DF               	movf	indf2,w,c
 10363  000CF6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10364  000CF8  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10365  000CFA  0D01               	mullw	1
 10366  000CFC  0E67               	movlw	low _STable
 10367  000CFE  24F3               	addwf	prodl,w,c
 10368  000D00  6EF6               	movwf	tblptrl,c
 10369  000D02  0EFE               	movlw	high _STable
 10370  000D04  20F4               	addwfc	prodh,w,c
 10371  000D06  6EF7               	movwf	tblptrh,c
 10372  000D08                     	if	1	;There are 3 active tblptr bytes
 10373  000D08  6AF8               	clrf	tblptru,c
 10374  000D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 10375  000D0C  22F8               	addwfc	tblptru,f,c
 10376  000D0E                     	endif
 10377  000D0E  0008               	tblrd		*
 10378  000D10  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10379  000D14  EE20 F002          	lfsr	2,2
 10380  000D18  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10381  000D1A  26D9               	addwf	fsr2l,f,c
 10382  000D1C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10383  000D1E  22DA               	addwfc	fsr2h,f,c
 10384  000D20  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10385  000D22  1ADF               	xorwf	indf2,f,c
 10386                           
 10387                           ;AES.c: 343: key[3]^=STable[key[12]];
 10388  000D24  EE20 F00C          	lfsr	2,12
 10389  000D28  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10390  000D2A  26D9               	addwf	fsr2l,f,c
 10391  000D2C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10392  000D2E  22DA               	addwfc	fsr2h,f,c
 10393  000D30  50DF               	movf	indf2,w,c
 10394  000D32  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10395  000D34  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10396  000D36  0D01               	mullw	1
 10397  000D38  0E67               	movlw	low _STable
 10398  000D3A  24F3               	addwf	prodl,w,c
 10399  000D3C  6EF6               	movwf	tblptrl,c
 10400  000D3E  0EFE               	movlw	high _STable
 10401  000D40  20F4               	addwfc	prodh,w,c
 10402  000D42  6EF7               	movwf	tblptrh,c
 10403  000D44                     	if	1	;There are 3 active tblptr bytes
 10404  000D44  6AF8               	clrf	tblptru,c
 10405  000D46  0E00               	movlw	low (__mediumconst shr (0+16))
 10406  000D48  22F8               	addwfc	tblptru,f,c
 10407  000D4A                     	endif
 10408  000D4A  0008               	tblrd		*
 10409  000D4C  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10410  000D50  EE20 F003          	lfsr	2,3
 10411  000D54  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10412  000D56  26D9               	addwf	fsr2l,f,c
 10413  000D58  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10414  000D5A  22DA               	addwfc	fsr2h,f,c
 10415  000D5C  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10416  000D5E  1ADF               	xorwf	indf2,f,c
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;AES.c: 345: key[0]^=_rcon;
 10420  000D60  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10421  000D64  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10422  000D68  51F8               	movf	__rcon& (0+255),w,b
 10423  000D6A  1ADF               	xorwf	indf2,f,c
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 10427  000D6C  0E7F               	movlw	127
 10428  000D6E  65F8               	cpfsgt	__rcon& (0+255),b
 10429  000D70  D00C               	goto	l327
 10430                           
 10431                           ; BSR set to: 0
 10432  000D72  0E1B               	movlw	27
 10433  000D74  C0F8  F062         	movff	__rcon,??_EncKeySchedule
 10434  000D78  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 10435  000D7A  90D8               	bcf	status,0,c
 10436  000D7C  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 10437  000D7E  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 10438  000D80  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 10439  000D82  6F64               	movwf	_EncKeySchedule$513& (0+255),b
 10440  000D84  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10441  000D86  6F65               	movwf	(_EncKeySchedule$513+1)& (0+255),b
 10442  000D88  D005               	goto	l329
 10443  000D8A                     l327:
 10444                           
 10445                           ; BSR set to: 0
 10446                           
 10447                           ; BSR set to: 0
 10448  000D8A  90D8               	bcf	status,0,c
 10449  000D8C  35F8               	rlcf	__rcon& (0+255),w,b
 10450  000D8E  6F64               	movwf	_EncKeySchedule$513& (0+255),b
 10451  000D90  6B65               	clrf	(_EncKeySchedule$513+1)& (0+255),b
 10452  000D92  3765               	rlcf	(_EncKeySchedule$513+1)& (0+255),f,b
 10453  000D94                     l329:
 10454                           
 10455                           ; BSR set to: 0
 10456                           
 10457                           ; BSR set to: 0
 10458  000D94  C064  F0F8         	movff	_EncKeySchedule$513,__rcon
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;AES.c: 349: key[4]^=key[0];
 10462  000D98  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10463  000D9C  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10464  000DA0  50DF               	movf	indf2,w,c
 10465  000DA2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10466  000DA4  EE20 F004          	lfsr	2,4
 10467  000DA8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10468  000DAA  26D9               	addwf	fsr2l,f,c
 10469  000DAC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10470  000DAE  22DA               	addwfc	fsr2h,f,c
 10471  000DB0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10472  000DB2  1ADF               	xorwf	indf2,f,c
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;AES.c: 350: key[5]^=key[1];
 10476  000DB4  EE20 F001          	lfsr	2,1
 10477  000DB8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10478  000DBA  26D9               	addwf	fsr2l,f,c
 10479  000DBC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10480  000DBE  22DA               	addwfc	fsr2h,f,c
 10481  000DC0  50DF               	movf	indf2,w,c
 10482  000DC2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10483  000DC4  EE20 F005          	lfsr	2,5
 10484  000DC8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10485  000DCA  26D9               	addwf	fsr2l,f,c
 10486  000DCC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10487  000DCE  22DA               	addwfc	fsr2h,f,c
 10488  000DD0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10489  000DD2  1ADF               	xorwf	indf2,f,c
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;AES.c: 351: key[6]^=key[2];
 10493  000DD4  EE20 F002          	lfsr	2,2
 10494  000DD8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10495  000DDA  26D9               	addwf	fsr2l,f,c
 10496  000DDC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10497  000DDE  22DA               	addwfc	fsr2h,f,c
 10498  000DE0  50DF               	movf	indf2,w,c
 10499  000DE2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10500  000DE4  EE20 F006          	lfsr	2,6
 10501  000DE8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10502  000DEA  26D9               	addwf	fsr2l,f,c
 10503  000DEC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10504  000DEE  22DA               	addwfc	fsr2h,f,c
 10505  000DF0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10506  000DF2  1ADF               	xorwf	indf2,f,c
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;AES.c: 352: key[7]^=key[3];
 10510  000DF4  EE20 F003          	lfsr	2,3
 10511  000DF8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10512  000DFA  26D9               	addwf	fsr2l,f,c
 10513  000DFC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10514  000DFE  22DA               	addwfc	fsr2h,f,c
 10515  000E00  50DF               	movf	indf2,w,c
 10516  000E02  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10517  000E04  EE20 F007          	lfsr	2,7
 10518  000E08  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10519  000E0A  26D9               	addwf	fsr2l,f,c
 10520  000E0C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10521  000E0E  22DA               	addwfc	fsr2h,f,c
 10522  000E10  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10523  000E12  1ADF               	xorwf	indf2,f,c
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;AES.c: 355: key[8]^=key[4];
 10527  000E14  EE20 F004          	lfsr	2,4
 10528  000E18  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10529  000E1A  26D9               	addwf	fsr2l,f,c
 10530  000E1C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10531  000E1E  22DA               	addwfc	fsr2h,f,c
 10532  000E20  50DF               	movf	indf2,w,c
 10533  000E22  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10534  000E24  EE20 F008          	lfsr	2,8
 10535  000E28  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10536  000E2A  26D9               	addwf	fsr2l,f,c
 10537  000E2C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10538  000E2E  22DA               	addwfc	fsr2h,f,c
 10539  000E30  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10540  000E32  1ADF               	xorwf	indf2,f,c
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;AES.c: 356: key[9]^=key[5];
 10544  000E34  EE20 F005          	lfsr	2,5
 10545  000E38  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10546  000E3A  26D9               	addwf	fsr2l,f,c
 10547  000E3C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10548  000E3E  22DA               	addwfc	fsr2h,f,c
 10549  000E40  50DF               	movf	indf2,w,c
 10550  000E42  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10551  000E44  EE20 F009          	lfsr	2,9
 10552  000E48  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10553  000E4A  26D9               	addwf	fsr2l,f,c
 10554  000E4C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10555  000E4E  22DA               	addwfc	fsr2h,f,c
 10556  000E50  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10557  000E52  1ADF               	xorwf	indf2,f,c
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;AES.c: 357: key[10]^=key[6];
 10561  000E54  EE20 F006          	lfsr	2,6
 10562  000E58  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10563  000E5A  26D9               	addwf	fsr2l,f,c
 10564  000E5C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10565  000E5E  22DA               	addwfc	fsr2h,f,c
 10566  000E60  50DF               	movf	indf2,w,c
 10567  000E62  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10568  000E64  EE20 F00A          	lfsr	2,10
 10569  000E68  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10570  000E6A  26D9               	addwf	fsr2l,f,c
 10571  000E6C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10572  000E6E  22DA               	addwfc	fsr2h,f,c
 10573  000E70  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10574  000E72  1ADF               	xorwf	indf2,f,c
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;AES.c: 358: key[11]^=key[7];
 10578  000E74  EE20 F007          	lfsr	2,7
 10579  000E78  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10580  000E7A  26D9               	addwf	fsr2l,f,c
 10581  000E7C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10582  000E7E  22DA               	addwfc	fsr2h,f,c
 10583  000E80  50DF               	movf	indf2,w,c
 10584  000E82  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10585  000E84  EE20 F00B          	lfsr	2,11
 10586  000E88  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10587  000E8A  26D9               	addwf	fsr2l,f,c
 10588  000E8C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10589  000E8E  22DA               	addwfc	fsr2h,f,c
 10590  000E90  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10591  000E92  1ADF               	xorwf	indf2,f,c
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;AES.c: 361: key[12]^=key[8];
 10595  000E94  EE20 F008          	lfsr	2,8
 10596  000E98  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10597  000E9A  26D9               	addwf	fsr2l,f,c
 10598  000E9C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10599  000E9E  22DA               	addwfc	fsr2h,f,c
 10600  000EA0  50DF               	movf	indf2,w,c
 10601  000EA2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10602  000EA4  EE20 F00C          	lfsr	2,12
 10603  000EA8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10604  000EAA  26D9               	addwf	fsr2l,f,c
 10605  000EAC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10606  000EAE  22DA               	addwfc	fsr2h,f,c
 10607  000EB0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10608  000EB2  1ADF               	xorwf	indf2,f,c
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;AES.c: 362: key[13]^=key[9];
 10612  000EB4  EE20 F009          	lfsr	2,9
 10613  000EB8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10614  000EBA  26D9               	addwf	fsr2l,f,c
 10615  000EBC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10616  000EBE  22DA               	addwfc	fsr2h,f,c
 10617  000EC0  50DF               	movf	indf2,w,c
 10618  000EC2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10619  000EC4  EE20 F00D          	lfsr	2,13
 10620  000EC8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10621  000ECA  26D9               	addwf	fsr2l,f,c
 10622  000ECC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10623  000ECE  22DA               	addwfc	fsr2h,f,c
 10624  000ED0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10625  000ED2  1ADF               	xorwf	indf2,f,c
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;AES.c: 363: key[14]^=key[10];
 10629  000ED4  EE20 F00A          	lfsr	2,10
 10630  000ED8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10631  000EDA  26D9               	addwf	fsr2l,f,c
 10632  000EDC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10633  000EDE  22DA               	addwfc	fsr2h,f,c
 10634  000EE0  50DF               	movf	indf2,w,c
 10635  000EE2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10636  000EE4  EE20 F00E          	lfsr	2,14
 10637  000EE8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10638  000EEA  26D9               	addwf	fsr2l,f,c
 10639  000EEC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10640  000EEE  22DA               	addwfc	fsr2h,f,c
 10641  000EF0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10642  000EF2  1ADF               	xorwf	indf2,f,c
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;AES.c: 364: key[15]^=key[11];
 10646  000EF4  EE20 F00B          	lfsr	2,11
 10647  000EF8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10648  000EFA  26D9               	addwf	fsr2l,f,c
 10649  000EFC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10650  000EFE  22DA               	addwfc	fsr2h,f,c
 10651  000F00  50DF               	movf	indf2,w,c
 10652  000F02  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10653  000F04  EE20 F00F          	lfsr	2,15
 10654  000F08  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10655  000F0A  26D9               	addwf	fsr2l,f,c
 10656  000F0C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10657  000F0E  22DA               	addwfc	fsr2h,f,c
 10658  000F10  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10659  000F12  1ADF               	xorwf	indf2,f,c
 10660                           
 10661                           ; BSR set to: 0
 10662  000F14  0012               	return		;funcret
 10663  000F16                     __end_of_EncKeySchedule:
 10664                           	opt stack 0
 10665                           tblptru	equ	0xFF8
 10666                           tblptrh	equ	0xFF7
 10667                           tblptrl	equ	0xFF6
 10668                           tablat	equ	0xFF5
 10669                           prodh	equ	0xFF4
 10670                           prodl	equ	0xFF3
 10671                           intcon	equ	0xFF2
 10672                           intcon2	equ	0xFF1
 10673                           intcon3	equ	0xFF0
 10674                           indf0	equ	0xFEF
 10675                           postinc0	equ	0xFEE
 10676                           plusw0	equ	0xFEB
 10677                           fsr0h	equ	0xFEA
 10678                           fsr0l	equ	0xFE9
 10679                           wreg	equ	0xFE8
 10680                           indf2	equ	0xFDF
 10681                           postinc2	equ	0xFDE
 10682                           postdec2	equ	0xFDD
 10683                           plusw2	equ	0xFDB
 10684                           fsr2h	equ	0xFDA
 10685                           fsr2l	equ	0xFD9
 10686                           status	equ	0xFD8
 10687                           
 10688 ;; *************** function _LORAWAN_Init *****************
 10689 ;; Defined at:
 10690 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 10693 ;;		 -> RxData(1), 
 10694 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 10695 ;;		 -> RxJoinResponse(1), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;		None
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;Total ram usage:        4 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:   13
 10714 ;; This function calls:
 10715 ;;		_CreateAllSoftwareTimers
 10716 ;;		_LORAWAN_Reset
 10717 ;;		_RADIO_Init
 10718 ;;		_RADIO_ReadRandom
 10719 ;;		_SetCallbackSoftwareTimers
 10720 ;;		_StopAllSoftwareTimers
 10721 ;;		_srand
 10722 ;; This function is called by:
 10723 ;;		_main
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text56
 10728  002EB6                     __ptext56:
 10729                           	opt stack 0
 10730  002EB6                     _LORAWAN_Init:
 10731                           	opt stack 17
 10732                           
 10733                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;incstack = 0
 10737  002EB6  0102               	movlb	2	; () banked
 10738  002EB8  51F0               	movf	(_loRa+240)& (0+255),w,b
 10739  002EBA  A4D8               	btfss	status,2,c
 10740  002EBC  D008               	goto	l966
 10741                           
 10742                           ; BSR set to: 2
 10743                           ;lorawan_eu.c: 127: {
 10744                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 10745  002EBE  ECBD  F018         	call	_CreateAllSoftwareTimers	;wreg free
 10746                           
 10747                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 10748  002EC2  EC2E  F012         	call	_SetCallbackSoftwareTimers	;wreg free
 10749                           
 10750                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 10751  002EC6  0E01               	movlw	1
 10752  002EC8  0102               	movlb	2	; () banked
 10753  002ECA  6FF0               	movwf	(_loRa+240)& (0+255),b
 10754                           
 10755                           ;lorawan_eu.c: 131: }
 10756  002ECC  D002               	goto	l967
 10757  002ECE                     l966:
 10758                           
 10759                           ; BSR set to: 2
 10760                           ;lorawan_eu.c: 132: else
 10761                           ;lorawan_eu.c: 133: {
 10762                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 10763                           
 10764                           ; BSR set to: 2
 10765  002ECE  EC94  F018         	call	_StopAllSoftwareTimers	;wreg free
 10766  002ED2                     l967:
 10767                           
 10768                           ;lorawan_eu.c: 135: }
 10769                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 10770  002ED2  C0A6  F0E0         	movff	LORAWAN_Init@RxPayload,_rxPayload
 10771  002ED6  C0A7  F0E1         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 10772                           
 10773                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 10774  002EDA  C0A8  F0E2         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 10775  002EDE  C0A9  F0E3         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 10776                           
 10777                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 10778  002EE2  0EFF               	movlw	low (_radioBuffer+16)
 10779  002EE4  0100               	movlb	0	; () banked
 10780  002EE6  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 10781  002EE8  0E05               	movlw	high (_radioBuffer+16)
 10782  002EEA  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 10783  002EEC  0EA0               	movlw	160
 10784  002EEE  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 10785  002EF0  0E27               	movlw	39
 10786  002EF2  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 10787  002EF4  0EBE               	movlw	190
 10788  002EF6  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 10789  002EF8  0E33               	movlw	51
 10790  002EFA  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 10791  002EFC  EC8E  F009         	call	_RADIO_Init	;wreg free
 10792                           
 10793                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 10794  002F00  ECA0  F013         	call	_RADIO_ReadRandom	;wreg free
 10795  002F04  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 10796  002F08  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 10797  002F0C  ECD4  F01B         	call	_srand	;wreg free
 10798                           
 10799                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 10800  002F10  0E00               	movlw	0
 10801  002F12  ECA7  F008         	call	_LORAWAN_Reset
 10802  002F16  0012               	return		;funcret
 10803  002F18                     __end_of_LORAWAN_Init:
 10804                           	opt stack 0
 10805                           tblptru	equ	0xFF8
 10806                           tblptrh	equ	0xFF7
 10807                           tblptrl	equ	0xFF6
 10808                           tablat	equ	0xFF5
 10809                           prodh	equ	0xFF4
 10810                           prodl	equ	0xFF3
 10811                           intcon	equ	0xFF2
 10812                           intcon2	equ	0xFF1
 10813                           intcon3	equ	0xFF0
 10814                           indf0	equ	0xFEF
 10815                           postinc0	equ	0xFEE
 10816                           plusw0	equ	0xFEB
 10817                           fsr0h	equ	0xFEA
 10818                           fsr0l	equ	0xFE9
 10819                           wreg	equ	0xFE8
 10820                           indf2	equ	0xFDF
 10821                           postinc2	equ	0xFDE
 10822                           postdec2	equ	0xFDD
 10823                           plusw2	equ	0xFDB
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           
 10828 ;; *************** function _srand *****************
 10829 ;; Defined at:
 10830 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  x               2   18[BANK0 ] unsigned int 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		status,2
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;Total ram usage:        2 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    7
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_LORAWAN_Init
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text57
 10859  0037A8                     __ptext57:
 10860                           	opt stack 0
 10861  0037A8                     _srand:
 10862                           	opt stack 22
 10863                           
 10864                           ;incstack = 0
 10865  0037A8  C072  F052         	movff	srand@x,_randx
 10866  0037AC  C073  F053         	movff	srand@x+1,_randx+1
 10867  0037B0  6A54               	clrf	_randx+2,c
 10868  0037B2  6A55               	clrf	_randx+3,c
 10869  0037B4  0012               	return		;funcret
 10870  0037B6                     __end_of_srand:
 10871                           	opt stack 0
 10872                           tblptru	equ	0xFF8
 10873                           tblptrh	equ	0xFF7
 10874                           tblptrl	equ	0xFF6
 10875                           tablat	equ	0xFF5
 10876                           prodh	equ	0xFF4
 10877                           prodl	equ	0xFF3
 10878                           intcon	equ	0xFF2
 10879                           intcon2	equ	0xFF1
 10880                           intcon3	equ	0xFF0
 10881                           indf0	equ	0xFEF
 10882                           postinc0	equ	0xFEE
 10883                           plusw0	equ	0xFEB
 10884                           fsr0h	equ	0xFEA
 10885                           fsr0l	equ	0xFE9
 10886                           wreg	equ	0xFE8
 10887                           indf2	equ	0xFDF
 10888                           postinc2	equ	0xFDE
 10889                           postdec2	equ	0xFDD
 10890                           plusw2	equ	0xFDB
 10891                           fsr2h	equ	0xFDA
 10892                           fsr2l	equ	0xFD9
 10893                           status	equ	0xFD8
 10894                           
 10895 ;; *************** function _SetCallbackSoftwareTimers *****************
 10896 ;; Defined at:
 10897 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;		None
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;		None
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1    wreg      void 
 10904 ;; Registers used:
 10905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;Total ram usage:        0 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:    8
 10918 ;; This function calls:
 10919 ;;		_SwTimerSetCallback
 10920 ;; This function is called by:
 10921 ;;		_LORAWAN_Init
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           	psect	text58
 10926  00245C                     __ptext58:
 10927                           	opt stack 0
 10928  00245C                     _SetCallbackSoftwareTimers:
 10929                           	opt stack 21
 10930                           
 10931                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 10932                           
 10933                           ;incstack = 0
 10934  00245C  0E00               	movlw	0
 10935  00245E  0100               	movlb	0	; () banked
 10936  002460  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10937  002462  0E00               	movlw	0
 10938  002464  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10939  002466  0E00               	movlw	0
 10940  002468  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10941  00246A  0102               	movlb	2	; () banked
 10942  00246C  51E2               	movf	(_loRa+226)& (0+255),w,b
 10943  00246E  EC2B  F019         	call	_SwTimerSetCallback
 10944                           
 10945                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 10946  002472  0E00               	movlw	0
 10947  002474  0100               	movlb	0	; () banked
 10948  002476  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10949  002478  0E00               	movlw	0
 10950  00247A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10951  00247C  0E00               	movlw	0
 10952  00247E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10953  002480  0102               	movlb	2	; () banked
 10954  002482  51E3               	movf	(_loRa+227)& (0+255),w,b
 10955  002484  EC2B  F019         	call	_SwTimerSetCallback
 10956                           
 10957                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 10958  002488  0E00               	movlw	0
 10959  00248A  0100               	movlb	0	; () banked
 10960  00248C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10961  00248E  0E00               	movlw	0
 10962  002490  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10963  002492  0E00               	movlw	0
 10964  002494  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10965  002496  0102               	movlb	2	; () banked
 10966  002498  51E7               	movf	(_loRa+231)& (0+255),w,b
 10967  00249A  EC2B  F019         	call	_SwTimerSetCallback
 10968                           
 10969                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 10970  00249E  0E00               	movlw	0
 10971  0024A0  0100               	movlb	0	; () banked
 10972  0024A2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10973  0024A4  0E00               	movlw	0
 10974  0024A6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10975  0024A8  0E00               	movlw	0
 10976  0024AA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10977  0024AC  0102               	movlb	2	; () banked
 10978  0024AE  51E4               	movf	(_loRa+228)& (0+255),w,b
 10979  0024B0  EC2B  F019         	call	_SwTimerSetCallback
 10980                           
 10981                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 10982  0024B4  0E00               	movlw	0
 10983  0024B6  0100               	movlb	0	; () banked
 10984  0024B8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10985  0024BA  0E00               	movlw	0
 10986  0024BC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10987  0024BE  0E00               	movlw	0
 10988  0024C0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10989  0024C2  0102               	movlb	2	; () banked
 10990  0024C4  51E5               	movf	(_loRa+229)& (0+255),w,b
 10991  0024C6  EC2B  F019         	call	_SwTimerSetCallback
 10992                           
 10993                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 10994  0024CA  0E00               	movlw	0
 10995  0024CC  0100               	movlb	0	; () banked
 10996  0024CE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10997  0024D0  0E00               	movlw	0
 10998  0024D2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10999  0024D4  0E00               	movlw	0
 11000  0024D6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11001  0024D8  0102               	movlb	2	; () banked
 11002  0024DA  51E8               	movf	(_loRa+232)& (0+255),w,b
 11003  0024DC  EC2B  F019         	call	_SwTimerSetCallback
 11004                           
 11005                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 11006  0024E0  0E00               	movlw	0
 11007  0024E2  0100               	movlb	0	; () banked
 11008  0024E4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11009  0024E6  0E00               	movlw	0
 11010  0024E8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11011  0024EA  0E00               	movlw	0
 11012  0024EC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11013  0024EE  0102               	movlb	2	; () banked
 11014  0024F0  51E6               	movf	(_loRa+230)& (0+255),w,b
 11015  0024F2  EC2B  F019         	call	_SwTimerSetCallback
 11016                           
 11017                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 11018  0024F6  0E00               	movlw	0
 11019  0024F8  0100               	movlb	0	; () banked
 11020  0024FA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11021  0024FC  0E00               	movlw	0
 11022  0024FE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11023  002500  0E00               	movlw	0
 11024  002502  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11025  002504  0102               	movlb	2	; () banked
 11026  002506  51EA               	movf	(_loRa+234)& (0+255),w,b
 11027  002508  EC2B  F019         	call	_SwTimerSetCallback
 11028                           
 11029                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 11030  00250C  0E00               	movlw	0
 11031  00250E  0100               	movlb	0	; () banked
 11032  002510  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11033  002512  0E00               	movlw	0
 11034  002514  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11035  002516  0E00               	movlw	0
 11036  002518  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11037  00251A  0102               	movlb	2	; () banked
 11038  00251C  51F3               	movf	(_loRa+243)& (0+255),w,b
 11039  00251E  EC2B  F019         	call	_SwTimerSetCallback
 11040                           
 11041                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 11042  002522  0E00               	movlw	0
 11043  002524  0100               	movlb	0	; () banked
 11044  002526  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11045  002528  0E00               	movlw	0
 11046  00252A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11047  00252C  0E00               	movlw	0
 11048  00252E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11049  002530  0102               	movlb	2	; () banked
 11050  002532  51E9               	movf	(_loRa+233)& (0+255),w,b
 11051  002534  EC2B  F019         	call	_SwTimerSetCallback
 11052  002538  0012               	return		;funcret
 11053  00253A                     __end_of_SetCallbackSoftwareTimers:
 11054                           	opt stack 0
 11055                           tblptru	equ	0xFF8
 11056                           tblptrh	equ	0xFF7
 11057                           tblptrl	equ	0xFF6
 11058                           tablat	equ	0xFF5
 11059                           prodh	equ	0xFF4
 11060                           prodl	equ	0xFF3
 11061                           intcon	equ	0xFF2
 11062                           intcon2	equ	0xFF1
 11063                           intcon3	equ	0xFF0
 11064                           indf0	equ	0xFEF
 11065                           postinc0	equ	0xFEE
 11066                           plusw0	equ	0xFEB
 11067                           fsr0h	equ	0xFEA
 11068                           fsr0l	equ	0xFE9
 11069                           wreg	equ	0xFE8
 11070                           indf2	equ	0xFDF
 11071                           postinc2	equ	0xFDE
 11072                           postdec2	equ	0xFDD
 11073                           plusw2	equ	0xFDB
 11074                           fsr2h	equ	0xFDA
 11075                           fsr2l	equ	0xFD9
 11076                           status	equ	0xFD8
 11077                           
 11078 ;; *************** function _RADIO_ReadRandom *****************
 11079 ;; Defined at:
 11080 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;		None
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;  retVal          2   15[BANK0 ] unsigned int 
 11085 ;;  i               1   17[BANK0 ] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  2   12[BANK0 ] unsigned int 
 11088 ;; Registers used:
 11089 ;;		wreg, status,2, status,0, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;Total ram usage:        6 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:   11
 11102 ;; This function calls:
 11103 ;;		_RADIO_RegisterRead
 11104 ;;		_RADIO_RegisterWrite
 11105 ;;		_RADIO_WriteMode
 11106 ;;		_SystemBlockingWaitMs
 11107 ;; This function is called by:
 11108 ;;		_LORAWAN_Init
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text59
 11113  002740                     __ptext59:
 11114                           	opt stack 0
 11115  002740                     _RADIO_ReadRandom:
 11116                           	opt stack 18
 11117                           
 11118                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 11119                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 11120                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 11121                           
 11122                           ;incstack = 0
 11123  002740  0E00               	movlw	0
 11124  002742  0100               	movlb	0	; () banked
 11125  002744  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 11126  002746  0E00               	movlw	0
 11127  002748  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 11131  00274A  0E01               	movlw	1
 11132  00274C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11133  00274E  0E01               	movlw	1
 11134  002750  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11135  002752  0E00               	movlw	0
 11136  002754  EC42  F010         	call	_RADIO_WriteMode
 11137                           
 11138                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 11139  002758  0EFF               	movlw	255
 11140  00275A  0100               	movlb	0	; () banked
 11141  00275C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11142  00275E  0E11               	movlw	17
 11143  002760  ECE4  F01A         	call	_RADIO_RegisterWrite
 11144                           
 11145                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 11146  002764  0E01               	movlw	1
 11147  002766  0100               	movlb	0	; () banked
 11148  002768  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11149  00276A  0E01               	movlw	1
 11150  00276C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11151  00276E  0E05               	movlw	5
 11152  002770  EC42  F010         	call	_RADIO_WriteMode
 11153                           
 11154                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 11155  002774  0E00               	movlw	0
 11156  002776  0100               	movlb	0	; () banked
 11157  002778  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 11158  00277A                     l10880:
 11159                           
 11160                           ; BSR set to: 0
 11161  00277A  0E0F               	movlw	15
 11162  00277C  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 11163  00277E  D001               	goto	l670
 11164  002780  D019               	goto	u11630
 11165  002782                     l670:
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;radio_driver_SX1276.c: 1377: {
 11169                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 11170                           
 11171                           ; BSR set to: 0
 11172  002782  0E01               	movlw	1
 11173  002784  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 11174  002786  0E00               	movlw	0
 11175  002788  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 11176  00278A  0E00               	movlw	0
 11177  00278C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 11178  00278E  0E00               	movlw	0
 11179  002790  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 11180  002792  EC00  F01A         	call	_SystemBlockingWaitMs	;wreg free
 11181                           
 11182                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 11183  002796  0100               	movlb	0	; () banked
 11184  002798  90D8               	bcf	status,0,c
 11185  00279A  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 11186  00279C  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 11190  00279E  0E2C               	movlw	44
 11191  0027A0  EC89  F01A         	call	_RADIO_RegisterRead
 11192  0027A4  0100               	movlb	0	; () banked
 11193  0027A6  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 11194  0027A8  0E01               	movlw	1
 11195  0027AA  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 11196  0027AC  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 11197  0027AE  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 11198  0027B0  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 11199  0027B2  D7E3               	goto	l10880
 11200  0027B4                     u11630:
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;radio_driver_SX1276.c: 1381: }
 11204                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 11205                           
 11206                           ; BSR set to: 0
 11207  0027B4  0E01               	movlw	1
 11208  0027B6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11209  0027B8  0E01               	movlw	1
 11210  0027BA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11211  0027BC  0E00               	movlw	0
 11212  0027BE  EC42  F010         	call	_RADIO_WriteMode
 11213                           
 11214                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 11215  0027C2  0EFF               	movlw	255
 11216  0027C4  0100               	movlb	0	; () banked
 11217  0027C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11218  0027C8  0E12               	movlw	18
 11219  0027CA  ECE4  F01A         	call	_RADIO_RegisterWrite
 11220                           
 11221                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 11222  0027CE  0E00               	movlw	0
 11223  0027D0  0100               	movlb	0	; () banked
 11224  0027D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11225  0027D4  0E11               	movlw	17
 11226  0027D6  ECE4  F01A         	call	_RADIO_RegisterWrite
 11227                           
 11228                           ;radio_driver_SX1276.c: 1389: return retVal;
 11229  0027DA  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 11230  0027DE  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 11231  0027E2  0012               	return	
 11232  0027E4                     __end_of_RADIO_ReadRandom:
 11233                           	opt stack 0
 11234                           tblptru	equ	0xFF8
 11235                           tblptrh	equ	0xFF7
 11236                           tblptrl	equ	0xFF6
 11237                           tablat	equ	0xFF5
 11238                           prodh	equ	0xFF4
 11239                           prodl	equ	0xFF3
 11240                           intcon	equ	0xFF2
 11241                           intcon2	equ	0xFF1
 11242                           intcon3	equ	0xFF0
 11243                           indf0	equ	0xFEF
 11244                           postinc0	equ	0xFEE
 11245                           plusw0	equ	0xFEB
 11246                           fsr0h	equ	0xFEA
 11247                           fsr0l	equ	0xFE9
 11248                           wreg	equ	0xFE8
 11249                           indf2	equ	0xFDF
 11250                           postinc2	equ	0xFDE
 11251                           postdec2	equ	0xFDD
 11252                           plusw2	equ	0xFDB
 11253                           fsr2h	equ	0xFDA
 11254                           fsr2l	equ	0xFD9
 11255                           status	equ	0xFD8
 11256                           
 11257 ;; *************** function _LORAWAN_Reset *****************
 11258 ;; Defined at:
 11259 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  ismBandNew      1    wreg     enum E7280
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  ismBandNew      1   69[BANK0 ] enum E7280
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;Total ram usage:        1 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:   12
 11280 ;; This function calls:
 11281 ;;		_InitDefault433Channels
 11282 ;;		_InitDefault868Channels
 11283 ;;		_LORAWAN_LinkCheckConfigure
 11284 ;;		_RADIO_Init
 11285 ;;		_RADIO_SetLoRaSyncWord
 11286 ;;		_StopAllSoftwareTimers
 11287 ;;		_UpdateMinMaxChDataRate
 11288 ;;		_memset
 11289 ;; This function is called by:
 11290 ;;		_LORAWAN_Init
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text60
 11295  00114E                     __ptext60:
 11296                           	opt stack 0
 11297  00114E                     _LORAWAN_Reset:
 11298                           	opt stack 17
 11299                           
 11300                           ;incstack = 0
 11301                           ;LORAWAN_Reset@ismBandNew stored from wreg
 11302  00114E  0100               	movlb	0	; () banked
 11303  001150  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 11304                           
 11305                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 11306  001152  0102               	movlb	2	; () banked
 11307  001154  05F0               	decf	(_loRa+240)& (0+255),w,b
 11308  001156  B4D8               	btfsc	status,2,c
 11309                           
 11310                           ; BSR set to: 2
 11311                           ;lorawan_eu.c: 151: {
 11312                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 11313  001158  EC94  F018         	call	_StopAllSoftwareTimers	;wreg free
 11314                           
 11315                           ;lorawan_eu.c: 153: }
 11316                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 11317  00115C  0E34               	movlw	52
 11318  00115E  0102               	movlb	2	; () banked
 11319  001160  6FF4               	movwf	(_loRa+244)& (0+255),b
 11320                           
 11321                           ; BSR set to: 2
 11322                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 11323  001162  51F4               	movf	(_loRa+244)& (0+255),w,b
 11324  001164  EC1F  F01C         	call	_RADIO_SetLoRaSyncWord
 11325                           
 11326                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 11327  001168  0E00               	movlw	0
 11328  00116A  0102               	movlb	2	; () banked
 11329  00116C  6F02               	movwf	(_loRa+2)& (0+255),b
 11330  00116E  0E00               	movlw	0
 11331  001170  6F03               	movwf	(_loRa+3)& (0+255),b
 11332  001172  0E00               	movlw	0
 11333  001174  6F04               	movwf	(_loRa+4)& (0+255),b
 11334  001176  0E00               	movlw	0
 11335  001178  6F05               	movwf	(_loRa+5)& (0+255),b
 11336                           
 11337                           ; BSR set to: 2
 11338                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 11339  00117A  69DD               	setf	(_loRa+221)& (0+255),b
 11340                           
 11341                           ; BSR set to: 2
 11342                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 11343  00117C  0E00               	movlw	0
 11344  00117E  6FDE               	movwf	(_loRa+222)& (0+255),b
 11345                           
 11346                           ; BSR set to: 2
 11347                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 11348  001180  0E00               	movlw	0
 11349  001182  6FC8               	movwf	(_loRa+200)& (0+255),b
 11350  001184  0E00               	movlw	0
 11351  001186  6FC9               	movwf	(_loRa+201)& (0+255),b
 11352  001188  0E00               	movlw	0
 11353  00118A  6FCA               	movwf	(_loRa+202)& (0+255),b
 11354  00118C  0E00               	movlw	0
 11355  00118E  6FCB               	movwf	(_loRa+203)& (0+255),b
 11356                           
 11357                           ; BSR set to: 2
 11358                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 11359  001190  0E00               	movlw	0
 11360  001192  6FD5               	movwf	(_loRa+213)& (0+255),b
 11361  001194  0E00               	movlw	0
 11362  001196  6FD4               	movwf	(_loRa+212)& (0+255),b
 11363                           
 11364                           ; BSR set to: 2
 11365                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 11366  001198  0E00               	movlw	0
 11367  00119A  6F0A               	movwf	(_loRa+10)& (0+255),b
 11368  00119C  0E00               	movlw	0
 11369  00119E  6F0B               	movwf	(_loRa+11)& (0+255),b
 11370  0011A0  0E00               	movlw	0
 11371  0011A2  6F0C               	movwf	(_loRa+12)& (0+255),b
 11372  0011A4  0E00               	movlw	0
 11373  0011A6  6F0D               	movwf	(_loRa+13)& (0+255),b
 11374                           
 11375                           ; BSR set to: 2
 11376                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 11377  0011A8  0E00               	movlw	0
 11378  0011AA  6F06               	movwf	(_loRa+6)& (0+255),b
 11379  0011AC  0E00               	movlw	0
 11380  0011AE  6F07               	movwf	(_loRa+7)& (0+255),b
 11381  0011B0  0E00               	movlw	0
 11382  0011B2  6F08               	movwf	(_loRa+8)& (0+255),b
 11383  0011B4  0E00               	movlw	0
 11384  0011B6  6F09               	movwf	(_loRa+9)& (0+255),b
 11385                           
 11386                           ; BSR set to: 2
 11387                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 11388  0011B8  0E00               	movlw	0
 11389  0011BA  6FD3               	movwf	(_loRa+211)& (0+255),b
 11390  0011BC  0E00               	movlw	0
 11391  0011BE  6FD2               	movwf	(_loRa+210)& (0+255),b
 11392                           
 11393                           ; BSR set to: 2
 11394                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 11395  0011C0  0E00               	movlw	0
 11396  0011C2  6FDC               	movwf	(_loRa+220)& (0+255),b
 11397  0011C4  0E01               	movlw	1
 11398  0011C6  6FDB               	movwf	(_loRa+219)& (0+255),b
 11399                           
 11400                           ; BSR set to: 2
 11401                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 11402  0011C8  0E00               	movlw	0
 11403  0011CA  6FD1               	movwf	(_loRa+209)& (0+255),b
 11404  0011CC  0E00               	movlw	0
 11405  0011CE  6FD0               	movwf	(_loRa+208)& (0+255),b
 11406                           
 11407                           ; BSR set to: 2
 11408                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 11409  0011D0  0E00               	movlw	0
 11410  0011D2  6FEE               	movwf	(_loRa+238)& (0+255),b
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;lorawan_eu.c: 169: loRa.offset = 0;
 11414  0011D4  0E00               	movlw	0
 11415  0011D6  6FEF               	movwf	(_loRa+239)& (0+255),b
 11416                           
 11417                           ; BSR set to: 2
 11418                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 11419  0011D8  0E00               	movlw	0
 11420  0011DA  6FC8               	movwf	(_loRa+200)& (0+255),b
 11421  0011DC  0E00               	movlw	0
 11422  0011DE  6FC9               	movwf	(_loRa+201)& (0+255),b
 11423  0011E0  0E00               	movlw	0
 11424  0011E2  6FCA               	movwf	(_loRa+202)& (0+255),b
 11425  0011E4  0E00               	movlw	0
 11426  0011E6  6FCB               	movwf	(_loRa+203)& (0+255),b
 11427                           
 11428                           ; BSR set to: 2
 11429                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 11430  0011E8  9503               	bcf	(_loRa+3)& (0+255),2,b
 11431                           
 11432                           ; BSR set to: 2
 11433                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 11434  0011EA  0E00               	movlw	0
 11435  0011EC  6F02               	movwf	(_loRa+2)& (0+255),b
 11436  0011EE  0E00               	movlw	0
 11437  0011F0  6F03               	movwf	(_loRa+3)& (0+255),b
 11438  0011F2  0E00               	movlw	0
 11439  0011F4  6F04               	movwf	(_loRa+4)& (0+255),b
 11440  0011F6  0E00               	movlw	0
 11441  0011F8  6F05               	movwf	(_loRa+5)& (0+255),b
 11442                           
 11443                           ; BSR set to: 2
 11444                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 11445  0011FA  0E00               	movlw	0
 11446  0011FC  6F01               	movwf	(_loRa+1)& (0+255),b
 11447  0011FE  0E00               	movlw	0
 11448  001200  6F00               	movwf	_loRa& (0+255),b
 11449                           
 11450                           ; BSR set to: 2
 11451                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 11452  001202  0E07               	movlw	7
 11453  001204  6FD7               	movwf	(_loRa+215)& (0+255),b
 11454                           
 11455                           ; BSR set to: 2
 11456                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 11457  001206  0E00               	movlw	0
 11458  001208  6FD6               	movwf	(_loRa+214)& (0+255),b
 11459                           
 11460                           ; BSR set to: 2
 11461                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 11462  00120A  0E01               	movlw	1
 11463  00120C  6FD9               	movwf	(_loRa+217)& (0+255),b
 11464                           
 11465                           ; BSR set to: 2
 11466                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11467  00120E  0E01               	movlw	1
 11468  001210  6FD8               	movwf	(_loRa+216)& (0+255),b
 11469                           
 11470                           ; BSR set to: 2
 11471                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 11472  001212  69E0               	setf	(_loRa+224)& (0+255),b
 11473                           
 11474                           ; BSR set to: 2
 11475                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 11476  001214  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 11477                           
 11478                           ; BSR set to: 2
 11479                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 11480  001218  0E00               	movlw	0
 11481  00121A  6F12               	movwf	(_loRa+18)& (0+255),b
 11482                           
 11483                           ; BSR set to: 2
 11484                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 11485  00121C  0E10               	movlw	16
 11486  00121E  6FED               	movwf	(_loRa+237)& (0+255),b
 11487                           
 11488                           ; BSR set to: 2
 11489                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 11490  001220  0100               	movlb	0	; () banked
 11491  001222  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 11492  001224  A4D8               	btfss	status,2,c
 11493  001226  D01B               	goto	l972
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;lorawan_eu.c: 193: {
 11497                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 11498  001228  0EFF               	movlw	low (_radioBuffer+16)
 11499  00122A  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 11500  00122C  0E05               	movlw	high (_radioBuffer+16)
 11501  00122E  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 11502  001230  0EA0               	movlw	160
 11503  001232  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 11504  001234  0E27               	movlw	39
 11505  001236  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 11506  001238  0EBE               	movlw	190
 11507  00123A  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 11508  00123C  0E33               	movlw	51
 11509  00123E  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 11510  001240  EC8E  F009         	call	_RADIO_Init	;wreg free
 11511                           
 11512                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 11513  001244  EC5A  F015         	call	_InitDefault868Channels	;wreg free
 11514                           
 11515                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 11516  001248  0E00               	movlw	0
 11517  00124A  0102               	movlb	2	; () banked
 11518  00124C  6F1C               	movwf	(_loRa+28)& (0+255),b
 11519                           
 11520                           ; BSR set to: 2
 11521                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 11522  00124E  0E08               	movlw	8
 11523  001250  6F18               	movwf	(_loRa+24)& (0+255),b
 11524  001252  0EE6               	movlw	230
 11525  001254  6F19               	movwf	(_loRa+25)& (0+255),b
 11526  001256  0ED3               	movlw	211
 11527  001258  6F1A               	movwf	(_loRa+26)& (0+255),b
 11528  00125A  0E33               	movlw	51
 11529  00125C  D01B               	goto	L7
 11530  00125E                     l972:
 11531                           
 11532                           ;lorawan_eu.c: 201: else
 11533                           ;lorawan_eu.c: 202: {
 11534                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 11535                           
 11536                           ; BSR set to: 2
 11537  00125E  0EFF               	movlw	low (_radioBuffer+16)
 11538  001260  0100               	movlb	0	; () banked
 11539  001262  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 11540  001264  0E05               	movlw	high (_radioBuffer+16)
 11541  001266  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 11542  001268  0E20               	movlw	32
 11543  00126A  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 11544  00126C  0EA2               	movlw	162
 11545  00126E  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 11546  001270  0ED3               	movlw	211
 11547  001272  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 11548  001274  0E19               	movlw	25
 11549  001276  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 11550  001278  EC8E  F009         	call	_RADIO_Init	;wreg free
 11551                           
 11552                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 11553  00127C  EC9F  F015         	call	_InitDefault433Channels	;wreg free
 11554                           
 11555                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 11556  001280  0E00               	movlw	0
 11557  001282  0102               	movlb	2	; () banked
 11558  001284  6F1C               	movwf	(_loRa+28)& (0+255),b
 11559                           
 11560                           ; BSR set to: 2
 11561                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 11562  001286  0E28               	movlw	40
 11563  001288  6F18               	movwf	(_loRa+24)& (0+255),b
 11564  00128A  0E76               	movlw	118
 11565  00128C  6F19               	movwf	(_loRa+25)& (0+255),b
 11566  00128E  0EE8               	movlw	232
 11567  001290  6F1A               	movwf	(_loRa+26)& (0+255),b
 11568  001292  0E19               	movlw	25
 11569  001294                     L7:
 11570  001294  6F1B               	movwf	(_loRa+27)& (0+255),b
 11571                           
 11572                           ; BSR set to: 2
 11573                           ;lorawan_eu.c: 209: }
 11574                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 11575                           
 11576                           ; BSR set to: 2
 11577  001296  0E01               	movlw	1
 11578  001298  6FE1               	movwf	(_loRa+225)& (0+255),b
 11579                           
 11580                           ; BSR set to: 2
 11581                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 11582  00129A  0E00               	movlw	0
 11583  00129C  6FDF               	movwf	(_loRa+223)& (0+255),b
 11584                           
 11585                           ; BSR set to: 2
 11586                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 11587  00129E  ECC1  F010         	call	_UpdateMinMaxChDataRate	;wreg free
 11588                           
 11589                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 11590  0012A2  0E00               	movlw	0
 11591  0012A4  0102               	movlb	2	; () banked
 11592  0012A6  6FA6               	movwf	(_loRa+166)& (0+255),b
 11593  0012A8  0E00               	movlw	0
 11594  0012AA  6FA5               	movwf	(_loRa+165)& (0+255),b
 11595                           
 11596                           ; BSR set to: 2
 11597                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 11598  0012AC  0E1D               	movlw	low (_loRa+29)
 11599  0012AE  0100               	movlb	0	; () banked
 11600  0012B0  6F60               	movwf	memset@p1& (0+255),b
 11601  0012B2  0E02               	movlw	high (_loRa+29)
 11602  0012B4  6F61               	movwf	(memset@p1+1)& (0+255),b
 11603  0012B6  0E00               	movlw	0
 11604  0012B8  6F63               	movwf	(memset@c+1)& (0+255),b
 11605  0012BA  0E00               	movlw	0
 11606  0012BC  6F62               	movwf	memset@c& (0+255),b
 11607  0012BE  0E00               	movlw	0
 11608  0012C0  6F65               	movwf	(memset@n+1)& (0+255),b
 11609  0012C2  0E69               	movlw	105
 11610  0012C4  6F64               	movwf	memset@n& (0+255),b
 11611  0012C6  EC18  F01A         	call	_memset	;wreg free
 11612                           
 11613                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 11614  0012CA  0E03               	movlw	3
 11615  0012CC  0102               	movlb	2	; () banked
 11616  0012CE  6F95               	movwf	(_loRa+149)& (0+255),b
 11617  0012D0  0EE8               	movlw	232
 11618  0012D2  6F94               	movwf	(_loRa+148)& (0+255),b
 11619                           
 11620                           ; BSR set to: 2
 11621                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 11622  0012D4  0E07               	movlw	7
 11623  0012D6  6F97               	movwf	(_loRa+151)& (0+255),b
 11624  0012D8  0ED0               	movlw	208
 11625  0012DA  6F96               	movwf	(_loRa+150)& (0+255),b
 11626                           
 11627                           ; BSR set to: 2
 11628                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 11629  0012DC  0E13               	movlw	19
 11630  0012DE  6F99               	movwf	(_loRa+153)& (0+255),b
 11631  0012E0  0E88               	movlw	136
 11632  0012E2  6F98               	movwf	(_loRa+152)& (0+255),b
 11633                           
 11634                           ; BSR set to: 2
 11635                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 11636  0012E4  0E17               	movlw	23
 11637  0012E6  6F9B               	movwf	(_loRa+155)& (0+255),b
 11638  0012E8  0E70               	movlw	112
 11639  0012EA  6F9A               	movwf	(_loRa+154)& (0+255),b
 11640                           
 11641                           ; BSR set to: 2
 11642                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 11643  0012EC  0E07               	movlw	7
 11644  0012EE  6FA1               	movwf	(_loRa+161)& (0+255),b
 11645  0012F0  0ED0               	movlw	208
 11646  0012F2  6FA0               	movwf	(_loRa+160)& (0+255),b
 11647                           
 11648                           ; BSR set to: 2
 11649                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 11650  0012F4  0E20               	movlw	32
 11651  0012F6  6FA3               	movwf	(_loRa+163)& (0+255),b
 11652                           
 11653                           ; BSR set to: 2
 11654                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 11655  0012F8  0E40               	movlw	64
 11656  0012FA  6FA2               	movwf	(_loRa+162)& (0+255),b
 11657                           
 11658                           ; BSR set to: 2
 11659                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 11660  0012FC  0E40               	movlw	64
 11661  0012FE  6F9D               	movwf	(_loRa+157)& (0+255),b
 11662  001300  0E00               	movlw	0
 11663  001302  6F9C               	movwf	(_loRa+156)& (0+255),b
 11664                           
 11665                           ; BSR set to: 2
 11666                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 11667  001304  0E40               	movlw	64
 11668  001306  6F9F               	movwf	(_loRa+159)& (0+255),b
 11669  001308  0E00               	movlw	0
 11670  00130A  6F9E               	movwf	(_loRa+158)& (0+255),b
 11671                           
 11672                           ; BSR set to: 2
 11673                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 11674  00130C  0E00               	movlw	0
 11675  00130E  0100               	movlb	0	; () banked
 11676  001310  6F9B               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 11677  001312  0E00               	movlw	0
 11678  001314  6F9A               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 11679  001316  EC57  F00D         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 11680  00131A  0012               	return		;funcret
 11681  00131C                     __end_of_LORAWAN_Reset:
 11682                           	opt stack 0
 11683                           tblptru	equ	0xFF8
 11684                           tblptrh	equ	0xFF7
 11685                           tblptrl	equ	0xFF6
 11686                           tablat	equ	0xFF5
 11687                           prodh	equ	0xFF4
 11688                           prodl	equ	0xFF3
 11689                           intcon	equ	0xFF2
 11690                           intcon2	equ	0xFF1
 11691                           intcon3	equ	0xFF0
 11692                           indf0	equ	0xFEF
 11693                           postinc0	equ	0xFEE
 11694                           plusw0	equ	0xFEB
 11695                           fsr0h	equ	0xFEA
 11696                           fsr0l	equ	0xFE9
 11697                           wreg	equ	0xFE8
 11698                           indf2	equ	0xFDF
 11699                           postinc2	equ	0xFDE
 11700                           postdec2	equ	0xFDD
 11701                           plusw2	equ	0xFDB
 11702                           fsr2h	equ	0xFDA
 11703                           fsr2l	equ	0xFD9
 11704                           status	equ	0xFD8
 11705                           
 11706 ;; *************** function _UpdateMinMaxChDataRate *****************
 11707 ;; Defined at:
 11708 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;		None
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  i               1    1[BANK0 ] unsigned char 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;Total ram usage:        2 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    7
 11729 ;; This function calls:
 11730 ;;		Nothing
 11731 ;; This function is called by:
 11732 ;;		_LORAWAN_Reset
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text61
 11737  002182                     __ptext61:
 11738                           	opt stack 0
 11739  002182                     _UpdateMinMaxChDataRate:
 11740                           	opt stack 21
 11741                           
 11742                           ;lorawan.c: 1065: uint8_t i;
 11743                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 11744                           
 11745                           ;incstack = 0
 11746  002182  0E07               	movlw	7
 11747  002184  0102               	movlb	2	; () banked
 11748  002186  6FEB               	movwf	(_loRa+235)& (0+255),b
 11749                           
 11750                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 11751  002188  0E00               	movlw	0
 11752  00218A  6FEC               	movwf	(_loRa+236)& (0+255),b
 11753                           
 11754                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 11755  00218C  0E00               	movlw	0
 11756  00218E  0100               	movlb	0	; () banked
 11757  002190  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 11758  002192  D06D               	goto	l1874
 11759  002194                     
 11760                           ; BSR set to: 0
 11761                           ;lorawan.c: 1072: {
 11762                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 11763                           
 11764                           ; BSR set to: 0
 11765  002194  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11766  002196  0D0E               	mullw	14
 11767  002198  0E05               	movlw	5
 11768  00219A  26F3               	addwf	prodl,f,c
 11769  00219C  0E00               	movlw	0
 11770  00219E  22F4               	addwfc	prodh,f,c
 11771  0021A0  0E00               	movlw	low _Channels
 11772  0021A2  24F3               	addwf	prodl,w,c
 11773  0021A4  6ED9               	movwf	fsr2l,c
 11774  0021A6  0E04               	movlw	high _Channels
 11775  0021A8  20F4               	addwfc	prodh,w,c
 11776  0021AA  6EDA               	movwf	fsr2h,c
 11777  0021AC  0104               	movlb	4	; () banked
 11778  0021AE  50DF               	movf	223,w,c
 11779  0021B0  0B0F               	andlw	15
 11780  0021B2  0100               	movlb	0	; () banked
 11781  0021B4  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 11782  0021B6  0102               	movlb	2	; () banked
 11783  0021B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 11784  0021BA  0100               	movlb	0	; () banked
 11785  0021BC  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 11786  0021BE  B0D8               	btfsc	status,0,c
 11787  0021C0  D020               	goto	l1876
 11788                           
 11789                           ; BSR set to: 0
 11790  0021C2  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11791  0021C4  0D0E               	mullw	14
 11792  0021C6  0E04               	movlw	4
 11793  0021C8  26F3               	addwf	prodl,f,c
 11794  0021CA  0E00               	movlw	0
 11795  0021CC  22F4               	addwfc	prodh,f,c
 11796  0021CE  0E00               	movlw	low _Channels
 11797  0021D0  24F3               	addwf	prodl,w,c
 11798  0021D2  6ED9               	movwf	fsr2l,c
 11799  0021D4  0E04               	movlw	high _Channels
 11800  0021D6  20F4               	addwfc	prodh,w,c
 11801  0021D8  6EDA               	movwf	fsr2h,c
 11802  0021DA  04DE               	decf	postinc2,w,c
 11803  0021DC  A4D8               	btfss	status,2,c
 11804  0021DE  D011               	goto	l1876
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;lorawan.c: 1074: {
 11808                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 11809  0021E0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11810  0021E2  0D0E               	mullw	14
 11811  0021E4  0E05               	movlw	5
 11812  0021E6  26F3               	addwf	prodl,f,c
 11813  0021E8  0E00               	movlw	0
 11814  0021EA  22F4               	addwfc	prodh,f,c
 11815  0021EC  0E00               	movlw	low _Channels
 11816  0021EE  24F3               	addwf	prodl,w,c
 11817  0021F0  6ED9               	movwf	fsr2l,c
 11818  0021F2  0E04               	movlw	high _Channels
 11819  0021F4  20F4               	addwfc	prodh,w,c
 11820  0021F6  6EDA               	movwf	fsr2h,c
 11821  0021F8  0104               	movlb	4	; () banked
 11822  0021FA  50DF               	movf	223,w,c
 11823  0021FC  0B0F               	andlw	15
 11824  0021FE  0102               	movlb	2	; () banked
 11825  002200  6FEB               	movwf	(_loRa+235)& (0+255),b
 11826  002202                     l1876:
 11827                           
 11828                           ;lorawan.c: 1076: }
 11829                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 11830  002202  0100               	movlb	0	; () banked
 11831  002204  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11832  002206  0D0E               	mullw	14
 11833  002208  0E05               	movlw	5
 11834  00220A  26F3               	addwf	prodl,f,c
 11835  00220C  0E00               	movlw	0
 11836  00220E  22F4               	addwfc	prodh,f,c
 11837  002210  0E00               	movlw	low _Channels
 11838  002212  24F3               	addwf	prodl,w,c
 11839  002214  6ED9               	movwf	fsr2l,c
 11840  002216  0E04               	movlw	high _Channels
 11841  002218  20F4               	addwfc	prodh,w,c
 11842  00221A  6EDA               	movwf	fsr2h,c
 11843  00221C  0104               	movlb	4	; () banked
 11844  00221E  38DF               	swapf	223,w,c
 11845  002220  0B0F               	andlw	15
 11846  002222  0102               	movlb	2	; () banked
 11847  002224  61EC               	cpfslt	(_loRa+236)& (0+255),b
 11848  002226  D021               	goto	l1877
 11849                           
 11850                           ; BSR set to: 2
 11851  002228  0100               	movlb	0	; () banked
 11852  00222A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11853  00222C  0D0E               	mullw	14
 11854  00222E  0E04               	movlw	4
 11855  002230  26F3               	addwf	prodl,f,c
 11856  002232  0E00               	movlw	0
 11857  002234  22F4               	addwfc	prodh,f,c
 11858  002236  0E00               	movlw	low _Channels
 11859  002238  24F3               	addwf	prodl,w,c
 11860  00223A  6ED9               	movwf	fsr2l,c
 11861  00223C  0E04               	movlw	high _Channels
 11862  00223E  20F4               	addwfc	prodh,w,c
 11863  002240  6EDA               	movwf	fsr2h,c
 11864  002242  04DE               	decf	postinc2,w,c
 11865  002244  A4D8               	btfss	status,2,c
 11866  002246  D011               	goto	l1877
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;lorawan.c: 1078: {
 11870                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 11871  002248  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11872  00224A  0D0E               	mullw	14
 11873  00224C  0E05               	movlw	5
 11874  00224E  26F3               	addwf	prodl,f,c
 11875  002250  0E00               	movlw	0
 11876  002252  22F4               	addwfc	prodh,f,c
 11877  002254  0E00               	movlw	low _Channels
 11878  002256  24F3               	addwf	prodl,w,c
 11879  002258  6ED9               	movwf	fsr2l,c
 11880  00225A  0E04               	movlw	high _Channels
 11881  00225C  20F4               	addwfc	prodh,w,c
 11882  00225E  6EDA               	movwf	fsr2h,c
 11883  002260  0104               	movlb	4	; () banked
 11884  002262  38DF               	swapf	223,w,c
 11885  002264  0B0F               	andlw	15
 11886  002266  0102               	movlb	2	; () banked
 11887  002268  6FEC               	movwf	(_loRa+236)& (0+255),b
 11888  00226A                     l1877:
 11889                           
 11890                           ; BSR set to: 2
 11891  00226A  0100               	movlb	0	; () banked
 11892  00226C  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 11893  00226E                     l1874:
 11894                           
 11895                           ; BSR set to: 0
 11896                           
 11897                           ; BSR set to: 0
 11898  00226E  0102               	movlb	2	; () banked
 11899  002270  51ED               	movf	(_loRa+237)& (0+255),w,b
 11900  002272  0100               	movlb	0	; () banked
 11901  002274  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11902  002276  B0D8               	btfsc	status,0,c
 11903  002278  0012               	return	
 11904  00227A  D78C               	goto	l1875
 11905  00227C                     __end_of_UpdateMinMaxChDataRate:
 11906                           	opt stack 0
 11907                           tblptru	equ	0xFF8
 11908                           tblptrh	equ	0xFF7
 11909                           tblptrl	equ	0xFF6
 11910                           tablat	equ	0xFF5
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           intcon	equ	0xFF2
 11914                           intcon2	equ	0xFF1
 11915                           intcon3	equ	0xFF0
 11916                           indf0	equ	0xFEF
 11917                           postinc0	equ	0xFEE
 11918                           plusw0	equ	0xFEB
 11919                           fsr0h	equ	0xFEA
 11920                           fsr0l	equ	0xFE9
 11921                           wreg	equ	0xFE8
 11922                           indf2	equ	0xFDF
 11923                           postinc2	equ	0xFDE
 11924                           postdec2	equ	0xFDD
 11925                           plusw2	equ	0xFDB
 11926                           fsr2h	equ	0xFDA
 11927                           fsr2l	equ	0xFD9
 11928                           status	equ	0xFD8
 11929                           
 11930 ;; *************** function _StopAllSoftwareTimers *****************
 11931 ;; Defined at:
 11932 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;		None
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;		None
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  1    wreg      void 
 11939 ;; Registers used:
 11940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;Total ram usage:        0 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:    8
 11953 ;; This function calls:
 11954 ;;		_SwTimerStop
 11955 ;; This function is called by:
 11956 ;;		_LORAWAN_Init
 11957 ;;		_LORAWAN_Reset
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           	psect	text62
 11962  003128                     __ptext62:
 11963                           	opt stack 0
 11964  003128                     _StopAllSoftwareTimers:
 11965                           	opt stack 21
 11966                           
 11967                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;incstack = 0
 11971  003128  0102               	movlb	2	; () banked
 11972  00312A  51E2               	movf	(_loRa+226)& (0+255),w,b
 11973  00312C  EC9D  F01A         	call	_SwTimerStop
 11974                           
 11975                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 11976  003130  0102               	movlb	2	; () banked
 11977  003132  51E3               	movf	(_loRa+227)& (0+255),w,b
 11978  003134  EC9D  F01A         	call	_SwTimerStop
 11979                           
 11980                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 11981  003138  0102               	movlb	2	; () banked
 11982  00313A  51E7               	movf	(_loRa+231)& (0+255),w,b
 11983  00313C  EC9D  F01A         	call	_SwTimerStop
 11984                           
 11985                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 11986  003140  0102               	movlb	2	; () banked
 11987  003142  51E4               	movf	(_loRa+228)& (0+255),w,b
 11988  003144  EC9D  F01A         	call	_SwTimerStop
 11989                           
 11990                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 11991  003148  0102               	movlb	2	; () banked
 11992  00314A  51E5               	movf	(_loRa+229)& (0+255),w,b
 11993  00314C  EC9D  F01A         	call	_SwTimerStop
 11994                           
 11995                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 11996  003150  0102               	movlb	2	; () banked
 11997  003152  51E8               	movf	(_loRa+232)& (0+255),w,b
 11998  003154  EC9D  F01A         	call	_SwTimerStop
 11999                           
 12000                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 12001  003158  0102               	movlb	2	; () banked
 12002  00315A  51E6               	movf	(_loRa+230)& (0+255),w,b
 12003  00315C  EC9D  F01A         	call	_SwTimerStop
 12004                           
 12005                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 12006  003160  0102               	movlb	2	; () banked
 12007  003162  51EA               	movf	(_loRa+234)& (0+255),w,b
 12008  003164  EC9D  F01A         	call	_SwTimerStop
 12009                           
 12010                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 12011  003168  0102               	movlb	2	; () banked
 12012  00316A  51F3               	movf	(_loRa+243)& (0+255),w,b
 12013  00316C  EC9D  F01A         	call	_SwTimerStop
 12014                           
 12015                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 12016  003170  0102               	movlb	2	; () banked
 12017  003172  51E9               	movf	(_loRa+233)& (0+255),w,b
 12018  003174  EC9D  F01A         	call	_SwTimerStop
 12019  003178  0012               	return		;funcret
 12020  00317A                     __end_of_StopAllSoftwareTimers:
 12021                           	opt stack 0
 12022                           tblptru	equ	0xFF8
 12023                           tblptrh	equ	0xFF7
 12024                           tblptrl	equ	0xFF6
 12025                           tablat	equ	0xFF5
 12026                           prodh	equ	0xFF4
 12027                           prodl	equ	0xFF3
 12028                           intcon	equ	0xFF2
 12029                           intcon2	equ	0xFF1
 12030                           intcon3	equ	0xFF0
 12031                           indf0	equ	0xFEF
 12032                           postinc0	equ	0xFEE
 12033                           plusw0	equ	0xFEB
 12034                           fsr0h	equ	0xFEA
 12035                           fsr0l	equ	0xFE9
 12036                           wreg	equ	0xFE8
 12037                           indf2	equ	0xFDF
 12038                           postinc2	equ	0xFDE
 12039                           postdec2	equ	0xFDD
 12040                           plusw2	equ	0xFDB
 12041                           fsr2h	equ	0xFDA
 12042                           fsr2l	equ	0xFD9
 12043                           status	equ	0xFD8
 12044                           
 12045 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 12046 ;; Defined at:
 12047 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  syncWord        1    wreg     unsigned char 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  syncWord        1    0[BANK0 ] unsigned char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;Total ram usage:        1 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    7
 12068 ;; This function calls:
 12069 ;;		Nothing
 12070 ;; This function is called by:
 12071 ;;		_LORAWAN_Reset
 12072 ;;		_ConfigureRadio
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           	psect	text63
 12077  00383E                     __ptext63:
 12078                           	opt stack 0
 12079  00383E                     _RADIO_SetLoRaSyncWord:
 12080                           	opt stack 19
 12081                           
 12082                           ;incstack = 0
 12083                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 12084  00383E  0100               	movlb	0	; () banked
 12085  003840  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 12086                           
 12087                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 12088  003842  C060  F174         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 12089  003846  0012               	return		;funcret
 12090  003848                     __end_of_RADIO_SetLoRaSyncWord:
 12091                           	opt stack 0
 12092                           tblptru	equ	0xFF8
 12093                           tblptrh	equ	0xFF7
 12094                           tblptrl	equ	0xFF6
 12095                           tablat	equ	0xFF5
 12096                           prodh	equ	0xFF4
 12097                           prodl	equ	0xFF3
 12098                           intcon	equ	0xFF2
 12099                           intcon2	equ	0xFF1
 12100                           intcon3	equ	0xFF0
 12101                           indf0	equ	0xFEF
 12102                           postinc0	equ	0xFEE
 12103                           plusw0	equ	0xFEB
 12104                           fsr0h	equ	0xFEA
 12105                           fsr0l	equ	0xFE9
 12106                           wreg	equ	0xFE8
 12107                           indf2	equ	0xFDF
 12108                           postinc2	equ	0xFDE
 12109                           postdec2	equ	0xFDD
 12110                           plusw2	equ	0xFDB
 12111                           fsr2h	equ	0xFDA
 12112                           fsr2l	equ	0xFD9
 12113                           status	equ	0xFD8
 12114                           
 12115 ;; *************** function _RADIO_Init *****************
 12116 ;; Defined at:
 12117 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 12120 ;;		 -> radioBuffer(271), 
 12121 ;;  frequency       4   27[BANK0 ] unsigned long 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12133 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;Total ram usage:        7 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:   11
 12140 ;; This function calls:
 12141 ;;		_RADIO_RegisterRead
 12142 ;;		_RADIO_RegisterWrite
 12143 ;;		_RADIO_Reset
 12144 ;;		_RADIO_WriteFrequency
 12145 ;;		_RADIO_WriteMode
 12146 ;;		_SwTimerCreate
 12147 ;;		_SwTimerSetCallback
 12148 ;;		_SwTimerStop
 12149 ;; This function is called by:
 12150 ;;		_LORAWAN_Init
 12151 ;;		_LORAWAN_Reset
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text64
 12156  00131C                     __ptext64:
 12157                           	opt stack 0
 12158  00131C                     _RADIO_Init:
 12159                           	opt stack 18
 12160                           
 12161                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 12162                           
 12163                           ;incstack = 0
 12164  00131C  C07B  F166         	movff	RADIO_Init@frequency,_RadioConfiguration
 12165  001320  C07C  F167         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 12166  001324  C07D  F168         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 12167  001328  C07E  F169         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 12168                           
 12169                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 12170  00132C  0EA8               	movlw	168
 12171  00132E  0101               	movlb	1	; () banked
 12172  001330  6F6A               	movwf	(_RadioConfiguration+4)& (0+255),b
 12173  001332  0E61               	movlw	97
 12174  001334  6F6B               	movwf	(_RadioConfiguration+5)& (0+255),b
 12175  001336  0E00               	movlw	0
 12176  001338  6F6C               	movwf	(_RadioConfiguration+6)& (0+255),b
 12177  00133A  0E00               	movlw	0
 12178  00133C  6F6D               	movwf	(_RadioConfiguration+7)& (0+255),b
 12179                           
 12180                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 12181  00133E  0E50               	movlw	80
 12182  001340  6F6E               	movwf	(_RadioConfiguration+8)& (0+255),b
 12183  001342  0EC3               	movlw	195
 12184  001344  6F6F               	movwf	(_RadioConfiguration+9)& (0+255),b
 12185  001346  0E00               	movlw	0
 12186  001348  6F70               	movwf	(_RadioConfiguration+10)& (0+255),b
 12187  00134A  0E00               	movlw	0
 12188  00134C  6F71               	movwf	(_RadioConfiguration+11)& (0+255),b
 12189                           
 12190                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 12191  00134E  0E01               	movlw	1
 12192  001350  6F7E               	movwf	(_RadioConfiguration+24)& (0+255),b
 12193                           
 12194                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 12195  001352  0E07               	movlw	7
 12196  001354  6F80               	movwf	(_RadioConfiguration+26)& (0+255),b
 12197                           
 12198                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 12199  001356  0E01               	movlw	1
 12200  001358  6F81               	movwf	(_RadioConfiguration+27)& (0+255),b
 12201                           
 12202                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 12203  00135A  0E01               	movlw	1
 12204  00135C  6F87               	movwf	(_RadioConfiguration+33)& (0+255),b
 12205                           
 12206                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 12207  00135E  0E00               	movlw	0
 12208  001360  6F88               	movwf	(_RadioConfiguration+34)& (0+255),b
 12209                           
 12210                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 12211  001362  0E00               	movlw	0
 12212  001364  6F73               	movwf	(_RadioConfiguration+13)& (0+255),b
 12213  001366  0E08               	movlw	8
 12214  001368  6F72               	movwf	(_RadioConfiguration+12)& (0+255),b
 12215                           
 12216                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 12217  00136A  0E0C               	movlw	12
 12218  00136C  6F7F               	movwf	(_RadioConfiguration+25)& (0+255),b
 12219                           
 12220                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 12221  00136E  0E01               	movlw	1
 12222  001370  6F82               	movwf	(_RadioConfiguration+28)& (0+255),b
 12223                           
 12224                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 12225  001372  0E00               	movlw	0
 12226  001374  6F83               	movwf	(_RadioConfiguration+29)& (0+255),b
 12227                           
 12228                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 12229  001376  0E00               	movlw	0
 12230  001378  6F86               	movwf	(_RadioConfiguration+32)& (0+255),b
 12231                           
 12232                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 12233  00137A  0EC1               	movlw	193
 12234  00137C  6F75               	movwf	(_RadioConfiguration+15)& (0+255),b
 12235                           
 12236                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 12237  00137E  0E94               	movlw	148
 12238  001380  6F76               	movwf	(_RadioConfiguration+16)& (0+255),b
 12239                           
 12240                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 12241  001382  0EC1               	movlw	193
 12242  001384  6F77               	movwf	(_RadioConfiguration+17)& (0+255),b
 12243                           
 12244                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 12245  001386  0E03               	movlw	3
 12246  001388  6F7D               	movwf	(_RadioConfiguration+23)& (0+255),b
 12247                           
 12248                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 12249  00138A  0E34               	movlw	52
 12250  00138C  6F74               	movwf	(_RadioConfiguration+14)& (0+255),b
 12251                           
 12252                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 12253  00138E  0E00               	movlw	0
 12254  001390  6F89               	movwf	(_RadioConfiguration+35)& (0+255),b
 12255                           
 12256                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 12257  001392  0E00               	movlw	0
 12258  001394  6F8A               	movwf	(_RadioConfiguration+36)& (0+255),b
 12259                           
 12260                           ; BSR set to: 1
 12261                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 12262  001396  C079  F18B         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 12263  00139A  C07A  F18C         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 12264                           
 12265                           ; BSR set to: 1
 12266                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 12267  00139E  0E00               	movlw	0
 12268  0013A0  6F85               	movwf	(_RadioConfiguration+31)& (0+255),b
 12269  0013A2  0E00               	movlw	0
 12270  0013A4  6F84               	movwf	(_RadioConfiguration+30)& (0+255),b
 12271                           
 12272                           ; BSR set to: 1
 12273                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 12274  0013A6  0E80               	movlw	128
 12275  0013A8  6F98               	movwf	(_RadioConfiguration+50)& (0+255),b
 12276                           
 12277                           ; BSR set to: 1
 12278                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 12279  0013AA  0E98               	movlw	152
 12280  0013AC  6F90               	movwf	(_RadioConfiguration+42)& (0+255),b
 12281  0013AE  0E3A               	movlw	58
 12282  0013B0  6F91               	movwf	(_RadioConfiguration+43)& (0+255),b
 12283  0013B2  0E00               	movlw	0
 12284  0013B4  6F92               	movwf	(_RadioConfiguration+44)& (0+255),b
 12285  0013B6  0E00               	movlw	0
 12286  0013B8  6F93               	movwf	(_RadioConfiguration+45)& (0+255),b
 12287                           
 12288                           ; BSR set to: 1
 12289                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 12290  0013BA  0E02               	movlw	2
 12291  0013BC  6F99               	movwf	(_RadioConfiguration+51)& (0+255),b
 12292                           
 12293                           ; BSR set to: 1
 12294                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 12295  0013BE  0E0B               	movlw	11
 12296  0013C0  6F9A               	movwf	(_RadioConfiguration+52)& (0+255),b
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 12300  0013C2  0E12               	movlw	18
 12301  0013C4  6F9B               	movwf	(_RadioConfiguration+53)& (0+255),b
 12302                           
 12303                           ; BSR set to: 1
 12304                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 12305  0013C6  0E00               	movlw	0
 12306  0013C8  6F95               	movwf	(_RadioConfiguration+47)& (0+255),b
 12307  0013CA  0E00               	movlw	0
 12308  0013CC  6F96               	movwf	(_RadioConfiguration+48)& (0+255),b
 12309                           
 12310                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 12311  0013CE  5194               	movf	(_RadioConfiguration+46)& (0+255),w,b
 12312  0013D0  A4D8               	btfss	status,2,c
 12313  0013D2  D026               	goto	l438
 12314                           
 12315                           ; BSR set to: 1
 12316                           ;radio_driver_SX1276.c: 457: {
 12317                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 12318  0013D4  ECCF  F014         	call	_SwTimerCreate	;wreg free
 12319  0013D8  0101               	movlb	1	; () banked
 12320  0013DA  6F8D               	movwf	(_RadioConfiguration+39)& (0+255),b
 12321                           
 12322                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 12323  0013DC  ECCF  F014         	call	_SwTimerCreate	;wreg free
 12324  0013E0  0101               	movlb	1	; () banked
 12325  0013E2  6F8E               	movwf	(_RadioConfiguration+40)& (0+255),b
 12326                           
 12327                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 12328  0013E4  ECCF  F014         	call	_SwTimerCreate	;wreg free
 12329  0013E8  0101               	movlb	1	; () banked
 12330  0013EA  6F8F               	movwf	(_RadioConfiguration+41)& (0+255),b
 12331                           
 12332                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 12333  0013EC  0E00               	movlw	0
 12334  0013EE  0100               	movlb	0	; () banked
 12335  0013F0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 12336  0013F2  0E00               	movlw	0
 12337  0013F4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 12338  0013F6  0E00               	movlw	0
 12339  0013F8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 12340  0013FA  0101               	movlb	1	; () banked
 12341  0013FC  518E               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12342  0013FE  EC2B  F019         	call	_SwTimerSetCallback
 12343                           
 12344                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 12345  001402  0E00               	movlw	0
 12346  001404  0100               	movlb	0	; () banked
 12347  001406  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 12348  001408  0E00               	movlw	0
 12349  00140A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 12350  00140C  0E00               	movlw	0
 12351  00140E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 12352  001410  0101               	movlb	1	; () banked
 12353  001412  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12354  001414  EC2B  F019         	call	_SwTimerSetCallback
 12355                           
 12356                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 12357  001418  0E01               	movlw	1
 12358  00141A  0101               	movlb	1	; () banked
 12359  00141C  6F94               	movwf	(_RadioConfiguration+46)& (0+255),b
 12360                           
 12361                           ;radio_driver_SX1276.c: 466: }
 12362  00141E  D00B               	goto	l439
 12363  001420                     l438:
 12364                           
 12365                           ; BSR set to: 1
 12366                           ;radio_driver_SX1276.c: 467: else
 12367                           ;radio_driver_SX1276.c: 468: {
 12368                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 12369                           
 12370                           ; BSR set to: 1
 12371  001420  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
 12372  001422  EC9D  F01A         	call	_SwTimerStop
 12373                           
 12374                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 12375  001426  0101               	movlb	1	; () banked
 12376  001428  518E               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12377  00142A  EC9D  F01A         	call	_SwTimerStop
 12378                           
 12379                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 12380  00142E  0101               	movlb	1	; () banked
 12381  001430  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12382  001432  EC9D  F01A         	call	_SwTimerStop
 12383  001436                     l439:
 12384                           
 12385                           ;radio_driver_SX1276.c: 472: }
 12386                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 12387  001436  ECE6  F018         	call	_RADIO_Reset	;wreg free
 12388                           
 12389                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 12390  00143A  0E00               	movlw	0
 12391  00143C  0100               	movlb	0	; () banked
 12392  00143E  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12393  001440  0E01               	movlw	1
 12394  001442  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12395  001444  0E01               	movlw	1
 12396  001446  EC42  F010         	call	_RADIO_WriteMode
 12397                           
 12398                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 12399  00144A  C166  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 12400  00144E  C167  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 12401  001452  C168  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 12402  001456  C169  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 12403  00145A  ECB6  F011         	call	_RADIO_WriteFrequency	;wreg free
 12404                           
 12405                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 12406  00145E  0E42               	movlw	66
 12407  001460  0100               	movlb	0	; () banked
 12408  001462  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12409  001464  0E3B               	movlw	59
 12410  001466  ECE4  F01A         	call	_RADIO_RegisterWrite
 12411  00146A                     
 12412                           ;radio_driver_SX1276.c: 490: ;
 12413  00146A  0E3B               	movlw	59
 12414  00146C  EC89  F01A         	call	_RADIO_RegisterRead
 12415  001470  0100               	movlb	0	; () banked
 12416  001472  6F7F               	movwf	??_RADIO_Init& (0+255),b
 12417  001474  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 12418  001476  D7F9               	goto	l441
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 12422                           
 12423                           ; BSR set to: 0
 12424  001478  0E23               	movlw	35
 12425  00147A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12426  00147C  0E0C               	movlw	12
 12427  00147E  ECE4  F01A         	call	_RADIO_RegisterWrite
 12428                           
 12429                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 12430  001482  0E1E               	movlw	30
 12431  001484  0100               	movlb	0	; () banked
 12432  001486  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12433  001488  0E0D               	movlw	13
 12434  00148A  ECE4  F01A         	call	_RADIO_RegisterWrite
 12435                           
 12436                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 12437  00148E  0EAA               	movlw	170
 12438  001490  0100               	movlb	0	; () banked
 12439  001492  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12440  001494  0E1F               	movlw	31
 12441  001496  ECE4  F01A         	call	_RADIO_RegisterWrite
 12442                           
 12443                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 12444  00149A  0E8F               	movlw	143
 12445  00149C  0100               	movlb	0	; () banked
 12446  00149E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12447  0014A0  0E35               	movlw	53
 12448  0014A2  ECE4  F01A         	call	_RADIO_RegisterWrite
 12449                           
 12450                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 12451  0014A6  0EFF               	movlw	255
 12452  0014A8  0100               	movlb	0	; () banked
 12453  0014AA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12454  0014AC  0E32               	movlw	50
 12455  0014AE  ECE4  F01A         	call	_RADIO_RegisterWrite
 12456                           
 12457                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 12458  0014B2  0E40               	movlw	64
 12459  0014B4  0100               	movlb	0	; () banked
 12460  0014B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12461  0014B8  0E31               	movlw	49
 12462  0014BA  ECE4  F01A         	call	_RADIO_RegisterWrite
 12463                           
 12464                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 12465  0014BE  0E01               	movlw	1
 12466  0014C0  0100               	movlb	0	; () banked
 12467  0014C2  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12468  0014C4  0E01               	movlw	1
 12469  0014C6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12470  0014C8  0E00               	movlw	0
 12471  0014CA  EC42  F010         	call	_RADIO_WriteMode
 12472                           
 12473                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 12474  0014CE  0EFF               	movlw	255
 12475  0014D0  0100               	movlb	0	; () banked
 12476  0014D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12477  0014D4  0E23               	movlw	35
 12478  0014D6  ECE4  F01A         	call	_RADIO_RegisterWrite
 12479                           
 12480                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 12481  0014DA  0E42               	movlw	66
 12482  0014DC  EC89  F01A         	call	_RADIO_RegisterRead
 12483  0014E0  0101               	movlb	1	; () banked
 12484  0014E2  6F97               	movwf	(_RadioConfiguration+49)& (0+255),b
 12485                           
 12486                           ; BSR set to: 1
 12487  0014E4  0012               	return		;funcret
 12488  0014E6                     __end_of_RADIO_Init:
 12489                           	opt stack 0
 12490                           tblptru	equ	0xFF8
 12491                           tblptrh	equ	0xFF7
 12492                           tblptrl	equ	0xFF6
 12493                           tablat	equ	0xFF5
 12494                           prodh	equ	0xFF4
 12495                           prodl	equ	0xFF3
 12496                           intcon	equ	0xFF2
 12497                           intcon2	equ	0xFF1
 12498                           intcon3	equ	0xFF0
 12499                           indf0	equ	0xFEF
 12500                           postinc0	equ	0xFEE
 12501                           plusw0	equ	0xFEB
 12502                           fsr0h	equ	0xFEA
 12503                           fsr0l	equ	0xFE9
 12504                           wreg	equ	0xFE8
 12505                           indf2	equ	0xFDF
 12506                           postinc2	equ	0xFDE
 12507                           postdec2	equ	0xFDD
 12508                           plusw2	equ	0xFDB
 12509                           fsr2h	equ	0xFDA
 12510                           fsr2l	equ	0xFD9
 12511                           status	equ	0xFD8
 12512                           
 12513 ;; *************** function _SwTimerSetCallback *****************
 12514 ;; Defined at:
 12515 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  timerId         1    wreg     unsigned char 
 12518 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 12519 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 12520 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 12521 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 12522 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;  timerId         1    3[BANK0 ] unsigned char 
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      void 
 12527 ;; Registers used:
 12528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12534 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12538 ;;Total ram usage:        4 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:    7
 12541 ;; This function calls:
 12542 ;;		Nothing
 12543 ;; This function is called by:
 12544 ;;		_RADIO_Init
 12545 ;;		_SetCallbackSoftwareTimers
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text65
 12550  003256                     __ptext65:
 12551                           	opt stack 0
 12552  003256                     _SwTimerSetCallback:
 12553                           	opt stack 21
 12554                           
 12555                           ; BSR set to: 1
 12556                           ;incstack = 0
 12557                           ;SwTimerSetCallback@timerId stored from wreg
 12558  003256  0100               	movlb	0	; () banked
 12559  003258  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 12560                           
 12561                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 12562  00325A  0100               	movlb	0	; () banked
 12563  00325C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 12564  00325E  0D08               	mullw	8
 12565  003260  0E06               	movlw	6
 12566  003262  26F3               	addwf	prodl,f,c
 12567  003264  0E00               	movlw	0
 12568  003266  22F4               	addwfc	prodh,f,c
 12569  003268  0E00               	movlw	low _swTimers
 12570  00326A  24F3               	addwf	prodl,w,c
 12571  00326C  6ED9               	movwf	fsr2l,c
 12572  00326E  0E03               	movlw	high _swTimers
 12573  003270  20F4               	addwfc	prodh,w,c
 12574  003272  6EDA               	movwf	fsr2h,c
 12575  003274  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 12576  003278  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 12577                           
 12578                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 12579  00327C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 12580  00327E  0D08               	mullw	8
 12581  003280  0E05               	movlw	5
 12582  003282  26F3               	addwf	prodl,f,c
 12583  003284  0E00               	movlw	0
 12584  003286  22F4               	addwfc	prodh,f,c
 12585  003288  0E00               	movlw	low _swTimers
 12586  00328A  24F3               	addwf	prodl,w,c
 12587  00328C  6ED9               	movwf	fsr2l,c
 12588  00328E  0E03               	movlw	high _swTimers
 12589  003290  20F4               	addwfc	prodh,w,c
 12590  003292  6EDA               	movwf	fsr2h,c
 12591  003294  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 12592                           
 12593                           ; BSR set to: 0
 12594  003298  0012               	return		;funcret
 12595  00329A                     __end_of_SwTimerSetCallback:
 12596                           	opt stack 0
 12597                           tblptru	equ	0xFF8
 12598                           tblptrh	equ	0xFF7
 12599                           tblptrl	equ	0xFF6
 12600                           tablat	equ	0xFF5
 12601                           prodh	equ	0xFF4
 12602                           prodl	equ	0xFF3
 12603                           intcon	equ	0xFF2
 12604                           intcon2	equ	0xFF1
 12605                           intcon3	equ	0xFF0
 12606                           indf0	equ	0xFEF
 12607                           postinc0	equ	0xFEE
 12608                           plusw0	equ	0xFEB
 12609                           fsr0h	equ	0xFEA
 12610                           fsr0l	equ	0xFE9
 12611                           wreg	equ	0xFE8
 12612                           indf2	equ	0xFDF
 12613                           postinc2	equ	0xFDE
 12614                           postdec2	equ	0xFDD
 12615                           plusw2	equ	0xFDB
 12616                           fsr2h	equ	0xFDA
 12617                           fsr2l	equ	0xFD9
 12618                           status	equ	0xFD8
 12619                           
 12620 ;; *************** function _RADIO_WriteMode *****************
 12621 ;; Defined at:
 12622 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;  newMode         1    wreg     enum E7716
 12625 ;;  newModulatio    1    5[BANK0 ] enum E6984
 12626 ;;  blocking        1    6[BANK0 ] unsigned char 
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;  newMode         1   10[BANK0 ] enum E7716
 12629 ;;  opMode          1   11[BANK0 ] unsigned char 
 12630 ;;  currentMode     1    9[BANK0 ] enum E7716
 12631 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 12632 ;;  currentModul    1    7[BANK0 ] enum E6984
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12646 ;;Total ram usage:        7 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   10
 12649 ;; This function calls:
 12650 ;;		_HALDIO5PinValue
 12651 ;;		_RADIO_RegisterRead
 12652 ;;		_RADIO_RegisterWrite
 12653 ;;		_SystemBlockingWaitMs
 12654 ;; This function is called by:
 12655 ;;		_RADIO_Init
 12656 ;;		_RADIO_WriteConfiguration
 12657 ;;		_RADIO_Transmit
 12658 ;;		_RADIO_ReadRandom
 12659 ;;		_RADIO_RxFSKTimeout
 12660 ;;		_RADIO_WatchdogTimeout
 12661 ;;		_RADIO_StopCW
 12662 ;;		_RADIO_ReceiveStart
 12663 ;;		_RADIO_ReceiveStop
 12664 ;;		_RADIO_RxDone
 12665 ;;		_RADIO_FSKPayloadReady
 12666 ;;		_RADIO_RxTimeout
 12667 ;;		_RADIO_TxDone
 12668 ;;		_RADIO_FSKPacketSent
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672                           	psect	text66
 12673  002084                     __ptext66:
 12674                           	opt stack 0
 12675  002084                     _RADIO_WriteMode:
 12676                           	opt stack 18
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;incstack = 0
 12680                           ;RADIO_WriteMode@newMode stored from wreg
 12681  002084  0100               	movlb	0	; () banked
 12682  002086  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 12683                           
 12684                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 12685                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 12686                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 12687                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 12688                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 12689                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 12690  002088  0100               	movlb	0	; () banked
 12691  00208A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12692  00208C  A4D8               	btfss	status,2,c
 12693  00208E  D008               	goto	l384
 12694                           
 12695                           ; BSR set to: 0
 12696  002090  0E06               	movlw	6
 12697  002092  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12698  002094  B4D8               	btfsc	status,2,c
 12699  002096  0012               	return	
 12700                           
 12701                           ; BSR set to: 0
 12702  002098  0E07               	movlw	7
 12703  00209A  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12704  00209C  B4D8               	btfsc	status,2,c
 12705  00209E  0012               	return	
 12706  0020A0                     l384:
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;radio_driver_SX1276.c: 159: }
 12710                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 12711                           
 12712                           ; BSR set to: 0
 12713  0020A0  0E07               	movlw	7
 12714  0020A2  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 12715                           
 12716                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 12717  0020A4  0E01               	movlw	1
 12718  0020A6  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 12722  0020A8  0E01               	movlw	1
 12723  0020AA  EC89  F01A         	call	_RADIO_RegisterRead
 12724  0020AE  0100               	movlb	0	; () banked
 12725  0020B0  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 12729  0020B2  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 12730  0020B4  D002               	goto	l388
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;radio_driver_SX1276.c: 168: {
 12734                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 12735  0020B6  0E01               	movlw	1
 12736  0020B8  D001               	goto	L8
 12737  0020BA                     l388:
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;radio_driver_SX1276.c: 171: else
 12741                           ;radio_driver_SX1276.c: 172: {
 12742                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 12743                           
 12744                           ; BSR set to: 0
 12745  0020BA  0E00               	movlw	0
 12746  0020BC                     L8:
 12747  0020BC  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;radio_driver_SX1276.c: 174: }
 12751                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 12752                           
 12753                           ; BSR set to: 0
 12754  0020BE  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12755  0020C0  0B07               	andlw	7
 12756  0020C2  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 12760  0020C4  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 12761  0020C6  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 12762  0020C8  B4D8               	btfsc	status,2,c
 12763  0020CA  D01B               	goto	l390
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;radio_driver_SX1276.c: 181: {
 12767                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 12768  0020CC  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 12769  0020CE  B4D8               	btfsc	status,2,c
 12770  0020D0  D009               	goto	l391
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;radio_driver_SX1276.c: 184: {
 12774                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 12775  0020D2  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12776  0020D4  0BF8               	andlw	248
 12777  0020D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12778  0020D8  0E01               	movlw	1
 12779  0020DA  ECE4  F01A         	call	_RADIO_RegisterWrite
 12780                           
 12781                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 12782  0020DE  0E00               	movlw	0
 12783  0020E0  0100               	movlb	0	; () banked
 12784  0020E2  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 12785  0020E4                     l391:
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;radio_driver_SX1276.c: 188: }
 12789                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 12790                           
 12791                           ; BSR set to: 0
 12792  0020E4  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12793  0020E6  A4D8               	btfss	status,2,c
 12794  0020E8  D003               	goto	l392
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;radio_driver_SX1276.c: 191: {
 12798                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 12799  0020EA  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12800  0020EC  0B78               	andlw	120
 12801  0020EE  D003               	goto	L9
 12802  0020F0                     l392:
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;radio_driver_SX1276.c: 195: else
 12806                           ;radio_driver_SX1276.c: 196: {
 12807                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 12808                           
 12809                           ; BSR set to: 0
 12810  0020F0  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12811  0020F2  0B78               	andlw	120
 12812  0020F4  0980               	iorlw	128
 12813  0020F6                     L9:
 12814  0020F6  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;radio_driver_SX1276.c: 199: }
 12818                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 12819                           
 12820                           ; BSR set to: 0
 12821  0020F8  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 12822  0020FC  0E01               	movlw	1
 12823  0020FE  ECE4  F01A         	call	_RADIO_RegisterWrite
 12824  002102                     l390:
 12825                           
 12826                           ;radio_driver_SX1276.c: 201: }
 12827                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 12828  002102  0100               	movlb	0	; () banked
 12829  002104  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 12830  002106  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12831  002108  B4D8               	btfsc	status,2,c
 12832  00210A  0012               	return	
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;radio_driver_SX1276.c: 208: {
 12836                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 12837  00210C  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12838  00210E  B4D8               	btfsc	status,2,c
 12839  002110  D015               	goto	l395
 12840                           
 12841                           ; BSR set to: 0
 12842  002112  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 12843  002114  A4D8               	btfss	status,2,c
 12844  002116  D012               	goto	l395
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;radio_driver_SX1276.c: 212: {
 12848                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 12849  002118  0E41               	movlw	65
 12850  00211A  EC89  F01A         	call	_RADIO_RegisterRead
 12851  00211E  0100               	movlb	0	; () banked
 12852  002120  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 12856  002122  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12857  002124  A4D8               	btfss	status,2,c
 12858  002126  D003               	goto	l396
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;radio_driver_SX1276.c: 215: {
 12862                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 12863  002128  0E30               	movlw	48
 12864  00212A  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 12865                           
 12866                           ;radio_driver_SX1276.c: 218: }
 12867  00212C  D002               	goto	l397
 12868  00212E                     l396:
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;radio_driver_SX1276.c: 219: else
 12872                           ;radio_driver_SX1276.c: 220: {
 12873                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 12874                           
 12875                           ; BSR set to: 0
 12876  00212E  0ECF               	movlw	207
 12877  002130  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 12878  002132                     l397:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;radio_driver_SX1276.c: 223: }
 12882                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 12883                           
 12884                           ; BSR set to: 0
 12885  002132  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 12886  002136  0E41               	movlw	65
 12887  002138  ECE4  F01A         	call	_RADIO_RegisterWrite
 12888  00213C                     l395:
 12889                           
 12890                           ;radio_driver_SX1276.c: 225: }
 12891                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 12892  00213C  0EF8               	movlw	248
 12893  00213E  0100               	movlb	0	; () banked
 12894  002140  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 12898  002142  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12899  002144  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 12903  002146  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 12904  00214A  0E01               	movlw	1
 12905  00214C  ECE4  F01A         	call	_RADIO_RegisterWrite
 12906                           
 12907                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 12908  002150  0100               	movlb	0	; () banked
 12909  002152  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 12910  002154  A4D8               	btfss	status,2,c
 12911  002156  0012               	return	
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;radio_driver_SX1276.c: 234: {
 12915                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 12916  002158  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12917  00215A  B4D8               	btfsc	status,2,c
 12918  00215C  D006               	goto	l399
 12919  00215E                     u8650:
 12920                           
 12921                           ; BSR set to: 0
 12922                           
 12923                           ;radio_driver_SX1276.c: 238: ;
 12924                           
 12925                           ; BSR set to: 0
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;radio_driver_SX1276.c: 236: {
 12929                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 12930  00215E  ECE2  F01B         	call	_HALDIO5PinValue	;wreg free
 12931  002162  0900               	iorlw	0
 12932  002164  A4D8               	btfss	status,2,c
 12933  002166  0012               	return	
 12934  002168  D7FA               	goto	u8650
 12935  00216A                     l399:
 12936                           
 12937                           ;radio_driver_SX1276.c: 240: else
 12938                           ;radio_driver_SX1276.c: 241: {
 12939                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 12940  00216A  0E01               	movlw	1
 12941  00216C  0100               	movlb	0	; () banked
 12942  00216E  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 12943  002170  0E00               	movlw	0
 12944  002172  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 12945  002174  0E00               	movlw	0
 12946  002176  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 12947  002178  0E00               	movlw	0
 12948  00217A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 12949  00217C  EC00  F01A         	call	_SystemBlockingWaitMs	;wreg free
 12950  002180  0012               	return	
 12951  002182                     __end_of_RADIO_WriteMode:
 12952                           	opt stack 0
 12953                           tblptru	equ	0xFF8
 12954                           tblptrh	equ	0xFF7
 12955                           tblptrl	equ	0xFF6
 12956                           tablat	equ	0xFF5
 12957                           prodh	equ	0xFF4
 12958                           prodl	equ	0xFF3
 12959                           intcon	equ	0xFF2
 12960                           intcon2	equ	0xFF1
 12961                           intcon3	equ	0xFF0
 12962                           indf0	equ	0xFEF
 12963                           postinc0	equ	0xFEE
 12964                           plusw0	equ	0xFEB
 12965                           fsr0h	equ	0xFEA
 12966                           fsr0l	equ	0xFE9
 12967                           wreg	equ	0xFE8
 12968                           indf2	equ	0xFDF
 12969                           postinc2	equ	0xFDE
 12970                           postdec2	equ	0xFDD
 12971                           plusw2	equ	0xFDB
 12972                           fsr2h	equ	0xFDA
 12973                           fsr2l	equ	0xFD9
 12974                           status	equ	0xFD8
 12975                           
 12976 ;; *************** function _RADIO_RegisterRead *****************
 12977 ;; Defined at:
 12978 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  reg             1    wreg     unsigned char 
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;  reg             1    2[BANK0 ] unsigned char 
 12983 ;;  readValue       1    3[BANK0 ] unsigned char 
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      unsigned char 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2, status,0, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12996 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12997 ;;Total ram usage:        2 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    9
 13000 ;; This function calls:
 13001 ;;		_HALSPICSAssert
 13002 ;;		_HALSPICSDeassert
 13003 ;;		_HALSPISend
 13004 ;; This function is called by:
 13005 ;;		_RADIO_WriteMode
 13006 ;;		_RADIO_WritePower
 13007 ;;		_RADIO_Init
 13008 ;;		_RADIO_WriteConfiguration
 13009 ;;		_RADIO_Transmit
 13010 ;;		_RADIO_ReadRandom
 13011 ;;		_RADIO_RxFSKTimeout
 13012 ;;		_RADIO_RxDone
 13013 ;;		_RADIO_FSKPayloadReady
 13014 ;;		_RADIO_FSKPacketSent
 13015 ;;		_RADIO_FHSSChangeChannel
 13016 ;;		_RADIO_DIO0
 13017 ;;		_RADIO_DIO1
 13018 ;;		_RADIO_DIO2
 13019 ;;		_RADIO_DIO3
 13020 ;;		_RADIO_DIO4
 13021 ;;		_RADIO_DIO5
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text67
 13026  003512                     __ptext67:
 13027                           	opt stack 0
 13028  003512                     _RADIO_RegisterRead:
 13029                           	opt stack 18
 13030                           
 13031                           ;incstack = 0
 13032                           ;RADIO_RegisterRead@reg stored from wreg
 13033  003512  0100               	movlb	0	; () banked
 13034  003514  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 13035                           
 13036                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 13037                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 13038  003516  0100               	movlb	0	; () banked
 13039  003518  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 13043  00351A  EC3D  F01C         	call	_HALSPICSAssert	;wreg free
 13044                           
 13045                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 13046  00351E  0100               	movlb	0	; () banked
 13047  003520  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 13048  003522  ECDB  F01B         	call	_HALSPISend
 13049                           
 13050                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 13051  003526  0EFF               	movlw	255
 13052  003528  ECDB  F01B         	call	_HALSPISend
 13053  00352C  0100               	movlb	0	; () banked
 13054  00352E  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 13058  003530  EC3B  F01C         	call	_HALSPICSDeassert	;wreg free
 13059                           
 13060                           ;radio_driver_SX1276.c: 142: return readValue;
 13061  003534  0100               	movlb	0	; () banked
 13062  003536  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 13063  003538  0012               	return	
 13064  00353A                     __end_of_RADIO_RegisterRead:
 13065                           	opt stack 0
 13066                           tblptru	equ	0xFF8
 13067                           tblptrh	equ	0xFF7
 13068                           tblptrl	equ	0xFF6
 13069                           tablat	equ	0xFF5
 13070                           prodh	equ	0xFF4
 13071                           prodl	equ	0xFF3
 13072                           intcon	equ	0xFF2
 13073                           intcon2	equ	0xFF1
 13074                           intcon3	equ	0xFF0
 13075                           indf0	equ	0xFEF
 13076                           postinc0	equ	0xFEE
 13077                           plusw0	equ	0xFEB
 13078                           fsr0h	equ	0xFEA
 13079                           fsr0l	equ	0xFE9
 13080                           wreg	equ	0xFE8
 13081                           indf2	equ	0xFDF
 13082                           postinc2	equ	0xFDE
 13083                           postdec2	equ	0xFDD
 13084                           plusw2	equ	0xFDB
 13085                           fsr2h	equ	0xFDA
 13086                           fsr2l	equ	0xFD9
 13087                           status	equ	0xFD8
 13088                           
 13089 ;; *************** function _HALDIO5PinValue *****************
 13090 ;; Defined at:
 13091 ;;		line 91 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;		None
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;		None
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1    wreg      unsigned char 
 13098 ;; Registers used:
 13099 ;;		wreg
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;Total ram usage:        0 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:    7
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		_RADIO_WriteMode
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text68
 13120  0037C4                     __ptext68:
 13121                           	opt stack 0
 13122  0037C4                     _HALDIO5PinValue:
 13123                           	opt stack 20
 13124                           
 13125                           ;radio_driver_hal.c: 93: return PORTBbits.RB0;
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;incstack = 0
 13129  0037C4  A081               	btfss	3969,0,c	;volatile
 13130  0037C6  D002               	goto	u7610
 13131  0037C8  0E01               	movlw	1
 13132  0037CA  0012               	return	
 13133  0037CC                     u7610:
 13134  0037CC  0E00               	movlw	0
 13135  0037CE  0012               	return	
 13136  0037D0                     __end_of_HALDIO5PinValue:
 13137                           	opt stack 0
 13138                           tblptru	equ	0xFF8
 13139                           tblptrh	equ	0xFF7
 13140                           tblptrl	equ	0xFF6
 13141                           tablat	equ	0xFF5
 13142                           prodh	equ	0xFF4
 13143                           prodl	equ	0xFF3
 13144                           intcon	equ	0xFF2
 13145                           intcon2	equ	0xFF1
 13146                           intcon3	equ	0xFF0
 13147                           indf0	equ	0xFEF
 13148                           postinc0	equ	0xFEE
 13149                           plusw0	equ	0xFEB
 13150                           fsr0h	equ	0xFEA
 13151                           fsr0l	equ	0xFE9
 13152                           wreg	equ	0xFE8
 13153                           indf2	equ	0xFDF
 13154                           postinc2	equ	0xFDE
 13155                           postdec2	equ	0xFDD
 13156                           plusw2	equ	0xFDB
 13157                           fsr2h	equ	0xFDA
 13158                           fsr2l	equ	0xFD9
 13159                           status	equ	0xFD8
 13160                           
 13161 ;; *************** function _RADIO_WriteFrequency *****************
 13162 ;; Defined at:
 13163 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;  frequency       4   13[BANK0 ] unsigned long 
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  num             4   21[BANK0 ] unsigned long 
 13168 ;;  num_mod         4   17[BANK0 ] unsigned long 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13178 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;Total ram usage:       12 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:   10
 13185 ;; This function calls:
 13186 ;;		_RADIO_RegisterWrite
 13187 ;;		___lldiv
 13188 ;;		___llmod
 13189 ;; This function is called by:
 13190 ;;		_RADIO_Init
 13191 ;;		_RADIO_WriteConfiguration
 13192 ;;		_RADIO_FHSSChangeChannel
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           	psect	text69
 13197  00236C                     __ptext69:
 13198                           	opt stack 0
 13199  00236C                     _RADIO_WriteFrequency:
 13200                           	opt stack 17
 13201                           
 13202                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 13203                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 13204                           
 13205                           ;incstack = 0
 13206  00236C  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 13207  002370  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 13208  002374  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 13209  002378  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 13210  00237C  0E09               	movlw	9
 13211  00237E  0100               	movlb	0	; () banked
 13212  002380  6F64               	movwf	___lldiv@divisor& (0+255),b
 13213  002382  0E3D               	movlw	61
 13214  002384  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13215  002386  0E00               	movlw	0
 13216  002388  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13217  00238A  0E00               	movlw	0
 13218  00238C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13219  00238E  ECE4  F015         	call	___lldiv	;wreg free
 13220  002392  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 13221  002396  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 13222  00239A  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 13223  00239E  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 13224                           
 13225                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 13226  0023A2  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 13227  0023A6  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 13228  0023AA  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 13229  0023AE  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 13230  0023B2  0E09               	movlw	9
 13231  0023B4  0100               	movlb	0	; () banked
 13232  0023B6  6F64               	movwf	___llmod@divisor& (0+255),b
 13233  0023B8  0E3D               	movlw	61
 13234  0023BA  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 13235  0023BC  0E00               	movlw	0
 13236  0023BE  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 13237  0023C0  0E00               	movlw	0
 13238  0023C2  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 13239  0023C4  ECC5  F016         	call	___llmod	;wreg free
 13240  0023C8  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 13241  0023CC  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 13242  0023D0  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 13243  0023D4  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 13244                           
 13245                           ;radio_driver_SX1276.c: 277: num <<= (8);
 13246  0023D8  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 13247  0023DC  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 13248  0023E0  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 13249  0023E4  0100               	movlb	0	; () banked
 13250  0023E6  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 13254  0023E8  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 13255  0023EC  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 13256  0023F0  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 13257  0023F4  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 13258                           
 13259                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 13260  0023F6  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 13261  0023FA  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 13262  0023FE  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 13263  002402  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 13264  002406  0E09               	movlw	9
 13265  002408  6F64               	movwf	___lldiv@divisor& (0+255),b
 13266  00240A  0E3D               	movlw	61
 13267  00240C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13268  00240E  0E00               	movlw	0
 13269  002410  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13270  002412  0E00               	movlw	0
 13271  002414  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13272  002416  ECE4  F015         	call	___lldiv	;wreg free
 13273  00241A  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 13274  00241E  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 13275  002422  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 13276  002426  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 13277                           
 13278                           ;radio_driver_SX1276.c: 283: num += num_mod;
 13279  00242A  0100               	movlb	0	; () banked
 13280  00242C  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 13281  00242E  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 13282  002430  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 13283  002432  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 13284  002434  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 13285  002436  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 13286  002438  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 13287  00243A  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 13291  00243C  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 13292  002440  0E06               	movlw	6
 13293  002442  ECE4  F01A         	call	_RADIO_RegisterWrite
 13294                           
 13295                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 13296  002446  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 13297  00244A  0E07               	movlw	7
 13298  00244C  ECE4  F01A         	call	_RADIO_RegisterWrite
 13299                           
 13300                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 13301  002450  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 13302  002454  0E08               	movlw	8
 13303  002456  ECE4  F01A         	call	_RADIO_RegisterWrite
 13304  00245A  0012               	return		;funcret
 13305  00245C                     __end_of_RADIO_WriteFrequency:
 13306                           	opt stack 0
 13307                           tblptru	equ	0xFF8
 13308                           tblptrh	equ	0xFF7
 13309                           tblptrl	equ	0xFF6
 13310                           tablat	equ	0xFF5
 13311                           prodh	equ	0xFF4
 13312                           prodl	equ	0xFF3
 13313                           intcon	equ	0xFF2
 13314                           intcon2	equ	0xFF1
 13315                           intcon3	equ	0xFF0
 13316                           indf0	equ	0xFEF
 13317                           postinc0	equ	0xFEE
 13318                           plusw0	equ	0xFEB
 13319                           fsr0h	equ	0xFEA
 13320                           fsr0l	equ	0xFE9
 13321                           wreg	equ	0xFE8
 13322                           indf2	equ	0xFDF
 13323                           postinc2	equ	0xFDE
 13324                           postdec2	equ	0xFDD
 13325                           plusw2	equ	0xFDB
 13326                           fsr2h	equ	0xFDA
 13327                           fsr2l	equ	0xFD9
 13328                           status	equ	0xFD8
 13329                           
 13330 ;; *************** function ___llmod *****************
 13331 ;; Defined at:
 13332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  dividend        4    0[BANK0 ] unsigned long 
 13335 ;;  divisor         4    4[BANK0 ] unsigned long 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;  counter         1    8[BANK0 ] unsigned char 
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  4    0[BANK0 ] unsigned long 
 13340 ;; Registers used:
 13341 ;;		wreg, status,2, status,0
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13350 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13351 ;;Total ram usage:        9 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:    7
 13354 ;; This function calls:
 13355 ;;		Nothing
 13356 ;; This function is called by:
 13357 ;;		_RADIO_WriteFrequency
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text70
 13362  002D8A                     __ptext70:
 13363                           	opt stack 0
 13364  002D8A                     ___llmod:
 13365                           	opt stack 19
 13366                           
 13367                           ;incstack = 0
 13368  002D8A  0100               	movlb	0	; () banked
 13369  002D8C  5164               	movf	___llmod@divisor& (0+255),w,b
 13370  002D8E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13371  002D90  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13372  002D92  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13373  002D94  B4D8               	btfsc	status,2,c
 13374  002D96  D024               	goto	l2856
 13375                           
 13376                           ; BSR set to: 0
 13377  002D98  0E01               	movlw	1
 13378  002D9A  6F68               	movwf	___llmod@counter& (0+255),b
 13379  002D9C  D006               	goto	l2851
 13380  002D9E                     
 13381                           ; BSR set to: 0
 13382                           
 13383                           ; BSR set to: 0
 13384  002D9E  90D8               	bcf	status,0,c
 13385  002DA0  3764               	rlcf	___llmod@divisor& (0+255),f,b
 13386  002DA2  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13387  002DA4  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13388  002DA6  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13389  002DA8  2B68               	incf	___llmod@counter& (0+255),f,b
 13390  002DAA                     l2851:
 13391                           
 13392                           ; BSR set to: 0
 13393                           
 13394                           ; BSR set to: 0
 13395  002DAA  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13396  002DAC  D7F8               	goto	l2852
 13397  002DAE                     u8270:
 13398                           
 13399                           ; BSR set to: 0
 13400                           
 13401                           ; BSR set to: 0
 13402                           
 13403                           ; BSR set to: 0
 13404  002DAE  5164               	movf	___llmod@divisor& (0+255),w,b
 13405  002DB0  5D60               	subwf	___llmod@dividend& (0+255),w,b
 13406  002DB2  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13407  002DB4  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13408  002DB6  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13409  002DB8  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13410  002DBA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13411  002DBC  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13412  002DBE  A0D8               	btfss	status,0,c
 13413  002DC0  D008               	goto	l2855
 13414                           
 13415                           ; BSR set to: 0
 13416  002DC2  5164               	movf	___llmod@divisor& (0+255),w,b
 13417  002DC4  5F60               	subwf	___llmod@dividend& (0+255),f,b
 13418  002DC6  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13419  002DC8  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13420  002DCA  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13421  002DCC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13422  002DCE  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13423  002DD0  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13424  002DD2                     l2855:
 13425                           
 13426                           ; BSR set to: 0
 13427                           
 13428                           ; BSR set to: 0
 13429  002DD2  90D8               	bcf	status,0,c
 13430  002DD4  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13431  002DD6  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13432  002DD8  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13433  002DDA  3364               	rrcf	___llmod@divisor& (0+255),f,b
 13434                           
 13435                           ; BSR set to: 0
 13436  002DDC  2F68               	decfsz	___llmod@counter& (0+255),f,b
 13437  002DDE  D7E7               	goto	u8270
 13438  002DE0                     l2856:
 13439                           
 13440                           ; BSR set to: 0
 13441                           
 13442                           ; BSR set to: 0
 13443  002DE0  C060  F060         	movff	___llmod@dividend,?___llmod
 13444  002DE4  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 13445  002DE8  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 13446  002DEC  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 13447                           
 13448                           ; BSR set to: 0
 13449  002DF0  0012               	return		;funcret
 13450  002DF2                     __end_of___llmod:
 13451                           	opt stack 0
 13452                           tblptru	equ	0xFF8
 13453                           tblptrh	equ	0xFF7
 13454                           tblptrl	equ	0xFF6
 13455                           tablat	equ	0xFF5
 13456                           prodh	equ	0xFF4
 13457                           prodl	equ	0xFF3
 13458                           intcon	equ	0xFF2
 13459                           intcon2	equ	0xFF1
 13460                           intcon3	equ	0xFF0
 13461                           indf0	equ	0xFEF
 13462                           postinc0	equ	0xFEE
 13463                           plusw0	equ	0xFEB
 13464                           fsr0h	equ	0xFEA
 13465                           fsr0l	equ	0xFE9
 13466                           wreg	equ	0xFE8
 13467                           indf2	equ	0xFDF
 13468                           postinc2	equ	0xFDE
 13469                           postdec2	equ	0xFDD
 13470                           plusw2	equ	0xFDB
 13471                           fsr2h	equ	0xFDA
 13472                           fsr2l	equ	0xFD9
 13473                           status	equ	0xFD8
 13474                           
 13475 ;; *************** function _RADIO_RegisterWrite *****************
 13476 ;; Defined at:
 13477 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;  reg             1    wreg     unsigned char 
 13480 ;;  value           1    2[BANK0 ] unsigned char 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  reg             1    3[BANK0 ] unsigned char 
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  1    wreg      void 
 13485 ;; Registers used:
 13486 ;;		wreg, status,2, status,0, cstack
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13492 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13496 ;;Total ram usage:        2 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:    9
 13499 ;; This function calls:
 13500 ;;		_HALSPICSAssert
 13501 ;;		_HALSPICSDeassert
 13502 ;;		_HALSPISend
 13503 ;; This function is called by:
 13504 ;;		_RADIO_WriteMode
 13505 ;;		_RADIO_WriteFrequency
 13506 ;;		_RADIO_WriteFSKFrequencyDeviation
 13507 ;;		_RADIO_WriteFSKBitRate
 13508 ;;		_RADIO_WritePower
 13509 ;;		_RADIO_Init
 13510 ;;		_RADIO_WriteConfiguration
 13511 ;;		_RADIO_Transmit
 13512 ;;		_RADIO_ReadRandom
 13513 ;;		_RADIO_TransmitCW
 13514 ;;		_RADIO_ReceiveStart
 13515 ;;		_RADIO_RxDone
 13516 ;;		_RADIO_RxTimeout
 13517 ;;		_RADIO_TxDone
 13518 ;;		_RADIO_UnhandledInterrupt
 13519 ;;		_RADIO_FHSSChangeChannel
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text71
 13524  0035C8                     __ptext71:
 13525                           	opt stack 0
 13526  0035C8                     _RADIO_RegisterWrite:
 13527                           	opt stack 18
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;incstack = 0
 13531                           ;RADIO_RegisterWrite@reg stored from wreg
 13532  0035C8  0100               	movlb	0	; () banked
 13533  0035CA  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 13534                           
 13535                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 13536  0035CC  EC3D  F01C         	call	_HALSPICSAssert	;wreg free
 13537                           
 13538                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 13539  0035D0  0100               	movlb	0	; () banked
 13540  0035D2  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 13541  0035D4  0980               	iorlw	128
 13542  0035D6  ECDB  F01B         	call	_HALSPISend
 13543                           
 13544                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 13545  0035DA  0100               	movlb	0	; () banked
 13546  0035DC  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 13547  0035DE  ECDB  F01B         	call	_HALSPISend
 13548                           
 13549                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 13550  0035E2  EC3B  F01C         	call	_HALSPICSDeassert	;wreg free
 13551  0035E6  0012               	return		;funcret
 13552  0035E8                     __end_of_RADIO_RegisterWrite:
 13553                           	opt stack 0
 13554                           tblptru	equ	0xFF8
 13555                           tblptrh	equ	0xFF7
 13556                           tblptrl	equ	0xFF6
 13557                           tablat	equ	0xFF5
 13558                           prodh	equ	0xFF4
 13559                           prodl	equ	0xFF3
 13560                           intcon	equ	0xFF2
 13561                           intcon2	equ	0xFF1
 13562                           intcon3	equ	0xFF0
 13563                           indf0	equ	0xFEF
 13564                           postinc0	equ	0xFEE
 13565                           plusw0	equ	0xFEB
 13566                           fsr0h	equ	0xFEA
 13567                           fsr0l	equ	0xFE9
 13568                           wreg	equ	0xFE8
 13569                           indf2	equ	0xFDF
 13570                           postinc2	equ	0xFDE
 13571                           postdec2	equ	0xFDD
 13572                           plusw2	equ	0xFDB
 13573                           fsr2h	equ	0xFDA
 13574                           fsr2l	equ	0xFD9
 13575                           status	equ	0xFD8
 13576                           
 13577 ;; *************** function _HALSPISend *****************
 13578 ;; Defined at:
 13579 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;  data            1    wreg     unsigned char 
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;  data            1    1[BANK0 ] unsigned char 
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      unsigned char 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;Total ram usage:        1 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:    8
 13600 ;; This function calls:
 13601 ;;		_SPI2_Exchange8bit
 13602 ;; This function is called by:
 13603 ;;		_RADIO_RegisterWrite
 13604 ;;		_RADIO_RegisterRead
 13605 ;;		_RADIO_Transmit
 13606 ;;		_RADIO_RxDone
 13607 ;;		_RADIO_FSKPayloadReady
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           	psect	text72
 13612  0037B6                     __ptext72:
 13613                           	opt stack 0
 13614  0037B6                     _HALSPISend:
 13615                           	opt stack 18
 13616                           
 13617                           ;incstack = 0
 13618                           ;HALSPISend@data stored from wreg
 13619  0037B6  0100               	movlb	0	; () banked
 13620  0037B8  6F61               	movwf	HALSPISend@data& (0+255),b
 13621                           
 13622                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 13623  0037BA  0100               	movlb	0	; () banked
 13624  0037BC  5161               	movf	HALSPISend@data& (0+255),w,b
 13625  0037BE  EC9D  F01B         	call	_SPI2_Exchange8bit
 13626  0037C2  0012               	return	
 13627  0037C4                     __end_of_HALSPISend:
 13628                           	opt stack 0
 13629                           tblptru	equ	0xFF8
 13630                           tblptrh	equ	0xFF7
 13631                           tblptrl	equ	0xFF6
 13632                           tablat	equ	0xFF5
 13633                           prodh	equ	0xFF4
 13634                           prodl	equ	0xFF3
 13635                           intcon	equ	0xFF2
 13636                           intcon2	equ	0xFF1
 13637                           intcon3	equ	0xFF0
 13638                           indf0	equ	0xFEF
 13639                           postinc0	equ	0xFEE
 13640                           plusw0	equ	0xFEB
 13641                           fsr0h	equ	0xFEA
 13642                           fsr0l	equ	0xFE9
 13643                           wreg	equ	0xFE8
 13644                           indf2	equ	0xFDF
 13645                           postinc2	equ	0xFDE
 13646                           postdec2	equ	0xFDD
 13647                           plusw2	equ	0xFDB
 13648                           fsr2h	equ	0xFDA
 13649                           fsr2l	equ	0xFD9
 13650                           status	equ	0xFD8
 13651                           
 13652 ;; *************** function _SPI2_Exchange8bit *****************
 13653 ;; Defined at:
 13654 ;;		line 79 in file "mcc_generated_files/spi2.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  data            1    wreg     unsigned char 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  data            1    0[BANK0 ] unsigned char 
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      unsigned char 
 13661 ;; Registers used:
 13662 ;;		wreg, status,2
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;Total ram usage:        1 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    7
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_HALSPISend
 13679 ;;		_SPI2_Exchange8bitBuffer
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text73
 13684  00373A                     __ptext73:
 13685                           	opt stack 0
 13686  00373A                     _SPI2_Exchange8bit:
 13687                           	opt stack 18
 13688                           
 13689                           ;incstack = 0
 13690                           ;SPI2_Exchange8bit@data stored from wreg
 13691  00373A  0100               	movlb	0	; () banked
 13692  00373C  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 13693                           
 13694                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 13695  00373E  9E6C               	bcf	3948,7,c	;volatile
 13696                           
 13697                           ;spi2.c: 84: SSP2BUF = data;
 13698  003740  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 13699  003744                     
 13700                           ;spi2.c: 87: {
 13701  003744  A06D               	btfss	3949,0,c	;volatile
 13702  003746  D7FE               	goto	l2187
 13703                           
 13704                           ;spi2.c: 88: }
 13705                           ;spi2.c: 90: return (SSP2BUF);
 13706  003748  506F               	movf	3951,w,c	;volatile
 13707  00374A  0012               	return		;funcret
 13708  00374C                     __end_of_SPI2_Exchange8bit:
 13709                           	opt stack 0
 13710                           tblptru	equ	0xFF8
 13711                           tblptrh	equ	0xFF7
 13712                           tblptrl	equ	0xFF6
 13713                           tablat	equ	0xFF5
 13714                           prodh	equ	0xFF4
 13715                           prodl	equ	0xFF3
 13716                           intcon	equ	0xFF2
 13717                           intcon2	equ	0xFF1
 13718                           intcon3	equ	0xFF0
 13719                           indf0	equ	0xFEF
 13720                           postinc0	equ	0xFEE
 13721                           plusw0	equ	0xFEB
 13722                           fsr0h	equ	0xFEA
 13723                           fsr0l	equ	0xFE9
 13724                           wreg	equ	0xFE8
 13725                           indf2	equ	0xFDF
 13726                           postinc2	equ	0xFDE
 13727                           postdec2	equ	0xFDD
 13728                           plusw2	equ	0xFDB
 13729                           fsr2h	equ	0xFDA
 13730                           fsr2l	equ	0xFD9
 13731                           status	equ	0xFD8
 13732                           
 13733 ;; *************** function _HALSPICSDeassert *****************
 13734 ;; Defined at:
 13735 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13736 ;; Parameters:    Size  Location     Type
 13737 ;;		None
 13738 ;; Auto vars:     Size  Location     Type
 13739 ;;		None
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  1    wreg      void 
 13742 ;; Registers used:
 13743 ;;		None
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13753 ;;Total ram usage:        0 bytes
 13754 ;; Hardware stack levels used:    1
 13755 ;; Hardware stack levels required when called:    7
 13756 ;; This function calls:
 13757 ;;		Nothing
 13758 ;; This function is called by:
 13759 ;;		_RADIO_RegisterWrite
 13760 ;;		_RADIO_RegisterRead
 13761 ;;		_RADIO_Transmit
 13762 ;;		_RADIO_RxDone
 13763 ;;		_RADIO_FSKPayloadReady
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767                           	psect	text74
 13768  003876                     __ptext74:
 13769                           	opt stack 0
 13770  003876                     _HALSPICSDeassert:
 13771                           	opt stack 19
 13772                           
 13773                           ;incstack = 0
 13774                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 13775  003876  868C               	bsf	3980,3,c	;volatile
 13776  003878  0012               	return	
 13777  00387A                     __end_of_HALSPICSDeassert:
 13778                           	opt stack 0
 13779                           tblptru	equ	0xFF8
 13780                           tblptrh	equ	0xFF7
 13781                           tblptrl	equ	0xFF6
 13782                           tablat	equ	0xFF5
 13783                           prodh	equ	0xFF4
 13784                           prodl	equ	0xFF3
 13785                           intcon	equ	0xFF2
 13786                           intcon2	equ	0xFF1
 13787                           intcon3	equ	0xFF0
 13788                           indf0	equ	0xFEF
 13789                           postinc0	equ	0xFEE
 13790                           plusw0	equ	0xFEB
 13791                           fsr0h	equ	0xFEA
 13792                           fsr0l	equ	0xFE9
 13793                           wreg	equ	0xFE8
 13794                           indf2	equ	0xFDF
 13795                           postinc2	equ	0xFDE
 13796                           postdec2	equ	0xFDD
 13797                           plusw2	equ	0xFDB
 13798                           fsr2h	equ	0xFDA
 13799                           fsr2l	equ	0xFD9
 13800                           status	equ	0xFD8
 13801                           
 13802 ;; *************** function _HALSPICSAssert *****************
 13803 ;; Defined at:
 13804 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;		None
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;		None
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		None
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13822 ;;Total ram usage:        0 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    7
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_RADIO_RegisterWrite
 13829 ;;		_RADIO_RegisterRead
 13830 ;;		_RADIO_Transmit
 13831 ;;		_RADIO_RxDone
 13832 ;;		_RADIO_FSKPayloadReady
 13833 ;; This function uses a non-reentrant model
 13834 ;;
 13835                           
 13836                           	psect	text75
 13837  00387A                     __ptext75:
 13838                           	opt stack 0
 13839  00387A                     _HALSPICSAssert:
 13840                           	opt stack 19
 13841                           
 13842                           ;incstack = 0
 13843                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 13844  00387A  968C               	bcf	3980,3,c	;volatile
 13845  00387C  0012               	return	
 13846  00387E                     __end_of_HALSPICSAssert:
 13847                           	opt stack 0
 13848                           tblptru	equ	0xFF8
 13849                           tblptrh	equ	0xFF7
 13850                           tblptrl	equ	0xFF6
 13851                           tablat	equ	0xFF5
 13852                           prodh	equ	0xFF4
 13853                           prodl	equ	0xFF3
 13854                           intcon	equ	0xFF2
 13855                           intcon2	equ	0xFF1
 13856                           intcon3	equ	0xFF0
 13857                           indf0	equ	0xFEF
 13858                           postinc0	equ	0xFEE
 13859                           plusw0	equ	0xFEB
 13860                           fsr0h	equ	0xFEA
 13861                           fsr0l	equ	0xFE9
 13862                           wreg	equ	0xFE8
 13863                           indf2	equ	0xFDF
 13864                           postinc2	equ	0xFDE
 13865                           postdec2	equ	0xFDD
 13866                           plusw2	equ	0xFDB
 13867                           fsr2h	equ	0xFDA
 13868                           fsr2l	equ	0xFD9
 13869                           status	equ	0xFD8
 13870                           
 13871 ;; *************** function _RADIO_Reset *****************
 13872 ;; Defined at:
 13873 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;		None
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2, status,0, cstack
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13891 ;;Total ram usage:        0 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; Hardware stack levels required when called:    8
 13894 ;; This function calls:
 13895 ;;		_HALResetPinMakeInput
 13896 ;;		_HALResetPinMakeOutput
 13897 ;;		_HALResetPinOutputValue
 13898 ;;		_SystemBlockingWaitMs
 13899 ;; This function is called by:
 13900 ;;		_RADIO_Init
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           	psect	text76
 13905  0031CC                     __ptext76:
 13906                           	opt stack 0
 13907  0031CC                     _RADIO_Reset:
 13908                           	opt stack 20
 13909                           
 13910                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 13911                           
 13912                           ;incstack = 0
 13913  0031CC  EC3F  F01C         	call	_HALResetPinMakeOutput	;wreg free
 13914                           
 13915                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 13916  0031D0  0E00               	movlw	0
 13917  0031D2  EC7A  F01B         	call	_HALResetPinOutputValue
 13918                           
 13919                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 13920  0031D6  0E01               	movlw	1
 13921  0031D8  0100               	movlb	0	; () banked
 13922  0031DA  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 13923  0031DC  0E00               	movlw	0
 13924  0031DE  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 13925  0031E0  0E00               	movlw	0
 13926  0031E2  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 13927  0031E4  0E00               	movlw	0
 13928  0031E6  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 13929  0031E8  EC00  F01A         	call	_SystemBlockingWaitMs	;wreg free
 13930                           
 13931                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 13932  0031EC  EC41  F01C         	call	_HALResetPinMakeInput	;wreg free
 13933                           
 13934                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 13935  0031F0  0E0A               	movlw	10
 13936  0031F2  0100               	movlb	0	; () banked
 13937  0031F4  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 13938  0031F6  0E00               	movlw	0
 13939  0031F8  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 13940  0031FA  0E00               	movlw	0
 13941  0031FC  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 13942  0031FE  0E00               	movlw	0
 13943  003200  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 13944  003202  EC00  F01A         	call	_SystemBlockingWaitMs	;wreg free
 13945                           
 13946                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 13947  003206  0E01               	movlw	1
 13948  003208  EC7A  F01B         	call	_HALResetPinOutputValue
 13949                           
 13950                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 13951  00320C  EC3F  F01C         	call	_HALResetPinMakeOutput	;wreg free
 13952  003210  0012               	return		;funcret
 13953  003212                     __end_of_RADIO_Reset:
 13954                           	opt stack 0
 13955                           tblptru	equ	0xFF8
 13956                           tblptrh	equ	0xFF7
 13957                           tblptrl	equ	0xFF6
 13958                           tablat	equ	0xFF5
 13959                           prodh	equ	0xFF4
 13960                           prodl	equ	0xFF3
 13961                           intcon	equ	0xFF2
 13962                           intcon2	equ	0xFF1
 13963                           intcon3	equ	0xFF0
 13964                           indf0	equ	0xFEF
 13965                           postinc0	equ	0xFEE
 13966                           plusw0	equ	0xFEB
 13967                           fsr0h	equ	0xFEA
 13968                           fsr0l	equ	0xFE9
 13969                           wreg	equ	0xFE8
 13970                           indf2	equ	0xFDF
 13971                           postinc2	equ	0xFDE
 13972                           postdec2	equ	0xFDD
 13973                           plusw2	equ	0xFDB
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _SystemBlockingWaitMs *****************
 13979 ;; Defined at:
 13980 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  ms              4    0[BANK0 ] unsigned long 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, status,2, status,0
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;Total ram usage:        5 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    7
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_RADIO_WriteMode
 14005 ;;		_RADIO_Reset
 14006 ;;		_RADIO_ReadRandom
 14007 ;;		_RADIO_StopCW
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text77
 14012  003400                     __ptext77:
 14013                           	opt stack 0
 14014  003400                     _SystemBlockingWaitMs:
 14015                           	opt stack 20
 14016                           
 14017                           ;sw_timer.c: 147: while (ms > 0)
 14018                           
 14019                           ;incstack = 0
 14020  003400  D00F               	goto	l231
 14021  003402                     
 14022                           ;sw_timer.c: 148: {
 14023                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 14024  003402  0E06               	movlw	6
 14025  003404  0100               	movlb	0	; () banked
 14026  003406  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 14027  003408  0E30               	movlw	48
 14028  00340A                     u13337:
 14029  00340A  2EE8               	decfsz	wreg,f,c
 14030  00340C  D7FE               	bra	u13337
 14031  00340E  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 14032  003410  D7FC               	bra	u13337
 14033  003412  F000               	nop	
 14034                           
 14035                           ;sw_timer.c: 150: ms--;
 14036  003414  0100               	movlb	0	; () banked
 14037  003416  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 14038  003418  0E00               	movlw	0
 14039  00341A  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 14040  00341C  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 14041  00341E  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 14042  003420                     l231:
 14043                           
 14044                           ; BSR set to: 0
 14045  003420  0100               	movlb	0	; () banked
 14046  003422  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 14047  003424  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 14048  003426  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 14049  003428  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 14050  00342A  B4D8               	btfsc	status,2,c
 14051  00342C  0012               	return	
 14052  00342E  D7E9               	goto	l232
 14053  003430                     __end_of_SystemBlockingWaitMs:
 14054                           	opt stack 0
 14055                           tblptru	equ	0xFF8
 14056                           tblptrh	equ	0xFF7
 14057                           tblptrl	equ	0xFF6
 14058                           tablat	equ	0xFF5
 14059                           prodh	equ	0xFF4
 14060                           prodl	equ	0xFF3
 14061                           intcon	equ	0xFF2
 14062                           intcon2	equ	0xFF1
 14063                           intcon3	equ	0xFF0
 14064                           indf0	equ	0xFEF
 14065                           postinc0	equ	0xFEE
 14066                           plusw0	equ	0xFEB
 14067                           fsr0h	equ	0xFEA
 14068                           fsr0l	equ	0xFE9
 14069                           wreg	equ	0xFE8
 14070                           indf2	equ	0xFDF
 14071                           postinc2	equ	0xFDE
 14072                           postdec2	equ	0xFDD
 14073                           plusw2	equ	0xFDB
 14074                           fsr2h	equ	0xFDA
 14075                           fsr2l	equ	0xFD9
 14076                           status	equ	0xFD8
 14077                           
 14078 ;; *************** function _HALResetPinOutputValue *****************
 14079 ;; Defined at:
 14080 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14081 ;; Parameters:    Size  Location     Type
 14082 ;;  value           1    wreg     unsigned char 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;  value           1    0[BANK0 ] unsigned char 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1    wreg      void 
 14087 ;; Registers used:
 14088 ;;		wreg, status,2, status,0
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14097 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14098 ;;Total ram usage:        1 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    7
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_RADIO_Reset
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text78
 14109  0036F4                     __ptext78:
 14110                           	opt stack 0
 14111  0036F4                     _HALResetPinOutputValue:
 14112                           	opt stack 20
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;incstack = 0
 14116                           ;HALResetPinOutputValue@value stored from wreg
 14117  0036F4  0100               	movlb	0	; () banked
 14118  0036F6  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 14119                           
 14120                           ;radio_driver_hal.c: 57: if (value == 0)
 14121  0036F8  0100               	movlb	0	; () banked
 14122  0036FA  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 14123  0036FC  A4D8               	btfss	status,2,c
 14124  0036FE  D002               	goto	l144
 14125                           
 14126                           ; BSR set to: 0
 14127                           
 14128                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 14129  003700  948B               	bcf	3979,2,c	;volatile
 14130                           
 14131                           ; BSR set to: 0
 14132  003702  0012               	return	
 14133  003704                     l144:
 14134                           
 14135                           ; BSR set to: 0
 14136                           ;radio_driver_hal.c: 59: else if (value == 1)
 14137                           
 14138                           ; BSR set to: 0
 14139  003704  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 14140  003706  A4D8               	btfss	status,2,c
 14141  003708  0012               	return	
 14142                           
 14143                           ; BSR set to: 0
 14144                           
 14145                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 14146  00370A  848B               	bsf	3979,2,c	;volatile
 14147                           
 14148                           ; BSR set to: 0
 14149                           
 14150                           ; BSR set to: 0
 14151  00370C  0012               	return	
 14152  00370E                     __end_of_HALResetPinOutputValue:
 14153                           	opt stack 0
 14154                           tblptru	equ	0xFF8
 14155                           tblptrh	equ	0xFF7
 14156                           tblptrl	equ	0xFF6
 14157                           tablat	equ	0xFF5
 14158                           prodh	equ	0xFF4
 14159                           prodl	equ	0xFF3
 14160                           intcon	equ	0xFF2
 14161                           intcon2	equ	0xFF1
 14162                           intcon3	equ	0xFF0
 14163                           indf0	equ	0xFEF
 14164                           postinc0	equ	0xFEE
 14165                           plusw0	equ	0xFEB
 14166                           fsr0h	equ	0xFEA
 14167                           fsr0l	equ	0xFE9
 14168                           wreg	equ	0xFE8
 14169                           indf2	equ	0xFDF
 14170                           postinc2	equ	0xFDE
 14171                           postdec2	equ	0xFDD
 14172                           plusw2	equ	0xFDB
 14173                           fsr2h	equ	0xFDA
 14174                           fsr2l	equ	0xFD9
 14175                           status	equ	0xFD8
 14176                           
 14177 ;; *************** function _HALResetPinMakeOutput *****************
 14178 ;; Defined at:
 14179 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;		None
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      void 
 14186 ;; Registers used:
 14187 ;;		None
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;Total ram usage:        0 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    7
 14200 ;; This function calls:
 14201 ;;		Nothing
 14202 ;; This function is called by:
 14203 ;;		_RADIO_Reset
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text79
 14208  00387E                     __ptext79:
 14209                           	opt stack 0
 14210  00387E                     _HALResetPinMakeOutput:
 14211                           	opt stack 20
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;incstack = 0
 14215                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 14216  00387E  9494               	bcf	3988,2,c	;volatile
 14217  003880  0012               	return	
 14218  003882                     __end_of_HALResetPinMakeOutput:
 14219                           	opt stack 0
 14220                           tblptru	equ	0xFF8
 14221                           tblptrh	equ	0xFF7
 14222                           tblptrl	equ	0xFF6
 14223                           tablat	equ	0xFF5
 14224                           prodh	equ	0xFF4
 14225                           prodl	equ	0xFF3
 14226                           intcon	equ	0xFF2
 14227                           intcon2	equ	0xFF1
 14228                           intcon3	equ	0xFF0
 14229                           indf0	equ	0xFEF
 14230                           postinc0	equ	0xFEE
 14231                           plusw0	equ	0xFEB
 14232                           fsr0h	equ	0xFEA
 14233                           fsr0l	equ	0xFE9
 14234                           wreg	equ	0xFE8
 14235                           indf2	equ	0xFDF
 14236                           postinc2	equ	0xFDE
 14237                           postdec2	equ	0xFDD
 14238                           plusw2	equ	0xFDB
 14239                           fsr2h	equ	0xFDA
 14240                           fsr2l	equ	0xFD9
 14241                           status	equ	0xFD8
 14242                           
 14243 ;; *************** function _HALResetPinMakeInput *****************
 14244 ;; Defined at:
 14245 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;		None
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		None
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;Total ram usage:        0 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; Hardware stack levels required when called:    7
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_RADIO_Reset
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           	psect	text80
 14274  003882                     __ptext80:
 14275                           	opt stack 0
 14276  003882                     _HALResetPinMakeInput:
 14277                           	opt stack 20
 14278                           
 14279                           ;incstack = 0
 14280                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 14281  003882  8494               	bsf	3988,2,c	;volatile
 14282  003884  0012               	return	
 14283  003886                     __end_of_HALResetPinMakeInput:
 14284                           	opt stack 0
 14285                           tblptru	equ	0xFF8
 14286                           tblptrh	equ	0xFF7
 14287                           tblptrl	equ	0xFF6
 14288                           tablat	equ	0xFF5
 14289                           prodh	equ	0xFF4
 14290                           prodl	equ	0xFF3
 14291                           intcon	equ	0xFF2
 14292                           intcon2	equ	0xFF1
 14293                           intcon3	equ	0xFF0
 14294                           indf0	equ	0xFEF
 14295                           postinc0	equ	0xFEE
 14296                           plusw0	equ	0xFEB
 14297                           fsr0h	equ	0xFEA
 14298                           fsr0l	equ	0xFE9
 14299                           wreg	equ	0xFE8
 14300                           indf2	equ	0xFDF
 14301                           postinc2	equ	0xFDE
 14302                           postdec2	equ	0xFDD
 14303                           plusw2	equ	0xFDB
 14304                           fsr2h	equ	0xFDA
 14305                           fsr2l	equ	0xFD9
 14306                           status	equ	0xFD8
 14307                           
 14308 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 14309 ;; Defined at:
 14310 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;  period          2   58[BANK0 ] unsigned int 
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;  iCtr            1   68[BANK0 ] unsigned char 
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  1    wreg      void 
 14317 ;; Registers used:
 14318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14326 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;Total ram usage:       11 bytes
 14329 ;; Hardware stack levels used:    1
 14330 ;; Hardware stack levels required when called:   11
 14331 ;; This function calls:
 14332 ;;		_SwTimerSetTimeout
 14333 ;;		_SwTimerStart
 14334 ;;		_SwTimerStop
 14335 ;;		___lldiv
 14336 ;;		___lmul
 14337 ;; This function is called by:
 14338 ;;		_LORAWAN_Reset
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           	psect	text81
 14343  001AAE                     __ptext81:
 14344                           	opt stack 0
 14345  001AAE                     _LORAWAN_LinkCheckConfigure:
 14346                           	opt stack 17
 14347                           
 14348                           ;lorawan.c: 757: uint8_t iCtr;
 14349                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 14350                           
 14351                           ;incstack = 0
 14352  001AAE  C09A  F060         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 14353  001AB2  C09B  F061         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 14354  001AB6  0100               	movlb	0	; () banked
 14355  001AB8  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 14356  001ABA  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 14357  001ABC  0EE8               	movlw	232
 14358  001ABE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 14359  001AC0  0E03               	movlw	3
 14360  001AC2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14361  001AC4  0E00               	movlw	0
 14362  001AC6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14363  001AC8  0E00               	movlw	0
 14364  001ACA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14365  001ACC  ECEA  F017         	call	___lmul	;wreg free
 14366  001AD0  C060  F2CC         	movff	?___lmul,_loRa+204
 14367  001AD4  C061  F2CD         	movff	?___lmul+1,_loRa+205
 14368  001AD8  C062  F2CE         	movff	?___lmul+2,_loRa+206
 14369  001ADC  C063  F2CF         	movff	?___lmul+3,_loRa+207
 14370                           
 14371                           ;lorawan.c: 761: if (period == 0)
 14372  001AE0  0100               	movlb	0	; () banked
 14373  001AE2  519A               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 14374  001AE4  119B               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 14375  001AE6  A4D8               	btfss	status,2,c
 14376  001AE8  D02B               	goto	l1774
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;lorawan.c: 762: {
 14380                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 14381  001AEA  0102               	movlb	2	; () banked
 14382  001AEC  51E7               	movf	(_loRa+231)& (0+255),w,b
 14383  001AEE  EC9D  F01A         	call	_SwTimerStop
 14384                           
 14385                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 14386  001AF2  0102               	movlb	2	; () banked
 14387  001AF4  9503               	bcf	(_loRa+3)& (0+255),2,b
 14388                           
 14389                           ; BSR set to: 2
 14390                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 14391  001AF6  0E00               	movlw	0
 14392  001AF8  0100               	movlb	0	; () banked
 14393  001AFA  6FA4               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 14394  001AFC  D01A               	goto	l1775
 14395  001AFE                     
 14396                           ; BSR set to: 0
 14397                           ;lorawan.c: 766: {
 14398                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 14399                           
 14400                           ; BSR set to: 0
 14401  001AFE  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14402  001B00  0D02               	mullw	2
 14403  001B02  0EA8               	movlw	low (_loRa+168)
 14404  001B04  24F3               	addwf	prodl,w,c
 14405  001B06  6ED9               	movwf	fsr2l,c
 14406  001B08  0E02               	movlw	high (_loRa+168)
 14407  001B0A  20F4               	addwfc	prodh,w,c
 14408  001B0C  6EDA               	movwf	fsr2h,c
 14409  001B0E  0E02               	movlw	2
 14410  001B10  18DE               	xorwf	postinc2,w,c
 14411  001B12  A4D8               	btfss	status,2,c
 14412  001B14  D00C               	goto	l1777
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;lorawan.c: 768: {
 14416                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 14417  001B16  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14418  001B18  0D02               	mullw	2
 14419  001B1A  0EA8               	movlw	low (_loRa+168)
 14420  001B1C  24F3               	addwf	prodl,w,c
 14421  001B1E  6ED9               	movwf	fsr2l,c
 14422  001B20  0E02               	movlw	high (_loRa+168)
 14423  001B22  20F4               	addwfc	prodh,w,c
 14424  001B24  6EDA               	movwf	fsr2h,c
 14425  001B26  0EFF               	movlw	255
 14426  001B28  6EDF               	movwf	indf2,c
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 14430  001B2A  0102               	movlb	2	; () banked
 14431  001B2C  07A7               	decf	(_loRa+167)& (0+255),f,b
 14432  001B2E                     l1777:
 14433                           
 14434                           ; BSR set to: 2
 14435  001B2E  0100               	movlb	0	; () banked
 14436  001B30  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 14437  001B32                     l1775:
 14438                           
 14439                           ; BSR set to: 0
 14440                           
 14441                           ; BSR set to: 0
 14442  001B32  0102               	movlb	2	; () banked
 14443  001B34  51A7               	movf	(_loRa+167)& (0+255),w,b
 14444  001B36  0100               	movlb	0	; () banked
 14445  001B38  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14446  001B3A  B0D8               	btfsc	status,0,c
 14447  001B3C  0012               	return	
 14448  001B3E  D7DF               	goto	l1776
 14449  001B40                     l1774:
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;lorawan.c: 776: else
 14453                           ;lorawan.c: 777: {
 14454                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 14455  001B40  0102               	movlb	2	; () banked
 14456  001B42  8503               	bsf	(_loRa+3)& (0+255),2,b
 14457                           
 14458                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 14459  001B44  A902               	btfss	(_loRa+2)& (0+255),4,b
 14460  001B46  0012               	return	
 14461                           
 14462                           ; BSR set to: 2
 14463                           ;lorawan.c: 782: {
 14464                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 14465  001B48  51CF               	movf	(_loRa+207)& (0+255),w,b
 14466  001B4A  E107               	bnz	u11130
 14467  001B4C  29CC               	incf	(_loRa+204)& (0+255),w,b
 14468  001B4E  0EFF               	movlw	255
 14469  001B50  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 14470  001B52  0E0F               	movlw	15
 14471  001B54  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 14472  001B56  A0D8               	btfss	status,0,c
 14473  001B58  D01D               	goto	l1782
 14474  001B5A                     u11130:
 14475                           
 14476                           ; BSR set to: 2
 14477  001B5A  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 14478  001B5E  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 14479  001B62  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 14480  001B66  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 14481  001B6A  0E7D               	movlw	125
 14482  001B6C  0100               	movlb	0	; () banked
 14483  001B6E  6F64               	movwf	___lldiv@divisor& (0+255),b
 14484  001B70  0E00               	movlw	0
 14485  001B72  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14486  001B74  0E00               	movlw	0
 14487  001B76  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14488  001B78  0E00               	movlw	0
 14489  001B7A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14490  001B7C  ECE4  F015         	call	___lldiv	;wreg free
 14491  001B80  0E0C               	movlw	12
 14492  001B82                     u11145:
 14493  001B82  90D8               	bcf	status,0,c
 14494  001B84  0100               	movlb	0	; () banked
 14495  001B86  3760               	rlcf	?___lldiv& (0+255),f,b
 14496  001B88  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 14497  001B8A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 14498  001B8C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 14499  001B8E  2EE8               	decfsz	wreg,f,c
 14500  001B90  D7F8               	goto	u11145
 14501  001B92  D023               	goto	L10
 14502  001B94                     l1782:
 14503                           
 14504                           ; BSR set to: 0
 14505  001B94  C2CC  F09C         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 14506  001B98  C2CD  F09D         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 14507  001B9C  C2CE  F09E         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 14508  001BA0  C2CF  F09F         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 14509  001BA4  0E0C               	movlw	12
 14510  001BA6                     u11155:
 14511  001BA6  90D8               	bcf	status,0,c
 14512  001BA8  0100               	movlb	0	; () banked
 14513  001BAA  379C               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 14514  001BAC  379D               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 14515  001BAE  379E               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 14516  001BB0  379F               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 14517  001BB2  2EE8               	decfsz	wreg,f,c
 14518  001BB4  D7F8               	goto	u11155
 14519  001BB6  C09C  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 14520  001BBA  C09D  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 14521  001BBE  C09E  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 14522  001BC2  C09F  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 14523  001BC6  0E7D               	movlw	125
 14524  001BC8  6F64               	movwf	___lldiv@divisor& (0+255),b
 14525  001BCA  0E00               	movlw	0
 14526  001BCC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14527  001BCE  0E00               	movlw	0
 14528  001BD0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14529  001BD2  0E00               	movlw	0
 14530  001BD4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14531  001BD6  ECE4  F015         	call	___lldiv	;wreg free
 14532  001BDA                     L10:
 14533  001BDA  C060  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2491
 14534  001BDE  C061  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2491+1
 14535  001BE2  C062  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2491+2
 14536  001BE6  C063  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2491+3
 14537  001BEA  C0A0  F060         	movff	_LORAWAN_LinkCheckConfigure$2491,SwTimerSetTimeout@timeout
 14538  001BEE  C0A1  F061         	movff	_LORAWAN_LinkCheckConfigure$2491+1,SwTimerSetTimeout@timeout+1
 14539  001BF2  C0A2  F062         	movff	_LORAWAN_LinkCheckConfigure$2491+2,SwTimerSetTimeout@timeout+2
 14540  001BF6  C0A3  F063         	movff	_LORAWAN_LinkCheckConfigure$2491+3,SwTimerSetTimeout@timeout+3
 14541  001BFA  0102               	movlb	2	; () banked
 14542  001BFC  51E7               	movf	(_loRa+231)& (0+255),w,b
 14543  001BFE  EC6F  F019         	call	_SwTimerSetTimeout
 14544                           
 14545                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 14546  001C02  0102               	movlb	2	; () banked
 14547  001C04  51E7               	movf	(_loRa+231)& (0+255),w,b
 14548  001C06  ECF2  F013         	call	_SwTimerStart
 14549  001C0A  0012               	return	
 14550  001C0C                     __end_of_LORAWAN_LinkCheckConfigure:
 14551                           	opt stack 0
 14552                           tblptru	equ	0xFF8
 14553                           tblptrh	equ	0xFF7
 14554                           tblptrl	equ	0xFF6
 14555                           tablat	equ	0xFF5
 14556                           prodh	equ	0xFF4
 14557                           prodl	equ	0xFF3
 14558                           intcon	equ	0xFF2
 14559                           intcon2	equ	0xFF1
 14560                           intcon3	equ	0xFF0
 14561                           indf0	equ	0xFEF
 14562                           postinc0	equ	0xFEE
 14563                           plusw0	equ	0xFEB
 14564                           fsr0h	equ	0xFEA
 14565                           fsr0l	equ	0xFE9
 14566                           wreg	equ	0xFE8
 14567                           indf2	equ	0xFDF
 14568                           postinc2	equ	0xFDE
 14569                           postdec2	equ	0xFDD
 14570                           plusw2	equ	0xFDB
 14571                           fsr2h	equ	0xFDA
 14572                           fsr2l	equ	0xFD9
 14573                           status	equ	0xFD8
 14574                           
 14575 ;; *************** function ___lmul *****************
 14576 ;; Defined at:
 14577 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;  multiplier      4    0[BANK0 ] unsigned long 
 14580 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;  product         4    8[BANK0 ] unsigned long 
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  4    0[BANK0 ] unsigned long 
 14585 ;; Registers used:
 14586 ;;		wreg, status,2, status,0
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 0/0
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;Total ram usage:       12 bytes
 14597 ;; Hardware stack levels used:    1
 14598 ;; Hardware stack levels required when called:    7
 14599 ;; This function calls:
 14600 ;;		Nothing
 14601 ;; This function is called by:
 14602 ;;		_RADIO_WriteConfiguration
 14603 ;;		_LORAWAN_TxDone
 14604 ;;		_LORAWAN_LinkCheckConfigure
 14605 ;;		_rand
 14606 ;;		_RADIO_TxDone
 14607 ;;		_RADIO_FSKPacketSent
 14608 ;;		_ExecuteNewChannel
 14609 ;;		_ExecuteRxParamSetupReq
 14610 ;;		_UpdateCfList
 14611 ;;		_LORAWAN_Pause
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           	psect	text82
 14616  002FD4                     __ptext82:
 14617                           	opt stack 0
 14618  002FD4                     ___lmul:
 14619                           	opt stack 18
 14620                           
 14621                           ;incstack = 0
 14622  002FD4  0E00               	movlw	0
 14623  002FD6  0100               	movlb	0	; () banked
 14624  002FD8  6F68               	movwf	___lmul@product& (0+255),b
 14625  002FDA  0E00               	movlw	0
 14626  002FDC  6F69               	movwf	(___lmul@product+1)& (0+255),b
 14627  002FDE  0E00               	movlw	0
 14628  002FE0  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 14629  002FE2  0E00               	movlw	0
 14630  002FE4  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 14631  002FE6                     
 14632                           ; BSR set to: 0
 14633                           
 14634                           ; BSR set to: 0
 14635  002FE6  A160               	btfss	___lmul@multiplier& (0+255),0,b
 14636  002FE8  D008               	goto	l2503
 14637                           
 14638                           ; BSR set to: 0
 14639  002FEA  5164               	movf	___lmul@multiplicand& (0+255),w,b
 14640  002FEC  2768               	addwf	___lmul@product& (0+255),f,b
 14641  002FEE  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 14642  002FF0  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 14643  002FF2  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 14644  002FF4  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 14645  002FF6  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 14646  002FF8  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 14647  002FFA                     l2503:
 14648                           
 14649                           ; BSR set to: 0
 14650                           
 14651                           ; BSR set to: 0
 14652  002FFA  90D8               	bcf	status,0,c
 14653  002FFC  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 14654  002FFE  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 14655  003000  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 14656  003002  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 14657                           
 14658                           ; BSR set to: 0
 14659  003004  90D8               	bcf	status,0,c
 14660  003006  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 14661  003008  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 14662  00300A  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 14663  00300C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 14664  00300E  5160               	movf	___lmul@multiplier& (0+255),w,b
 14665  003010  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 14666  003012  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 14667  003014  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 14668  003016  A4D8               	btfss	status,2,c
 14669  003018  D7E6               	goto	l2502
 14670                           
 14671                           ; BSR set to: 0
 14672  00301A  C068  F060         	movff	___lmul@product,?___lmul
 14673  00301E  C069  F061         	movff	___lmul@product+1,?___lmul+1
 14674  003022  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 14675  003026  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 14676                           
 14677                           ; BSR set to: 0
 14678  00302A  0012               	return		;funcret
 14679  00302C                     __end_of___lmul:
 14680                           	opt stack 0
 14681                           tblptru	equ	0xFF8
 14682                           tblptrh	equ	0xFF7
 14683                           tblptrl	equ	0xFF6
 14684                           tablat	equ	0xFF5
 14685                           prodh	equ	0xFF4
 14686                           prodl	equ	0xFF3
 14687                           intcon	equ	0xFF2
 14688                           intcon2	equ	0xFF1
 14689                           intcon3	equ	0xFF0
 14690                           indf0	equ	0xFEF
 14691                           postinc0	equ	0xFEE
 14692                           plusw0	equ	0xFEB
 14693                           fsr0h	equ	0xFEA
 14694                           fsr0l	equ	0xFE9
 14695                           wreg	equ	0xFE8
 14696                           indf2	equ	0xFDF
 14697                           postinc2	equ	0xFDE
 14698                           postdec2	equ	0xFDD
 14699                           plusw2	equ	0xFDB
 14700                           fsr2h	equ	0xFDA
 14701                           fsr2l	equ	0xFD9
 14702                           status	equ	0xFD8
 14703                           
 14704 ;; *************** function ___lldiv *****************
 14705 ;; Defined at:
 14706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;  dividend        4    0[BANK0 ] unsigned long 
 14709 ;;  divisor         4    4[BANK0 ] unsigned long 
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;  quotient        4    8[BANK0 ] unsigned long 
 14712 ;;  counter         1   12[BANK0 ] unsigned char 
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  4    0[BANK0 ] unsigned long 
 14715 ;; Registers used:
 14716 ;;		wreg, status,2, status,0
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14722 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14726 ;;Total ram usage:       13 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:    7
 14729 ;; This function calls:
 14730 ;;		Nothing
 14731 ;; This function is called by:
 14732 ;;		_RADIO_WriteFrequency
 14733 ;;		_RADIO_WriteFSKFrequencyDeviation
 14734 ;;		_RADIO_WriteFSKBitRate
 14735 ;;		_RADIO_Transmit
 14736 ;;		_LORAWAN_TxDone
 14737 ;;		_LORAWAN_RxTimeout
 14738 ;;		_DutyCycleCallback
 14739 ;;		_LORAWAN_LinkCheckConfigure
 14740 ;;		_LORAWAN_LinkCheckCallback
 14741 ;;		_UpdateRetransmissionAckTimeoutState
 14742 ;;		_UpdateJoinSuccessState
 14743 ;;		_RADIO_ReceiveStart
 14744 ;;		_StartReTxTimer
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text83
 14749  002BC8                     __ptext83:
 14750                           	opt stack 0
 14751  002BC8                     ___lldiv:
 14752                           	opt stack 21
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;incstack = 0
 14756  002BC8  0E00               	movlw	0
 14757  002BCA  0100               	movlb	0	; () banked
 14758  002BCC  6F68               	movwf	___lldiv@quotient& (0+255),b
 14759  002BCE  0E00               	movlw	0
 14760  002BD0  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14761  002BD2  0E00               	movlw	0
 14762  002BD4  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14763  002BD6  0E00               	movlw	0
 14764  002BD8  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14765                           
 14766                           ; BSR set to: 0
 14767  002BDA  5164               	movf	___lldiv@divisor& (0+255),w,b
 14768  002BDC  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14769  002BDE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14770  002BE0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14771  002BE2  B4D8               	btfsc	status,2,c
 14772  002BE4  D02A               	goto	l2846
 14773                           
 14774                           ; BSR set to: 0
 14775  002BE6  0E01               	movlw	1
 14776  002BE8  6F6C               	movwf	___lldiv@counter& (0+255),b
 14777  002BEA  D006               	goto	l2841
 14778  002BEC                     
 14779                           ; BSR set to: 0
 14780                           
 14781                           ; BSR set to: 0
 14782  002BEC  90D8               	bcf	status,0,c
 14783  002BEE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14784  002BF0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14785  002BF2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14786  002BF4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14787  002BF6  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14788  002BF8                     l2841:
 14789                           
 14790                           ; BSR set to: 0
 14791                           
 14792                           ; BSR set to: 0
 14793  002BF8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14794  002BFA  D7F8               	goto	l2842
 14795  002BFC                     u8240:
 14796                           
 14797                           ; BSR set to: 0
 14798                           
 14799                           ; BSR set to: 0
 14800                           
 14801                           ; BSR set to: 0
 14802  002BFC  90D8               	bcf	status,0,c
 14803  002BFE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14804  002C00  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14805  002C02  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14806  002C04  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14807                           
 14808                           ; BSR set to: 0
 14809  002C06  5164               	movf	___lldiv@divisor& (0+255),w,b
 14810  002C08  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14811  002C0A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14812  002C0C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14813  002C0E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14814  002C10  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14815  002C12  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14816  002C14  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14817  002C16  A0D8               	btfss	status,0,c
 14818  002C18  D009               	goto	l2845
 14819                           
 14820                           ; BSR set to: 0
 14821  002C1A  5164               	movf	___lldiv@divisor& (0+255),w,b
 14822  002C1C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14823  002C1E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14824  002C20  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14825  002C22  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14826  002C24  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14827  002C26  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14828  002C28  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14829                           
 14830                           ; BSR set to: 0
 14831  002C2A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14832  002C2C                     l2845:
 14833                           
 14834                           ; BSR set to: 0
 14835                           
 14836                           ; BSR set to: 0
 14837  002C2C  90D8               	bcf	status,0,c
 14838  002C2E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14839  002C30  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14840  002C32  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14841  002C34  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14842                           
 14843                           ; BSR set to: 0
 14844  002C36  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14845  002C38  D7E1               	goto	u8240
 14846  002C3A                     l2846:
 14847                           
 14848                           ; BSR set to: 0
 14849                           
 14850                           ; BSR set to: 0
 14851  002C3A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14852  002C3E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14853  002C42  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14854  002C46  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14855                           
 14856                           ; BSR set to: 0
 14857  002C4A  0012               	return		;funcret
 14858  002C4C                     __end_of___lldiv:
 14859                           	opt stack 0
 14860                           tblptru	equ	0xFF8
 14861                           tblptrh	equ	0xFF7
 14862                           tblptrl	equ	0xFF6
 14863                           tablat	equ	0xFF5
 14864                           prodh	equ	0xFF4
 14865                           prodl	equ	0xFF3
 14866                           intcon	equ	0xFF2
 14867                           intcon2	equ	0xFF1
 14868                           intcon3	equ	0xFF0
 14869                           indf0	equ	0xFEF
 14870                           postinc0	equ	0xFEE
 14871                           plusw0	equ	0xFEB
 14872                           fsr0h	equ	0xFEA
 14873                           fsr0l	equ	0xFE9
 14874                           wreg	equ	0xFE8
 14875                           indf2	equ	0xFDF
 14876                           postinc2	equ	0xFDE
 14877                           postdec2	equ	0xFDD
 14878                           plusw2	equ	0xFDB
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function _SwTimerStop *****************
 14884 ;; Defined at:
 14885 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  timerId         1    wreg     unsigned char 
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;  timerId         1    0[BANK0 ] unsigned char 
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  1    wreg      void 
 14892 ;; Registers used:
 14893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14894 ;; Tracked objects:
 14895 ;;		On entry : 0/0
 14896 ;;		On exit  : 0/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;Total ram usage:        1 bytes
 14904 ;; Hardware stack levels used:    1
 14905 ;; Hardware stack levels required when called:    7
 14906 ;; This function calls:
 14907 ;;		Nothing
 14908 ;; This function is called by:
 14909 ;;		_RADIO_Init
 14910 ;;		_RADIO_Transmit
 14911 ;;		_RADIO_RxFSKTimeout
 14912 ;;		_LORAWAN_TxDone
 14913 ;;		_StopAllSoftwareTimers
 14914 ;;		_LORAWAN_LinkCheckConfigure
 14915 ;;		_RADIO_RxDone
 14916 ;;		_RADIO_FSKPayloadReady
 14917 ;;		_RADIO_RxTimeout
 14918 ;;		_RADIO_TxDone
 14919 ;;		_RADIO_FSKPacketSent
 14920 ;;		_LORAWAN_RxDone
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           	psect	text84
 14925  00353A                     __ptext84:
 14926                           	opt stack 0
 14927  00353A                     _SwTimerStop:
 14928                           	opt stack 21
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;incstack = 0
 14932                           ;SwTimerStop@timerId stored from wreg
 14933  00353A  0100               	movlb	0	; () banked
 14934  00353C  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 14935                           
 14936                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 14937  00353E  9EF2               	bcf	intcon,7,c	;volatile
 14938                           
 14939                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 14940  003540  0100               	movlb	0	; () banked
 14941  003542  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 14942  003544  0D08               	mullw	8
 14943  003546  0E04               	movlw	4
 14944  003548  26F3               	addwf	prodl,f,c
 14945  00354A  0E00               	movlw	0
 14946  00354C  22F4               	addwfc	prodh,f,c
 14947  00354E  0E00               	movlw	low _swTimers
 14948  003550  24F3               	addwf	prodl,w,c
 14949  003552  6ED9               	movwf	fsr2l,c
 14950  003554  0E03               	movlw	high _swTimers
 14951  003556  20F4               	addwfc	prodh,w,c
 14952  003558  6EDA               	movwf	fsr2h,c
 14953  00355A  0E00               	movlw	0
 14954  00355C  6EDF               	movwf	indf2,c
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 14958  00355E  8EF2               	bsf	intcon,7,c	;volatile
 14959                           
 14960                           ; BSR set to: 0
 14961  003560  0012               	return		;funcret
 14962  003562                     __end_of_SwTimerStop:
 14963                           	opt stack 0
 14964                           tblptru	equ	0xFF8
 14965                           tblptrh	equ	0xFF7
 14966                           tblptrl	equ	0xFF6
 14967                           tablat	equ	0xFF5
 14968                           prodh	equ	0xFF4
 14969                           prodl	equ	0xFF3
 14970                           intcon	equ	0xFF2
 14971                           intcon2	equ	0xFF1
 14972                           intcon3	equ	0xFF0
 14973                           indf0	equ	0xFEF
 14974                           postinc0	equ	0xFEE
 14975                           plusw0	equ	0xFEB
 14976                           fsr0h	equ	0xFEA
 14977                           fsr0l	equ	0xFE9
 14978                           wreg	equ	0xFE8
 14979                           indf2	equ	0xFDF
 14980                           postinc2	equ	0xFDE
 14981                           postdec2	equ	0xFDD
 14982                           plusw2	equ	0xFDB
 14983                           fsr2h	equ	0xFDA
 14984                           fsr2l	equ	0xFD9
 14985                           status	equ	0xFD8
 14986                           
 14987 ;; *************** function _SwTimerStart *****************
 14988 ;; Defined at:
 14989 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  timerId         1    wreg     unsigned char 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;  timerId         1   57[BANK0 ] unsigned char 
 14994 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  1    wreg      void 
 14997 ;; Registers used:
 14998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;Total ram usage:        9 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:   10
 15011 ;; This function calls:
 15012 ;;		_SwTimersInterrupt
 15013 ;;		_TMR_OverrideRemaining
 15014 ;; This function is called by:
 15015 ;;		_RADIO_Transmit
 15016 ;;		_LORAWAN_TxDone
 15017 ;;		_LORAWAN_RxTimeout
 15018 ;;		_DutyCycleCallback
 15019 ;;		_LORAWAN_Join
 15020 ;;		_LORAWAN_LinkCheckConfigure
 15021 ;;		_LORAWAN_LinkCheckCallback
 15022 ;;		_UpdateRetransmissionAckTimeoutState
 15023 ;;		_UpdateJoinSuccessState
 15024 ;;		_RADIO_ReceiveStart
 15025 ;;		_StartReTxTimer
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           	psect	text85
 15030  0027E4                     __ptext85:
 15031                           	opt stack 0
 15032  0027E4                     _SwTimerStart:
 15033                           	opt stack 19
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;incstack = 0
 15037                           ;SwTimerStart@timerId stored from wreg
 15038  0027E4  0100               	movlb	0	; () banked
 15039  0027E6  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 15040                           
 15041                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 15042                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 15043  0027E8  9EF2               	bcf	intcon,7,c	;volatile
 15044                           
 15045                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 15046  0027EA  EC41  F00F         	call	_SwTimersInterrupt	;wreg free
 15047  0027EE  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 15048  0027F2  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 15049  0027F6  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 15050  0027FA  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 15051                           
 15052                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 15053  0027FE  0100               	movlb	0	; () banked
 15054  002800  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15055  002802  0D08               	mullw	8
 15056  002804  0E00               	movlw	low _swTimers
 15057  002806  24F3               	addwf	prodl,w,c
 15058  002808  6ED9               	movwf	fsr2l,c
 15059  00280A  0E03               	movlw	high _swTimers
 15060  00280C  20F4               	addwfc	prodh,w,c
 15061  00280E  6EDA               	movwf	fsr2h,c
 15062  002810  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 15063  002812  5CDE               	subwf	postinc2,w,c
 15064  002814  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 15065  002816  58DE               	subwfb	postinc2,w,c
 15066  002818  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 15067  00281A  58DE               	subwfb	postinc2,w,c
 15068  00281C  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 15069  00281E  58DE               	subwfb	postinc2,w,c
 15070  002820  B0D8               	btfsc	status,0,c
 15071  002822  D010               	goto	l257
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;sw_timer.c: 225: {
 15075                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 15076  002824  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15077  002826  0D08               	mullw	8
 15078  002828  0E00               	movlw	low _swTimers
 15079  00282A  24F3               	addwf	prodl,w,c
 15080  00282C  6ED9               	movwf	fsr2l,c
 15081  00282E  0E03               	movlw	high _swTimers
 15082  002830  20F4               	addwfc	prodh,w,c
 15083  002832  6EDA               	movwf	fsr2h,c
 15084  002834  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 15085  002838  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 15086  00283C  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 15087  002840  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 15088  002844                     l257:
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;sw_timer.c: 227: }
 15092                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 15093                           
 15094                           ; BSR set to: 0
 15095  002844  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 15096  002848  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 15097  00284C  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 15098  002850  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 15099  002854  EC3D  F014         	call	_TMR_OverrideRemaining	;wreg free
 15100                           
 15101                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 15102  002858  0100               	movlb	0	; () banked
 15103  00285A  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15104  00285C  0D08               	mullw	8
 15105  00285E  0E04               	movlw	4
 15106  002860  26F3               	addwf	prodl,f,c
 15107  002862  0E00               	movlw	0
 15108  002864  22F4               	addwfc	prodh,f,c
 15109  002866  0E00               	movlw	low _swTimers
 15110  002868  24F3               	addwf	prodl,w,c
 15111  00286A  6ED9               	movwf	fsr2l,c
 15112  00286C  0E03               	movlw	high _swTimers
 15113  00286E  20F4               	addwfc	prodh,w,c
 15114  002870  6EDA               	movwf	fsr2h,c
 15115  002872  0E01               	movlw	1
 15116  002874  6EDF               	movwf	indf2,c
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 15120  002876  8EF2               	bsf	intcon,7,c	;volatile
 15121                           
 15122                           ; BSR set to: 0
 15123  002878  0012               	return		;funcret
 15124  00287A                     __end_of_SwTimerStart:
 15125                           	opt stack 0
 15126                           tblptru	equ	0xFF8
 15127                           tblptrh	equ	0xFF7
 15128                           tblptrl	equ	0xFF6
 15129                           tablat	equ	0xFF5
 15130                           prodh	equ	0xFF4
 15131                           prodl	equ	0xFF3
 15132                           intcon	equ	0xFF2
 15133                           intcon2	equ	0xFF1
 15134                           intcon3	equ	0xFF0
 15135                           indf0	equ	0xFEF
 15136                           postinc0	equ	0xFEE
 15137                           plusw0	equ	0xFEB
 15138                           fsr0h	equ	0xFEA
 15139                           fsr0l	equ	0xFE9
 15140                           wreg	equ	0xFE8
 15141                           indf2	equ	0xFDF
 15142                           postinc2	equ	0xFDE
 15143                           postdec2	equ	0xFDD
 15144                           plusw2	equ	0xFDB
 15145                           fsr2h	equ	0xFDA
 15146                           fsr2l	equ	0xFD9
 15147                           status	equ	0xFD8
 15148                           
 15149 ;; *************** function _TMR_OverrideRemaining *****************
 15150 ;; Defined at:
 15151 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 15156 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  1    wreg      void 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2, status,0, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;Total ram usage:       10 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    9
 15173 ;; This function calls:
 15174 ;;		_TMR_SwapTimer
 15175 ;; This function is called by:
 15176 ;;		_SwTimerStart
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text86
 15181  00287A                     __ptext86:
 15182                           	opt stack 0
 15183  00287A                     _TMR_OverrideRemaining:
 15184                           	opt stack 19
 15185                           
 15186                           ;sw_timer.c: 67: uint16_t tmrVal;
 15187                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 15188                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;incstack = 0
 15192  00287A  0100               	movlb	0	; () banked
 15193  00287C  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 15194  00287E  11FE               	iorwf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 15195  002880  11FD               	iorwf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 15196  002882  E104               	bnz	u7620
 15197  002884  0E0B               	movlw	11
 15198  002886  5DFC               	subwf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 15199  002888  A0D8               	btfss	status,0,c
 15200  00288A  0012               	return	
 15201  00288C                     u7620:
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;sw_timer.c: 72: {
 15205                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 15206  00288C  51FC               	movf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 15207  00288E  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 15208  002890  51FD               	movf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 15209  002892  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 15210  002894  51FE               	movf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 15211  002896  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 15212  002898  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 15213  00289A  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 15214  00289C  B0D8               	btfsc	status,0,c
 15215  00289E  0012               	return	
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;sw_timer.c: 74: {
 15219                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 15220  0028A0  C06A  F0FC         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 15221  0028A4  C06B  F0FD         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 15222  0028A8  C06C  F0FE         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 15223  0028AC  C06D  F0FF         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 15224                           
 15225                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 15226  0028B0  C0F6  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 15227  0028B4  C0F7  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 15228                           
 15229                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 15230  0028B8  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 15231  0028BC  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 15232  0028C0  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 15233  0028C2  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15234  0028C4  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 15235  0028C6  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15236  0028C8  C06E  F0F6         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 15237  0028CC  C06F  F0F7         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 15241  0028D0  C0F6  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 15242  0028D4  C0F7  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 15243  0028D8  EC4D  F019         	call	_TMR_SwapTimer	;wreg free
 15244  0028DC  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 15245  0028E0  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 15246                           
 15247                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 15248  0028E4  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 15249  0028E8  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 15250  0028EC  0100               	movlb	0	; () banked
 15251  0028EE  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 15252  0028F0  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15253  0028F2  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 15254  0028F4  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15255  0028F6  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 15256  0028F8  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 15257  0028FA  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 15258  0028FC  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15259  0028FE  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 15260  002900  27EC               	addwf	_ticksAdded& (0+255),f,b	;volatile
 15261  002902  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 15262  002904  23ED               	addwfc	(_ticksAdded+1)& (0+255),f,b	;volatile
 15263  002906  0E00               	movlw	0
 15264  002908  23EE               	addwfc	(_ticksAdded+2)& (0+255),f,b	;volatile
 15265  00290A  0E00               	movlw	0
 15266  00290C  23EF               	addwfc	(_ticksAdded+3)& (0+255),f,b	;volatile
 15267                           
 15268                           ; BSR set to: 0
 15269  00290E  0012               	return	
 15270  002910                     __end_of_TMR_OverrideRemaining:
 15271                           	opt stack 0
 15272                           tblptru	equ	0xFF8
 15273                           tblptrh	equ	0xFF7
 15274                           tblptrl	equ	0xFF6
 15275                           tablat	equ	0xFF5
 15276                           prodh	equ	0xFF4
 15277                           prodl	equ	0xFF3
 15278                           intcon	equ	0xFF2
 15279                           intcon2	equ	0xFF1
 15280                           intcon3	equ	0xFF0
 15281                           indf0	equ	0xFEF
 15282                           postinc0	equ	0xFEE
 15283                           plusw0	equ	0xFEB
 15284                           fsr0h	equ	0xFEA
 15285                           fsr0l	equ	0xFE9
 15286                           wreg	equ	0xFE8
 15287                           indf2	equ	0xFDF
 15288                           postinc2	equ	0xFDE
 15289                           postdec2	equ	0xFDD
 15290                           plusw2	equ	0xFDB
 15291                           fsr2h	equ	0xFDA
 15292                           fsr2l	equ	0xFD9
 15293                           status	equ	0xFD8
 15294                           
 15295 ;; *************** function _TMR_SwapTimer *****************
 15296 ;; Defined at:
 15297 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  timerVal        2    8[BANK0 ] unsigned int 
 15300 ;; Auto vars:     Size  Location     Type
 15301 ;;		None
 15302 ;; Return value:  Size  Location     Type
 15303 ;;                  2    8[BANK0 ] unsigned int 
 15304 ;; Registers used:
 15305 ;;		wreg, status,2, status,0, cstack
 15306 ;; Tracked objects:
 15307 ;;		On entry : 0/0
 15308 ;;		On exit  : 0/0
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;Total ram usage:        2 bytes
 15316 ;; Hardware stack levels used:    1
 15317 ;; Hardware stack levels required when called:    8
 15318 ;; This function calls:
 15319 ;;		_TMR1_ReadTimer
 15320 ;;		_TMR1_WriteTimer
 15321 ;; This function is called by:
 15322 ;;		_TMR_OverrideRemaining
 15323 ;; This function uses a non-reentrant model
 15324 ;;
 15325                           
 15326                           	psect	text87
 15327  00329A                     __ptext87:
 15328                           	opt stack 0
 15329  00329A                     _TMR_SwapTimer:
 15330                           	opt stack 19
 15331                           
 15332                           ;sw_timer.c: 114: static uint16_t oldVal;
 15333                           ;sw_timer.c: 115: static uint16_t retVal;
 15334                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 15335                           
 15336                           ; BSR set to: 0
 15337                           ;incstack = 0
 15338  00329A  ECD3  F01A         	call	_TMR1_ReadTimer	;wreg free
 15339  00329E  C060  F0F2         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 15340  0032A2  C061  F0F3         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 15341  0032A6                     
 15342                           ;sw_timer.c: 123: ;
 15343  0032A6  ECD3  F01A         	call	_TMR1_ReadTimer	;wreg free
 15344  0032AA  0100               	movlb	0	; () banked
 15345  0032AC  51F2               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 15346  0032AE  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 15347  0032B0  E104               	bnz	l7870
 15348  0032B2  51F3               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 15349  0032B4  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 15350  0032B6  B4D8               	btfsc	status,2,c
 15351  0032B8  D7F6               	goto	l223
 15352  0032BA                     l7870:
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 15356  0032BA  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 15357  0032BE  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 15358  0032C2  ECF4  F01A         	call	_TMR1_WriteTimer	;wreg free
 15359                           
 15360                           ;sw_timer.c: 128: oldVal++;
 15361  0032C6  0100               	movlb	0	; () banked
 15362  0032C8  4BF2               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 15363  0032CA  2BF3               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 15364                           
 15365                           ; BSR set to: 0
 15366                           ;sw_timer.c: 130: retVal = oldVal;
 15367  0032CC  C0F2  F0F0         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 15368  0032D0  C0F3  F0F1         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;sw_timer.c: 132: return retVal;
 15372  0032D4  C0F0  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 15373  0032D8  C0F1  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 15374  0032DC  0012               	return	
 15375  0032DE                     __end_of_TMR_SwapTimer:
 15376                           	opt stack 0
 15377                           tblptru	equ	0xFF8
 15378                           tblptrh	equ	0xFF7
 15379                           tblptrl	equ	0xFF6
 15380                           tablat	equ	0xFF5
 15381                           prodh	equ	0xFF4
 15382                           prodl	equ	0xFF3
 15383                           intcon	equ	0xFF2
 15384                           intcon2	equ	0xFF1
 15385                           intcon3	equ	0xFF0
 15386                           indf0	equ	0xFEF
 15387                           postinc0	equ	0xFEE
 15388                           plusw0	equ	0xFEB
 15389                           fsr0h	equ	0xFEA
 15390                           fsr0l	equ	0xFE9
 15391                           wreg	equ	0xFE8
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           plusw2	equ	0xFDB
 15396                           fsr2h	equ	0xFDA
 15397                           fsr2l	equ	0xFD9
 15398                           status	equ	0xFD8
 15399                           
 15400 ;; *************** function _TMR1_WriteTimer *****************
 15401 ;; Defined at:
 15402 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;  timerVal        2    0[BANK0 ] unsigned int 
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      void 
 15409 ;; Registers used:
 15410 ;;		wreg, status,2
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15420 ;;Total ram usage:        2 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; Hardware stack levels required when called:    7
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_TMR_SwapTimer
 15427 ;;		_TMR1_Reload
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text88
 15432  0035E8                     __ptext88:
 15433                           	opt stack 0
 15434  0035E8                     _TMR1_WriteTimer:
 15435                           	opt stack 19
 15436                           
 15437                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;incstack = 0
 15441  0035E8  A4CD               	btfss	4045,2,c	;volatile
 15442  0035EA  D008               	goto	l2426
 15443                           
 15444                           ;tmr1.c: 124: {
 15445                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 15446  0035EC  90CD               	bcf	4045,0,c	;volatile
 15447                           
 15448                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 15449  0035EE  0100               	movlb	0	; () banked
 15450  0035F0  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15451  0035F2  6ECF               	movwf	4047,c	;volatile
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 15455  0035F4  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 15459  0035F8  80CD               	bsf	4045,0,c	;volatile
 15460                           
 15461                           ;tmr1.c: 134: }
 15462  0035FA  0012               	return	
 15463  0035FC                     l2426:
 15464                           
 15465                           ;tmr1.c: 135: else
 15466                           ;tmr1.c: 136: {
 15467                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 15468                           
 15469                           ; BSR set to: 0
 15470  0035FC  0100               	movlb	0	; () banked
 15471  0035FE  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15472  003600  6ECF               	movwf	4047,c	;volatile
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 15476  003602  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 15477  003606  0012               	return	
 15478  003608                     __end_of_TMR1_WriteTimer:
 15479                           	opt stack 0
 15480                           tblptru	equ	0xFF8
 15481                           tblptrh	equ	0xFF7
 15482                           tblptrl	equ	0xFF6
 15483                           tablat	equ	0xFF5
 15484                           prodh	equ	0xFF4
 15485                           prodl	equ	0xFF3
 15486                           intcon	equ	0xFF2
 15487                           intcon2	equ	0xFF1
 15488                           intcon3	equ	0xFF0
 15489                           indf0	equ	0xFEF
 15490                           postinc0	equ	0xFEE
 15491                           plusw0	equ	0xFEB
 15492                           fsr0h	equ	0xFEA
 15493                           fsr0l	equ	0xFE9
 15494                           wreg	equ	0xFE8
 15495                           indf2	equ	0xFDF
 15496                           postinc2	equ	0xFDE
 15497                           postdec2	equ	0xFDD
 15498                           plusw2	equ	0xFDB
 15499                           fsr2h	equ	0xFDA
 15500                           fsr2l	equ	0xFD9
 15501                           status	equ	0xFD8
 15502                           
 15503 ;; *************** function _SwTimersInterrupt *****************
 15504 ;; Defined at:
 15505 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;		None
 15508 ;; Auto vars:     Size  Location     Type
 15509 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 15510 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 15511 ;;  i               1   48[BANK0 ] unsigned char 
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  4   32[BANK0 ] unsigned long 
 15514 ;; Registers used:
 15515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15516 ;; Tracked objects:
 15517 ;;		On entry : 0/0
 15518 ;;		On exit  : 0/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15522 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;Total ram usage:       17 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    9
 15528 ;; This function calls:
 15529 ;;		_TMR_GetDeltaTime
 15530 ;; This function is called by:
 15531 ;;		_SwTimerStart
 15532 ;;		_SwTimerReadValue
 15533 ;;		_SwTimersCanSleep
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           	psect	text89
 15538  001E82                     __ptext89:
 15539                           	opt stack 0
 15540  001E82                     _SwTimersInterrupt:
 15541                           	opt stack 19
 15542                           
 15543                           ;sw_timer.c: 289: uint8_t i;
 15544                           ;sw_timer.c: 290: uint32_t timeElapsed;
 15545                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;incstack = 0
 15549  001E82  0100               	movlb	0	; () banked
 15550  001E84  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 15551  001E86  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 15552  001E88  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 15553  001E8A  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 15557  001E8C  EC3B  F00B         	call	_TMR_GetDeltaTime	;wreg free
 15558  001E90  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 15559  001E94  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 15560  001E98  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 15561  001E9C  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 15562                           
 15563                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 15564  001EA0  0E00               	movlw	0
 15565  001EA2  0100               	movlb	0	; () banked
 15566  001EA4  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 15567  001EA6  D061               	goto	l280
 15568  001EA8                     
 15569                           ; BSR set to: 0
 15570                           ;sw_timer.c: 298: {
 15571                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 15572                           
 15573                           ; BSR set to: 0
 15574  001EA8  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15575  001EAA  0D08               	mullw	8
 15576  001EAC  0E04               	movlw	4
 15577  001EAE  26F3               	addwf	prodl,f,c
 15578  001EB0  0E00               	movlw	0
 15579  001EB2  22F4               	addwfc	prodh,f,c
 15580  001EB4  0E00               	movlw	low _swTimers
 15581  001EB6  24F3               	addwf	prodl,w,c
 15582  001EB8  6ED9               	movwf	fsr2l,c
 15583  001EBA  0E03               	movlw	high _swTimers
 15584  001EBC  20F4               	addwfc	prodh,w,c
 15585  001EBE  6EDA               	movwf	fsr2h,c
 15586  001EC0  04DE               	decf	postinc2,w,c
 15587  001EC2  A4D8               	btfss	status,2,c
 15588  001EC4  D051               	goto	l285
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;sw_timer.c: 302: {
 15592                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 15593  001EC6  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15594  001EC8  0D08               	mullw	8
 15595  001ECA  0E00               	movlw	low _swTimers
 15596  001ECC  24F3               	addwf	prodl,w,c
 15597  001ECE  6ED9               	movwf	fsr2l,c
 15598  001ED0  0E03               	movlw	high _swTimers
 15599  001ED2  20F4               	addwfc	prodh,w,c
 15600  001ED4  6EDA               	movwf	fsr2h,c
 15601  001ED6  50DE               	movf	postinc2,w,c
 15602  001ED8  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 15603  001EDA  50DE               	movf	postinc2,w,c
 15604  001EDC  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 15605  001EDE  50DE               	movf	postinc2,w,c
 15606  001EE0  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 15607  001EE2  50DE               	movf	postinc2,w,c
 15608  001EE4  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 15609  001EE6  A0D8               	btfss	status,0,c
 15610  001EE8  D00D               	goto	l283
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;sw_timer.c: 304: {
 15614                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 15615  001EEA  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15616  001EEC  0D08               	mullw	8
 15617  001EEE  0E00               	movlw	low _swTimers
 15618  001EF0  24F3               	addwf	prodl,w,c
 15619  001EF2  6ED9               	movwf	fsr2l,c
 15620  001EF4  0E03               	movlw	high _swTimers
 15621  001EF6  20F4               	addwfc	prodh,w,c
 15622  001EF8  6EDA               	movwf	fsr2h,c
 15623  001EFA  6ADE               	clrf	postinc2,c
 15624  001EFC  6ADE               	clrf	postinc2,c
 15625  001EFE  6ADE               	clrf	postinc2,c
 15626  001F00  6ADD               	clrf	postdec2,c
 15627                           
 15628                           ;sw_timer.c: 306: }
 15629  001F02  D032               	goto	l285
 15630  001F04                     l283:
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;sw_timer.c: 307: else
 15634                           ;sw_timer.c: 308: {
 15635                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 15636                           
 15637                           ; BSR set to: 0
 15638  001F04  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15639  001F06  0D08               	mullw	8
 15640  001F08  0E00               	movlw	low _swTimers
 15641  001F0A  24F3               	addwf	prodl,w,c
 15642  001F0C  6ED9               	movwf	fsr2l,c
 15643  001F0E  0E03               	movlw	high _swTimers
 15644  001F10  20F4               	addwfc	prodh,w,c
 15645  001F12  6EDA               	movwf	fsr2h,c
 15646  001F14  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 15647  001F16  5EDE               	subwf	postinc2,f,c
 15648  001F18  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 15649  001F1A  5ADE               	subwfb	postinc2,f,c
 15650  001F1C  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 15651  001F1E  5ADE               	subwfb	postinc2,f,c
 15652  001F20  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 15653  001F22  5ADE               	subwfb	postinc2,f,c
 15654                           
 15655                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 15656  001F24  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15657  001F26  0D08               	mullw	8
 15658  001F28  0E00               	movlw	low _swTimers
 15659  001F2A  24F3               	addwf	prodl,w,c
 15660  001F2C  6ED9               	movwf	fsr2l,c
 15661  001F2E  0E03               	movlw	high _swTimers
 15662  001F30  20F4               	addwfc	prodh,w,c
 15663  001F32  6EDA               	movwf	fsr2h,c
 15664  001F34  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 15665  001F36  5CDE               	subwf	postinc2,w,c
 15666  001F38  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 15667  001F3A  58DE               	subwfb	postinc2,w,c
 15668  001F3C  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 15669  001F3E  58DE               	subwfb	postinc2,w,c
 15670  001F40  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 15671  001F42  58DE               	subwfb	postinc2,w,c
 15672  001F44  B0D8               	btfsc	status,0,c
 15673  001F46  D010               	goto	l285
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;sw_timer.c: 313: {
 15677                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 15678  001F48  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15679  001F4A  0D08               	mullw	8
 15680  001F4C  0E00               	movlw	low _swTimers
 15681  001F4E  24F3               	addwf	prodl,w,c
 15682  001F50  6ED9               	movwf	fsr2l,c
 15683  001F52  0E03               	movlw	high _swTimers
 15684  001F54  20F4               	addwfc	prodh,w,c
 15685  001F56  6EDA               	movwf	fsr2h,c
 15686  001F58  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 15687  001F5C  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 15688  001F60  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 15689  001F64  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 15690  001F68                     l285:
 15691                           
 15692                           ; BSR set to: 0
 15693                           
 15694                           ; BSR set to: 0
 15695                           
 15696                           ; BSR set to: 0
 15697                           
 15698                           ; BSR set to: 0
 15699  001F68  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 15700  001F6A                     l280:
 15701                           
 15702                           ; BSR set to: 0
 15703                           
 15704                           ; BSR set to: 0
 15705  001F6A  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 15706  001F6C  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 15707  001F6E  A0D8               	btfss	status,0,c
 15708  001F70  D79B               	goto	l281
 15709                           
 15710                           ; BSR set to: 0
 15711                           ;sw_timer.c: 315: }
 15712                           ;sw_timer.c: 316: }
 15713                           ;sw_timer.c: 317: }
 15714                           ;sw_timer.c: 318: }
 15715                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 15716  001F72  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 15717  001F76  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 15718  001F7A  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 15719  001F7E  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 15720                           
 15721                           ; BSR set to: 0
 15722  001F82  0012               	return		;funcret
 15723  001F84                     __end_of_SwTimersInterrupt:
 15724                           	opt stack 0
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           intcon	equ	0xFF2
 15732                           intcon2	equ	0xFF1
 15733                           intcon3	equ	0xFF0
 15734                           indf0	equ	0xFEF
 15735                           postinc0	equ	0xFEE
 15736                           plusw0	equ	0xFEB
 15737                           fsr0h	equ	0xFEA
 15738                           fsr0l	equ	0xFE9
 15739                           wreg	equ	0xFE8
 15740                           indf2	equ	0xFDF
 15741                           postinc2	equ	0xFDE
 15742                           postdec2	equ	0xFDD
 15743                           plusw2	equ	0xFDB
 15744                           fsr2h	equ	0xFDA
 15745                           fsr2l	equ	0xFD9
 15746                           status	equ	0xFD8
 15747                           
 15748 ;; *************** function _TMR_GetDeltaTime *****************
 15749 ;; Defined at:
 15750 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15751 ;; Parameters:    Size  Location     Type
 15752 ;;		None
 15753 ;; Auto vars:     Size  Location     Type
 15754 ;;		None
 15755 ;; Return value:  Size  Location     Type
 15756 ;;                  4    8[BANK0 ] unsigned long 
 15757 ;; Registers used:
 15758 ;;		wreg, status,2, status,0, cstack
 15759 ;; Tracked objects:
 15760 ;;		On entry : 0/0
 15761 ;;		On exit  : 0/0
 15762 ;;		Unchanged: 0/0
 15763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15766 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15767 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;Total ram usage:       24 bytes
 15769 ;; Hardware stack levels used:    1
 15770 ;; Hardware stack levels required when called:    8
 15771 ;; This function calls:
 15772 ;;		_TMR1_ReadTimer
 15773 ;; This function is called by:
 15774 ;;		_SwTimersInterrupt
 15775 ;; This function uses a non-reentrant model
 15776 ;;
 15777                           
 15778                           	psect	text90
 15779  001676                     __ptext90:
 15780                           	opt stack 0
 15781  001676                     _TMR_GetDeltaTime:
 15782                           	opt stack 19
 15783                           
 15784                           ;sw_timer.c: 90: static uint32_t retVal;
 15785                           ;sw_timer.c: 91: static uint16_t tmrVal;
 15786                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;incstack = 0
 15790  001676  ECD3  F01A         	call	_TMR1_ReadTimer	;wreg free
 15791  00167A  C060  F0F4         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 15792  00167E  C061  F0F5         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 15793                           
 15794                           ;sw_timer.c: 95: if (timerOverflow == 1)
 15795  001682  0100               	movlb	0	; () banked
 15796  001684  05FB               	decf	_timerOverflow& (0+255),w,b	;volatile
 15797  001686  A4D8               	btfss	status,2,c
 15798  001688  D065               	goto	l213
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;sw_timer.c: 96: {
 15802                           ;sw_timer.c: 97: timerOverflow = 0;
 15803  00168A  0E00               	movlw	0
 15804  00168C  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 15808  00168E  C0E8  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 15809  001692  C0E9  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 15810  001696  C0EA  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 15811  00169A  C0EB  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 15812  00169E  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 15813  0016A0  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15814  0016A2  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15815  0016A4  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15816  0016A6  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 15817  0016A8  0E00               	movlw	0
 15818  0016AA  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15819  0016AC  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15820  0016AE  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15821  0016B0  51F6               	movf	_reloadVal& (0+255),w,b	;volatile
 15822  0016B2  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 15823  0016B4  51F7               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 15824  0016B6  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 15825  0016B8  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 15826  0016BA  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 15827  0016BC  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15828  0016BE  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15829  0016C0  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 15830  0016C2  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 15831  0016C4  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15832  0016C6  0E00               	movlw	0
 15833  0016C8  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15834  0016CA  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 15835  0016CC  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 15836  0016CE  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 15837  0016D0  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 15838  0016D2  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 15839  0016D4  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 15840  0016D6  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 15841  0016D8  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 15842  0016DA  0E00               	movlw	0
 15843  0016DC  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 15844  0016DE  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 15845  0016E0  0E00               	movlw	0
 15846  0016E2  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 15847  0016E4  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 15848  0016E6  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 15849  0016E8  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 15850  0016EA  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 15851  0016EC  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 15852  0016EE  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 15853  0016F0  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 15854  0016F2  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 15855  0016F4  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 15856  0016F6  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 15857  0016F8  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 15858  0016FA  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 15859  0016FC  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 15860  0016FE  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 15861  001700  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 15862  001702  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 15863  001704  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 15864  001706  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 15865  001708  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 15866  00170A  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 15867  00170C  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 15868  00170E  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 15869  001710  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 15870  001712  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 15871  001714  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 15872  001716  0E00               	movlw	0
 15873  001718  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 15874  00171A  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 15875  00171C  0E00               	movlw	0
 15876  00171E  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 15877  001720  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 15878  001722  0E01               	movlw	1
 15879  001724  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 15880  001726  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 15881  001728  0E00               	movlw	0
 15882  00172A  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 15883  00172C  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 15887  00172E  C0F4  F0E8         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 15888  001732  C0F5  F0E9         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 15889  001736  6BEA               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
 15890  001738  6BEB               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;sw_timer.c: 100: ticksAdded = 0;
 15894  00173A  0E00               	movlw	0
 15895  00173C  6FEC               	movwf	_ticksAdded& (0+255),b	;volatile
 15896  00173E  0E00               	movlw	0
 15897  001740  6FED               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
 15898  001742  0E00               	movlw	0
 15899  001744  6FEE               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
 15900  001746  0E00               	movlw	0
 15901  001748  6FEF               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;sw_timer.c: 101: reloadVal = 0;
 15905  00174A  0E00               	movlw	0
 15906  00174C  6FF7               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 15907  00174E  0E00               	movlw	0
 15908  001750  6FF6               	movwf	_reloadVal& (0+255),b	;volatile
 15909                           
 15910                           ;sw_timer.c: 102: }
 15911  001752  D03D               	goto	l214
 15912  001754                     l213:
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;sw_timer.c: 103: else
 15916                           ;sw_timer.c: 104: {
 15917                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 15918                           
 15919                           ; BSR set to: 0
 15920  001754  C0E8  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 15921  001758  C0E9  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 15922  00175C  C0EA  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 15923  001760  C0EB  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 15924  001764  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 15925  001766  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15926  001768  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15927  00176A  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15928  00176C  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 15929  00176E  0E00               	movlw	0
 15930  001770  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15931  001772  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15932  001774  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15933  001776  C0F6  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 15934  00177A  C0F7  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 15935  00177E  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15936  001780  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15937  001782  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15938  001784  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15939  001786  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 15940  001788  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15941  00178A  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 15942  00178C  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15943  00178E  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 15944  001790  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 15945  001792  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 15946  001794  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 15947  001796  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 15948  001798  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 15949  00179A  0E00               	movlw	0
 15950  00179C  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 15951  00179E  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 15952  0017A0  0E00               	movlw	0
 15953  0017A2  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 15954  0017A4  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 15955  0017A6  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 15956  0017A8  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 15957  0017AA  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 15958  0017AC  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 15959  0017AE  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 15960  0017B0  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 15961  0017B2  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 15962  0017B4  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 15963  0017B6  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 15964  0017B8  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 15965  0017BA  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 15966  0017BC  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 15967                           
 15968                           ;sw_timer.c: 106: ticksAccounted += retVal;
 15969  0017BE  51E4               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 15970  0017C0  27E8               	addwf	_ticksAccounted& (0+255),f,b	;volatile
 15971  0017C2  51E5               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 15972  0017C4  23E9               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
 15973  0017C6  51E6               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 15974  0017C8  23EA               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
 15975  0017CA  51E7               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 15976  0017CC  23EB               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
 15977  0017CE                     l214:
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;sw_timer.c: 107: }
 15981                           ;sw_timer.c: 109: return retVal;
 15982                           
 15983                           ; BSR set to: 0
 15984  0017CE  C0E4  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 15985  0017D2  C0E5  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 15986  0017D6  C0E6  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 15987  0017DA  C0E7  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 15988  0017DE  0012               	return	
 15989  0017E0                     __end_of_TMR_GetDeltaTime:
 15990                           	opt stack 0
 15991                           tblptru	equ	0xFF8
 15992                           tblptrh	equ	0xFF7
 15993                           tblptrl	equ	0xFF6
 15994                           tablat	equ	0xFF5
 15995                           prodh	equ	0xFF4
 15996                           prodl	equ	0xFF3
 15997                           intcon	equ	0xFF2
 15998                           intcon2	equ	0xFF1
 15999                           intcon3	equ	0xFF0
 16000                           indf0	equ	0xFEF
 16001                           postinc0	equ	0xFEE
 16002                           plusw0	equ	0xFEB
 16003                           fsr0h	equ	0xFEA
 16004                           fsr0l	equ	0xFE9
 16005                           wreg	equ	0xFE8
 16006                           indf2	equ	0xFDF
 16007                           postinc2	equ	0xFDE
 16008                           postdec2	equ	0xFDD
 16009                           plusw2	equ	0xFDB
 16010                           fsr2h	equ	0xFDA
 16011                           fsr2l	equ	0xFD9
 16012                           status	equ	0xFD8
 16013                           
 16014 ;; *************** function _TMR1_ReadTimer *****************
 16015 ;; Defined at:
 16016 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 16017 ;; Parameters:    Size  Location     Type
 16018 ;;		None
 16019 ;; Auto vars:     Size  Location     Type
 16020 ;;  readVal         2    4[BANK0 ] unsigned int 
 16021 ;;  readValLow      1    7[BANK0 ] unsigned char 
 16022 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 16023 ;; Return value:  Size  Location     Type
 16024 ;;                  2    0[BANK0 ] unsigned int 
 16025 ;; Registers used:
 16026 ;;		wreg, status,2
 16027 ;; Tracked objects:
 16028 ;;		On entry : 0/0
 16029 ;;		On exit  : 0/0
 16030 ;;		Unchanged: 0/0
 16031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16033 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16036 ;;Total ram usage:        8 bytes
 16037 ;; Hardware stack levels used:    1
 16038 ;; Hardware stack levels required when called:    7
 16039 ;; This function calls:
 16040 ;;		Nothing
 16041 ;; This function is called by:
 16042 ;;		_TMR_GetDeltaTime
 16043 ;;		_TMR_SwapTimer
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047                           	psect	text91
 16048  0035A6                     __ptext91:
 16049                           	opt stack 0
 16050  0035A6                     _TMR1_ReadTimer:
 16051                           	opt stack 19
 16052                           
 16053                           ;tmr1.c: 107: uint16_t readVal;
 16054                           ;tmr1.c: 108: uint8_t readValHigh;
 16055                           ;tmr1.c: 109: uint8_t readValLow;
 16056                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;incstack = 0
 16060  0035A6  82CD               	bsf	4045,1,c	;volatile
 16061                           
 16062                           ;tmr1.c: 113: readValLow = TMR1L;
 16063  0035A8  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 16064                           
 16065                           ;tmr1.c: 114: readValHigh = TMR1H;
 16066  0035AC  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 16067                           
 16068                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 16069  0035B0  0100               	movlb	0	; () banked
 16070  0035B2  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 16071  0035B4  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 16072  0035B6  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 16073  0035B8  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 16074  0035BA  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 16075                           
 16076                           ; BSR set to: 0
 16077                           ;tmr1.c: 118: return readVal;
 16078  0035BE  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 16079  0035C2  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 16080  0035C6  0012               	return	
 16081  0035C8                     __end_of_TMR1_ReadTimer:
 16082                           	opt stack 0
 16083                           tblptru	equ	0xFF8
 16084                           tblptrh	equ	0xFF7
 16085                           tblptrl	equ	0xFF6
 16086                           tablat	equ	0xFF5
 16087                           prodh	equ	0xFF4
 16088                           prodl	equ	0xFF3
 16089                           intcon	equ	0xFF2
 16090                           intcon2	equ	0xFF1
 16091                           intcon3	equ	0xFF0
 16092                           indf0	equ	0xFEF
 16093                           postinc0	equ	0xFEE
 16094                           plusw0	equ	0xFEB
 16095                           fsr0h	equ	0xFEA
 16096                           fsr0l	equ	0xFE9
 16097                           wreg	equ	0xFE8
 16098                           indf2	equ	0xFDF
 16099                           postinc2	equ	0xFDE
 16100                           postdec2	equ	0xFDD
 16101                           plusw2	equ	0xFDB
 16102                           fsr2h	equ	0xFDA
 16103                           fsr2l	equ	0xFD9
 16104                           status	equ	0xFD8
 16105                           
 16106 ;; *************** function _SwTimerSetTimeout *****************
 16107 ;; Defined at:
 16108 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  timerId         1    wreg     unsigned char 
 16111 ;;  timeout         4    0[BANK0 ] unsigned long 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  timerId         1    8[BANK0 ] unsigned char 
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16118 ;; Tracked objects:
 16119 ;;		On entry : 0/0
 16120 ;;		On exit  : 0/0
 16121 ;;		Unchanged: 0/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;Total ram usage:        9 bytes
 16128 ;; Hardware stack levels used:    1
 16129 ;; Hardware stack levels required when called:    7
 16130 ;; This function calls:
 16131 ;;		Nothing
 16132 ;; This function is called by:
 16133 ;;		_RADIO_Transmit
 16134 ;;		_LORAWAN_TxDone
 16135 ;;		_LORAWAN_RxTimeout
 16136 ;;		_DutyCycleCallback
 16137 ;;		_LORAWAN_Join
 16138 ;;		_LORAWAN_LinkCheckConfigure
 16139 ;;		_LORAWAN_LinkCheckCallback
 16140 ;;		_UpdateRetransmissionAckTimeoutState
 16141 ;;		_UpdateJoinSuccessState
 16142 ;;		_RADIO_ReceiveStart
 16143 ;;		_StartReTxTimer
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text92
 16148  0032DE                     __ptext92:
 16149                           	opt stack 0
 16150  0032DE                     _SwTimerSetTimeout:
 16151                           	opt stack 22
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;incstack = 0
 16155                           ;SwTimerSetTimeout@timerId stored from wreg
 16156  0032DE  0100               	movlb	0	; () banked
 16157  0032E0  6F68               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 16158                           
 16159                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 16160  0032E2  9EF2               	bcf	intcon,7,c	;volatile
 16161                           
 16162                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 16163  0032E4  0EE0               	movlw	224
 16164  0032E6  0100               	movlb	0	; () banked
 16165  0032E8  2560               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 16166  0032EA  6F64               	movwf	??_SwTimerSetTimeout& (0+255),b
 16167  0032EC  0EFF               	movlw	255
 16168  0032EE  2161               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 16169  0032F0  6F65               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 16170  0032F2  0EFF               	movlw	255
 16171  0032F4  2162               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 16172  0032F6  6F66               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 16173  0032F8  0EFF               	movlw	255
 16174  0032FA  2163               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 16175  0032FC  6F67               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 16176  0032FE  5168               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 16177  003300  0D08               	mullw	8
 16178  003302  0E00               	movlw	low _swTimers
 16179  003304  24F3               	addwf	prodl,w,c
 16180  003306  6ED9               	movwf	fsr2l,c
 16181  003308  0E03               	movlw	high _swTimers
 16182  00330A  20F4               	addwfc	prodh,w,c
 16183  00330C  6EDA               	movwf	fsr2h,c
 16184  00330E  C064  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 16185  003312  C065  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 16186  003316  C066  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 16187  00331A  C067  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 16191  00331E  8EF2               	bsf	intcon,7,c	;volatile
 16192                           
 16193                           ; BSR set to: 0
 16194  003320  0012               	return		;funcret
 16195  003322                     __end_of_SwTimerSetTimeout:
 16196                           	opt stack 0
 16197                           tblptru	equ	0xFF8
 16198                           tblptrh	equ	0xFF7
 16199                           tblptrl	equ	0xFF6
 16200                           tablat	equ	0xFF5
 16201                           prodh	equ	0xFF4
 16202                           prodl	equ	0xFF3
 16203                           intcon	equ	0xFF2
 16204                           intcon2	equ	0xFF1
 16205                           intcon3	equ	0xFF0
 16206                           indf0	equ	0xFEF
 16207                           postinc0	equ	0xFEE
 16208                           plusw0	equ	0xFEB
 16209                           fsr0h	equ	0xFEA
 16210                           fsr0l	equ	0xFE9
 16211                           wreg	equ	0xFE8
 16212                           indf2	equ	0xFDF
 16213                           postinc2	equ	0xFDE
 16214                           postdec2	equ	0xFDD
 16215                           plusw2	equ	0xFDB
 16216                           fsr2h	equ	0xFDA
 16217                           fsr2l	equ	0xFD9
 16218                           status	equ	0xFD8
 16219                           
 16220 ;; *************** function _InitDefault868Channels *****************
 16221 ;; Defined at:
 16222 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;		None
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  i               1   11[BANK0 ] unsigned char 
 16227 ;; Return value:  Size  Location     Type
 16228 ;;                  1    wreg      void 
 16229 ;; Registers used:
 16230 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16231 ;; Tracked objects:
 16232 ;;		On entry : 0/0
 16233 ;;		On exit  : 0/0
 16234 ;;		Unchanged: 0/0
 16235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16240 ;;Total ram usage:        1 bytes
 16241 ;; Hardware stack levels used:    1
 16242 ;; Hardware stack levels required when called:    8
 16243 ;; This function calls:
 16244 ;;		_memcpy
 16245 ;;		_memset
 16246 ;; This function is called by:
 16247 ;;		_LORAWAN_Reset
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           	psect	text93
 16252  002AB4                     __ptext93:
 16253                           	opt stack 0
 16254  002AB4                     _InitDefault868Channels:
 16255                           	opt stack 20
 16256                           
 16257                           ;lorawan_eu.c: 981: uint8_t i;
 16258                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 16259                           
 16260                           ; BSR set to: 0
 16261                           ;incstack = 0
 16262  002AB4  0E00               	movlw	low _Channels
 16263  002AB6  0100               	movlb	0	; () banked
 16264  002AB8  6F60               	movwf	memset@p1& (0+255),b
 16265  002ABA  0E04               	movlw	high _Channels
 16266  002ABC  6F61               	movwf	(memset@p1+1)& (0+255),b
 16267  002ABE  0E00               	movlw	0
 16268  002AC0  6F63               	movwf	(memset@c+1)& (0+255),b
 16269  002AC2  0E00               	movlw	0
 16270  002AC4  6F62               	movwf	memset@c& (0+255),b
 16271  002AC6  0E00               	movlw	0
 16272  002AC8  6F65               	movwf	(memset@n+1)& (0+255),b
 16273  002ACA  0EE0               	movlw	224
 16274  002ACC  6F64               	movwf	memset@n& (0+255),b
 16275  002ACE  EC18  F01A         	call	_memset	;wreg free
 16276                           
 16277                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 16278  002AD2  0E00               	movlw	low _Channels
 16279  002AD4  0100               	movlb	0	; () banked
 16280  002AD6  6F60               	movwf	memcpy@d1& (0+255),b
 16281  002AD8  0E04               	movlw	high _Channels
 16282  002ADA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16283  002ADC  0ED2               	movlw	low _DefaultChannels868
 16284  002ADE  6F62               	movwf	memcpy@s1& (0+255),b
 16285  002AE0  0EFF               	movlw	high _DefaultChannels868
 16286  002AE2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16287  002AE4  0E00               	movlw	0
 16288  002AE6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16289  002AE8  0E2A               	movlw	42
 16290  002AEA  6F64               	movwf	memcpy@n& (0+255),b
 16291  002AEC  EC8C  F017         	call	_memcpy	;wreg free
 16292                           
 16293                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 16294  002AF0  0E03               	movlw	3
 16295  002AF2  0100               	movlb	0	; () banked
 16296  002AF4  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 16297  002AF6                     l10466:
 16298                           
 16299                           ; BSR set to: 0
 16300  002AF6  0E0F               	movlw	15
 16301  002AF8  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 16302  002AFA  D001               	goto	l1198
 16303  002AFC  0012               	return	
 16304  002AFE                     l1198:
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;lorawan_eu.c: 986: {
 16308                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 16309                           
 16310                           ; BSR set to: 0
 16311  002AFE  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 16312  002B00  0D0E               	mullw	14
 16313  002B02  0E06               	movlw	6
 16314  002B04  26F3               	addwf	prodl,f,c
 16315  002B06  0E00               	movlw	0
 16316  002B08  22F4               	addwfc	prodh,f,c
 16317  002B0A  0E00               	movlw	low _Channels
 16318  002B0C  24F3               	addwf	prodl,w,c
 16319  002B0E  6ED9               	movwf	fsr2l,c
 16320  002B10  0E04               	movlw	high _Channels
 16321  002B12  20F4               	addwfc	prodh,w,c
 16322  002B14  6EDA               	movwf	fsr2h,c
 16323  002B16  0EFF               	movlw	255
 16324  002B18  6EDE               	movwf	postinc2,c
 16325  002B1A  0EFF               	movlw	255
 16326  002B1C  6EDD               	movwf	postdec2,c
 16327                           
 16328                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 16329  002B1E  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 16330  002B20  0D0E               	mullw	14
 16331  002B22  0E05               	movlw	5
 16332  002B24  26F3               	addwf	prodl,f,c
 16333  002B26  0E00               	movlw	0
 16334  002B28  22F4               	addwfc	prodh,f,c
 16335  002B2A  0E00               	movlw	low _Channels
 16336  002B2C  24F3               	addwf	prodl,w,c
 16337  002B2E  6ED9               	movwf	fsr2l,c
 16338  002B30  0E04               	movlw	high _Channels
 16339  002B32  20F4               	addwfc	prodh,w,c
 16340  002B34  6EDA               	movwf	fsr2h,c
 16341  002B36  0EFF               	movlw	255
 16342  002B38  6EDF               	movwf	indf2,c
 16343                           
 16344                           ; BSR set to: 0
 16345  002B3A  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 16346  002B3C  D7DC               	goto	l10466
 16347  002B3E                     __end_of_InitDefault868Channels:
 16348                           	opt stack 0
 16349                           tblptru	equ	0xFF8
 16350                           tblptrh	equ	0xFF7
 16351                           tblptrl	equ	0xFF6
 16352                           tablat	equ	0xFF5
 16353                           prodh	equ	0xFF4
 16354                           prodl	equ	0xFF3
 16355                           intcon	equ	0xFF2
 16356                           intcon2	equ	0xFF1
 16357                           intcon3	equ	0xFF0
 16358                           indf0	equ	0xFEF
 16359                           postinc0	equ	0xFEE
 16360                           plusw0	equ	0xFEB
 16361                           fsr0h	equ	0xFEA
 16362                           fsr0l	equ	0xFE9
 16363                           wreg	equ	0xFE8
 16364                           indf2	equ	0xFDF
 16365                           postinc2	equ	0xFDE
 16366                           postdec2	equ	0xFDD
 16367                           plusw2	equ	0xFDB
 16368                           fsr2h	equ	0xFDA
 16369                           fsr2l	equ	0xFD9
 16370                           status	equ	0xFD8
 16371                           
 16372 ;; *************** function _InitDefault433Channels *****************
 16373 ;; Defined at:
 16374 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;  i               1   11[BANK0 ] unsigned char 
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;Total ram usage:        1 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    8
 16395 ;; This function calls:
 16396 ;;		_memcpy
 16397 ;;		_memset
 16398 ;; This function is called by:
 16399 ;;		_LORAWAN_Reset
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text94
 16404  002B3E                     __ptext94:
 16405                           	opt stack 0
 16406  002B3E                     _InitDefault433Channels:
 16407                           	opt stack 20
 16408                           
 16409                           ;lorawan_eu.c: 996: uint8_t i;
 16410                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;incstack = 0
 16414  002B3E  0E00               	movlw	low _Channels
 16415  002B40  0100               	movlb	0	; () banked
 16416  002B42  6F60               	movwf	memset@p1& (0+255),b
 16417  002B44  0E04               	movlw	high _Channels
 16418  002B46  6F61               	movwf	(memset@p1+1)& (0+255),b
 16419  002B48  0E00               	movlw	0
 16420  002B4A  6F63               	movwf	(memset@c+1)& (0+255),b
 16421  002B4C  0E00               	movlw	0
 16422  002B4E  6F62               	movwf	memset@c& (0+255),b
 16423  002B50  0E00               	movlw	0
 16424  002B52  6F65               	movwf	(memset@n+1)& (0+255),b
 16425  002B54  0EE0               	movlw	224
 16426  002B56  6F64               	movwf	memset@n& (0+255),b
 16427  002B58  EC18  F01A         	call	_memset	;wreg free
 16428                           
 16429                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 16430  002B5C  0E00               	movlw	low _Channels
 16431  002B5E  0100               	movlb	0	; () banked
 16432  002B60  6F60               	movwf	memcpy@d1& (0+255),b
 16433  002B62  0E04               	movlw	high _Channels
 16434  002B64  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16435  002B66  0EA8               	movlw	low _DefaultChannels433
 16436  002B68  6F62               	movwf	memcpy@s1& (0+255),b
 16437  002B6A  0EFF               	movlw	high _DefaultChannels433
 16438  002B6C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16439  002B6E  0E00               	movlw	0
 16440  002B70  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16441  002B72  0E2A               	movlw	42
 16442  002B74  6F64               	movwf	memcpy@n& (0+255),b
 16443  002B76  EC8C  F017         	call	_memcpy	;wreg free
 16444                           
 16445                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 16446  002B7A  0E03               	movlw	3
 16447  002B7C  0100               	movlb	0	; () banked
 16448  002B7E  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 16449  002B80                     l10482:
 16450                           
 16451                           ; BSR set to: 0
 16452  002B80  0E0F               	movlw	15
 16453  002B82  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 16454  002B84  D001               	goto	l1203
 16455  002B86  0012               	return	
 16456  002B88                     l1203:
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;lorawan_eu.c: 1001: {
 16460                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 16461                           
 16462                           ; BSR set to: 0
 16463  002B88  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 16464  002B8A  0D0E               	mullw	14
 16465  002B8C  0E06               	movlw	6
 16466  002B8E  26F3               	addwf	prodl,f,c
 16467  002B90  0E00               	movlw	0
 16468  002B92  22F4               	addwfc	prodh,f,c
 16469  002B94  0E00               	movlw	low _Channels
 16470  002B96  24F3               	addwf	prodl,w,c
 16471  002B98  6ED9               	movwf	fsr2l,c
 16472  002B9A  0E04               	movlw	high _Channels
 16473  002B9C  20F4               	addwfc	prodh,w,c
 16474  002B9E  6EDA               	movwf	fsr2h,c
 16475  002BA0  0EFF               	movlw	255
 16476  002BA2  6EDE               	movwf	postinc2,c
 16477  002BA4  0EFF               	movlw	255
 16478  002BA6  6EDD               	movwf	postdec2,c
 16479                           
 16480                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 16481  002BA8  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 16482  002BAA  0D0E               	mullw	14
 16483  002BAC  0E05               	movlw	5
 16484  002BAE  26F3               	addwf	prodl,f,c
 16485  002BB0  0E00               	movlw	0
 16486  002BB2  22F4               	addwfc	prodh,f,c
 16487  002BB4  0E00               	movlw	low _Channels
 16488  002BB6  24F3               	addwf	prodl,w,c
 16489  002BB8  6ED9               	movwf	fsr2l,c
 16490  002BBA  0E04               	movlw	high _Channels
 16491  002BBC  20F4               	addwfc	prodh,w,c
 16492  002BBE  6EDA               	movwf	fsr2h,c
 16493  002BC0  0EFF               	movlw	255
 16494  002BC2  6EDF               	movwf	indf2,c
 16495                           
 16496                           ; BSR set to: 0
 16497  002BC4  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 16498  002BC6  D7DC               	goto	l10482
 16499  002BC8                     __end_of_InitDefault433Channels:
 16500                           	opt stack 0
 16501                           tblptru	equ	0xFF8
 16502                           tblptrh	equ	0xFF7
 16503                           tblptrl	equ	0xFF6
 16504                           tablat	equ	0xFF5
 16505                           prodh	equ	0xFF4
 16506                           prodl	equ	0xFF3
 16507                           intcon	equ	0xFF2
 16508                           intcon2	equ	0xFF1
 16509                           intcon3	equ	0xFF0
 16510                           indf0	equ	0xFEF
 16511                           postinc0	equ	0xFEE
 16512                           plusw0	equ	0xFEB
 16513                           fsr0h	equ	0xFEA
 16514                           fsr0l	equ	0xFE9
 16515                           wreg	equ	0xFE8
 16516                           indf2	equ	0xFDF
 16517                           postinc2	equ	0xFDE
 16518                           postdec2	equ	0xFDD
 16519                           plusw2	equ	0xFDB
 16520                           fsr2h	equ	0xFDA
 16521                           fsr2l	equ	0xFD9
 16522                           status	equ	0xFD8
 16523                           
 16524 ;; *************** function _memset *****************
 16525 ;; Defined at:
 16526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 16527 ;; Parameters:    Size  Location     Type
 16528 ;;  p1              2    0[BANK0 ] PTR void 
 16529 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 16530 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 16531 ;;  c               2    2[BANK0 ] int 
 16532 ;;  n               2    4[BANK0 ] unsigned int 
 16533 ;; Auto vars:     Size  Location     Type
 16534 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16535 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 16536 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  2    0[BANK0 ] PTR void 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16550 ;;Total ram usage:        8 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; Hardware stack levels required when called:    7
 16553 ;; This function calls:
 16554 ;;		Nothing
 16555 ;; This function is called by:
 16556 ;;		_AESCmac
 16557 ;;		_GenerateSubkey
 16558 ;;		_LORAWAN_Reset
 16559 ;;		_InitDefault868Channels
 16560 ;;		_InitDefault433Channels
 16561 ;;		_PrepareJoinRequestFrame
 16562 ;;		_AssemblePacket
 16563 ;;		_PrepareSessionKeys
 16564 ;;		_AssembleEncryptionBlock
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text95
 16569  003430                     __ptext95:
 16570                           	opt stack 0
 16571  003430                     _memset:
 16572                           	opt stack 21
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;incstack = 0
 16576  003430  C060  F066         	movff	memset@p1,memset@p
 16577  003434  C061  F067         	movff	memset@p1+1,memset@p+1
 16578  003438  D009               	goto	l2924
 16579  00343A                     l7842:
 16580  00343A  C066  FFD9         	movff	memset@p,fsr2l
 16581  00343E  C067  FFDA         	movff	memset@p+1,fsr2h
 16582  003442  C062  FFDF         	movff	memset@c,indf2
 16583  003446  0100               	movlb	0	; () banked
 16584  003448  4B66               	infsnz	memset@p& (0+255),f,b
 16585  00344A  2B67               	incf	(memset@p+1)& (0+255),f,b
 16586  00344C                     l2924:
 16587                           
 16588                           ; BSR set to: 0
 16589  00344C  0100               	movlb	0	; () banked
 16590  00344E  0764               	decf	memset@n& (0+255),f,b
 16591  003450  A0D8               	btfss	status,0,c
 16592  003452  0765               	decf	(memset@n+1)& (0+255),f,b
 16593  003454  2964               	incf	memset@n& (0+255),w,b
 16594  003456  E1F1               	bnz	l7842
 16595  003458  2965               	incf	(memset@n+1)& (0+255),w,b
 16596  00345A  B4D8               	btfsc	status,2,c
 16597  00345C  0012               	return	
 16598  00345E  D7ED               	goto	l2925
 16599  003460                     __end_of_memset:
 16600                           	opt stack 0
 16601                           tblptru	equ	0xFF8
 16602                           tblptrh	equ	0xFF7
 16603                           tblptrl	equ	0xFF6
 16604                           tablat	equ	0xFF5
 16605                           prodh	equ	0xFF4
 16606                           prodl	equ	0xFF3
 16607                           intcon	equ	0xFF2
 16608                           intcon2	equ	0xFF1
 16609                           intcon3	equ	0xFF0
 16610                           indf0	equ	0xFEF
 16611                           postinc0	equ	0xFEE
 16612                           plusw0	equ	0xFEB
 16613                           fsr0h	equ	0xFEA
 16614                           fsr0l	equ	0xFE9
 16615                           wreg	equ	0xFE8
 16616                           indf2	equ	0xFDF
 16617                           postinc2	equ	0xFDE
 16618                           postdec2	equ	0xFDD
 16619                           plusw2	equ	0xFDB
 16620                           fsr2h	equ	0xFDA
 16621                           fsr2l	equ	0xFD9
 16622                           status	equ	0xFD8
 16623                           
 16624 ;; *************** function _memcpy *****************
 16625 ;; Defined at:
 16626 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;  d1              2    0[BANK0 ] PTR void 
 16629 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 16630 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 16631 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 16632 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 16633 ;;  s1              2    2[BANK0 ] PTR const void 
 16634 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 16635 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 16636 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 16637 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 16638 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 16639 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 16640 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 16641 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 16642 ;;  n               2    4[BANK0 ] unsigned int 
 16643 ;; Auto vars:     Size  Location     Type
 16644 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 16645 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 16646 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 16647 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 16648 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 16649 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 16650 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 16651 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 16652 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 16653 ;;  d               2    6[BANK0 ] PTR unsigned char 
 16654 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 16655 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 16656 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 16657 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 16658 ;;  tmp             1   10[BANK0 ] unsigned char 
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  2    0[BANK0 ] PTR void 
 16661 ;; Registers used:
 16662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16668 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16669 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16671 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16672 ;;Total ram usage:       11 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    7
 16675 ;; This function calls:
 16676 ;;		Nothing
 16677 ;; This function is called by:
 16678 ;;		_AESCmac
 16679 ;;		_RADIO_SetFSKSyncWord
 16680 ;;		_InitDefault868Channels
 16681 ;;		_InitDefault433Channels
 16682 ;;		_AESEncodeLoRa
 16683 ;;		_LORAWAN_SetNetworkSessionKey
 16684 ;;		_LORAWAN_SetApplicationSessionKey
 16685 ;;		_PrepareJoinRequestFrame
 16686 ;;		_ComputeMic
 16687 ;;		_RADIO_GetData
 16688 ;;		_RADIO_GetFSKSyncWord
 16689 ;;		_UpdateCfList
 16690 ;;		_LORAWAN_SetMcastNetworkSessionKey
 16691 ;;		_LORAWAN_SetMcastApplicationSessionKey
 16692 ;;		_LORAWAN_GetMcastApplicationSessionKey
 16693 ;;		_LORAWAN_GetMcastNetworkSessionKey
 16694 ;;		_LORAWAN_SetDeviceEui
 16695 ;;		_LORAWAN_GetDeviceEui
 16696 ;;		_LORAWAN_SetApplicationEui
 16697 ;;		_LORAWAN_GetApplicationEui
 16698 ;;		_LORAWAN_GetNetworkSessionKey
 16699 ;;		_LORAWAN_GetApplicationSessionKey
 16700 ;;		_LORAWAN_SetApplicationKey
 16701 ;;		_LORAWAN_GetApplicationKey
 16702 ;;		_LORAWAN_RxDone
 16703 ;;		_AssemblePacket
 16704 ;;		_PrepareSessionKeys
 16705 ;;		_AssembleEncryptionBlock
 16706 ;;		_ExtractMic
 16707 ;; This function uses a non-reentrant model
 16708 ;;
 16709                           
 16710                           	psect	text96
 16711  002F18                     __ptext96:
 16712                           	opt stack 0
 16713  002F18                     _memcpy:
 16714                           	opt stack 22
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;incstack = 0
 16718  002F18  C062  F068         	movff	memcpy@s1,memcpy@s
 16719  002F1C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 16720  002F20  C060  F066         	movff	memcpy@d1,memcpy@d
 16721  002F24  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 16722  002F28  D01D               	goto	l2918
 16723  002F2A                     l7644:
 16724  002F2A  C068  FFF6         	movff	memcpy@s,tblptrl
 16725  002F2E  C069  FFF7         	movff	memcpy@s+1,tblptrh
 16726  002F32  0E00               	movlw	low (__mediumconst shr (0+16))
 16727  002F34  6EF8               	movwf	tblptru,c
 16728  002F36  0E0F               	movlw	(high __ramtop+-1)
 16729  002F38  64F7               	cpfsgt	tblptrh,c
 16730  002F3A  D003               	bra	u6447
 16731  002F3C  0008               	tblrd		*
 16732  002F3E  50F5               	movf	tablat,w,c
 16733  002F40  D005               	bra	u6440
 16734  002F42                     u6447:
 16735  002F42  CFF6 FFE9          	movff	tblptrl,fsr0l
 16736  002F46  CFF7 FFEA          	movff	tblptrh,fsr0h
 16737  002F4A  50EF               	movf	indf0,w,c
 16738  002F4C                     u6440:
 16739  002F4C  0100               	movlb	0	; () banked
 16740  002F4E  6F6A               	movwf	memcpy@tmp& (0+255),b
 16741                           
 16742                           ; BSR set to: 0
 16743  002F50  4B68               	infsnz	memcpy@s& (0+255),f,b
 16744  002F52  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 16745                           
 16746                           ; BSR set to: 0
 16747  002F54  C066  FFD9         	movff	memcpy@d,fsr2l
 16748  002F58  C067  FFDA         	movff	memcpy@d+1,fsr2h
 16749  002F5C  C06A  FFDF         	movff	memcpy@tmp,indf2
 16750                           
 16751                           ; BSR set to: 0
 16752  002F60  4B66               	infsnz	memcpy@d& (0+255),f,b
 16753  002F62  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 16754  002F64                     l2918:
 16755                           
 16756                           ; BSR set to: 0
 16757  002F64  0100               	movlb	0	; () banked
 16758  002F66  0764               	decf	memcpy@n& (0+255),f,b
 16759  002F68  A0D8               	btfss	status,0,c
 16760  002F6A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 16761  002F6C  2964               	incf	memcpy@n& (0+255),w,b
 16762  002F6E  E1DD               	bnz	l7644
 16763  002F70  2965               	incf	(memcpy@n+1)& (0+255),w,b
 16764  002F72  B4D8               	btfsc	status,2,c
 16765  002F74  0012               	return	
 16766  002F76  D7D9               	goto	l2919
 16767  002F78                     __end_of_memcpy:
 16768                           	opt stack 0
 16769                           tblptru	equ	0xFF8
 16770                           tblptrh	equ	0xFF7
 16771                           tblptrl	equ	0xFF6
 16772                           tablat	equ	0xFF5
 16773                           prodh	equ	0xFF4
 16774                           prodl	equ	0xFF3
 16775                           intcon	equ	0xFF2
 16776                           intcon2	equ	0xFF1
 16777                           intcon3	equ	0xFF0
 16778                           indf0	equ	0xFEF
 16779                           postinc0	equ	0xFEE
 16780                           plusw0	equ	0xFEB
 16781                           fsr0h	equ	0xFEA
 16782                           fsr0l	equ	0xFE9
 16783                           wreg	equ	0xFE8
 16784                           indf2	equ	0xFDF
 16785                           postinc2	equ	0xFDE
 16786                           postdec2	equ	0xFDD
 16787                           plusw2	equ	0xFDB
 16788                           fsr2h	equ	0xFDA
 16789                           fsr2l	equ	0xFD9
 16790                           status	equ	0xFD8
 16791                           
 16792 ;; *************** function _CreateAllSoftwareTimers *****************
 16793 ;; Defined at:
 16794 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;		None
 16799 ;; Return value:  Size  Location     Type
 16800 ;;                  1    wreg      void 
 16801 ;; Registers used:
 16802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16803 ;; Tracked objects:
 16804 ;;		On entry : 0/0
 16805 ;;		On exit  : 0/0
 16806 ;;		Unchanged: 0/0
 16807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16812 ;;Total ram usage:        0 bytes
 16813 ;; Hardware stack levels used:    1
 16814 ;; Hardware stack levels required when called:    8
 16815 ;; This function calls:
 16816 ;;		_SwTimerCreate
 16817 ;; This function is called by:
 16818 ;;		_LORAWAN_Init
 16819 ;; This function uses a non-reentrant model
 16820 ;;
 16821                           
 16822                           	psect	text97
 16823  00317A                     __ptext97:
 16824                           	opt stack 0
 16825  00317A                     _CreateAllSoftwareTimers:
 16826                           	opt stack 21
 16827                           
 16828                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;incstack = 0
 16832  00317A  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16833  00317E  0102               	movlb	2	; () banked
 16834  003180  6FE2               	movwf	(_loRa+226)& (0+255),b
 16835                           
 16836                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 16837  003182  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16838  003186  0102               	movlb	2	; () banked
 16839  003188  6FE3               	movwf	(_loRa+227)& (0+255),b
 16840                           
 16841                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 16842  00318A  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16843  00318E  0102               	movlb	2	; () banked
 16844  003190  6FE4               	movwf	(_loRa+228)& (0+255),b
 16845                           
 16846                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 16847  003192  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16848  003196  0102               	movlb	2	; () banked
 16849  003198  6FE5               	movwf	(_loRa+229)& (0+255),b
 16850                           
 16851                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 16852  00319A  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16853  00319E  0102               	movlb	2	; () banked
 16854  0031A0  6FE7               	movwf	(_loRa+231)& (0+255),b
 16855                           
 16856                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 16857  0031A2  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16858  0031A6  0102               	movlb	2	; () banked
 16859  0031A8  6FE8               	movwf	(_loRa+232)& (0+255),b
 16860                           
 16861                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 16862  0031AA  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16863  0031AE  0102               	movlb	2	; () banked
 16864  0031B0  6FE6               	movwf	(_loRa+230)& (0+255),b
 16865                           
 16866                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 16867  0031B2  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16868  0031B6  0102               	movlb	2	; () banked
 16869  0031B8  6FEA               	movwf	(_loRa+234)& (0+255),b
 16870                           
 16871                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 16872  0031BA  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16873  0031BE  0102               	movlb	2	; () banked
 16874  0031C0  6FF3               	movwf	(_loRa+243)& (0+255),b
 16875                           
 16876                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 16877  0031C2  ECCF  F014         	call	_SwTimerCreate	;wreg free
 16878  0031C6  0102               	movlb	2	; () banked
 16879  0031C8  6FE9               	movwf	(_loRa+233)& (0+255),b
 16880                           
 16881                           ; BSR set to: 2
 16882  0031CA  0012               	return		;funcret
 16883  0031CC                     __end_of_CreateAllSoftwareTimers:
 16884                           	opt stack 0
 16885                           tblptru	equ	0xFF8
 16886                           tblptrh	equ	0xFF7
 16887                           tblptrl	equ	0xFF6
 16888                           tablat	equ	0xFF5
 16889                           prodh	equ	0xFF4
 16890                           prodl	equ	0xFF3
 16891                           intcon	equ	0xFF2
 16892                           intcon2	equ	0xFF1
 16893                           intcon3	equ	0xFF0
 16894                           indf0	equ	0xFEF
 16895                           postinc0	equ	0xFEE
 16896                           plusw0	equ	0xFEB
 16897                           fsr0h	equ	0xFEA
 16898                           fsr0l	equ	0xFE9
 16899                           wreg	equ	0xFE8
 16900                           indf2	equ	0xFDF
 16901                           postinc2	equ	0xFDE
 16902                           postdec2	equ	0xFDD
 16903                           plusw2	equ	0xFDB
 16904                           fsr2h	equ	0xFDA
 16905                           fsr2l	equ	0xFD9
 16906                           status	equ	0xFD8
 16907                           
 16908 ;; *************** function _SwTimerCreate *****************
 16909 ;; Defined at:
 16910 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 16911 ;; Parameters:    Size  Location     Type
 16912 ;;		None
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;  retVal          1    0[BANK0 ] unsigned char 
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  1    wreg      unsigned char 
 16917 ;; Registers used:
 16918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16919 ;; Tracked objects:
 16920 ;;		On entry : 0/0
 16921 ;;		On exit  : 0/0
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;Total ram usage:        1 bytes
 16929 ;; Hardware stack levels used:    1
 16930 ;; Hardware stack levels required when called:    7
 16931 ;; This function calls:
 16932 ;;		Nothing
 16933 ;; This function is called by:
 16934 ;;		_RADIO_Init
 16935 ;;		_CreateAllSoftwareTimers
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           	psect	text98
 16940  00299E                     __ptext98:
 16941                           	opt stack 0
 16942  00299E                     _SwTimerCreate:
 16943                           	opt stack 21
 16944                           
 16945                           ;sw_timer.c: 156: uint8_t retVal;
 16946                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 16947                           
 16948                           ; BSR set to: 2
 16949                           ;incstack = 0
 16950  00299E  0E14               	movlw	20
 16951  0029A0  0100               	movlb	0	; () banked
 16952  0029A2  61FA               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 16953  0029A4  D03E               	goto	l237
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;sw_timer.c: 158: {
 16957                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 16958  0029A6  9EF2               	bcf	intcon,7,c	;volatile
 16959                           
 16960                           ;sw_timer.c: 160: retVal = allocatedTimers;
 16961  0029A8  C0FA  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 16965  0029AC  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 16966  0029AE  0D08               	mullw	8
 16967  0029B0  0E04               	movlw	4
 16968  0029B2  26F3               	addwf	prodl,f,c
 16969  0029B4  0E00               	movlw	0
 16970  0029B6  22F4               	addwfc	prodh,f,c
 16971  0029B8  0E00               	movlw	low _swTimers
 16972  0029BA  24F3               	addwf	prodl,w,c
 16973  0029BC  6ED9               	movwf	fsr2l,c
 16974  0029BE  0E03               	movlw	high _swTimers
 16975  0029C0  20F4               	addwfc	prodh,w,c
 16976  0029C2  6EDA               	movwf	fsr2h,c
 16977  0029C4  0E00               	movlw	0
 16978  0029C6  6EDF               	movwf	indf2,c
 16979                           
 16980                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 16981  0029C8  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 16982  0029CA  0D08               	mullw	8
 16983  0029CC  0E00               	movlw	low _swTimers
 16984  0029CE  24F3               	addwf	prodl,w,c
 16985  0029D0  6ED9               	movwf	fsr2l,c
 16986  0029D2  0E03               	movlw	high _swTimers
 16987  0029D4  20F4               	addwfc	prodh,w,c
 16988  0029D6  6EDA               	movwf	fsr2h,c
 16989  0029D8  6ADE               	clrf	postinc2,c
 16990  0029DA  6ADE               	clrf	postinc2,c
 16991  0029DC  6ADE               	clrf	postinc2,c
 16992  0029DE  6ADD               	clrf	postdec2,c
 16993                           
 16994                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 16995  0029E0  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 16996  0029E2  0D08               	mullw	8
 16997  0029E4  0E05               	movlw	5
 16998  0029E6  26F3               	addwf	prodl,f,c
 16999  0029E8  0E00               	movlw	0
 17000  0029EA  22F4               	addwfc	prodh,f,c
 17001  0029EC  0E00               	movlw	low _swTimers
 17002  0029EE  24F3               	addwf	prodl,w,c
 17003  0029F0  6ED9               	movwf	fsr2l,c
 17004  0029F2  0E03               	movlw	high _swTimers
 17005  0029F4  20F4               	addwfc	prodh,w,c
 17006  0029F6  6EDA               	movwf	fsr2h,c
 17007  0029F8  0E00               	movlw	0
 17008  0029FA  6EDF               	movwf	indf2,c
 17009                           
 17010                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 17011  0029FC  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 17012  0029FE  0D08               	mullw	8
 17013  002A00  0E06               	movlw	6
 17014  002A02  26F3               	addwf	prodl,f,c
 17015  002A04  0E00               	movlw	0
 17016  002A06  22F4               	addwfc	prodh,f,c
 17017  002A08  0E00               	movlw	low _swTimers
 17018  002A0A  24F3               	addwf	prodl,w,c
 17019  002A0C  6ED9               	movwf	fsr2l,c
 17020  002A0E  0E03               	movlw	high _swTimers
 17021  002A10  20F4               	addwfc	prodh,w,c
 17022  002A12  6EDA               	movwf	fsr2h,c
 17023  002A14  0E00               	movlw	0
 17024  002A16  6EDE               	movwf	postinc2,c
 17025  002A18  0E00               	movlw	0
 17026  002A1A  6EDD               	movwf	postdec2,c
 17027                           
 17028                           ; BSR set to: 0
 17029                           ;sw_timer.c: 165: allocatedTimers++;
 17030  002A1C  2BFA               	incf	_allocatedTimers& (0+255),f,b	;volatile
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 17034  002A1E  8EF2               	bsf	intcon,7,c	;volatile
 17035                           
 17036                           ;sw_timer.c: 167: }
 17037  002A20  D001               	goto	l241
 17038  002A22                     l237:
 17039                           
 17040                           ;sw_timer.c: 171: {
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;sw_timer.c: 168: else
 17044                           ;sw_timer.c: 169: {
 17045                           ;sw_timer.c: 170: while(1)
 17046  002A22  D7FF               	goto	l237
 17047  002A24                     l241:
 17048                           
 17049                           ;sw_timer.c: 175: }
 17050                           ;sw_timer.c: 176: }
 17051                           ;sw_timer.c: 177: return retVal;
 17052  002A24  0100               	movlb	0	; () banked
 17053  002A26  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 17054  002A28  0012               	return	
 17055  002A2A                     __end_of_SwTimerCreate:
 17056                           	opt stack 0
 17057                           tblptru	equ	0xFF8
 17058                           tblptrh	equ	0xFF7
 17059                           tblptrl	equ	0xFF6
 17060                           tablat	equ	0xFF5
 17061                           prodh	equ	0xFF4
 17062                           prodl	equ	0xFF3
 17063                           intcon	equ	0xFF2
 17064                           intcon2	equ	0xFF1
 17065                           intcon3	equ	0xFF0
 17066                           indf0	equ	0xFEF
 17067                           postinc0	equ	0xFEE
 17068                           plusw0	equ	0xFEB
 17069                           fsr0h	equ	0xFEA
 17070                           fsr0l	equ	0xFE9
 17071                           wreg	equ	0xFE8
 17072                           indf2	equ	0xFDF
 17073                           postinc2	equ	0xFDE
 17074                           postdec2	equ	0xFDD
 17075                           plusw2	equ	0xFDB
 17076                           fsr2h	equ	0xFDA
 17077                           fsr2l	equ	0xFD9
 17078                           status	equ	0xFD8
 17079                           
 17080 ;; *************** function _INTERRUPT_InterruptManager *****************
 17081 ;; Defined at:
 17082 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17083 ;; Parameters:    Size  Location     Type
 17084 ;;		None
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      void 
 17089 ;; Registers used:
 17090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17098 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17099 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17100 ;;Total ram usage:        8 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; Hardware stack levels required when called:    6
 17103 ;; This function calls:
 17104 ;;		_INT1_ISR
 17105 ;;		_INT2_ISR
 17106 ;;		_PIN_MANAGER_IOC
 17107 ;;		_TMR1_ISR
 17108 ;; This function is called by:
 17109 ;;		Interrupt level 2
 17110 ;; This function uses a non-reentrant model
 17111 ;;
 17112                           
 17113                           	psect	intcode
 17114  000008                     __pintcode:
 17115                           	opt stack 0
 17116  000008                     _INTERRUPT_InterruptManager:
 17117                           	opt stack 16
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;incstack = 0
 17121  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 17122  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17123  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 17124  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 17125  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 17126  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 17127  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 17128  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 17129  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 17130                           
 17131                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 17132  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 17133  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 17134  000030  D003               	goto	i2l2282
 17135                           
 17136                           ;interrupt_manager.c: 62: {
 17137                           ;interrupt_manager.c: 63: INT1_ISR();
 17138  000032  EC31  F01C         	call	_INT1_ISR	;wreg free
 17139                           
 17140                           ;interrupt_manager.c: 64: }
 17141  000036  D012               	goto	i2l2289
 17142  000038                     i2l2282:
 17143                           
 17144                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 17145  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 17146  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 17147  00003C  D003               	goto	i2l2284
 17148                           
 17149                           ;interrupt_manager.c: 66: {
 17150                           ;interrupt_manager.c: 67: INT2_ISR();
 17151  00003E  EC2D  F01C         	call	_INT2_ISR	;wreg free
 17152                           
 17153                           ;interrupt_manager.c: 68: }
 17154  000042  D00C               	goto	i2l2289
 17155  000044                     i2l2284:
 17156                           
 17157                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 17158  000044  B6F2               	btfsc	intcon,3,c	;volatile
 17159  000046  A0F2               	btfss	intcon,0,c	;volatile
 17160  000048  D003               	goto	i2l2286
 17161                           
 17162                           ;interrupt_manager.c: 70: {
 17163                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 17164  00004A  EC24  F01C         	call	_PIN_MANAGER_IOC	;wreg free
 17165                           
 17166                           ;interrupt_manager.c: 72: }
 17167  00004E  D006               	goto	i2l2289
 17168  000050                     i2l2286:
 17169                           
 17170                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 17171  000050  BCF2               	btfsc	intcon,6,c	;volatile
 17172                           
 17173                           ;interrupt_manager.c: 74: {
 17174                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 17175  000052  A09D               	btfss	3997,0,c	;volatile
 17176  000054  D003               	goto	i2l2289
 17177  000056  B09E               	btfsc	3998,0,c	;volatile
 17178                           
 17179                           ;interrupt_manager.c: 76: {
 17180                           ;interrupt_manager.c: 77: TMR1_ISR();
 17181  000058  EC93  F01B         	call	_TMR1_ISR	;wreg free
 17182  00005C                     i2l2289:
 17183                           
 17184                           ;interrupt_manager.c: 84: else
 17185                           ;interrupt_manager.c: 85: {
 17186                           
 17187                           ;interrupt_manager.c: 82: }
 17188                           ;interrupt_manager.c: 83: }
 17189                           
 17190                           ;interrupt_manager.c: 79: else
 17191                           ;interrupt_manager.c: 80: {
 17192  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 17193  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 17194  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 17195  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 17196  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 17197  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 17198  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17199  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17200  00007C  0011               	retfie		f
 17201  00007E                     __end_of_INTERRUPT_InterruptManager:
 17202                           	opt stack 0
 17203                           pclatu	equ	0xFFB
 17204                           pclath	equ	0xFFA
 17205                           tblptru	equ	0xFF8
 17206                           tblptrh	equ	0xFF7
 17207                           tblptrl	equ	0xFF6
 17208                           tablat	equ	0xFF5
 17209                           prodh	equ	0xFF4
 17210                           prodl	equ	0xFF3
 17211                           intcon	equ	0xFF2
 17212                           intcon2	equ	0xFF1
 17213                           intcon3	equ	0xFF0
 17214                           indf0	equ	0xFEF
 17215                           postinc0	equ	0xFEE
 17216                           plusw0	equ	0xFEB
 17217                           fsr0h	equ	0xFEA
 17218                           fsr0l	equ	0xFE9
 17219                           wreg	equ	0xFE8
 17220                           fsr1h	equ	0xFE2
 17221                           fsr1l	equ	0xFE1
 17222                           indf2	equ	0xFDF
 17223                           postinc2	equ	0xFDE
 17224                           postdec2	equ	0xFDD
 17225                           plusw2	equ	0xFDB
 17226                           fsr2h	equ	0xFDA
 17227                           fsr2l	equ	0xFD9
 17228                           status	equ	0xFD8
 17229                           
 17230 ;; *************** function _TMR1_ISR *****************
 17231 ;; Defined at:
 17232 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 17233 ;; Parameters:    Size  Location     Type
 17234 ;;		None
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;		None
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  1    wreg      void 
 17239 ;; Registers used:
 17240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17241 ;; Tracked objects:
 17242 ;;		On entry : 0/0
 17243 ;;		On exit  : 0/0
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17250 ;;Total ram usage:        0 bytes
 17251 ;; Hardware stack levels used:    1
 17252 ;; Hardware stack levels required when called:    5
 17253 ;; This function calls:
 17254 ;;		_TMR1_CallBack
 17255 ;;		i2_TMR1_WriteTimer
 17256 ;; This function is called by:
 17257 ;;		_INTERRUPT_InterruptManager
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text100
 17262  003726                     __ptext100:
 17263                           	opt stack 0
 17264  003726                     _TMR1_ISR:
 17265                           	opt stack 16
 17266                           
 17267                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 17268                           
 17269                           ;incstack = 0
 17270  003726  909E               	bcf	3998,0,c	;volatile
 17271                           
 17272                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 17273  003728  C04A  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 17274  00372C  C04B  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 17275  003730  EC5F  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 17276                           
 17277                           ;tmr1.c: 167: TMR1_CallBack();
 17278  003734  EC23  F01B         	call	_TMR1_CallBack	;wreg free
 17279  003738  0012               	return		;funcret
 17280  00373A                     __end_of_TMR1_ISR:
 17281                           	opt stack 0
 17282                           pclatu	equ	0xFFB
 17283                           pclath	equ	0xFFA
 17284                           tblptru	equ	0xFF8
 17285                           tblptrh	equ	0xFF7
 17286                           tblptrl	equ	0xFF6
 17287                           tablat	equ	0xFF5
 17288                           prodh	equ	0xFF4
 17289                           prodl	equ	0xFF3
 17290                           intcon	equ	0xFF2
 17291                           intcon2	equ	0xFF1
 17292                           intcon3	equ	0xFF0
 17293                           indf0	equ	0xFEF
 17294                           postinc0	equ	0xFEE
 17295                           plusw0	equ	0xFEB
 17296                           fsr0h	equ	0xFEA
 17297                           fsr0l	equ	0xFE9
 17298                           wreg	equ	0xFE8
 17299                           fsr1h	equ	0xFE2
 17300                           fsr1l	equ	0xFE1
 17301                           indf2	equ	0xFDF
 17302                           postinc2	equ	0xFDE
 17303                           postdec2	equ	0xFDD
 17304                           plusw2	equ	0xFDB
 17305                           fsr2h	equ	0xFDA
 17306                           fsr2l	equ	0xFD9
 17307                           status	equ	0xFD8
 17308                           
 17309 ;; *************** function _TMR1_CallBack *****************
 17310 ;; Defined at:
 17311 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 17312 ;; Parameters:    Size  Location     Type
 17313 ;;		None
 17314 ;; Auto vars:     Size  Location     Type
 17315 ;;		None
 17316 ;; Return value:  Size  Location     Type
 17317 ;;                  1    wreg      void 
 17318 ;; Registers used:
 17319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17320 ;; Tracked objects:
 17321 ;;		On entry : 0/0
 17322 ;;		On exit  : 0/0
 17323 ;;		Unchanged: 0/0
 17324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;Total ram usage:        0 bytes
 17330 ;; Hardware stack levels used:    1
 17331 ;; Hardware stack levels required when called:    4
 17332 ;; This function calls:
 17333 ;;		Absolute function
 17334 ;;		_TMR1_DefaultInterruptHandler
 17335 ;;		_TMR_ISR_lora
 17336 ;; This function is called by:
 17337 ;;		_TMR1_ISR
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text101
 17342  003646                     __ptext101:
 17343                           	opt stack 0
 17344  003646                     _TMR1_CallBack:
 17345                           	opt stack 16
 17346                           
 17347                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 17348                           
 17349                           ;incstack = 0
 17350  003646  5048               	movf	_TMR1_InterruptHandler,w,c
 17351  003648  1049               	iorwf	_TMR1_InterruptHandler+1,w,c
 17352  00364A  B4D8               	btfsc	status,2,c
 17353  00364C  0012               	return	
 17354                           
 17355                           ;tmr1.c: 174: {
 17356                           ;tmr1.c: 175: TMR1_InterruptHandler();
 17357  00364E  D801               	call	i2u1216_48
 17358  003650  0012               	return	
 17359  003652                     i2u1216_48:
 17360  003652  0005               	push	
 17361  003654  6EFA               	movwf	pclath,c
 17362  003656  5048               	movf	_TMR1_InterruptHandler,w,c
 17363  003658  6EFD               	movwf	tosl,c
 17364  00365A  5049               	movf	_TMR1_InterruptHandler+1,w,c
 17365  00365C  6EFE               	movwf	tosh,c
 17366  00365E  6AFF               	clrf	tosu,c
 17367  003660  50FA               	movf	pclath,w,c
 17368  003662  0012               	return		;indir
 17369  003664                     __end_of_TMR1_CallBack:
 17370                           	opt stack 0
 17371                           tosu	equ	0xFFF
 17372                           tosh	equ	0xFFE
 17373                           tosl	equ	0xFFD
 17374                           pclatu	equ	0xFFB
 17375                           pclath	equ	0xFFA
 17376                           tblptru	equ	0xFF8
 17377                           tblptrh	equ	0xFF7
 17378                           tblptrl	equ	0xFF6
 17379                           tablat	equ	0xFF5
 17380                           prodh	equ	0xFF4
 17381                           prodl	equ	0xFF3
 17382                           intcon	equ	0xFF2
 17383                           intcon2	equ	0xFF1
 17384                           intcon3	equ	0xFF0
 17385                           indf0	equ	0xFEF
 17386                           postinc0	equ	0xFEE
 17387                           plusw0	equ	0xFEB
 17388                           fsr0h	equ	0xFEA
 17389                           fsr0l	equ	0xFE9
 17390                           wreg	equ	0xFE8
 17391                           fsr1h	equ	0xFE2
 17392                           fsr1l	equ	0xFE1
 17393                           indf2	equ	0xFDF
 17394                           postinc2	equ	0xFDE
 17395                           postdec2	equ	0xFDD
 17396                           plusw2	equ	0xFDB
 17397                           fsr2h	equ	0xFDA
 17398                           fsr2l	equ	0xFD9
 17399                           status	equ	0xFD8
 17400                           
 17401 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17402 ;; Defined at:
 17403 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;		None
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;		None
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      void 
 17410 ;; Registers used:
 17411 ;;		None
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;Total ram usage:        0 bytes
 17422 ;; Hardware stack levels used:    1
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_TMR1_Initialize
 17427 ;;		_TMR1_CallBack
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text102
 17432  003898                     __ptext102:
 17433                           	opt stack 0
 17434  003898                     _TMR1_DefaultInterruptHandler:
 17435                           	opt stack 19
 17436                           
 17437                           ;incstack = 0
 17438  003898  0012               	return		;funcret
 17439  00389A                     __end_of_TMR1_DefaultInterruptHandler:
 17440                           	opt stack 0
 17441                           tosu	equ	0xFFF
 17442                           tosh	equ	0xFFE
 17443                           tosl	equ	0xFFD
 17444                           pclatu	equ	0xFFB
 17445                           pclath	equ	0xFFA
 17446                           tblptru	equ	0xFF8
 17447                           tblptrh	equ	0xFF7
 17448                           tblptrl	equ	0xFF6
 17449                           tablat	equ	0xFF5
 17450                           prodh	equ	0xFF4
 17451                           prodl	equ	0xFF3
 17452                           intcon	equ	0xFF2
 17453                           intcon2	equ	0xFF1
 17454                           intcon3	equ	0xFF0
 17455                           indf0	equ	0xFEF
 17456                           postinc0	equ	0xFEE
 17457                           plusw0	equ	0xFEB
 17458                           fsr0h	equ	0xFEA
 17459                           fsr0l	equ	0xFE9
 17460                           wreg	equ	0xFE8
 17461                           fsr1h	equ	0xFE2
 17462                           fsr1l	equ	0xFE1
 17463                           indf2	equ	0xFDF
 17464                           postinc2	equ	0xFDE
 17465                           postdec2	equ	0xFDD
 17466                           plusw2	equ	0xFDB
 17467                           fsr2h	equ	0xFDA
 17468                           fsr2l	equ	0xFD9
 17469                           status	equ	0xFD8
 17470                           
 17471 ;; *************** function _TMR_ISR_lora *****************
 17472 ;; Defined at:
 17473 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;		None
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;		None
 17478 ;; Return value:  Size  Location     Type
 17479 ;;                  1    wreg      void 
 17480 ;; Registers used:
 17481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17482 ;; Tracked objects:
 17483 ;;		On entry : 0/0
 17484 ;;		On exit  : 0/0
 17485 ;;		Unchanged: 0/0
 17486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17491 ;;Total ram usage:        2 bytes
 17492 ;; Hardware stack levels used:    1
 17493 ;; Hardware stack levels required when called:    3
 17494 ;; This function calls:
 17495 ;;		i2_SwTimersInterrupt
 17496 ;;		i2_TMR_SwapTimer
 17497 ;; This function is called by:
 17498 ;;		_TMR_ISR_Lora_Init
 17499 ;;		_TMR1_CallBack
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text103
 17504  002F78                     __ptext103:
 17505                           	opt stack 0
 17506  002F78                     _TMR_ISR_lora:
 17507                           	opt stack 16
 17508                           
 17509                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 17510                           
 17511                           ;incstack = 0
 17512  002F78  0E01               	movlw	1
 17513  002F7A  0100               	movlb	0	; () banked
 17514  002F7C  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 17518  002F7E  ECC2  F00F         	call	i2_SwTimersInterrupt	;wreg free
 17519  002F82  C021  F0FC         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 17520  002F86  C022  F0FD         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 17521  002F8A  C023  F0FE         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 17522  002F8E  C024  F0FF         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 17523                           
 17524                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 17525  002F92  0100               	movlb	0	; () banked
 17526  002F94  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 17527  002F96  E11D               	bnz	i2l1331
 17528  002F98  05FE               	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 17529  002F9A  B0D8               	btfsc	status,0,c
 17530  002F9C  0012               	return	
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;tmr_lora_addons.c: 66: {
 17534                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 17535  002F9E  C0FC  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 17536  002FA2  C0FD  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 17537  002FA6  1E32               	comf	??_TMR_ISR_lora,f,c
 17538  002FA8  1E33               	comf	??_TMR_ISR_lora+1,f,c
 17539  002FAA  4A32               	infsnz	??_TMR_ISR_lora,f,c
 17540  002FAC  2A33               	incf	??_TMR_ISR_lora+1,f,c
 17541  002FAE  C032  F0F6         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 17542  002FB2  C033  F0F7         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 17543                           
 17544                           ; BSR set to: 0
 17545                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 17546  002FB6  C0F6  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 17547  002FBA  C0F7  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 17548  002FBE  EC91  F019         	call	i2_TMR_SwapTimer	;wreg free
 17549  002FC2  C009  F0EC         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 17550  002FC6  C00A  F0ED         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 17551  002FCA  0100               	movlb	0	; () banked
 17552  002FCC  6BEE               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
 17553  002FCE  6BEF               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
 17554  002FD0  0012               	return	
 17555  002FD2                     i2l1331:
 17556                           
 17557                           ; BSR set to: 0
 17558  002FD2  0012               	return		;funcret
 17559  002FD4                     __end_of_TMR_ISR_lora:
 17560                           	opt stack 0
 17561                           tosu	equ	0xFFF
 17562                           tosh	equ	0xFFE
 17563                           tosl	equ	0xFFD
 17564                           pclatu	equ	0xFFB
 17565                           pclath	equ	0xFFA
 17566                           tblptru	equ	0xFF8
 17567                           tblptrh	equ	0xFF7
 17568                           tblptrl	equ	0xFF6
 17569                           tablat	equ	0xFF5
 17570                           prodh	equ	0xFF4
 17571                           prodl	equ	0xFF3
 17572                           intcon	equ	0xFF2
 17573                           intcon2	equ	0xFF1
 17574                           intcon3	equ	0xFF0
 17575                           indf0	equ	0xFEF
 17576                           postinc0	equ	0xFEE
 17577                           plusw0	equ	0xFEB
 17578                           fsr0h	equ	0xFEA
 17579                           fsr0l	equ	0xFE9
 17580                           wreg	equ	0xFE8
 17581                           fsr1h	equ	0xFE2
 17582                           fsr1l	equ	0xFE1
 17583                           indf2	equ	0xFDF
 17584                           postinc2	equ	0xFDE
 17585                           postdec2	equ	0xFDD
 17586                           plusw2	equ	0xFDB
 17587                           fsr2h	equ	0xFDA
 17588                           fsr2l	equ	0xFD9
 17589                           status	equ	0xFD8
 17590                           
 17591 ;; *************** function i2_TMR_SwapTimer *****************
 17592 ;; Defined at:
 17593 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;  timerVal        2    8[COMRAM] unsigned int 
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  2    8[COMRAM] unsigned int 
 17600 ;; Registers used:
 17601 ;;		wreg, status,2, status,0, cstack
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;Total ram usage:        2 bytes
 17612 ;; Hardware stack levels used:    1
 17613 ;; Hardware stack levels required when called:    1
 17614 ;; This function calls:
 17615 ;;		i2_TMR1_ReadTimer
 17616 ;;		i2_TMR1_WriteTimer
 17617 ;; This function is called by:
 17618 ;;		_TMR_ISR_lora
 17619 ;; This function uses a non-reentrant model
 17620 ;;
 17621                           
 17622                           	psect	text104
 17623  003322                     __ptext104:
 17624                           	opt stack 0
 17625  003322                     i2_TMR_SwapTimer:
 17626                           	opt stack 17
 17627                           
 17628                           ;sw_timer.c: 114: static uint16_t oldVal;
 17629                           ;sw_timer.c: 115: static uint16_t retVal;
 17630                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;incstack = 0
 17634  003322  EC04  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 17635  003326  C001  F0F2         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 17636  00332A  C002  F0F3         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 17637  00332E                     
 17638                           ;sw_timer.c: 123: ;
 17639  00332E  EC04  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 17640  003332  0100               	movlb	0	; () banked
 17641  003334  51F2               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 17642  003336  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 17643  003338  E104               	bnz	i2l9636
 17644  00333A  51F3               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 17645  00333C  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 17646  00333E  B4D8               	btfsc	status,2,c
 17647  003340  D7F6               	goto	i2l223
 17648  003342                     i2l9636:
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 17652  003342  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 17653  003346  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 17654  00334A  EC5F  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 17655                           
 17656                           ;sw_timer.c: 128: oldVal++;
 17657  00334E  0100               	movlb	0	; () banked
 17658  003350  4BF2               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 17659  003352  2BF3               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;sw_timer.c: 130: retVal = oldVal;
 17663  003354  C0F2  F0F0         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 17664  003358  C0F3  F0F1         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;sw_timer.c: 132: return retVal;
 17668  00335C  C0F0  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 17669  003360  C0F1  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 17670  003364  0012               	return	
 17671  003366                     __end_ofi2_TMR_SwapTimer:
 17672                           	opt stack 0
 17673                           tosu	equ	0xFFF
 17674                           tosh	equ	0xFFE
 17675                           tosl	equ	0xFFD
 17676                           pclatu	equ	0xFFB
 17677                           pclath	equ	0xFFA
 17678                           tblptru	equ	0xFF8
 17679                           tblptrh	equ	0xFF7
 17680                           tblptrl	equ	0xFF6
 17681                           tablat	equ	0xFF5
 17682                           prodh	equ	0xFF4
 17683                           prodl	equ	0xFF3
 17684                           intcon	equ	0xFF2
 17685                           intcon2	equ	0xFF1
 17686                           intcon3	equ	0xFF0
 17687                           indf0	equ	0xFEF
 17688                           postinc0	equ	0xFEE
 17689                           plusw0	equ	0xFEB
 17690                           fsr0h	equ	0xFEA
 17691                           fsr0l	equ	0xFE9
 17692                           wreg	equ	0xFE8
 17693                           fsr1h	equ	0xFE2
 17694                           fsr1l	equ	0xFE1
 17695                           indf2	equ	0xFDF
 17696                           postinc2	equ	0xFDE
 17697                           postdec2	equ	0xFDD
 17698                           plusw2	equ	0xFDB
 17699                           fsr2h	equ	0xFDA
 17700                           fsr2l	equ	0xFD9
 17701                           status	equ	0xFD8
 17702                           
 17703 ;; *************** function i2_TMR1_WriteTimer *****************
 17704 ;; Defined at:
 17705 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 17706 ;; Parameters:    Size  Location     Type
 17707 ;;  timerVal        2    0[COMRAM] unsigned int 
 17708 ;; Auto vars:     Size  Location     Type
 17709 ;;		None
 17710 ;; Return value:  Size  Location     Type
 17711 ;;                  1    wreg      void 
 17712 ;; Registers used:
 17713 ;;		wreg, status,2
 17714 ;; Tracked objects:
 17715 ;;		On entry : 0/0
 17716 ;;		On exit  : 0/0
 17717 ;;		Unchanged: 0/0
 17718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17723 ;;Total ram usage:        2 bytes
 17724 ;; Hardware stack levels used:    1
 17725 ;; This function calls:
 17726 ;;		Nothing
 17727 ;; This function is called by:
 17728 ;;		_TMR1_ISR
 17729 ;;		i2_TMR_SwapTimer
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           	psect	text105
 17734  0036BE                     __ptext105:
 17735                           	opt stack 0
 17736  0036BE                     i2_TMR1_WriteTimer:
 17737                           	opt stack 20
 17738                           
 17739                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 17740                           
 17741                           ; BSR set to: 0
 17742                           ;incstack = 0
 17743  0036BE  A4CD               	btfss	4045,2,c	;volatile
 17744  0036C0  D007               	goto	i2l2426
 17745                           
 17746                           ;tmr1.c: 124: {
 17747                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 17748  0036C2  90CD               	bcf	4045,0,c	;volatile
 17749                           
 17750                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 17751  0036C4  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 17752  0036C6  6ECF               	movwf	4047,c	;volatile
 17753                           
 17754                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 17755  0036C8  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 17756                           
 17757                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 17758  0036CC  80CD               	bsf	4045,0,c	;volatile
 17759                           
 17760                           ;tmr1.c: 134: }
 17761  0036CE  0012               	return	
 17762  0036D0                     i2l2426:
 17763                           
 17764                           ;tmr1.c: 135: else
 17765                           ;tmr1.c: 136: {
 17766                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 17767  0036D0  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 17768  0036D2  6ECF               	movwf	4047,c	;volatile
 17769                           
 17770                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 17771  0036D4  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 17772  0036D8  0012               	return	
 17773  0036DA                     __end_ofi2_TMR1_WriteTimer:
 17774                           	opt stack 0
 17775                           tosu	equ	0xFFF
 17776                           tosh	equ	0xFFE
 17777                           tosl	equ	0xFFD
 17778                           pclatu	equ	0xFFB
 17779                           pclath	equ	0xFFA
 17780                           tblptru	equ	0xFF8
 17781                           tblptrh	equ	0xFF7
 17782                           tblptrl	equ	0xFF6
 17783                           tablat	equ	0xFF5
 17784                           prodh	equ	0xFF4
 17785                           prodl	equ	0xFF3
 17786                           intcon	equ	0xFF2
 17787                           intcon2	equ	0xFF1
 17788                           intcon3	equ	0xFF0
 17789                           indf0	equ	0xFEF
 17790                           postinc0	equ	0xFEE
 17791                           plusw0	equ	0xFEB
 17792                           fsr0h	equ	0xFEA
 17793                           fsr0l	equ	0xFE9
 17794                           wreg	equ	0xFE8
 17795                           fsr1h	equ	0xFE2
 17796                           fsr1l	equ	0xFE1
 17797                           indf2	equ	0xFDF
 17798                           postinc2	equ	0xFDE
 17799                           postdec2	equ	0xFDD
 17800                           plusw2	equ	0xFDB
 17801                           fsr2h	equ	0xFDA
 17802                           fsr2l	equ	0xFD9
 17803                           status	equ	0xFD8
 17804                           
 17805 ;; *************** function i2_SwTimersInterrupt *****************
 17806 ;; Defined at:
 17807 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17808 ;; Parameters:    Size  Location     Type
 17809 ;;		None
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 17812 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 17813 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  4   32[COMRAM] unsigned long 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17824 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17826 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17827 ;;Total ram usage:       17 bytes
 17828 ;; Hardware stack levels used:    1
 17829 ;; Hardware stack levels required when called:    2
 17830 ;; This function calls:
 17831 ;;		i2_TMR_GetDeltaTime
 17832 ;; This function is called by:
 17833 ;;		_TMR_ISR_lora
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text106
 17838  001F84                     __ptext106:
 17839                           	opt stack 0
 17840  001F84                     i2_SwTimersInterrupt:
 17841                           	opt stack 16
 17842                           
 17843                           ;sw_timer.c: 289: uint8_t i;
 17844                           ;sw_timer.c: 290: uint32_t timeElapsed;
 17845                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 17846                           
 17847                           ;incstack = 0
 17848  001F84  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 17849  001F86  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 17850  001F88  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 17851  001F8A  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 17852                           
 17853                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 17854  001F8C  ECF0  F00B         	call	i2_TMR_GetDeltaTime	;wreg free
 17855  001F90  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 17856  001F94  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 17857  001F98  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 17858  001F9C  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 17859                           
 17860                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 17861  001FA0  0E00               	movlw	0
 17862  001FA2  6E31               	movwf	i2SwTimersInterrupt@i,c
 17863  001FA4  D061               	goto	i2l280
 17864  001FA6                     
 17865                           ;sw_timer.c: 298: {
 17866                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 17867  001FA6  5031               	movf	i2SwTimersInterrupt@i,w,c
 17868  001FA8  0D08               	mullw	8
 17869  001FAA  0E04               	movlw	4
 17870  001FAC  26F3               	addwf	prodl,f,c
 17871  001FAE  0E00               	movlw	0
 17872  001FB0  22F4               	addwfc	prodh,f,c
 17873  001FB2  0E00               	movlw	low _swTimers
 17874  001FB4  24F3               	addwf	prodl,w,c
 17875  001FB6  6ED9               	movwf	fsr2l,c
 17876  001FB8  0E03               	movlw	high _swTimers
 17877  001FBA  20F4               	addwfc	prodh,w,c
 17878  001FBC  6EDA               	movwf	fsr2h,c
 17879  001FBE  04DE               	decf	postinc2,w,c
 17880  001FC0  A4D8               	btfss	status,2,c
 17881  001FC2  D051               	goto	i2l285
 17882                           
 17883                           ;sw_timer.c: 302: {
 17884                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 17885  001FC4  5031               	movf	i2SwTimersInterrupt@i,w,c
 17886  001FC6  0D08               	mullw	8
 17887  001FC8  0E00               	movlw	low _swTimers
 17888  001FCA  24F3               	addwf	prodl,w,c
 17889  001FCC  6ED9               	movwf	fsr2l,c
 17890  001FCE  0E03               	movlw	high _swTimers
 17891  001FD0  20F4               	addwfc	prodh,w,c
 17892  001FD2  6EDA               	movwf	fsr2h,c
 17893  001FD4  50DE               	movf	postinc2,w,c
 17894  001FD6  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 17895  001FD8  50DE               	movf	postinc2,w,c
 17896  001FDA  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 17897  001FDC  50DE               	movf	postinc2,w,c
 17898  001FDE  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 17899  001FE0  50DE               	movf	postinc2,w,c
 17900  001FE2  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 17901  001FE4  A0D8               	btfss	status,0,c
 17902  001FE6  D00D               	goto	i2l283
 17903                           
 17904                           ;sw_timer.c: 304: {
 17905                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 17906  001FE8  5031               	movf	i2SwTimersInterrupt@i,w,c
 17907  001FEA  0D08               	mullw	8
 17908  001FEC  0E00               	movlw	low _swTimers
 17909  001FEE  24F3               	addwf	prodl,w,c
 17910  001FF0  6ED9               	movwf	fsr2l,c
 17911  001FF2  0E03               	movlw	high _swTimers
 17912  001FF4  20F4               	addwfc	prodh,w,c
 17913  001FF6  6EDA               	movwf	fsr2h,c
 17914  001FF8  6ADE               	clrf	postinc2,c
 17915  001FFA  6ADE               	clrf	postinc2,c
 17916  001FFC  6ADE               	clrf	postinc2,c
 17917  001FFE  6ADD               	clrf	postdec2,c
 17918                           
 17919                           ;sw_timer.c: 306: }
 17920  002000  D032               	goto	i2l285
 17921  002002                     i2l283:
 17922                           
 17923                           ;sw_timer.c: 307: else
 17924                           ;sw_timer.c: 308: {
 17925                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 17926  002002  5031               	movf	i2SwTimersInterrupt@i,w,c
 17927  002004  0D08               	mullw	8
 17928  002006  0E00               	movlw	low _swTimers
 17929  002008  24F3               	addwf	prodl,w,c
 17930  00200A  6ED9               	movwf	fsr2l,c
 17931  00200C  0E03               	movlw	high _swTimers
 17932  00200E  20F4               	addwfc	prodh,w,c
 17933  002010  6EDA               	movwf	fsr2h,c
 17934  002012  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 17935  002014  5EDE               	subwf	postinc2,f,c
 17936  002016  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 17937  002018  5ADE               	subwfb	postinc2,f,c
 17938  00201A  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 17939  00201C  5ADE               	subwfb	postinc2,f,c
 17940  00201E  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 17941  002020  5ADE               	subwfb	postinc2,f,c
 17942                           
 17943                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 17944  002022  5031               	movf	i2SwTimersInterrupt@i,w,c
 17945  002024  0D08               	mullw	8
 17946  002026  0E00               	movlw	low _swTimers
 17947  002028  24F3               	addwf	prodl,w,c
 17948  00202A  6ED9               	movwf	fsr2l,c
 17949  00202C  0E03               	movlw	high _swTimers
 17950  00202E  20F4               	addwfc	prodh,w,c
 17951  002030  6EDA               	movwf	fsr2h,c
 17952  002032  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 17953  002034  5CDE               	subwf	postinc2,w,c
 17954  002036  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 17955  002038  58DE               	subwfb	postinc2,w,c
 17956  00203A  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 17957  00203C  58DE               	subwfb	postinc2,w,c
 17958  00203E  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 17959  002040  58DE               	subwfb	postinc2,w,c
 17960  002042  B0D8               	btfsc	status,0,c
 17961  002044  D010               	goto	i2l285
 17962                           
 17963                           ;sw_timer.c: 313: {
 17964                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 17965  002046  5031               	movf	i2SwTimersInterrupt@i,w,c
 17966  002048  0D08               	mullw	8
 17967  00204A  0E00               	movlw	low _swTimers
 17968  00204C  24F3               	addwf	prodl,w,c
 17969  00204E  6ED9               	movwf	fsr2l,c
 17970  002050  0E03               	movlw	high _swTimers
 17971  002052  20F4               	addwfc	prodh,w,c
 17972  002054  6EDA               	movwf	fsr2h,c
 17973  002056  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 17974  00205A  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 17975  00205E  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 17976  002062  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 17977  002066                     i2l285:
 17978  002066  2A31               	incf	i2SwTimersInterrupt@i,f,c
 17979  002068                     i2l280:
 17980  002068  0100               	movlb	0	; () banked
 17981  00206A  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 17982  00206C  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 17983  00206E  A0D8               	btfss	status,0,c
 17984  002070  D79A               	goto	i2l281
 17985                           
 17986                           ; BSR set to: 0
 17987                           ;sw_timer.c: 315: }
 17988                           ;sw_timer.c: 316: }
 17989                           ;sw_timer.c: 317: }
 17990                           ;sw_timer.c: 318: }
 17991                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 17992  002072  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 17993  002076  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 17994  00207A  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 17995  00207E  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 17996                           
 17997                           ; BSR set to: 0
 17998  002082  0012               	return		;funcret
 17999  002084                     __end_ofi2_SwTimersInterrupt:
 18000                           	opt stack 0
 18001                           tosu	equ	0xFFF
 18002                           tosh	equ	0xFFE
 18003                           tosl	equ	0xFFD
 18004                           pclatu	equ	0xFFB
 18005                           pclath	equ	0xFFA
 18006                           tblptru	equ	0xFF8
 18007                           tblptrh	equ	0xFF7
 18008                           tblptrl	equ	0xFF6
 18009                           tablat	equ	0xFF5
 18010                           prodh	equ	0xFF4
 18011                           prodl	equ	0xFF3
 18012                           intcon	equ	0xFF2
 18013                           intcon2	equ	0xFF1
 18014                           intcon3	equ	0xFF0
 18015                           indf0	equ	0xFEF
 18016                           postinc0	equ	0xFEE
 18017                           plusw0	equ	0xFEB
 18018                           fsr0h	equ	0xFEA
 18019                           fsr0l	equ	0xFE9
 18020                           wreg	equ	0xFE8
 18021                           fsr1h	equ	0xFE2
 18022                           fsr1l	equ	0xFE1
 18023                           indf2	equ	0xFDF
 18024                           postinc2	equ	0xFDE
 18025                           postdec2	equ	0xFDD
 18026                           plusw2	equ	0xFDB
 18027                           fsr2h	equ	0xFDA
 18028                           fsr2l	equ	0xFD9
 18029                           status	equ	0xFD8
 18030                           
 18031 ;; *************** function i2_TMR_GetDeltaTime *****************
 18032 ;; Defined at:
 18033 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 18034 ;; Parameters:    Size  Location     Type
 18035 ;;		None
 18036 ;; Auto vars:     Size  Location     Type
 18037 ;;		None
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  4    8[COMRAM] unsigned long 
 18040 ;; Registers used:
 18041 ;;		wreg, status,2, status,0, cstack
 18042 ;; Tracked objects:
 18043 ;;		On entry : 0/0
 18044 ;;		On exit  : 0/0
 18045 ;;		Unchanged: 0/0
 18046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18051 ;;Total ram usage:       24 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; Hardware stack levels required when called:    1
 18054 ;; This function calls:
 18055 ;;		i2_TMR1_ReadTimer
 18056 ;; This function is called by:
 18057 ;;		i2_SwTimersInterrupt
 18058 ;; This function uses a non-reentrant model
 18059 ;;
 18060                           
 18061                           	psect	text107
 18062  0017E0                     __ptext107:
 18063                           	opt stack 0
 18064  0017E0                     i2_TMR_GetDeltaTime:
 18065                           	opt stack 16
 18066                           
 18067                           ;sw_timer.c: 90: static uint32_t retVal;
 18068                           ;sw_timer.c: 91: static uint16_t tmrVal;
 18069                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;incstack = 0
 18073  0017E0  EC04  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 18074  0017E4  C001  F0F4         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 18075  0017E8  C002  F0F5         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 18076                           
 18077                           ;sw_timer.c: 95: if (timerOverflow == 1)
 18078  0017EC  0100               	movlb	0	; () banked
 18079  0017EE  05FB               	decf	_timerOverflow& (0+255),w,b	;volatile
 18080  0017F0  A4D8               	btfss	status,2,c
 18081  0017F2  D065               	goto	i2l213
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;sw_timer.c: 96: {
 18085                           ;sw_timer.c: 97: timerOverflow = 0;
 18086  0017F4  0E00               	movlw	0
 18087  0017F6  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 18091  0017F8  C0E8  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 18092  0017FC  C0E9  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 18093  001800  C0EA  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 18094  001804  C0EB  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 18095  001808  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 18096  00180A  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 18097  00180C  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 18098  00180E  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 18099  001810  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 18100  001812  0E00               	movlw	0
 18101  001814  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 18102  001816  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 18103  001818  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 18104  00181A  51F6               	movf	_reloadVal& (0+255),w,b	;volatile
 18105  00181C  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 18106  00181E  51F7               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 18107  001820  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 18108  001822  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 18109  001824  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 18110  001826  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 18111  001828  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 18112  00182A  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 18113  00182C  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 18114  00182E  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 18115  001830  0E00               	movlw	0
 18116  001832  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 18117  001834  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 18118  001836  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 18119  001838  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 18120  00183A  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 18121  00183C  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 18122  00183E  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 18123  001840  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 18124  001842  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 18125  001844  0E00               	movlw	0
 18126  001846  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 18127  001848  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 18128  00184A  0E00               	movlw	0
 18129  00184C  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 18130  00184E  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 18131  001850  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 18132  001852  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 18133  001854  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 18134  001856  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 18135  001858  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 18136  00185A  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 18137  00185C  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 18138  00185E  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 18139  001860  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 18140  001862  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 18141  001864  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 18142  001866  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 18143  001868  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 18144  00186A  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 18145  00186C  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 18146  00186E  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 18147  001870  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 18148  001872  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 18149  001874  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 18150  001876  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 18151  001878  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 18152  00187A  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 18153  00187C  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 18154  00187E  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 18155  001880  0E00               	movlw	0
 18156  001882  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 18157  001884  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 18158  001886  0E00               	movlw	0
 18159  001888  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 18160  00188A  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 18161  00188C  0E01               	movlw	1
 18162  00188E  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 18163  001890  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 18164  001892  0E00               	movlw	0
 18165  001894  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 18166  001896  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 18170  001898  C0F4  F0E8         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 18171  00189C  C0F5  F0E9         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 18172  0018A0  6BEA               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
 18173  0018A2  6BEB               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;sw_timer.c: 100: ticksAdded = 0;
 18177  0018A4  0E00               	movlw	0
 18178  0018A6  6FEC               	movwf	_ticksAdded& (0+255),b	;volatile
 18179  0018A8  0E00               	movlw	0
 18180  0018AA  6FED               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
 18181  0018AC  0E00               	movlw	0
 18182  0018AE  6FEE               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
 18183  0018B0  0E00               	movlw	0
 18184  0018B2  6FEF               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;sw_timer.c: 101: reloadVal = 0;
 18188  0018B4  0E00               	movlw	0
 18189  0018B6  6FF7               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 18190  0018B8  0E00               	movlw	0
 18191  0018BA  6FF6               	movwf	_reloadVal& (0+255),b	;volatile
 18192                           
 18193                           ;sw_timer.c: 102: }
 18194  0018BC  D03D               	goto	i2l214
 18195  0018BE                     i2l213:
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;sw_timer.c: 103: else
 18199                           ;sw_timer.c: 104: {
 18200                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 18201                           
 18202                           ; BSR set to: 0
 18203  0018BE  C0E8  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 18204  0018C2  C0E9  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 18205  0018C6  C0EA  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 18206  0018CA  C0EB  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 18207  0018CE  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 18208  0018D0  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 18209  0018D2  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 18210  0018D4  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 18211  0018D6  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 18212  0018D8  0E00               	movlw	0
 18213  0018DA  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 18214  0018DC  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 18215  0018DE  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 18216  0018E0  C0F6  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 18217  0018E4  C0F7  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 18218  0018E8  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 18219  0018EA  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 18220  0018EC  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 18221  0018EE  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 18222  0018F0  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 18223  0018F2  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 18224  0018F4  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 18225  0018F6  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 18226  0018F8  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 18227  0018FA  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 18228  0018FC  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 18229  0018FE  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 18230  001900  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 18231  001902  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 18232  001904  0E00               	movlw	0
 18233  001906  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 18234  001908  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 18235  00190A  0E00               	movlw	0
 18236  00190C  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 18237  00190E  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 18238  001910  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 18239  001912  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 18240  001914  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 18241  001916  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 18242  001918  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 18243  00191A  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 18244  00191C  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 18245  00191E  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 18246  001920  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 18247  001922  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 18248  001924  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 18249  001926  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 18250                           
 18251                           ;sw_timer.c: 106: ticksAccounted += retVal;
 18252  001928  51E4               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 18253  00192A  27E8               	addwf	_ticksAccounted& (0+255),f,b	;volatile
 18254  00192C  51E5               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 18255  00192E  23E9               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
 18256  001930  51E6               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 18257  001932  23EA               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
 18258  001934  51E7               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 18259  001936  23EB               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
 18260  001938                     i2l214:
 18261                           
 18262                           ; BSR set to: 0
 18263                           ;sw_timer.c: 107: }
 18264                           ;sw_timer.c: 109: return retVal;
 18265                           
 18266                           ; BSR set to: 0
 18267  001938  C0E4  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 18268  00193C  C0E5  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 18269  001940  C0E6  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 18270  001944  C0E7  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 18271  001948  0012               	return	
 18272  00194A                     __end_ofi2_TMR_GetDeltaTime:
 18273                           	opt stack 0
 18274                           tosu	equ	0xFFF
 18275                           tosh	equ	0xFFE
 18276                           tosl	equ	0xFFD
 18277                           pclatu	equ	0xFFB
 18278                           pclath	equ	0xFFA
 18279                           tblptru	equ	0xFF8
 18280                           tblptrh	equ	0xFF7
 18281                           tblptrl	equ	0xFF6
 18282                           tablat	equ	0xFF5
 18283                           prodh	equ	0xFF4
 18284                           prodl	equ	0xFF3
 18285                           intcon	equ	0xFF2
 18286                           intcon2	equ	0xFF1
 18287                           intcon3	equ	0xFF0
 18288                           indf0	equ	0xFEF
 18289                           postinc0	equ	0xFEE
 18290                           plusw0	equ	0xFEB
 18291                           fsr0h	equ	0xFEA
 18292                           fsr0l	equ	0xFE9
 18293                           wreg	equ	0xFE8
 18294                           fsr1h	equ	0xFE2
 18295                           fsr1l	equ	0xFE1
 18296                           indf2	equ	0xFDF
 18297                           postinc2	equ	0xFDE
 18298                           postdec2	equ	0xFDD
 18299                           plusw2	equ	0xFDB
 18300                           fsr2h	equ	0xFDA
 18301                           fsr2l	equ	0xFD9
 18302                           status	equ	0xFD8
 18303                           
 18304 ;; *************** function i2_TMR1_ReadTimer *****************
 18305 ;; Defined at:
 18306 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 18307 ;; Parameters:    Size  Location     Type
 18308 ;;		None
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 18311 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 18312 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 18313 ;; Return value:  Size  Location     Type
 18314 ;;                  2    0[COMRAM] unsigned int 
 18315 ;; Registers used:
 18316 ;;		wreg, status,2
 18317 ;; Tracked objects:
 18318 ;;		On entry : 0/0
 18319 ;;		On exit  : 0/0
 18320 ;;		Unchanged: 0/0
 18321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18323 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18325 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18326 ;;Total ram usage:        8 bytes
 18327 ;; Hardware stack levels used:    1
 18328 ;; This function calls:
 18329 ;;		Nothing
 18330 ;; This function is called by:
 18331 ;;		i2_TMR_GetDeltaTime
 18332 ;;		i2_TMR_SwapTimer
 18333 ;; This function uses a non-reentrant model
 18334 ;;
 18335                           
 18336                           	psect	text108
 18337  003608                     __ptext108:
 18338                           	opt stack 0
 18339  003608                     i2_TMR1_ReadTimer:
 18340                           	opt stack 17
 18341                           
 18342                           ;tmr1.c: 107: uint16_t readVal;
 18343                           ;tmr1.c: 108: uint8_t readValHigh;
 18344                           ;tmr1.c: 109: uint8_t readValLow;
 18345                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;incstack = 0
 18349  003608  82CD               	bsf	4045,1,c	;volatile
 18350                           
 18351                           ;tmr1.c: 113: readValLow = TMR1L;
 18352  00360A  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 18353                           
 18354                           ;tmr1.c: 114: readValHigh = TMR1H;
 18355  00360E  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 18356                           
 18357                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 18358  003612  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 18359  003614  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 18360  003616  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 18361  003618  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 18362  00361A  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 18363                           
 18364                           ;tmr1.c: 118: return readVal;
 18365  00361E  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 18366  003622  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 18367  003626  0012               	return	
 18368  003628                     __end_ofi2_TMR1_ReadTimer:
 18369                           	opt stack 0
 18370                           tosu	equ	0xFFF
 18371                           tosh	equ	0xFFE
 18372                           tosl	equ	0xFFD
 18373                           pclatu	equ	0xFFB
 18374                           pclath	equ	0xFFA
 18375                           tblptru	equ	0xFF8
 18376                           tblptrh	equ	0xFF7
 18377                           tblptrl	equ	0xFF6
 18378                           tablat	equ	0xFF5
 18379                           prodh	equ	0xFF4
 18380                           prodl	equ	0xFF3
 18381                           intcon	equ	0xFF2
 18382                           intcon2	equ	0xFF1
 18383                           intcon3	equ	0xFF0
 18384                           indf0	equ	0xFEF
 18385                           postinc0	equ	0xFEE
 18386                           plusw0	equ	0xFEB
 18387                           fsr0h	equ	0xFEA
 18388                           fsr0l	equ	0xFE9
 18389                           wreg	equ	0xFE8
 18390                           fsr1h	equ	0xFE2
 18391                           fsr1l	equ	0xFE1
 18392                           indf2	equ	0xFDF
 18393                           postinc2	equ	0xFDE
 18394                           postdec2	equ	0xFDD
 18395                           plusw2	equ	0xFDB
 18396                           fsr2h	equ	0xFDA
 18397                           fsr2l	equ	0xFD9
 18398                           status	equ	0xFD8
 18399                           
 18400 ;; *************** function _PIN_MANAGER_IOC *****************
 18401 ;; Defined at:
 18402 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;		None
 18405 ;; Auto vars:     Size  Location     Type
 18406 ;;		None
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  1    wreg      void 
 18409 ;; Registers used:
 18410 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18420 ;;Total ram usage:        0 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; Hardware stack levels required when called:    2
 18423 ;; This function calls:
 18424 ;;		_IOCB4_ISR
 18425 ;; This function is called by:
 18426 ;;		_INTERRUPT_InterruptManager
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           	psect	text109
 18431  003848                     __ptext109:
 18432                           	opt stack 0
 18433  003848                     _PIN_MANAGER_IOC:
 18434                           	opt stack 19
 18435                           
 18436                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 18437                           
 18438                           ;incstack = 0
 18439  003848  B862               	btfsc	3938,4,c	;volatile
 18440                           
 18441                           ;pin_manager.c: 114: {
 18442                           ;pin_manager.c: 115: IOCB4_ISR();
 18443  00384A  EC32  F01B         	call	_IOCB4_ISR	;wreg free
 18444                           
 18445                           ;pin_manager.c: 116: }
 18446                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 18447  00384E  90F2               	bcf	intcon,0,c	;volatile
 18448  003850  0012               	return		;funcret
 18449  003852                     __end_of_PIN_MANAGER_IOC:
 18450                           	opt stack 0
 18451                           tosu	equ	0xFFF
 18452                           tosh	equ	0xFFE
 18453                           tosl	equ	0xFFD
 18454                           pclatu	equ	0xFFB
 18455                           pclath	equ	0xFFA
 18456                           tblptru	equ	0xFF8
 18457                           tblptrh	equ	0xFF7
 18458                           tblptrl	equ	0xFF6
 18459                           tablat	equ	0xFF5
 18460                           prodh	equ	0xFF4
 18461                           prodl	equ	0xFF3
 18462                           intcon	equ	0xFF2
 18463                           intcon2	equ	0xFF1
 18464                           intcon3	equ	0xFF0
 18465                           indf0	equ	0xFEF
 18466                           postinc0	equ	0xFEE
 18467                           plusw0	equ	0xFEB
 18468                           fsr0h	equ	0xFEA
 18469                           fsr0l	equ	0xFE9
 18470                           wreg	equ	0xFE8
 18471                           fsr1h	equ	0xFE2
 18472                           fsr1l	equ	0xFE1
 18473                           indf2	equ	0xFDF
 18474                           postinc2	equ	0xFDE
 18475                           postdec2	equ	0xFDD
 18476                           plusw2	equ	0xFDB
 18477                           fsr2h	equ	0xFDA
 18478                           fsr2l	equ	0xFD9
 18479                           status	equ	0xFD8
 18480                           
 18481 ;; *************** function _IOCB4_ISR *****************
 18482 ;; Defined at:
 18483 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;		None
 18486 ;; Auto vars:     Size  Location     Type
 18487 ;;		None
 18488 ;; Return value:  Size  Location     Type
 18489 ;;                  1    wreg      void 
 18490 ;; Registers used:
 18491 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18492 ;; Tracked objects:
 18493 ;;		On entry : 0/0
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;Total ram usage:        0 bytes
 18502 ;; Hardware stack levels used:    1
 18503 ;; Hardware stack levels required when called:    1
 18504 ;; This function calls:
 18505 ;;		Absolute function
 18506 ;;		_DIO2_ISR_Lora
 18507 ;;		_IOCB4_DefaultInterruptHandler
 18508 ;; This function is called by:
 18509 ;;		_PIN_MANAGER_IOC
 18510 ;; This function uses a non-reentrant model
 18511 ;;
 18512                           
 18513                           	psect	text110
 18514  003664                     __ptext110:
 18515                           	opt stack 0
 18516  003664                     _IOCB4_ISR:
 18517                           	opt stack 19
 18518                           
 18519                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 18520                           
 18521                           ;incstack = 0
 18522  003664  504C               	movf	_IOCB4_InterruptHandler,w,c
 18523  003666  104D               	iorwf	_IOCB4_InterruptHandler+1,w,c
 18524  003668  B4D8               	btfsc	status,2,c
 18525  00366A  0012               	return	
 18526                           
 18527                           ;pin_manager.c: 130: {
 18528                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 18529  00366C  D801               	call	i2u529_48
 18530  00366E  0012               	return	
 18531  003670                     i2u529_48:
 18532  003670  0005               	push	
 18533  003672  6EFA               	movwf	pclath,c
 18534  003674  504C               	movf	_IOCB4_InterruptHandler,w,c
 18535  003676  6EFD               	movwf	tosl,c
 18536  003678  504D               	movf	_IOCB4_InterruptHandler+1,w,c
 18537  00367A  6EFE               	movwf	tosh,c
 18538  00367C  6AFF               	clrf	tosu,c
 18539  00367E  50FA               	movf	pclath,w,c
 18540  003680  0012               	return		;indir
 18541  003682                     __end_of_IOCB4_ISR:
 18542                           	opt stack 0
 18543                           tosu	equ	0xFFF
 18544                           tosh	equ	0xFFE
 18545                           tosl	equ	0xFFD
 18546                           pclatu	equ	0xFFB
 18547                           pclath	equ	0xFFA
 18548                           tblptru	equ	0xFF8
 18549                           tblptrh	equ	0xFF7
 18550                           tblptrl	equ	0xFF6
 18551                           tablat	equ	0xFF5
 18552                           prodh	equ	0xFF4
 18553                           prodl	equ	0xFF3
 18554                           intcon	equ	0xFF2
 18555                           intcon2	equ	0xFF1
 18556                           intcon3	equ	0xFF0
 18557                           indf0	equ	0xFEF
 18558                           postinc0	equ	0xFEE
 18559                           plusw0	equ	0xFEB
 18560                           fsr0h	equ	0xFEA
 18561                           fsr0l	equ	0xFE9
 18562                           wreg	equ	0xFE8
 18563                           fsr1h	equ	0xFE2
 18564                           fsr1l	equ	0xFE1
 18565                           indf2	equ	0xFDF
 18566                           postinc2	equ	0xFDE
 18567                           postdec2	equ	0xFDD
 18568                           plusw2	equ	0xFDB
 18569                           fsr2h	equ	0xFDA
 18570                           fsr2l	equ	0xFD9
 18571                           status	equ	0xFD8
 18572                           
 18573 ;; *************** function _DIO2_ISR_Lora *****************
 18574 ;; Defined at:
 18575 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 18576 ;; Parameters:    Size  Location     Type
 18577 ;;		None
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;		None
 18580 ;; Return value:  Size  Location     Type
 18581 ;;                  1    wreg      void 
 18582 ;; Registers used:
 18583 ;;		status,2, status,0
 18584 ;; Tracked objects:
 18585 ;;		On entry : 0/0
 18586 ;;		On exit  : 0/0
 18587 ;;		Unchanged: 0/0
 18588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18593 ;;Total ram usage:        0 bytes
 18594 ;; Hardware stack levels used:    1
 18595 ;; This function calls:
 18596 ;;		Nothing
 18597 ;; This function is called by:
 18598 ;;		_DIO2_ISR_Lora_Init
 18599 ;;		_IOCB4_ISR
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text111
 18604  003886                     __ptext111:
 18605                           	opt stack 0
 18606  003886                     _DIO2_ISR_Lora:
 18607                           	opt stack 19
 18608                           
 18609                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 18610                           
 18611                           ;incstack = 0
 18612  003886  8457               	bsf	_dioStatus,2,c	;volatile
 18613  003888  0012               	return		;funcret
 18614  00388A                     __end_of_DIO2_ISR_Lora:
 18615                           	opt stack 0
 18616                           tosu	equ	0xFFF
 18617                           tosh	equ	0xFFE
 18618                           tosl	equ	0xFFD
 18619                           pclatu	equ	0xFFB
 18620                           pclath	equ	0xFFA
 18621                           tblptru	equ	0xFF8
 18622                           tblptrh	equ	0xFF7
 18623                           tblptrl	equ	0xFF6
 18624                           tablat	equ	0xFF5
 18625                           prodh	equ	0xFF4
 18626                           prodl	equ	0xFF3
 18627                           intcon	equ	0xFF2
 18628                           intcon2	equ	0xFF1
 18629                           intcon3	equ	0xFF0
 18630                           indf0	equ	0xFEF
 18631                           postinc0	equ	0xFEE
 18632                           plusw0	equ	0xFEB
 18633                           fsr0h	equ	0xFEA
 18634                           fsr0l	equ	0xFE9
 18635                           wreg	equ	0xFE8
 18636                           fsr1h	equ	0xFE2
 18637                           fsr1l	equ	0xFE1
 18638                           indf2	equ	0xFDF
 18639                           postinc2	equ	0xFDE
 18640                           postdec2	equ	0xFDD
 18641                           plusw2	equ	0xFDB
 18642                           fsr2h	equ	0xFDA
 18643                           fsr2l	equ	0xFD9
 18644                           status	equ	0xFD8
 18645                           
 18646 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18647 ;; Defined at:
 18648 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 18649 ;; Parameters:    Size  Location     Type
 18650 ;;		None
 18651 ;; Auto vars:     Size  Location     Type
 18652 ;;		None
 18653 ;; Return value:  Size  Location     Type
 18654 ;;                  1    wreg      void 
 18655 ;; Registers used:
 18656 ;;		None
 18657 ;; Tracked objects:
 18658 ;;		On entry : 0/0
 18659 ;;		On exit  : 0/0
 18660 ;;		Unchanged: 0/0
 18661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18666 ;;Total ram usage:        0 bytes
 18667 ;; Hardware stack levels used:    1
 18668 ;; This function calls:
 18669 ;;		Nothing
 18670 ;; This function is called by:
 18671 ;;		_PIN_MANAGER_Initialize
 18672 ;;		_IOCB4_ISR
 18673 ;; This function uses a non-reentrant model
 18674 ;;
 18675                           
 18676                           	psect	text112
 18677  00389A                     __ptext112:
 18678                           	opt stack 0
 18679  00389A                     _IOCB4_DefaultInterruptHandler:
 18680                           	opt stack 19
 18681                           
 18682                           ;incstack = 0
 18683  00389A  0012               	return		;funcret
 18684  00389C                     __end_of_IOCB4_DefaultInterruptHandler:
 18685                           	opt stack 0
 18686                           tosu	equ	0xFFF
 18687                           tosh	equ	0xFFE
 18688                           tosl	equ	0xFFD
 18689                           pclatu	equ	0xFFB
 18690                           pclath	equ	0xFFA
 18691                           tblptru	equ	0xFF8
 18692                           tblptrh	equ	0xFF7
 18693                           tblptrl	equ	0xFF6
 18694                           tablat	equ	0xFF5
 18695                           prodh	equ	0xFF4
 18696                           prodl	equ	0xFF3
 18697                           intcon	equ	0xFF2
 18698                           intcon2	equ	0xFF1
 18699                           intcon3	equ	0xFF0
 18700                           indf0	equ	0xFEF
 18701                           postinc0	equ	0xFEE
 18702                           plusw0	equ	0xFEB
 18703                           fsr0h	equ	0xFEA
 18704                           fsr0l	equ	0xFE9
 18705                           wreg	equ	0xFE8
 18706                           fsr1h	equ	0xFE2
 18707                           fsr1l	equ	0xFE1
 18708                           indf2	equ	0xFDF
 18709                           postinc2	equ	0xFDE
 18710                           postdec2	equ	0xFDD
 18711                           plusw2	equ	0xFDB
 18712                           fsr2h	equ	0xFDA
 18713                           fsr2l	equ	0xFD9
 18714                           status	equ	0xFD8
 18715                           
 18716 ;; *************** function _INT2_ISR *****************
 18717 ;; Defined at:
 18718 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18719 ;; Parameters:    Size  Location     Type
 18720 ;;		None
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;		None
 18723 ;; Return value:  Size  Location     Type
 18724 ;;                  1    wreg      void 
 18725 ;; Registers used:
 18726 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18727 ;; Tracked objects:
 18728 ;;		On entry : 0/0
 18729 ;;		On exit  : 0/0
 18730 ;;		Unchanged: 0/0
 18731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18736 ;;Total ram usage:        0 bytes
 18737 ;; Hardware stack levels used:    1
 18738 ;; Hardware stack levels required when called:    2
 18739 ;; This function calls:
 18740 ;;		_INT2_CallBack
 18741 ;; This function is called by:
 18742 ;;		_INTERRUPT_InterruptManager
 18743 ;; This function uses a non-reentrant model
 18744 ;;
 18745                           
 18746                           	psect	text113
 18747  00385A                     __ptext113:
 18748                           	opt stack 0
 18749  00385A                     _INT2_ISR:
 18750                           	opt stack 19
 18751                           
 18752                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 18753                           
 18754                           ;incstack = 0
 18755  00385A  92F0               	bcf	intcon3,1,c	;volatile
 18756                           
 18757                           ;ext_int.c: 64: INT2_CallBack();
 18758  00385C  EC41  F01B         	call	_INT2_CallBack	;wreg free
 18759  003860  0012               	return		;funcret
 18760  003862                     __end_of_INT2_ISR:
 18761                           	opt stack 0
 18762                           tosu	equ	0xFFF
 18763                           tosh	equ	0xFFE
 18764                           tosl	equ	0xFFD
 18765                           pclatu	equ	0xFFB
 18766                           pclath	equ	0xFFA
 18767                           tblptru	equ	0xFF8
 18768                           tblptrh	equ	0xFF7
 18769                           tblptrl	equ	0xFF6
 18770                           tablat	equ	0xFF5
 18771                           prodh	equ	0xFF4
 18772                           prodl	equ	0xFF3
 18773                           intcon	equ	0xFF2
 18774                           intcon2	equ	0xFF1
 18775                           intcon3	equ	0xFF0
 18776                           indf0	equ	0xFEF
 18777                           postinc0	equ	0xFEE
 18778                           plusw0	equ	0xFEB
 18779                           fsr0h	equ	0xFEA
 18780                           fsr0l	equ	0xFE9
 18781                           wreg	equ	0xFE8
 18782                           fsr1h	equ	0xFE2
 18783                           fsr1l	equ	0xFE1
 18784                           indf2	equ	0xFDF
 18785                           postinc2	equ	0xFDE
 18786                           postdec2	equ	0xFDD
 18787                           plusw2	equ	0xFDB
 18788                           fsr2h	equ	0xFDA
 18789                           fsr2l	equ	0xFD9
 18790                           status	equ	0xFD8
 18791                           
 18792 ;; *************** function _INT2_CallBack *****************
 18793 ;; Defined at:
 18794 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 18795 ;; Parameters:    Size  Location     Type
 18796 ;;		None
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;		None
 18799 ;; Return value:  Size  Location     Type
 18800 ;;                  1    wreg      void 
 18801 ;; Registers used:
 18802 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18803 ;; Tracked objects:
 18804 ;;		On entry : 0/0
 18805 ;;		On exit  : 0/0
 18806 ;;		Unchanged: 0/0
 18807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18812 ;;Total ram usage:        0 bytes
 18813 ;; Hardware stack levels used:    1
 18814 ;; Hardware stack levels required when called:    1
 18815 ;; This function calls:
 18816 ;;		Absolute function
 18817 ;;		_DIO1_ISR_Lora
 18818 ;;		_INT2_DefaultInterruptHandler
 18819 ;; This function is called by:
 18820 ;;		_INT2_ISR
 18821 ;; This function uses a non-reentrant model
 18822 ;;
 18823                           
 18824                           	psect	text114
 18825  003682                     __ptext114:
 18826                           	opt stack 0
 18827  003682                     _INT2_CallBack:
 18828                           	opt stack 19
 18829                           
 18830                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 18831                           
 18832                           ;incstack = 0
 18833  003682  504E               	movf	_INT2_InterruptHandler,w,c
 18834  003684  104F               	iorwf	_INT2_InterruptHandler+1,w,c
 18835  003686  B4D8               	btfsc	status,2,c
 18836  003688  0012               	return	
 18837                           
 18838                           ;ext_int.c: 72: {
 18839                           ;ext_int.c: 73: INT2_InterruptHandler();
 18840  00368A  D801               	call	i2u527_48
 18841  00368C  0012               	return	
 18842  00368E                     i2u527_48:
 18843  00368E  0005               	push	
 18844  003690  6EFA               	movwf	pclath,c
 18845  003692  504E               	movf	_INT2_InterruptHandler,w,c
 18846  003694  6EFD               	movwf	tosl,c
 18847  003696  504F               	movf	_INT2_InterruptHandler+1,w,c
 18848  003698  6EFE               	movwf	tosh,c
 18849  00369A  6AFF               	clrf	tosu,c
 18850  00369C  50FA               	movf	pclath,w,c
 18851  00369E  0012               	return		;indir
 18852  0036A0                     __end_of_INT2_CallBack:
 18853                           	opt stack 0
 18854                           tosu	equ	0xFFF
 18855                           tosh	equ	0xFFE
 18856                           tosl	equ	0xFFD
 18857                           pclatu	equ	0xFFB
 18858                           pclath	equ	0xFFA
 18859                           tblptru	equ	0xFF8
 18860                           tblptrh	equ	0xFF7
 18861                           tblptrl	equ	0xFF6
 18862                           tablat	equ	0xFF5
 18863                           prodh	equ	0xFF4
 18864                           prodl	equ	0xFF3
 18865                           intcon	equ	0xFF2
 18866                           intcon2	equ	0xFF1
 18867                           intcon3	equ	0xFF0
 18868                           indf0	equ	0xFEF
 18869                           postinc0	equ	0xFEE
 18870                           plusw0	equ	0xFEB
 18871                           fsr0h	equ	0xFEA
 18872                           fsr0l	equ	0xFE9
 18873                           wreg	equ	0xFE8
 18874                           fsr1h	equ	0xFE2
 18875                           fsr1l	equ	0xFE1
 18876                           indf2	equ	0xFDF
 18877                           postinc2	equ	0xFDE
 18878                           postdec2	equ	0xFDD
 18879                           plusw2	equ	0xFDB
 18880                           fsr2h	equ	0xFDA
 18881                           fsr2l	equ	0xFD9
 18882                           status	equ	0xFD8
 18883                           
 18884 ;; *************** function _DIO1_ISR_Lora *****************
 18885 ;; Defined at:
 18886 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 18887 ;; Parameters:    Size  Location     Type
 18888 ;;		None
 18889 ;; Auto vars:     Size  Location     Type
 18890 ;;		None
 18891 ;; Return value:  Size  Location     Type
 18892 ;;                  1    wreg      void 
 18893 ;; Registers used:
 18894 ;;		status,2, status,0
 18895 ;; Tracked objects:
 18896 ;;		On entry : 0/0
 18897 ;;		On exit  : 0/0
 18898 ;;		Unchanged: 0/0
 18899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18904 ;;Total ram usage:        0 bytes
 18905 ;; Hardware stack levels used:    1
 18906 ;; This function calls:
 18907 ;;		Nothing
 18908 ;; This function is called by:
 18909 ;;		_DIO1_ISR_Lora_Init
 18910 ;;		_INT2_CallBack
 18911 ;; This function uses a non-reentrant model
 18912 ;;
 18913                           
 18914                           	psect	text115
 18915  00388A                     __ptext115:
 18916                           	opt stack 0
 18917  00388A                     _DIO1_ISR_Lora:
 18918                           	opt stack 19
 18919                           
 18920                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 18921                           
 18922                           ;incstack = 0
 18923  00388A  8257               	bsf	_dioStatus,1,c	;volatile
 18924  00388C  0012               	return		;funcret
 18925  00388E                     __end_of_DIO1_ISR_Lora:
 18926                           	opt stack 0
 18927                           tosu	equ	0xFFF
 18928                           tosh	equ	0xFFE
 18929                           tosl	equ	0xFFD
 18930                           pclatu	equ	0xFFB
 18931                           pclath	equ	0xFFA
 18932                           tblptru	equ	0xFF8
 18933                           tblptrh	equ	0xFF7
 18934                           tblptrl	equ	0xFF6
 18935                           tablat	equ	0xFF5
 18936                           prodh	equ	0xFF4
 18937                           prodl	equ	0xFF3
 18938                           intcon	equ	0xFF2
 18939                           intcon2	equ	0xFF1
 18940                           intcon3	equ	0xFF0
 18941                           indf0	equ	0xFEF
 18942                           postinc0	equ	0xFEE
 18943                           plusw0	equ	0xFEB
 18944                           fsr0h	equ	0xFEA
 18945                           fsr0l	equ	0xFE9
 18946                           wreg	equ	0xFE8
 18947                           fsr1h	equ	0xFE2
 18948                           fsr1l	equ	0xFE1
 18949                           indf2	equ	0xFDF
 18950                           postinc2	equ	0xFDE
 18951                           postdec2	equ	0xFDD
 18952                           plusw2	equ	0xFDB
 18953                           fsr2h	equ	0xFDA
 18954                           fsr2l	equ	0xFD9
 18955                           status	equ	0xFD8
 18956                           
 18957 ;; *************** function _INT2_DefaultInterruptHandler *****************
 18958 ;; Defined at:
 18959 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;		None
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;		None
 18964 ;; Return value:  Size  Location     Type
 18965 ;;                  1    wreg      void 
 18966 ;; Registers used:
 18967 ;;		None
 18968 ;; Tracked objects:
 18969 ;;		On entry : 0/0
 18970 ;;		On exit  : 0/0
 18971 ;;		Unchanged: 0/0
 18972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;Total ram usage:        0 bytes
 18978 ;; Hardware stack levels used:    1
 18979 ;; This function calls:
 18980 ;;		Nothing
 18981 ;; This function is called by:
 18982 ;;		_EXT_INT_Initialize
 18983 ;;		_INT2_CallBack
 18984 ;; This function uses a non-reentrant model
 18985 ;;
 18986                           
 18987                           	psect	text116
 18988  00389C                     __ptext116:
 18989                           	opt stack 0
 18990  00389C                     _INT2_DefaultInterruptHandler:
 18991                           	opt stack 19
 18992                           
 18993                           ;incstack = 0
 18994  00389C  0012               	return		;funcret
 18995  00389E                     __end_of_INT2_DefaultInterruptHandler:
 18996                           	opt stack 0
 18997                           tosu	equ	0xFFF
 18998                           tosh	equ	0xFFE
 18999                           tosl	equ	0xFFD
 19000                           pclatu	equ	0xFFB
 19001                           pclath	equ	0xFFA
 19002                           tblptru	equ	0xFF8
 19003                           tblptrh	equ	0xFF7
 19004                           tblptrl	equ	0xFF6
 19005                           tablat	equ	0xFF5
 19006                           prodh	equ	0xFF4
 19007                           prodl	equ	0xFF3
 19008                           intcon	equ	0xFF2
 19009                           intcon2	equ	0xFF1
 19010                           intcon3	equ	0xFF0
 19011                           indf0	equ	0xFEF
 19012                           postinc0	equ	0xFEE
 19013                           plusw0	equ	0xFEB
 19014                           fsr0h	equ	0xFEA
 19015                           fsr0l	equ	0xFE9
 19016                           wreg	equ	0xFE8
 19017                           fsr1h	equ	0xFE2
 19018                           fsr1l	equ	0xFE1
 19019                           indf2	equ	0xFDF
 19020                           postinc2	equ	0xFDE
 19021                           postdec2	equ	0xFDD
 19022                           plusw2	equ	0xFDB
 19023                           fsr2h	equ	0xFDA
 19024                           fsr2l	equ	0xFD9
 19025                           status	equ	0xFD8
 19026                           
 19027 ;; *************** function _INT1_ISR *****************
 19028 ;; Defined at:
 19029 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 19030 ;; Parameters:    Size  Location     Type
 19031 ;;		None
 19032 ;; Auto vars:     Size  Location     Type
 19033 ;;		None
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  1    wreg      void 
 19036 ;; Registers used:
 19037 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19047 ;;Total ram usage:        0 bytes
 19048 ;; Hardware stack levels used:    1
 19049 ;; Hardware stack levels required when called:    2
 19050 ;; This function calls:
 19051 ;;		_INT1_CallBack
 19052 ;; This function is called by:
 19053 ;;		_INTERRUPT_InterruptManager
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text117
 19058  003862                     __ptext117:
 19059                           	opt stack 0
 19060  003862                     _INT1_ISR:
 19061                           	opt stack 19
 19062                           
 19063                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 19064                           
 19065                           ;incstack = 0
 19066  003862  90F0               	bcf	intcon3,0,c	;volatile
 19067                           
 19068                           ;ext_int.c: 38: INT1_CallBack();
 19069  003864  EC50  F01B         	call	_INT1_CallBack	;wreg free
 19070  003868  0012               	return		;funcret
 19071  00386A                     __end_of_INT1_ISR:
 19072                           	opt stack 0
 19073                           tosu	equ	0xFFF
 19074                           tosh	equ	0xFFE
 19075                           tosl	equ	0xFFD
 19076                           pclatu	equ	0xFFB
 19077                           pclath	equ	0xFFA
 19078                           tblptru	equ	0xFF8
 19079                           tblptrh	equ	0xFF7
 19080                           tblptrl	equ	0xFF6
 19081                           tablat	equ	0xFF5
 19082                           prodh	equ	0xFF4
 19083                           prodl	equ	0xFF3
 19084                           intcon	equ	0xFF2
 19085                           intcon2	equ	0xFF1
 19086                           intcon3	equ	0xFF0
 19087                           indf0	equ	0xFEF
 19088                           postinc0	equ	0xFEE
 19089                           plusw0	equ	0xFEB
 19090                           fsr0h	equ	0xFEA
 19091                           fsr0l	equ	0xFE9
 19092                           wreg	equ	0xFE8
 19093                           fsr1h	equ	0xFE2
 19094                           fsr1l	equ	0xFE1
 19095                           indf2	equ	0xFDF
 19096                           postinc2	equ	0xFDE
 19097                           postdec2	equ	0xFDD
 19098                           plusw2	equ	0xFDB
 19099                           fsr2h	equ	0xFDA
 19100                           fsr2l	equ	0xFD9
 19101                           status	equ	0xFD8
 19102                           
 19103 ;; *************** function _INT1_CallBack *****************
 19104 ;; Defined at:
 19105 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 19106 ;; Parameters:    Size  Location     Type
 19107 ;;		None
 19108 ;; Auto vars:     Size  Location     Type
 19109 ;;		None
 19110 ;; Return value:  Size  Location     Type
 19111 ;;                  1    wreg      void 
 19112 ;; Registers used:
 19113 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19114 ;; Tracked objects:
 19115 ;;		On entry : 0/0
 19116 ;;		On exit  : 0/0
 19117 ;;		Unchanged: 0/0
 19118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19123 ;;Total ram usage:        0 bytes
 19124 ;; Hardware stack levels used:    1
 19125 ;; Hardware stack levels required when called:    1
 19126 ;; This function calls:
 19127 ;;		Absolute function
 19128 ;;		_DIO0_ISR_Lora
 19129 ;;		_INT1_DefaultInterruptHandler
 19130 ;; This function is called by:
 19131 ;;		_INT1_ISR
 19132 ;; This function uses a non-reentrant model
 19133 ;;
 19134                           
 19135                           	psect	text118
 19136  0036A0                     __ptext118:
 19137                           	opt stack 0
 19138  0036A0                     _INT1_CallBack:
 19139                           	opt stack 19
 19140                           
 19141                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 19142                           
 19143                           ;incstack = 0
 19144  0036A0  5050               	movf	_INT1_InterruptHandler,w,c
 19145  0036A2  1051               	iorwf	_INT1_InterruptHandler+1,w,c
 19146  0036A4  B4D8               	btfsc	status,2,c
 19147  0036A6  0012               	return	
 19148                           
 19149                           ;ext_int.c: 46: {
 19150                           ;ext_int.c: 47: INT1_InterruptHandler();
 19151  0036A8  D801               	call	i2u525_48
 19152  0036AA  0012               	return	
 19153  0036AC                     i2u525_48:
 19154  0036AC  0005               	push	
 19155  0036AE  6EFA               	movwf	pclath,c
 19156  0036B0  5050               	movf	_INT1_InterruptHandler,w,c
 19157  0036B2  6EFD               	movwf	tosl,c
 19158  0036B4  5051               	movf	_INT1_InterruptHandler+1,w,c
 19159  0036B6  6EFE               	movwf	tosh,c
 19160  0036B8  6AFF               	clrf	tosu,c
 19161  0036BA  50FA               	movf	pclath,w,c
 19162  0036BC  0012               	return		;indir
 19163  0036BE                     __end_of_INT1_CallBack:
 19164                           	opt stack 0
 19165                           tosu	equ	0xFFF
 19166                           tosh	equ	0xFFE
 19167                           tosl	equ	0xFFD
 19168                           pclatu	equ	0xFFB
 19169                           pclath	equ	0xFFA
 19170                           tblptru	equ	0xFF8
 19171                           tblptrh	equ	0xFF7
 19172                           tblptrl	equ	0xFF6
 19173                           tablat	equ	0xFF5
 19174                           prodh	equ	0xFF4
 19175                           prodl	equ	0xFF3
 19176                           intcon	equ	0xFF2
 19177                           intcon2	equ	0xFF1
 19178                           intcon3	equ	0xFF0
 19179                           indf0	equ	0xFEF
 19180                           postinc0	equ	0xFEE
 19181                           plusw0	equ	0xFEB
 19182                           fsr0h	equ	0xFEA
 19183                           fsr0l	equ	0xFE9
 19184                           wreg	equ	0xFE8
 19185                           fsr1h	equ	0xFE2
 19186                           fsr1l	equ	0xFE1
 19187                           indf2	equ	0xFDF
 19188                           postinc2	equ	0xFDE
 19189                           postdec2	equ	0xFDD
 19190                           plusw2	equ	0xFDB
 19191                           fsr2h	equ	0xFDA
 19192                           fsr2l	equ	0xFD9
 19193                           status	equ	0xFD8
 19194                           
 19195 ;; *************** function _DIO0_ISR_Lora *****************
 19196 ;; Defined at:
 19197 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 19198 ;; Parameters:    Size  Location     Type
 19199 ;;		None
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  1    wreg      void 
 19204 ;; Registers used:
 19205 ;;		status,2, status,0
 19206 ;; Tracked objects:
 19207 ;;		On entry : 0/0
 19208 ;;		On exit  : 0/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19215 ;;Total ram usage:        0 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; This function calls:
 19218 ;;		Nothing
 19219 ;; This function is called by:
 19220 ;;		_DIO0_ISR_Lora_Init
 19221 ;;		_INT1_CallBack
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           	psect	text119
 19226  00388E                     __ptext119:
 19227                           	opt stack 0
 19228  00388E                     _DIO0_ISR_Lora:
 19229                           	opt stack 19
 19230                           
 19231                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 19232                           
 19233                           ;incstack = 0
 19234  00388E  8057               	bsf	_dioStatus,0,c	;volatile
 19235  003890  0012               	return		;funcret
 19236  003892                     __end_of_DIO0_ISR_Lora:
 19237                           	opt stack 0
 19238                           tosu	equ	0xFFF
 19239                           tosh	equ	0xFFE
 19240                           tosl	equ	0xFFD
 19241                           pclatu	equ	0xFFB
 19242                           pclath	equ	0xFFA
 19243                           tblptru	equ	0xFF8
 19244                           tblptrh	equ	0xFF7
 19245                           tblptrl	equ	0xFF6
 19246                           tablat	equ	0xFF5
 19247                           prodh	equ	0xFF4
 19248                           prodl	equ	0xFF3
 19249                           intcon	equ	0xFF2
 19250                           intcon2	equ	0xFF1
 19251                           intcon3	equ	0xFF0
 19252                           indf0	equ	0xFEF
 19253                           postinc0	equ	0xFEE
 19254                           plusw0	equ	0xFEB
 19255                           fsr0h	equ	0xFEA
 19256                           fsr0l	equ	0xFE9
 19257                           wreg	equ	0xFE8
 19258                           fsr1h	equ	0xFE2
 19259                           fsr1l	equ	0xFE1
 19260                           indf2	equ	0xFDF
 19261                           postinc2	equ	0xFDE
 19262                           postdec2	equ	0xFDD
 19263                           plusw2	equ	0xFDB
 19264                           fsr2h	equ	0xFDA
 19265                           fsr2l	equ	0xFD9
 19266                           status	equ	0xFD8
 19267                           
 19268 ;; *************** function _INT1_DefaultInterruptHandler *****************
 19269 ;; Defined at:
 19270 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 19271 ;; Parameters:    Size  Location     Type
 19272 ;;		None
 19273 ;; Auto vars:     Size  Location     Type
 19274 ;;		None
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  1    wreg      void 
 19277 ;; Registers used:
 19278 ;;		None
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19288 ;;Total ram usage:        0 bytes
 19289 ;; Hardware stack levels used:    1
 19290 ;; This function calls:
 19291 ;;		Nothing
 19292 ;; This function is called by:
 19293 ;;		_EXT_INT_Initialize
 19294 ;;		_INT1_CallBack
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text120
 19299  00389E                     __ptext120:
 19300                           	opt stack 0
 19301  00389E                     _INT1_DefaultInterruptHandler:
 19302                           	opt stack 19
 19303                           
 19304                           ;incstack = 0
 19305  00389E  0012               	return		;funcret
 19306  0038A0                     __end_of_INT1_DefaultInterruptHandler:
 19307                           	opt stack 0
 19308                           tosu	equ	0xFFF
 19309                           tosh	equ	0xFFE
 19310                           tosl	equ	0xFFD
 19311                           pclatu	equ	0xFFB
 19312                           pclath	equ	0xFFA
 19313                           tblptru	equ	0xFF8
 19314                           tblptrh	equ	0xFF7
 19315                           tblptrl	equ	0xFF6
 19316                           tablat	equ	0xFF5
 19317                           prodh	equ	0xFF4
 19318                           prodl	equ	0xFF3
 19319                           intcon	equ	0xFF2
 19320                           intcon2	equ	0xFF1
 19321                           intcon3	equ	0xFF0
 19322                           indf0	equ	0xFEF
 19323                           postinc0	equ	0xFEE
 19324                           plusw0	equ	0xFEB
 19325                           fsr0h	equ	0xFEA
 19326                           fsr0l	equ	0xFE9
 19327                           wreg	equ	0xFE8
 19328                           fsr1h	equ	0xFE2
 19329                           fsr1l	equ	0xFE1
 19330                           indf2	equ	0xFDF
 19331                           postinc2	equ	0xFDE
 19332                           postdec2	equ	0xFDD
 19333                           plusw2	equ	0xFDB
 19334                           fsr2h	equ	0xFDA
 19335                           fsr2l	equ	0xFD9
 19336                           status	equ	0xFD8
 19337                           tosu	equ	0xFFF
 19338                           tosh	equ	0xFFE
 19339                           tosl	equ	0xFFD
 19340                           pclatu	equ	0xFFB
 19341                           pclath	equ	0xFFA
 19342                           tblptru	equ	0xFF8
 19343                           tblptrh	equ	0xFF7
 19344                           tblptrl	equ	0xFF6
 19345                           tablat	equ	0xFF5
 19346                           prodh	equ	0xFF4
 19347                           prodl	equ	0xFF3
 19348                           intcon	equ	0xFF2
 19349                           intcon2	equ	0xFF1
 19350                           intcon3	equ	0xFF0
 19351                           indf0	equ	0xFEF
 19352                           postinc0	equ	0xFEE
 19353                           plusw0	equ	0xFEB
 19354                           fsr0h	equ	0xFEA
 19355                           fsr0l	equ	0xFE9
 19356                           wreg	equ	0xFE8
 19357                           fsr1h	equ	0xFE2
 19358                           fsr1l	equ	0xFE1
 19359                           indf2	equ	0xFDF
 19360                           postinc2	equ	0xFDE
 19361                           postdec2	equ	0xFDD
 19362                           plusw2	equ	0xFDB
 19363                           fsr2h	equ	0xFDA
 19364                           fsr2l	equ	0xFD9
 19365                           status	equ	0xFD8
 19366                           
 19367                           	psect	text121
 19368  000000                     __ptext121:
 19369                           	opt stack 0
 19370                           tosu	equ	0xFFF
 19371                           tosh	equ	0xFFE
 19372                           tosl	equ	0xFFD
 19373                           pclatu	equ	0xFFB
 19374                           pclath	equ	0xFFA
 19375                           tblptru	equ	0xFF8
 19376                           tblptrh	equ	0xFF7
 19377                           tblptrl	equ	0xFF6
 19378                           tablat	equ	0xFF5
 19379                           prodh	equ	0xFF4
 19380                           prodl	equ	0xFF3
 19381                           intcon	equ	0xFF2
 19382                           intcon2	equ	0xFF1
 19383                           intcon3	equ	0xFF0
 19384                           indf0	equ	0xFEF
 19385                           postinc0	equ	0xFEE
 19386                           plusw0	equ	0xFEB
 19387                           fsr0h	equ	0xFEA
 19388                           fsr0l	equ	0xFE9
 19389                           wreg	equ	0xFE8
 19390                           fsr1h	equ	0xFE2
 19391                           fsr1l	equ	0xFE1
 19392                           indf2	equ	0xFDF
 19393                           postinc2	equ	0xFDE
 19394                           postdec2	equ	0xFDD
 19395                           plusw2	equ	0xFDB
 19396                           fsr2h	equ	0xFDA
 19397                           fsr2l	equ	0xFD9
 19398                           status	equ	0xFD8
 19399                           
 19400                           	psect	rparam
 19401  0000                     tosu	equ	0xFFF
 19402                           tosh	equ	0xFFE
 19403                           tosl	equ	0xFFD
 19404                           pclatu	equ	0xFFB
 19405                           pclath	equ	0xFFA
 19406                           tblptru	equ	0xFF8
 19407                           tblptrh	equ	0xFF7
 19408                           tblptrl	equ	0xFF6
 19409                           tablat	equ	0xFF5
 19410                           prodh	equ	0xFF4
 19411                           prodl	equ	0xFF3
 19412                           intcon	equ	0xFF2
 19413                           intcon2	equ	0xFF1
 19414                           intcon3	equ	0xFF0
 19415                           indf0	equ	0xFEF
 19416                           postinc0	equ	0xFEE
 19417                           plusw0	equ	0xFEB
 19418                           fsr0h	equ	0xFEA
 19419                           fsr0l	equ	0xFE9
 19420                           wreg	equ	0xFE8
 19421                           fsr1h	equ	0xFE2
 19422                           fsr1l	equ	0xFE1
 19423                           indf2	equ	0xFDF
 19424                           postinc2	equ	0xFDE
 19425                           postdec2	equ	0xFDD
 19426                           plusw2	equ	0xFDB
 19427                           fsr2h	equ	0xFDA
 19428                           fsr2l	equ	0xFD9
 19429                           status	equ	0xFD8
 19430                           
 19431                           	psect	temp
 19432  00003C                     btemp:
 19433                           	opt stack 0
 19434  00003C                     	ds	12
 19435  0000                     wtemp0	set	btemp
 19436  0000                     wtemp1	set	btemp+2
 19437  0000                     wtemp2	set	btemp+4
 19438  0000                     wtemp3	set	btemp+6
 19439  0000                     wtemp4	set	btemp+8
 19440  0000                     wtemp5	set	btemp+10
 19441  0000                     wtemp6	set	btemp+1
 19442  0000                     ttemp0	set	btemp
 19443  0000                     ttemp1	set	btemp+3
 19444  0000                     ttemp2	set	btemp+6
 19445  0000                     ttemp3	set	btemp+9
 19446  0000                     ltemp0	set	btemp
 19447  0000                     ltemp1	set	btemp+4
 19448  0000                     ltemp2	set	btemp+8
 19449                           tosu	equ	0xFFF
 19450                           tosh	equ	0xFFE
 19451                           tosl	equ	0xFFD
 19452                           pclatu	equ	0xFFB
 19453                           pclath	equ	0xFFA
 19454                           tblptru	equ	0xFF8
 19455                           tblptrh	equ	0xFF7
 19456                           tblptrl	equ	0xFF6
 19457                           tablat	equ	0xFF5
 19458                           prodh	equ	0xFF4
 19459                           prodl	equ	0xFF3
 19460                           intcon	equ	0xFF2
 19461                           intcon2	equ	0xFF1
 19462                           intcon3	equ	0xFF0
 19463                           indf0	equ	0xFEF
 19464                           postinc0	equ	0xFEE
 19465                           plusw0	equ	0xFEB
 19466                           fsr0h	equ	0xFEA
 19467                           fsr0l	equ	0xFE9
 19468                           wreg	equ	0xFE8
 19469                           fsr1h	equ	0xFE2
 19470                           fsr1l	equ	0xFE1
 19471                           indf2	equ	0xFDF
 19472                           postinc2	equ	0xFDE
 19473                           postdec2	equ	0xFDD
 19474                           plusw2	equ	0xFDB
 19475                           fsr2h	equ	0xFDA
 19476                           fsr2l	equ	0xFD9
 19477                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         1271
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    128     160
    BANK1           256    102     224
    BANK2           256      0     245
    BANK3           256      0     160
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1235$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(COMRAM[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1235$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1235$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S566$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S566$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S344$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_LORAWAN_Join
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  395905
                                            126 BANK0      2     2      0
                       _LORAWAN_Init
                       _LORAWAN_Join
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   12024
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   12024
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  220298
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   19506
                                             33 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    6348
                                             21 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   13022
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   12799
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   12069
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     243
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  107515
                                             58 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   76912
                                             25 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0    8759
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   13369
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   13368
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0   90348
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    5409
                                             19 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    4872
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     337
                                             14 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _ComputeMic                                           9     4      5   69538
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   57000
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   22093
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1270
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _AESEncodeLoRa                                       20    16      4   16854
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _AESEncode                                           24    20      4    3397
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (8) _EncodeShiftRow                                       3     1      2     709
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _EncKeySchedule                                       6     4      2     839
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  149848
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   22459
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   85379
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      22
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   39320
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   13376
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0      90
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   13953
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    8365
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     601
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     557
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   12754
                                             58 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    4872
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    4824
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SwTimerStart                                         9     9      0    1201
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (3) _TMR_OverrideRemaining                               10     6      4     773
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (4) _TMR_SwapTimer                                        2     0      2     572
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     329
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SwTimersInterrupt                                   17    13      4     316
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (4) _TMR_GetDeltaTime                                    24    20      4      69
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_ReadTimer                                       8     6      2      69
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _SwTimerSetTimeout                                    9     5      4    1610
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   15014
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   15014
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3033
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   11891
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (12) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (14) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     440      12        0.0%
DATA                 0      0     65E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 21 10:10:48 2020

                              __end_of_DIO3_ISR_Lora_Init 3898  
                                          HALSPISend@data 0061  
                                                      l41 05F0  
                                                      l50 070E  
                                                      l43 069E  
                                                      l52 0730  
                                                      l44 0664  
                                                      l61 08B4  
                                                      l53 0744  
                                                      l45 061C  
                                                      l70 1C9E  
                                                      l54 0754  
                                                      l80 2E64  
                                                      l72 1CF2  
                                                      l56 086C  
                                                      l48 06DC  
                                                      l57 07C0  
                                                      l74 1D1A  
                                                      l58 07CE  
                                                      l68 1C76  
                                                      l79 2EAC  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 2F78  
                                   __end_of_AESEncodeLoRa 339C  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                                     l300 0946  
                                                     l213 1754  
                                                     l214 17CE  
                                                     l223 32A6  
                                                     l231 3420  
                                                     l311 0ABC  
                                                     l303 097E  
                                                     l144 3704  
                                                     l232 3402  
                                                     l320 0C3C  
                                                     l241 2A24  
                                                     l313 0ADE  
                                                     l306 09E2  
                                                     l315 0AE8  
                                                     l500 0FC6  
                                                     l237 2A22  
                                                     l317 0B0A  
                                                     l309 0AB2  
                                                     l501 0FDE  
                                                     l430 2306  
                                                     l510 1142  
                                                     l502 0FF0  
                                                     l327 0D8A  
                                                     l319 0B14  
                                                     l423 22E8  
                                                     l503 101C  
                                                     l280 1F6A  
                                                     l432 2314  
                                                     l424 2298  
                                                     l512 10CC  
                                                     l504 1002  
                                                     l281 1EA8  
                                                     l257 2844  
                                                     l441 146A  
                                                     l329 0D94  
                                                     l433 2340  
                                                     l425 22A6  
                                                     l434 2348  
                                                     l426 22D8  
                                                     l283 1F04  
                                                     l452 0494  
                                                     l460 021E  
                                                     l285 1F68  
                                                     l429 22F8  
                                                     l461 026C  
                                                     l453 020C  
                                                     l390 2102  
                                                     l438 1420  
                                                     l454 01DA  
                                                     l391 20E4  
                                                     l439 1436  
                                                     l471 030C  
                                                     l455 013E  
                                                     l392 20F0  
                                                     l384 20A0  
                                                     l480 050A  
                                                     l456 01F2  
                                                     l481 053C  
                                                     l473 03EC  
                                                     l457 0166  
                                                     l801 33E0  
                                                     l482 051C  
                                                     l466 0270  
                                                     l458 018E  
                                                     l395 213C  
                                                     l475 0438  
                                                     l459 01C6  
                                                     l396 212E  
                                                     l388 20BA  
                                                     l484 0560  
                                                     l476 0444  
                                                     l468 02EC  
                                                     l397 2132  
                                                     l485 056C  
                                                     l477 046E  
                                             ?_RADIO_Init 0079  
                                                     l670 2782  
                                                     l478 0486  
                                                     l399 216A  
                                                     l496 0F28  
                                                     l498 0F40  
                                                     l499 0F5A  
                                                     l972 125E  
                                                     l966 2ECE  
                                                     l967 2ED2  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 2CB8  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 2C4C  
                                      _RADIO_Transmit$771 00A1  
                                      _RADIO_Transmit$773 00A5  
                                      _DIO2_ISR_Lora_Init 375C  
                                      __size_of_AESEncode 0342  
                                         _timer1ReloadVal 004A  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 383E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 0930  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 0078  
                     __end_of_RADIO_SetFrequencyHopPeriod 3834  
                             _RADIO_SetFrequencyHopPeriod 382A  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 36A0  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                      __size_of_IOCB4_ISR 001E  
                                                    l1203 2B88  
                                                    l1140 1E44  
                                                    l1141 1D7E  
                                                    l1151 1E7A  
                                                    l1143 1E3E  
                                                    l1152 1E7E  
                                                    l1145 1E40  
                                                    l2034 153C  
                                                    l1139 1D78  
                                                    l2036 1592  
                                                    l1165 268A  
                                                    l1149 1E60  
                                                    l1185 2CB2  
                                                    l1198 2AFE  
                                                    l2502 2FE6  
                                                    l2503 2FFA  
                                                    l2426 35FC  
                                                    l2187 3744  
                   RADIO_WriteConfiguration@symbolTimeout 0079  
                                                    l1499 2708  
                                                    l1782 1B94  
                                                    l1774 1B40  
                                                    l1775 1B32  
                                                    l2487 2968  
                                                    l1776 1AFE  
                                                    l2904 322A  
                                                    l2841 2BF8  
                                                    l1777 1B2E  
                                                    l2905 3222  
                                                    l2842 2BEC  
                                                    l1874 226E  
                                                    l2851 2DAA  
                                                    l1875 2194  
                                                    l2924 344C  
                                                    l2852 2D9E  
                                                    l1876 2202  
                                                    l2908 3242  
                                                    l2925 343A  
                                                    l2845 2C2C  
                                                    l1877 226A  
                                                    l2909 324C  
                                                    l2918 2F64  
                                                    l2846 2C3A  
                                                    l2919 2F2A  
                                                    l2855 2DD2  
                                                    l2856 2DE0  
                                                    l9012 07C6  
                                                    l9032 08AC  
                                                    l7710 09DA  
                                                    l7644 2F2A  
                                                    l7750 0C34  
                                                    l8368 1C96  
                                                    l7842 343A  
                                                    l7682 093E  
                                                    l8386 1D12  
                                                    l7870 32BA  
                                                    l7694 0976  
                                                    l8976 06D4  
                                        _RADIO_WritePower 227C  
                                                    l8996 074C  
                                 _PrepareJoinRequestFrame 14E6  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                                    u6510 09C2  
                                                    u6440 2F4C  
                                                    u8300 322E  
                                                    u6447 2F42  
                                                    u8240 2BFC  
                                                    u6720 2EA8  
                                            ?_RADIO_Reset 0001  
                                                    u7521 1C1C  
                                                    u7610 37CC  
                                                    u6570 0C22  
                                                    u6490 0972  
                                                    u6730 2EAA  
                                                    u7620 288C  
                                                    u8500 08FA  
                                                    u7700 2A54  
                                                    u8270 2DAE  
                                                    u6590 0C68  
                                                    u7550 1CCA  
                                                    u8430 0748  
                                                    u8360 0602  
                                                    u7720 2A7C  
                                                    u8345 05D2  
                                                    u8450 079A  
                                                    u8370 0604  
                                                    u7740 2AA2  
                                                    u8470 0834  
                                                    u9520 0256  
                                                    u8650 215E  
                                                    u9540 0266  
                                                    u9570 02BE  
                                                    u9490 0206  
                                                    u9495 01FC  
                                                    u9595 0326  
                                                    _TMR1 000FCE  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 3682  
                                ??_InitDefault433Channels 006B  
                                                    _loRa 0200  
                                                    _main 2910  
                                                    _rand 302C  
                          __end_of_UpdateMinMaxChDataRate 227C  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 003C  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 317A  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                           __CFG_IESO$OFF 000000  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                                  ?_HALResetPinMakeOutput 0001  
                                  __size_of_TMR_SwapTimer 0044  
                                            ___param_bank 000000  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 31CC  
                  SearchAvailableChannel@transmissionType 0075  
                         __size_of_HALResetPinOutputValue 001A  
                                   _RADIO_WriteFSKBitRate 2D22  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 386A  
                                        __end_of_INT2_ISR 3862  
                          __size_of_OSCILLATOR_Initialize 000E  
                           __end_of_OSCILLATOR_Initialize 37A8  
                                                   l11114 1534  
                                                   l11128 158A  
                                                   l10482 2B80  
                                                   l10466 2AF6  
                                                   l10880 277A  
                                                   ?_main 0001  
                                                   ?_rand 006C  
                                              _FillSubKey 2E54  
                       __end_of_IOCB4_SetInterruptHandler 37E4  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 2C4C  
                                         RADIO_Transmit@i 00AA  
                                                   u11130 1B5A  
                                                   u11230 1E52  
                                                   u11145 1B82  
                                                   u11250 1E66  
                                                   u11155 1BA6  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 2DF2  
                                                   u11370 1092  
                                                   u11630 27B4  
                                                   u11385 10BA  
                                                   u11810 1580  
                                                   u11395 10DE  
                                                   u13317 2974  
                                                   u11830 15D6  
                                                   u13327 298E  
                                                   _LATC2 007C5A  
                                                   u13337 340A  
                                                   _LATD3 007C63  
                  SearchAvailableChannel@randomNumberCopy 007C  
                                          __CFG_DEBUG$OFF 000000  
                                         __end_of___lwmod 3256  
                                                   i2l213 18BE  
                                                   i2l214 1938  
                                                   i2l223 332E  
                                                   i2l280 2068  
                                                   i2l281 1FA6  
                                                   i2l283 2002  
                                                   i2l285 2066  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0064  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 000000  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                        __end_of_TMR1_ISR 373A  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                                                   __rcon 00F8  
                                 __end_of_PIN_MANAGER_IOC 3852  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                                                   _randx 0052  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 37A8  
                                  _UpdateJoinSuccessState 000000  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 37EE  
                                              _ComputeMic 2DF2  
                                 __end_of_TMR1_Initialize 34E8  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 003C  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 0040  
                                                   ltemp2 0044  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                                   ttemp0 003C  
                                                   ttemp1 003F  
                                                   ttemp2 0042  
                                                   ttemp3 0045  
                                                   status 000FD8  
                                                   wtemp0 003C  
                                                   wtemp1 003E  
                                                   wtemp2 0040  
                                                   wtemp3 0042  
                                                   wtemp4 0044  
                                                   wtemp5 0046  
                                                   wtemp6 003D  
                                          __CFG_HFOFST$ON 000000  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 35E8  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 0C72  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 0586  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 253A  
                            __size_ofi2_SwTimersInterrupt 0100  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                       _SPI2_Exchange8bit 373A  
                                            __end_of_main 299E  
                                            __end_of_rand 3082  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 27E4  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 36DA  
                                       __end_of_IOCB4_ISR 3682  
                                      ?_SPI2_Exchange8bit 0001  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 3802  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00DE  
                                                  ??_rand 006E  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                     ??_SPI2_Exchange8bit 0060  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                           _TMR_SwapTimer 329A  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 387A  
                         __size_of_SearchAvailableChannel 012A  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 36F4  
                                        ___llmod@dividend 0060  
                                                  ?_srand 0072  
                          _LORAWAN_ReceiveWindow1Callback 000000  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                                  _T1GCON 000FCC  
                                 TMR1_WriteTimer@timerVal 0060  
                                                  i2l1331 2FD2  
                          _LORAWAN_ReceiveWindow2Callback 000000  
                                                  i2l2426 36D0  
                                                  i2l2282 0038  
                                                  i2l2284 0044  
                                                  i2l2286 0050  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2289 005C  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  i2l9636 3342  
                                                  _OSCCON 000FD3  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                              __end_of_DIO0_ISR_Lora_Init 378C  
                                __size_ofi2_TMR_SwapTimer 0044  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0071  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 374C  
                                                  _Random 3584  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 000000  
                      SearchAvailableChannel@randomNumber 007F  
                    __end_of_TMR1_DefaultInterruptHandler 389A  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 3898  
                                                  ___lmul 2FD4  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 009A  
                                          __CFG_STVREN$ON 000000  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                                               ??___lwmod 0072  
                      RADIO_SetChannelFrequency@frequency 0060  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 2F18  
                                                  _memset 3430  
                                                  clear_0 25A2  
                                                  clear_1 25B4  
                                                  clear_2 25C0  
                                                  clear_3 25CC  
                                                  clear_4 25D8  
                                                  clear_5 25E4  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                 __size_of_EncodeShiftRow 0164  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 389E  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 389C  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 387E  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                          ?_TMR_SwapTimer 0068  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 3608  
                                   __end_of_SwTimerCreate 2A2A  
                          ??_SelectChannelForTransmission 0081  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 3664  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 3628  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DB  
                                              __accesstop 0060  
                                 __end_of__initialization 25EE  
                                          _RADIO_Transmit 0F16  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                  RADIO_ReadRandom@retVal 006F  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 30D6  
                                      ?_SYSTEM_Initialize 0001  
                                          _maxPayloadSize FF77  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                                      __end_of_HALSPISend 37C4  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 1D58  
                                            __pidataBANK0 386E  
                                            __pidataBANK1 339C  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 3896  
                                               ?_TMR1_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 0086  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF95  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 389C  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 389A  
                                __end_of_RADIO_WritePower 236C  
                                           __end_of_srand 37B6  
                                  _InitDefault433Channels 2B3E  
                                  _AutomaticReplyCallback 000000  
                             ??_IOCB4_SetInterruptHandler 0062  
                                            ??_RADIO_Init 007F  
                               SwTimerSetCallback@timerId 0063  
                             __size_of_EXT_INT_Initialize 002A  
                                 ??_TMR_OverrideRemaining 006E  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 3896  
                            __end_of_HALResetPinMakeInput 3886  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 37EE  
                             RADIO_RegisterRead@readValue 0063  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                               __end_of_SYSTEM_Initialize 3646  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                  __end_of_RADIO_Transmit 114E  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 114E  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00E0  
                                              __pbssBANK1 0166  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 3562  
                              ?_SetCallbackSoftwareTimers 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF7F  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 37F8  
                                              __pnvCOMRAM 0048  
                                    __end_of_RADIO_SetCRC 3816  
                                  __size_of_DIO0_ISR_Lora 0004  
                                 ??_HALResetPinMakeOutput 0060  
                                     __size_of_FillSubKey 0062  
                             __size_of_SwTimerSetCallback 0044  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 14E6  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                                                 ?_Random 0073  
                                  __size_of_DIO1_ISR_Lora 0004  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 3608  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 0081  
                                                 ?___lmul 0060  
                                  __size_of_DIO2_ISR_Lora 0004  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0060  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 0068  
                                       _TMR_ISR_Lora_Init 374C  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00A9  
                            __size_of_RADIO_SetModulation 000A  
                                                 _AESCmac 0586  
                                  ComputeMic@bufferLength 00CB  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                     _RADIO_SetIQInverted 3802  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016A  
                                     i2_SwTimersInterrupt 1F84  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF95  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                        ?_TMR1_WriteTimer 0060  
                                         ?_RADIO_Transmit 009A  
                                   TMR_SwapTimer@timerVal 0068  
                       __end_of_RADIO_SetChannelFrequency 2AB4  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 37DA  
                       __end_of_SetCallbackSoftwareTimers 253A  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 000000  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$513 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 00E8  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 2AB4  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                   _StopAllSoftwareTimers 3128  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0021  
                                              AESEncode@i 007C  
                                               _AESEncode 0930  
                               __end_of_TMR_ISR_Lora_Init 375C  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                                 ___lldiv 2BC8  
                                                 ___llmod 2D8A  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 3212  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                                 _devAddr 01BC  
                                                 __pcinit 253A  
                                                 _appSKey 01C0  
                                         __size_of_memcpy 0060  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                                      ??_RADIO_ReadRandom 006E  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 2910  
                                                 __ptext1 3628  
                                                 __ptext2 34BC  
                                                 __ptext3 378C  
                                                 __ptext4 3082  
                                                 __ptext5 379A  
                                                 __ptext6 3562  
                                                 __ptext7 374C  
                                                 __ptext8 37D0  
                                                 __ptext9 3852  
                                    __end_of_LORAWAN_Init 2F18  
                                    __end_of_LORAWAN_Join 2740  
                                           _DIO0_ISR_Lora 388E  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 194A  
                                               _IOCB4_ISR 3664  
                               TMR1_ReadTimer@readValHigh 0066  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0082  
                                   _OSCILLATOR_Initialize 379A  
                              __end_of_RADIO_SetBandwidth 383E  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF8E  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 388A  
                                             _SwTimerStop 353A  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 01D0  
                           RADIO_SetModulation@modulation 0060  
                               __size_of_TMR_GetDeltaTime 016A  
                                           _DIO2_ISR_Lora 3886  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 348E  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 3460  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 25EE  
                                 _CreateAllSoftwareTimers 317A  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 37E4  
                                          _GenerateSubkey 1C0C  
                                   _RADIO_WatchdogTimeout 000000  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF67  
                                                 memcpy@d 0066  
                                                 memcpy@n 0064  
                                                 memcpy@s 0068  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 000000  
                                          ??_SwTimerStart 0091  
                                               i2u1216_48 3652  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 377C  
                                         ___lldiv@divisor 0064  
                                              _ticksAdded 00EC  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 3882  
                              LORAWAN_Init@RxJoinResponse 00A8  
                        __end_of_RADIO_SetSpreadingFactor 3820  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 3852  
                                                 postinc0 000FEE  
                                                 postinc2 000FDE  
                                           _AESEncode$510 0076  
                                           _AESEncode$508 0072  
                                           _AESEncode$509 0074  
                            __end_of_RADIO_SetFSKSyncWord 3400  
                                      LORAWAN_Join@result 00DC  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 007E  
                                  __end_of_EncodeShiftRow 1AAE  
                                      _DIO0_ISR_Lora_Init 377C  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 0050  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 3366  
                            __end_of_RADIO_WriteFrequency 245C  
                              __end_of_RADIO_RegisterRead 353A  
                          __end_of_HALResetPinOutputValue 370E  
                                              ?_IOCB4_ISR 0001  
                                __end_of_ConfigureRadioTx 3128  
                                          ?_DIO1_ISR_Lora 0001  
                                       _SwTimerSetTimeout 32DE  
                                          _TMR1_ReadTimer 35A6  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                                      ?_SwTimerSetTimeout 0060  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 1D58  
                                   __size_of_RADIO_SetCRC 000A  
                                          _localDioStatus 0056  
                                            ??_ComputeMic 00CC  
                                  ??_RADIO_SetOutputPower 0060  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00A5  
                                     ??_SwTimerSetTimeout 0064  
                                         _RADIO_WriteMode 2084  
                              ??_RADIO_WriteConfiguration 007B  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 0075  
                                  ?_StopAllSoftwareTimers 0001  
                                      __end_of_FillSubKey 2EB6  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                          __end_of_Random 35A6  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                            __end_of_INTERRUPT_Initialize 3876  
                              __end_of_DIO5_ISR_Lora_Init 3894  
                                          __end_of___lmul 302C  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 386A  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                      __end_of_ComputeMic 2E54  
                                               Random@max 0073  
                                          __end_of_memcpy 2F78  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 3322  
                                  __end_of_TMR1_ReadTimer 35C8  
                                          __end_of_memset 3460  
                                         _SPI2_Initialize 378C  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 380C  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 253A  
                                          _ConfigureRadio 25F4  
                                      _DIO4_ISR_Lora_Init 3894  
                                __end_ofi2_TMR1_ReadTimer 3628  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 35C8  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 2910  
                                   __end_of_INT1_CallBack 36BE  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 3726  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                   LORAWAN_Init@RxPayload 00A6  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 36A0  
                                           ??_RADIO_Reset 0065  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 3820  
                          __end_of_SearchAvailableChannel 1E82  
                                         i2_TMR_SwapTimer 3322  
                                         ___llmod@divisor 0064  
                                 __end_of_SystemTimerInit 385A  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 00F2  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 00F0  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 3882  
                                                ??_Random 0075  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 2BC8  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF87  
                                                ??___lmul 0068  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 007F  
                                   __size_of_LORAWAN_Init 0062  
                                   __size_of_LORAWAN_Join 00A4  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01AC  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 3512  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 3816  
                                      _RADIO_RxFSKTimeout 000000  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 001E  
                                         ??_DIO1_ISR_Lora 0001  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 00E4  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 269C  
                                  TMR_GetDeltaTime@tmrVal 00F4  
                                    __end_of_SwTimerStart 287A  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                                             __pbssCOMRAM 0056  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 009D  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                        _TMR_GetDeltaTime 1676  
                                 __end_of_RADIO_WriteMode 2182  
                         _UnconfirmedTransmissionCallback 000000  
                                 SearchAvailableChannel@i 0080  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                               _aesBuffer 019C  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 33D0  
                             RADIO_SetBandwidth@bandwidth 0060  
                              __end_of_SwTimerSetCallback 329A  
                                   _INT2_InterruptHandler 004E  
                                               _bandwidth FF8E  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 2EB6  
                                            _LORAWAN_Join 269C  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 236C  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 3876  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 3212  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 3082  
                                           FillSubKey@key 0062  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                                               _macBuffer 04E0  
                                               _dioStatus 0057  
                                       _SwTimersInterrupt 1E82  
                                               __pintcode 0008  
                        __end_of_TMR1_SetInterruptHandler 37DA  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 009C  
                                 __end_of_SPI2_Initialize 379A  
                                               __ptext100 3726  
                                               __ptext101 3646  
                                               __ptext110 3664  
                                               __ptext102 3898  
                                               __ptext111 3886  
                                               __ptext103 2F78  
                                               __ptext120 389E  
                                               __ptext112 389A  
                                               __ptext104 3322  
                                               __ptext121 0000  
                                               __ptext113 385A  
                                               __ptext105 36BE  
                                               __ptext114 3682  
                                               __ptext106 1F84  
                                               __ptext115 388A  
                                               __ptext107 17E0  
                                               __ptext116 389C  
                                               __ptext108 3608  
                                               __ptext117 3862  
                                               __ptext109 3848  
                                               __ptext118 36A0  
                                               __ptext119 388E  
                                                ?___lldiv 0060  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 0083  
                         __end_of_PrepareJoinRequestFrame 1676  
                                                ?___lwmod 006E  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 2A2A  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                               _SetCallbackSoftwareTimers 245C  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 3584  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                           __end_of_RADIO_SetLoRaSyncWord 3848  
                              __size_of_SwTimerSetTimeout 0044  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                                         ?_ConfigureRadio 006E  
                              ??_INT2_SetInterruptHandler 0062  
                              __end_ofi2_TMR_GetDeltaTime 194A  
                                     ??_SwTimersInterrupt 0084  
                                       _DutyCycleCallback 000000  
                                 InitDefault433Channels@i 006B  
                                   __end_of_TMR_SwapTimer 32DE  
                                            ?_SwTimerStop 0001  
                                 __end_ofi2_TMR_SwapTimer 3366  
                                 __size_of_EncKeySchedule 02A4  
                               __size_of_RADIO_ReadRandom 00A4  
                                          __size_of_srand 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 3872  
                                           _SwTimerCreate 299E  
                          __end_of_InitDefault868Channels 2B3E  
                                           _TMR1_CallBack 3646  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 3862  
                                _LORAWAN_SetDeviceAddress 370E  
                                                _INT2_ISR 385A  
                                       EncKeySchedule@key 0060  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 3834  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F6  
                                                _PIE1bits 000F9D  
                                         _HALDIO5PinValue 37C4  
                               __end_of_SwTimersInterrupt 1F84  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 376C  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                                i2u525_48 36AC  
                                                i2u527_48 368E  
                                                i2u529_48 3670  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                           __end_of_RADIO_WriteFSKBitRate 2D8A  
                                    ConfigureRadioTx@freq 0073  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 0076  
                                               _rxPayload 00E0  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 2182  
                                                _SSP2CON1 000F6C  
                                                _TMR1_ISR 3726  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 009C  
                                       ??_PIN_MANAGER_IOC 0001  
                                       ??_TMR1_Initialize 0062  
                                      _DIO1_ISR_Lora_Init 376C  
                                        __size_of_AESCmac 03AA  
                                       ?_ConfigureRadioTx 0073  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                                       ___lmul@multiplier 0060  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 254E  
                                               copy_data1 256E  
                                               copy_data2 258E  
                                   ?_INTERRUPT_Initialize 0001  
                             __end_of_RADIO_SetIQInverted 380C  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 2FD4  
                                             _RADIO_Reset 31CC  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 3512  
                                 ??_StopAllSoftwareTimers 0061  
                             __end_ofi2_SwTimersInterrupt 2084  
                                             AESCmac@flag 0162  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0068  
                                SwTimerSetTimeout@timeout 0060  
                                   RADIO_WriteMode@opMode 006B  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 3430  
                                       i2_TMR1_WriteTimer 36BE  
                                               memcpy@tmp 006A  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                               _ticksToScheduledInterrupt 00FC  
                                       __CFG_P2BMX$PORTD2 000000  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                 ??_OSCILLATOR_Initialize 0060  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                        __size_of___lwmod 0044  
                                _TMR1_SetInterruptHandler 37D0  
                                  _IOCB4_InterruptHandler 004C  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
                                   _TMR1_InterruptHandler 0048  
                                        ??_GenerateSubkey 0097  
                                              _HALSPISend 37B6  
                                          _rxWindowOffset FF6F  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_Transmit@buffer 009A  
                                         _allocatedTimers 00FA  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 3892  
                                                __ptext10 3892  
                                                __ptext11 3894  
                                                __ptext20 37EE  
                                                __ptext12 3896  
                                                __ptext21 3460  
                                                __ptext13 375C  
                                              _T1GCONbits 000FCC  
                                                __ptext30 3802  
                                                __ptext22 370E  
                                                __ptext14 37DA  
                                                __ptext31 380C  
                                                __ptext23 348E  
                                                __ptext15 376C  
                                                __ptext40 0086  
                                                __ptext32 25F4  
                                                __ptext24 269C  
                                                __ptext16 377C  
                                                __ptext41 227C  
                                                __ptext33 3816  
                                                __ptext25 36DA  
                                                __ptext17 3872  
                                                __ptext50 1C0C  
                                                __ptext42 2CB8  
                                                __ptext34 3820  
                                                __ptext26 2C4C  
                                                __ptext18 34E8  
                                                __ptext51 2E54  
                                                __ptext43 2D22  
                                                __ptext35 382A  
                                                __ptext27 1D58  
                                                __ptext19 37E4  
                                                __ptext60 114E  
                                                __ptext52 3366  
                                                __ptext44 14E6  
                                                __ptext36 33D0  
                                                __ptext28 30D6  
                                                __ptext61 2182  
                                                __ptext53 0930  
                                                __ptext45 3584  
                                                __ptext37 2A2A  
                                                __ptext29 37F8  
                                                __ptext70 2D8A  
                                                __ptext62 3128  
                                                __ptext54 194A  
                                                __ptext46 302C  
                                                __ptext38 3834  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 35C8  
                                                __ptext63 383E  
                                                __ptext55 0C72  
                                                __ptext47 3212  
                                                __ptext39 0F16  
                                                __ptext80 3882  
                                                __ptext72 37B6  
                                                __ptext64 131C  
                                                __ptext56 2EB6  
                                                __ptext48 2DF2  
                                                __ptext81 1AAE  
                                                __ptext73 373A  
                                                __ptext65 3256  
                                                __ptext57 37A8  
                                                __ptext49 0586  
                                                __ptext90 1676  
                                                __ptext82 2FD4  
                                                __ptext74 3876  
                                                __ptext66 2084  
                                                __ptext58 245C  
                                                __ptext91 35A6  
                                                __ptext83 2BC8  
                                                __ptext75 387A  
                                                __ptext67 3512  
                                                __ptext59 2740  
                                                __ptext92 32DE  
                                                __ptext84 353A  
                                                __ptext76 31CC  
                                                __ptext68 37C4  
                                                __ptext93 2AB4  
                                                __ptext85 27E4  
                                                __ptext77 3400  
                                                __ptext69 236C  
                                                __ptext94 2B3E  
                                                __ptext86 287A  
                                                __ptext78 36F4  
                                                __ptext95 3430  
                                                __ptext87 329A  
                                                __ptext79 387E  
                                                __ptext96 2F18  
                                                __ptext88 35E8  
                                                __ptext97 317A  
                                                __ptext89 1E82  
                                                __ptext98 299E  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   __end_of_LORAWAN_Reset 131C  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01AC  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 37D0  
                                  ConfigureRadio@dataRate 0072  
                        __size_of_PrepareJoinRequestFrame 0190  
                                  ??_RADIO_WriteFrequency 0071  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 008E  
                                           __size_of_rand 0056  
                                    _LORAWAN_PlatformInit 3562  
                                         _FskSyncWordBuff FFFC  
                               __end_ofi2_TMR1_WriteTimer 36DA  
                                           _timerOverflow 00FB  
                                            _SwTimerStart 27E4  
                              __size_of_SwTimersInterrupt 0102  
                              ??_RADIO_SetSpreadingFactor 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
                                __end_of_TMR_GetDeltaTime 17E0  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                       ??_TMR1_WriteTimer 0062  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 38A0  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 389E  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF77  
                             i2TMR1_ReadTimer@readValHigh 0007  
                               ?_RADIO_WriteConfiguration 0079  
                                      __end_of_modulation FF6F  
                                              _RADIO_Init 131C  
                                           __roundCounter 00F9  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 387A  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 0C72  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                         ??_SwTimerCreate 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 2740  
                                      _EXT_INT_Initialize 34E8  
                                   _TMR_OverrideRemaining 287A  
                                                intlevel2 0000  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 006E  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                  GenerateSubkey@const_Rb 0098  
                               UpdateJoinInProgress@state 0060  
                      __end_of_LORAWAN_LinkCheckConfigure 1C0C  
                              _LORAWAN_LinkCheckConfigure 1AAE  
                                      __end_of_txPower433 FFA2  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 387E  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 001E  
                               RADIO_WriteConfiguration@i 007E  
                                        AESEncodeLoRa@key 007F  
                        LORAWAN_LinkCheckConfigure@period 009A  
                                        ??_ConfigureRadio 0072  
                                      _SwTimerSetCallback 3256  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 007D  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 001E  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                   __end_of_DIO0_ISR_Lora 3892  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule 0F16  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 388E  
                                     ?_SwTimerSetCallback 0060  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                         ___lwmod@divisor 0070  
                                         ___lwmod@counter 0072  
                         _LORAWAN_LinkCheckConfigure$2491 00A0  
                        __end_of_INT1_SetInterruptHandler 37F8  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 005C  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 388A  
                                    _SystemBlockingWaitMs 3400  
                            __end_of_UpdateJoinInProgress 36F4  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 2D22  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 2CB8  
                __end_of_LORAWAN_SetApplicationSessionKey 34BC  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 348E  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 30D6  
                             __end_of_RADIO_RegisterWrite 35E8  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 17E0  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 3848  
                                     RADIO_WritePower@ocp 0064  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 34BC  
                        RADIO_WriteConfiguration@regValue 0083  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0166  
                             __end_of_RADIO_SetModulation 382A  
                           __size_of_HALResetPinMakeInput 0004  
                                     ?i2_TMR_GetDeltaTime 0009  
