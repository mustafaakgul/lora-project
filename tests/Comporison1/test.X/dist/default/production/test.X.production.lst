

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 10 12:58:43 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   148                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   149  0000                     
   150                           ; Version 1.45
   151                           ; Generated 16/11/2017 GMT
   152                           ; 
   153                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC18LF46K22 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     
   185 ;; Function _RADIO_RxFSKTimeout is unused but had its address taken
   186  0000                     
   187 ;; Function _RADIO_WatchdogTimeout is unused but had its address taken
   188  0000                     
   189 ;; Function _DutyCycleCallback is unused but had its address taken
   190  0000                     
   191 ;; Function _LORAWAN_ReceiveWindow1Callback is unused but had its address taken
   192  0000                     
   193 ;; Function _LORAWAN_ReceiveWindow2Callback is unused but had its address taken
   194  0000                     
   195 ;; Function _LORAWAN_LinkCheckCallback is unused but had its address taken
   196  0000                     
   197 ;; Function _AckRetransmissionCallback is unused but had its address taken
   198  0000                     
   199 ;; Function _UnconfirmedTransmissionCallback is unused but had its address taken
   200  0000                     
   201 ;; Function _AutomaticReplyCallback is unused but had its address taken
   202  0000                     
   203 ;; Function _UpdateJoinSuccessState is unused but had its address taken
   204  0000                     
   205 ;; Function _RxData is unused but had its address taken
   206  0000                     
   207 ;; Function _RxJoinResponse is unused but had its address taken
   208  0000                     
   209                           	psect	idataCOMRAM
   210  00386E                     __pidataCOMRAM:
   211                           	opt stack 0
   212                           
   213                           ;initializer for _randx
   214  00386E  0001               	dw	1
   215  003870  0000               	dw	0
   216                           
   217                           	psect	idataBANK0
   218  003872                     __pidataBANK0:
   219                           	opt stack 0
   220                           
   221                           ;initializer for _ticksToScheduledInterrupt
   222  003872  FFFF               	dw	65535
   223  003874  FFFF               	dw	65535
   224                           
   225                           	psect	idataBANK1
   226  0033A0                     __pidataBANK1:
   227                           	opt stack 0
   228                           
   229                           ;initializer for GenerateSubkey@F7103
   230  0033A0  00                 	db	0
   231  0033A1  00                 	db	0
   232  0033A2  00                 	db	0
   233  0033A3  00                 	db	0
   234  0033A4  00                 	db	0
   235  0033A5  00                 	db	0
   236  0033A6  00                 	db	0
   237  0033A7  00                 	db	0
   238  0033A8  00                 	db	0
   239  0033A9  00                 	db	0
   240  0033AA  00                 	db	0
   241  0033AB  00                 	db	0
   242  0033AC  00                 	db	0
   243  0033AD  00                 	db	0
   244  0033AE  00                 	db	0
   245  0033AF  87                 	db	135
   246                           
   247                           ;initializer for _devAddr
   248  0033B0  5E47               	dw	24135
   249  0033B2  3DEF               	dw	15855
   250                           
   251                           ;initializer for _appSKey
   252  0033B4  96                 	db	150
   253  0033B5  23                 	db	35
   254  0033B6  5A                 	db	90
   255  0033B7  1F                 	db	31
   256  0033B8  9A                 	db	154
   257  0033B9  E1                 	db	225
   258  0033BA  60                 	db	96
   259  0033BB  36                 	db	54
   260  0033BC  81                 	db	129
   261  0033BD  C4                 	db	196
   262  0033BE  E4                 	db	228
   263  0033BF  B5                 	db	181
   264  0033C0  54                 	db	84
   265  0033C1  C3                 	db	195
   266  0033C2  CA                 	db	202
   267  0033C3  B5                 	db	181
   268                           
   269                           ;initializer for _nwkSKey
   270  0033C4  CB                 	db	203
   271  0033C5  1E                 	db	30
   272  0033C6  88                 	db	136
   273  0033C7  5D                 	db	93
   274  0033C8  5D                 	db	93
   275  0033C9  F1                 	db	241
   276  0033CA  12                 	db	18
   277  0033CB  D5                 	db	213
   278  0033CC  08                 	db	8
   279  0033CD  CC                 	db	204
   280  0033CE  B9                 	db	185
   281  0033CF  D1                 	db	209
   282  0033D0  D4                 	db	212
   283  0033D1  4B                 	db	75
   284  0033D2  1E                 	db	30
   285  0033D3  DF                 	db	223
   286                           
   287                           	psect	mediumconst
   288  00FE66                     __pmediumconst:
   289                           	opt stack 0
   290  00FE66  00                 	db	0
   291  00FE67                     _STable:
   292                           	opt stack 0
   293  00FE67  63                 	db	99
   294  00FE68  7C                 	db	124
   295  00FE69  77                 	db	119
   296  00FE6A  7B                 	db	123
   297  00FE6B  F2                 	db	242
   298  00FE6C  6B                 	db	107
   299  00FE6D  6F                 	db	111
   300  00FE6E  C5                 	db	197
   301  00FE6F  30                 	db	48
   302  00FE70  01                 	db	1
   303  00FE71  67                 	db	103
   304  00FE72  2B                 	db	43
   305  00FE73  FE                 	db	254
   306  00FE74  D7                 	db	215
   307  00FE75  AB                 	db	171
   308  00FE76  76                 	db	118
   309  00FE77  CA                 	db	202
   310  00FE78  82                 	db	130
   311  00FE79  C9                 	db	201
   312  00FE7A  7D                 	db	125
   313  00FE7B  FA                 	db	250
   314  00FE7C  59                 	db	89
   315  00FE7D  47                 	db	71
   316  00FE7E  F0                 	db	240
   317  00FE7F  AD                 	db	173
   318  00FE80  D4                 	db	212
   319  00FE81  A2                 	db	162
   320  00FE82  AF                 	db	175
   321  00FE83  9C                 	db	156
   322  00FE84  A4                 	db	164
   323  00FE85  72                 	db	114
   324  00FE86  C0                 	db	192
   325  00FE87  B7                 	db	183
   326  00FE88  FD                 	db	253
   327  00FE89  93                 	db	147
   328  00FE8A  26                 	db	38
   329  00FE8B  36                 	db	54
   330  00FE8C  3F                 	db	63
   331  00FE8D  F7                 	db	247
   332  00FE8E  CC                 	db	204
   333  00FE8F  34                 	db	52
   334  00FE90  A5                 	db	165
   335  00FE91  E5                 	db	229
   336  00FE92  F1                 	db	241
   337  00FE93  71                 	db	113
   338  00FE94  D8                 	db	216
   339  00FE95  31                 	db	49
   340  00FE96  15                 	db	21
   341  00FE97  04                 	db	4
   342  00FE98  C7                 	db	199
   343  00FE99  23                 	db	35
   344  00FE9A  C3                 	db	195
   345  00FE9B  18                 	db	24
   346  00FE9C  96                 	db	150
   347  00FE9D  05                 	db	5
   348  00FE9E  9A                 	db	154
   349  00FE9F  07                 	db	7
   350  00FEA0  12                 	db	18
   351  00FEA1  80                 	db	128
   352  00FEA2  E2                 	db	226
   353  00FEA3  EB                 	db	235
   354  00FEA4  27                 	db	39
   355  00FEA5  B2                 	db	178
   356  00FEA6  75                 	db	117
   357  00FEA7  09                 	db	9
   358  00FEA8  83                 	db	131
   359  00FEA9  2C                 	db	44
   360  00FEAA  1A                 	db	26
   361  00FEAB  1B                 	db	27
   362  00FEAC  6E                 	db	110
   363  00FEAD  5A                 	db	90
   364  00FEAE  A0                 	db	160
   365  00FEAF  52                 	db	82
   366  00FEB0  3B                 	db	59
   367  00FEB1  D6                 	db	214
   368  00FEB2  B3                 	db	179
   369  00FEB3  29                 	db	41
   370  00FEB4  E3                 	db	227
   371  00FEB5  2F                 	db	47
   372  00FEB6  84                 	db	132
   373  00FEB7  53                 	db	83
   374  00FEB8  D1                 	db	209
   375  00FEB9  00                 	db	0
   376  00FEBA  ED                 	db	237
   377  00FEBB  20                 	db	32
   378  00FEBC  FC                 	db	252
   379  00FEBD  B1                 	db	177
   380  00FEBE  5B                 	db	91
   381  00FEBF  6A                 	db	106
   382  00FEC0  CB                 	db	203
   383  00FEC1  BE                 	db	190
   384  00FEC2  39                 	db	57
   385  00FEC3  4A                 	db	74
   386  00FEC4  4C                 	db	76
   387  00FEC5  58                 	db	88
   388  00FEC6  CF                 	db	207
   389  00FEC7  D0                 	db	208
   390  00FEC8  EF                 	db	239
   391  00FEC9  AA                 	db	170
   392  00FECA  FB                 	db	251
   393  00FECB  43                 	db	67
   394  00FECC  4D                 	db	77
   395  00FECD  33                 	db	51
   396  00FECE  85                 	db	133
   397  00FECF  45                 	db	69
   398  00FED0  F9                 	db	249
   399  00FED1  02                 	db	2
   400  00FED2  7F                 	db	127
   401  00FED3  50                 	db	80
   402  00FED4  3C                 	db	60
   403  00FED5  9F                 	db	159
   404  00FED6  A8                 	db	168
   405  00FED7  51                 	db	81
   406  00FED8  A3                 	db	163
   407  00FED9  40                 	db	64
   408  00FEDA  8F                 	db	143
   409  00FEDB  92                 	db	146
   410  00FEDC  9D                 	db	157
   411  00FEDD  38                 	db	56
   412  00FEDE  F5                 	db	245
   413  00FEDF  BC                 	db	188
   414  00FEE0  B6                 	db	182
   415  00FEE1  DA                 	db	218
   416  00FEE2  21                 	db	33
   417  00FEE3  10                 	db	16
   418  00FEE4  FF                 	db	255
   419  00FEE5  F3                 	db	243
   420  00FEE6  D2                 	db	210
   421  00FEE7  CD                 	db	205
   422  00FEE8  0C                 	db	12
   423  00FEE9  13                 	db	19
   424  00FEEA  EC                 	db	236
   425  00FEEB  5F                 	db	95
   426  00FEEC  97                 	db	151
   427  00FEED  44                 	db	68
   428  00FEEE  17                 	db	23
   429  00FEEF  C4                 	db	196
   430  00FEF0  A7                 	db	167
   431  00FEF1  7E                 	db	126
   432  00FEF2  3D                 	db	61
   433  00FEF3  64                 	db	100
   434  00FEF4  5D                 	db	93
   435  00FEF5  19                 	db	25
   436  00FEF6  73                 	db	115
   437  00FEF7  60                 	db	96
   438  00FEF8  81                 	db	129
   439  00FEF9  4F                 	db	79
   440  00FEFA  DC                 	db	220
   441  00FEFB  22                 	db	34
   442  00FEFC  2A                 	db	42
   443  00FEFD  90                 	db	144
   444  00FEFE  88                 	db	136
   445  00FEFF  46                 	db	70
   446  00FF00  EE                 	db	238
   447  00FF01  B8                 	db	184
   448  00FF02  14                 	db	20
   449  00FF03  DE                 	db	222
   450  00FF04  5E                 	db	94
   451  00FF05  0B                 	db	11
   452  00FF06  DB                 	db	219
   453  00FF07  E0                 	db	224
   454  00FF08  32                 	db	50
   455  00FF09  3A                 	db	58
   456  00FF0A  0A                 	db	10
   457  00FF0B  49                 	db	73
   458  00FF0C  06                 	db	6
   459  00FF0D  24                 	db	36
   460  00FF0E  5C                 	db	92
   461  00FF0F  C2                 	db	194
   462  00FF10  D3                 	db	211
   463  00FF11  AC                 	db	172
   464  00FF12  62                 	db	98
   465  00FF13  91                 	db	145
   466  00FF14  95                 	db	149
   467  00FF15  E4                 	db	228
   468  00FF16  79                 	db	121
   469  00FF17  E7                 	db	231
   470  00FF18  C8                 	db	200
   471  00FF19  37                 	db	55
   472  00FF1A  6D                 	db	109
   473  00FF1B  8D                 	db	141
   474  00FF1C  D5                 	db	213
   475  00FF1D  4E                 	db	78
   476  00FF1E  A9                 	db	169
   477  00FF1F  6C                 	db	108
   478  00FF20  56                 	db	86
   479  00FF21  F4                 	db	244
   480  00FF22  EA                 	db	234
   481  00FF23  65                 	db	101
   482  00FF24  7A                 	db	122
   483  00FF25  AE                 	db	174
   484  00FF26  08                 	db	8
   485  00FF27  BA                 	db	186
   486  00FF28  78                 	db	120
   487  00FF29  25                 	db	37
   488  00FF2A  2E                 	db	46
   489  00FF2B  1C                 	db	28
   490  00FF2C  A6                 	db	166
   491  00FF2D  B4                 	db	180
   492  00FF2E  C6                 	db	198
   493  00FF2F  E8                 	db	232
   494  00FF30  DD                 	db	221
   495  00FF31  74                 	db	116
   496  00FF32  1F                 	db	31
   497  00FF33  4B                 	db	75
   498  00FF34  BD                 	db	189
   499  00FF35  8B                 	db	139
   500  00FF36  8A                 	db	138
   501  00FF37  70                 	db	112
   502  00FF38  3E                 	db	62
   503  00FF39  B5                 	db	181
   504  00FF3A  66                 	db	102
   505  00FF3B  48                 	db	72
   506  00FF3C  03                 	db	3
   507  00FF3D  F6                 	db	246
   508  00FF3E  0E                 	db	14
   509  00FF3F  61                 	db	97
   510  00FF40  35                 	db	53
   511  00FF41  57                 	db	87
   512  00FF42  B9                 	db	185
   513  00FF43  86                 	db	134
   514  00FF44  C1                 	db	193
   515  00FF45  1D                 	db	29
   516  00FF46  9E                 	db	158
   517  00FF47  E1                 	db	225
   518  00FF48  F8                 	db	248
   519  00FF49  98                 	db	152
   520  00FF4A  11                 	db	17
   521  00FF4B  69                 	db	105
   522  00FF4C  D9                 	db	217
   523  00FF4D  8E                 	db	142
   524  00FF4E  94                 	db	148
   525  00FF4F  9B                 	db	155
   526  00FF50  1E                 	db	30
   527  00FF51  87                 	db	135
   528  00FF52  E9                 	db	233
   529  00FF53  CE                 	db	206
   530  00FF54  55                 	db	85
   531  00FF55  28                 	db	40
   532  00FF56  DF                 	db	223
   533  00FF57  8C                 	db	140
   534  00FF58  A1                 	db	161
   535  00FF59  89                 	db	137
   536  00FF5A  0D                 	db	13
   537  00FF5B  BF                 	db	191
   538  00FF5C  E6                 	db	230
   539  00FF5D  42                 	db	66
   540  00FF5E  68                 	db	104
   541  00FF5F  41                 	db	65
   542  00FF60  99                 	db	153
   543  00FF61  2D                 	db	45
   544  00FF62  0F                 	db	15
   545  00FF63  B0                 	db	176
   546  00FF64  54                 	db	84
   547  00FF65  BB                 	db	187
   548  00FF66  16                 	db	22
   549  00FF67                     __end_of_STable:
   550                           	opt stack 0
   551  00FF67                     _modulation:
   552                           	opt stack 0
   553  00FF67  01                 	db	1
   554  00FF68  01                 	db	1
   555  00FF69  01                 	db	1
   556  00FF6A  01                 	db	1
   557  00FF6B  01                 	db	1
   558  00FF6C  01                 	db	1
   559  00FF6D  01                 	db	1
   560  00FF6E  00                 	db	0
   561  00FF6F                     __end_of_modulation:
   562                           	opt stack 0
   563  00FF6F                     _rxWindowOffset:
   564                           	opt stack 0
   565  00FF6F  DF                 	db	223
   566  00FF70  CE                 	db	206
   567  00FF71  C6                 	db	198
   568  00FF72  C2                 	db	194
   569  00FF73  BE                 	db	190
   570  00FF74  BC                 	db	188
   571  00FF75  F1                 	db	241
   572  00FF76  FE                 	db	254
   573  00FF77                     __end_of_rxWindowOffset:
   574                           	opt stack 0
   575  00FF77                     _maxPayloadSize:
   576                           	opt stack 0
   577  00FF77  33                 	db	51
   578  00FF78  33                 	db	51
   579  00FF79  33                 	db	51
   580  00FF7A  73                 	db	115
   581  00FF7B  F2                 	db	242
   582  00FF7C  F2                 	db	242
   583  00FF7D  F2                 	db	242
   584  00FF7E  38                 	db	56
   585  00FF7F                     __end_of_maxPayloadSize:
   586                           	opt stack 0
   587  00FF7F                     _rxWindowSize:
   588                           	opt stack 0
   589  00FF7F  08                 	db	8
   590  00FF80  0A                 	db	10
   591  00FF81  0E                 	db	14
   592  00FF82  1A                 	db	26
   593  00FF83  31                 	db	49
   594  00FF84  58                 	db	88
   595  00FF85  3C                 	db	60
   596  00FF86  08                 	db	8
   597  00FF87                     __end_of_rxWindowSize:
   598                           	opt stack 0
   599  00FF87                     _macEndDevCmdReplyLen:
   600                           	opt stack 0
   601  00FF87  01                 	db	1
   602  00FF88  02                 	db	2
   603  00FF89  01                 	db	1
   604  00FF8A  02                 	db	2
   605  00FF8B  03                 	db	3
   606  00FF8C  02                 	db	2
   607  00FF8D  01                 	db	1
   608  00FF8E                     __end_of_macEndDevCmdReplyLen:
   609                           	opt stack 0
   610  00FF8E                     _bandwidth:
   611                           	opt stack 0
   612  00FF8E  07                 	db	7
   613  00FF8F  07                 	db	7
   614  00FF90  07                 	db	7
   615  00FF91  07                 	db	7
   616  00FF92  07                 	db	7
   617  00FF93  07                 	db	7
   618  00FF94  08                 	db	8
   619  00FF95                     __end_of_bandwidth:
   620                           	opt stack 0
   621  00FF95                     _spreadingFactor:
   622                           	opt stack 0
   623  00FF95  0C                 	db	12
   624  00FF96  0B                 	db	11
   625  00FF97  0A                 	db	10
   626  00FF98  09                 	db	9
   627  00FF99  08                 	db	8
   628  00FF9A  07                 	db	7
   629  00FF9B  07                 	db	7
   630  00FF9C                     __end_of_spreadingFactor:
   631                           	opt stack 0
   632  00FF9C  0A                 	db	10
   633  00FF9D  07                 	db	7
   634  00FF9E  04                 	db	4
   635  00FF9F  01                 	db	1
   636  00FFA0  FE                 	db	254
   637  00FFA1  FB                 	db	251
   638  00FFA2                     __end_of_txPower433:
   639                           	opt stack 0
   640  00FFA2                     _txPower868:
   641                           	opt stack 0
   642  00FFA2  14                 	db	20
   643  00FFA3  0E                 	db	14
   644  00FFA4  0B                 	db	11
   645  00FFA5  08                 	db	8
   646  00FFA6  05                 	db	5
   647  00FFA7  02                 	db	2
   648  00FFA8                     __end_of_txPower868:
   649                           	opt stack 0
   650  00FFA8                     _DefaultChannels433:
   651                           	opt stack 0
   652  00FFA8  B9D8               	dw	47576
   653  00FFAA  19D1               	dw	6609
   654  00FFAC  01                 	db	1
   655  00FFAD  50                 	db	80
   656  00FFAE  012E               	dw	302
   657  00FFB0  0000               	dw	0
   658  00FFB2  0000               	dw	0
   659  00FFB4  01                 	db	1
   660  00FFB5  FF                 	db	255
   661  00FFB6  C718               	dw	50968
   662  00FFB8  19D4               	dw	6612
   663  00FFBA  01                 	db	1
   664  00FFBB  50                 	db	80
   665  00FFBC  012E               	dw	302
   666  00FFBE  0000               	dw	0
   667  00FFC0  0000               	dw	0
   668  00FFC2  01                 	db	1
   669  00FFC3  FF                 	db	255
   670  00FFC4  D458               	dw	54360
   671  00FFC6  19D7               	dw	6615
   672  00FFC8  01                 	db	1
   673  00FFC9  50                 	db	80
   674  00FFCA  012E               	dw	302
   675  00FFCC  0000               	dw	0
   676  00FFCE  0000               	dw	0
   677  00FFD0  01                 	db	1
   678  00FFD1  FF                 	db	255
   679  00FFD2                     __end_of_DefaultChannels433:
   680                           	opt stack 0
   681  00FFD2                     _DefaultChannels868:
   682                           	opt stack 0
   683  00FFD2  27A0               	dw	10144
   684  00FFD4  33BE               	dw	13246
   685  00FFD6  01                 	db	1
   686  00FFD7  50                 	db	80
   687  00FFD8  012E               	dw	302
   688  00FFDA  0000               	dw	0
   689  00FFDC  0000               	dw	0
   690  00FFDE  01                 	db	1
   691  00FFDF  FF                 	db	255
   692  00FFE0  34E0               	dw	13536
   693  00FFE2  33C1               	dw	13249
   694  00FFE4  01                 	db	1
   695  00FFE5  50                 	db	80
   696  00FFE6  012E               	dw	302
   697  00FFE8  0000               	dw	0
   698  00FFEA  0000               	dw	0
   699  00FFEC  01                 	db	1
   700  00FFED  FF                 	db	255
   701  00FFEE  4220               	dw	16928
   702  00FFF0  33C4               	dw	13252
   703  00FFF2  01                 	db	1
   704  00FFF3  50                 	db	80
   705  00FFF4  012E               	dw	302
   706  00FFF6  0000               	dw	0
   707  00FFF8  0000               	dw	0
   708  00FFFA  01                 	db	1
   709  00FFFB  FF                 	db	255
   710  00FFFC                     __end_of_DefaultChannels868:
   711                           	opt stack 0
   712  00FFFC                     _FskSyncWordBuff:
   713                           	opt stack 0
   714  00FFFC  C1                 	db	193
   715  00FFFD  94                 	db	148
   716  00FFFE  C1                 	db	193
   717  00FFFF                     __end_of_FskSyncWordBuff:
   718                           	opt stack 0
   719  00FFFF  00                 	db	0	; dummy byte at the end
   720  0000                     
   721                           	psect	nvCOMRAM
   722  000048                     __pnvCOMRAM:
   723                           	opt stack 0
   724  000048                     _TMR1_InterruptHandler:
   725                           	opt stack 0
   726  000048                     	ds	2
   727  00004A                     _timer1ReloadVal:
   728                           	opt stack 0
   729  00004A                     	ds	2
   730  00004C                     _IOCB4_InterruptHandler:
   731                           	opt stack 0
   732  00004C                     	ds	2
   733  00004E                     _INT2_InterruptHandler:
   734                           	opt stack 0
   735  00004E                     	ds	2
   736  000050                     _INT1_InterruptHandler:
   737                           	opt stack 0
   738  000050                     	ds	2
   739  0000                     _ANSELA	set	3896
   740  0000                     _ANSELE	set	3900
   741  0000                     _ANSELB	set	3897
   742  0000                     _ANSELC	set	3898
   743  0000                     _ANSELD	set	3899
   744  0000                     _TMR1	set	4046
   745  0000                     _T1GCONbits	set	4044
   746  0000                     _T1CONbits	set	4045
   747  0000                     _T1CON	set	4045
   748  0000                     _TMR1L	set	4046
   749  0000                     _TMR1H	set	4047
   750  0000                     _T1GCON	set	4044
   751  0000                     _IOCBbits	set	3938
   752  0000                     _WPUB	set	3937
   753  0000                     _TRISD	set	3989
   754  0000                     _TRISC	set	3988
   755  0000                     _TRISB	set	3987
   756  0000                     _TRISA	set	3986
   757  0000                     _TRISE	set	3990
   758  0000                     _LATC	set	3979
   759  0000                     _LATB	set	3978
   760  0000                     _LATA	set	3977
   761  0000                     _LATD	set	3980
   762  0000                     _LATE	set	3981
   763  0000                     _OSCTUNE	set	3995
   764  0000                     _OSCCON2	set	4050
   765  0000                     _OSCCON	set	4051
   766  0000                     _PIR1bits	set	3998
   767  0000                     _PIE1bits	set	3997
   768  0000                     _RCONbits	set	4048
   769  0000                     _INTCON2bits	set	4081
   770  0000                     _INTCON3bits	set	4080
   771  0000                     _SSP2STATbits	set	3949
   772  0000                     _SSP2BUF	set	3951
   773  0000                     _SSP2CON1bits	set	3948
   774  0000                     _SSP2ADD	set	3950
   775  0000                     _SSP2CON1	set	3948
   776  0000                     _SSP2STAT	set	3949
   777  0000                     _PORTBbits	set	3969
   778  0000                     _INTCONbits	set	4082
   779  0000                     _LATD3	set	31843
   780  0000                     _LATC2	set	31834
   781  0000                     _TRISC2	set	31906
   782                           
   783                           ; #config settings
   784  0000                     
   785                           	psect	cinit
   786  00253A                     __pcinit:
   787                           	opt stack 0
   788  00253A                     start_initialization:
   789                           	opt stack 0
   790  00253A                     __initialization:
   791                           	opt stack 0
   792                           
   793                           ; Initialize objects allocated to BANK1 (52 bytes)
   794                           ; load TBLPTR registers with __pidataBANK1
   795  00253A  0EA0               	movlw	low __pidataBANK1
   796  00253C  6EF6               	movwf	tblptrl,c
   797  00253E  0E33               	movlw	high __pidataBANK1
   798  002540  6EF7               	movwf	tblptrh,c
   799  002542  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   800  002544  6EF8               	movwf	tblptru,c
   801  002546  EE01  F0AC         	lfsr	0,__pdataBANK1
   802  00254A  EE20 F034          	lfsr	2,52
   803  00254E                     copy_data0:
   804  00254E  0009               	tblrd		*+
   805  002550  CFF5 FFEE          	movff	tablat,postinc0
   806  002554  50DD               	movf	postdec2,w,c
   807  002556  50D9               	movf	fsr2l,w,c
   808  002558  E1FA               	bnz	copy_data0
   809                           
   810                           ; Initialize objects allocated to BANK0 (4 bytes)
   811                           ; load TBLPTR registers with __pidataBANK0
   812  00255A  0E72               	movlw	low __pidataBANK0
   813  00255C  6EF6               	movwf	tblptrl,c
   814  00255E  0E38               	movlw	high __pidataBANK0
   815  002560  6EF7               	movwf	tblptrh,c
   816  002562  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   817  002564  6EF8               	movwf	tblptru,c
   818  002566  EE00  F0FC         	lfsr	0,__pdataBANK0
   819  00256A  EE20 F004          	lfsr	2,4
   820  00256E                     copy_data1:
   821  00256E  0009               	tblrd		*+
   822  002570  CFF5 FFEE          	movff	tablat,postinc0
   823  002574  50DD               	movf	postdec2,w,c
   824  002576  50D9               	movf	fsr2l,w,c
   825  002578  E1FA               	bnz	copy_data1
   826                           
   827                           ; Initialize objects allocated to COMRAM (4 bytes)
   828                           ; load TBLPTR registers with __pidataCOMRAM
   829  00257A  0E6E               	movlw	low __pidataCOMRAM
   830  00257C  6EF6               	movwf	tblptrl,c
   831  00257E  0E38               	movlw	high __pidataCOMRAM
   832  002580  6EF7               	movwf	tblptrh,c
   833  002582  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   834  002584  6EF8               	movwf	tblptru,c
   835  002586  EE00  F052         	lfsr	0,__pdataCOMRAM
   836  00258A  EE20 F004          	lfsr	2,4
   837  00258E                     copy_data2:
   838  00258E  0009               	tblrd		*+
   839  002590  CFF5 FFEE          	movff	tablat,postinc0
   840  002594  50DD               	movf	postdec2,w,c
   841  002596  50D9               	movf	fsr2l,w,c
   842  002598  E1FA               	bnz	copy_data2
   843                           
   844                           ; Clear objects allocated to BIGRAM (542 bytes)
   845  00259A  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   846  00259E  EE22 F01E          	lfsr	2,542
   847  0025A2                     clear_0:
   848  0025A2  6AEE               	clrf	postinc0,c
   849  0025A4  50DD               	movf	postdec2,w,c
   850  0025A6  50D9               	movf	fsr2l,w,c
   851  0025A8  E1FC               	bnz	clear_0
   852  0025AA  50DA               	movf	fsr2h,w,c
   853  0025AC  E1FA               	bnz	clear_0
   854                           
   855                           ; Clear objects allocated to BANK4 (224 bytes)
   856  0025AE  EE04  F000         	lfsr	0,__pbssBANK4
   857  0025B2  0EE0               	movlw	224
   858  0025B4                     clear_1:
   859  0025B4  6AEE               	clrf	postinc0,c
   860  0025B6  06E8               	decf	wreg,f,c
   861  0025B8  E1FD               	bnz	clear_1
   862                           
   863                           ; Clear objects allocated to BANK3 (160 bytes)
   864  0025BA  EE03  F000         	lfsr	0,__pbssBANK3
   865  0025BE  0EA0               	movlw	160
   866  0025C0                     clear_2:
   867  0025C0  6AEE               	clrf	postinc0,c
   868  0025C2  06E8               	decf	wreg,f,c
   869  0025C4  E1FD               	bnz	clear_2
   870                           
   871                           ; Clear objects allocated to BANK2 (245 bytes)
   872  0025C6  EE02  F000         	lfsr	0,__pbssBANK2
   873  0025CA  0EF5               	movlw	245
   874  0025CC                     clear_3:
   875  0025CC  6AEE               	clrf	postinc0,c
   876  0025CE  06E8               	decf	wreg,f,c
   877  0025D0  E1FD               	bnz	clear_3
   878                           
   879                           ; Clear objects allocated to BANK1 (70 bytes)
   880  0025D2  EE01  F066         	lfsr	0,__pbssBANK1
   881  0025D6  0E46               	movlw	70
   882  0025D8                     clear_4:
   883  0025D8  6AEE               	clrf	postinc0,c
   884  0025DA  06E8               	decf	wreg,f,c
   885  0025DC  E1FD               	bnz	clear_4
   886                           
   887                           ; Clear objects allocated to BANK0 (28 bytes)
   888  0025DE  EE00  F0E0         	lfsr	0,__pbssBANK0
   889  0025E2  0E1C               	movlw	28
   890  0025E4                     clear_5:
   891  0025E4  6AEE               	clrf	postinc0,c
   892  0025E6  06E8               	decf	wreg,f,c
   893  0025E8  E1FD               	bnz	clear_5
   894                           
   895                           ; Clear objects allocated to COMRAM (2 bytes)
   896  0025EA  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   897  0025EC  6A56               	clrf	__pbssCOMRAM& (0+255),c
   898  0025EE                     end_of_initialization:
   899                           	opt stack 0
   900  0025EE                     __end_of__initialization:
   901                           	opt stack 0
   902  0025EE  0100               	movlb	0
   903  0025F0  EF88  F014         	goto	_main	;jump to C main() function
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec2	equ	0xFDD
   911                           fsr2h	equ	0xFDA
   912                           fsr2l	equ	0xFD9
   913                           
   914                           	psect	bssCOMRAM
   915  000056                     __pbssCOMRAM:
   916                           	opt stack 0
   917  000056                     _localDioStatus:
   918                           	opt stack 0
   919  000056                     	ds	1
   920  000057                     _dioStatus:
   921                           	opt stack 0
   922  000057                     	ds	1
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec2	equ	0xFDD
   930                           fsr2h	equ	0xFDA
   931                           fsr2l	equ	0xFD9
   932                           
   933                           	psect	dataCOMRAM
   934  000052                     __pdataCOMRAM:
   935                           	opt stack 0
   936  000052                     _randx:
   937                           	opt stack 0
   938  000052                     	ds	4
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           
   949                           	psect	bssBANK0
   950  0000E0                     __pbssBANK0:
   951                           	opt stack 0
   952  0000E0                     _rxPayload:
   953                           	opt stack 0
   954  0000E0                     	ds	4
   955  0000E4                     TMR_GetDeltaTime@retVal:
   956                           	opt stack 0
   957  0000E4                     	ds	4
   958  0000E8                     _ticksAccounted:
   959                           	opt stack 0
   960  0000E8                     	ds	4
   961  0000EC                     _ticksAdded:
   962                           	opt stack 0
   963  0000EC                     	ds	4
   964  0000F0                     TMR_SwapTimer@retVal:
   965                           	opt stack 0
   966  0000F0                     	ds	2
   967  0000F2                     TMR_SwapTimer@oldVal:
   968                           	opt stack 0
   969  0000F2                     	ds	2
   970  0000F4                     TMR_GetDeltaTime@tmrVal:
   971                           	opt stack 0
   972  0000F4                     	ds	2
   973  0000F6                     _reloadVal:
   974                           	opt stack 0
   975  0000F6                     	ds	2
   976  0000F8                     __rcon:
   977                           	opt stack 0
   978  0000F8                     	ds	1
   979  0000F9                     __roundCounter:
   980                           	opt stack 0
   981  0000F9                     	ds	1
   982  0000FA                     _allocatedTimers:
   983                           	opt stack 0
   984  0000FA                     	ds	1
   985  0000FB                     _timerOverflow:
   986                           	opt stack 0
   987  0000FB                     	ds	1
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec2	equ	0xFDD
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           
   998                           	psect	dataBANK0
   999  0000FC                     __pdataBANK0:
  1000                           	opt stack 0
  1001  0000FC                     _ticksToScheduledInterrupt:
  1002                           	opt stack 0
  1003  0000FC                     	ds	4
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           postdec2	equ	0xFDD
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           
  1014                           	psect	bssBANK1
  1015  000166                     __pbssBANK1:
  1016                           	opt stack 0
  1017  000166                     _RadioConfiguration:
  1018                           	opt stack 0
  1019  000166                     	ds	54
  1020  00019C                     _aesBuffer:
  1021                           	opt stack 0
  1022  00019C                     	ds	16
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec2	equ	0xFDD
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           
  1033                           	psect	dataBANK1
  1034  0001AC                     __pdataBANK1:
  1035                           	opt stack 0
  1036  0001AC                     GenerateSubkey@F7103:
  1037                           	opt stack 0
  1038  0001AC                     	ds	16
  1039  0001BC                     _devAddr:
  1040                           	opt stack 0
  1041  0001BC                     	ds	4
  1042  0001C0                     _appSKey:
  1043                           	opt stack 0
  1044  0001C0                     	ds	16
  1045  0001D0                     _nwkSKey:
  1046                           	opt stack 0
  1047  0001D0                     	ds	16
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           postdec2	equ	0xFDD
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           
  1058                           	psect	bssBANK2
  1059  000200                     __pbssBANK2:
  1060                           	opt stack 0
  1061  000200                     _loRa:
  1062                           	opt stack 0
  1063  000200                     	ds	245
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec2	equ	0xFDD
  1071                           fsr2h	equ	0xFDA
  1072                           fsr2l	equ	0xFD9
  1073                           
  1074                           	psect	bssBANK3
  1075  000300                     __pbssBANK3:
  1076                           	opt stack 0
  1077  000300                     _swTimers:
  1078                           	opt stack 0
  1079  000300                     	ds	160
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec2	equ	0xFDD
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           
  1090                           	psect	bssBANK4
  1091  000400                     __pbssBANK4:
  1092                           	opt stack 0
  1093  000400                     _Channels:
  1094                           	opt stack 0
  1095  000400                     	ds	224
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec2	equ	0xFDD
  1103                           fsr2h	equ	0xFDA
  1104                           fsr2l	equ	0xFD9
  1105                           
  1106                           	psect	bssBIGRAM
  1107  0004E0                     __pbssBIGRAM:
  1108                           	opt stack 0
  1109  0004E0                     _macBuffer:
  1110                           	opt stack 0
  1111  0004E0                     	ds	271
  1112  0005EF                     _radioBuffer:
  1113                           	opt stack 0
  1114  0005EF                     	ds	271
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec2	equ	0xFDD
  1122                           fsr2h	equ	0xFDA
  1123                           fsr2l	equ	0xFD9
  1124                           
  1125                           	psect	cstackBANK1
  1126  000100                     __pcstackBANK1:
  1127                           	opt stack 0
  1128  000100                     AESCmac@k2:
  1129                           	opt stack 0
  1130                           
  1131                           ; 16 bytes @ 0x0
  1132  000100                     	ds	16
  1133  000110                     AESCmac@k1:
  1134                           	opt stack 0
  1135                           
  1136                           ; 16 bytes @ 0x10
  1137  000110                     	ds	16
  1138  000120                     AESCmac@mLast:
  1139                           	opt stack 0
  1140                           
  1141                           ; 16 bytes @ 0x20
  1142  000120                     	ds	16
  1143  000130                     AESCmac@padded:
  1144                           	opt stack 0
  1145                           
  1146                           ; 16 bytes @ 0x30
  1147  000130                     	ds	16
  1148  000140                     AESCmac@y:
  1149                           	opt stack 0
  1150                           
  1151                           ; 16 bytes @ 0x40
  1152  000140                     	ds	16
  1153  000150                     AESCmac@x:
  1154                           	opt stack 0
  1155                           
  1156                           ; 16 bytes @ 0x50
  1157  000150                     	ds	16
  1158  000160                     AESCmac@ptr:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x60
  1162  000160                     	ds	2
  1163  000162                     AESCmac@flag:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0x62
  1167  000162                     	ds	1
  1168  000163                     AESCmac@n:
  1169                           	opt stack 0
  1170                           
  1171                           ; 1 bytes @ 0x63
  1172  000163                     	ds	1
  1173  000164                     AESCmac@j:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x64
  1177  000164                     	ds	1
  1178  000165                     AESCmac@i:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x65
  1182  000165                     	ds	1
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec2	equ	0xFDD
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           
  1193                           	psect	cstackBANK0
  1194  000060                     __pcstackBANK0:
  1195                           	opt stack 0
  1196  000060                     ??_UpdateMinMaxChDataRate:
  1197  000060                     ?_TMR1_ReadTimer:
  1198                           	opt stack 0
  1199  000060                     ?___lmul:
  1200                           	opt stack 0
  1201  000060                     ?___lldiv:
  1202                           	opt stack 0
  1203  000060                     ?___llmod:
  1204                           	opt stack 0
  1205  000060                     HALResetPinOutputValue@value:
  1206                           	opt stack 0
  1207  000060                     SwTimerCreate@retVal:
  1208                           	opt stack 0
  1209  000060                     SwTimerStop@timerId:
  1210                           	opt stack 0
  1211  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1212                           	opt stack 0
  1213  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1214                           	opt stack 0
  1215  000060                     RADIO_SetOutputPower@power:
  1216                           	opt stack 0
  1217  000060                     RADIO_SetCRC@crc:
  1218                           	opt stack 0
  1219  000060                     RADIO_SetIQInverted@iqInverted:
  1220                           	opt stack 0
  1221  000060                     RADIO_SetBandwidth@bandwidth:
  1222                           	opt stack 0
  1223  000060                     RADIO_SetModulation@modulation:
  1224                           	opt stack 0
  1225  000060                     UpdateJoinInProgress@state:
  1226                           	opt stack 0
  1227  000060                     SPI2_Exchange8bit@data:
  1228                           	opt stack 0
  1229  000060                     FillSubKey@source:
  1230                           	opt stack 0
  1231  000060                     SwTimerSetCallback@callback:
  1232                           	opt stack 0
  1233  000060                     EncKeySchedule@key:
  1234                           	opt stack 0
  1235  000060                     EncodeShiftRow@stateTable:
  1236                           	opt stack 0
  1237  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1238                           	opt stack 0
  1239  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1240                           	opt stack 0
  1241  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1242                           	opt stack 0
  1243  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1244                           	opt stack 0
  1245  000060                     TMR1_WriteTimer@timerVal:
  1246                           	opt stack 0
  1247  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1248                           	opt stack 0
  1249  000060                     memcpy@d1:
  1250                           	opt stack 0
  1251  000060                     memset@p1:
  1252                           	opt stack 0
  1253  000060                     SystemBlockingWaitMs@ms:
  1254                           	opt stack 0
  1255  000060                     SwTimerSetTimeout@timeout:
  1256                           	opt stack 0
  1257  000060                     RADIO_SetChannelFrequency@frequency:
  1258                           	opt stack 0
  1259  000060                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1260                           	opt stack 0
  1261  000060                     ___lmul@multiplier:
  1262                           	opt stack 0
  1263  000060                     ___lldiv@dividend:
  1264                           	opt stack 0
  1265  000060                     ___llmod@dividend:
  1266                           	opt stack 0
  1267                           
  1268                           ; 4 bytes @ 0x0
  1269  000060                     	ds	1
  1270  000061                     HALSPISend@data:
  1271                           	opt stack 0
  1272  000061                     UpdateMinMaxChDataRate@i:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x1
  1276  000061                     	ds	1
  1277  000062                     ??_TMR1_ReadTimer:
  1278  000062                     ??_EncKeySchedule:
  1279  000062                     SwTimerSetCallback@callbackParameter:
  1280                           	opt stack 0
  1281  000062                     EncodeShiftRow@temp:
  1282                           	opt stack 0
  1283  000062                     RADIO_RegisterWrite@value:
  1284                           	opt stack 0
  1285  000062                     RADIO_RegisterRead@reg:
  1286                           	opt stack 0
  1287  000062                     FillSubKey@key:
  1288                           	opt stack 0
  1289  000062                     memcpy@s1:
  1290                           	opt stack 0
  1291  000062                     memset@c:
  1292                           	opt stack 0
  1293                           
  1294                           ; 2 bytes @ 0x2
  1295  000062                     	ds	1
  1296  000063                     SwTimerSetCallback@timerId:
  1297                           	opt stack 0
  1298  000063                     RADIO_RegisterWrite@reg:
  1299                           	opt stack 0
  1300  000063                     RADIO_RegisterRead@readValue:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x3
  1304  000063                     	ds	1
  1305  000064                     ??_SystemBlockingWaitMs:
  1306  000064                     ??_SwTimerSetTimeout:
  1307  000064                     FillSubKey@size:
  1308                           	opt stack 0
  1309  000064                     RADIO_WritePower@ocp:
  1310                           	opt stack 0
  1311  000064                     _EncKeySchedule$513:
  1312                           	opt stack 0
  1313  000064                     TMR1_ReadTimer@readVal:
  1314                           	opt stack 0
  1315  000064                     memcpy@n:
  1316                           	opt stack 0
  1317  000064                     memset@n:
  1318                           	opt stack 0
  1319  000064                     ___lmul@multiplicand:
  1320                           	opt stack 0
  1321  000064                     ___lldiv@divisor:
  1322                           	opt stack 0
  1323  000064                     ___llmod@divisor:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x4
  1327  000064                     	ds	1
  1328  000065                     ??_FillSubKey:
  1329  000065                     RADIO_WriteMode@newModulation:
  1330                           	opt stack 0
  1331  000065                     RADIO_WritePower@paDac:
  1332                           	opt stack 0
  1333                           
  1334                           ; 1 bytes @ 0x5
  1335  000065                     	ds	1
  1336  000066                     FillSubKey@carry:
  1337                           	opt stack 0
  1338  000066                     RADIO_WriteMode@blocking:
  1339                           	opt stack 0
  1340  000066                     RADIO_WritePower@power:
  1341                           	opt stack 0
  1342  000066                     TMR1_ReadTimer@readValHigh:
  1343                           	opt stack 0
  1344  000066                     AESEncode@block:
  1345                           	opt stack 0
  1346  000066                     memcpy@d:
  1347                           	opt stack 0
  1348  000066                     memset@p:
  1349                           	opt stack 0
  1350                           
  1351                           ; 2 bytes @ 0x6
  1352  000066                     	ds	1
  1353  000067                     FillSubKey@i:
  1354                           	opt stack 0
  1355  000067                     RADIO_WriteMode@currentModulation:
  1356                           	opt stack 0
  1357  000067                     TMR1_ReadTimer@readValLow:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0x7
  1361  000067                     	ds	1
  1362  000068                     ?_TMR_SwapTimer:
  1363                           	opt stack 0
  1364  000068                     ?_TMR_GetDeltaTime:
  1365                           	opt stack 0
  1366  000068                     SwTimerSetTimeout@timerId:
  1367                           	opt stack 0
  1368  000068                     RADIO_WriteMode@dioMapping:
  1369                           	opt stack 0
  1370  000068                     ___llmod@counter:
  1371                           	opt stack 0
  1372  000068                     TMR_SwapTimer@timerVal:
  1373                           	opt stack 0
  1374  000068                     AESEncode@key:
  1375                           	opt stack 0
  1376  000068                     memcpy@s:
  1377                           	opt stack 0
  1378  000068                     ___lmul@product:
  1379                           	opt stack 0
  1380  000068                     ___lldiv@quotient:
  1381                           	opt stack 0
  1382                           
  1383                           ; 4 bytes @ 0x8
  1384  000068                     	ds	1
  1385  000069                     RADIO_WriteMode@currentMode:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x9
  1389  000069                     	ds	1
  1390  00006A                     ??_AESEncode:
  1391  00006A                     RADIO_WriteMode@newMode:
  1392                           	opt stack 0
  1393  00006A                     memcpy@tmp:
  1394                           	opt stack 0
  1395  00006A                     TMR_OverrideRemaining@ticksRemaining:
  1396                           	opt stack 0
  1397                           
  1398                           ; 4 bytes @ 0xA
  1399  00006A                     	ds	1
  1400  00006B                     RADIO_WriteMode@opMode:
  1401                           	opt stack 0
  1402  00006B                     InitDefault868Channels@i:
  1403                           	opt stack 0
  1404  00006B                     InitDefault433Channels@i:
  1405                           	opt stack 0
  1406  00006B                     RADIO_SetFSKSyncWord@syncWord:
  1407                           	opt stack 0
  1408  00006B                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1409                           	opt stack 0
  1410  00006B                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1411                           	opt stack 0
  1412                           
  1413                           ; 2 bytes @ 0xB
  1414  00006B                     	ds	1
  1415  00006C                     ??_TMR_GetDeltaTime:
  1416  00006C                     ?_rand:
  1417                           	opt stack 0
  1418  00006C                     ?_RADIO_ReadRandom:
  1419                           	opt stack 0
  1420  00006C                     ___lldiv@counter:
  1421                           	opt stack 0
  1422                           
  1423                           ; 1 bytes @ 0xC
  1424  00006C                     	ds	1
  1425  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  1426                           	opt stack 0
  1427  00006D                     RADIO_WriteFrequency@frequency:
  1428                           	opt stack 0
  1429  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1430                           	opt stack 0
  1431  00006D                     RADIO_WriteFSKBitRate@bitRate:
  1432                           	opt stack 0
  1433                           
  1434                           ; 4 bytes @ 0xD
  1435  00006D                     	ds	1
  1436  00006E                     ??_TMR_OverrideRemaining:
  1437  00006E                     ??_RADIO_ReadRandom:
  1438  00006E                     ?___lwmod:
  1439                           	opt stack 0
  1440  00006E                     ___lwmod@dividend:
  1441                           	opt stack 0
  1442  00006E                     ConfigureRadio@freq:
  1443                           	opt stack 0
  1444                           
  1445                           ; 4 bytes @ 0xE
  1446  00006E                     	ds	1
  1447  00006F                     RADIO_ReadRandom@retVal:
  1448                           	opt stack 0
  1449                           
  1450                           ; 2 bytes @ 0xF
  1451  00006F                     	ds	1
  1452  000070                     TMR_OverrideRemaining@tmrVal:
  1453                           	opt stack 0
  1454  000070                     ___lwmod@divisor:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x10
  1458  000070                     	ds	1
  1459  000071                     RADIO_ReadRandom@i:
  1460                           	opt stack 0
  1461  000071                     RADIO_WriteFrequency@num_mod:
  1462                           	opt stack 0
  1463  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  1464                           	opt stack 0
  1465  000071                     RADIO_WriteFSKBitRate@num:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x11
  1469  000071                     	ds	1
  1470  000072                     ConfigureRadio@dataRate:
  1471                           	opt stack 0
  1472  000072                     ___lwmod@counter:
  1473                           	opt stack 0
  1474  000072                     TMR_OverrideRemaining@oldReloadVal:
  1475                           	opt stack 0
  1476  000072                     _AESEncode$508:
  1477                           	opt stack 0
  1478  000072                     srand@x:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x12
  1482  000072                     	ds	1
  1483  000073                     ?_Random:
  1484                           	opt stack 0
  1485  000073                     Random@max:
  1486                           	opt stack 0
  1487  000073                     ConfigureRadioTx@freq:
  1488                           	opt stack 0
  1489                           
  1490                           ; 4 bytes @ 0x13
  1491  000073                     	ds	1
  1492  000074                     _AESEncode$509:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x14
  1496  000074                     	ds	1
  1497  000075                     SearchAvailableChannel@transmissionType:
  1498                           	opt stack 0
  1499  000075                     RADIO_WriteFrequency@num:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x15
  1503  000075                     	ds	1
  1504  000076                     _AESEncode$510:
  1505                           	opt stack 0
  1506  000076                     SearchAvailableChannel@channelIndex:
  1507                           	opt stack 0
  1508                           
  1509                           ; 2 bytes @ 0x16
  1510  000076                     	ds	1
  1511  000077                     ConfigureRadioTx@dataRate:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x17
  1515  000077                     	ds	1
  1516  000078                     ??_SearchAvailableChannel:
  1517  000078                     AESEncode@aux:
  1518                           	opt stack 0
  1519  000078                     ConfigureRadioTx@txPower:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x18
  1523  000078                     	ds	1
  1524  000079                     AESEncode@aux2:
  1525                           	opt stack 0
  1526  000079                     RADIO_Init@radioBuffer:
  1527                           	opt stack 0
  1528  000079                     RADIO_WriteConfiguration@symbolTimeout:
  1529                           	opt stack 0
  1530                           
  1531                           ; 2 bytes @ 0x19
  1532  000079                     	ds	1
  1533  00007A                     AESEncode@aux1:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x1A
  1537  00007A                     	ds	1
  1538  00007B                     ??_RADIO_WriteConfiguration:
  1539  00007B                     AESEncode@aux3:
  1540                           	opt stack 0
  1541  00007B                     RADIO_Init@frequency:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x1B
  1545  00007B                     	ds	1
  1546  00007C                     AESEncode@i:
  1547                           	opt stack 0
  1548  00007C                     SearchAvailableChannel@randomNumberCopy:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0x1C
  1552  00007C                     	ds	1
  1553  00007D                     SearchAvailableChannel@result:
  1554                           	opt stack 0
  1555  00007D                     AESEncodeLoRa@block:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x1D
  1559  00007D                     	ds	1
  1560  00007E                     RADIO_WriteConfiguration@i:
  1561                           	opt stack 0
  1562  00007E                     SearchAvailableChannel@maxChannels:
  1563                           	opt stack 0
  1564                           
  1565                           ; 1 bytes @ 0x1E
  1566  00007E                     	ds	1
  1567  00007F                     ??_RADIO_Init:
  1568  00007F                     SearchAvailableChannel@randomNumber:
  1569                           	opt stack 0
  1570  00007F                     AESEncodeLoRa@key:
  1571                           	opt stack 0
  1572  00007F                     RADIO_WriteConfiguration@tempValue:
  1573                           	opt stack 0
  1574                           
  1575                           ; 4 bytes @ 0x1F
  1576  00007F                     	ds	1
  1577  000080                     ?_SwTimersInterrupt:
  1578                           	opt stack 0
  1579  000080                     SearchAvailableChannel@i:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x20
  1583  000080                     	ds	1
  1584  000081                     SelectChannelForTransmission@transmissionType:
  1585                           	opt stack 0
  1586  000081                     AESEncodeLoRa@useKey:
  1587                           	opt stack 0
  1588                           
  1589                           ; 16 bytes @ 0x21
  1590  000081                     	ds	1
  1591  000082                     SelectChannelForTransmission@result:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0x22
  1595  000082                     	ds	1
  1596  000083                     RADIO_WriteConfiguration@regValue:
  1597                           	opt stack 0
  1598  000083                     SelectChannelForTransmission@channelIndex:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x23
  1602  000083                     	ds	1
  1603  000084                     
  1604                           ; 1 bytes @ 0x24
  1605  000084                     	ds	4
  1606  000088                     SwTimersInterrupt@timeElapsed:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x28
  1610  000088                     	ds	4
  1611  00008C                     SwTimersInterrupt@ticksToNextTimerEvent:
  1612                           	opt stack 0
  1613                           
  1614                           ; 4 bytes @ 0x2C
  1615  00008C                     	ds	4
  1616  000090                     SwTimersInterrupt@i:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x30
  1620  000090                     	ds	1
  1621  000091                     GenerateSubkey@key:
  1622                           	opt stack 0
  1623                           
  1624                           ; 2 bytes @ 0x31
  1625  000091                     	ds	2
  1626  000093                     GenerateSubkey@k1:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x33
  1630  000093                     	ds	2
  1631  000095                     GenerateSubkey@k2:
  1632                           	opt stack 0
  1633  000095                     SwTimerStart@ticksRemaining:
  1634                           	opt stack 0
  1635                           
  1636                           ; 4 bytes @ 0x35
  1637  000095                     	ds	2
  1638  000097                     ??_GenerateSubkey:
  1639                           
  1640                           ; 1 bytes @ 0x37
  1641  000097                     	ds	1
  1642  000098                     GenerateSubkey@const_Rb:
  1643                           	opt stack 0
  1644                           
  1645                           ; 16 bytes @ 0x38
  1646  000098                     	ds	1
  1647  000099                     SwTimerStart@timerId:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x39
  1651  000099                     	ds	1
  1652  00009A                     ?_RADIO_Transmit:
  1653                           	opt stack 0
  1654  00009A                     RADIO_Transmit@buffer:
  1655                           	opt stack 0
  1656  00009A                     LORAWAN_LinkCheckConfigure@period:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x3A
  1660  00009A                     	ds	2
  1661  00009C                     ??_LORAWAN_LinkCheckConfigure:
  1662  00009C                     RADIO_Transmit@bufferLen:
  1663                           	opt stack 0
  1664                           
  1665                           ; 1 bytes @ 0x3C
  1666  00009C                     	ds	1
  1667  00009D                     ??_RADIO_Transmit:
  1668                           
  1669                           ; 1 bytes @ 0x3D
  1670  00009D                     	ds	3
  1671  0000A0                     _LORAWAN_LinkCheckConfigure$2491:
  1672                           	opt stack 0
  1673                           
  1674                           ; 4 bytes @ 0x40
  1675  0000A0                     	ds	1
  1676  0000A1                     _RADIO_Transmit$771:
  1677                           	opt stack 0
  1678                           
  1679                           ; 4 bytes @ 0x41
  1680  0000A1                     	ds	3
  1681  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x44
  1685  0000A4                     	ds	1
  1686  0000A5                     LORAWAN_Reset@ismBandNew:
  1687                           	opt stack 0
  1688  0000A5                     _RADIO_Transmit$773:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x45
  1692  0000A5                     	ds	1
  1693  0000A6                     LORAWAN_Init@RxPayload:
  1694                           	opt stack 0
  1695                           
  1696                           ; 2 bytes @ 0x46
  1697  0000A6                     	ds	2
  1698  0000A8                     LORAWAN_Init@RxJoinResponse:
  1699                           	opt stack 0
  1700  0000A8                     GenerateSubkey@l:
  1701                           	opt stack 0
  1702                           
  1703                           ; 16 bytes @ 0x48
  1704  0000A8                     	ds	1
  1705  0000A9                     RADIO_Transmit@regValue:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x49
  1709  0000A9                     	ds	1
  1710  0000AA                     RADIO_Transmit@i:
  1711                           	opt stack 0
  1712                           
  1713                           ; 1 bytes @ 0x4A
  1714  0000AA                     	ds	14
  1715  0000B8                     GenerateSubkey@i:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x58
  1719  0000B8                     	ds	1
  1720  0000B9                     AESCmac@key:
  1721                           	opt stack 0
  1722                           
  1723                           ; 2 bytes @ 0x59
  1724  0000B9                     	ds	2
  1725  0000BB                     AESCmac@output:
  1726                           	opt stack 0
  1727                           
  1728                           ; 2 bytes @ 0x5B
  1729  0000BB                     	ds	2
  1730  0000BD                     AESCmac@input:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x5D
  1734  0000BD                     	ds	2
  1735  0000BF                     AESCmac@size:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x5F
  1739  0000BF                     	ds	1
  1740  0000C0                     ??_AESCmac:
  1741                           
  1742                           ; 1 bytes @ 0x60
  1743  0000C0                     	ds	7
  1744  0000C7                     ?_ComputeMic:
  1745                           	opt stack 0
  1746  0000C7                     ComputeMic@key:
  1747                           	opt stack 0
  1748                           
  1749                           ; 2 bytes @ 0x67
  1750  0000C7                     	ds	2
  1751  0000C9                     ComputeMic@buffer:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x69
  1755  0000C9                     	ds	2
  1756  0000CB                     ComputeMic@bufferLength:
  1757                           	opt stack 0
  1758                           
  1759                           ; 1 bytes @ 0x6B
  1760  0000CB                     	ds	1
  1761  0000CC                     ComputeMic@mic:
  1762                           	opt stack 0
  1763                           
  1764                           ; 4 bytes @ 0x6C
  1765  0000CC                     	ds	4
  1766  0000D0                     ??_PrepareJoinRequestFrame:
  1767                           
  1768                           ; 1 bytes @ 0x70
  1769  0000D0                     	ds	4
  1770  0000D4                     PrepareJoinRequestFrame@mic:
  1771                           	opt stack 0
  1772                           
  1773                           ; 4 bytes @ 0x74
  1774  0000D4                     	ds	4
  1775  0000D8                     PrepareJoinRequestFrame@mhdr:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x78
  1779  0000D8                     	ds	1
  1780  0000D9                     PrepareJoinRequestFrame@iCtr:
  1781                           	opt stack 0
  1782                           
  1783                           ; 1 bytes @ 0x79
  1784  0000D9                     	ds	1
  1785  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x7A
  1789  0000DA                     	ds	1
  1790  0000DB                     LORAWAN_Join@bufferIndex:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x7B
  1794  0000DB                     	ds	1
  1795  0000DC                     LORAWAN_Join@result:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x7C
  1799  0000DC                     	ds	1
  1800  0000DD                     LORAWAN_Join@activationTypeNew:
  1801                           	opt stack 0
  1802                           
  1803                           ; 1 bytes @ 0x7D
  1804  0000DD                     	ds	1
  1805  0000DE                     ??_main:
  1806                           
  1807                           ; 1 bytes @ 0x7E
  1808  0000DE                     	ds	2
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec2	equ	0xFDD
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           
  1819                           	psect	cstackCOMRAM
  1820  000001                     __pcstackCOMRAM:
  1821                           	opt stack 0
  1822  000001                     ?i2_TMR1_ReadTimer:
  1823                           	opt stack 0
  1824  000001                     i2TMR1_WriteTimer@timerVal:
  1825                           	opt stack 0
  1826                           
  1827                           ; 2 bytes @ 0x0
  1828  000001                     	ds	2
  1829  000003                     ??i2_TMR1_ReadTimer:
  1830  000003                     
  1831                           ; 1 bytes @ 0x2
  1832  000003                     	ds	2
  1833  000005                     i2TMR1_ReadTimer@readVal:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x4
  1837  000005                     	ds	2
  1838  000007                     i2TMR1_ReadTimer@readValHigh:
  1839                           	opt stack 0
  1840                           
  1841                           ; 1 bytes @ 0x6
  1842  000007                     	ds	1
  1843  000008                     i2TMR1_ReadTimer@readValLow:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0x7
  1847  000008                     	ds	1
  1848  000009                     ?i2_TMR_SwapTimer:
  1849                           	opt stack 0
  1850  000009                     ?i2_TMR_GetDeltaTime:
  1851                           	opt stack 0
  1852  000009                     i2TMR_SwapTimer@timerVal:
  1853                           	opt stack 0
  1854                           
  1855                           ; 2 bytes @ 0x8
  1856  000009                     	ds	2
  1857  00000B                     
  1858                           ; 1 bytes @ 0xA
  1859  00000B                     	ds	2
  1860  00000D                     ??i2_TMR_GetDeltaTime:
  1861                           
  1862                           ; 1 bytes @ 0xC
  1863  00000D                     	ds	20
  1864  000021                     ?i2_SwTimersInterrupt:
  1865                           	opt stack 0
  1866                           
  1867                           ; 4 bytes @ 0x20
  1868  000021                     	ds	4
  1869  000025                     
  1870                           ; 1 bytes @ 0x24
  1871  000025                     	ds	4
  1872  000029                     i2SwTimersInterrupt@timeElapsed:
  1873                           	opt stack 0
  1874                           
  1875                           ; 4 bytes @ 0x28
  1876  000029                     	ds	4
  1877  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  1878                           	opt stack 0
  1879                           
  1880                           ; 4 bytes @ 0x2C
  1881  00002D                     	ds	4
  1882  000031                     i2SwTimersInterrupt@i:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x30
  1886  000031                     	ds	1
  1887  000032                     ??_TMR_ISR_lora:
  1888                           
  1889                           ; 1 bytes @ 0x31
  1890  000032                     	ds	2
  1891  000034                     ??_INTERRUPT_InterruptManager:
  1892                           
  1893                           ; 1 bytes @ 0x33
  1894  000034                     	ds	8
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           
  1905 ;;
  1906 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1907 ;;
  1908 ;; *************** function _main *****************
  1909 ;; Defined at:
  1910 ;;		line 60 in file "main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        2 bytes
  1929 ;; Hardware stack levels required when called:   15
  1930 ;; This function calls:
  1931 ;;		_LORAWAN_Init
  1932 ;;		_LORAWAN_Join
  1933 ;;		_LORAWAN_SetApplicationSessionKey
  1934 ;;		_LORAWAN_SetDeviceAddress
  1935 ;;		_LORAWAN_SetNetworkSessionKey
  1936 ;;		_SYSTEM_Initialize
  1937 ;; This function is called by:
  1938 ;;		Startup code after reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text0
  1943  002910                     __ptext0:
  1944                           	opt stack 0
  1945  002910                     _main:
  1946                           	opt stack 16
  1947                           
  1948                           ;main.c: 63: SYSTEM_Initialize();
  1949                           
  1950                           ;incstack = 0
  1951  002910  EC16  F01B         	call	_SYSTEM_Initialize	;wreg free
  1952                           
  1953                           ;main.c: 89: (INTCONbits.GIE = 1);
  1954  002914  8EF2               	bsf	intcon,7,c	;volatile
  1955                           
  1956                           ;main.c: 92: (INTCONbits.PEIE = 1);
  1957  002916  8CF2               	bsf	intcon,6,c	;volatile
  1958                           
  1959                           ;main.c: 94: LORAWAN_Init(RxData, RxJoinResponse);
  1960  002918  0E00               	movlw	0
  1961  00291A  0100               	movlb	0	; () banked
  1962  00291C  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  1963  00291E  0E00               	movlw	0
  1964  002920  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  1965  002922  0E00               	movlw	0
  1966  002924  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  1967  002926  0E00               	movlw	0
  1968  002928  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  1969  00292A  EC5D  F017         	call	_LORAWAN_Init	;wreg free
  1970                           
  1971                           ;main.c: 95: LORAWAN_SetNetworkSessionKey(nwkSKey);
  1972  00292E  0ED0               	movlw	low _nwkSKey
  1973  002930  0100               	movlb	0	; () banked
  1974  002932  6F6B               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  1975  002934  0E01               	movlw	high _nwkSKey
  1976  002936  6F6C               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  1977  002938  EC32  F01A         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  1978                           
  1979                           ;main.c: 96: LORAWAN_SetApplicationSessionKey(appSKey);
  1980  00293C  0EC0               	movlw	low _appSKey
  1981  00293E  0100               	movlb	0	; () banked
  1982  002940  6F6B               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  1983  002942  0E01               	movlw	high _appSKey
  1984  002944  6F6C               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  1985  002946  EC49  F01A         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  1986                           
  1987                           ;main.c: 97: LORAWAN_SetDeviceAddress(devAddr);
  1988  00294A  C1BC  F060         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  1989  00294E  C1BD  F061         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  1990  002952  C1BE  F062         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  1991  002956  C1BF  F063         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  1992  00295A  EC89  F01B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  1993                           
  1994                           ;main.c: 98: LORAWAN_Join(ABP);
  1995  00295E  0E01               	movlw	1
  1996  002960  EC4E  F013         	call	_LORAWAN_Join
  1997                           
  1998                           ;main.c: 100: TRISA = 0xF0;
  1999  002964  0EF0               	movlw	240
  2000  002966  6E92               	movwf	3986,c	;volatile
  2001                           
  2002                           ;main.c: 101: LATA = 0xFC;
  2003  002968  0EFC               	movlw	252
  2004  00296A  6E89               	movwf	3977,c	;volatile
  2005  00296C                     
  2006                           ;main.c: 111: {
  2007                           ;main.c: 147: _delay((unsigned long)((500)*(16000000/4000.0)));
  2008  00296C  0E0B               	movlw	11
  2009  00296E  0100               	movlb	0	; () banked
  2010  002970  6FDF               	movwf	(??_main+1)& (0+255),b
  2011  002972  0E26               	movlw	38
  2012  002974  6FDE               	movwf	??_main& (0+255),b
  2013  002976  0E5D               	movlw	93
  2014  002978                     u13317:
  2015  002978  2EE8               	decfsz	wreg,f,c
  2016  00297A  D7FE               	bra	u13317
  2017  00297C  2FDE               	decfsz	??_main& (0+255),f,b
  2018  00297E  D7FC               	bra	u13317
  2019  002980  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  2020  002982  D7FA               	bra	u13317
  2021  002984  D000               	nop2	
  2022                           
  2023                           ;main.c: 149: _delay((unsigned long)((500)*(16000000/4000.0)));
  2024  002986  0E0B               	movlw	11
  2025  002988  0100               	movlb	0	; () banked
  2026  00298A  6FDF               	movwf	(??_main+1)& (0+255),b
  2027  00298C  0E26               	movlw	38
  2028  00298E  6FDE               	movwf	??_main& (0+255),b
  2029  002990  0E5D               	movlw	93
  2030  002992                     u13327:
  2031  002992  2EE8               	decfsz	wreg,f,c
  2032  002994  D7FE               	bra	u13327
  2033  002996  2FDE               	decfsz	??_main& (0+255),f,b
  2034  002998  D7FC               	bra	u13327
  2035  00299A  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  2036  00299C  D7FA               	bra	u13327
  2037  00299E  D000               	nop2	
  2038  0029A0  D7E5               	goto	l2489
  2039  0029A2                     __end_of_main:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           intcon	equ	0xFF2
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec2	equ	0xFDD
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           
  2052 ;; *************** function _SYSTEM_Initialize *****************
  2053 ;; Defined at:
  2054 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:   10
  2075 ;; This function calls:
  2076 ;;		_EXT_INT_Initialize
  2077 ;;		_INTERRUPT_Initialize
  2078 ;;		_LORAWAN_PlatformInit
  2079 ;;		_OSCILLATOR_Initialize
  2080 ;;		_PIN_MANAGER_Initialize
  2081 ;;		_SPI2_Initialize
  2082 ;;		_TMR1_Initialize
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text1
  2089  00362C                     __ptext1:
  2090                           	opt stack 0
  2091  00362C                     _SYSTEM_Initialize:
  2092                           	opt stack 20
  2093                           
  2094                           ;mcc.c: 53: INTERRUPT_Initialize();
  2095                           
  2096                           ;incstack = 0
  2097  00362C  EC3B  F01C         	call	_INTERRUPT_Initialize	;wreg free
  2098                           
  2099                           ;mcc.c: 54: SPI2_Initialize();
  2100  003630  ECC8  F01B         	call	_SPI2_Initialize	;wreg free
  2101                           
  2102                           ;mcc.c: 55: PIN_MANAGER_Initialize();
  2103  003634  EC43  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  2104                           
  2105                           ;mcc.c: 56: OSCILLATOR_Initialize();
  2106  003638  ECCF  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  2107                           
  2108                           ;mcc.c: 57: TMR1_Initialize();
  2109  00363C  EC60  F01A         	call	_TMR1_Initialize	;wreg free
  2110                           
  2111                           ;mcc.c: 58: EXT_INT_Initialize();
  2112  003640  EC76  F01A         	call	_EXT_INT_Initialize	;wreg free
  2113                           
  2114                           ;mcc.c: 59: LORAWAN_PlatformInit();
  2115  003644  ECB3  F01A         	call	_LORAWAN_PlatformInit	;wreg free
  2116  003648  0012               	return		;funcret
  2117  00364A                     __end_of_SYSTEM_Initialize:
  2118                           	opt stack 0
  2119                           tblptru	equ	0xFF8
  2120                           tblptrh	equ	0xFF7
  2121                           tblptrl	equ	0xFF6
  2122                           tablat	equ	0xFF5
  2123                           intcon	equ	0xFF2
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec2	equ	0xFDD
  2127                           fsr2h	equ	0xFDA
  2128                           fsr2l	equ	0xFD9
  2129                           
  2130 ;; *************** function _TMR1_Initialize *****************
  2131 ;; Defined at:
  2132 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    8
  2153 ;; This function calls:
  2154 ;;		_TMR1_SetInterruptHandler
  2155 ;; This function is called by:
  2156 ;;		_SYSTEM_Initialize
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text2
  2161  0034C0                     __ptext2:
  2162                           	opt stack 0
  2163  0034C0                     _TMR1_Initialize:
  2164                           	opt stack 21
  2165                           
  2166                           ;tmr1.c: 69: T1GCON = 0x00;
  2167                           
  2168                           ;incstack = 0
  2169  0034C0  0E00               	movlw	0
  2170  0034C2  6ECC               	movwf	4044,c	;volatile
  2171                           
  2172                           ;tmr1.c: 72: TMR1H = 0x00;
  2173  0034C4  0E00               	movlw	0
  2174  0034C6  6ECF               	movwf	4047,c	;volatile
  2175                           
  2176                           ;tmr1.c: 75: TMR1L = 0x00;
  2177  0034C8  0E00               	movlw	0
  2178  0034CA  6ECE               	movwf	4046,c	;volatile
  2179                           
  2180                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
  2181  0034CC  CFCE F04A          	movff	4046,_timer1ReloadVal	;volatile
  2182  0034D0  CFCF F04B          	movff	4047,_timer1ReloadVal+1	;volatile
  2183                           
  2184                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2185  0034D4  909E               	bcf	3998,0,c	;volatile
  2186                           
  2187                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2188  0034D6  809D               	bsf	3997,0,c	;volatile
  2189                           
  2190                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2191  0034D8  0E9C               	movlw	low _TMR1_DefaultInterruptHandler
  2192  0034DA  0100               	movlb	0	; () banked
  2193  0034DC  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2194  0034DE  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  2195  0034E0  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2196  0034E2  ECEA  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  2197                           
  2198                           ;tmr1.c: 90: T1CON = 0x8D;
  2199  0034E6  0E8D               	movlw	141
  2200  0034E8  6ECD               	movwf	4045,c	;volatile
  2201  0034EA  0012               	return		;funcret
  2202  0034EC                     __end_of_TMR1_Initialize:
  2203                           	opt stack 0
  2204                           tblptru	equ	0xFF8
  2205                           tblptrh	equ	0xFF7
  2206                           tblptrl	equ	0xFF6
  2207                           tablat	equ	0xFF5
  2208                           intcon	equ	0xFF2
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           postdec2	equ	0xFDD
  2212                           fsr2h	equ	0xFDA
  2213                           fsr2l	equ	0xFD9
  2214                           
  2215 ;; *************** function _SPI2_Initialize *****************
  2216 ;; Defined at:
  2217 ;;		line 65 in file "mcc_generated_files/spi2.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    7
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_SYSTEM_Initialize
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text3
  2246  003790                     __ptext3:
  2247                           	opt stack 0
  2248  003790                     _SPI2_Initialize:
  2249                           	opt stack 22
  2250                           
  2251                           ;spi2.c: 70: SSP2STAT = 0x40;
  2252                           
  2253                           ;incstack = 0
  2254  003790  0E40               	movlw	64
  2255  003792  6E6D               	movwf	3949,c	;volatile
  2256                           
  2257                           ;spi2.c: 73: SSP2CON1 = 0x20;
  2258  003794  0E20               	movlw	32
  2259  003796  6E6C               	movwf	3948,c	;volatile
  2260                           
  2261                           ;spi2.c: 76: SSP2ADD = 0x00;
  2262  003798  0E00               	movlw	0
  2263  00379A  6E6E               	movwf	3950,c	;volatile
  2264  00379C  0012               	return		;funcret
  2265  00379E                     __end_of_SPI2_Initialize:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec2	equ	0xFDD
  2275                           fsr2h	equ	0xFDA
  2276                           fsr2l	equ	0xFD9
  2277                           
  2278 ;; *************** function _PIN_MANAGER_Initialize *****************
  2279 ;; Defined at:
  2280 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    8
  2301 ;; This function calls:
  2302 ;;		_IOCB4_SetInterruptHandler
  2303 ;; This function is called by:
  2304 ;;		_SYSTEM_Initialize
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text4
  2309  003086                     __ptext4:
  2310                           	opt stack 0
  2311  003086                     _PIN_MANAGER_Initialize:
  2312                           	opt stack 21
  2313                           
  2314                           ;pin_manager.c: 62: LATE = 0x00;
  2315                           
  2316                           ;incstack = 0
  2317  003086  0E00               	movlw	0
  2318  003088  6E8D               	movwf	3981,c	;volatile
  2319                           
  2320                           ;pin_manager.c: 63: LATD = 0x00;
  2321  00308A  0E00               	movlw	0
  2322  00308C  6E8C               	movwf	3980,c	;volatile
  2323                           
  2324                           ;pin_manager.c: 64: LATA = 0x00;
  2325  00308E  0E00               	movlw	0
  2326  003090  6E89               	movwf	3977,c	;volatile
  2327                           
  2328                           ;pin_manager.c: 65: LATB = 0x00;
  2329  003092  0E00               	movlw	0
  2330  003094  6E8A               	movwf	3978,c	;volatile
  2331                           
  2332                           ;pin_manager.c: 66: LATC = 0x00;
  2333  003096  0E00               	movlw	0
  2334  003098  6E8B               	movwf	3979,c	;volatile
  2335                           
  2336                           ;pin_manager.c: 71: TRISE = 0x07;
  2337  00309A  0E07               	movlw	7
  2338  00309C  6E96               	movwf	3990,c	;volatile
  2339                           
  2340                           ;pin_manager.c: 72: TRISA = 0xFF;
  2341  00309E  6892               	setf	3986,c	;volatile
  2342                           
  2343                           ;pin_manager.c: 73: TRISB = 0xFF;
  2344  0030A0  6893               	setf	3987,c	;volatile
  2345                           
  2346                           ;pin_manager.c: 74: TRISC = 0xFE;
  2347  0030A2  0EFE               	movlw	254
  2348  0030A4  6E94               	movwf	3988,c	;volatile
  2349                           
  2350                           ;pin_manager.c: 75: TRISD = 0xE6;
  2351  0030A6  0EE6               	movlw	230
  2352  0030A8  6E95               	movwf	3989,c	;volatile
  2353                           
  2354                           ;pin_manager.c: 80: ANSELD = 0xE4;
  2355  0030AA  0EE4               	movlw	228
  2356  0030AC  010F               	movlb	15	; () banked
  2357  0030AE  6F3B               	movwf	59,b	;volatile
  2358                           
  2359                           ;pin_manager.c: 81: ANSELC = 0xF8;
  2360  0030B0  0EF8               	movlw	248
  2361  0030B2  6F3A               	movwf	58,b	;volatile
  2362                           
  2363                           ;pin_manager.c: 82: ANSELB = 0x28;
  2364  0030B4  0E28               	movlw	40
  2365  0030B6  6F39               	movwf	57,b	;volatile
  2366                           
  2367                           ;pin_manager.c: 83: ANSELE = 0x07;
  2368  0030B8  0E07               	movlw	7
  2369  0030BA  6F3C               	movwf	60,b	;volatile
  2370                           
  2371                           ;pin_manager.c: 84: ANSELA = 0x2F;
  2372  0030BC  0E2F               	movlw	47
  2373  0030BE  6F38               	movwf	56,b	;volatile
  2374                           
  2375                           ;pin_manager.c: 89: WPUB = 0x00;
  2376  0030C0  0E00               	movlw	0
  2377  0030C2  6E61               	movwf	3937,c	;volatile
  2378                           
  2379                           ; BSR set to: 15
  2380                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
  2381  0030C4  8EF1               	bsf	intcon2,7,c	;volatile
  2382                           
  2383                           ; BSR set to: 15
  2384                           ;pin_manager.c: 98: IOCBbits.IOCB4 = 1;
  2385  0030C6  8862               	bsf	3938,4,c	;volatile
  2386                           
  2387                           ; BSR set to: 15
  2388                           ;pin_manager.c: 103: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2389  0030C8  0E9E               	movlw	low _IOCB4_DefaultInterruptHandler
  2390  0030CA  0100               	movlb	0	; () banked
  2391  0030CC  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2392  0030CE  0E38               	movlw	high _IOCB4_DefaultInterruptHandler
  2393  0030D0  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2394  0030D2  ECEF  F01B         	call	_IOCB4_SetInterruptHandler	;wreg free
  2395                           
  2396                           ;pin_manager.c: 106: INTCONbits.RBIE = 1;
  2397  0030D6  86F2               	bsf	intcon,3,c	;volatile
  2398  0030D8  0012               	return		;funcret
  2399  0030DA                     __end_of_PIN_MANAGER_Initialize:
  2400                           	opt stack 0
  2401                           tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           intcon	equ	0xFF2
  2406                           intcon2	equ	0xFF1
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           postdec2	equ	0xFDD
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           
  2413 ;; *************** function _OSCILLATOR_Initialize *****************
  2414 ;; Defined at:
  2415 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    7
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_SYSTEM_Initialize
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text5
  2444  00379E                     __ptext5:
  2445                           	opt stack 0
  2446  00379E                     _OSCILLATOR_Initialize:
  2447                           	opt stack 22
  2448                           
  2449                           ;mcc.c: 65: OSCCON = 0x70;
  2450                           
  2451                           ;incstack = 0
  2452  00379E  0E70               	movlw	112
  2453  0037A0  6ED3               	movwf	4051,c	;volatile
  2454                           
  2455                           ;mcc.c: 67: OSCCON2 = 0x04;
  2456  0037A2  0E04               	movlw	4
  2457  0037A4  6ED2               	movwf	4050,c	;volatile
  2458                           
  2459                           ;mcc.c: 69: OSCTUNE = 0x00;
  2460  0037A6  0E00               	movlw	0
  2461  0037A8  6E9B               	movwf	3995,c	;volatile
  2462  0037AA  0012               	return		;funcret
  2463  0037AC                     __end_of_OSCILLATOR_Initialize:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           intcon	equ	0xFF2
  2470                           intcon2	equ	0xFF1
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec2	equ	0xFDD
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           
  2477 ;; *************** function _LORAWAN_PlatformInit *****************
  2478 ;; Defined at:
  2479 ;;		line 73 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    9
  2500 ;; This function calls:
  2501 ;;		_DIO0_ISR_Lora_Init
  2502 ;;		_DIO1_ISR_Lora_Init
  2503 ;;		_DIO2_ISR_Lora_Init
  2504 ;;		_DIO3_ISR_Lora_Init
  2505 ;;		_DIO4_ISR_Lora_Init
  2506 ;;		_DIO5_ISR_Lora_Init
  2507 ;;		_SystemTimerInit
  2508 ;;		_TMR_ISR_Lora_Init
  2509 ;; This function is called by:
  2510 ;;		_SYSTEM_Initialize
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text6
  2515  003566                     __ptext6:
  2516                           	opt stack 0
  2517  003566                     _LORAWAN_PlatformInit:
  2518                           	opt stack 20
  2519                           
  2520                           ;lorawan_init.c: 75: TMR_ISR_Lora_Init();
  2521                           
  2522                           ;incstack = 0
  2523  003566  ECA8  F01B         	call	_TMR_ISR_Lora_Init	;wreg free
  2524                           
  2525                           ;lorawan_init.c: 76: DIO0_ISR_Lora_Init();
  2526  00356A  ECC0  F01B         	call	_DIO0_ISR_Lora_Init	;wreg free
  2527                           
  2528                           ;lorawan_init.c: 77: DIO1_ISR_Lora_Init();
  2529  00356E  ECB8  F01B         	call	_DIO1_ISR_Lora_Init	;wreg free
  2530                           
  2531                           ;lorawan_init.c: 78: DIO2_ISR_Lora_Init();
  2532  003572  ECB0  F01B         	call	_DIO2_ISR_Lora_Init	;wreg free
  2533                           
  2534                           ;lorawan_init.c: 79: DIO3_ISR_Lora_Init();
  2535  003576  EC4D  F01C         	call	_DIO3_ISR_Lora_Init	;wreg free
  2536                           
  2537                           ;lorawan_init.c: 80: DIO4_ISR_Lora_Init();
  2538  00357A  EC4C  F01C         	call	_DIO4_ISR_Lora_Init	;wreg free
  2539                           
  2540                           ;lorawan_init.c: 81: DIO5_ISR_Lora_Init();
  2541  00357E  EC4B  F01C         	call	_DIO5_ISR_Lora_Init	;wreg free
  2542                           
  2543                           ;lorawan_init.c: 82: SystemTimerInit();
  2544  003582  EC2B  F01C         	call	_SystemTimerInit	;wreg free
  2545  003586  0012               	return		;funcret
  2546  003588                     __end_of_LORAWAN_PlatformInit:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           intcon	equ	0xFF2
  2553                           intcon2	equ	0xFF1
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec2	equ	0xFDD
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           
  2560 ;; *************** function _TMR_ISR_Lora_Init *****************
  2561 ;; Defined at:
  2562 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    8
  2583 ;; This function calls:
  2584 ;;		_TMR1_SetInterruptHandler
  2585 ;; This function is called by:
  2586 ;;		_LORAWAN_PlatformInit
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text7
  2591  003750                     __ptext7:
  2592                           	opt stack 0
  2593  003750                     _TMR_ISR_Lora_Init:
  2594                           	opt stack 20
  2595                           
  2596                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  2597                           
  2598                           ;incstack = 0
  2599  003750  0E7C               	movlw	low _TMR_ISR_lora
  2600  003752  0100               	movlb	0	; () banked
  2601  003754  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2602  003756  0E2F               	movlw	high _TMR_ISR_lora
  2603  003758  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2604  00375A  ECEA  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  2605  00375E  0012               	return		;funcret
  2606  003760                     __end_of_TMR_ISR_Lora_Init:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           intcon	equ	0xFF2
  2613                           intcon2	equ	0xFF1
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec2	equ	0xFDD
  2617                           fsr2h	equ	0xFDA
  2618                           fsr2l	equ	0xFD9
  2619                           
  2620 ;; *************** function _TMR1_SetInterruptHandler *****************
  2621 ;; Defined at:
  2622 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2625 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    7
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_TMR_ISR_Lora_Init
  2648 ;;		_TMR1_Initialize
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text8
  2653  0037D4                     __ptext8:
  2654                           	opt stack 0
  2655  0037D4                     _TMR1_SetInterruptHandler:
  2656                           	opt stack 21
  2657                           
  2658                           ;tmr1.c: 180: TMR1_InterruptHandler = InterruptHandler;
  2659                           
  2660                           ;incstack = 0
  2661  0037D4  C060  F048         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2662  0037D8  C061  F049         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2663  0037DC  0012               	return		;funcret
  2664  0037DE                     __end_of_TMR1_SetInterruptHandler:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           intcon	equ	0xFF2
  2671                           intcon2	equ	0xFF1
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec2	equ	0xFDD
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           
  2678 ;; *************** function _SystemTimerInit *****************
  2679 ;; Defined at:
  2680 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    7
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_LORAWAN_PlatformInit
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text9
  2709  003856                     __ptext9:
  2710                           	opt stack 0
  2711  003856                     _SystemTimerInit:
  2712                           	opt stack 21
  2713                           
  2714                           ;sw_timer.c: 137: allocatedTimers = 0;
  2715                           
  2716                           ;incstack = 0
  2717  003856  0E00               	movlw	0
  2718  003858  0100               	movlb	0	; () banked
  2719  00385A  6FFA               	movwf	_allocatedTimers& (0+255),b	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722  00385C  0012               	return		;funcret
  2723  00385E                     __end_of_SystemTimerInit:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           intcon	equ	0xFF2
  2730                           intcon2	equ	0xFF1
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec2	equ	0xFDD
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           
  2737 ;; *************** function _DIO5_ISR_Lora_Init *****************
  2738 ;; Defined at:
  2739 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		None
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    7
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_LORAWAN_PlatformInit
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text10
  2768  003896                     __ptext10:
  2769                           	opt stack 0
  2770  003896                     _DIO5_ISR_Lora_Init:
  2771                           	opt stack 21
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;incstack = 0
  2775  003896  0012               	return		;funcret
  2776  003898                     __end_of_DIO5_ISR_Lora_Init:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           intcon	equ	0xFF2
  2783                           intcon2	equ	0xFF1
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           postdec2	equ	0xFDD
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           
  2790 ;; *************** function _DIO4_ISR_Lora_Init *****************
  2791 ;; Defined at:
  2792 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		None
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    7
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_LORAWAN_PlatformInit
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text11
  2821  003898                     __ptext11:
  2822                           	opt stack 0
  2823  003898                     _DIO4_ISR_Lora_Init:
  2824                           	opt stack 21
  2825                           
  2826                           ;incstack = 0
  2827  003898  0012               	return		;funcret
  2828  00389A                     __end_of_DIO4_ISR_Lora_Init:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           intcon	equ	0xFF2
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           postdec2	equ	0xFDD
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           
  2842 ;; *************** function _DIO3_ISR_Lora_Init *****************
  2843 ;; Defined at:
  2844 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		None
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    7
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_LORAWAN_PlatformInit
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text12
  2873  00389A                     __ptext12:
  2874                           	opt stack 0
  2875  00389A                     _DIO3_ISR_Lora_Init:
  2876                           	opt stack 21
  2877                           
  2878                           ;incstack = 0
  2879  00389A  0012               	return		;funcret
  2880  00389C                     __end_of_DIO3_ISR_Lora_Init:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           intcon	equ	0xFF2
  2887                           intcon2	equ	0xFF1
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           postdec2	equ	0xFDD
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           
  2894 ;; *************** function _DIO2_ISR_Lora_Init *****************
  2895 ;; Defined at:
  2896 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    8
  2917 ;; This function calls:
  2918 ;;		_IOCB4_SetInterruptHandler
  2919 ;; This function is called by:
  2920 ;;		_LORAWAN_PlatformInit
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text13
  2925  003760                     __ptext13:
  2926                           	opt stack 0
  2927  003760                     _DIO2_ISR_Lora_Init:
  2928                           	opt stack 20
  2929                           
  2930                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  2931                           
  2932                           ;incstack = 0
  2933  003760  0E8A               	movlw	low _DIO2_ISR_Lora
  2934  003762  0100               	movlb	0	; () banked
  2935  003764  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  2936  003766  0E38               	movlw	high _DIO2_ISR_Lora
  2937  003768  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2938  00376A  ECEF  F01B         	call	_IOCB4_SetInterruptHandler	;wreg free
  2939  00376E  0012               	return		;funcret
  2940  003770                     __end_of_DIO2_ISR_Lora_Init:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           intcon	equ	0xFF2
  2947                           intcon2	equ	0xFF1
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           postdec2	equ	0xFDD
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           
  2954 ;; *************** function _IOCB4_SetInterruptHandler *****************
  2955 ;; Defined at:
  2956 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2959 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    7
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_DIO2_ISR_Lora_Init
  2982 ;;		_PIN_MANAGER_Initialize
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text14
  2987  0037DE                     __ptext14:
  2988                           	opt stack 0
  2989  0037DE                     _IOCB4_SetInterruptHandler:
  2990                           	opt stack 21
  2991                           
  2992                           ;pin_manager.c: 139: IOCB4_InterruptHandler = InterruptHandler;
  2993                           
  2994                           ;incstack = 0
  2995  0037DE  C060  F04C         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  2996  0037E2  C061  F04D         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  2997  0037E6  0012               	return		;funcret
  2998  0037E8                     __end_of_IOCB4_SetInterruptHandler:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           intcon	equ	0xFF2
  3005                           intcon2	equ	0xFF1
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           postdec2	equ	0xFDD
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           
  3012 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3013 ;; Defined at:
  3014 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    8
  3035 ;; This function calls:
  3036 ;;		_INT2_SetInterruptHandler
  3037 ;; This function is called by:
  3038 ;;		_LORAWAN_PlatformInit
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text15
  3043  003770                     __ptext15:
  3044                           	opt stack 0
  3045  003770                     _DIO1_ISR_Lora_Init:
  3046                           	opt stack 20
  3047                           
  3048                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3049                           
  3050                           ;incstack = 0
  3051  003770  0E8E               	movlw	low _DIO1_ISR_Lora
  3052  003772  0100               	movlb	0	; () banked
  3053  003774  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3054  003776  0E38               	movlw	high _DIO1_ISR_Lora
  3055  003778  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3056  00377A  ECF4  F01B         	call	_INT2_SetInterruptHandler	;wreg free
  3057  00377E  0012               	return		;funcret
  3058  003780                     __end_of_DIO1_ISR_Lora_Init:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           intcon	equ	0xFF2
  3065                           intcon2	equ	0xFF1
  3066                           postinc0	equ	0xFEE
  3067                           wreg	equ	0xFE8
  3068                           postdec2	equ	0xFDD
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           
  3072 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3073 ;; Defined at:
  3074 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    8
  3095 ;; This function calls:
  3096 ;;		_INT1_SetInterruptHandler
  3097 ;; This function is called by:
  3098 ;;		_LORAWAN_PlatformInit
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text16
  3103  003780                     __ptext16:
  3104                           	opt stack 0
  3105  003780                     _DIO0_ISR_Lora_Init:
  3106                           	opt stack 20
  3107                           
  3108                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3109                           
  3110                           ;incstack = 0
  3111  003780  0E92               	movlw	low _DIO0_ISR_Lora
  3112  003782  0100               	movlb	0	; () banked
  3113  003784  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3114  003786  0E38               	movlw	high _DIO0_ISR_Lora
  3115  003788  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3116  00378A  ECF9  F01B         	call	_INT1_SetInterruptHandler	;wreg free
  3117  00378E  0012               	return		;funcret
  3118  003790                     __end_of_DIO0_ISR_Lora_Init:
  3119                           	opt stack 0
  3120                           tblptru	equ	0xFF8
  3121                           tblptrh	equ	0xFF7
  3122                           tblptrl	equ	0xFF6
  3123                           tablat	equ	0xFF5
  3124                           intcon	equ	0xFF2
  3125                           intcon2	equ	0xFF1
  3126                           postinc0	equ	0xFEE
  3127                           wreg	equ	0xFE8
  3128                           postdec2	equ	0xFDD
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           
  3132 ;; *************** function _INTERRUPT_Initialize *****************
  3133 ;; Defined at:
  3134 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		None
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    7
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_SYSTEM_Initialize
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text17
  3163  003876                     __ptext17:
  3164                           	opt stack 0
  3165  003876                     _INTERRUPT_Initialize:
  3166                           	opt stack 22
  3167                           
  3168                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3169                           
  3170                           ;incstack = 0
  3171  003876  9ED0               	bcf	4048,7,c	;volatile
  3172  003878  0012               	return		;funcret
  3173  00387A                     __end_of_INTERRUPT_Initialize:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           intcon	equ	0xFF2
  3180                           intcon2	equ	0xFF1
  3181                           postinc0	equ	0xFEE
  3182                           wreg	equ	0xFE8
  3183                           postdec2	equ	0xFDD
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           
  3187 ;; *************** function _EXT_INT_Initialize *****************
  3188 ;; Defined at:
  3189 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    8
  3210 ;; This function calls:
  3211 ;;		_INT1_SetInterruptHandler
  3212 ;;		_INT2_SetInterruptHandler
  3213 ;; This function is called by:
  3214 ;;		_SYSTEM_Initialize
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text18
  3219  0034EC                     __ptext18:
  3220                           	opt stack 0
  3221  0034EC                     _EXT_INT_Initialize:
  3222                           	opt stack 21
  3223                           
  3224                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
  3225                           
  3226                           ;incstack = 0
  3227  0034EC  90F0               	bcf	intcon3,0,c	;volatile
  3228                           
  3229                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
  3230  0034EE  8AF1               	bsf	intcon2,5,c	;volatile
  3231                           
  3232                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3233  0034F0  0EA2               	movlw	low _INT1_DefaultInterruptHandler
  3234  0034F2  0100               	movlb	0	; () banked
  3235  0034F4  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3236  0034F6  0E38               	movlw	high _INT1_DefaultInterruptHandler
  3237  0034F8  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3238  0034FA  ECF9  F01B         	call	_INT1_SetInterruptHandler	;wreg free
  3239                           
  3240                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
  3241  0034FE  86F0               	bsf	intcon3,3,c	;volatile
  3242                           
  3243                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
  3244  003500  92F0               	bcf	intcon3,1,c	;volatile
  3245                           
  3246                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
  3247  003502  88F1               	bsf	intcon2,4,c	;volatile
  3248                           
  3249                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3250  003504  0EA0               	movlw	low _INT2_DefaultInterruptHandler
  3251  003506  0100               	movlb	0	; () banked
  3252  003508  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3253  00350A  0E38               	movlw	high _INT2_DefaultInterruptHandler
  3254  00350C  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3255  00350E  ECF4  F01B         	call	_INT2_SetInterruptHandler	;wreg free
  3256                           
  3257                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
  3258  003512  88F0               	bsf	intcon3,4,c	;volatile
  3259  003514  0012               	return		;funcret
  3260  003516                     __end_of_EXT_INT_Initialize:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           intcon	equ	0xFF2
  3267                           intcon2	equ	0xFF1
  3268                           intcon3	equ	0xFF0
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           postdec2	equ	0xFDD
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           
  3275 ;; *************** function _INT2_SetInterruptHandler *****************
  3276 ;; Defined at:
  3277 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3280 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    7
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_DIO1_ISR_Lora_Init
  3303 ;;		_EXT_INT_Initialize
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text19
  3308  0037E8                     __ptext19:
  3309                           	opt stack 0
  3310  0037E8                     _INT2_SetInterruptHandler:
  3311                           	opt stack 20
  3312                           
  3313                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
  3314                           
  3315                           ;incstack = 0
  3316  0037E8  C060  F04E         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3317  0037EC  C061  F04F         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3318  0037F0  0012               	return		;funcret
  3319  0037F2                     __end_of_INT2_SetInterruptHandler:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           intcon	equ	0xFF2
  3326                           intcon2	equ	0xFF1
  3327                           intcon3	equ	0xFF0
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           
  3334 ;; *************** function _INT1_SetInterruptHandler *****************
  3335 ;; Defined at:
  3336 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3339 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;Total ram usage:        2 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    7
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_DIO0_ISR_Lora_Init
  3362 ;;		_EXT_INT_Initialize
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text20
  3367  0037F2                     __ptext20:
  3368                           	opt stack 0
  3369  0037F2                     _INT1_SetInterruptHandler:
  3370                           	opt stack 20
  3371                           
  3372                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
  3373                           
  3374                           ;incstack = 0
  3375  0037F2  C060  F050         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3376  0037F6  C061  F051         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3377  0037FA  0012               	return		;funcret
  3378  0037FC                     __end_of_INT1_SetInterruptHandler:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           intcon	equ	0xFF2
  3385                           intcon2	equ	0xFF1
  3386                           intcon3	equ	0xFF0
  3387                           postinc0	equ	0xFEE
  3388                           wreg	equ	0xFE8
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           
  3393 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  3394 ;; Defined at:
  3395 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  networkSessi    2   11[BANK0 ] PTR unsigned char 
  3398 ;;		 -> nwkSKey(16), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        2 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    8
  3417 ;; This function calls:
  3418 ;;		_memcpy
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text21
  3425  003464                     __ptext21:
  3426                           	opt stack 0
  3427  003464                     _LORAWAN_SetNetworkSessionKey:
  3428                           	opt stack 22
  3429                           
  3430                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  3431                           
  3432                           ;incstack = 0
  3433  003464  0100               	movlb	0	; () banked
  3434  003466  516B               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  3435  003468  116C               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  3436  00346A  B4D8               	btfsc	status,2,c
  3437  00346C  0012               	return	
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;lorawan.c: 382: {
  3441                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  3442  00346E  0E22               	movlw	low (_loRa+34)
  3443  003470  6F60               	movwf	memcpy@d1& (0+255),b
  3444  003472  0E02               	movlw	high (_loRa+34)
  3445  003474  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3446  003476  C06B  F062         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  3447  00347A  C06C  F063         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  3448  00347E  0E00               	movlw	0
  3449  003480  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3450  003482  0E10               	movlw	16
  3451  003484  6F64               	movwf	memcpy@n& (0+255),b
  3452  003486  EC8E  F017         	call	_memcpy	;wreg free
  3453                           
  3454                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  3455  00348A  0102               	movlb	2	; () banked
  3456  00348C  89A5               	bsf	(_loRa+165)& (0+255),4,b
  3457                           
  3458                           ; BSR set to: 2
  3459                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  3460  00348E  9902               	bcf	(_loRa+2)& (0+255),4,b
  3461  003490  0012               	return	
  3462  003492                     __end_of_LORAWAN_SetNetworkSessionKey:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           intcon	equ	0xFF2
  3469                           intcon2	equ	0xFF1
  3470                           intcon3	equ	0xFF0
  3471                           postinc0	equ	0xFEE
  3472                           wreg	equ	0xFE8
  3473                           postdec2	equ	0xFDD
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  3479 ;; Defined at:
  3480 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  deviceAddres    4    0[BANK0 ] unsigned long 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		None
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        4 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text22
  3509  003712                     __ptext22:
  3510                           	opt stack 0
  3511  003712                     _LORAWAN_SetDeviceAddress:
  3512                           	opt stack 23
  3513                           
  3514                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  3515                           
  3516                           ;incstack = 0
  3517  003712  C060  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  3518  003716  C061  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  3519  00371A  C062  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  3520  00371E  C063  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  3521                           
  3522                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  3523  003722  0102               	movlb	2	; () banked
  3524  003724  85A5               	bsf	(_loRa+165)& (0+255),2,b
  3525                           
  3526                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  3527  003726  9902               	bcf	(_loRa+2)& (0+255),4,b
  3528                           
  3529                           ; BSR set to: 2
  3530  003728  0012               	return		;funcret
  3531  00372A                     __end_of_LORAWAN_SetDeviceAddress:
  3532                           	opt stack 0
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           intcon	equ	0xFF2
  3538                           intcon2	equ	0xFF1
  3539                           intcon3	equ	0xFF0
  3540                           postinc0	equ	0xFEE
  3541                           wreg	equ	0xFE8
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  3548 ;; Defined at:
  3549 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  applicationS    2   11[BANK0 ] PTR unsigned char 
  3552 ;;		 -> appSKey(16), 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    8
  3571 ;; This function calls:
  3572 ;;		_memcpy
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text23
  3579  003492                     __ptext23:
  3580                           	opt stack 0
  3581  003492                     _LORAWAN_SetApplicationSessionKey:
  3582                           	opt stack 22
  3583                           
  3584                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  3585                           
  3586                           ; BSR set to: 2
  3587                           ;incstack = 0
  3588  003492  0100               	movlb	0	; () banked
  3589  003494  516B               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  3590  003496  116C               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  3591  003498  B4D8               	btfsc	status,2,c
  3592  00349A  0012               	return	
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;lorawan.c: 397: {
  3596                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  3597  00349C  0E32               	movlw	low (_loRa+50)
  3598  00349E  6F60               	movwf	memcpy@d1& (0+255),b
  3599  0034A0  0E02               	movlw	high (_loRa+50)
  3600  0034A2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3601  0034A4  C06B  F062         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  3602  0034A8  C06C  F063         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  3603  0034AC  0E00               	movlw	0
  3604  0034AE  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3605  0034B0  0E10               	movlw	16
  3606  0034B2  6F64               	movwf	memcpy@n& (0+255),b
  3607  0034B4  EC8E  F017         	call	_memcpy	;wreg free
  3608                           
  3609                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  3610  0034B8  0102               	movlb	2	; () banked
  3611  0034BA  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  3612                           
  3613                           ; BSR set to: 2
  3614                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  3615  0034BC  9902               	bcf	(_loRa+2)& (0+255),4,b
  3616  0034BE  0012               	return	
  3617  0034C0                     __end_of_LORAWAN_SetApplicationSessionKey:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           intcon	equ	0xFF2
  3624                           intcon2	equ	0xFF1
  3625                           intcon3	equ	0xFF0
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _LORAWAN_Join *****************
  3634 ;; Defined at:
  3635 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  activationTy    1    wreg     enum E7213
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  activationTy    1  125[BANK0 ] enum E7213
  3640 ;;  result          1  124[BANK0 ] enum E7190
  3641 ;;  bufferIndex     1  123[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      enum E7190
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:   14
  3658 ;; This function calls:
  3659 ;;		_PrepareJoinRequestFrame
  3660 ;;		_RADIO_Transmit
  3661 ;;		_SelectChannelForTransmission
  3662 ;;		_SwTimerSetTimeout
  3663 ;;		_SwTimerStart
  3664 ;;		_UpdateJoinInProgress
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text24
  3671  00269C                     __ptext24:
  3672                           	opt stack 0
  3673  00269C                     _LORAWAN_Join:
  3674                           	opt stack 16
  3675                           
  3676                           ;incstack = 0
  3677                           ;LORAWAN_Join@activationTypeNew stored from wreg
  3678  00269C  0100               	movlb	0	; () banked
  3679  00269E  6FDD               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
  3680                           
  3681                           ;lorawan.c: 117: uint8_t bufferIndex;
  3682                           ;lorawan.c: 118: LorawanError_t result;
  3683                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
  3684  0026A0  0102               	movlb	2	; () banked
  3685  0026A2  B103               	btfsc	(_loRa+3)& (0+255),0,b
  3686  0026A4  0012               	return	
  3687                           
  3688                           ; BSR set to: 2
  3689                           ;lorawan.c: 123: }
  3690                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
  3691                           
  3692                           ; BSR set to: 2
  3693                           ;lorawan.c: 121: {
  3694                           ;lorawan.c: 122: return MAC_PAUSED;
  3695                           ;	Return value of _LORAWAN_Join is never used
  3696  0026A6  BF02               	btfsc	(_loRa+2)& (0+255),7,b
  3697  0026A8  0012               	return	
  3698                           
  3699                           ; BSR set to: 2
  3700                           ;lorawan.c: 128: }
  3701                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
  3702                           
  3703                           ; BSR set to: 2
  3704                           
  3705                           ; BSR set to: 2
  3706                           ;lorawan.c: 126: {
  3707                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
  3708                           ;	Return value of _LORAWAN_Join is never used
  3709  0026AA  5102               	movf	(_loRa+2)& (0+255),w,b
  3710  0026AC  0B0F               	andlw	15
  3711  0026AE  0900               	iorlw	0
  3712  0026B0  A4D8               	btfss	status,2,c
  3713  0026B2  0012               	return	
  3714                           
  3715                           ; BSR set to: 2
  3716                           ;lorawan.c: 133: }
  3717                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
  3718                           
  3719                           ; BSR set to: 2
  3720                           ;lorawan.c: 131: {
  3721                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
  3722                           ;	Return value of _LORAWAN_Join is never used
  3723  0026B4  C0DD  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
  3724                           
  3725                           ; BSR set to: 2
  3726                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
  3727  0026B8  0100               	movlb	0	; () banked
  3728  0026BA  51DD               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
  3729  0026BC  A4D8               	btfss	status,2,c
  3730  0026BE  D024               	goto	l1499
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;lorawan.c: 138: {
  3734                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
  3735  0026C0  0102               	movlb	2	; () banked
  3736  0026C2  A1A5               	btfss	(_loRa+165)& (0+255),0,b
  3737  0026C4  0012               	return	
  3738                           
  3739                           ; BSR set to: 2
  3740  0026C6  A3A5               	btfss	(_loRa+165)& (0+255),1,b
  3741  0026C8  0012               	return	
  3742                           
  3743                           ; BSR set to: 2
  3744  0026CA  A7A5               	btfss	(_loRa+165)& (0+255),3,b
  3745  0026CC  0012               	return	
  3746                           
  3747                           ; BSR set to: 2
  3748                           ;lorawan.c: 144: else
  3749                           ;lorawan.c: 145: {
  3750                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
  3751                           
  3752                           ; BSR set to: 2
  3753                           
  3754                           ; BSR set to: 2
  3755                           ;lorawan.c: 143: }
  3756                           
  3757                           ; BSR set to: 2
  3758                           ;lorawan.c: 141: {
  3759                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
  3760                           ;	Return value of _LORAWAN_Join is never used
  3761  0026CE  EC73  F00A         	call	_PrepareJoinRequestFrame	;wreg free
  3762  0026D2  0100               	movlb	0	; () banked
  3763  0026D4  6FDB               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
  3764                           
  3765                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
  3766  0026D6  0E00               	movlw	0
  3767  0026D8  EC28  F016         	call	_SelectChannelForTransmission
  3768  0026DC  0100               	movlb	0	; () banked
  3769  0026DE  6FDC               	movwf	LORAWAN_Join@result& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;lorawan.c: 149: if (result == OK)
  3773  0026E0  51DC               	movf	LORAWAN_Join@result& (0+255),w,b
  3774  0026E2  A4D8               	btfss	status,2,c
  3775  0026E4  0012               	return	
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;lorawan.c: 150: {
  3779                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
  3780  0026E6  0EE0               	movlw	low _macBuffer
  3781  0026E8  6F9A               	movwf	RADIO_Transmit@buffer& (0+255),b
  3782  0026EA  0E04               	movlw	high _macBuffer
  3783  0026EC  6F9B               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  3784  0026EE  C0DB  F09C         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
  3785  0026F2  EC8B  F007         	call	_RADIO_Transmit	;wreg free
  3786  0026F6  0100               	movlb	0	; () banked
  3787  0026F8  519A               	movf	?_RADIO_Transmit& (0+255),w,b
  3788  0026FA  119B               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
  3789  0026FC  A4D8               	btfss	status,2,c
  3790  0026FE  0012               	return	
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;lorawan.c: 152: {
  3794                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
  3795  002700  0E01               	movlw	1
  3796  002702  EC6F  F01B         	call	_UpdateJoinInProgress
  3797                           
  3798                           ;lorawan.c: 164: }
  3799                           ;lorawan.c: 165: }
  3800                           ;lorawan.c: 166: }
  3801                           
  3802                           ;lorawan.c: 161: else
  3803                           ;lorawan.c: 162: {
  3804                           ;lorawan.c: 163: return result;
  3805                           ;	Return value of _LORAWAN_Join is never used
  3806                           
  3807                           ;lorawan.c: 159: }
  3808                           ;lorawan.c: 160: }
  3809                           
  3810                           ;lorawan.c: 156: else
  3811                           ;lorawan.c: 157: {
  3812                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
  3813                           ;	Return value of _LORAWAN_Join is never used
  3814                           
  3815                           ;lorawan.c: 155: }
  3816                           
  3817                           ;lorawan.c: 154: return OK;
  3818                           ;	Return value of _LORAWAN_Join is never used
  3819  002706  0012               	return	
  3820  002708                     l1499:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;lorawan.c: 167: else
  3824                           ;lorawan.c: 168: {
  3825                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
  3826  002708  0102               	movlb	2	; () banked
  3827  00270A  ABA5               	btfss	(_loRa+165)& (0+255),5,b
  3828  00270C  0012               	return	
  3829                           
  3830                           ; BSR set to: 2
  3831  00270E  A9A5               	btfss	(_loRa+165)& (0+255),4,b
  3832  002710  0012               	return	
  3833                           
  3834                           ; BSR set to: 2
  3835  002712  A5A5               	btfss	(_loRa+165)& (0+255),2,b
  3836  002714  0012               	return	
  3837                           
  3838                           ; BSR set to: 2
  3839                           ;lorawan.c: 174: else
  3840                           ;lorawan.c: 175: {
  3841                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
  3842                           
  3843                           ; BSR set to: 2
  3844                           
  3845                           ; BSR set to: 2
  3846                           ;lorawan.c: 173: }
  3847                           
  3848                           ; BSR set to: 2
  3849                           ;lorawan.c: 171: {
  3850                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
  3851                           ;	Return value of _LORAWAN_Join is never used
  3852  002716  0E07               	movlw	7
  3853  002718  EC6F  F01B         	call	_UpdateJoinInProgress
  3854                           
  3855                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
  3856  00271C  0E8F               	movlw	143
  3857  00271E  0100               	movlb	0	; () banked
  3858  002720  6F60               	movwf	SwTimerSetTimeout@timeout& (0+255),b
  3859  002722  0E02               	movlw	2
  3860  002724  6F61               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
  3861  002726  0E00               	movlw	0
  3862  002728  6F62               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
  3863  00272A  0E00               	movlw	0
  3864  00272C  6F63               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
  3865  00272E  0102               	movlb	2	; () banked
  3866  002730  51F3               	movf	(_loRa+243)& (0+255),w,b
  3867  002732  EC71  F019         	call	_SwTimerSetTimeout
  3868                           
  3869                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
  3870  002736  0102               	movlb	2	; () banked
  3871  002738  51F3               	movf	(_loRa+243)& (0+255),w,b
  3872  00273A  ECF2  F013         	call	_SwTimerStart
  3873                           
  3874                           ;lorawan.c: 180: return OK;
  3875                           ;	Return value of _LORAWAN_Join is never used
  3876  00273E  0012               	return	
  3877  002740                     __end_of_LORAWAN_Join:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           intcon	equ	0xFF2
  3884                           intcon2	equ	0xFF1
  3885                           intcon3	equ	0xFF0
  3886                           postinc0	equ	0xFEE
  3887                           wreg	equ	0xFE8
  3888                           postdec2	equ	0xFDD
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _UpdateJoinInProgress *****************
  3894 ;; Defined at:
  3895 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  state           1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  state           1    0[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;Total ram usage:        1 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    7
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_LORAWAN_Join
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text25
  3924  0036DE                     __ptext25:
  3925                           	opt stack 0
  3926  0036DE                     _UpdateJoinInProgress:
  3927                           	opt stack 22
  3928                           
  3929                           ;incstack = 0
  3930                           ;UpdateJoinInProgress@state stored from wreg
  3931  0036DE  0100               	movlb	0	; () banked
  3932  0036E0  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
  3933                           
  3934                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
  3935  0036E2  0102               	movlb	2	; () banked
  3936  0036E4  9902               	bcf	(_loRa+2)& (0+255),4,b
  3937                           
  3938                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
  3939  0036E6  8500               	bsf	_loRa& (0+255),2,b
  3940                           
  3941                           ; BSR set to: 2
  3942                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
  3943  0036E8  5102               	movf	(_loRa+2)& (0+255),w,b
  3944  0036EA  0100               	movlb	0	; () banked
  3945  0036EC  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
  3946  0036EE  0BF0               	andlw	-16
  3947  0036F0  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
  3948  0036F2  0102               	movlb	2	; () banked
  3949  0036F4  6F02               	movwf	(_loRa+2)& (0+255),b
  3950                           
  3951                           ; BSR set to: 2
  3952  0036F6  0012               	return		;funcret
  3953  0036F8                     __end_of_UpdateJoinInProgress:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           intcon	equ	0xFF2
  3960                           intcon2	equ	0xFF1
  3961                           intcon3	equ	0xFF0
  3962                           postinc0	equ	0xFEE
  3963                           wreg	equ	0xFE8
  3964                           postdec2	equ	0xFDD
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _SelectChannelForTransmission *****************
  3970 ;; Defined at:
  3971 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  transmission    1    wreg     unsigned char 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  transmission    1   33[BANK0 ] unsigned char 
  3976 ;;  channelIndex    1   35[BANK0 ] unsigned char 
  3977 ;;  result          1   34[BANK0 ] enum E7249
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      enum E7249
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;Total ram usage:        3 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:   11
  3994 ;; This function calls:
  3995 ;;		_ConfigureRadioTx
  3996 ;;		_SearchAvailableChannel
  3997 ;; This function is called by:
  3998 ;;		_LORAWAN_RxTimeout
  3999 ;;		_LORAWAN_Join
  4000 ;;		_AckRetransmissionCallback
  4001 ;;		_UnconfirmedTransmissionCallback
  4002 ;;		_LORAWAN_Send
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text26
  4007  002C50                     __ptext26:
  4008                           	opt stack 0
  4009  002C50                     _SelectChannelForTransmission:
  4010                           	opt stack 18
  4011                           
  4012                           ; BSR set to: 2
  4013                           ;incstack = 0
  4014                           ;SelectChannelForTransmission@transmissionType stored from wreg
  4015  002C50  0100               	movlb	0	; () banked
  4016  002C52  6F81               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
  4017                           
  4018                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
  4019  002C54  0E00               	movlw	0
  4020  002C56  0100               	movlb	0	; () banked
  4021  002C58  6F82               	movwf	SelectChannelForTransmission@result& (0+255),b
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;lorawan_eu.c: 922: uint8_t channelIndex;
  4025                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
  4026  002C5A  C081  F075         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
  4027  002C5E  0E83               	movlw	low SelectChannelForTransmission@channelIndex
  4028  002C60  6F76               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
  4029  002C62  0E00               	movlw	high SelectChannelForTransmission@channelIndex
  4030  002C64  6F77               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
  4031  002C66  0E10               	movlw	16
  4032  002C68  ECAC  F00E         	call	_SearchAvailableChannel
  4033  002C6C  0100               	movlb	0	; () banked
  4034  002C6E  6F82               	movwf	SelectChannelForTransmission@result& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;lorawan_eu.c: 926: if (result == OK)
  4038  002C70  5182               	movf	SelectChannelForTransmission@result& (0+255),w,b
  4039  002C72  A4D8               	btfss	status,2,c
  4040  002C74  D020               	goto	l1185
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;lorawan_eu.c: 927: {
  4044                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
  4045  002C76  C083  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
  4049  002C7A  5183               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
  4050  002C7C  0D0E               	mullw	14
  4051  002C7E  0E00               	movlw	low _Channels
  4052  002C80  24F3               	addwf	prodl,w,c
  4053  002C82  6ED9               	movwf	fsr2l,c
  4054  002C84  0E04               	movlw	high _Channels
  4055  002C86  20F4               	addwfc	prodh,w,c
  4056  002C88  6EDA               	movwf	fsr2h,c
  4057  002C8A  CFDE F213          	movff	postinc2,_loRa+19
  4058  002C8E  CFDE F214          	movff	postinc2,_loRa+20
  4059  002C92  CFDE F215          	movff	postinc2,_loRa+21
  4060  002C96  CFDE F216          	movff	postinc2,_loRa+22
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
  4064  002C9A  C2DF  F217         	movff	_loRa+223,_loRa+23
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
  4068  002C9E  C213  F073         	movff	_loRa+19,ConfigureRadioTx@freq
  4069  002CA2  C214  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
  4070  002CA6  C215  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
  4071  002CAA  C216  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
  4072  002CAE  0102               	movlb	2	; () banked
  4073  002CB0  5117               	movf	(_loRa+23)& (0+255),w,b
  4074  002CB2  EC6D  F018         	call	_ConfigureRadioTx
  4075  002CB6                     l1185:
  4076                           
  4077                           ;lorawan_eu.c: 933: }
  4078                           ;lorawan_eu.c: 934: return result;
  4079  002CB6  0100               	movlb	0	; () banked
  4080  002CB8  5182               	movf	SelectChannelForTransmission@result& (0+255),w,b
  4081  002CBA  0012               	return	
  4082  002CBC                     __end_of_SelectChannelForTransmission:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           prodh	equ	0xFF4
  4089                           prodl	equ	0xFF3
  4090                           intcon	equ	0xFF2
  4091                           intcon2	equ	0xFF1
  4092                           intcon3	equ	0xFF0
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           postinc2	equ	0xFDE
  4096                           postdec2	equ	0xFDD
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _SearchAvailableChannel *****************
  4102 ;; Defined at:
  4103 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  maxChannels     1    wreg     unsigned char 
  4106 ;;  transmission    1   21[BANK0 ] unsigned char 
  4107 ;;  channelIndex    2   22[BANK0 ] PTR unsigned char 
  4108 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  maxChannels     1   30[BANK0 ] unsigned char 
  4111 ;;  i               1   32[BANK0 ] unsigned char 
  4112 ;;  randomNumber    1   31[BANK0 ] unsigned char 
  4113 ;;  result          1   29[BANK0 ] enum E7249
  4114 ;;  randomNumber    1   28[BANK0 ] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      enum E7249
  4117 ;; Registers used:
  4118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;Total ram usage:       12 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:   10
  4131 ;; This function calls:
  4132 ;;		_Random
  4133 ;; This function is called by:
  4134 ;;		_SelectChannelForTransmission
  4135 ;;		_LORAWAN_RxDone
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text27
  4140  001D58                     __ptext27:
  4141                           	opt stack 0
  4142  001D58                     _SearchAvailableChannel:
  4143                           	opt stack 18
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;incstack = 0
  4147                           ;SearchAvailableChannel@maxChannels stored from wreg
  4148  001D58  0100               	movlb	0	; () banked
  4149  001D5A  6F7E               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
  4150                           
  4151                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
  4152                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
  4153  001D5C  0E00               	movlw	0
  4154  001D5E  0100               	movlb	0	; () banked
  4155  001D60  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
  4159  001D62  C07E  F073         	movff	SearchAvailableChannel@maxChannels,Random@max
  4160  001D66  6B74               	clrf	(Random@max+1)& (0+255),b
  4161  001D68  ECC4  F01A         	call	_Random	;wreg free
  4162  001D6C  0100               	movlb	0	; () banked
  4163  001D6E  2973               	incf	?_Random& (0+255),w,b
  4164  001D70  6F7F               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
  4168  001D72  C07F  F07C         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
  4169                           
  4170                           ;lorawan_eu.c: 786: while (randomNumber)
  4171  001D76  D074               	goto	l1149
  4172  001D78                     
  4173                           ; BSR set to: 0
  4174                           ;lorawan_eu.c: 787: {
  4175                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
  4176                           
  4177                           ; BSR set to: 0
  4178  001D78  0E00               	movlw	0
  4179  001D7A  6F80               	movwf	SearchAvailableChannel@i& (0+255),b
  4180  001D7C  D063               	goto	l1140
  4181  001D7E                     
  4182                           ; BSR set to: 0
  4183                           ;lorawan_eu.c: 789: {
  4184                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
  4185                           
  4186                           ; BSR set to: 0
  4187  001D7E  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4188  001D80  0D0E               	mullw	14
  4189  001D82  0E04               	movlw	4
  4190  001D84  26F3               	addwf	prodl,f,c
  4191  001D86  0E00               	movlw	0
  4192  001D88  22F4               	addwfc	prodh,f,c
  4193  001D8A  0E00               	movlw	low _Channels
  4194  001D8C  24F3               	addwf	prodl,w,c
  4195  001D8E  6ED9               	movwf	fsr2l,c
  4196  001D90  0E04               	movlw	high _Channels
  4197  001D92  20F4               	addwfc	prodh,w,c
  4198  001D94  6EDA               	movwf	fsr2h,c
  4199  001D96  04DE               	decf	postinc2,w,c
  4200  001D98  A4D8               	btfss	status,2,c
  4201  001D9A  D052               	goto	l1145
  4202                           
  4203                           ; BSR set to: 0
  4204  001D9C  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4205  001D9E  0D0E               	mullw	14
  4206  001DA0  0E08               	movlw	8
  4207  001DA2  26F3               	addwf	prodl,f,c
  4208  001DA4  0E00               	movlw	0
  4209  001DA6  22F4               	addwfc	prodh,f,c
  4210  001DA8  0E00               	movlw	low _Channels
  4211  001DAA  24F3               	addwf	prodl,w,c
  4212  001DAC  6ED9               	movwf	fsr2l,c
  4213  001DAE  0E04               	movlw	high _Channels
  4214  001DB0  20F4               	addwfc	prodh,w,c
  4215  001DB2  6EDA               	movwf	fsr2h,c
  4216  001DB4  50DE               	movf	postinc2,w,c
  4217  001DB6  10DE               	iorwf	postinc2,w,c
  4218  001DB8  10DE               	iorwf	postinc2,w,c
  4219  001DBA  10DE               	iorwf	postinc2,w,c
  4220  001DBC  A4D8               	btfss	status,2,c
  4221  001DBE  D040               	goto	l1145
  4222                           
  4223                           ; BSR set to: 0
  4224  001DC0  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4225  001DC2  0D0E               	mullw	14
  4226  001DC4  0E05               	movlw	5
  4227  001DC6  26F3               	addwf	prodl,f,c
  4228  001DC8  0E00               	movlw	0
  4229  001DCA  22F4               	addwfc	prodh,f,c
  4230  001DCC  0E00               	movlw	low _Channels
  4231  001DCE  24F3               	addwf	prodl,w,c
  4232  001DD0  6ED9               	movwf	fsr2l,c
  4233  001DD2  0E04               	movlw	high _Channels
  4234  001DD4  20F4               	addwfc	prodh,w,c
  4235  001DD6  6EDA               	movwf	fsr2h,c
  4236  001DD8  0104               	movlb	4	; () banked
  4237  001DDA  50DF               	movf	223,w,c
  4238  001DDC  0B0F               	andlw	15
  4239  001DDE  0100               	movlb	0	; () banked
  4240  001DE0  6F78               	movwf	??_SearchAvailableChannel& (0+255),b
  4241  001DE2  5178               	movf	??_SearchAvailableChannel& (0+255),w,b
  4242  001DE4  0102               	movlb	2	; () banked
  4243  001DE6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
  4244  001DE8  A0D8               	btfss	status,0,c
  4245  001DEA  D02A               	goto	l1145
  4246                           
  4247                           ; BSR set to: 2
  4248  001DEC  0100               	movlb	0	; () banked
  4249  001DEE  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4250  001DF0  0D0E               	mullw	14
  4251  001DF2  0E05               	movlw	5
  4252  001DF4  26F3               	addwf	prodl,f,c
  4253  001DF6  0E00               	movlw	0
  4254  001DF8  22F4               	addwfc	prodh,f,c
  4255  001DFA  0E00               	movlw	low _Channels
  4256  001DFC  24F3               	addwf	prodl,w,c
  4257  001DFE  6ED9               	movwf	fsr2l,c
  4258  001E00  0E04               	movlw	high _Channels
  4259  001E02  20F4               	addwfc	prodh,w,c
  4260  001E04  6EDA               	movwf	fsr2h,c
  4261  001E06  0104               	movlb	4	; () banked
  4262  001E08  38DF               	swapf	223,w,c
  4263  001E0A  0B0F               	andlw	15
  4264  001E0C  0100               	movlb	0	; () banked
  4265  001E0E  6F78               	movwf	??_SearchAvailableChannel& (0+255),b
  4266  001E10  0102               	movlb	2	; () banked
  4267  001E12  51DF               	movf	(_loRa+223)& (0+255),w,b
  4268  001E14  0100               	movlb	0	; () banked
  4269  001E16  5D78               	subwf	??_SearchAvailableChannel& (0+255),w,b
  4270  001E18  A0D8               	btfss	status,0,c
  4271  001E1A  D012               	goto	l1145
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;lorawan_eu.c: 791: {
  4275                           ;lorawan_eu.c: 792: if (transmissionType == 0)
  4276  001E1C  5175               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
  4277  001E1E  A4D8               	btfss	status,2,c
  4278  001E20  D00E               	goto	l1143
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;lorawan_eu.c: 793: {
  4282                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
  4283  001E22  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4284  001E24  0D0E               	mullw	14
  4285  001E26  0E0C               	movlw	12
  4286  001E28  26F3               	addwf	prodl,f,c
  4287  001E2A  0E00               	movlw	0
  4288  001E2C  22F4               	addwfc	prodh,f,c
  4289  001E2E  0E00               	movlw	low _Channels
  4290  001E30  24F3               	addwf	prodl,w,c
  4291  001E32  6ED9               	movwf	fsr2l,c
  4292  001E34  0E04               	movlw	high _Channels
  4293  001E36  20F4               	addwfc	prodh,w,c
  4294  001E38  6EDA               	movwf	fsr2h,c
  4295  001E3A  04DE               	decf	postinc2,w,c
  4296  001E3C  B4D8               	btfsc	status,2,c
  4297  001E3E                     l1143:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;lorawan_eu.c: 799: else
  4301                           ;lorawan_eu.c: 800: {
  4302                           ;lorawan_eu.c: 801: randomNumber --;
  4303                           
  4304                           ; BSR set to: 0
  4305  001E3E  077F               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
  4306  001E40                     l1145:
  4307                           
  4308                           ; BSR set to: 0
  4309  001E40  0100               	movlb	0	; () banked
  4310  001E42  2B80               	incf	SearchAvailableChannel@i& (0+255),f,b
  4311  001E44                     l1140:
  4312                           
  4313                           ; BSR set to: 0
  4314                           
  4315                           ; BSR set to: 0
  4316  001E44  517E               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
  4317  001E46  5D80               	subwf	SearchAvailableChannel@i& (0+255),w,b
  4318  001E48  B0D8               	btfsc	status,0,c
  4319  001E4A  D003               	goto	u11230
  4320                           
  4321                           ; BSR set to: 0
  4322  001E4C  517F               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4323  001E4E  A4D8               	btfss	status,2,c
  4324  001E50  D796               	goto	l1141
  4325  001E52                     u11230:
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;lorawan_eu.c: 802: }
  4329                           ;lorawan_eu.c: 803: }
  4330                           ;lorawan_eu.c: 804: }
  4331                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
  4332                           
  4333                           ; BSR set to: 0
  4334                           
  4335                           ; BSR set to: 0
  4336  001E52  517C               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
  4337  001E54  197F               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4338  001E56  A4D8               	btfss	status,2,c
  4339  001E58  D003               	goto	l1149
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;lorawan_eu.c: 807: {
  4343                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
  4344  001E5A  0E09               	movlw	9
  4345  001E5C  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4346                           
  4347                           ;lorawan_eu.c: 809: break;
  4348  001E5E  D003               	goto	u11250
  4349  001E60                     l1149:
  4350                           
  4351                           ; BSR set to: 0
  4352                           
  4353                           ; BSR set to: 0
  4354                           
  4355                           ; BSR set to: 0
  4356  001E60  517F               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
  4357  001E62  A4D8               	btfss	status,2,c
  4358  001E64  D789               	goto	l1139
  4359  001E66                     u11250:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;lorawan_eu.c: 810: }
  4363                           ;lorawan_eu.c: 811: }
  4364                           ;lorawan_eu.c: 813: if ( i != 0)
  4365                           
  4366                           ; BSR set to: 0
  4367  001E66  5180               	movf	SearchAvailableChannel@i& (0+255),w,b
  4368  001E68  B4D8               	btfsc	status,2,c
  4369  001E6A  D007               	goto	l1151
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;lorawan_eu.c: 814: {
  4373                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
  4374  001E6C  0580               	decf	SearchAvailableChannel@i& (0+255),w,b
  4375  001E6E  C076  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
  4376  001E72  C077  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
  4377  001E76  6EDF               	movwf	indf2,c
  4378                           
  4379                           ;lorawan_eu.c: 816: }
  4380  001E78  D002               	goto	l1152
  4381  001E7A                     l1151:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;lorawan_eu.c: 817: else
  4385                           ;lorawan_eu.c: 818: {
  4386                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
  4387                           
  4388                           ; BSR set to: 0
  4389  001E7A  0E09               	movlw	9
  4390  001E7C  6F7D               	movwf	SearchAvailableChannel@result& (0+255),b
  4391  001E7E                     l1152:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;lorawan_eu.c: 820: }
  4395                           ;lorawan_eu.c: 821: return result;
  4396  001E7E  517D               	movf	SearchAvailableChannel@result& (0+255),w,b
  4397  001E80  0012               	return	
  4398  001E82                     __end_of_SearchAvailableChannel:
  4399                           	opt stack 0
  4400                           tblptru	equ	0xFF8
  4401                           tblptrh	equ	0xFF7
  4402                           tblptrl	equ	0xFF6
  4403                           tablat	equ	0xFF5
  4404                           prodh	equ	0xFF4
  4405                           prodl	equ	0xFF3
  4406                           intcon	equ	0xFF2
  4407                           intcon2	equ	0xFF1
  4408                           intcon3	equ	0xFF0
  4409                           postinc0	equ	0xFEE
  4410                           wreg	equ	0xFE8
  4411                           indf2	equ	0xFDF
  4412                           postinc2	equ	0xFDE
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _ConfigureRadioTx *****************
  4419 ;; Defined at:
  4420 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  dataRate        1    wreg     unsigned char 
  4423 ;;  freq            4   19[BANK0 ] unsigned long 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  dataRate        1   23[BANK0 ] unsigned char 
  4426 ;;  txPower         1   24[BANK0 ] char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;Total ram usage:        6 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:   10
  4443 ;; This function calls:
  4444 ;;		_ConfigureRadio
  4445 ;;		_RADIO_SetCRC
  4446 ;;		_RADIO_SetIQInverted
  4447 ;;		_RADIO_SetOutputPower
  4448 ;; This function is called by:
  4449 ;;		_SelectChannelForTransmission
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text28
  4454  0030DA                     __ptext28:
  4455                           	opt stack 0
  4456  0030DA                     _ConfigureRadioTx:
  4457                           	opt stack 18
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;incstack = 0
  4461                           ;ConfigureRadioTx@dataRate stored from wreg
  4462  0030DA  0100               	movlb	0	; () banked
  4463  0030DC  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
  4464                           
  4465                           ;lorawan_eu.c: 1257: int8_t txPower;
  4466                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
  4467  0030DE  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
  4468  0030E2  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
  4469  0030E6  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
  4470  0030EA  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
  4471  0030EE  0100               	movlb	0	; () banked
  4472  0030F0  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
  4473  0030F2  ECFA  F012         	call	_ConfigureRadio
  4474                           
  4475                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
  4476  0030F6  0102               	movlb	2	; () banked
  4477  0030F8  51A4               	movf	(_loRa+164)& (0+255),w,b
  4478                           
  4479                           ; BSR set to: 2
  4480                           ;lorawan_eu.c: 1265: else
  4481                           ;lorawan_eu.c: 1266: {
  4482                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
  4483                           
  4484                           ; BSR set to: 2
  4485                           
  4486                           ;lorawan_eu.c: 1264: }
  4487                           
  4488                           ; BSR set to: 2
  4489                           ;lorawan_eu.c: 1262: {
  4490                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
  4491  0030FA  51E1               	movf	(_loRa+225)& (0+255),w,b
  4492  0030FC  0D01               	mullw	1
  4493  0030FE  0EA2               	movlw	low _txPower868
  4494  003100  24F3               	addwf	prodl,w,c
  4495  003102  6EF6               	movwf	tblptrl,c
  4496  003104  0EFF               	movlw	high _txPower868
  4497  003106  20F4               	addwfc	prodh,w,c
  4498  003108  6EF7               	movwf	tblptrh,c
  4499  00310A                     	if	1	;There are 3 active tblptr bytes
  4500  00310A  6AF8               	clrf	tblptru,c
  4501  00310C  0E00               	movlw	low (__mediumconst shr (0+16))
  4502  00310E  22F8               	addwfc	tblptru,f,c
  4503  003110                     	endif
  4504  003110  0008               	tblrd		*
  4505  003112  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
  4506                           
  4507                           ; BSR set to: 2
  4508                           ;lorawan_eu.c: 1268: }
  4509                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
  4510                           
  4511                           ; BSR set to: 2
  4512  003116  0100               	movlb	0	; () banked
  4513  003118  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
  4514  00311A  ECFE  F01B         	call	_RADIO_SetOutputPower
  4515                           
  4516                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
  4517  00311E  0E01               	movlw	1
  4518  003120  EC08  F01C         	call	_RADIO_SetCRC
  4519                           
  4520                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
  4521  003124  0E00               	movlw	0
  4522  003126  EC03  F01C         	call	_RADIO_SetIQInverted
  4523  00312A  0012               	return		;funcret
  4524  00312C                     __end_of_ConfigureRadioTx:
  4525                           	opt stack 0
  4526                           tblptru	equ	0xFF8
  4527                           tblptrh	equ	0xFF7
  4528                           tblptrl	equ	0xFF6
  4529                           tablat	equ	0xFF5
  4530                           prodh	equ	0xFF4
  4531                           prodl	equ	0xFF3
  4532                           intcon	equ	0xFF2
  4533                           intcon2	equ	0xFF1
  4534                           intcon3	equ	0xFF0
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           postdec2	equ	0xFDD
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _RADIO_SetOutputPower *****************
  4545 ;; Defined at:
  4546 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  power           1    wreg     char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  power           1    0[BANK0 ] char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;Total ram usage:        1 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    7
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_ConfigureRadioTx
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text29
  4575  0037FC                     __ptext29:
  4576                           	opt stack 0
  4577  0037FC                     _RADIO_SetOutputPower:
  4578                           	opt stack 20
  4579                           
  4580                           ;incstack = 0
  4581                           ;RADIO_SetOutputPower@power stored from wreg
  4582  0037FC  0100               	movlb	0	; () banked
  4583  0037FE  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
  4584                           
  4585                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
  4586  003800  C060  F181         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
  4587  003804  0012               	return		;funcret
  4588  003806                     __end_of_RADIO_SetOutputPower:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           intcon2	equ	0xFF1
  4598                           intcon3	equ	0xFF0
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           indf2	equ	0xFDF
  4602                           postinc2	equ	0xFDE
  4603                           postdec2	equ	0xFDD
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608 ;; *************** function _RADIO_SetIQInverted *****************
  4609 ;; Defined at:
  4610 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  iqInverted      1    wreg     unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  iqInverted      1    0[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:        1 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    7
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_ConfigureRadioTx
  4635 ;;		_ConfigureRadioRx
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text30
  4640  003806                     __ptext30:
  4641                           	opt stack 0
  4642  003806                     _RADIO_SetIQInverted:
  4643                           	opt stack 20
  4644                           
  4645                           ;incstack = 0
  4646                           ;RADIO_SetIQInverted@iqInverted stored from wreg
  4647  003806  0100               	movlb	0	; () banked
  4648  003808  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
  4649                           
  4650                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
  4651  00380A  C060  F186         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
  4652  00380E  0012               	return		;funcret
  4653  003810                     __end_of_RADIO_SetIQInverted:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           prodh	equ	0xFF4
  4660                           prodl	equ	0xFF3
  4661                           intcon	equ	0xFF2
  4662                           intcon2	equ	0xFF1
  4663                           intcon3	equ	0xFF0
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           indf2	equ	0xFDF
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _RADIO_SetCRC *****************
  4674 ;; Defined at:
  4675 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  crc             1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  crc             1    0[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        1 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    7
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_ConfigureRadioTx
  4700 ;;		_ConfigureRadioRx
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text31
  4705  003810                     __ptext31:
  4706                           	opt stack 0
  4707  003810                     _RADIO_SetCRC:
  4708                           	opt stack 20
  4709                           
  4710                           ;incstack = 0
  4711                           ;RADIO_SetCRC@crc stored from wreg
  4712  003810  0100               	movlb	0	; () banked
  4713  003812  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
  4714                           
  4715                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
  4716  003814  C060  F182         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
  4717  003818  0012               	return		;funcret
  4718  00381A                     __end_of_RADIO_SetCRC:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           intcon2	equ	0xFF1
  4728                           intcon3	equ	0xFF0
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf2	equ	0xFDF
  4732                           postinc2	equ	0xFDE
  4733                           postdec2	equ	0xFDD
  4734                           fsr2h	equ	0xFDA
  4735                           fsr2l	equ	0xFD9
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function _ConfigureRadio *****************
  4739 ;; Defined at:
  4740 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  dataRate        1    wreg     unsigned char 
  4743 ;;  freq            4   14[BANK0 ] unsigned long 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  dataRate        1   18[BANK0 ] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;Total ram usage:        5 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    9
  4762 ;; This function calls:
  4763 ;;		_RADIO_SetBandwidth
  4764 ;;		_RADIO_SetChannelFrequency
  4765 ;;		_RADIO_SetFSKSyncWord
  4766 ;;		_RADIO_SetFrequencyHopPeriod
  4767 ;;		_RADIO_SetLoRaSyncWord
  4768 ;;		_RADIO_SetModulation
  4769 ;;		_RADIO_SetSpreadingFactor
  4770 ;; This function is called by:
  4771 ;;		_ConfigureRadioTx
  4772 ;;		_ConfigureRadioRx
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text32
  4777  0025F4                     __ptext32:
  4778                           	opt stack 0
  4779  0025F4                     _ConfigureRadio:
  4780                           	opt stack 18
  4781                           
  4782                           ;incstack = 0
  4783                           ;ConfigureRadio@dataRate stored from wreg
  4784  0025F4  0100               	movlb	0	; () banked
  4785  0025F6  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
  4786                           
  4787                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
  4788  0025F8  0100               	movlb	0	; () banked
  4789  0025FA  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4790  0025FC  0D01               	mullw	1
  4791  0025FE  0E67               	movlw	low _modulation
  4792  002600  24F3               	addwf	prodl,w,c
  4793  002602  6EF6               	movwf	tblptrl,c
  4794  002604  0EFF               	movlw	high _modulation
  4795  002606  20F4               	addwfc	prodh,w,c
  4796  002608  6EF7               	movwf	tblptrh,c
  4797  00260A                     	if	1	;There are 3 active tblptr bytes
  4798  00260A  6AF8               	clrf	tblptru,c
  4799  00260C  0E00               	movlw	low (__mediumconst shr (0+16))
  4800  00260E  22F8               	addwfc	tblptru,f,c
  4801  002610                     	endif
  4802  002610  0008               	tblrd		*
  4803  002612  50F5               	movf	tablat,w,c
  4804  002614  EC12  F01C         	call	_RADIO_SetModulation
  4805                           
  4806                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
  4807  002618  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
  4808  00261C  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
  4809  002620  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
  4810  002624  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
  4811  002628  EC17  F015         	call	_RADIO_SetChannelFrequency	;wreg free
  4812                           
  4813                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
  4814  00262C  0E00               	movlw	0
  4815  00262E  0100               	movlb	0	; () banked
  4816  002630  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
  4817  002632  0E00               	movlw	0
  4818  002634  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
  4819  002636  EC17  F01C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
  4820                           
  4821                           ;lorawan_eu.c: 869: if (dataRate <= 6)
  4822  00263A  0E07               	movlw	7
  4823  00263C  0100               	movlb	0	; () banked
  4824  00263E  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
  4825  002640  D024               	goto	l1165
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;lorawan_eu.c: 870: {
  4829                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
  4830  002642  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4831  002644  0D01               	mullw	1
  4832  002646  0E95               	movlw	low _spreadingFactor
  4833  002648  24F3               	addwf	prodl,w,c
  4834  00264A  6EF6               	movwf	tblptrl,c
  4835  00264C  0EFF               	movlw	high _spreadingFactor
  4836  00264E  20F4               	addwfc	prodh,w,c
  4837  002650  6EF7               	movwf	tblptrh,c
  4838  002652                     	if	1	;There are 3 active tblptr bytes
  4839  002652  6AF8               	clrf	tblptru,c
  4840  002654  0E00               	movlw	low (__mediumconst shr (0+16))
  4841  002656  22F8               	addwfc	tblptru,f,c
  4842  002658                     	endif
  4843  002658  0008               	tblrd		*
  4844  00265A  50F5               	movf	tablat,w,c
  4845  00265C  EC0D  F01C         	call	_RADIO_SetSpreadingFactor
  4846                           
  4847                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
  4848  002660  0100               	movlb	0	; () banked
  4849  002662  5172               	movf	ConfigureRadio@dataRate& (0+255),w,b
  4850  002664  0D01               	mullw	1
  4851  002666  0E8E               	movlw	low _bandwidth
  4852  002668  24F3               	addwf	prodl,w,c
  4853  00266A  6EF6               	movwf	tblptrl,c
  4854  00266C  0EFF               	movlw	high _bandwidth
  4855  00266E  20F4               	addwfc	prodh,w,c
  4856  002670  6EF7               	movwf	tblptrh,c
  4857  002672                     	if	1	;There are 3 active tblptr bytes
  4858  002672  6AF8               	clrf	tblptru,c
  4859  002674  0E00               	movlw	low (__mediumconst shr (0+16))
  4860  002676  22F8               	addwfc	tblptru,f,c
  4861  002678                     	endif
  4862  002678  0008               	tblrd		*
  4863  00267A  50F5               	movf	tablat,w,c
  4864  00267C  EC1C  F01C         	call	_RADIO_SetBandwidth
  4865                           
  4866                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
  4867  002680  0102               	movlb	2	; () banked
  4868  002682  51F4               	movf	(_loRa+244)& (0+255),w,b
  4869  002684  EC21  F01C         	call	_RADIO_SetLoRaSyncWord
  4870                           
  4871                           ;lorawan_eu.c: 875: }
  4872  002688  0012               	return	
  4873  00268A                     l1165:
  4874                           
  4875                           ;lorawan_eu.c: 876: else
  4876                           ;lorawan_eu.c: 877: {
  4877                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
  4878  00268A  0EFC               	movlw	low _FskSyncWordBuff
  4879  00268C  0100               	movlb	0	; () banked
  4880  00268E  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
  4881  002690  0EFF               	movlw	high _FskSyncWordBuff
  4882  002692  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
  4883  002694  0E03               	movlw	3
  4884  002696  ECEA  F019         	call	_RADIO_SetFSKSyncWord
  4885  00269A  0012               	return	
  4886  00269C                     __end_of_ConfigureRadio:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           intcon2	equ	0xFF1
  4896                           intcon3	equ	0xFF0
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           fsr2h	equ	0xFDA
  4903                           fsr2l	equ	0xFD9
  4904                           status	equ	0xFD8
  4905                           
  4906 ;; *************** function _RADIO_SetSpreadingFactor *****************
  4907 ;; Defined at:
  4908 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  spreadingFac    1    wreg     enum E6994
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  spreadingFac    1    0[BANK0 ] enum E6994
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        1 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    7
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_ConfigureRadio
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text33
  4937  00381A                     __ptext33:
  4938                           	opt stack 0
  4939  00381A                     _RADIO_SetSpreadingFactor:
  4940                           	opt stack 19
  4941                           
  4942                           ;incstack = 0
  4943                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
  4944  00381A  0100               	movlb	0	; () banked
  4945  00381C  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
  4946                           
  4947                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
  4948  00381E  C060  F17F         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
  4949  003822  0012               	return		;funcret
  4950  003824                     __end_of_RADIO_SetSpreadingFactor:
  4951                           	opt stack 0
  4952                           tblptru	equ	0xFF8
  4953                           tblptrh	equ	0xFF7
  4954                           tblptrl	equ	0xFF6
  4955                           tablat	equ	0xFF5
  4956                           prodh	equ	0xFF4
  4957                           prodl	equ	0xFF3
  4958                           intcon	equ	0xFF2
  4959                           intcon2	equ	0xFF1
  4960                           intcon3	equ	0xFF0
  4961                           postinc0	equ	0xFEE
  4962                           wreg	equ	0xFE8
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _RADIO_SetModulation *****************
  4971 ;; Defined at:
  4972 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  modulation      1    wreg     enum E6984
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  modulation      1    0[BANK0 ] enum E6984
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;Total ram usage:        1 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    7
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_ConfigureRadio
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text34
  5001  003824                     __ptext34:
  5002                           	opt stack 0
  5003  003824                     _RADIO_SetModulation:
  5004                           	opt stack 19
  5005                           
  5006                           ;incstack = 0
  5007                           ;RADIO_SetModulation@modulation stored from wreg
  5008  003824  0100               	movlb	0	; () banked
  5009  003826  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
  5010                           
  5011                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
  5012  003828  C060  F17E         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
  5013  00382C  0012               	return		;funcret
  5014  00382E                     __end_of_RADIO_SetModulation:
  5015                           	opt stack 0
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           prodh	equ	0xFF4
  5021                           prodl	equ	0xFF3
  5022                           intcon	equ	0xFF2
  5023                           intcon2	equ	0xFF1
  5024                           intcon3	equ	0xFF0
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           indf2	equ	0xFDF
  5028                           postinc2	equ	0xFDE
  5029                           postdec2	equ	0xFDD
  5030                           fsr2h	equ	0xFDA
  5031                           fsr2l	equ	0xFD9
  5032                           status	equ	0xFD8
  5033                           
  5034 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
  5035 ;; Defined at:
  5036 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		None
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        2 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    7
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_ConfigureRadio
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text35
  5065  00382E                     __ptext35:
  5066                           	opt stack 0
  5067  00382E                     _RADIO_SetFrequencyHopPeriod:
  5068                           	opt stack 19
  5069                           
  5070                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
  5071                           
  5072                           ;incstack = 0
  5073  00382E  C060  F184         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
  5074  003832  C061  F185         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
  5075  003836  0012               	return		;funcret
  5076  003838                     __end_of_RADIO_SetFrequencyHopPeriod:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           intcon2	equ	0xFF1
  5086                           intcon3	equ	0xFF0
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           indf2	equ	0xFDF
  5090                           postinc2	equ	0xFDE
  5091                           postdec2	equ	0xFDD
  5092                           fsr2h	equ	0xFDA
  5093                           fsr2l	equ	0xFD9
  5094                           status	equ	0xFD8
  5095                           
  5096 ;; *************** function _RADIO_SetFSKSyncWord *****************
  5097 ;; Defined at:
  5098 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  syncWordLen     1    wreg     unsigned char 
  5101 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
  5102 ;;		 -> FskSyncWordBuff(3), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;Total ram usage:        3 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    8
  5121 ;; This function calls:
  5122 ;;		_memcpy
  5123 ;; This function is called by:
  5124 ;;		_ConfigureRadio
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text36
  5129  0033D4                     __ptext36:
  5130                           	opt stack 0
  5131  0033D4                     _RADIO_SetFSKSyncWord:
  5132                           	opt stack 18
  5133                           
  5134                           ;incstack = 0
  5135                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
  5136  0033D4  0100               	movlb	0	; () banked
  5137  0033D6  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5138                           
  5139                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
  5140  0033D8  0E08               	movlw	8
  5141  0033DA  0100               	movlb	0	; () banked
  5142  0033DC  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5143  0033DE  D002               	goto	l801
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;radio_driver_SX1276.c: 1627: {
  5147                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
  5148  0033E0  0E08               	movlw	8
  5149  0033E2  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
  5150  0033E4                     l801:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;radio_driver_SX1276.c: 1629: }
  5154                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
  5155                           
  5156                           ; BSR set to: 0
  5157  0033E4  0E75               	movlw	low (_RadioConfiguration+15)
  5158  0033E6  6F60               	movwf	memcpy@d1& (0+255),b
  5159  0033E8  0E01               	movlw	high (_RadioConfiguration+15)
  5160  0033EA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  5161  0033EC  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
  5162  0033F0  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
  5163  0033F4  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
  5164  0033F8  6B65               	clrf	(memcpy@n+1)& (0+255),b
  5165  0033FA  EC8E  F017         	call	_memcpy	;wreg free
  5166                           
  5167                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
  5168  0033FE  C06D  F17D         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
  5169  003402  0012               	return		;funcret
  5170  003404                     __end_of_RADIO_SetFSKSyncWord:
  5171                           	opt stack 0
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           intcon	equ	0xFF2
  5179                           intcon2	equ	0xFF1
  5180                           intcon3	equ	0xFF0
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _RADIO_SetChannelFrequency *****************
  5191 ;; Defined at:
  5192 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  frequency       4    0[BANK0 ] unsigned long 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    0[BANK0 ] enum E7038
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:        4 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    7
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_ConfigureRadio
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text37
  5221  002A2E                     __ptext37:
  5222                           	opt stack 0
  5223  002A2E                     _RADIO_SetChannelFrequency:
  5224                           	opt stack 19
  5225                           
  5226                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
  5227                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
  5228                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
  5229                           
  5230                           ;incstack = 0
  5231  002A2E  0E40               	movlw	64
  5232  002A30  0100               	movlb	0	; () banked
  5233  002A32  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5234  002A34  0E74               	movlw	116
  5235  002A36  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5236  002A38  0E2A               	movlw	42
  5237  002A3A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5238  002A3C  0E08               	movlw	8
  5239  002A3E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5240  002A40  A0D8               	btfss	status,0,c
  5241  002A42  D00A               	goto	u7700
  5242                           
  5243                           ; BSR set to: 0
  5244  002A44  0EC1               	movlw	193
  5245  002A46  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5246  002A48  0E49               	movlw	73
  5247  002A4A  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5248  002A4C  0E6E               	movlw	110
  5249  002A4E  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5250  002A50  0E0A               	movlw	10
  5251  002A52  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5252  002A54  A0D8               	btfss	status,0,c
  5253  002A56  D027               	goto	u7740
  5254  002A58                     u7700:
  5255                           
  5256                           ; BSR set to: 0
  5257                           
  5258                           ; BSR set to: 0
  5259  002A58  0E80               	movlw	128
  5260  002A5A  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5261  002A5C  0E1A               	movlw	26
  5262  002A5E  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5263  002A60  0E70               	movlw	112
  5264  002A62  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5265  002A64  0E18               	movlw	24
  5266  002A66  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5267  002A68  A0D8               	btfss	status,0,c
  5268  002A6A  D00A               	goto	u7720
  5269                           
  5270                           ; BSR set to: 0
  5271  002A6C  0E41               	movlw	65
  5272  002A6E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5273  002A70  0EDD               	movlw	221
  5274  002A72  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5275  002A74  0E4A               	movlw	74
  5276  002A76  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5277  002A78  0E1F               	movlw	31
  5278  002A7A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5279  002A7C  A0D8               	btfss	status,0,c
  5280  002A7E  D013               	goto	u7740
  5281  002A80                     u7720:
  5282                           
  5283                           ; BSR set to: 0
  5284                           
  5285                           ; BSR set to: 0
  5286  002A80  0E80               	movlw	128
  5287  002A82  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5288  002A84  0E13               	movlw	19
  5289  002A86  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5290  002A88  0E61               	movlw	97
  5291  002A8A  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5292  002A8C  0E33               	movlw	51
  5293  002A8E  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5294  002A90  A0D8               	btfss	status,0,c
  5295  002A92  0012               	return	
  5296                           
  5297                           ; BSR set to: 0
  5298  002A94  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
  5299  002A96  0EF7               	movlw	247
  5300  002A98  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
  5301  002A9A  0ECB               	movlw	203
  5302  002A9C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
  5303  002A9E  0E3C               	movlw	60
  5304  002AA0  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
  5305  002AA2  B0D8               	btfsc	status,0,c
  5306  002AA4  0012               	return	
  5307  002AA6                     u7740:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;radio_driver_SX1276.c: 1449: {
  5311                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
  5312  002AA6  C060  F166         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
  5313  002AAA  C061  F167         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
  5314  002AAE  C062  F168         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
  5315  002AB2  C063  F169         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;radio_driver_SX1276.c: 1453: else
  5319                           ;radio_driver_SX1276.c: 1454: {
  5320                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
  5321                           ;	Return value of _RADIO_SetChannelFrequency is never used
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;radio_driver_SX1276.c: 1452: }
  5325                           
  5326                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
  5327                           ;	Return value of _RADIO_SetChannelFrequency is never used
  5328  002AB6  0012               	return	
  5329  002AB8                     __end_of_RADIO_SetChannelFrequency:
  5330                           	opt stack 0
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           intcon2	equ	0xFF1
  5339                           intcon3	equ	0xFF0
  5340                           postinc0	equ	0xFEE
  5341                           wreg	equ	0xFE8
  5342                           indf2	equ	0xFDF
  5343                           postinc2	equ	0xFDE
  5344                           postdec2	equ	0xFDD
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function _RADIO_SetBandwidth *****************
  5350 ;; Defined at:
  5351 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  bandwidth       1    wreg     enum E7002
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  bandwidth       1    0[BANK0 ] enum E7002
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;Total ram usage:        1 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    7
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_ConfigureRadio
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text38
  5380  003838                     __ptext38:
  5381                           	opt stack 0
  5382  003838                     _RADIO_SetBandwidth:
  5383                           	opt stack 19
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;incstack = 0
  5387                           ;RADIO_SetBandwidth@bandwidth stored from wreg
  5388  003838  0100               	movlb	0	; () banked
  5389  00383A  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
  5390                           
  5391                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
  5392  00383C  C060  F180         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
  5393  003840  0012               	return		;funcret
  5394  003842                     __end_of_RADIO_SetBandwidth:
  5395                           	opt stack 0
  5396                           tblptru	equ	0xFF8
  5397                           tblptrh	equ	0xFF7
  5398                           tblptrl	equ	0xFF6
  5399                           tablat	equ	0xFF5
  5400                           prodh	equ	0xFF4
  5401                           prodl	equ	0xFF3
  5402                           intcon	equ	0xFF2
  5403                           intcon2	equ	0xFF1
  5404                           intcon3	equ	0xFF0
  5405                           postinc0	equ	0xFEE
  5406                           wreg	equ	0xFE8
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _RADIO_Transmit *****************
  5415 ;; Defined at:
  5416 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  buffer          2   58[BANK0 ] PTR unsigned char 
  5419 ;;		 -> macBuffer(271), 
  5420 ;;  bufferLen       1   60[BANK0 ] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  i               1   74[BANK0 ] unsigned char 
  5423 ;;  regValue        1   73[BANK0 ] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  2   58[BANK0 ] enum E7038
  5426 ;; Registers used:
  5427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5433 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;Total ram usage:       17 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:   12
  5440 ;; This function calls:
  5441 ;;		_HALSPICSAssert
  5442 ;;		_HALSPICSDeassert
  5443 ;;		_HALSPISend
  5444 ;;		_RADIO_RegisterRead
  5445 ;;		_RADIO_RegisterWrite
  5446 ;;		_RADIO_WriteConfiguration
  5447 ;;		_RADIO_WriteMode
  5448 ;;		_SwTimerSetTimeout
  5449 ;;		_SwTimerStart
  5450 ;;		_SwTimerStop
  5451 ;;		___lldiv
  5452 ;; This function is called by:
  5453 ;;		_LORAWAN_RxTimeout
  5454 ;;		_LORAWAN_Join
  5455 ;;		_AckRetransmissionCallback
  5456 ;;		_UnconfirmedTransmissionCallback
  5457 ;;		_LORAWAN_Send
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text39
  5462  000F16                     __ptext39:
  5463                           	opt stack 0
  5464  000F16                     _RADIO_Transmit:
  5465                           	opt stack 17
  5466                           
  5467                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
  5468                           ;radio_driver_SX1276.c: 789: uint8_t i;
  5469                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  5470                           
  5471                           ;incstack = 0
  5472  000F16  0101               	movlb	1	; () banked
  5473  000F18  A589               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  5474  000F1A  D006               	goto	l496
  5475                           
  5476                           ; BSR set to: 1
  5477                           ;radio_driver_SX1276.c: 792: {
  5478                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
  5479  000F1C  0E80               	movlw	128
  5480  000F1E  0100               	movlb	0	; () banked
  5481  000F20  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5482  000F22  0E03               	movlw	3
  5483  000F24  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5484                           
  5485                           ; BSR set to: 0
  5486  000F26  0012               	return	
  5487  000F28                     l496:
  5488                           
  5489                           ;radio_driver_SX1276.c: 794: }
  5490                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
  5491                           
  5492                           ; BSR set to: 0
  5493  000F28  C189  F09D         	movff	_RadioConfiguration+35,??_RADIO_Transmit
  5494  000F2C  0E03               	movlw	3
  5495  000F2E  0100               	movlb	0	; () banked
  5496  000F30  179D               	andwf	??_RADIO_Transmit& (0+255),f,b
  5497  000F32  B4D8               	btfsc	status,2,c
  5498  000F34  D005               	goto	l498
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;radio_driver_SX1276.c: 797: {
  5502                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
  5503  000F36  0E80               	movlw	128
  5504  000F38  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5505  000F3A  0E04               	movlw	4
  5506  000F3C  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509  000F3E  0012               	return	
  5510  000F40                     l498:
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;radio_driver_SX1276.c: 799: }
  5514                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
  5515                           
  5516                           ; BSR set to: 0
  5517  000F40  0101               	movlb	1	; () banked
  5518  000F42  517E               	movf	(_RadioConfiguration+24)& (0+255),w,b
  5519  000F44  A4D8               	btfss	status,2,c
  5520  000F46  D009               	goto	l499
  5521                           
  5522                           ; BSR set to: 1
  5523  000F48  0E40               	movlw	64
  5524  000F4A  0100               	movlb	0	; () banked
  5525  000F4C  659C               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
  5526  000F4E  D005               	goto	l499
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;radio_driver_SX1276.c: 802: {
  5530                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
  5531  000F50  0E80               	movlw	128
  5532  000F52  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5533  000F54  0E02               	movlw	2
  5534  000F56  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5535                           
  5536                           ; BSR set to: 0
  5537  000F58  0012               	return	
  5538  000F5A                     l499:
  5539                           
  5540                           ;radio_driver_SX1276.c: 804: }
  5541                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
  5542                           
  5543                           ; BSR set to: 0
  5544  000F5A  0101               	movlb	1	; () banked
  5545  000F5C  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5546  000F5E  EC9F  F01A         	call	_SwTimerStop
  5547                           
  5548                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
  5549  000F62  0E00               	movlw	0
  5550  000F64  0100               	movlb	0	; () banked
  5551  000F66  6F7A               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
  5552  000F68  0E04               	movlw	4
  5553  000F6A  6F79               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
  5554  000F6C  EC43  F000         	call	_RADIO_WriteConfiguration	;wreg free
  5555                           
  5556                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
  5557  000F70  0101               	movlb	1	; () banked
  5558  000F72  057E               	decf	(_RadioConfiguration+24)& (0+255),w,b
  5559  000F74  A4D8               	btfss	status,2,c
  5560  000F76  D027               	goto	l500
  5561                           
  5562                           ; BSR set to: 1
  5563                           ;radio_driver_SX1276.c: 813: {
  5564                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
  5565  000F78  C09C  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
  5566  000F7C  0E22               	movlw	34
  5567  000F7E  ECE6  F01A         	call	_RADIO_RegisterWrite
  5568                           
  5569                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
  5570  000F82  0E0A               	movlw	10
  5571  000F84  EC8B  F01A         	call	_RADIO_RegisterRead
  5572  000F88  0100               	movlb	0	; () banked
  5573  000F8A  6FA9               	movwf	RADIO_Transmit@regValue& (0+255),b
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
  5577  000F8C  0EF0               	movlw	240
  5578  000F8E  17A9               	andwf	RADIO_Transmit@regValue& (0+255),f,b
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
  5582  000F90  87A9               	bsf	RADIO_Transmit@regValue& (0+255),3,b
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
  5586  000F92  C0A9  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
  5587  000F96  0E0A               	movlw	10
  5588  000F98  ECE6  F01A         	call	_RADIO_RegisterWrite
  5589                           
  5590                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
  5591  000F9C  0E40               	movlw	64
  5592  000F9E  0100               	movlb	0	; () banked
  5593  000FA0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5594  000FA2  0E40               	movlw	64
  5595  000FA4  ECE6  F01A         	call	_RADIO_RegisterWrite
  5596                           
  5597                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
  5598  000FA8  0E00               	movlw	0
  5599  000FAA  0100               	movlb	0	; () banked
  5600  000FAC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5601  000FAE  0E41               	movlw	65
  5602  000FB0  ECE6  F01A         	call	_RADIO_RegisterWrite
  5603                           
  5604                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
  5605  000FB4  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5606  000FB8  0E01               	movlw	1
  5607  000FBA  0100               	movlb	0	; () banked
  5608  000FBC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5609  000FBE  0E01               	movlw	1
  5610  000FC0  EC42  F010         	call	_RADIO_WriteMode
  5611                           
  5612                           ;radio_driver_SX1276.c: 828: }
  5613  000FC4  D00C               	goto	l501
  5614  000FC6                     l500:
  5615                           
  5616                           ;radio_driver_SX1276.c: 829: else
  5617                           ;radio_driver_SX1276.c: 830: {
  5618                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
  5619  000FC6  0E00               	movlw	0
  5620  000FC8  0100               	movlb	0	; () banked
  5621  000FCA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5622  000FCC  0E40               	movlw	64
  5623  000FCE  ECE6  F01A         	call	_RADIO_RegisterWrite
  5624                           
  5625                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
  5626  000FD2  0E00               	movlw	0
  5627  000FD4  0100               	movlb	0	; () banked
  5628  000FD6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5629  000FD8  0E41               	movlw	65
  5630  000FDA  ECE6  F01A         	call	_RADIO_RegisterWrite
  5631  000FDE                     l501:
  5632                           
  5633                           ;radio_driver_SX1276.c: 834: }
  5634                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
  5635  000FDE  0101               	movlb	1	; () banked
  5636  000FE0  517E               	movf	(_RadioConfiguration+24)& (0+255),w,b
  5637  000FE2  A4D8               	btfss	status,2,c
  5638  000FE4  D005               	goto	l502
  5639                           
  5640                           ; BSR set to: 1
  5641                           ;radio_driver_SX1276.c: 837: {
  5642                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
  5643  000FE6  C09C  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
  5644  000FEA  0E00               	movlw	0
  5645  000FEC  ECE6  F01A         	call	_RADIO_RegisterWrite
  5646  000FF0                     l502:
  5647                           
  5648                           ;radio_driver_SX1276.c: 840: }
  5649                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
  5650  000FF0  EC3F  F01C         	call	_HALSPICSAssert	;wreg free
  5651                           
  5652                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
  5653  000FF4  0E80               	movlw	128
  5654  000FF6  ECDD  F01B         	call	_HALSPISend
  5655                           
  5656                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
  5657  000FFA  0E00               	movlw	0
  5658  000FFC  0100               	movlb	0	; () banked
  5659  000FFE  6FAA               	movwf	RADIO_Transmit@i& (0+255),b
  5660  001000  D00D               	goto	l503
  5661  001002                     
  5662                           ; BSR set to: 0
  5663                           ;radio_driver_SX1276.c: 846: {
  5664                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
  5665                           
  5666                           ; BSR set to: 0
  5667  001002  51AA               	movf	RADIO_Transmit@i& (0+255),w,b
  5668  001004  0D01               	mullw	1
  5669  001006  50F3               	movf	prodl,w,c
  5670  001008  259A               	addwf	RADIO_Transmit@buffer& (0+255),w,b
  5671  00100A  6ED9               	movwf	fsr2l,c
  5672  00100C  50F4               	movf	prodh,w,c
  5673  00100E  219B               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
  5674  001010  6EDA               	movwf	fsr2h,c
  5675  001012  50DF               	movf	indf2,w,c
  5676  001014  ECDD  F01B         	call	_HALSPISend
  5677  001018  0100               	movlb	0	; () banked
  5678  00101A  2BAA               	incf	RADIO_Transmit@i& (0+255),f,b
  5679  00101C                     l503:
  5680                           
  5681                           ; BSR set to: 0
  5682                           
  5683                           ; BSR set to: 0
  5684  00101C  519C               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
  5685  00101E  5DAA               	subwf	RADIO_Transmit@i& (0+255),w,b
  5686  001020  A0D8               	btfss	status,0,c
  5687  001022  D7EF               	goto	l504
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;radio_driver_SX1276.c: 848: }
  5691                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
  5692                           
  5693                           ; BSR set to: 0
  5694  001024  EC3D  F01C         	call	_HALSPICSDeassert	;wreg free
  5695                           
  5696                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
  5697  001028  0101               	movlb	1	; () banked
  5698  00102A  8189               	bsf	(_RadioConfiguration+35)& (0+255),0,b
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
  5702  00102C  0EE7               	movlw	231
  5703  00102E  1789               	andwf	(_RadioConfiguration+35)& (0+255),f,b
  5704                           
  5705                           ; BSR set to: 1
  5706                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
  5707  001030  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5708  001034  0E00               	movlw	0
  5709  001036  0100               	movlb	0	; () banked
  5710  001038  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5711  00103A  0E03               	movlw	3
  5712  00103C  EC42  F010         	call	_RADIO_WriteMode
  5713                           
  5714                           ; BSR set to: 0
  5715                           
  5716                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
  5717  001040  0E00               	movlw	0
  5718  001042  0100               	movlb	0	; () banked
  5719  001044  6FA1               	movwf	_RADIO_Transmit$771& (0+255),b
  5720  001046  0E00               	movlw	0
  5721  001048  6FA2               	movwf	(_RADIO_Transmit$771+1)& (0+255),b
  5722  00104A  0E0A               	movlw	10
  5723  00104C  6FA3               	movwf	(_RADIO_Transmit$771+2)& (0+255),b
  5724  00104E  0E00               	movlw	0
  5725  001050  6FA4               	movwf	(_RADIO_Transmit$771+3)& (0+255),b
  5726                           
  5727                           ; BSR set to: 0
  5728                           
  5729                           ; BSR set to: 0
  5730  001052  C0A1  F060         	movff	_RADIO_Transmit$771,SwTimerSetTimeout@timeout
  5731  001056  C0A2  F061         	movff	_RADIO_Transmit$771+1,SwTimerSetTimeout@timeout+1
  5732  00105A  C0A3  F062         	movff	_RADIO_Transmit$771+2,SwTimerSetTimeout@timeout+2
  5733  00105E  C0A4  F063         	movff	_RADIO_Transmit$771+3,SwTimerSetTimeout@timeout+3
  5734  001062  0101               	movlb	1	; () banked
  5735  001064  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5736  001066  EC71  F019         	call	_SwTimerSetTimeout
  5737                           
  5738                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
  5739  00106A  0101               	movlb	1	; () banked
  5740  00106C  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
  5741  00106E  ECF2  F013         	call	_SwTimerStart
  5742                           
  5743                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
  5744  001072  0101               	movlb	1	; () banked
  5745  001074  5190               	movf	(_RadioConfiguration+42)& (0+255),w,b
  5746  001076  1191               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
  5747  001078  1192               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
  5748  00107A  1193               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
  5749  00107C  B4D8               	btfsc	status,2,c
  5750  00107E  D061               	goto	l510
  5751                           
  5752                           ; BSR set to: 1
  5753                           ;radio_driver_SX1276.c: 866: {
  5754                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
  5755  001080  5193               	movf	(_RadioConfiguration+45)& (0+255),w,b
  5756  001082  E107               	bnz	u11370
  5757  001084  2990               	incf	(_RadioConfiguration+42)& (0+255),w,b
  5758  001086  0EFF               	movlw	255
  5759  001088  5991               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
  5760  00108A  0E0F               	movlw	15
  5761  00108C  5992               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
  5762  00108E  A0D8               	btfss	status,0,c
  5763  001090  D01D               	goto	l512
  5764  001092                     u11370:
  5765                           
  5766                           ; BSR set to: 1
  5767  001092  C190  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
  5768  001096  C191  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
  5769  00109A  C192  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
  5770  00109E  C193  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
  5771  0010A2  0E7D               	movlw	125
  5772  0010A4  0100               	movlb	0	; () banked
  5773  0010A6  6F64               	movwf	___lldiv@divisor& (0+255),b
  5774  0010A8  0E00               	movlw	0
  5775  0010AA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5776  0010AC  0E00               	movlw	0
  5777  0010AE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5778  0010B0  0E00               	movlw	0
  5779  0010B2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5780  0010B4  ECE6  F015         	call	___lldiv	;wreg free
  5781  0010B8  0E0C               	movlw	12
  5782  0010BA                     u11385:
  5783  0010BA  90D8               	bcf	status,0,c
  5784  0010BC  0100               	movlb	0	; () banked
  5785  0010BE  3760               	rlcf	?___lldiv& (0+255),f,b
  5786  0010C0  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
  5787  0010C2  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
  5788  0010C4  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
  5789  0010C6  2EE8               	decfsz	wreg,f,c
  5790  0010C8  D7F8               	goto	u11385
  5791  0010CA  D023               	goto	L1
  5792  0010CC                     l512:
  5793                           
  5794                           ; BSR set to: 0
  5795  0010CC  C190  F09D         	movff	_RadioConfiguration+42,??_RADIO_Transmit
  5796  0010D0  C191  F09E         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
  5797  0010D4  C192  F09F         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
  5798  0010D8  C193  F0A0         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
  5799  0010DC  0E0C               	movlw	12
  5800  0010DE                     u11395:
  5801  0010DE  90D8               	bcf	status,0,c
  5802  0010E0  0100               	movlb	0	; () banked
  5803  0010E2  379D               	rlcf	??_RADIO_Transmit& (0+255),f,b
  5804  0010E4  379E               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
  5805  0010E6  379F               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
  5806  0010E8  37A0               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
  5807  0010EA  2EE8               	decfsz	wreg,f,c
  5808  0010EC  D7F8               	goto	u11395
  5809  0010EE  C09D  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
  5810  0010F2  C09E  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
  5811  0010F6  C09F  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
  5812  0010FA  C0A0  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
  5813  0010FE  0E7D               	movlw	125
  5814  001100  6F64               	movwf	___lldiv@divisor& (0+255),b
  5815  001102  0E00               	movlw	0
  5816  001104  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5817  001106  0E00               	movlw	0
  5818  001108  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5819  00110A  0E00               	movlw	0
  5820  00110C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5821  00110E  ECE6  F015         	call	___lldiv	;wreg free
  5822  001112                     L1:
  5823  001112  C060  F0A5         	movff	?___lldiv,_RADIO_Transmit$773
  5824  001116  C061  F0A6         	movff	?___lldiv+1,_RADIO_Transmit$773+1
  5825  00111A  C062  F0A7         	movff	?___lldiv+2,_RADIO_Transmit$773+2
  5826  00111E  C063  F0A8         	movff	?___lldiv+3,_RADIO_Transmit$773+3
  5827  001122  C0A5  F060         	movff	_RADIO_Transmit$773,SwTimerSetTimeout@timeout
  5828  001126  C0A6  F061         	movff	_RADIO_Transmit$773+1,SwTimerSetTimeout@timeout+1
  5829  00112A  C0A7  F062         	movff	_RADIO_Transmit$773+2,SwTimerSetTimeout@timeout+2
  5830  00112E  C0A8  F063         	movff	_RADIO_Transmit$773+3,SwTimerSetTimeout@timeout+3
  5831  001132  0101               	movlb	1	; () banked
  5832  001134  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
  5833  001136  EC71  F019         	call	_SwTimerSetTimeout
  5834                           
  5835                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
  5836  00113A  0101               	movlb	1	; () banked
  5837  00113C  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
  5838  00113E  ECF2  F013         	call	_SwTimerStart
  5839  001142                     l510:
  5840                           
  5841                           ;radio_driver_SX1276.c: 869: }
  5842                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
  5843  001142  0E00               	movlw	0
  5844  001144  0100               	movlb	0	; () banked
  5845  001146  6F9B               	movwf	(?_RADIO_Transmit+1)& (0+255),b
  5846  001148  0E00               	movlw	0
  5847  00114A  6F9A               	movwf	?_RADIO_Transmit& (0+255),b
  5848  00114C  0012               	return	
  5849  00114E                     __end_of_RADIO_Transmit:
  5850                           	opt stack 0
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           intcon	equ	0xFF2
  5858                           intcon2	equ	0xFF1
  5859                           intcon3	equ	0xFF0
  5860                           postinc0	equ	0xFEE
  5861                           wreg	equ	0xFE8
  5862                           indf2	equ	0xFDF
  5863                           postinc2	equ	0xFDE
  5864                           postdec2	equ	0xFDD
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _RADIO_WriteConfiguration *****************
  5870 ;; Defined at:
  5871 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  symbolTimeou    2   25[BANK0 ] unsigned int 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  tempValue       4   31[BANK0 ] unsigned long 
  5876 ;;  regValue        1   35[BANK0 ] unsigned char 
  5877 ;;  i               1   30[BANK0 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:       11 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:   11
  5894 ;; This function calls:
  5895 ;;		_RADIO_RegisterRead
  5896 ;;		_RADIO_RegisterWrite
  5897 ;;		_RADIO_WriteFSKBitRate
  5898 ;;		_RADIO_WriteFSKFrequencyDeviation
  5899 ;;		_RADIO_WriteFrequency
  5900 ;;		_RADIO_WriteMode
  5901 ;;		_RADIO_WritePower
  5902 ;;		___lmul
  5903 ;; This function is called by:
  5904 ;;		_RADIO_Transmit
  5905 ;;		_RADIO_TransmitCW
  5906 ;;		_RADIO_ReceiveStart
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text40
  5911  000086                     __ptext40:
  5912                           	opt stack 0
  5913  000086                     _RADIO_WriteConfiguration:
  5914                           	opt stack 17
  5915                           
  5916                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
  5917                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
  5918                           ;radio_driver_SX1276.c: 537: uint8_t i;
  5919                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;incstack = 0
  5923  000086  C17E  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5924  00008A  0E00               	movlw	0
  5925  00008C  0100               	movlb	0	; () banked
  5926  00008E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  5927  000090  0E00               	movlw	0
  5928  000092  EC42  F010         	call	_RADIO_WriteMode
  5929                           
  5930                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
  5931  000096  C166  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
  5932  00009A  C167  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
  5933  00009E  C168  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
  5934  0000A2  C169  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
  5935  0000A6  ECB6  F011         	call	_RADIO_WriteFrequency	;wreg free
  5936                           
  5937                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
  5938  0000AA  0101               	movlb	1	; () banked
  5939  0000AC  5181               	movf	(_RadioConfiguration+27)& (0+255),w,b
  5940  0000AE  EC3E  F011         	call	_RADIO_WritePower
  5941                           
  5942                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
  5943  0000B2  0101               	movlb	1	; () banked
  5944  0000B4  057E               	decf	(_RadioConfiguration+24)& (0+255),w,b
  5945  0000B6  A4D8               	btfss	status,2,c
  5946  0000B8  D1ED               	goto	l452
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;radio_driver_SX1276.c: 545: {
  5950                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
  5951  0000BA  C174  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
  5952  0000BE  0E39               	movlw	57
  5953  0000C0  ECE6  F01A         	call	_RADIO_RegisterWrite
  5954                           
  5955                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
  5956                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
  5957                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
  5958                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
  5959  0000C4  C188  F07B         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
  5960  0000C8  0E01               	movlw	1
  5961  0000CA  0100               	movlb	0	; () banked
  5962  0000CC  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  5963  0000CE  0101               	movlb	1	; () banked
  5964  0000D0  90D8               	bcf	status,0,c
  5965  0000D2  3587               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
  5966  0000D4  0100               	movlb	0	; () banked
  5967  0000D6  6F7C               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  5968  0000D8  0101               	movlb	1	; () banked
  5969  0000DA  3980               	swapf	(_RadioConfiguration+26)& (0+255),w,b
  5970  0000DC  0BF0               	andlw	240
  5971  0000DE  0100               	movlb	0	; () banked
  5972  0000E0  117C               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
  5973  0000E2  117B               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
  5974  0000E4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  5975  0000E6  0E1D               	movlw	29
  5976  0000E8  ECE6  F01A         	call	_RADIO_RegisterWrite
  5977                           
  5978                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
  5979                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
  5980                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
  5981                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
  5982  0000EC  C079  F07B         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
  5983  0000F0  C07A  F07C         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
  5984  0000F4  C07C  F07B         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
  5985  0000F8  0100               	movlb	0	; () banked
  5986  0000FA  6B7C               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  5987  0000FC  0E03               	movlw	3
  5988  0000FE  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  5989  000100  C182  F07D         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
  5990  000104  0E01               	movlw	1
  5991  000106  177D               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5992  000108  90D8               	bcf	status,0,c
  5993  00010A  377D               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5994  00010C  90D8               	bcf	status,0,c
  5995  00010E  377D               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
  5996  000110  0101               	movlb	1	; () banked
  5997  000112  397F               	swapf	(_RadioConfiguration+25)& (0+255),w,b
  5998  000114  0BF0               	andlw	240
  5999  000116  0100               	movlb	0	; () banked
  6000  000118  117D               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
  6001  00011A  117B               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
  6002  00011C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6003  00011E  0E1E               	movlw	30
  6004  000120  ECE6  F01A         	call	_RADIO_RegisterWrite
  6005                           
  6006                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
  6007  000124  0101               	movlb	1	; () banked
  6008  000126  5184               	movf	(_RadioConfiguration+30)& (0+255),w,b
  6009  000128  1185               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  6010  00012A  B4D8               	btfsc	status,2,c
  6011  00012C  D06F               	goto	l453
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;radio_driver_SX1276.c: 561: {
  6015                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
  6016  00012E  C184  F07F         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
  6017  000132  C185  F080         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
  6018  000136  0100               	movlb	0	; () banked
  6019  000138  6B81               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6020  00013A  6B82               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6021                           
  6022                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
  6023  00013C  D04E               	goto	l454
  6024  00013E                     
  6025                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
  6026                           
  6027                           ; BSR set to: 0
  6028  00013E  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6029  000142  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6030  000146  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6031  00014A  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6032  00014E  0E7D               	movlw	125
  6033  000150  0100               	movlb	0	; () banked
  6034  000152  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6035  000154  0E00               	movlw	0
  6036  000156  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6037  000158  0E00               	movlw	0
  6038  00015A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6039  00015C  0E00               	movlw	0
  6040  00015E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6041  000160  ECEC  F017         	call	___lmul	;wreg free
  6042  000164  D027               	goto	L3
  6043  000166                     
  6044                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
  6045  000166  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6046  00016A  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6047  00016E  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6048  000172  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6049  000176  0EFA               	movlw	250
  6050  000178  0100               	movlb	0	; () banked
  6051  00017A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6052  00017C  0E00               	movlw	0
  6053  00017E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6054  000180  0E00               	movlw	0
  6055  000182  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6056  000184  0E00               	movlw	0
  6057  000186  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6058  000188  ECEC  F017         	call	___lmul	;wreg free
  6059  00018C  D013               	goto	L3
  6060  00018E                     
  6061                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
  6062  00018E  C07F  F060         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
  6063  000192  C080  F061         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
  6064  000196  C081  F062         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
  6065  00019A  C082  F063         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
  6066  00019E  0EF4               	movlw	244
  6067  0001A0  0100               	movlb	0	; () banked
  6068  0001A2  6F64               	movwf	___lmul@multiplicand& (0+255),b
  6069  0001A4  0E01               	movlw	1
  6070  0001A6  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6071  0001A8  0E00               	movlw	0
  6072  0001AA  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6073  0001AC  0E00               	movlw	0
  6074  0001AE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6075  0001B0  ECEC  F017         	call	___lmul	;wreg free
  6076  0001B4                     L3:
  6077  0001B4  C060  F07F         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
  6078  0001B8  C061  F080         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
  6079  0001BC  C062  F081         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
  6080  0001C0  C063  F082         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
  6081                           
  6082                           ;radio_driver_SX1276.c: 574: break;
  6083  0001C4  D016               	goto	l456
  6084  0001C6                     
  6085                           ;radio_driver_SX1276.c: 577: tempValue = 0;
  6086  0001C6  0E00               	movlw	0
  6087  0001C8  0100               	movlb	0	; () banked
  6088  0001CA  6F7F               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
  6089  0001CC  0E00               	movlw	0
  6090  0001CE  6F80               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
  6091  0001D0  0E00               	movlw	0
  6092  0001D2  6F81               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6093  0001D4  0E00               	movlw	0
  6094  0001D6  6F82               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;radio_driver_SX1276.c: 579: }
  6098                           
  6099                           ;radio_driver_SX1276.c: 578: break;
  6100  0001D8  D00C               	goto	l456
  6101  0001DA                     l454:
  6102                           
  6103                           ; BSR set to: 0
  6104                           
  6105                           ; BSR set to: 0
  6106  0001DA  0101               	movlb	1	; () banked
  6107  0001DC  5180               	movf	(_RadioConfiguration+26)& (0+255),w,b
  6108                           
  6109                           ; Switch size 1, requested type "space"
  6110                           ; Number of cases is 3, Range of values is 7 to 9
  6111                           ; switch strategies available:
  6112                           ; Name         Instructions Cycles
  6113                           ; simple_byte           10     6 (average)
  6114                           ;	Chosen strategy is simple_byte
  6115  0001DE  0A07               	xorlw	7	; case 7
  6116  0001E0  B4D8               	btfsc	status,2,c
  6117  0001E2  D7AD               	goto	l455
  6118  0001E4  0A0F               	xorlw	15	; case 8
  6119  0001E6  B4D8               	btfsc	status,2,c
  6120  0001E8  D7BE               	goto	l457
  6121  0001EA  0A01               	xorlw	1	; case 9
  6122  0001EC  B4D8               	btfsc	status,2,c
  6123  0001EE  D7CF               	goto	l458
  6124  0001F0  D7EA               	goto	l459
  6125  0001F2                     l456:
  6126                           
  6127                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
  6128                           
  6129                           ; BSR set to: 1
  6130  0001F2  0101               	movlb	1	; () banked
  6131  0001F4  297F               	incf	(_RadioConfiguration+25)& (0+255),w,b
  6132  0001F6  0100               	movlb	0	; () banked
  6133  0001F8  6F7B               	movwf	??_RADIO_WriteConfiguration& (0+255),b
  6134  0001FA  D005               	goto	u9490
  6135  0001FC                     u9495:
  6136  0001FC  90D8               	bcf	status,0,c
  6137  0001FE  3382               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
  6138  000200  3381               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
  6139  000202  3380               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
  6140  000204  337F               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
  6141  000206                     u9490:
  6142  000206  2F7B               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
  6143  000208  D7F9               	goto	u9495
  6144                           
  6145                           ;radio_driver_SX1276.c: 582: }
  6146  00020A  D009               	goto	l460
  6147  00020C                     l453:
  6148                           
  6149                           ;radio_driver_SX1276.c: 583: else
  6150                           ;radio_driver_SX1276.c: 584: {
  6151                           ;radio_driver_SX1276.c: 585: tempValue = 0;
  6152  00020C  0E00               	movlw	0
  6153  00020E  0100               	movlb	0	; () banked
  6154  000210  6F7F               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
  6155  000212  0E00               	movlw	0
  6156  000214  6F80               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
  6157  000216  0E00               	movlw	0
  6158  000218  6F81               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
  6159  00021A  0E00               	movlw	0
  6160  00021C  6F82               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
  6161  00021E                     l460:
  6162                           
  6163                           ;radio_driver_SX1276.c: 586: }
  6164                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
  6165                           
  6166                           ; BSR set to: 0
  6167  00021E  C07F  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
  6168  000222  0E24               	movlw	36
  6169  000224  ECE6  F01A         	call	_RADIO_RegisterWrite
  6170                           
  6171                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
  6172  000228  C079  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
  6173  00022C  0E1F               	movlw	31
  6174  00022E  ECE6  F01A         	call	_RADIO_RegisterWrite
  6175                           
  6176                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
  6177  000232  0E26               	movlw	38
  6178  000234  EC8B  F01A         	call	_RADIO_RegisterRead
  6179  000238  0100               	movlb	0	; () banked
  6180  00023A  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;radio_driver_SX1276.c: 596: if (
  6184                           ;radio_driver_SX1276.c: 597: (
  6185                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
  6186                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
  6187                           ;radio_driver_SX1276.c: 600: ) ||
  6188                           ;radio_driver_SX1276.c: 601: (
  6189                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
  6190                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
  6191                           ;radio_driver_SX1276.c: 604: )
  6192                           ;radio_driver_SX1276.c: 605: )
  6193  00023C  0E0C               	movlw	12
  6194  00023E  0101               	movlb	1	; () banked
  6195  000240  197F               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
  6196  000242  A4D8               	btfss	status,2,c
  6197  000244  D008               	goto	u9520
  6198                           
  6199                           ; BSR set to: 1
  6200  000246  0E07               	movlw	7
  6201  000248  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6202  00024A  B4D8               	btfsc	status,2,c
  6203  00024C  D00C               	goto	u9540
  6204                           
  6205                           ; BSR set to: 1
  6206  00024E  0E08               	movlw	8
  6207  000250  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6208  000252  B4D8               	btfsc	status,2,c
  6209  000254  D008               	goto	u9540
  6210  000256                     u9520:
  6211                           
  6212                           ; BSR set to: 1
  6213                           
  6214                           ; BSR set to: 1
  6215  000256  0E0B               	movlw	11
  6216  000258  197F               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
  6217  00025A  A4D8               	btfss	status,2,c
  6218  00025C  D007               	goto	l461
  6219                           
  6220                           ; BSR set to: 1
  6221  00025E  0E07               	movlw	7
  6222  000260  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6223  000262  A4D8               	btfss	status,2,c
  6224  000264  D003               	goto	l461
  6225  000266                     u9540:
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;radio_driver_SX1276.c: 606: {
  6229                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
  6230                           
  6231                           ; BSR set to: 1
  6232  000266  0100               	movlb	0	; () banked
  6233  000268  8783               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
  6234                           
  6235                           ;radio_driver_SX1276.c: 608: }
  6236  00026A  D002               	goto	l466
  6237  00026C                     l461:
  6238                           
  6239                           ;radio_driver_SX1276.c: 609: else
  6240                           ;radio_driver_SX1276.c: 610: {
  6241                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
  6242                           
  6243                           ; BSR set to: 0
  6244  00026C  0100               	movlb	0	; () banked
  6245  00026E  9783               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
  6246  000270                     l466:
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;radio_driver_SX1276.c: 612: }
  6250                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
  6251  000270  8583               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
  6255  000272  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6256  000276  0E26               	movlw	38
  6257  000278  ECE6  F01A         	call	_RADIO_RegisterWrite
  6258                           
  6259                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
  6260  00027C  0E31               	movlw	49
  6261  00027E  EC8B  F01A         	call	_RADIO_RegisterRead
  6262  000282  0100               	movlb	0	; () banked
  6263  000284  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
  6267  000286  0EF8               	movlw	248
  6268  000288  1783               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
  6272  00028A  0E03               	movlw	3
  6273  00028C  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
  6277  00028E  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6278  000292  0E31               	movlw	49
  6279  000294  ECE6  F01A         	call	_RADIO_RegisterWrite
  6280                           
  6281                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
  6282  000298  0E0A               	movlw	10
  6283  00029A  0100               	movlb	0	; () banked
  6284  00029C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6285  00029E  0E37               	movlw	55
  6286  0002A0  ECE6  F01A         	call	_RADIO_RegisterWrite
  6287                           
  6288                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
  6289  0002A4  0E12               	movlw	18
  6290  0002A6  0101               	movlb	1	; () banked
  6291  0002A8  1997               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
  6292  0002AA  A4D8               	btfss	status,2,c
  6293  0002AC  D02F               	goto	l471
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;radio_driver_SX1276.c: 626: {
  6297                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
  6298                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
  6299  0002AE  0E07               	movlw	7
  6300  0002B0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6301  0002B2  B4D8               	btfsc	status,2,c
  6302  0002B4  D004               	goto	u9570
  6303                           
  6304                           ; BSR set to: 1
  6305  0002B6  0E08               	movlw	8
  6306  0002B8  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6307  0002BA  A4D8               	btfss	status,2,c
  6308  0002BC  D017               	goto	l468
  6309  0002BE                     u9570:
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;radio_driver_SX1276.c: 631: {
  6313                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
  6314                           
  6315                           ; BSR set to: 1
  6316  0002BE  0E31               	movlw	49
  6317  0002C0  EC8B  F01A         	call	_RADIO_RegisterRead
  6318  0002C4  0100               	movlb	0	; () banked
  6319  0002C6  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
  6323  0002C8  9F83               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
  6327  0002CA  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6328  0002CE  0E31               	movlw	49
  6329  0002D0  ECE6  F01A         	call	_RADIO_RegisterWrite
  6330                           
  6331                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
  6332  0002D4  0E40               	movlw	64
  6333  0002D6  0100               	movlb	0	; () banked
  6334  0002D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6335  0002DA  0E2F               	movlw	47
  6336  0002DC  ECE6  F01A         	call	_RADIO_RegisterWrite
  6337                           
  6338                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
  6339  0002E0  0E00               	movlw	0
  6340  0002E2  0100               	movlb	0	; () banked
  6341  0002E4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6342  0002E6  0E30               	movlw	48
  6343  0002E8  ECE6  F01A         	call	_RADIO_RegisterWrite
  6344  0002EC                     l468:
  6345                           
  6346                           ;radio_driver_SX1276.c: 637: }
  6347                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
  6348  0002EC  0E09               	movlw	9
  6349  0002EE  0101               	movlb	1	; () banked
  6350  0002F0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6351  0002F2  A4D8               	btfss	status,2,c
  6352  0002F4  D00B               	goto	l471
  6353                           
  6354                           ; BSR set to: 1
  6355                           ;radio_driver_SX1276.c: 640: {
  6356                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
  6357  0002F6  0E31               	movlw	49
  6358  0002F8  EC8B  F01A         	call	_RADIO_RegisterRead
  6359  0002FC  0100               	movlb	0	; () banked
  6360  0002FE  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
  6364  000300  8F83               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
  6368  000302  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6369  000306  0E31               	movlw	49
  6370  000308  ECE6  F01A         	call	_RADIO_RegisterWrite
  6371  00030C                     l471:
  6372                           
  6373                           ;radio_driver_SX1276.c: 644: }
  6374                           ;radio_driver_SX1276.c: 645: }
  6375                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
  6376  00030C  0E33               	movlw	51
  6377  00030E  EC8B  F01A         	call	_RADIO_RegisterRead
  6378  000312  0100               	movlb	0	; () banked
  6379  000314  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
  6383  000316  9D83               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
  6387  000318  8183               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
  6391  00031A  C186  F07B         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
  6392  00031E  0E01               	movlw	1
  6393  000320  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  6394  000322  0E06               	movlw	6
  6395  000324  6F7C               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
  6396  000326                     u9595:
  6397  000326  90D8               	bcf	status,0,c
  6398  000328  377B               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
  6399  00032A  2F7C               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
  6400  00032C  D7FC               	goto	u9595
  6401  00032E  517B               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
  6402  000330  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
  6406  000332  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6407  000336  0E33               	movlw	51
  6408  000338  ECE6  F01A         	call	_RADIO_RegisterWrite
  6409                           
  6410                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
  6411  00033C  C186  F07B         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
  6412  000340  0E01               	movlw	1
  6413  000342  0100               	movlb	0	; () banked
  6414  000344  177B               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
  6415  000346  90D8               	bcf	status,0,c
  6416  000348  377B               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
  6417  00034A  90D8               	bcf	status,0,c
  6418  00034C  357B               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
  6419  00034E  0AFF               	xorlw	255
  6420  000350  0B1D               	andlw	29
  6421  000352  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
  6425  000354  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6426  000358  0E3B               	movlw	59
  6427  00035A  ECE6  F01A         	call	_RADIO_RegisterWrite
  6428                           
  6429                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
  6430  00035E  0101               	movlb	1	; () banked
  6431  000360  5173               	movf	(_RadioConfiguration+13)& (0+255),w,b
  6432  000362  0100               	movlb	0	; () banked
  6433  000364  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6434  000366  0E20               	movlw	32
  6435  000368  ECE6  F01A         	call	_RADIO_RegisterWrite
  6436                           
  6437                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
  6438  00036C  C172  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
  6439  000370  0E21               	movlw	33
  6440  000372  ECE6  F01A         	call	_RADIO_RegisterWrite
  6441                           
  6442                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
  6443  000376  0E00               	movlw	0
  6444  000378  0100               	movlb	0	; () banked
  6445  00037A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6446  00037C  0E0D               	movlw	13
  6447  00037E  ECE6  F01A         	call	_RADIO_RegisterWrite
  6448                           
  6449                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
  6450  000382  0E00               	movlw	0
  6451  000384  0100               	movlb	0	; () banked
  6452  000386  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6453  000388  0E0E               	movlw	14
  6454  00038A  ECE6  F01A         	call	_RADIO_RegisterWrite
  6455                           
  6456                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
  6457  00038E  0E00               	movlw	0
  6458  000390  0100               	movlb	0	; () banked
  6459  000392  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6460  000394  0E0F               	movlw	15
  6461  000396  ECE6  F01A         	call	_RADIO_RegisterWrite
  6462                           
  6463                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
  6464  00039A  0E12               	movlw	18
  6465  00039C  0101               	movlb	1	; () banked
  6466  00039E  1997               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
  6467  0003A0  A4D8               	btfss	status,2,c
  6468  0003A2  D071               	goto	l478
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;radio_driver_SX1276.c: 665: {
  6472                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
  6473                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
  6474                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
  6475                           ;radio_driver_SX1276.c: 669: )
  6476  0003A4  0E09               	movlw	9
  6477  0003A6  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6478  0003A8  A4D8               	btfss	status,2,c
  6479  0003AA  D020               	goto	l473
  6480                           
  6481                           ; BSR set to: 1
  6482  0003AC  0E80               	movlw	128
  6483  0003AE  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6484  0003B0  0E13               	movlw	19
  6485  0003B2  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6486  0003B4  0E61               	movlw	97
  6487  0003B6  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6488  0003B8  0E33               	movlw	51
  6489  0003BA  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6490  0003BC  A0D8               	btfss	status,0,c
  6491  0003BE  D016               	goto	l473
  6492                           
  6493                           ; BSR set to: 1
  6494  0003C0  0566               	decf	_RadioConfiguration& (0+255),w,b
  6495  0003C2  0EF7               	movlw	247
  6496  0003C4  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6497  0003C6  0ECB               	movlw	203
  6498  0003C8  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6499  0003CA  0E3C               	movlw	60
  6500  0003CC  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6501  0003CE  B0D8               	btfsc	status,0,c
  6502  0003D0  D00D               	goto	l473
  6503                           
  6504                           ; BSR set to: 1
  6505                           ;radio_driver_SX1276.c: 670: {
  6506                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
  6507  0003D2  0E02               	movlw	2
  6508  0003D4  0100               	movlb	0	; () banked
  6509  0003D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6510  0003D8  0E36               	movlw	54
  6511  0003DA  ECE6  F01A         	call	_RADIO_RegisterWrite
  6512                           
  6513                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
  6514  0003DE  0E64               	movlw	100
  6515  0003E0  0100               	movlb	0	; () banked
  6516  0003E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6517  0003E4  0E3A               	movlw	58
  6518  0003E6  ECE6  F01A         	call	_RADIO_RegisterWrite
  6519                           
  6520                           ;radio_driver_SX1276.c: 673: }
  6521  0003EA  D02C               	goto	l476
  6522  0003EC                     l473:
  6523                           
  6524                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
  6525                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
  6526                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
  6527                           ;radio_driver_SX1276.c: 677: )
  6528  0003EC  0E09               	movlw	9
  6529  0003EE  0101               	movlb	1	; () banked
  6530  0003F0  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6531  0003F2  A4D8               	btfss	status,2,c
  6532  0003F4  D021               	goto	l475
  6533                           
  6534                           ; BSR set to: 1
  6535  0003F6  0E80               	movlw	128
  6536  0003F8  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6537  0003FA  0E1A               	movlw	26
  6538  0003FC  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6539  0003FE  0E70               	movlw	112
  6540  000400  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6541  000402  0E18               	movlw	24
  6542  000404  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6543  000406  A0D8               	btfss	status,0,c
  6544  000408  D017               	goto	l475
  6545                           
  6546                           ; BSR set to: 1
  6547  00040A  0E41               	movlw	65
  6548  00040C  5D66               	subwf	_RadioConfiguration& (0+255),w,b
  6549  00040E  0EDD               	movlw	221
  6550  000410  5967               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
  6551  000412  0E4A               	movlw	74
  6552  000414  5968               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
  6553  000416  0E1F               	movlw	31
  6554  000418  5969               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
  6555  00041A  B0D8               	btfsc	status,0,c
  6556  00041C  D00D               	goto	l475
  6557                           
  6558                           ; BSR set to: 1
  6559                           ;radio_driver_SX1276.c: 678: {
  6560                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
  6561  00041E  0E02               	movlw	2
  6562  000420  0100               	movlb	0	; () banked
  6563  000422  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6564  000424  0E36               	movlw	54
  6565  000426  ECE6  F01A         	call	_RADIO_RegisterWrite
  6566                           
  6567                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
  6568  00042A  0E7F               	movlw	127
  6569  00042C  0100               	movlb	0	; () banked
  6570  00042E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6571  000430  0E3A               	movlw	58
  6572  000432  ECE6  F01A         	call	_RADIO_RegisterWrite
  6573                           
  6574                           ;radio_driver_SX1276.c: 681: }
  6575  000436  D006               	goto	l476
  6576  000438                     l475:
  6577                           
  6578                           ;radio_driver_SX1276.c: 682: else
  6579                           ;radio_driver_SX1276.c: 683: {
  6580                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
  6581  000438  0E03               	movlw	3
  6582  00043A  0100               	movlb	0	; () banked
  6583  00043C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6584  00043E  0E36               	movlw	54
  6585  000440  ECE6  F01A         	call	_RADIO_RegisterWrite
  6586  000444                     l476:
  6587                           
  6588                           ;radio_driver_SX1276.c: 685: }
  6589                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
  6590  000444  0E09               	movlw	9
  6591  000446  0101               	movlb	1	; () banked
  6592  000448  1980               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
  6593  00044A  A4D8               	btfss	status,2,c
  6594  00044C  D010               	goto	l477
  6595                           
  6596                           ; BSR set to: 1
  6597  00044E  0586               	decf	(_RadioConfiguration+32)& (0+255),w,b
  6598  000450  A4D8               	btfss	status,2,c
  6599  000452  D00D               	goto	l477
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;radio_driver_SX1276.c: 689: {
  6603                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
  6604  000454  0E65               	movlw	101
  6605  000456  0100               	movlb	0	; () banked
  6606  000458  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6607  00045A  0E3A               	movlw	58
  6608  00045C  ECE6  F01A         	call	_RADIO_RegisterWrite
  6609                           
  6610                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
  6611  000460  0E19               	movlw	25
  6612  000462  0100               	movlb	0	; () banked
  6613  000464  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6614  000466  0E3B               	movlw	59
  6615  000468  ECE6  F01A         	call	_RADIO_RegisterWrite
  6616                           
  6617                           ;radio_driver_SX1276.c: 692: }
  6618  00046C  D00C               	goto	l478
  6619  00046E                     l477:
  6620                           
  6621                           ;radio_driver_SX1276.c: 693: else
  6622                           ;radio_driver_SX1276.c: 694: {
  6623                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
  6624  00046E  0E65               	movlw	101
  6625  000470  0100               	movlb	0	; () banked
  6626  000472  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6627  000474  0E3A               	movlw	58
  6628  000476  ECE6  F01A         	call	_RADIO_RegisterWrite
  6629                           
  6630                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
  6631  00047A  0E1D               	movlw	29
  6632  00047C  0100               	movlb	0	; () banked
  6633  00047E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6634  000480  0E3B               	movlw	59
  6635  000482  ECE6  F01A         	call	_RADIO_RegisterWrite
  6636  000486                     l478:
  6637                           
  6638                           ;radio_driver_SX1276.c: 697: }
  6639                           ;radio_driver_SX1276.c: 698: }
  6640                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
  6641  000486  0EFF               	movlw	255
  6642  000488  0100               	movlb	0	; () banked
  6643  00048A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6644  00048C  0E12               	movlw	18
  6645  00048E  ECE6  F01A         	call	_RADIO_RegisterWrite
  6646                           
  6647                           ;radio_driver_SX1276.c: 702: }
  6648  000492  0012               	return	
  6649  000494                     l452:
  6650                           
  6651                           ;radio_driver_SX1276.c: 703: else
  6652                           ;radio_driver_SX1276.c: 704: {
  6653                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
  6654  000494  C16A  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
  6655  000498  C16B  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
  6656  00049C  C16C  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
  6657  0004A0  C16D  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
  6658  0004A4  EC5E  F016         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
  6659                           
  6660                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
  6661  0004A8  C16E  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
  6662  0004AC  C16F  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
  6663  0004B0  C170  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
  6664  0004B4  C171  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
  6665  0004B8  EC93  F016         	call	_RADIO_WriteFSKBitRate	;wreg free
  6666                           
  6667                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
  6668  0004BC  0101               	movlb	1	; () banked
  6669  0004BE  5173               	movf	(_RadioConfiguration+13)& (0+255),w,b
  6670  0004C0  0100               	movlb	0	; () banked
  6671  0004C2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6672  0004C4  0E25               	movlw	37
  6673  0004C6  ECE6  F01A         	call	_RADIO_RegisterWrite
  6674                           
  6675                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
  6676  0004CA  C172  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
  6677  0004CE  0E26               	movlw	38
  6678  0004D0  ECE6  F01A         	call	_RADIO_RegisterWrite
  6679                           
  6680                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
  6681  0004D4  0E0A               	movlw	10
  6682  0004D6  EC8B  F01A         	call	_RADIO_RegisterRead
  6683  0004DA  0100               	movlb	0	; () banked
  6684  0004DC  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
  6688  0004DE  0E9F               	movlw	159
  6689  0004E0  1783               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
  6693  0004E2  0101               	movlb	1	; () banked
  6694  0004E4  3999               	swapf	(_RadioConfiguration+51)& (0+255),w,b
  6695  0004E6  46E8               	rlncf	wreg,f,c
  6696  0004E8  0BE0               	andlw	224
  6697  0004EA  0100               	movlb	0	; () banked
  6698  0004EC  1383               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
  6699                           
  6700                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
  6701  0004EE  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6702  0004F2  0E0A               	movlw	10
  6703  0004F4  ECE6  F01A         	call	_RADIO_RegisterWrite
  6704                           
  6705                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
  6706  0004F8  0EC8               	movlw	200
  6707  0004FA  0100               	movlb	0	; () banked
  6708  0004FC  6F83               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
  6712  0004FE  0101               	movlb	1	; () banked
  6713  000500  5182               	movf	(_RadioConfiguration+28)& (0+255),w,b
  6714  000502  B4D8               	btfsc	status,2,c
  6715  000504  D002               	goto	l480
  6716                           
  6717                           ; BSR set to: 1
  6718                           ;radio_driver_SX1276.c: 722: {
  6719                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
  6720  000506  0100               	movlb	0	; () banked
  6721  000508  8983               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
  6722  00050A                     l480:
  6723                           
  6724                           ;radio_driver_SX1276.c: 724: }
  6725                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
  6726                           
  6727                           ; BSR set to: 0
  6728  00050A  C083  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
  6729  00050E  0E30               	movlw	48
  6730  000510  ECE6  F01A         	call	_RADIO_RegisterWrite
  6731                           
  6732                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
  6733  000514  0E00               	movlw	0
  6734  000516  0100               	movlb	0	; () banked
  6735  000518  6F7E               	movwf	RADIO_WriteConfiguration@i& (0+255),b
  6736  00051A  D010               	goto	l481
  6737  00051C                     
  6738                           ; BSR set to: 0
  6739                           ;radio_driver_SX1276.c: 729: {
  6740                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
  6741                           
  6742                           ; BSR set to: 0
  6743  00051C  517E               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
  6744  00051E  0D01               	mullw	1
  6745  000520  0E75               	movlw	low (_RadioConfiguration+15)
  6746  000522  24F3               	addwf	prodl,w,c
  6747  000524  6ED9               	movwf	fsr2l,c
  6748  000526  0E01               	movlw	high (_RadioConfiguration+15)
  6749  000528  20F4               	addwfc	prodh,w,c
  6750  00052A  6EDA               	movwf	fsr2h,c
  6751  00052C  50DF               	movf	indf2,w,c
  6752  00052E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6753  000530  517E               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
  6754  000532  0F28               	addlw	40
  6755  000534  ECE6  F01A         	call	_RADIO_RegisterWrite
  6756  000538  0100               	movlb	0	; () banked
  6757  00053A  2B7E               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
  6758  00053C                     l481:
  6759                           
  6760                           ; BSR set to: 0
  6761                           
  6762                           ; BSR set to: 0
  6763  00053C  0101               	movlb	1	; () banked
  6764  00053E  517D               	movf	(_RadioConfiguration+23)& (0+255),w,b
  6765  000540  0100               	movlb	0	; () banked
  6766  000542  5D7E               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
  6767  000544  A0D8               	btfss	status,0,c
  6768  000546  D7EA               	goto	l482
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;radio_driver_SX1276.c: 733: }
  6772                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
  6773                           
  6774                           ; BSR set to: 0
  6775  000548  0101               	movlb	1	; () banked
  6776  00054A  517D               	movf	(_RadioConfiguration+23)& (0+255),w,b
  6777  00054C  B4D8               	btfsc	status,2,c
  6778  00054E  D008               	goto	l484
  6779                           
  6780                           ; BSR set to: 1
  6781                           ;radio_driver_SX1276.c: 737: {
  6782                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
  6783  000550  057D               	decf	(_RadioConfiguration+23)& (0+255),w,b
  6784  000552  0910               	iorlw	16
  6785  000554  0100               	movlb	0	; () banked
  6786  000556  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6787  000558  0E27               	movlw	39
  6788  00055A  ECE6  F01A         	call	_RADIO_RegisterWrite
  6789                           
  6790                           ;radio_driver_SX1276.c: 739: }
  6791  00055E  D006               	goto	l485
  6792  000560                     l484:
  6793                           
  6794                           ;radio_driver_SX1276.c: 740: else
  6795                           ;radio_driver_SX1276.c: 741: {
  6796                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
  6797  000560  0E00               	movlw	0
  6798  000562  0100               	movlb	0	; () banked
  6799  000564  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6800  000566  0E27               	movlw	39
  6801  000568  ECE6  F01A         	call	_RADIO_RegisterWrite
  6802  00056C                     l485:
  6803                           
  6804                           ;radio_driver_SX1276.c: 743: }
  6805                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
  6806  00056C  0EFF               	movlw	255
  6807  00056E  0100               	movlb	0	; () banked
  6808  000570  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6809  000572  0E3E               	movlw	62
  6810  000574  ECE6  F01A         	call	_RADIO_RegisterWrite
  6811                           
  6812                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
  6813  000578  0EFF               	movlw	255
  6814  00057A  0100               	movlb	0	; () banked
  6815  00057C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6816  00057E  0E3F               	movlw	63
  6817  000580  ECE6  F01A         	call	_RADIO_RegisterWrite
  6818  000584  0012               	return	
  6819  000586                     __end_of_RADIO_WriteConfiguration:
  6820                           	opt stack 0
  6821                           tblptru	equ	0xFF8
  6822                           tblptrh	equ	0xFF7
  6823                           tblptrl	equ	0xFF6
  6824                           tablat	equ	0xFF5
  6825                           prodh	equ	0xFF4
  6826                           prodl	equ	0xFF3
  6827                           intcon	equ	0xFF2
  6828                           intcon2	equ	0xFF1
  6829                           intcon3	equ	0xFF0
  6830                           postinc0	equ	0xFEE
  6831                           wreg	equ	0xFE8
  6832                           indf2	equ	0xFDF
  6833                           postinc2	equ	0xFDE
  6834                           postdec2	equ	0xFDD
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function _RADIO_WritePower *****************
  6840 ;; Defined at:
  6841 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  power           1    wreg     char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  power           1    6[BANK0 ] char 
  6846 ;;  paDac           1    5[BANK0 ] unsigned char 
  6847 ;;  ocp             1    4[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        3 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:   10
  6864 ;; This function calls:
  6865 ;;		_RADIO_RegisterRead
  6866 ;;		_RADIO_RegisterWrite
  6867 ;; This function is called by:
  6868 ;;		_RADIO_WriteConfiguration
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text41
  6873  00227C                     __ptext41:
  6874                           	opt stack 0
  6875  00227C                     _RADIO_WritePower:
  6876                           	opt stack 17
  6877                           
  6878                           ;incstack = 0
  6879                           ;RADIO_WritePower@power stored from wreg
  6880  00227C  0100               	movlb	0	; () banked
  6881  00227E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6882                           
  6883                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
  6884                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
  6885                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
  6886  002280  0101               	movlb	1	; () banked
  6887  002282  5183               	movf	(_RadioConfiguration+29)& (0+255),w,b
  6888  002284  A4D8               	btfss	status,2,c
  6889  002286  D030               	goto	l423
  6890                           
  6891                           ; BSR set to: 1
  6892                           ;radio_driver_SX1276.c: 348: {
  6893                           ;radio_driver_SX1276.c: 350: if (power < -3)
  6894  002288  0100               	movlb	0	; () banked
  6895  00228A  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6896  00228C  0A80               	xorlw	128
  6897  00228E  0F83               	addlw	131
  6898  002290  B0D8               	btfsc	status,0,c
  6899  002292  D002               	goto	l424
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;radio_driver_SX1276.c: 351: {
  6903                           ;radio_driver_SX1276.c: 352: power = -3;
  6904  002294  0EFD               	movlw	253
  6905  002296  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6906  002298                     l424:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;radio_driver_SX1276.c: 353: }
  6910                           ;radio_driver_SX1276.c: 354: if (power > 15)
  6911                           
  6912                           ; BSR set to: 0
  6913  002298  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6914  00229A  0A80               	xorlw	128
  6915  00229C  0F70               	addlw	-144
  6916  00229E  A0D8               	btfss	status,0,c
  6917  0022A0  D002               	goto	l425
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;radio_driver_SX1276.c: 355: {
  6921                           ;radio_driver_SX1276.c: 356: power = 15;
  6922  0022A2  0E0F               	movlw	15
  6923  0022A4  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  6924  0022A6                     l425:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;radio_driver_SX1276.c: 357: }
  6928                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
  6929                           
  6930                           ; BSR set to: 0
  6931  0022A6  0E4D               	movlw	77
  6932  0022A8  EC8B  F01A         	call	_RADIO_RegisterRead
  6933  0022AC  0100               	movlb	0	; () banked
  6934  0022AE  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
  6938  0022B0  0EF8               	movlw	248
  6939  0022B2  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
  6943  0022B4  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
  6947  0022B6  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
  6948  0022BA  0E4D               	movlw	77
  6949  0022BC  ECE6  F01A         	call	_RADIO_RegisterWrite
  6950                           
  6951                           ;radio_driver_SX1276.c: 364: if (power < 0)
  6952  0022C0  0100               	movlb	0	; () banked
  6953  0022C2  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
  6954  0022C4  D009               	goto	l426
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;radio_driver_SX1276.c: 365: {
  6958                           ;radio_driver_SX1276.c: 369: power += 3;
  6959  0022C6  0E03               	movlw	3
  6960  0022C8  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
  6964  0022CA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6965  0022CC  0920               	iorlw	32
  6966  0022CE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6967  0022D0  0E09               	movlw	9
  6968  0022D2  ECE6  F01A         	call	_RADIO_RegisterWrite
  6969                           
  6970                           ;radio_driver_SX1276.c: 371: }
  6971  0022D6  0012               	return	
  6972  0022D8                     l426:
  6973                           
  6974                           ;radio_driver_SX1276.c: 372: else
  6975                           ;radio_driver_SX1276.c: 373: {
  6976                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
  6977  0022D8  0100               	movlb	0	; () banked
  6978  0022DA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6979  0022DC  0970               	iorlw	112
  6980  0022DE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  6981  0022E0  0E09               	movlw	9
  6982  0022E2  ECE6  F01A         	call	_RADIO_RegisterWrite
  6983                           
  6984                           ;radio_driver_SX1276.c: 378: }
  6985                           ;radio_driver_SX1276.c: 379: }
  6986  0022E6  0012               	return	
  6987  0022E8                     l423:
  6988                           
  6989                           ;radio_driver_SX1276.c: 380: else
  6990                           ;radio_driver_SX1276.c: 381: {
  6991                           ;radio_driver_SX1276.c: 385: if (power < 2)
  6992  0022E8  0100               	movlb	0	; () banked
  6993  0022EA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  6994  0022EC  0A80               	xorlw	128
  6995  0022EE  0F7E               	addlw	-130
  6996  0022F0  B0D8               	btfsc	status,0,c
  6997  0022F2  D002               	goto	l429
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;radio_driver_SX1276.c: 386: {
  7001                           ;radio_driver_SX1276.c: 387: power = 2;
  7002  0022F4  0E02               	movlw	2
  7003  0022F6  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7004  0022F8                     l429:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;radio_driver_SX1276.c: 388: }
  7008                           ;radio_driver_SX1276.c: 391: if (power >= 20)
  7009                           
  7010                           ; BSR set to: 0
  7011  0022F8  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7012  0022FA  0A80               	xorlw	128
  7013  0022FC  0F6C               	addlw	-148
  7014  0022FE  A0D8               	btfss	status,0,c
  7015  002300  D002               	goto	l430
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;radio_driver_SX1276.c: 392: {
  7019                           ;radio_driver_SX1276.c: 393: power = 20;
  7020  002302  0E14               	movlw	20
  7021  002304  D006               	goto	L4
  7022  002306                     l430:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;radio_driver_SX1276.c: 395: else if (power > 17)
  7026                           
  7027                           ; BSR set to: 0
  7028  002306  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7029  002308  0A80               	xorlw	128
  7030  00230A  0F6E               	addlw	-146
  7031  00230C  A0D8               	btfss	status,0,c
  7032  00230E  D002               	goto	l432
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;radio_driver_SX1276.c: 396: {
  7036                           ;radio_driver_SX1276.c: 397: power = 17;
  7037  002310  0E11               	movlw	17
  7038  002312                     L4:
  7039  002312  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7040  002314                     l432:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;radio_driver_SX1276.c: 398: }
  7044                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
  7045                           
  7046                           ; BSR set to: 0
  7047                           
  7048                           ; BSR set to: 0
  7049  002314  0E0B               	movlw	11
  7050  002316  EC8B  F01A         	call	_RADIO_RegisterRead
  7051  00231A  0100               	movlb	0	; () banked
  7052  00231C  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
  7056  00231E  0E4D               	movlw	77
  7057  002320  EC8B  F01A         	call	_RADIO_RegisterRead
  7058  002324  0100               	movlb	0	; () banked
  7059  002326  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
  7063  002328  0EF8               	movlw	248
  7064  00232A  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;radio_driver_SX1276.c: 403: if (power == 20)
  7068  00232C  0E14               	movlw	20
  7069  00232E  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
  7070  002330  A4D8               	btfss	status,2,c
  7071  002332  D006               	goto	l433
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;radio_driver_SX1276.c: 404: {
  7075                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
  7076  002334  0E07               	movlw	7
  7077  002336  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;radio_driver_SX1276.c: 406: power = 15;
  7081  002338  0E0F               	movlw	15
  7082  00233A  6F66               	movwf	RADIO_WritePower@power& (0+255),b
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
  7086  00233C  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
  7087                           
  7088                           ;radio_driver_SX1276.c: 408: }
  7089  00233E  D004               	goto	l434
  7090  002340                     l433:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;radio_driver_SX1276.c: 409: else
  7094                           ;radio_driver_SX1276.c: 410: {
  7095                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
  7096                           
  7097                           ; BSR set to: 0
  7098  002340  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;radio_driver_SX1276.c: 412: power -= 2;
  7102  002342  0EFE               	movlw	254
  7103  002344  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
  7107  002346  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
  7108  002348                     l434:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;radio_driver_SX1276.c: 414: }
  7112                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
  7113                           
  7114                           ; BSR set to: 0
  7115  002348  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
  7116  00234C  0E4D               	movlw	77
  7117  00234E  ECE6  F01A         	call	_RADIO_RegisterWrite
  7118                           
  7119                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
  7120  002352  0100               	movlb	0	; () banked
  7121  002354  5166               	movf	RADIO_WritePower@power& (0+255),w,b
  7122  002356  0980               	iorlw	128
  7123  002358  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7124  00235A  0E09               	movlw	9
  7125  00235C  ECE6  F01A         	call	_RADIO_RegisterWrite
  7126                           
  7127                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
  7128  002360  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
  7129  002364  0E0B               	movlw	11
  7130  002366  ECE6  F01A         	call	_RADIO_RegisterWrite
  7131  00236A  0012               	return	
  7132  00236C                     __end_of_RADIO_WritePower:
  7133                           	opt stack 0
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           intcon2	equ	0xFF1
  7142                           intcon3	equ	0xFF0
  7143                           postinc0	equ	0xFEE
  7144                           wreg	equ	0xFE8
  7145                           indf2	equ	0xFDF
  7146                           postinc2	equ	0xFDE
  7147                           postdec2	equ	0xFDD
  7148                           fsr2h	equ	0xFDA
  7149                           fsr2l	equ	0xFD9
  7150                           status	equ	0xFD8
  7151                           
  7152 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
  7153 ;; Defined at:
  7154 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  num             4   17[BANK0 ] unsigned long 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, status,0, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;Total ram usage:        8 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:   10
  7175 ;; This function calls:
  7176 ;;		_RADIO_RegisterWrite
  7177 ;;		___lldiv
  7178 ;; This function is called by:
  7179 ;;		_RADIO_WriteConfiguration
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text42
  7184  002CBC                     __ptext42:
  7185                           	opt stack 0
  7186  002CBC                     _RADIO_WriteFSKFrequencyDeviation:
  7187                           	opt stack 17
  7188                           
  7189                           ;radio_driver_SX1276.c: 296: uint32_t num;
  7190                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
  7191                           
  7192                           ;incstack = 0
  7193  002CBC  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
  7194  002CC0  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
  7195  002CC4  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
  7196  002CC8  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
  7197                           
  7198                           ;radio_driver_SX1276.c: 304: num <<= (8);
  7199  002CCC  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
  7200  002CD0  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
  7201  002CD4  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
  7202  002CD8  0100               	movlb	0	; () banked
  7203  002CDA  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;radio_driver_SX1276.c: 305: num /= 15625;
  7207  002CDC  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
  7208  002CE0  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
  7209  002CE4  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
  7210  002CE8  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
  7211  002CEC  0E09               	movlw	9
  7212  002CEE  6F64               	movwf	___lldiv@divisor& (0+255),b
  7213  002CF0  0E3D               	movlw	61
  7214  002CF2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7215  002CF4  0E00               	movlw	0
  7216  002CF6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7217  002CF8  0E00               	movlw	0
  7218  002CFA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7219  002CFC  ECE6  F015         	call	___lldiv	;wreg free
  7220  002D00  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
  7221  002D04  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
  7222  002D08  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
  7223  002D0C  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
  7224                           
  7225                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
  7226  002D10  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
  7227  002D14  0E04               	movlw	4
  7228  002D16  ECE6  F01A         	call	_RADIO_RegisterWrite
  7229                           
  7230                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
  7231  002D1A  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
  7232  002D1E  0E05               	movlw	5
  7233  002D20  ECE6  F01A         	call	_RADIO_RegisterWrite
  7234  002D24  0012               	return		;funcret
  7235  002D26                     __end_of_RADIO_WriteFSKFrequencyDeviation:
  7236                           	opt stack 0
  7237                           tblptru	equ	0xFF8
  7238                           tblptrh	equ	0xFF7
  7239                           tblptrl	equ	0xFF6
  7240                           tablat	equ	0xFF5
  7241                           prodh	equ	0xFF4
  7242                           prodl	equ	0xFF3
  7243                           intcon	equ	0xFF2
  7244                           intcon2	equ	0xFF1
  7245                           intcon3	equ	0xFF0
  7246                           postinc0	equ	0xFEE
  7247                           wreg	equ	0xFE8
  7248                           indf2	equ	0xFDF
  7249                           postinc2	equ	0xFDE
  7250                           postdec2	equ	0xFDD
  7251                           fsr2h	equ	0xFDA
  7252                           fsr2l	equ	0xFD9
  7253                           status	equ	0xFD8
  7254                           
  7255 ;; *************** function _RADIO_WriteFSKBitRate *****************
  7256 ;; Defined at:
  7257 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  bitRate         4   13[BANK0 ] unsigned long 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  num             4   17[BANK0 ] unsigned long 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;Total ram usage:        8 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   10
  7278 ;; This function calls:
  7279 ;;		_RADIO_RegisterWrite
  7280 ;;		___lldiv
  7281 ;; This function is called by:
  7282 ;;		_RADIO_WriteConfiguration
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text43
  7287  002D26                     __ptext43:
  7288                           	opt stack 0
  7289  002D26                     _RADIO_WriteFSKBitRate:
  7290                           	opt stack 17
  7291                           
  7292                           ;radio_driver_SX1276.c: 318: uint32_t num;
  7293                           ;radio_driver_SX1276.c: 320: num = 32000000;
  7294                           
  7295                           ;incstack = 0
  7296  002D26  0E00               	movlw	0
  7297  002D28  0100               	movlb	0	; () banked
  7298  002D2A  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
  7299  002D2C  0E48               	movlw	72
  7300  002D2E  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
  7301  002D30  0EE8               	movlw	232
  7302  002D32  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
  7303  002D34  0E01               	movlw	1
  7304  002D36  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;radio_driver_SX1276.c: 321: num /= bitRate;
  7308  002D38  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
  7309  002D3C  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
  7310  002D40  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
  7311  002D44  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
  7312  002D48  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
  7313  002D4C  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
  7314  002D50  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
  7315  002D54  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
  7316  002D58  ECE6  F015         	call	___lldiv	;wreg free
  7317  002D5C  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
  7318  002D60  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
  7319  002D64  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
  7320  002D68  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
  7321                           
  7322                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
  7323  002D6C  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
  7324  002D70  0E02               	movlw	2
  7325  002D72  ECE6  F01A         	call	_RADIO_RegisterWrite
  7326                           
  7327                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
  7328  002D76  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
  7329  002D7A  0E03               	movlw	3
  7330  002D7C  ECE6  F01A         	call	_RADIO_RegisterWrite
  7331                           
  7332                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
  7333  002D80  0E00               	movlw	0
  7334  002D82  0100               	movlb	0	; () banked
  7335  002D84  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
  7336  002D86  0E5D               	movlw	93
  7337  002D88  ECE6  F01A         	call	_RADIO_RegisterWrite
  7338  002D8C  0012               	return		;funcret
  7339  002D8E                     __end_of_RADIO_WriteFSKBitRate:
  7340                           	opt stack 0
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           intcon2	equ	0xFF1
  7349                           intcon3	equ	0xFF0
  7350                           postinc0	equ	0xFEE
  7351                           wreg	equ	0xFE8
  7352                           indf2	equ	0xFDF
  7353                           postinc2	equ	0xFDE
  7354                           postdec2	equ	0xFDD
  7355                           fsr2h	equ	0xFDA
  7356                           fsr2l	equ	0xFD9
  7357                           status	equ	0xFD8
  7358                           
  7359 ;; *************** function _PrepareJoinRequestFrame *****************
  7360 ;; Defined at:
  7361 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;		None
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  mic             4  116[BANK0 ] unsigned long 
  7366 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
  7367 ;;  iCtr            1  121[BANK0 ] unsigned char 
  7368 ;;  mhdr            1  120[BANK0 ] struct .
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;Total ram usage:       11 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:   13
  7385 ;; This function calls:
  7386 ;;		_ComputeMic
  7387 ;;		_Random
  7388 ;;		_memcpy
  7389 ;;		_memset
  7390 ;; This function is called by:
  7391 ;;		_LORAWAN_Join
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text44
  7396  0014E6                     __ptext44:
  7397                           	opt stack 0
  7398  0014E6                     _PrepareJoinRequestFrame:
  7399                           	opt stack 16
  7400                           
  7401                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
  7402                           
  7403                           ;incstack = 0
  7404  0014E6  0E00               	movlw	0
  7405  0014E8  0100               	movlb	0	; () banked
  7406  0014EA  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;lorawan.c: 1809: Mhdr_t mhdr;
  7410                           ;lorawan.c: 1810: uint32_t mic;
  7411                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
  7412  0014EC  0EE0               	movlw	low _macBuffer
  7413  0014EE  6F60               	movwf	memset@p1& (0+255),b
  7414  0014F0  0E04               	movlw	high _macBuffer
  7415  0014F2  6F61               	movwf	(memset@p1+1)& (0+255),b
  7416  0014F4  0E00               	movlw	0
  7417  0014F6  6F63               	movwf	(memset@c+1)& (0+255),b
  7418  0014F8  0E00               	movlw	0
  7419  0014FA  6F62               	movwf	memset@c& (0+255),b
  7420  0014FC  0E01               	movlw	1
  7421  0014FE  6F65               	movwf	(memset@n+1)& (0+255),b
  7422  001500  0E0F               	movlw	15
  7423  001502  6F64               	movwf	memset@n& (0+255),b
  7424  001504  EC1A  F01A         	call	_memset	;wreg free
  7425                           
  7426                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
  7427  001508  0100               	movlb	0	; () banked
  7428  00150A  9BD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
  7429  00150C  9DD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
  7430  00150E  9FD8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;lorawan.c: 1815: mhdr.bits.major = 0;
  7434  001510  0EFC               	movlw	-4
  7435  001512  17D8               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
  7439  001514  95D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
  7440  001516  97D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
  7441  001518  99D8               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
  7445  00151A  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7446  00151C  0D01               	mullw	1
  7447  00151E  0EE0               	movlw	low _macBuffer
  7448  001520  24F3               	addwf	prodl,w,c
  7449  001522  6ED9               	movwf	fsr2l,c
  7450  001524  0E04               	movlw	high _macBuffer
  7451  001526  20F4               	addwfc	prodh,w,c
  7452  001528  6EDA               	movwf	fsr2h,c
  7453  00152A  C0D8  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
  7454                           
  7455                           ; BSR set to: 0
  7456  00152E  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
  7460  001530  0E00               	movlw	0
  7461  001532  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
  7462  001534                     l11118:
  7463                           
  7464                           ; BSR set to: 0
  7465  001534  0E07               	movlw	7
  7466  001536  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
  7467  001538  D001               	goto	l2034
  7468  00153A  D022               	goto	u11810
  7469  00153C                     l2034:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;lorawan.c: 1821: {
  7473                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
  7474                           
  7475                           ; BSR set to: 0
  7476  00153C  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7477  00153E  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
  7478  001540  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
  7479  001542  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
  7480  001544  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7481  001546  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
  7482  001548  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7483  00154A  0E07               	movlw	7
  7484  00154C  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
  7485  00154E  0E00               	movlw	0
  7486  001550  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7487  001552  0E52               	movlw	low (_loRa+82)
  7488  001554  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
  7489  001556  6ED9               	movwf	fsr2l,c
  7490  001558  0E02               	movlw	high (_loRa+82)
  7491  00155A  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
  7492  00155C  6EDA               	movwf	fsr2h,c
  7493  00155E  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7494  001560  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
  7495  001564  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
  7496  001566  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
  7497  001568  0E00               	movlw	0
  7498  00156A  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
  7499  00156C  0EE0               	movlw	low _macBuffer
  7500  00156E  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
  7501  001570  6EE9               	movwf	fsr0l,c
  7502  001572  0E04               	movlw	high _macBuffer
  7503  001574  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
  7504  001576  6EEA               	movwf	fsr0h,c
  7505  001578  CFDF FFEF          	movff	indf2,indf0
  7506                           
  7507                           ; BSR set to: 0
  7508  00157C  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
  7509  00157E  D7DA               	goto	l11118
  7510  001580                     u11810:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;lorawan.c: 1823: }
  7514                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
  7515                           
  7516                           ; BSR set to: 0
  7517  001580  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7518  001582  0F08               	addlw	8
  7519  001584  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
  7523  001586  0E00               	movlw	0
  7524  001588  6FD9               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
  7525  00158A                     l11132:
  7526                           
  7527                           ; BSR set to: 0
  7528  00158A  0E07               	movlw	7
  7529  00158C  65D9               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
  7530  00158E  D001               	goto	l2036
  7531  001590  D022               	goto	u11830
  7532  001592                     l2036:
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;lorawan.c: 1828: {
  7536                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
  7537                           
  7538                           ; BSR set to: 0
  7539  001592  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7540  001594  6FD0               	movwf	??_PrepareJoinRequestFrame& (0+255),b
  7541  001596  6BD1               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
  7542  001598  1FD0               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
  7543  00159A  1FD1               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7544  00159C  4BD0               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
  7545  00159E  2BD1               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7546  0015A0  0E07               	movlw	7
  7547  0015A2  27D0               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
  7548  0015A4  0E00               	movlw	0
  7549  0015A6  23D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
  7550  0015A8  0E5A               	movlw	low (_loRa+90)
  7551  0015AA  25D0               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
  7552  0015AC  6ED9               	movwf	fsr2l,c
  7553  0015AE  0E02               	movlw	high (_loRa+90)
  7554  0015B0  21D1               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
  7555  0015B2  6EDA               	movwf	fsr2h,c
  7556  0015B4  51D9               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
  7557  0015B6  C0DA  F0D2         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
  7558  0015BA  6BD3               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
  7559  0015BC  27D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
  7560  0015BE  0E00               	movlw	0
  7561  0015C0  23D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
  7562  0015C2  0EE0               	movlw	low _macBuffer
  7563  0015C4  25D2               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
  7564  0015C6  6EE9               	movwf	fsr0l,c
  7565  0015C8  0E04               	movlw	high _macBuffer
  7566  0015CA  21D3               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
  7567  0015CC  6EEA               	movwf	fsr0h,c
  7568  0015CE  CFDF FFEF          	movff	indf2,indf0
  7569                           
  7570                           ; BSR set to: 0
  7571  0015D2  2BD9               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
  7572  0015D4  D7DA               	goto	l11132
  7573  0015D6                     u11830:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;lorawan.c: 1830: }
  7577                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
  7578                           
  7579                           ; BSR set to: 0
  7580  0015D6  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7581  0015D8  0F08               	addlw	8
  7582  0015DA  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
  7586  0015DC  0EFF               	movlw	255
  7587  0015DE  6F74               	movwf	(Random@max+1)& (0+255),b
  7588  0015E0  6973               	setf	Random@max& (0+255),b
  7589  0015E2  ECC4  F01A         	call	_Random	;wreg free
  7590  0015E6  C073  F2D2         	movff	?_Random,_loRa+210
  7591  0015EA  C074  F2D3         	movff	?_Random+1,_loRa+211
  7592                           
  7593                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
  7594  0015EE  0100               	movlb	0	; () banked
  7595  0015F0  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7596  0015F2  0D01               	mullw	1
  7597  0015F4  0EE0               	movlw	low _macBuffer
  7598  0015F6  24F3               	addwf	prodl,w,c
  7599  0015F8  6F60               	movwf	memcpy@d1& (0+255),b
  7600  0015FA  0E04               	movlw	high _macBuffer
  7601  0015FC  20F4               	addwfc	prodh,w,c
  7602  0015FE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7603  001600  0ED2               	movlw	low (_loRa+210)
  7604  001602  6F62               	movwf	memcpy@s1& (0+255),b
  7605  001604  0E02               	movlw	high (_loRa+210)
  7606  001606  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7607  001608  0E00               	movlw	0
  7608  00160A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7609  00160C  0E02               	movlw	2
  7610  00160E  6F64               	movwf	memcpy@n& (0+255),b
  7611  001610  EC8E  F017         	call	_memcpy	;wreg free
  7612                           
  7613                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
  7614  001614  0100               	movlb	0	; () banked
  7615  001616  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7616  001618  0F02               	addlw	2
  7617  00161A  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
  7621  00161C  0E42               	movlw	low (_loRa+66)
  7622  00161E  6FC7               	movwf	ComputeMic@key& (0+255),b
  7623  001620  0E02               	movlw	high (_loRa+66)
  7624  001622  6FC8               	movwf	(ComputeMic@key+1)& (0+255),b
  7625  001624  0EE0               	movlw	low _macBuffer
  7626  001626  6FC9               	movwf	ComputeMic@buffer& (0+255),b
  7627  001628  0E04               	movlw	high _macBuffer
  7628  00162A  6FCA               	movwf	(ComputeMic@buffer+1)& (0+255),b
  7629  00162C  C0DA  F0CB         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
  7630  001630  ECFB  F016         	call	_ComputeMic	;wreg free
  7631  001634  C0C7  F0D4         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
  7632  001638  C0C8  F0D5         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
  7633  00163C  C0C9  F0D6         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
  7634  001640  C0CA  F0D7         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
  7635                           
  7636                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
  7637  001644  0100               	movlb	0	; () banked
  7638  001646  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7639  001648  0D01               	mullw	1
  7640  00164A  0EE0               	movlw	low _macBuffer
  7641  00164C  24F3               	addwf	prodl,w,c
  7642  00164E  6F60               	movwf	memcpy@d1& (0+255),b
  7643  001650  0E04               	movlw	high _macBuffer
  7644  001652  20F4               	addwfc	prodh,w,c
  7645  001654  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7646  001656  0ED4               	movlw	low PrepareJoinRequestFrame@mic
  7647  001658  6F62               	movwf	memcpy@s1& (0+255),b
  7648  00165A  0E00               	movlw	high PrepareJoinRequestFrame@mic
  7649  00165C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7650  00165E  0E00               	movlw	0
  7651  001660  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7652  001662  0E04               	movlw	4
  7653  001664  6F64               	movwf	memcpy@n& (0+255),b
  7654  001666  EC8E  F017         	call	_memcpy	;wreg free
  7655                           
  7656                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
  7657  00166A  0100               	movlb	0	; () banked
  7658  00166C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7659  00166E  0F04               	addlw	4
  7660  001670  6FDA               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;lorawan.c: 1842: return bufferIndex;
  7664  001672  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
  7665  001674  0012               	return	
  7666  001676                     __end_of_PrepareJoinRequestFrame:
  7667                           	opt stack 0
  7668                           tblptru	equ	0xFF8
  7669                           tblptrh	equ	0xFF7
  7670                           tblptrl	equ	0xFF6
  7671                           tablat	equ	0xFF5
  7672                           prodh	equ	0xFF4
  7673                           prodl	equ	0xFF3
  7674                           intcon	equ	0xFF2
  7675                           intcon2	equ	0xFF1
  7676                           intcon3	equ	0xFF0
  7677                           indf0	equ	0xFEF
  7678                           postinc0	equ	0xFEE
  7679                           fsr0h	equ	0xFEA
  7680                           fsr0l	equ	0xFE9
  7681                           wreg	equ	0xFE8
  7682                           indf2	equ	0xFDF
  7683                           postinc2	equ	0xFDE
  7684                           postdec2	equ	0xFDD
  7685                           fsr2h	equ	0xFDA
  7686                           fsr2l	equ	0xFD9
  7687                           status	equ	0xFD8
  7688                           
  7689 ;; *************** function _Random *****************
  7690 ;; Defined at:
  7691 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  max             2   19[BANK0 ] unsigned int 
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2   19[BANK0 ] unsigned int 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;Total ram usage:        2 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    9
  7712 ;; This function calls:
  7713 ;;		___lwmod
  7714 ;;		_rand
  7715 ;; This function is called by:
  7716 ;;		_SearchAvailableChannel
  7717 ;;		_PrepareJoinRequestFrame
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text45
  7722  003588                     __ptext45:
  7723                           	opt stack 0
  7724  003588                     _Random:
  7725                           	opt stack 18
  7726                           
  7727                           ;lorawan.c: 1118: return (rand () % max);
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;incstack = 0
  7731  003588  EC18  F018         	call	_rand	;wreg free
  7732  00358C  C06C  F06E         	movff	?_rand,___lwmod@dividend
  7733  003590  C06D  F06F         	movff	?_rand+1,___lwmod@dividend+1
  7734  003594  C073  F070         	movff	Random@max,___lwmod@divisor
  7735  003598  C074  F071         	movff	Random@max+1,___lwmod@divisor+1
  7736  00359C  EC0B  F019         	call	___lwmod	;wreg free
  7737  0035A0  C06E  F073         	movff	?___lwmod,?_Random
  7738  0035A4  C06F  F074         	movff	?___lwmod+1,?_Random+1
  7739  0035A8  0012               	return	
  7740  0035AA                     __end_of_Random:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           intcon	equ	0xFF2
  7749                           intcon2	equ	0xFF1
  7750                           intcon3	equ	0xFF0
  7751                           indf0	equ	0xFEF
  7752                           postinc0	equ	0xFEE
  7753                           fsr0h	equ	0xFEA
  7754                           fsr0l	equ	0xFE9
  7755                           wreg	equ	0xFE8
  7756                           indf2	equ	0xFDF
  7757                           postinc2	equ	0xFDE
  7758                           postdec2	equ	0xFDD
  7759                           fsr2h	equ	0xFDA
  7760                           fsr2l	equ	0xFD9
  7761                           status	equ	0xFD8
  7762                           
  7763 ;; *************** function _rand *****************
  7764 ;; Defined at:
  7765 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;		None
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2   12[BANK0 ] int 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;Total ram usage:        2 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    8
  7786 ;; This function calls:
  7787 ;;		___lmul
  7788 ;; This function is called by:
  7789 ;;		_Random
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text46
  7794  003030                     __ptext46:
  7795                           	opt stack 0
  7796  003030                     _rand:
  7797                           	opt stack 18
  7798                           
  7799                           ;incstack = 0
  7800  003030  C052  F060         	movff	_randx,___lmul@multiplier
  7801  003034  C053  F061         	movff	_randx+1,___lmul@multiplier+1
  7802  003038  C054  F062         	movff	_randx+2,___lmul@multiplier+2
  7803  00303C  C055  F063         	movff	_randx+3,___lmul@multiplier+3
  7804  003040  0E6D               	movlw	109
  7805  003042  0100               	movlb	0	; () banked
  7806  003044  6F64               	movwf	___lmul@multiplicand& (0+255),b
  7807  003046  0E4E               	movlw	78
  7808  003048  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7809  00304A  0EC6               	movlw	198
  7810  00304C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7811  00304E  0E41               	movlw	65
  7812  003050  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7813  003052  ECEC  F017         	call	___lmul	;wreg free
  7814  003056  C060  F052         	movff	?___lmul,_randx
  7815  00305A  C061  F053         	movff	?___lmul+1,_randx+1
  7816  00305E  C062  F054         	movff	?___lmul+2,_randx+2
  7817  003062  C063  F055         	movff	?___lmul+3,_randx+3
  7818  003066  0E39               	movlw	57
  7819  003068  2652               	addwf	_randx,f,c
  7820  00306A  0E30               	movlw	48
  7821  00306C  2253               	addwfc	_randx+1,f,c
  7822  00306E  0E00               	movlw	0
  7823  003070  2254               	addwfc	_randx+2,f,c
  7824  003072  0E00               	movlw	0
  7825  003074  2255               	addwfc	_randx+3,f,c
  7826  003076  0EFF               	movlw	255
  7827  003078  1454               	andwf	_randx+2,w,c
  7828  00307A  0100               	movlb	0	; () banked
  7829  00307C  6F6C               	movwf	?_rand& (0+255),b
  7830  00307E  0E7F               	movlw	127
  7831  003080  1455               	andwf	_randx+3,w,c
  7832  003082  6F6D               	movwf	(?_rand+1)& (0+255),b
  7833  003084  0012               	return	
  7834  003086                     __end_of_rand:
  7835                           	opt stack 0
  7836                           tblptru	equ	0xFF8
  7837                           tblptrh	equ	0xFF7
  7838                           tblptrl	equ	0xFF6
  7839                           tablat	equ	0xFF5
  7840                           prodh	equ	0xFF4
  7841                           prodl	equ	0xFF3
  7842                           intcon	equ	0xFF2
  7843                           intcon2	equ	0xFF1
  7844                           intcon3	equ	0xFF0
  7845                           indf0	equ	0xFEF
  7846                           postinc0	equ	0xFEE
  7847                           fsr0h	equ	0xFEA
  7848                           fsr0l	equ	0xFE9
  7849                           wreg	equ	0xFE8
  7850                           indf2	equ	0xFDF
  7851                           postinc2	equ	0xFDE
  7852                           postdec2	equ	0xFDD
  7853                           fsr2h	equ	0xFDA
  7854                           fsr2l	equ	0xFD9
  7855                           status	equ	0xFD8
  7856                           
  7857 ;; *************** function ___lwmod *****************
  7858 ;; Defined at:
  7859 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  dividend        2   14[BANK0 ] unsigned int 
  7862 ;;  divisor         2   16[BANK0 ] unsigned int 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  counter         1   18[BANK0 ] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2   14[BANK0 ] unsigned int 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;Total ram usage:        5 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    7
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_Random
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text47
  7889  003216                     __ptext47:
  7890                           	opt stack 0
  7891  003216                     ___lwmod:
  7892                           	opt stack 19
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;incstack = 0
  7896  003216  0100               	movlb	0	; () banked
  7897  003218  5170               	movf	___lwmod@divisor& (0+255),w,b
  7898  00321A  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7899  00321C  B4D8               	btfsc	status,2,c
  7900  00321E  D018               	goto	l2911
  7901                           
  7902                           ; BSR set to: 0
  7903  003220  0E01               	movlw	1
  7904  003222  6F72               	movwf	___lwmod@counter& (0+255),b
  7905  003224  D004               	goto	l2906
  7906  003226                     
  7907                           ; BSR set to: 0
  7908                           
  7909                           ; BSR set to: 0
  7910  003226  90D8               	bcf	status,0,c
  7911  003228  3770               	rlcf	___lwmod@divisor& (0+255),f,b
  7912  00322A  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7913  00322C  2B72               	incf	___lwmod@counter& (0+255),f,b
  7914  00322E                     l2906:
  7915                           
  7916                           ; BSR set to: 0
  7917                           
  7918                           ; BSR set to: 0
  7919  00322E  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7920  003230  D7FA               	goto	l2907
  7921  003232                     u8300:
  7922                           
  7923                           ; BSR set to: 0
  7924                           
  7925                           ; BSR set to: 0
  7926                           
  7927                           ; BSR set to: 0
  7928  003232  5170               	movf	___lwmod@divisor& (0+255),w,b
  7929  003234  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
  7930  003236  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7931  003238  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7932  00323A  A0D8               	btfss	status,0,c
  7933  00323C  D004               	goto	l2910
  7934                           
  7935                           ; BSR set to: 0
  7936  00323E  5170               	movf	___lwmod@divisor& (0+255),w,b
  7937  003240  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
  7938  003242  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7939  003244  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7940  003246                     l2910:
  7941                           
  7942                           ; BSR set to: 0
  7943                           
  7944                           ; BSR set to: 0
  7945  003246  90D8               	bcf	status,0,c
  7946  003248  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7947  00324A  3370               	rrcf	___lwmod@divisor& (0+255),f,b
  7948                           
  7949                           ; BSR set to: 0
  7950  00324C  2F72               	decfsz	___lwmod@counter& (0+255),f,b
  7951  00324E  D7F1               	goto	u8300
  7952  003250                     l2911:
  7953                           
  7954                           ; BSR set to: 0
  7955                           
  7956                           ; BSR set to: 0
  7957  003250  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
  7958  003254  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
  7959                           
  7960                           ; BSR set to: 0
  7961  003258  0012               	return		;funcret
  7962  00325A                     __end_of___lwmod:
  7963                           	opt stack 0
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           intcon2	equ	0xFF1
  7972                           intcon3	equ	0xFF0
  7973                           indf0	equ	0xFEF
  7974                           postinc0	equ	0xFEE
  7975                           fsr0h	equ	0xFEA
  7976                           fsr0l	equ	0xFE9
  7977                           wreg	equ	0xFE8
  7978                           indf2	equ	0xFDF
  7979                           postinc2	equ	0xFDE
  7980                           postdec2	equ	0xFDD
  7981                           fsr2h	equ	0xFDA
  7982                           fsr2l	equ	0xFD9
  7983                           status	equ	0xFD8
  7984                           
  7985 ;; *************** function _ComputeMic *****************
  7986 ;; Defined at:
  7987 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  key             2  103[BANK0 ] PTR unsigned char 
  7990 ;;		 -> loRa.activationParameters(105), loRa(245), 
  7991 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
  7992 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
  7993 ;;  bufferLength    1  107[BANK0 ] unsigned char 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  mic             4  108[BANK0 ] unsigned long 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  4  103[BANK0 ] unsigned long 
  7998 ;; Registers used:
  7999 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8005 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;Total ram usage:        9 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:   12
  8012 ;; This function calls:
  8013 ;;		_AESCmac
  8014 ;;		_memcpy
  8015 ;; This function is called by:
  8016 ;;		_PrepareJoinRequestFrame
  8017 ;;		_LORAWAN_RxDone
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text48
  8022  002DF6                     __ptext48:
  8023                           	opt stack 0
  8024  002DF6                     _ComputeMic:
  8025                           	opt stack 16
  8026                           
  8027                           ;lorawan.c: 2196: uint32_t mic = 0;
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;incstack = 0
  8031  002DF6  0E00               	movlw	0
  8032  002DF8  0100               	movlb	0	; () banked
  8033  002DFA  6FCC               	movwf	ComputeMic@mic& (0+255),b
  8034  002DFC  0E00               	movlw	0
  8035  002DFE  6FCD               	movwf	(ComputeMic@mic+1)& (0+255),b
  8036  002E00  0E00               	movlw	0
  8037  002E02  6FCE               	movwf	(ComputeMic@mic+2)& (0+255),b
  8038  002E04  0E00               	movlw	0
  8039  002E06  6FCF               	movwf	(ComputeMic@mic+3)& (0+255),b
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
  8043  002E08  C0C7  F0B9         	movff	ComputeMic@key,AESCmac@key
  8044  002E0C  C0C8  F0BA         	movff	ComputeMic@key+1,AESCmac@key+1
  8045  002E10  0E9C               	movlw	low _aesBuffer
  8046  002E12  6FBB               	movwf	AESCmac@output& (0+255),b
  8047  002E14  0E01               	movlw	high _aesBuffer
  8048  002E16  6FBC               	movwf	(AESCmac@output+1)& (0+255),b
  8049  002E18  C0C9  F0BD         	movff	ComputeMic@buffer,AESCmac@input
  8050  002E1C  C0CA  F0BE         	movff	ComputeMic@buffer+1,AESCmac@input+1
  8051  002E20  C0CB  F0BF         	movff	ComputeMic@bufferLength,AESCmac@size
  8052  002E24  ECC3  F002         	call	_AESCmac	;wreg free
  8053                           
  8054                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
  8055  002E28  0ECC               	movlw	low ComputeMic@mic
  8056  002E2A  0100               	movlb	0	; () banked
  8057  002E2C  6F60               	movwf	memcpy@d1& (0+255),b
  8058  002E2E  0E00               	movlw	high ComputeMic@mic
  8059  002E30  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8060  002E32  0E9C               	movlw	low _aesBuffer
  8061  002E34  6F62               	movwf	memcpy@s1& (0+255),b
  8062  002E36  0E01               	movlw	high _aesBuffer
  8063  002E38  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8064  002E3A  0E00               	movlw	0
  8065  002E3C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8066  002E3E  0E04               	movlw	4
  8067  002E40  6F64               	movwf	memcpy@n& (0+255),b
  8068  002E42  EC8E  F017         	call	_memcpy	;wreg free
  8069                           
  8070                           ;lorawan.c: 2202: return mic;
  8071  002E46  C0CC  F0C7         	movff	ComputeMic@mic,?_ComputeMic
  8072  002E4A  C0CD  F0C8         	movff	ComputeMic@mic+1,?_ComputeMic+1
  8073  002E4E  C0CE  F0C9         	movff	ComputeMic@mic+2,?_ComputeMic+2
  8074  002E52  C0CF  F0CA         	movff	ComputeMic@mic+3,?_ComputeMic+3
  8075  002E56  0012               	return	
  8076  002E58                     __end_of_ComputeMic:
  8077                           	opt stack 0
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           intcon2	equ	0xFF1
  8086                           intcon3	equ	0xFF0
  8087                           indf0	equ	0xFEF
  8088                           postinc0	equ	0xFEE
  8089                           fsr0h	equ	0xFEA
  8090                           fsr0l	equ	0xFE9
  8091                           wreg	equ	0xFE8
  8092                           indf2	equ	0xFDF
  8093                           postinc2	equ	0xFDE
  8094                           postdec2	equ	0xFDD
  8095                           fsr2h	equ	0xFDA
  8096                           fsr2l	equ	0xFD9
  8097                           status	equ	0xFD8
  8098                           
  8099 ;; *************** function _AESCmac *****************
  8100 ;; Defined at:
  8101 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  key             2   89[BANK0 ] PTR unsigned char 
  8104 ;;		 -> loRa.activationParameters(105), loRa(245), 
  8105 ;;  output          2   91[BANK0 ] PTR unsigned char 
  8106 ;;		 -> aesBuffer(16), 
  8107 ;;  input           2   93[BANK0 ] PTR unsigned char 
  8108 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
  8109 ;;  size            1   95[BANK0 ] unsigned char 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  x              16   80[BANK1 ] unsigned char [16]
  8112 ;;  y              16   64[BANK1 ] unsigned char [16]
  8113 ;;  padded         16   48[BANK1 ] unsigned char [16]
  8114 ;;  mLast          16   32[BANK1 ] unsigned char [16]
  8115 ;;  k1             16   16[BANK1 ] unsigned char [16]
  8116 ;;  k2             16    0[BANK1 ] unsigned char [16]
  8117 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
  8118 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
  8119 ;;  i               1  101[BANK1 ] unsigned char 
  8120 ;;  j               1  100[BANK1 ] unsigned char 
  8121 ;;  n               1   99[BANK1 ] unsigned char 
  8122 ;;  flag            1   98[BANK1 ] unsigned char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8132 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;Total ram usage:      116 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:   11
  8139 ;; This function calls:
  8140 ;;		_AESEncodeLoRa
  8141 ;;		_GenerateSubkey
  8142 ;;		_memcpy
  8143 ;;		_memset
  8144 ;; This function is called by:
  8145 ;;		_ComputeMic
  8146 ;;		_LORAWAN_RxDone
  8147 ;;		_AssemblePacket
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text49
  8152  000586                     __ptext49:
  8153                           	opt stack 0
  8154  000586                     _AESCmac:
  8155                           	opt stack 16
  8156                           
  8157                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
  8158                           
  8159                           ;incstack = 0
  8160  000586  0E00               	movlw	0
  8161  000588  0101               	movlb	1	; () banked
  8162  00058A  6F63               	movwf	AESCmac@n& (0+255),b
  8163  00058C  0E00               	movlw	0
  8164  00058E  6F65               	movwf	AESCmac@i& (0+255),b
  8165  000590  0E00               	movlw	0
  8166  000592  6F64               	movwf	AESCmac@j& (0+255),b
  8167                           
  8168                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
  8169  000594  0E00               	movlw	0
  8170  000596  6F62               	movwf	AESCmac@flag& (0+255),b
  8171                           
  8172                           ; BSR set to: 1
  8173                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
  8174                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
  8175                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
  8176  000598  0E00               	movlw	0
  8177  00059A  6F60               	movwf	AESCmac@ptr& (0+255),b
  8178  00059C  0E00               	movlw	0
  8179  00059E  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
  8180                           
  8181                           ; BSR set to: 1
  8182                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
  8183  0005A0  C0B9  F091         	movff	AESCmac@key,GenerateSubkey@key
  8184  0005A4  C0BA  F092         	movff	AESCmac@key+1,GenerateSubkey@key+1
  8185  0005A8  0E10               	movlw	low AESCmac@k1
  8186  0005AA  0100               	movlb	0	; () banked
  8187  0005AC  6F93               	movwf	GenerateSubkey@k1& (0+255),b
  8188  0005AE  0E01               	movlw	high AESCmac@k1
  8189  0005B0  6F94               	movwf	(GenerateSubkey@k1+1)& (0+255),b
  8190  0005B2  0E00               	movlw	low AESCmac@k2
  8191  0005B4  6F95               	movwf	GenerateSubkey@k2& (0+255),b
  8192  0005B6  0E01               	movlw	high AESCmac@k2
  8193  0005B8  6F96               	movwf	(GenerateSubkey@k2+1)& (0+255),b
  8194  0005BA  EC06  F00E         	call	_GenerateSubkey	;wreg free
  8195                           
  8196                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
  8197  0005BE  0100               	movlb	0	; () banked
  8198  0005C0  51BF               	movf	AESCmac@size& (0+255),w,b
  8199  0005C2  6FC0               	movwf	??_AESCmac& (0+255),b
  8200  0005C4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8201  0005C6  0E0F               	movlw	15
  8202  0005C8  27C0               	addwf	??_AESCmac& (0+255),f,b
  8203  0005CA  0E00               	movlw	0
  8204  0005CC  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
  8205  0005CE  0E04               	movlw	4
  8206  0005D0  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8207  0005D2                     u8345:
  8208  0005D2  35C1               	rlcf	(??_AESCmac+1)& (0+255),w,b
  8209  0005D4  33C1               	rrcf	(??_AESCmac+1)& (0+255),f,b
  8210  0005D6  33C0               	rrcf	??_AESCmac& (0+255),f,b
  8211  0005D8  2FC2               	decfsz	(??_AESCmac+2)& (0+255),f,b
  8212  0005DA  D7FB               	goto	u8345
  8213  0005DC  51C0               	movf	??_AESCmac& (0+255),w,b
  8214  0005DE  0101               	movlb	1	; () banked
  8215  0005E0  6F63               	movwf	AESCmac@n& (0+255),b
  8216                           
  8217                           ; BSR set to: 1
  8218                           ;lorawan_aes_cmac.c: 52: if (n == 0)
  8219  0005E2  5163               	movf	AESCmac@n& (0+255),w,b
  8220  0005E4  A4D8               	btfss	status,2,c
  8221  0005E6  D004               	goto	l41
  8222                           
  8223                           ; BSR set to: 1
  8224                           ;lorawan_aes_cmac.c: 53: {
  8225                           ;lorawan_aes_cmac.c: 54: n = 1;
  8226  0005E8  0E01               	movlw	1
  8227  0005EA  6F63               	movwf	AESCmac@n& (0+255),b
  8228                           
  8229                           ;lorawan_aes_cmac.c: 55: flag = 0;
  8230  0005EC  0E00               	movlw	0
  8231  0005EE  D00B               	goto	L5
  8232  0005F0                     l41:
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;lorawan_aes_cmac.c: 57: else
  8236                           ;lorawan_aes_cmac.c: 58: {
  8237                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
  8238                           
  8239                           ; BSR set to: 1
  8240  0005F0  C0BF  F0C0         	movff	AESCmac@size,??_AESCmac
  8241  0005F4  0E0F               	movlw	15
  8242  0005F6  0100               	movlb	0	; () banked
  8243  0005F8  17C0               	andwf	??_AESCmac& (0+255),f,b
  8244  0005FA  A4D8               	btfss	status,2,c
  8245  0005FC  D002               	goto	u8360
  8246  0005FE  0E01               	movlw	1
  8247  000600  D001               	goto	u8370
  8248  000602                     u8360:
  8249  000602  0E00               	movlw	0
  8250  000604                     u8370:
  8251  000604  0101               	movlb	1	; () banked
  8252  000606                     L5:
  8253  000606  6F62               	movwf	AESCmac@flag& (0+255),b
  8254                           
  8255                           ; BSR set to: 1
  8256                           ;lorawan_aes_cmac.c: 60: }
  8257                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
  8258  000608  0562               	decf	AESCmac@flag& (0+255),w,b
  8259  00060A  A4D8               	btfss	status,2,c
  8260  00060C  D048               	goto	l43
  8261                           
  8262                           ; BSR set to: 1
  8263                           ;lorawan_aes_cmac.c: 63: {
  8264                           ;lorawan_aes_cmac.c: 64: j = 0;
  8265  00060E  0E00               	movlw	0
  8266  000610  6F64               	movwf	AESCmac@j& (0+255),b
  8267                           
  8268                           ; BSR set to: 1
  8269                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
  8270  000612  3963               	swapf	AESCmac@n& (0+255),w,b
  8271  000614  0BF0               	andlw	240
  8272  000616  0FF0               	addlw	240
  8273  000618  6F65               	movwf	AESCmac@i& (0+255),b
  8274  00061A  D024               	goto	l44
  8275  00061C                     
  8276                           ;lorawan_aes_cmac.c: 66: {
  8277                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
  8278                           
  8279                           ; BSR set to: 1
  8280  00061C  0101               	movlb	1	; () banked
  8281  00061E  5164               	movf	AESCmac@j& (0+255),w,b
  8282  000620  0D01               	mullw	1
  8283  000622  0E20               	movlw	low AESCmac@mLast
  8284  000624  24F3               	addwf	prodl,w,c
  8285  000626  6ED9               	movwf	fsr2l,c
  8286  000628  0E01               	movlw	high AESCmac@mLast
  8287  00062A  20F4               	addwfc	prodh,w,c
  8288  00062C  6EDA               	movwf	fsr2h,c
  8289  00062E  5164               	movf	AESCmac@j& (0+255),w,b
  8290  000630  0D01               	mullw	1
  8291  000632  0E10               	movlw	low AESCmac@k1
  8292  000634  24F3               	addwf	prodl,w,c
  8293  000636  6EE9               	movwf	fsr0l,c
  8294  000638  0E01               	movlw	high AESCmac@k1
  8295  00063A  20F4               	addwfc	prodh,w,c
  8296  00063C  6EEA               	movwf	fsr0h,c
  8297  00063E  50EF               	movf	indf0,w,c
  8298  000640  0100               	movlb	0	; () banked
  8299  000642  6FC0               	movwf	??_AESCmac& (0+255),b
  8300  000644  0101               	movlb	1	; () banked
  8301  000646  5165               	movf	AESCmac@i& (0+255),w,b
  8302  000648  0D01               	mullw	1
  8303  00064A  50F3               	movf	prodl,w,c
  8304  00064C  0100               	movlb	0	; () banked
  8305  00064E  25BD               	addwf	AESCmac@input& (0+255),w,b
  8306  000650  6EE9               	movwf	fsr0l,c
  8307  000652  50F4               	movf	prodh,w,c
  8308  000654  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8309  000656  6EEA               	movwf	fsr0h,c
  8310  000658  50EF               	movf	indf0,w,c
  8311  00065A  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8312  00065C  6EDF               	movwf	indf2,c
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;lorawan_aes_cmac.c: 68: j++;
  8316  00065E  0101               	movlb	1	; () banked
  8317  000660  2B64               	incf	AESCmac@j& (0+255),f,b
  8318                           
  8319                           ; BSR set to: 1
  8320  000662  2B65               	incf	AESCmac@i& (0+255),f,b
  8321  000664                     l44:
  8322                           
  8323                           ; BSR set to: 1
  8324                           
  8325                           ; BSR set to: 1
  8326  000664  5163               	movf	AESCmac@n& (0+255),w,b
  8327  000666  0100               	movlb	0	; () banked
  8328  000668  6FC0               	movwf	??_AESCmac& (0+255),b
  8329  00066A  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8330  00066C  3BC0               	swapf	??_AESCmac& (0+255),f,b
  8331  00066E  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
  8332  000670  0EF0               	movlw	240
  8333  000672  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
  8334  000674  51C0               	movf	??_AESCmac& (0+255),w,b
  8335  000676  0B0F               	andlw	15
  8336  000678  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
  8337  00067A  0EF0               	movlw	240
  8338  00067C  17C0               	andwf	??_AESCmac& (0+255),f,b
  8339  00067E  0101               	movlb	1	; () banked
  8340  000680  5165               	movf	AESCmac@i& (0+255),w,b
  8341  000682  0100               	movlb	0	; () banked
  8342  000684  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8343  000686  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8344  000688  51C0               	movf	??_AESCmac& (0+255),w,b
  8345  00068A  5DC2               	subwf	(??_AESCmac+2)& (0+255),w,b
  8346  00068C  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8347  00068E  0A80               	xorlw	128
  8348  000690  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
  8349  000692  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8350  000694  0A80               	xorlw	128
  8351  000696  59C4               	subwfb	(??_AESCmac+4)& (0+255),w,b
  8352  000698  B0D8               	btfsc	status,0,c
  8353  00069A  D07F               	goto	u8450
  8354  00069C  D7BF               	goto	l45
  8355  00069E                     l43:
  8356                           
  8357                           ;lorawan_aes_cmac.c: 71: else
  8358                           ;lorawan_aes_cmac.c: 72: {
  8359                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
  8360                           
  8361                           ; BSR set to: 0
  8362  00069E  0100               	movlb	0	; () banked
  8363  0006A0  51BF               	movf	AESCmac@size& (0+255),w,b
  8364  0006A2  0B0F               	andlw	15
  8365  0006A4  6FC0               	movwf	??_AESCmac& (0+255),b
  8366  0006A6  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8367  0006A8  1FC0               	comf	??_AESCmac& (0+255),f,b
  8368  0006AA  1FC1               	comf	(??_AESCmac+1)& (0+255),f,b
  8369  0006AC  4BC0               	infsnz	??_AESCmac& (0+255),f,b
  8370  0006AE  2BC1               	incf	(??_AESCmac+1)& (0+255),f,b
  8371  0006B0  51BF               	movf	AESCmac@size& (0+255),w,b
  8372  0006B2  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8373  0006B4  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8374  0006B6  51C0               	movf	??_AESCmac& (0+255),w,b
  8375  0006B8  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
  8376  0006BA  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8377  0006BC  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
  8378  0006BE  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
  8379  0006C0  25BD               	addwf	AESCmac@input& (0+255),w,b
  8380  0006C2  0101               	movlb	1	; () banked
  8381  0006C4  6F60               	movwf	AESCmac@ptr& (0+255),b
  8382  0006C6  0100               	movlb	0	; () banked
  8383  0006C8  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8384  0006CA  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8385  0006CC  0101               	movlb	1	; () banked
  8386  0006CE  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
  8387                           
  8388                           ; BSR set to: 1
  8389                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
  8390  0006D0  0E00               	movlw	0
  8391  0006D2  6F65               	movwf	AESCmac@i& (0+255),b
  8392  0006D4                     l8980:
  8393                           
  8394                           ; BSR set to: 1
  8395  0006D4  0E0F               	movlw	15
  8396  0006D6  6565               	cpfsgt	AESCmac@i& (0+255),b
  8397  0006D8  D001               	goto	l48
  8398  0006DA  D036               	goto	u8430
  8399  0006DC                     l48:
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;lorawan_aes_cmac.c: 76: {
  8403                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
  8404                           
  8405                           ; BSR set to: 1
  8406  0006DC  0100               	movlb	0	; () banked
  8407  0006DE  51BF               	movf	AESCmac@size& (0+255),w,b
  8408  0006E0  0B0F               	andlw	15
  8409  0006E2  0101               	movlb	1	; () banked
  8410  0006E4  6165               	cpfslt	AESCmac@i& (0+255),b
  8411  0006E6  D013               	goto	l50
  8412                           
  8413                           ; BSR set to: 1
  8414                           ;lorawan_aes_cmac.c: 78: {
  8415                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
  8416  0006E8  5165               	movf	AESCmac@i& (0+255),w,b
  8417  0006EA  0D01               	mullw	1
  8418  0006EC  50F3               	movf	prodl,w,c
  8419  0006EE  2560               	addwf	AESCmac@ptr& (0+255),w,b
  8420  0006F0  6ED9               	movwf	fsr2l,c
  8421  0006F2  50F4               	movf	prodh,w,c
  8422  0006F4  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
  8423  0006F6  6EDA               	movwf	fsr2h,c
  8424  0006F8  5165               	movf	AESCmac@i& (0+255),w,b
  8425  0006FA  0D01               	mullw	1
  8426  0006FC  0E30               	movlw	low AESCmac@padded
  8427  0006FE  24F3               	addwf	prodl,w,c
  8428  000700  6EE9               	movwf	fsr0l,c
  8429  000702  0E01               	movlw	high AESCmac@padded
  8430  000704  20F4               	addwfc	prodh,w,c
  8431  000706  6EEA               	movwf	fsr0h,c
  8432  000708  CFDF FFEF          	movff	indf2,indf0
  8433                           
  8434                           ;lorawan_aes_cmac.c: 80: }
  8435  00070C  D01B               	goto	l53
  8436  00070E                     l50:
  8437                           
  8438                           ; BSR set to: 1
  8439                           ;lorawan_aes_cmac.c: 81: else
  8440                           ;lorawan_aes_cmac.c: 82: {
  8441                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
  8442                           
  8443                           ; BSR set to: 1
  8444  00070E  0100               	movlb	0	; () banked
  8445  000710  51BF               	movf	AESCmac@size& (0+255),w,b
  8446  000712  0B0F               	andlw	15
  8447  000714  0101               	movlb	1	; () banked
  8448  000716  1965               	xorwf	AESCmac@i& (0+255),w,b
  8449  000718  A4D8               	btfss	status,2,c
  8450  00071A  D00A               	goto	l52
  8451                           
  8452                           ; BSR set to: 1
  8453                           ;lorawan_aes_cmac.c: 84: {
  8454                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
  8455  00071C  5165               	movf	AESCmac@i& (0+255),w,b
  8456  00071E  0D01               	mullw	1
  8457  000720  0E30               	movlw	low AESCmac@padded
  8458  000722  24F3               	addwf	prodl,w,c
  8459  000724  6ED9               	movwf	fsr2l,c
  8460  000726  0E01               	movlw	high AESCmac@padded
  8461  000728  20F4               	addwfc	prodh,w,c
  8462  00072A  6EDA               	movwf	fsr2h,c
  8463  00072C  0E80               	movlw	128
  8464  00072E  D009               	goto	L6
  8465  000730                     l52:
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;lorawan_aes_cmac.c: 87: else
  8469                           ;lorawan_aes_cmac.c: 88: {
  8470                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
  8471                           
  8472                           ; BSR set to: 1
  8473  000730  5165               	movf	AESCmac@i& (0+255),w,b
  8474  000732  0D01               	mullw	1
  8475  000734  0E30               	movlw	low AESCmac@padded
  8476  000736  24F3               	addwf	prodl,w,c
  8477  000738  6ED9               	movwf	fsr2l,c
  8478  00073A  0E01               	movlw	high AESCmac@padded
  8479  00073C  20F4               	addwfc	prodh,w,c
  8480  00073E  6EDA               	movwf	fsr2h,c
  8481  000740  0E00               	movlw	0
  8482  000742                     L6:
  8483  000742  6EDF               	movwf	indf2,c
  8484  000744                     l53:
  8485                           
  8486                           ; BSR set to: 1
  8487                           
  8488                           ; BSR set to: 1
  8489                           
  8490                           ; BSR set to: 1
  8491  000744  2B65               	incf	AESCmac@i& (0+255),f,b
  8492  000746  D7C6               	goto	l8980
  8493  000748                     u8430:
  8494                           
  8495                           ; BSR set to: 1
  8496                           ;lorawan_aes_cmac.c: 90: }
  8497                           ;lorawan_aes_cmac.c: 91: }
  8498                           ;lorawan_aes_cmac.c: 92: }
  8499                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
  8500                           
  8501                           ; BSR set to: 1
  8502  000748  0E00               	movlw	0
  8503  00074A  6F65               	movwf	AESCmac@i& (0+255),b
  8504  00074C                     l9000:
  8505                           
  8506                           ; BSR set to: 1
  8507  00074C  0E0F               	movlw	15
  8508  00074E  6565               	cpfsgt	AESCmac@i& (0+255),b
  8509  000750  D001               	goto	l54
  8510  000752  D023               	goto	u8450
  8511  000754                     l54:
  8512                           
  8513                           ; BSR set to: 1
  8514                           ;lorawan_aes_cmac.c: 96: {
  8515                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
  8516                           
  8517                           ; BSR set to: 1
  8518  000754  5165               	movf	AESCmac@i& (0+255),w,b
  8519  000756  0D01               	mullw	1
  8520  000758  0E20               	movlw	low AESCmac@mLast
  8521  00075A  24F3               	addwf	prodl,w,c
  8522  00075C  6ED9               	movwf	fsr2l,c
  8523  00075E  0E01               	movlw	high AESCmac@mLast
  8524  000760  20F4               	addwfc	prodh,w,c
  8525  000762  6EDA               	movwf	fsr2h,c
  8526  000764  5165               	movf	AESCmac@i& (0+255),w,b
  8527  000766  0D01               	mullw	1
  8528  000768  0E00               	movlw	low AESCmac@k2
  8529  00076A  24F3               	addwf	prodl,w,c
  8530  00076C  6EE9               	movwf	fsr0l,c
  8531  00076E  0E01               	movlw	high AESCmac@k2
  8532  000770  20F4               	addwfc	prodh,w,c
  8533  000772  6EEA               	movwf	fsr0h,c
  8534  000774  50EF               	movf	indf0,w,c
  8535  000776  0100               	movlb	0	; () banked
  8536  000778  6FC0               	movwf	??_AESCmac& (0+255),b
  8537  00077A  0101               	movlb	1	; () banked
  8538  00077C  5165               	movf	AESCmac@i& (0+255),w,b
  8539  00077E  0D01               	mullw	1
  8540  000780  0E30               	movlw	low AESCmac@padded
  8541  000782  24F3               	addwf	prodl,w,c
  8542  000784  6EE9               	movwf	fsr0l,c
  8543  000786  0E01               	movlw	high AESCmac@padded
  8544  000788  20F4               	addwfc	prodh,w,c
  8545  00078A  6EEA               	movwf	fsr0h,c
  8546  00078C  50EF               	movf	indf0,w,c
  8547  00078E  0100               	movlb	0	; () banked
  8548  000790  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8549  000792  6EDF               	movwf	indf2,c
  8550                           
  8551                           ; BSR set to: 0
  8552  000794  0101               	movlb	1	; () banked
  8553  000796  2B65               	incf	AESCmac@i& (0+255),f,b
  8554  000798  D7D9               	goto	l9000
  8555  00079A                     u8450:
  8556                           
  8557                           ;lorawan_aes_cmac.c: 98: }
  8558                           ;lorawan_aes_cmac.c: 99: }
  8559                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
  8560                           
  8561                           ; BSR set to: 1
  8562                           
  8563                           ; BSR set to: 1
  8564  00079A  0E50               	movlw	low AESCmac@x
  8565  00079C  0100               	movlb	0	; () banked
  8566  00079E  6F60               	movwf	memset@p1& (0+255),b
  8567  0007A0  0E01               	movlw	high AESCmac@x
  8568  0007A2  6F61               	movwf	(memset@p1+1)& (0+255),b
  8569  0007A4  0E00               	movlw	0
  8570  0007A6  6F63               	movwf	(memset@c+1)& (0+255),b
  8571  0007A8  0E00               	movlw	0
  8572  0007AA  6F62               	movwf	memset@c& (0+255),b
  8573  0007AC  0E00               	movlw	0
  8574  0007AE  6F65               	movwf	(memset@n+1)& (0+255),b
  8575  0007B0  0E10               	movlw	16
  8576  0007B2  6F64               	movwf	memset@n& (0+255),b
  8577  0007B4  EC1A  F01A         	call	_memset	;wreg free
  8578                           
  8579                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
  8580  0007B8  0E00               	movlw	0
  8581  0007BA  0101               	movlb	1	; () banked
  8582  0007BC  6F65               	movwf	AESCmac@i& (0+255),b
  8583  0007BE  D056               	goto	l56
  8584  0007C0                     
  8585                           ;lorawan_aes_cmac.c: 104: {
  8586                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
  8587                           
  8588                           ; BSR set to: 1
  8589  0007C0  0E00               	movlw	0
  8590  0007C2  0101               	movlb	1	; () banked
  8591  0007C4  6F64               	movwf	AESCmac@j& (0+255),b
  8592  0007C6                     l9016:
  8593                           
  8594                           ; BSR set to: 1
  8595  0007C6  0E0F               	movlw	15
  8596  0007C8  6564               	cpfsgt	AESCmac@j& (0+255),b
  8597  0007CA  D001               	goto	l58
  8598  0007CC  D033               	goto	u8470
  8599  0007CE                     l58:
  8600                           
  8601                           ; BSR set to: 1
  8602                           ;lorawan_aes_cmac.c: 106: {
  8603                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
  8604                           
  8605                           ; BSR set to: 1
  8606  0007CE  5164               	movf	AESCmac@j& (0+255),w,b
  8607  0007D0  0D01               	mullw	1
  8608  0007D2  0E40               	movlw	low AESCmac@y
  8609  0007D4  24F3               	addwf	prodl,w,c
  8610  0007D6  6ED9               	movwf	fsr2l,c
  8611  0007D8  0E01               	movlw	high AESCmac@y
  8612  0007DA  20F4               	addwfc	prodh,w,c
  8613  0007DC  6EDA               	movwf	fsr2h,c
  8614  0007DE  5165               	movf	AESCmac@i& (0+255),w,b
  8615  0007E0  0100               	movlb	0	; () banked
  8616  0007E2  6FC0               	movwf	??_AESCmac& (0+255),b
  8617  0007E4  6BC1               	clrf	(??_AESCmac+1)& (0+255),b
  8618  0007E6  3BC0               	swapf	??_AESCmac& (0+255),f,b
  8619  0007E8  3BC1               	swapf	(??_AESCmac+1)& (0+255),f,b
  8620  0007EA  0EF0               	movlw	240
  8621  0007EC  17C1               	andwf	(??_AESCmac+1)& (0+255),f,b
  8622  0007EE  51C0               	movf	??_AESCmac& (0+255),w,b
  8623  0007F0  0B0F               	andlw	15
  8624  0007F2  13C1               	iorwf	(??_AESCmac+1)& (0+255),f,b
  8625  0007F4  0EF0               	movlw	240
  8626  0007F6  17C0               	andwf	??_AESCmac& (0+255),f,b
  8627  0007F8  0101               	movlb	1	; () banked
  8628  0007FA  5164               	movf	AESCmac@j& (0+255),w,b
  8629  0007FC  0100               	movlb	0	; () banked
  8630  0007FE  27C0               	addwf	??_AESCmac& (0+255),f,b
  8631  000800  0E00               	movlw	0
  8632  000802  23C1               	addwfc	(??_AESCmac+1)& (0+255),f,b
  8633  000804  51C0               	movf	??_AESCmac& (0+255),w,b
  8634  000806  25BD               	addwf	AESCmac@input& (0+255),w,b
  8635  000808  6EE9               	movwf	fsr0l,c
  8636  00080A  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8637  00080C  21BE               	addwfc	(AESCmac@input+1)& (0+255),w,b
  8638  00080E  6EEA               	movwf	fsr0h,c
  8639  000810  50EF               	movf	indf0,w,c
  8640  000812  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8641  000814  0101               	movlb	1	; () banked
  8642  000816  5164               	movf	AESCmac@j& (0+255),w,b
  8643  000818  0D01               	mullw	1
  8644  00081A  0E50               	movlw	low AESCmac@x
  8645  00081C  24F3               	addwf	prodl,w,c
  8646  00081E  6EE9               	movwf	fsr0l,c
  8647  000820  0E01               	movlw	high AESCmac@x
  8648  000822  20F4               	addwfc	prodh,w,c
  8649  000824  6EEA               	movwf	fsr0h,c
  8650  000826  50EF               	movf	indf0,w,c
  8651  000828  0100               	movlb	0	; () banked
  8652  00082A  19C2               	xorwf	(??_AESCmac+2)& (0+255),w,b
  8653  00082C  6EDF               	movwf	indf2,c
  8654                           
  8655                           ; BSR set to: 0
  8656  00082E  0101               	movlb	1	; () banked
  8657  000830  2B64               	incf	AESCmac@j& (0+255),f,b
  8658  000832  D7C9               	goto	l9016
  8659  000834                     u8470:
  8660                           
  8661                           ; BSR set to: 1
  8662                           ;lorawan_aes_cmac.c: 108: }
  8663                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
  8664                           
  8665                           ; BSR set to: 1
  8666  000834  0E50               	movlw	low AESCmac@x
  8667  000836  0100               	movlb	0	; () banked
  8668  000838  6F60               	movwf	memcpy@d1& (0+255),b
  8669  00083A  0E01               	movlw	high AESCmac@x
  8670  00083C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8671  00083E  0E40               	movlw	low AESCmac@y
  8672  000840  6F62               	movwf	memcpy@s1& (0+255),b
  8673  000842  0E01               	movlw	high AESCmac@y
  8674  000844  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8675  000846  0E00               	movlw	0
  8676  000848  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8677  00084A  0E10               	movlw	16
  8678  00084C  6F64               	movwf	memcpy@n& (0+255),b
  8679  00084E  EC8E  F017         	call	_memcpy	;wreg free
  8680                           
  8681                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
  8682  000852  0E50               	movlw	low AESCmac@x
  8683  000854  0100               	movlb	0	; () banked
  8684  000856  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8685  000858  0E01               	movlw	high AESCmac@x
  8686  00085A  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8687  00085C  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
  8688  000860  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
  8689  000864  ECB5  F019         	call	_AESEncodeLoRa	;wreg free
  8690  000868  0101               	movlb	1	; () banked
  8691  00086A  2B65               	incf	AESCmac@i& (0+255),f,b
  8692  00086C                     l56:
  8693                           
  8694                           ; BSR set to: 1
  8695                           
  8696                           ; BSR set to: 1
  8697  00086C  0EFF               	movlw	255
  8698  00086E  0100               	movlb	0	; () banked
  8699  000870  6FC0               	movwf	??_AESCmac& (0+255),b
  8700  000872  0EFF               	movlw	255
  8701  000874  6FC1               	movwf	(??_AESCmac+1)& (0+255),b
  8702  000876  0101               	movlb	1	; () banked
  8703  000878  5163               	movf	AESCmac@n& (0+255),w,b
  8704  00087A  0100               	movlb	0	; () banked
  8705  00087C  6FC2               	movwf	(??_AESCmac+2)& (0+255),b
  8706  00087E  6BC3               	clrf	(??_AESCmac+3)& (0+255),b
  8707  000880  51C0               	movf	??_AESCmac& (0+255),w,b
  8708  000882  27C2               	addwf	(??_AESCmac+2)& (0+255),f,b
  8709  000884  51C1               	movf	(??_AESCmac+1)& (0+255),w,b
  8710  000886  23C3               	addwfc	(??_AESCmac+3)& (0+255),f,b
  8711  000888  0101               	movlb	1	; () banked
  8712  00088A  5165               	movf	AESCmac@i& (0+255),w,b
  8713  00088C  0100               	movlb	0	; () banked
  8714  00088E  6FC4               	movwf	(??_AESCmac+4)& (0+255),b
  8715  000890  6BC5               	clrf	(??_AESCmac+5)& (0+255),b
  8716  000892  51C2               	movf	(??_AESCmac+2)& (0+255),w,b
  8717  000894  5DC4               	subwf	(??_AESCmac+4)& (0+255),w,b
  8718  000896  51C5               	movf	(??_AESCmac+5)& (0+255),w,b
  8719  000898  0A80               	xorlw	128
  8720  00089A  6FC6               	movwf	(??_AESCmac+6)& (0+255),b
  8721  00089C  51C3               	movf	(??_AESCmac+3)& (0+255),w,b
  8722  00089E  0A80               	xorlw	128
  8723  0008A0  59C6               	subwfb	(??_AESCmac+6)& (0+255),w,b
  8724  0008A2  A0D8               	btfss	status,0,c
  8725  0008A4  D78D               	goto	l57
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;lorawan_aes_cmac.c: 111: }
  8729                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
  8730                           
  8731                           ; BSR set to: 0
  8732  0008A6  0E00               	movlw	0
  8733  0008A8  0101               	movlb	1	; () banked
  8734  0008AA  6F65               	movwf	AESCmac@i& (0+255),b
  8735  0008AC                     l9036:
  8736                           
  8737                           ; BSR set to: 1
  8738  0008AC  0E0F               	movlw	15
  8739  0008AE  6565               	cpfsgt	AESCmac@i& (0+255),b
  8740  0008B0  D001               	goto	l61
  8741  0008B2  D023               	goto	u8500
  8742  0008B4                     l61:
  8743                           
  8744                           ; BSR set to: 1
  8745                           ;lorawan_aes_cmac.c: 114: {
  8746                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
  8747                           
  8748                           ; BSR set to: 1
  8749  0008B4  5165               	movf	AESCmac@i& (0+255),w,b
  8750  0008B6  0D01               	mullw	1
  8751  0008B8  0E40               	movlw	low AESCmac@y
  8752  0008BA  24F3               	addwf	prodl,w,c
  8753  0008BC  6ED9               	movwf	fsr2l,c
  8754  0008BE  0E01               	movlw	high AESCmac@y
  8755  0008C0  20F4               	addwfc	prodh,w,c
  8756  0008C2  6EDA               	movwf	fsr2h,c
  8757  0008C4  5165               	movf	AESCmac@i& (0+255),w,b
  8758  0008C6  0D01               	mullw	1
  8759  0008C8  0E20               	movlw	low AESCmac@mLast
  8760  0008CA  24F3               	addwf	prodl,w,c
  8761  0008CC  6EE9               	movwf	fsr0l,c
  8762  0008CE  0E01               	movlw	high AESCmac@mLast
  8763  0008D0  20F4               	addwfc	prodh,w,c
  8764  0008D2  6EEA               	movwf	fsr0h,c
  8765  0008D4  50EF               	movf	indf0,w,c
  8766  0008D6  0100               	movlb	0	; () banked
  8767  0008D8  6FC0               	movwf	??_AESCmac& (0+255),b
  8768  0008DA  0101               	movlb	1	; () banked
  8769  0008DC  5165               	movf	AESCmac@i& (0+255),w,b
  8770  0008DE  0D01               	mullw	1
  8771  0008E0  0E50               	movlw	low AESCmac@x
  8772  0008E2  24F3               	addwf	prodl,w,c
  8773  0008E4  6EE9               	movwf	fsr0l,c
  8774  0008E6  0E01               	movlw	high AESCmac@x
  8775  0008E8  20F4               	addwfc	prodh,w,c
  8776  0008EA  6EEA               	movwf	fsr0h,c
  8777  0008EC  50EF               	movf	indf0,w,c
  8778  0008EE  0100               	movlb	0	; () banked
  8779  0008F0  19C0               	xorwf	??_AESCmac& (0+255),w,b
  8780  0008F2  6EDF               	movwf	indf2,c
  8781                           
  8782                           ; BSR set to: 0
  8783  0008F4  0101               	movlb	1	; () banked
  8784  0008F6  2B65               	incf	AESCmac@i& (0+255),f,b
  8785  0008F8  D7D9               	goto	l9036
  8786  0008FA                     u8500:
  8787                           
  8788                           ; BSR set to: 1
  8789                           ;lorawan_aes_cmac.c: 116: }
  8790                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
  8791                           
  8792                           ; BSR set to: 1
  8793  0008FA  0E40               	movlw	low AESCmac@y
  8794  0008FC  0100               	movlb	0	; () banked
  8795  0008FE  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8796  000900  0E01               	movlw	high AESCmac@y
  8797  000902  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8798  000904  C0B9  F07F         	movff	AESCmac@key,AESEncodeLoRa@key
  8799  000908  C0BA  F080         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
  8800  00090C  ECB5  F019         	call	_AESEncodeLoRa	;wreg free
  8801                           
  8802                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
  8803  000910  C0BB  F060         	movff	AESCmac@output,memcpy@d1
  8804  000914  C0BC  F061         	movff	AESCmac@output+1,memcpy@d1+1
  8805  000918  0E40               	movlw	low AESCmac@y
  8806  00091A  0100               	movlb	0	; () banked
  8807  00091C  6F62               	movwf	memcpy@s1& (0+255),b
  8808  00091E  0E01               	movlw	high AESCmac@y
  8809  000920  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8810  000922  0E00               	movlw	0
  8811  000924  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8812  000926  0E10               	movlw	16
  8813  000928  6F64               	movwf	memcpy@n& (0+255),b
  8814  00092A  EC8E  F017         	call	_memcpy	;wreg free
  8815  00092E  0012               	return		;funcret
  8816  000930                     __end_of_AESCmac:
  8817                           	opt stack 0
  8818                           tblptru	equ	0xFF8
  8819                           tblptrh	equ	0xFF7
  8820                           tblptrl	equ	0xFF6
  8821                           tablat	equ	0xFF5
  8822                           prodh	equ	0xFF4
  8823                           prodl	equ	0xFF3
  8824                           intcon	equ	0xFF2
  8825                           intcon2	equ	0xFF1
  8826                           intcon3	equ	0xFF0
  8827                           indf0	equ	0xFEF
  8828                           postinc0	equ	0xFEE
  8829                           fsr0h	equ	0xFEA
  8830                           fsr0l	equ	0xFE9
  8831                           wreg	equ	0xFE8
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _GenerateSubkey *****************
  8840 ;; Defined at:
  8841 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  key             2   49[BANK0 ] PTR unsigned char 
  8844 ;;		 -> loRa.activationParameters(105), loRa(245), 
  8845 ;;  k1              2   51[BANK0 ] PTR unsigned char 
  8846 ;;		 -> AESCmac@k1(16), 
  8847 ;;  k2              2   53[BANK0 ] PTR unsigned char 
  8848 ;;		 -> AESCmac@k2(16), 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  l              16   72[BANK0 ] unsigned char [16]
  8851 ;;  const_Rb       16   56[BANK0 ] unsigned char [16]
  8852 ;;  i               1   88[BANK0 ] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8862 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;Total ram usage:       40 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:   10
  8869 ;; This function calls:
  8870 ;;		_AESEncodeLoRa
  8871 ;;		_FillSubKey
  8872 ;;		_memset
  8873 ;; This function is called by:
  8874 ;;		_AESCmac
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text50
  8879  001C0C                     __ptext50:
  8880                           	opt stack 0
  8881  001C0C                     _GenerateSubkey:
  8882                           	opt stack 16
  8883                           
  8884                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
  8885                           
  8886                           ;incstack = 0
  8887  001C0C  0E00               	movlw	0
  8888  001C0E  0100               	movlb	0	; () banked
  8889  001C10  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
  8893                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
  8894                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
  8895  001C12  EE21  F0AC         	lfsr	2,GenerateSubkey@F7103
  8896  001C16  EE00  F098         	lfsr	0,GenerateSubkey@const_Rb
  8897  001C1A  0E0F               	movlw	15
  8898  001C1C                     u7521:
  8899  001C1C  CFDB FFEB          	movff	plusw2,plusw0
  8900  001C20  06E8               	decf	wreg,f,c
  8901  001C22  E2FC               	bc	u7521
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
  8905  001C24  0EA8               	movlw	low GenerateSubkey@l
  8906  001C26  6F60               	movwf	memset@p1& (0+255),b
  8907  001C28  0E00               	movlw	high GenerateSubkey@l
  8908  001C2A  6F61               	movwf	(memset@p1+1)& (0+255),b
  8909  001C2C  0E00               	movlw	0
  8910  001C2E  6F63               	movwf	(memset@c+1)& (0+255),b
  8911  001C30  0E00               	movlw	0
  8912  001C32  6F62               	movwf	memset@c& (0+255),b
  8913  001C34  0E00               	movlw	0
  8914  001C36  6F65               	movwf	(memset@n+1)& (0+255),b
  8915  001C38  0E10               	movlw	16
  8916  001C3A  6F64               	movwf	memset@n& (0+255),b
  8917  001C3C  EC1A  F01A         	call	_memset	;wreg free
  8918                           
  8919                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
  8920  001C40  0EA8               	movlw	low GenerateSubkey@l
  8921  001C42  0100               	movlb	0	; () banked
  8922  001C44  6F7D               	movwf	AESEncodeLoRa@block& (0+255),b
  8923  001C46  0E00               	movlw	high GenerateSubkey@l
  8924  001C48  6F7E               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
  8925  001C4A  C091  F07F         	movff	GenerateSubkey@key,AESEncodeLoRa@key
  8926  001C4E  C092  F080         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
  8927  001C52  ECB5  F019         	call	_AESEncodeLoRa	;wreg free
  8928                           
  8929                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
  8930  001C56  0100               	movlb	0	; () banked
  8931  001C58  BFA8               	btfsc	GenerateSubkey@l& (0+255),7,b
  8932  001C5A  D00D               	goto	l68
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;lorawan_aes_cmac.c: 138: {
  8936                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
  8937  001C5C  0EA8               	movlw	low GenerateSubkey@l
  8938  001C5E  6F60               	movwf	FillSubKey@source& (0+255),b
  8939  001C60  0E00               	movlw	high GenerateSubkey@l
  8940  001C62  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
  8941  001C64  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
  8942  001C68  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
  8943  001C6C  0E10               	movlw	16
  8944  001C6E  6F64               	movwf	FillSubKey@size& (0+255),b
  8945  001C70  EC2C  F017         	call	_FillSubKey	;wreg free
  8946                           
  8947                           ;lorawan_aes_cmac.c: 140: }
  8948  001C74  D02A               	goto	u7550
  8949  001C76                     l68:
  8950                           
  8951                           ;lorawan_aes_cmac.c: 141: else
  8952                           ;lorawan_aes_cmac.c: 142: {
  8953                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
  8954  001C76  0EA8               	movlw	low GenerateSubkey@l
  8955  001C78  0100               	movlb	0	; () banked
  8956  001C7A  6F60               	movwf	FillSubKey@source& (0+255),b
  8957  001C7C  0E00               	movlw	high GenerateSubkey@l
  8958  001C7E  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
  8959  001C80  C093  F062         	movff	GenerateSubkey@k1,FillSubKey@key
  8960  001C84  C094  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
  8961  001C88  0E10               	movlw	16
  8962  001C8A  6F64               	movwf	FillSubKey@size& (0+255),b
  8963  001C8C  EC2C  F017         	call	_FillSubKey	;wreg free
  8964                           
  8965                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
  8966  001C90  0E00               	movlw	0
  8967  001C92  0100               	movlb	0	; () banked
  8968  001C94  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  8969  001C96                     l8372:
  8970                           
  8971                           ; BSR set to: 0
  8972  001C96  0E0F               	movlw	15
  8973  001C98  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
  8974  001C9A  D001               	goto	l70
  8975  001C9C  D016               	goto	u7550
  8976  001C9E                     l70:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;lorawan_aes_cmac.c: 146: {
  8980                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
  8981                           
  8982                           ; BSR set to: 0
  8983  001C9E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  8984  001CA0  0D01               	mullw	1
  8985  001CA2  0E98               	movlw	low GenerateSubkey@const_Rb
  8986  001CA4  24F3               	addwf	prodl,w,c
  8987  001CA6  6ED9               	movwf	fsr2l,c
  8988  001CA8  0E00               	movlw	high GenerateSubkey@const_Rb
  8989  001CAA  20F4               	addwfc	prodh,w,c
  8990  001CAC  6EDA               	movwf	fsr2h,c
  8991  001CAE  50DF               	movf	indf2,w,c
  8992  001CB0  6F97               	movwf	??_GenerateSubkey& (0+255),b
  8993  001CB2  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  8994  001CB4  0D01               	mullw	1
  8995  001CB6  50F3               	movf	prodl,w,c
  8996  001CB8  2593               	addwf	GenerateSubkey@k1& (0+255),w,b
  8997  001CBA  6ED9               	movwf	fsr2l,c
  8998  001CBC  50F4               	movf	prodh,w,c
  8999  001CBE  2194               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
  9000  001CC0  6EDA               	movwf	fsr2h,c
  9001  001CC2  5197               	movf	??_GenerateSubkey& (0+255),w,b
  9002  001CC4  1ADF               	xorwf	indf2,f,c
  9003                           
  9004                           ; BSR set to: 0
  9005  001CC6  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
  9006  001CC8  D7E6               	goto	l8372
  9007  001CCA                     u7550:
  9008                           
  9009                           ;lorawan_aes_cmac.c: 148: }
  9010                           ;lorawan_aes_cmac.c: 149: }
  9011                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
  9012                           
  9013                           ; BSR set to: 0
  9014                           
  9015                           ; BSR set to: 0
  9016  001CCA  C093  FFD9         	movff	GenerateSubkey@k1,fsr2l
  9017  001CCE  C094  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
  9018  001CD2  0100               	movlb	0	; () banked
  9019  001CD4  BEDF               	btfsc	indf2,7,c
  9020  001CD6  D00D               	goto	l72
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;lorawan_aes_cmac.c: 153: {
  9024                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
  9025  001CD8  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
  9026  001CDC  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
  9027  001CE0  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
  9028  001CE4  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
  9029  001CE8  0E10               	movlw	16
  9030  001CEA  6F64               	movwf	FillSubKey@size& (0+255),b
  9031  001CEC  EC2C  F017         	call	_FillSubKey	;wreg free
  9032                           
  9033                           ;lorawan_aes_cmac.c: 155: }
  9034  001CF0  0012               	return	
  9035  001CF2                     l72:
  9036                           
  9037                           ;lorawan_aes_cmac.c: 156: else
  9038                           ;lorawan_aes_cmac.c: 157: {
  9039                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
  9040  001CF2  C093  F060         	movff	GenerateSubkey@k1,FillSubKey@source
  9041  001CF6  C094  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
  9042  001CFA  C095  F062         	movff	GenerateSubkey@k2,FillSubKey@key
  9043  001CFE  C096  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
  9044  001D02  0E10               	movlw	16
  9045  001D04  0100               	movlb	0	; () banked
  9046  001D06  6F64               	movwf	FillSubKey@size& (0+255),b
  9047  001D08  EC2C  F017         	call	_FillSubKey	;wreg free
  9048                           
  9049                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
  9050  001D0C  0E00               	movlw	0
  9051  001D0E  0100               	movlb	0	; () banked
  9052  001D10  6FB8               	movwf	GenerateSubkey@i& (0+255),b
  9053  001D12                     l8390:
  9054                           
  9055                           ; BSR set to: 0
  9056  001D12  0E0F               	movlw	15
  9057  001D14  65B8               	cpfsgt	GenerateSubkey@i& (0+255),b
  9058  001D16  D001               	goto	l74
  9059  001D18  0012               	return	
  9060  001D1A                     l74:
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;lorawan_aes_cmac.c: 161: {
  9064                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
  9065                           
  9066                           ; BSR set to: 0
  9067  001D1A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9068  001D1C  0D01               	mullw	1
  9069  001D1E  50F3               	movf	prodl,w,c
  9070  001D20  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
  9071  001D22  6ED9               	movwf	fsr2l,c
  9072  001D24  50F4               	movf	prodh,w,c
  9073  001D26  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
  9074  001D28  6EDA               	movwf	fsr2h,c
  9075  001D2A  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9076  001D2C  0D01               	mullw	1
  9077  001D2E  0E98               	movlw	low GenerateSubkey@const_Rb
  9078  001D30  24F3               	addwf	prodl,w,c
  9079  001D32  6EE9               	movwf	fsr0l,c
  9080  001D34  0E00               	movlw	high GenerateSubkey@const_Rb
  9081  001D36  20F4               	addwfc	prodh,w,c
  9082  001D38  6EEA               	movwf	fsr0h,c
  9083  001D3A  50EF               	movf	indf0,w,c
  9084  001D3C  6F97               	movwf	??_GenerateSubkey& (0+255),b
  9085  001D3E  51B8               	movf	GenerateSubkey@i& (0+255),w,b
  9086  001D40  0D01               	mullw	1
  9087  001D42  50F3               	movf	prodl,w,c
  9088  001D44  2595               	addwf	GenerateSubkey@k2& (0+255),w,b
  9089  001D46  6EE9               	movwf	fsr0l,c
  9090  001D48  50F4               	movf	prodh,w,c
  9091  001D4A  2196               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
  9092  001D4C  6EEA               	movwf	fsr0h,c
  9093  001D4E  50EF               	movf	indf0,w,c
  9094  001D50  1997               	xorwf	??_GenerateSubkey& (0+255),w,b
  9095  001D52  6EDF               	movwf	indf2,c
  9096                           
  9097                           ; BSR set to: 0
  9098  001D54  2BB8               	incf	GenerateSubkey@i& (0+255),f,b
  9099  001D56  D7DD               	goto	l8390
  9100  001D58                     __end_of_GenerateSubkey:
  9101                           	opt stack 0
  9102                           tblptru	equ	0xFF8
  9103                           tblptrh	equ	0xFF7
  9104                           tblptrl	equ	0xFF6
  9105                           tablat	equ	0xFF5
  9106                           prodh	equ	0xFF4
  9107                           prodl	equ	0xFF3
  9108                           intcon	equ	0xFF2
  9109                           intcon2	equ	0xFF1
  9110                           intcon3	equ	0xFF0
  9111                           indf0	equ	0xFEF
  9112                           postinc0	equ	0xFEE
  9113                           plusw0	equ	0xFEB
  9114                           fsr0h	equ	0xFEA
  9115                           fsr0l	equ	0xFE9
  9116                           wreg	equ	0xFE8
  9117                           indf2	equ	0xFDF
  9118                           postinc2	equ	0xFDE
  9119                           postdec2	equ	0xFDD
  9120                           plusw2	equ	0xFDB
  9121                           fsr2h	equ	0xFDA
  9122                           fsr2l	equ	0xFD9
  9123                           status	equ	0xFD8
  9124                           
  9125 ;; *************** function _FillSubKey *****************
  9126 ;; Defined at:
  9127 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  source          2    0[BANK0 ] PTR unsigned char 
  9130 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
  9131 ;;  key             2    2[BANK0 ] PTR unsigned char 
  9132 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
  9133 ;;  size            1    4[BANK0 ] unsigned char 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  i               1    7[BANK0 ] unsigned char 
  9136 ;;  carry           1    6[BANK0 ] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9146 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;Total ram usage:        8 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    7
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_GenerateSubkey
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text51
  9161  002E58                     __ptext51:
  9162                           	opt stack 0
  9163  002E58                     _FillSubKey:
  9164                           	opt stack 18
  9165                           
  9166                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
  9167                           
  9168                           ;incstack = 0
  9169  002E58  0E00               	movlw	0
  9170  002E5A  0100               	movlb	0	; () banked
  9171  002E5C  6F67               	movwf	FillSubKey@i& (0+255),b
  9172                           
  9173                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
  9174  002E5E  0E00               	movlw	0
  9175  002E60  6F66               	movwf	FillSubKey@carry& (0+255),b
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;lorawan_aes_cmac.c: 172: i=size;
  9179  002E62  C064  F067         	movff	FillSubKey@size,FillSubKey@i
  9180                           
  9181                           ;lorawan_aes_cmac.c: 174: while(i--)
  9182  002E66  D024               	goto	l79
  9183  002E68                     
  9184                           ; BSR set to: 0
  9185                           ;lorawan_aes_cmac.c: 175: {
  9186                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
  9187                           
  9188                           ; BSR set to: 0
  9189  002E68  5167               	movf	FillSubKey@i& (0+255),w,b
  9190  002E6A  0D01               	mullw	1
  9191  002E6C  50F3               	movf	prodl,w,c
  9192  002E6E  2562               	addwf	FillSubKey@key& (0+255),w,b
  9193  002E70  6ED9               	movwf	fsr2l,c
  9194  002E72  50F4               	movf	prodh,w,c
  9195  002E74  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
  9196  002E76  6EDA               	movwf	fsr2h,c
  9197  002E78  5167               	movf	FillSubKey@i& (0+255),w,b
  9198  002E7A  0D01               	mullw	1
  9199  002E7C  50F3               	movf	prodl,w,c
  9200  002E7E  2560               	addwf	FillSubKey@source& (0+255),w,b
  9201  002E80  6EE9               	movwf	fsr0l,c
  9202  002E82  50F4               	movf	prodh,w,c
  9203  002E84  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
  9204  002E86  6EEA               	movwf	fsr0h,c
  9205  002E88  50EF               	movf	indf0,w,c
  9206  002E8A  6F65               	movwf	??_FillSubKey& (0+255),b
  9207  002E8C  90D8               	bcf	status,0,c
  9208  002E8E  3565               	rlcf	??_FillSubKey& (0+255),w,b
  9209  002E90  1166               	iorwf	FillSubKey@carry& (0+255),w,b
  9210  002E92  6EDF               	movwf	indf2,c
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
  9214  002E94  5167               	movf	FillSubKey@i& (0+255),w,b
  9215  002E96  0D01               	mullw	1
  9216  002E98  50F3               	movf	prodl,w,c
  9217  002E9A  2560               	addwf	FillSubKey@source& (0+255),w,b
  9218  002E9C  6ED9               	movwf	fsr2l,c
  9219  002E9E  50F4               	movf	prodh,w,c
  9220  002EA0  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
  9221  002EA2  6EDA               	movwf	fsr2h,c
  9222  002EA4  AEDF               	btfss	indf2,7,c
  9223  002EA6  D002               	goto	u6720
  9224  002EA8  0E01               	movlw	1
  9225  002EAA  D001               	goto	u6730
  9226  002EAC                     u6720:
  9227  002EAC  0E00               	movlw	0
  9228  002EAE                     u6730:
  9229  002EAE  6F66               	movwf	FillSubKey@carry& (0+255),b
  9230  002EB0                     l79:
  9231                           
  9232                           ; BSR set to: 0
  9233                           
  9234                           ; BSR set to: 0
  9235  002EB0  0767               	decf	FillSubKey@i& (0+255),f,b
  9236  002EB2  2967               	incf	FillSubKey@i& (0+255),w,b
  9237  002EB4  B4D8               	btfsc	status,2,c
  9238  002EB6  0012               	return	
  9239  002EB8  D7D7               	goto	l80
  9240  002EBA                     __end_of_FillSubKey:
  9241                           	opt stack 0
  9242                           tblptru	equ	0xFF8
  9243                           tblptrh	equ	0xFF7
  9244                           tblptrl	equ	0xFF6
  9245                           tablat	equ	0xFF5
  9246                           prodh	equ	0xFF4
  9247                           prodl	equ	0xFF3
  9248                           intcon	equ	0xFF2
  9249                           intcon2	equ	0xFF1
  9250                           intcon3	equ	0xFF0
  9251                           indf0	equ	0xFEF
  9252                           postinc0	equ	0xFEE
  9253                           plusw0	equ	0xFEB
  9254                           fsr0h	equ	0xFEA
  9255                           fsr0l	equ	0xFE9
  9256                           wreg	equ	0xFE8
  9257                           indf2	equ	0xFDF
  9258                           postinc2	equ	0xFDE
  9259                           postdec2	equ	0xFDD
  9260                           plusw2	equ	0xFDB
  9261                           fsr2h	equ	0xFDA
  9262                           fsr2l	equ	0xFD9
  9263                           status	equ	0xFD8
  9264                           
  9265 ;; *************** function _AESEncodeLoRa *****************
  9266 ;; Defined at:
  9267 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  block           2   29[BANK0 ] PTR unsigned char 
  9270 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
  9271 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
  9272 ;;  key             2   31[BANK0 ] PTR unsigned char 
  9273 ;;		 -> loRa.activationParameters(105), loRa(245), 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  useKey         16   33[BANK0 ] unsigned char [16]
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;Total ram usage:       20 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    9
  9292 ;; This function calls:
  9293 ;;		_AESEncode
  9294 ;;		_memcpy
  9295 ;; This function is called by:
  9296 ;;		_AESCmac
  9297 ;;		_GenerateSubkey
  9298 ;;		_LORAWAN_RxDone
  9299 ;;		_ComputeSessionKeys
  9300 ;;		_EncryptFRMPayload
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text52
  9305  00336A                     __ptext52:
  9306                           	opt stack 0
  9307  00336A                     _AESEncodeLoRa:
  9308                           	opt stack 16
  9309                           
  9310                           ;lorawan_aes.c: 36: uint8_t useKey[16];
  9311                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;incstack = 0
  9315  00336A  0E81               	movlw	low AESEncodeLoRa@useKey
  9316  00336C  0100               	movlb	0	; () banked
  9317  00336E  6F60               	movwf	memcpy@d1& (0+255),b
  9318  003370  0E00               	movlw	high AESEncodeLoRa@useKey
  9319  003372  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9320  003374  C07F  F062         	movff	AESEncodeLoRa@key,memcpy@s1
  9321  003378  C080  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
  9322  00337C  0E00               	movlw	0
  9323  00337E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  9324  003380  0E10               	movlw	16
  9325  003382  6F64               	movwf	memcpy@n& (0+255),b
  9326  003384  EC8E  F017         	call	_memcpy	;wreg free
  9327                           
  9328                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
  9329  003388  C07D  F066         	movff	AESEncodeLoRa@block,AESEncode@block
  9330  00338C  C07E  F067         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
  9331  003390  0E81               	movlw	low AESEncodeLoRa@useKey
  9332  003392  0100               	movlb	0	; () banked
  9333  003394  6F68               	movwf	AESEncode@key& (0+255),b
  9334  003396  0E00               	movlw	high AESEncodeLoRa@useKey
  9335  003398  6F69               	movwf	(AESEncode@key+1)& (0+255),b
  9336  00339A  EC98  F004         	call	_AESEncode	;wreg free
  9337  00339E  0012               	return		;funcret
  9338  0033A0                     __end_of_AESEncodeLoRa:
  9339                           	opt stack 0
  9340                           tblptru	equ	0xFF8
  9341                           tblptrh	equ	0xFF7
  9342                           tblptrl	equ	0xFF6
  9343                           tablat	equ	0xFF5
  9344                           prodh	equ	0xFF4
  9345                           prodl	equ	0xFF3
  9346                           intcon	equ	0xFF2
  9347                           intcon2	equ	0xFF1
  9348                           intcon3	equ	0xFF0
  9349                           indf0	equ	0xFEF
  9350                           postinc0	equ	0xFEE
  9351                           plusw0	equ	0xFEB
  9352                           fsr0h	equ	0xFEA
  9353                           fsr0l	equ	0xFE9
  9354                           wreg	equ	0xFE8
  9355                           indf2	equ	0xFDF
  9356                           postinc2	equ	0xFDE
  9357                           postdec2	equ	0xFDD
  9358                           plusw2	equ	0xFDB
  9359                           fsr2h	equ	0xFDA
  9360                           fsr2l	equ	0xFD9
  9361                           status	equ	0xFD8
  9362                           
  9363 ;; *************** function _AESEncode *****************
  9364 ;; Defined at:
  9365 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  block           2    6[BANK0 ] PTR unsigned char 
  9368 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
  9369 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
  9370 ;;  key             2    8[BANK0 ] PTR unsigned char 
  9371 ;;		 -> AESEncodeLoRa@useKey(16), 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  aux3            1   27[BANK0 ] unsigned char 
  9374 ;;  aux1            1   26[BANK0 ] unsigned char 
  9375 ;;  aux2            1   25[BANK0 ] unsigned char 
  9376 ;;  aux             1   24[BANK0 ] unsigned char 
  9377 ;;  i               1   28[BANK0 ] unsigned char 
  9378 ;;  temp            1    0        unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;Total ram usage:       23 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    8
  9395 ;; This function calls:
  9396 ;;		_EncKeySchedule
  9397 ;;		_EncodeShiftRow
  9398 ;; This function is called by:
  9399 ;;		_AESEncodeLoRa
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text53
  9404  000930                     __ptext53:
  9405                           	opt stack 0
  9406  000930                     _AESEncode:
  9407                           	opt stack 16
  9408                           
  9409                           ;AES.c: 250: unsigned char i;
  9410                           ;AES.c: 251: unsigned char temp;
  9411                           ;AES.c: 254: _roundCounter = 10;
  9412                           
  9413                           ;incstack = 0
  9414  000930  0E0A               	movlw	10
  9415  000932  0100               	movlb	0	; () banked
  9416  000934  6FF9               	movwf	__roundCounter& (0+255),b
  9417                           
  9418                           ;AES.c: 256: _rcon = 0x01;
  9419  000936  0E01               	movlw	1
  9420  000938  6FF8               	movwf	__rcon& (0+255),b
  9421                           
  9422                           ;AES.c: 259: for(i=0;i<16;i++)
  9423  00093A  0E00               	movlw	0
  9424  00093C  6F7C               	movwf	AESEncode@i& (0+255),b
  9425  00093E                     l7686:
  9426                           
  9427                           ; BSR set to: 0
  9428  00093E  0E0F               	movlw	15
  9429  000940  657C               	cpfsgt	AESEncode@i& (0+255),b
  9430  000942  D001               	goto	l300
  9431  000944  D016               	goto	u6490
  9432  000946                     l300:
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;AES.c: 260: {
  9436                           ;AES.c: 261: block[i] ^= key[i];
  9437                           
  9438                           ; BSR set to: 0
  9439  000946  517C               	movf	AESEncode@i& (0+255),w,b
  9440  000948  0D01               	mullw	1
  9441  00094A  50F3               	movf	prodl,w,c
  9442  00094C  2568               	addwf	AESEncode@key& (0+255),w,b
  9443  00094E  6ED9               	movwf	fsr2l,c
  9444  000950  50F4               	movf	prodh,w,c
  9445  000952  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
  9446  000954  6EDA               	movwf	fsr2h,c
  9447  000956  50DF               	movf	indf2,w,c
  9448  000958  6F6A               	movwf	??_AESEncode& (0+255),b
  9449  00095A  517C               	movf	AESEncode@i& (0+255),w,b
  9450  00095C  0D01               	mullw	1
  9451  00095E  50F3               	movf	prodl,w,c
  9452  000960  2566               	addwf	AESEncode@block& (0+255),w,b
  9453  000962  6ED9               	movwf	fsr2l,c
  9454  000964  50F4               	movf	prodh,w,c
  9455  000966  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9456  000968  6EDA               	movwf	fsr2h,c
  9457  00096A  516A               	movf	??_AESEncode& (0+255),w,b
  9458  00096C  1ADF               	xorwf	indf2,f,c
  9459                           
  9460                           ; BSR set to: 0
  9461  00096E  2B7C               	incf	AESEncode@i& (0+255),f,b
  9462  000970  D7E6               	goto	l7686
  9463  000972                     u6490:
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;AES.c: 265: {
  9467                           ;AES.c: 268: for(i=0;i<16;i++)
  9468                           
  9469                           ; BSR set to: 0
  9470                           
  9471                           ;AES.c: 262: }
  9472                           ;AES.c: 264: do
  9473                           
  9474                           ; BSR set to: 0
  9475  000972  0E00               	movlw	0
  9476  000974  6F7C               	movwf	AESEncode@i& (0+255),b
  9477  000976                     l7698:
  9478                           
  9479                           ; BSR set to: 0
  9480  000976  0E0F               	movlw	15
  9481  000978  657C               	cpfsgt	AESEncode@i& (0+255),b
  9482  00097A  D001               	goto	l303
  9483  00097C  D022               	goto	u6510
  9484  00097E                     l303:
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;AES.c: 269: {
  9488                           ;AES.c: 270: block[i]=STable[block[i]];
  9489                           
  9490                           ; BSR set to: 0
  9491  00097E  517C               	movf	AESEncode@i& (0+255),w,b
  9492  000980  0D01               	mullw	1
  9493  000982  50F3               	movf	prodl,w,c
  9494  000984  2566               	addwf	AESEncode@block& (0+255),w,b
  9495  000986  6ED9               	movwf	fsr2l,c
  9496  000988  50F4               	movf	prodh,w,c
  9497  00098A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9498  00098C  6EDA               	movwf	fsr2h,c
  9499  00098E  50DF               	movf	indf2,w,c
  9500  000990  6F6A               	movwf	??_AESEncode& (0+255),b
  9501  000992  516A               	movf	??_AESEncode& (0+255),w,b
  9502  000994  0D01               	mullw	1
  9503  000996  0E67               	movlw	low _STable
  9504  000998  24F3               	addwf	prodl,w,c
  9505  00099A  6EF6               	movwf	tblptrl,c
  9506  00099C  0EFE               	movlw	high _STable
  9507  00099E  20F4               	addwfc	prodh,w,c
  9508  0009A0  6EF7               	movwf	tblptrh,c
  9509  0009A2                     	if	1	;There are 3 active tblptr bytes
  9510  0009A2  6AF8               	clrf	tblptru,c
  9511  0009A4  0E00               	movlw	low (__mediumconst shr (0+16))
  9512  0009A6  22F8               	addwfc	tblptru,f,c
  9513  0009A8                     	endif
  9514  0009A8  517C               	movf	AESEncode@i& (0+255),w,b
  9515  0009AA  0D01               	mullw	1
  9516  0009AC  50F3               	movf	prodl,w,c
  9517  0009AE  2566               	addwf	AESEncode@block& (0+255),w,b
  9518  0009B0  6ED9               	movwf	fsr2l,c
  9519  0009B2  50F4               	movf	prodh,w,c
  9520  0009B4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9521  0009B6  6EDA               	movwf	fsr2h,c
  9522  0009B8  0008               	tblrd		*
  9523  0009BA  CFF5 FFDF          	movff	tablat,indf2
  9524                           
  9525                           ; BSR set to: 0
  9526  0009BE  2B7C               	incf	AESEncode@i& (0+255),f,b
  9527  0009C0  D7DA               	goto	l7698
  9528  0009C2                     u6510:
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;AES.c: 271: }
  9532                           ;AES.c: 274: EncodeShiftRow(block);
  9533                           
  9534                           ; BSR set to: 0
  9535  0009C2  C066  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
  9536  0009C6  C067  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
  9537  0009CA  ECA5  F00C         	call	_EncodeShiftRow	;wreg free
  9538                           
  9539                           ;AES.c: 277: if(_roundCounter != 1)
  9540  0009CE  0100               	movlb	0	; () banked
  9541  0009D0  05F9               	decf	__roundCounter& (0+255),w,b
  9542  0009D2  B4D8               	btfsc	status,2,c
  9543  0009D4  D126               	goto	u6570
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;AES.c: 278: {
  9547                           ;AES.c: 279: unsigned char aux,aux1,aux2,aux3;
  9548                           ;AES.c: 281: for(i=0;i<16;i+=4)
  9549  0009D6  0E00               	movlw	0
  9550  0009D8  6F7C               	movwf	AESEncode@i& (0+255),b
  9551  0009DA                     l7714:
  9552                           
  9553                           ; BSR set to: 0
  9554  0009DA  0E0F               	movlw	15
  9555  0009DC  657C               	cpfsgt	AESEncode@i& (0+255),b
  9556  0009DE  D001               	goto	l306
  9557  0009E0  D120               	goto	u6570
  9558  0009E2                     l306:
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;AES.c: 282: {
  9562                           ;AES.c: 283: aux1= block[i+0] ^ block[i+1];
  9563                           
  9564                           ; BSR set to: 0
  9565  0009E2  517C               	movf	AESEncode@i& (0+255),w,b
  9566  0009E4  6F6A               	movwf	??_AESEncode& (0+255),b
  9567  0009E6  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9568  0009E8  0E01               	movlw	1
  9569  0009EA  276A               	addwf	??_AESEncode& (0+255),f,b
  9570  0009EC  0E00               	movlw	0
  9571  0009EE  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9572  0009F0  516A               	movf	??_AESEncode& (0+255),w,b
  9573  0009F2  2566               	addwf	AESEncode@block& (0+255),w,b
  9574  0009F4  6ED9               	movwf	fsr2l,c
  9575  0009F6  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9576  0009F8  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9577  0009FA  6EDA               	movwf	fsr2h,c
  9578  0009FC  50DF               	movf	indf2,w,c
  9579  0009FE  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9580  000A00  517C               	movf	AESEncode@i& (0+255),w,b
  9581  000A02  2566               	addwf	AESEncode@block& (0+255),w,b
  9582  000A04  6ED9               	movwf	fsr2l,c
  9583  000A06  0E00               	movlw	0
  9584  000A08  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9585  000A0A  6EDA               	movwf	fsr2h,c
  9586  000A0C  50DF               	movf	indf2,w,c
  9587  000A0E  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9588  000A10  6F7A               	movwf	AESEncode@aux1& (0+255),b
  9589                           
  9590                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
  9591  000A12  517C               	movf	AESEncode@i& (0+255),w,b
  9592  000A14  6F6A               	movwf	??_AESEncode& (0+255),b
  9593  000A16  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9594  000A18  0E03               	movlw	3
  9595  000A1A  276A               	addwf	??_AESEncode& (0+255),f,b
  9596  000A1C  0E00               	movlw	0
  9597  000A1E  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9598  000A20  516A               	movf	??_AESEncode& (0+255),w,b
  9599  000A22  2566               	addwf	AESEncode@block& (0+255),w,b
  9600  000A24  6ED9               	movwf	fsr2l,c
  9601  000A26  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9602  000A28  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9603  000A2A  6EDA               	movwf	fsr2h,c
  9604  000A2C  50DF               	movf	indf2,w,c
  9605  000A2E  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9606  000A30  517C               	movf	AESEncode@i& (0+255),w,b
  9607  000A32  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
  9608  000A34  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
  9609  000A36  0E02               	movlw	2
  9610  000A38  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
  9611  000A3A  0E00               	movlw	0
  9612  000A3C  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
  9613  000A3E  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9614  000A40  2566               	addwf	AESEncode@block& (0+255),w,b
  9615  000A42  6ED9               	movwf	fsr2l,c
  9616  000A44  516E               	movf	(??_AESEncode+4)& (0+255),w,b
  9617  000A46  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9618  000A48  6EDA               	movwf	fsr2h,c
  9619  000A4A  50DF               	movf	indf2,w,c
  9620  000A4C  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9621  000A4E  6F7B               	movwf	AESEncode@aux3& (0+255),b
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;AES.c: 285: aux = aux1 ^ aux3;
  9625  000A50  517A               	movf	AESEncode@aux1& (0+255),w,b
  9626  000A52  197B               	xorwf	AESEncode@aux3& (0+255),w,b
  9627  000A54  6F78               	movwf	AESEncode@aux& (0+255),b
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
  9631  000A56  517C               	movf	AESEncode@i& (0+255),w,b
  9632  000A58  6F6A               	movwf	??_AESEncode& (0+255),b
  9633  000A5A  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9634  000A5C  0E01               	movlw	1
  9635  000A5E  276A               	addwf	??_AESEncode& (0+255),f,b
  9636  000A60  0E00               	movlw	0
  9637  000A62  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9638  000A64  516A               	movf	??_AESEncode& (0+255),w,b
  9639  000A66  2566               	addwf	AESEncode@block& (0+255),w,b
  9640  000A68  6ED9               	movwf	fsr2l,c
  9641  000A6A  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9642  000A6C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9643  000A6E  6EDA               	movwf	fsr2h,c
  9644  000A70  50DF               	movf	indf2,w,c
  9645  000A72  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9646  000A74  517C               	movf	AESEncode@i& (0+255),w,b
  9647  000A76  6F6D               	movwf	(??_AESEncode+3)& (0+255),b
  9648  000A78  6B6E               	clrf	(??_AESEncode+4)& (0+255),b
  9649  000A7A  0E02               	movlw	2
  9650  000A7C  276D               	addwf	(??_AESEncode+3)& (0+255),f,b
  9651  000A7E  0E00               	movlw	0
  9652  000A80  236E               	addwfc	(??_AESEncode+4)& (0+255),f,b
  9653  000A82  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9654  000A84  2566               	addwf	AESEncode@block& (0+255),w,b
  9655  000A86  6ED9               	movwf	fsr2l,c
  9656  000A88  516E               	movf	(??_AESEncode+4)& (0+255),w,b
  9657  000A8A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9658  000A8C  6EDA               	movwf	fsr2h,c
  9659  000A8E  50DF               	movf	indf2,w,c
  9660  000A90  196C               	xorwf	(??_AESEncode+2)& (0+255),w,b
  9661  000A92  6F79               	movwf	AESEncode@aux2& (0+255),b
  9662                           
  9663                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
  9664  000A94  0E7F               	movlw	127
  9665  000A96  657A               	cpfsgt	AESEncode@aux1& (0+255),b
  9666  000A98  D00C               	goto	l309
  9667                           
  9668                           ; BSR set to: 0
  9669  000A9A  0E1B               	movlw	27
  9670  000A9C  C07A  F06A         	movff	AESEncode@aux1,??_AESEncode
  9671  000AA0  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9672  000AA2  90D8               	bcf	status,0,c
  9673  000AA4  376A               	rlcf	??_AESEncode& (0+255),f,b
  9674  000AA6  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9675  000AA8  196A               	xorwf	??_AESEncode& (0+255),w,b
  9676  000AAA  6F72               	movwf	_AESEncode$508& (0+255),b
  9677  000AAC  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9678  000AAE  6F73               	movwf	(_AESEncode$508+1)& (0+255),b
  9679  000AB0  D005               	goto	l311
  9680  000AB2                     l309:
  9681                           
  9682                           ; BSR set to: 0
  9683                           
  9684                           ; BSR set to: 0
  9685  000AB2  90D8               	bcf	status,0,c
  9686  000AB4  357A               	rlcf	AESEncode@aux1& (0+255),w,b
  9687  000AB6  6F72               	movwf	_AESEncode$508& (0+255),b
  9688  000AB8  6B73               	clrf	(_AESEncode$508+1)& (0+255),b
  9689  000ABA  3773               	rlcf	(_AESEncode$508+1)& (0+255),f,b
  9690  000ABC                     l311:
  9691                           
  9692                           ; BSR set to: 0
  9693                           
  9694                           ; BSR set to: 0
  9695  000ABC  C072  F07A         	movff	_AESEncode$508,AESEncode@aux1
  9696                           
  9697                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
  9698  000AC0  0E7F               	movlw	127
  9699  000AC2  6579               	cpfsgt	AESEncode@aux2& (0+255),b
  9700  000AC4  D00C               	goto	l313
  9701                           
  9702                           ; BSR set to: 0
  9703  000AC6  0E1B               	movlw	27
  9704  000AC8  C079  F06A         	movff	AESEncode@aux2,??_AESEncode
  9705  000ACC  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9706  000ACE  90D8               	bcf	status,0,c
  9707  000AD0  376A               	rlcf	??_AESEncode& (0+255),f,b
  9708  000AD2  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9709  000AD4  196A               	xorwf	??_AESEncode& (0+255),w,b
  9710  000AD6  6F74               	movwf	_AESEncode$509& (0+255),b
  9711  000AD8  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9712  000ADA  6F75               	movwf	(_AESEncode$509+1)& (0+255),b
  9713  000ADC  D005               	goto	l315
  9714  000ADE                     l313:
  9715                           
  9716                           ; BSR set to: 0
  9717                           
  9718                           ; BSR set to: 0
  9719  000ADE  90D8               	bcf	status,0,c
  9720  000AE0  3579               	rlcf	AESEncode@aux2& (0+255),w,b
  9721  000AE2  6F74               	movwf	_AESEncode$509& (0+255),b
  9722  000AE4  6B75               	clrf	(_AESEncode$509+1)& (0+255),b
  9723  000AE6  3775               	rlcf	(_AESEncode$509+1)& (0+255),f,b
  9724  000AE8                     l315:
  9725                           
  9726                           ; BSR set to: 0
  9727                           
  9728                           ; BSR set to: 0
  9729  000AE8  C074  F079         	movff	_AESEncode$509,AESEncode@aux2
  9730                           
  9731                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
  9732  000AEC  0E7F               	movlw	127
  9733  000AEE  657B               	cpfsgt	AESEncode@aux3& (0+255),b
  9734  000AF0  D00C               	goto	l317
  9735                           
  9736                           ; BSR set to: 0
  9737  000AF2  0E1B               	movlw	27
  9738  000AF4  C07B  F06A         	movff	AESEncode@aux3,??_AESEncode
  9739  000AF8  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9740  000AFA  90D8               	bcf	status,0,c
  9741  000AFC  376A               	rlcf	??_AESEncode& (0+255),f,b
  9742  000AFE  376B               	rlcf	(??_AESEncode+1)& (0+255),f,b
  9743  000B00  196A               	xorwf	??_AESEncode& (0+255),w,b
  9744  000B02  6F76               	movwf	_AESEncode$510& (0+255),b
  9745  000B04  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9746  000B06  6F77               	movwf	(_AESEncode$510+1)& (0+255),b
  9747  000B08  D005               	goto	l319
  9748  000B0A                     l317:
  9749                           
  9750                           ; BSR set to: 0
  9751                           
  9752                           ; BSR set to: 0
  9753  000B0A  90D8               	bcf	status,0,c
  9754  000B0C  357B               	rlcf	AESEncode@aux3& (0+255),w,b
  9755  000B0E  6F76               	movwf	_AESEncode$510& (0+255),b
  9756  000B10  6B77               	clrf	(_AESEncode$510+1)& (0+255),b
  9757  000B12  3777               	rlcf	(_AESEncode$510+1)& (0+255),f,b
  9758  000B14                     l319:
  9759                           
  9760                           ; BSR set to: 0
  9761                           
  9762                           ; BSR set to: 0
  9763  000B14  C076  F07B         	movff	_AESEncode$510,AESEncode@aux3
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
  9767  000B18  517C               	movf	AESEncode@i& (0+255),w,b
  9768  000B1A  2566               	addwf	AESEncode@block& (0+255),w,b
  9769  000B1C  6ED9               	movwf	fsr2l,c
  9770  000B1E  0E00               	movlw	0
  9771  000B20  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9772  000B22  6EDA               	movwf	fsr2h,c
  9773  000B24  517C               	movf	AESEncode@i& (0+255),w,b
  9774  000B26  2566               	addwf	AESEncode@block& (0+255),w,b
  9775  000B28  6EE9               	movwf	fsr0l,c
  9776  000B2A  0E00               	movlw	0
  9777  000B2C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9778  000B2E  6EEA               	movwf	fsr0h,c
  9779  000B30  50EF               	movf	indf0,w,c
  9780  000B32  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9781  000B34  197A               	xorwf	AESEncode@aux1& (0+255),w,b
  9782  000B36  6EDF               	movwf	indf2,c
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
  9786  000B38  517C               	movf	AESEncode@i& (0+255),w,b
  9787  000B3A  6F6A               	movwf	??_AESEncode& (0+255),b
  9788  000B3C  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9789  000B3E  0E01               	movlw	1
  9790  000B40  276A               	addwf	??_AESEncode& (0+255),f,b
  9791  000B42  0E00               	movlw	0
  9792  000B44  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9793  000B46  516A               	movf	??_AESEncode& (0+255),w,b
  9794  000B48  2566               	addwf	AESEncode@block& (0+255),w,b
  9795  000B4A  6ED9               	movwf	fsr2l,c
  9796  000B4C  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9797  000B4E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9798  000B50  6EDA               	movwf	fsr2h,c
  9799  000B52  517C               	movf	AESEncode@i& (0+255),w,b
  9800  000B54  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9801  000B56  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9802  000B58  0E01               	movlw	1
  9803  000B5A  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9804  000B5C  0E00               	movlw	0
  9805  000B5E  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9806  000B60  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9807  000B62  2566               	addwf	AESEncode@block& (0+255),w,b
  9808  000B64  6EE9               	movwf	fsr0l,c
  9809  000B66  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9810  000B68  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9811  000B6A  6EEA               	movwf	fsr0h,c
  9812  000B6C  50EF               	movf	indf0,w,c
  9813  000B6E  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9814  000B70  1979               	xorwf	AESEncode@aux2& (0+255),w,b
  9815  000B72  6EDF               	movwf	indf2,c
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
  9819  000B74  517C               	movf	AESEncode@i& (0+255),w,b
  9820  000B76  6F6A               	movwf	??_AESEncode& (0+255),b
  9821  000B78  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9822  000B7A  0E02               	movlw	2
  9823  000B7C  276A               	addwf	??_AESEncode& (0+255),f,b
  9824  000B7E  0E00               	movlw	0
  9825  000B80  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9826  000B82  516A               	movf	??_AESEncode& (0+255),w,b
  9827  000B84  2566               	addwf	AESEncode@block& (0+255),w,b
  9828  000B86  6ED9               	movwf	fsr2l,c
  9829  000B88  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9830  000B8A  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9831  000B8C  6EDA               	movwf	fsr2h,c
  9832  000B8E  517C               	movf	AESEncode@i& (0+255),w,b
  9833  000B90  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9834  000B92  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9835  000B94  0E02               	movlw	2
  9836  000B96  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9837  000B98  0E00               	movlw	0
  9838  000B9A  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9839  000B9C  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9840  000B9E  2566               	addwf	AESEncode@block& (0+255),w,b
  9841  000BA0  6EE9               	movwf	fsr0l,c
  9842  000BA2  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9843  000BA4  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9844  000BA6  6EEA               	movwf	fsr0h,c
  9845  000BA8  50EF               	movf	indf0,w,c
  9846  000BAA  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9847  000BAC  197B               	xorwf	AESEncode@aux3& (0+255),w,b
  9848  000BAE  6EDF               	movwf	indf2,c
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
  9852  000BB0  517C               	movf	AESEncode@i& (0+255),w,b
  9853  000BB2  6F6A               	movwf	??_AESEncode& (0+255),b
  9854  000BB4  6B6B               	clrf	(??_AESEncode+1)& (0+255),b
  9855  000BB6  0E03               	movlw	3
  9856  000BB8  276A               	addwf	??_AESEncode& (0+255),f,b
  9857  000BBA  0E00               	movlw	0
  9858  000BBC  236B               	addwfc	(??_AESEncode+1)& (0+255),f,b
  9859  000BBE  516A               	movf	??_AESEncode& (0+255),w,b
  9860  000BC0  2566               	addwf	AESEncode@block& (0+255),w,b
  9861  000BC2  6ED9               	movwf	fsr2l,c
  9862  000BC4  516B               	movf	(??_AESEncode+1)& (0+255),w,b
  9863  000BC6  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9864  000BC8  6EDA               	movwf	fsr2h,c
  9865  000BCA  517C               	movf	AESEncode@i& (0+255),w,b
  9866  000BCC  6F6C               	movwf	(??_AESEncode+2)& (0+255),b
  9867  000BCE  6B6D               	clrf	(??_AESEncode+3)& (0+255),b
  9868  000BD0  0E02               	movlw	2
  9869  000BD2  276C               	addwf	(??_AESEncode+2)& (0+255),f,b
  9870  000BD4  0E00               	movlw	0
  9871  000BD6  236D               	addwfc	(??_AESEncode+3)& (0+255),f,b
  9872  000BD8  516C               	movf	(??_AESEncode+2)& (0+255),w,b
  9873  000BDA  2566               	addwf	AESEncode@block& (0+255),w,b
  9874  000BDC  6EE9               	movwf	fsr0l,c
  9875  000BDE  516D               	movf	(??_AESEncode+3)& (0+255),w,b
  9876  000BE0  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9877  000BE2  6EEA               	movwf	fsr0h,c
  9878  000BE4  50EF               	movf	indf0,w,c
  9879  000BE6  6F6E               	movwf	(??_AESEncode+4)& (0+255),b
  9880  000BE8  517C               	movf	AESEncode@i& (0+255),w,b
  9881  000BEA  6F6F               	movwf	(??_AESEncode+5)& (0+255),b
  9882  000BEC  6B70               	clrf	(??_AESEncode+6)& (0+255),b
  9883  000BEE  0E01               	movlw	1
  9884  000BF0  276F               	addwf	(??_AESEncode+5)& (0+255),f,b
  9885  000BF2  0E00               	movlw	0
  9886  000BF4  2370               	addwfc	(??_AESEncode+6)& (0+255),f,b
  9887  000BF6  516F               	movf	(??_AESEncode+5)& (0+255),w,b
  9888  000BF8  2566               	addwf	AESEncode@block& (0+255),w,b
  9889  000BFA  6EE9               	movwf	fsr0l,c
  9890  000BFC  5170               	movf	(??_AESEncode+6)& (0+255),w,b
  9891  000BFE  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9892  000C00  6EEA               	movwf	fsr0h,c
  9893  000C02  50EF               	movf	indf0,w,c
  9894  000C04  6F71               	movwf	(??_AESEncode+7)& (0+255),b
  9895  000C06  517C               	movf	AESEncode@i& (0+255),w,b
  9896  000C08  2566               	addwf	AESEncode@block& (0+255),w,b
  9897  000C0A  6EE9               	movwf	fsr0l,c
  9898  000C0C  0E00               	movlw	0
  9899  000C0E  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9900  000C10  6EEA               	movwf	fsr0h,c
  9901  000C12  50EF               	movf	indf0,w,c
  9902  000C14  1971               	xorwf	(??_AESEncode+7)& (0+255),w,b
  9903  000C16  196E               	xorwf	(??_AESEncode+4)& (0+255),w,b
  9904  000C18  1978               	xorwf	AESEncode@aux& (0+255),w,b
  9905  000C1A  6EDF               	movwf	indf2,c
  9906  000C1C  0E04               	movlw	4
  9907  000C1E  277C               	addwf	AESEncode@i& (0+255),f,b
  9908  000C20  D6DC               	goto	l7714
  9909  000C22                     u6570:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;AES.c: 296: }
  9913                           ;AES.c: 297: }
  9914                           ;AES.c: 299: EncKeySchedule(key);
  9915                           
  9916                           ; BSR set to: 0
  9917                           
  9918                           ; BSR set to: 0
  9919  000C22  C068  F060         	movff	AESEncode@key,EncKeySchedule@key
  9920  000C26  C069  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
  9921  000C2A  EC39  F006         	call	_EncKeySchedule	;wreg free
  9922                           
  9923                           ;AES.c: 302: for(i=0;i<16;i++)
  9924  000C2E  0E00               	movlw	0
  9925  000C30  0100               	movlb	0	; () banked
  9926  000C32  6F7C               	movwf	AESEncode@i& (0+255),b
  9927  000C34                     l7754:
  9928                           
  9929                           ; BSR set to: 0
  9930  000C34  0E0F               	movlw	15
  9931  000C36  657C               	cpfsgt	AESEncode@i& (0+255),b
  9932  000C38  D001               	goto	l320
  9933  000C3A  D016               	goto	u6590
  9934  000C3C                     l320:
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;AES.c: 303: {
  9938                           ;AES.c: 304: block[i] ^= key[i];
  9939                           
  9940                           ; BSR set to: 0
  9941  000C3C  517C               	movf	AESEncode@i& (0+255),w,b
  9942  000C3E  0D01               	mullw	1
  9943  000C40  50F3               	movf	prodl,w,c
  9944  000C42  2568               	addwf	AESEncode@key& (0+255),w,b
  9945  000C44  6ED9               	movwf	fsr2l,c
  9946  000C46  50F4               	movf	prodh,w,c
  9947  000C48  2169               	addwfc	(AESEncode@key+1)& (0+255),w,b
  9948  000C4A  6EDA               	movwf	fsr2h,c
  9949  000C4C  50DF               	movf	indf2,w,c
  9950  000C4E  6F6A               	movwf	??_AESEncode& (0+255),b
  9951  000C50  517C               	movf	AESEncode@i& (0+255),w,b
  9952  000C52  0D01               	mullw	1
  9953  000C54  50F3               	movf	prodl,w,c
  9954  000C56  2566               	addwf	AESEncode@block& (0+255),w,b
  9955  000C58  6ED9               	movwf	fsr2l,c
  9956  000C5A  50F4               	movf	prodh,w,c
  9957  000C5C  2167               	addwfc	(AESEncode@block+1)& (0+255),w,b
  9958  000C5E  6EDA               	movwf	fsr2h,c
  9959  000C60  516A               	movf	??_AESEncode& (0+255),w,b
  9960  000C62  1ADF               	xorwf	indf2,f,c
  9961                           
  9962                           ; BSR set to: 0
  9963  000C64  2B7C               	incf	AESEncode@i& (0+255),f,b
  9964  000C66  D7E6               	goto	l7754
  9965  000C68                     u6590:
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;AES.c: 305: }
  9969                           ;AES.c: 307: _roundCounter--;
  9970                           
  9971                           ; BSR set to: 0
  9972  000C68  07F9               	decf	__roundCounter& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;AES.c: 308: }
  9976                           ;AES.c: 309: while(_roundCounter !=0);
  9977  000C6A  51F9               	movf	__roundCounter& (0+255),w,b
  9978  000C6C  B4D8               	btfsc	status,2,c
  9979  000C6E  0012               	return	
  9980  000C70  D680               	goto	u6490
  9981  000C72                     __end_of_AESEncode:
  9982                           	opt stack 0
  9983                           tblptru	equ	0xFF8
  9984                           tblptrh	equ	0xFF7
  9985                           tblptrl	equ	0xFF6
  9986                           tablat	equ	0xFF5
  9987                           prodh	equ	0xFF4
  9988                           prodl	equ	0xFF3
  9989                           intcon	equ	0xFF2
  9990                           intcon2	equ	0xFF1
  9991                           intcon3	equ	0xFF0
  9992                           indf0	equ	0xFEF
  9993                           postinc0	equ	0xFEE
  9994                           plusw0	equ	0xFEB
  9995                           fsr0h	equ	0xFEA
  9996                           fsr0l	equ	0xFE9
  9997                           wreg	equ	0xFE8
  9998                           indf2	equ	0xFDF
  9999                           postinc2	equ	0xFDE
 10000                           postdec2	equ	0xFDD
 10001                           plusw2	equ	0xFDB
 10002                           fsr2h	equ	0xFDA
 10003                           fsr2l	equ	0xFD9
 10004                           status	equ	0xFD8
 10005                           
 10006 ;; *************** function _EncodeShiftRow *****************
 10007 ;; Defined at:
 10008 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 10011 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 10012 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  temp            1    2[BANK0 ] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;Total ram usage:        3 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    7
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_AESEncode
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           	psect	text54
 10039  00194A                     __ptext54:
 10040                           	opt stack 0
 10041  00194A                     _EncodeShiftRow:
 10042                           	opt stack 16
 10043                           
 10044                           ;AES.c: 387: unsigned char temp;
 10045                           ;AES.c: 392: temp=stateTable[1];
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;incstack = 0
 10049  00194A  0100               	movlb	0	; () banked
 10050  00194C  EE20 F001          	lfsr	2,1
 10051  001950  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10052  001952  26D9               	addwf	fsr2l,f,c
 10053  001954  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10054  001956  22DA               	addwfc	fsr2h,f,c
 10055  001958  50DF               	movf	indf2,w,c
 10056  00195A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;AES.c: 393: stateTable[1]=stateTable[5];
 10060  00195C  EE20 F005          	lfsr	2,5
 10061  001960  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10062  001962  26D9               	addwf	fsr2l,f,c
 10063  001964  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10064  001966  22DA               	addwfc	fsr2h,f,c
 10065  001968  EE00 F001          	lfsr	0,1
 10066  00196C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10067  00196E  26E9               	addwf	fsr0l,f,c
 10068  001970  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10069  001972  22EA               	addwfc	fsr0h,f,c
 10070  001974  CFDF FFEF          	movff	indf2,indf0
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;AES.c: 394: stateTable[5]=stateTable[9];
 10074  001978  EE20 F009          	lfsr	2,9
 10075  00197C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10076  00197E  26D9               	addwf	fsr2l,f,c
 10077  001980  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10078  001982  22DA               	addwfc	fsr2h,f,c
 10079  001984  EE00 F005          	lfsr	0,5
 10080  001988  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10081  00198A  26E9               	addwf	fsr0l,f,c
 10082  00198C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10083  00198E  22EA               	addwfc	fsr0h,f,c
 10084  001990  CFDF FFEF          	movff	indf2,indf0
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;AES.c: 395: stateTable[9]=stateTable[13];
 10088  001994  EE20 F00D          	lfsr	2,13
 10089  001998  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10090  00199A  26D9               	addwf	fsr2l,f,c
 10091  00199C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10092  00199E  22DA               	addwfc	fsr2h,f,c
 10093  0019A0  EE00 F009          	lfsr	0,9
 10094  0019A4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10095  0019A6  26E9               	addwf	fsr0l,f,c
 10096  0019A8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10097  0019AA  22EA               	addwfc	fsr0h,f,c
 10098  0019AC  CFDF FFEF          	movff	indf2,indf0
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;AES.c: 396: stateTable[13]=temp;
 10102  0019B0  EE20 F00D          	lfsr	2,13
 10103  0019B4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10104  0019B6  26D9               	addwf	fsr2l,f,c
 10105  0019B8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10106  0019BA  22DA               	addwfc	fsr2h,f,c
 10107  0019BC  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;AES.c: 399: temp=stateTable[2];
 10111  0019C0  EE20 F002          	lfsr	2,2
 10112  0019C4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10113  0019C6  26D9               	addwf	fsr2l,f,c
 10114  0019C8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10115  0019CA  22DA               	addwfc	fsr2h,f,c
 10116  0019CC  50DF               	movf	indf2,w,c
 10117  0019CE  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;AES.c: 400: stateTable[2]=stateTable[10];
 10121  0019D0  EE20 F00A          	lfsr	2,10
 10122  0019D4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10123  0019D6  26D9               	addwf	fsr2l,f,c
 10124  0019D8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10125  0019DA  22DA               	addwfc	fsr2h,f,c
 10126  0019DC  EE00 F002          	lfsr	0,2
 10127  0019E0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10128  0019E2  26E9               	addwf	fsr0l,f,c
 10129  0019E4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10130  0019E6  22EA               	addwfc	fsr0h,f,c
 10131  0019E8  CFDF FFEF          	movff	indf2,indf0
 10132                           
 10133                           ;AES.c: 401: stateTable[10]=temp;
 10134  0019EC  EE20 F00A          	lfsr	2,10
 10135  0019F0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10136  0019F2  26D9               	addwf	fsr2l,f,c
 10137  0019F4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10138  0019F6  22DA               	addwfc	fsr2h,f,c
 10139  0019F8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10140                           
 10141                           ;AES.c: 402: temp=stateTable[14];
 10142  0019FC  EE20 F00E          	lfsr	2,14
 10143  001A00  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10144  001A02  26D9               	addwf	fsr2l,f,c
 10145  001A04  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10146  001A06  22DA               	addwfc	fsr2h,f,c
 10147  001A08  50DF               	movf	indf2,w,c
 10148  001A0A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;AES.c: 403: stateTable[14]=stateTable[6];
 10152  001A0C  EE20 F006          	lfsr	2,6
 10153  001A10  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10154  001A12  26D9               	addwf	fsr2l,f,c
 10155  001A14  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10156  001A16  22DA               	addwfc	fsr2h,f,c
 10157  001A18  EE00 F00E          	lfsr	0,14
 10158  001A1C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10159  001A1E  26E9               	addwf	fsr0l,f,c
 10160  001A20  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10161  001A22  22EA               	addwfc	fsr0h,f,c
 10162  001A24  CFDF FFEF          	movff	indf2,indf0
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;AES.c: 404: stateTable[6]=temp;
 10166  001A28  EE20 F006          	lfsr	2,6
 10167  001A2C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10168  001A2E  26D9               	addwf	fsr2l,f,c
 10169  001A30  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10170  001A32  22DA               	addwfc	fsr2h,f,c
 10171  001A34  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;AES.c: 407: temp=stateTable[3];
 10175  001A38  EE20 F003          	lfsr	2,3
 10176  001A3C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10177  001A3E  26D9               	addwf	fsr2l,f,c
 10178  001A40  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10179  001A42  22DA               	addwfc	fsr2h,f,c
 10180  001A44  50DF               	movf	indf2,w,c
 10181  001A46  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;AES.c: 408: stateTable[3]=stateTable[15];
 10185  001A48  EE20 F00F          	lfsr	2,15
 10186  001A4C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10187  001A4E  26D9               	addwf	fsr2l,f,c
 10188  001A50  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10189  001A52  22DA               	addwfc	fsr2h,f,c
 10190  001A54  EE00 F003          	lfsr	0,3
 10191  001A58  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10192  001A5A  26E9               	addwf	fsr0l,f,c
 10193  001A5C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10194  001A5E  22EA               	addwfc	fsr0h,f,c
 10195  001A60  CFDF FFEF          	movff	indf2,indf0
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;AES.c: 409: stateTable[15]=stateTable[11];
 10199  001A64  EE20 F00B          	lfsr	2,11
 10200  001A68  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10201  001A6A  26D9               	addwf	fsr2l,f,c
 10202  001A6C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10203  001A6E  22DA               	addwfc	fsr2h,f,c
 10204  001A70  EE00 F00F          	lfsr	0,15
 10205  001A74  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10206  001A76  26E9               	addwf	fsr0l,f,c
 10207  001A78  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10208  001A7A  22EA               	addwfc	fsr0h,f,c
 10209  001A7C  CFDF FFEF          	movff	indf2,indf0
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;AES.c: 410: stateTable[11]=stateTable[7];
 10213  001A80  EE20 F007          	lfsr	2,7
 10214  001A84  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10215  001A86  26D9               	addwf	fsr2l,f,c
 10216  001A88  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10217  001A8A  22DA               	addwfc	fsr2h,f,c
 10218  001A8C  EE00 F00B          	lfsr	0,11
 10219  001A90  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10220  001A92  26E9               	addwf	fsr0l,f,c
 10221  001A94  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10222  001A96  22EA               	addwfc	fsr0h,f,c
 10223  001A98  CFDF FFEF          	movff	indf2,indf0
 10224                           
 10225                           ;AES.c: 411: stateTable[7]=temp;
 10226  001A9C  EE20 F007          	lfsr	2,7
 10227  001AA0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 10228  001AA2  26D9               	addwf	fsr2l,f,c
 10229  001AA4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 10230  001AA6  22DA               	addwfc	fsr2h,f,c
 10231  001AA8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 10232                           
 10233                           ; BSR set to: 0
 10234  001AAC  0012               	return		;funcret
 10235  001AAE                     __end_of_EncodeShiftRow:
 10236                           	opt stack 0
 10237                           tblptru	equ	0xFF8
 10238                           tblptrh	equ	0xFF7
 10239                           tblptrl	equ	0xFF6
 10240                           tablat	equ	0xFF5
 10241                           prodh	equ	0xFF4
 10242                           prodl	equ	0xFF3
 10243                           intcon	equ	0xFF2
 10244                           intcon2	equ	0xFF1
 10245                           intcon3	equ	0xFF0
 10246                           indf0	equ	0xFEF
 10247                           postinc0	equ	0xFEE
 10248                           plusw0	equ	0xFEB
 10249                           fsr0h	equ	0xFEA
 10250                           fsr0l	equ	0xFE9
 10251                           wreg	equ	0xFE8
 10252                           indf2	equ	0xFDF
 10253                           postinc2	equ	0xFDE
 10254                           postdec2	equ	0xFDD
 10255                           plusw2	equ	0xFDB
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function _EncKeySchedule *****************
 10261 ;; Defined at:
 10262 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  key             2    0[BANK0 ] PTR unsigned char 
 10265 ;;		 -> AESEncodeLoRa@useKey(16), 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;		None
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  1    wreg      void 
 10270 ;; Registers used:
 10271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;Total ram usage:        6 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; Hardware stack levels required when called:    7
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_AESEncode
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           	psect	text55
 10292  000C72                     __ptext55:
 10293                           	opt stack 0
 10294  000C72                     _EncKeySchedule:
 10295                           	opt stack 16
 10296                           
 10297                           ;AES.c: 340: key[0]^=STable[key[13]];
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;incstack = 0
 10301  000C72  0100               	movlb	0	; () banked
 10302  000C74  EE20 F00D          	lfsr	2,13
 10303  000C78  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10304  000C7A  26D9               	addwf	fsr2l,f,c
 10305  000C7C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10306  000C7E  22DA               	addwfc	fsr2h,f,c
 10307  000C80  50DF               	movf	indf2,w,c
 10308  000C82  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10309  000C84  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10310  000C86  0D01               	mullw	1
 10311  000C88  0E67               	movlw	low _STable
 10312  000C8A  24F3               	addwf	prodl,w,c
 10313  000C8C  6EF6               	movwf	tblptrl,c
 10314  000C8E  0EFE               	movlw	high _STable
 10315  000C90  20F4               	addwfc	prodh,w,c
 10316  000C92  6EF7               	movwf	tblptrh,c
 10317  000C94                     	if	1	;There are 3 active tblptr bytes
 10318  000C94  6AF8               	clrf	tblptru,c
 10319  000C96  0E00               	movlw	low (__mediumconst shr (0+16))
 10320  000C98  22F8               	addwfc	tblptru,f,c
 10321  000C9A                     	endif
 10322  000C9A  0008               	tblrd		*
 10323  000C9C  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10324  000CA0  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10325  000CA4  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10326  000CA8  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10327  000CAA  1ADF               	xorwf	indf2,f,c
 10328                           
 10329                           ;AES.c: 341: key[1]^=STable[key[14]];
 10330  000CAC  EE20 F00E          	lfsr	2,14
 10331  000CB0  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10332  000CB2  26D9               	addwf	fsr2l,f,c
 10333  000CB4  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10334  000CB6  22DA               	addwfc	fsr2h,f,c
 10335  000CB8  50DF               	movf	indf2,w,c
 10336  000CBA  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10337  000CBC  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10338  000CBE  0D01               	mullw	1
 10339  000CC0  0E67               	movlw	low _STable
 10340  000CC2  24F3               	addwf	prodl,w,c
 10341  000CC4  6EF6               	movwf	tblptrl,c
 10342  000CC6  0EFE               	movlw	high _STable
 10343  000CC8  20F4               	addwfc	prodh,w,c
 10344  000CCA  6EF7               	movwf	tblptrh,c
 10345  000CCC                     	if	1	;There are 3 active tblptr bytes
 10346  000CCC  6AF8               	clrf	tblptru,c
 10347  000CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 10348  000CD0  22F8               	addwfc	tblptru,f,c
 10349  000CD2                     	endif
 10350  000CD2  0008               	tblrd		*
 10351  000CD4  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10352  000CD8  EE20 F001          	lfsr	2,1
 10353  000CDC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10354  000CDE  26D9               	addwf	fsr2l,f,c
 10355  000CE0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10356  000CE2  22DA               	addwfc	fsr2h,f,c
 10357  000CE4  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10358  000CE6  1ADF               	xorwf	indf2,f,c
 10359                           
 10360                           ;AES.c: 342: key[2]^=STable[key[15]];
 10361  000CE8  EE20 F00F          	lfsr	2,15
 10362  000CEC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10363  000CEE  26D9               	addwf	fsr2l,f,c
 10364  000CF0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10365  000CF2  22DA               	addwfc	fsr2h,f,c
 10366  000CF4  50DF               	movf	indf2,w,c
 10367  000CF6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10368  000CF8  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10369  000CFA  0D01               	mullw	1
 10370  000CFC  0E67               	movlw	low _STable
 10371  000CFE  24F3               	addwf	prodl,w,c
 10372  000D00  6EF6               	movwf	tblptrl,c
 10373  000D02  0EFE               	movlw	high _STable
 10374  000D04  20F4               	addwfc	prodh,w,c
 10375  000D06  6EF7               	movwf	tblptrh,c
 10376  000D08                     	if	1	;There are 3 active tblptr bytes
 10377  000D08  6AF8               	clrf	tblptru,c
 10378  000D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 10379  000D0C  22F8               	addwfc	tblptru,f,c
 10380  000D0E                     	endif
 10381  000D0E  0008               	tblrd		*
 10382  000D10  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10383  000D14  EE20 F002          	lfsr	2,2
 10384  000D18  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10385  000D1A  26D9               	addwf	fsr2l,f,c
 10386  000D1C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10387  000D1E  22DA               	addwfc	fsr2h,f,c
 10388  000D20  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10389  000D22  1ADF               	xorwf	indf2,f,c
 10390                           
 10391                           ;AES.c: 343: key[3]^=STable[key[12]];
 10392  000D24  EE20 F00C          	lfsr	2,12
 10393  000D28  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10394  000D2A  26D9               	addwf	fsr2l,f,c
 10395  000D2C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10396  000D2E  22DA               	addwfc	fsr2h,f,c
 10397  000D30  50DF               	movf	indf2,w,c
 10398  000D32  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10399  000D34  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10400  000D36  0D01               	mullw	1
 10401  000D38  0E67               	movlw	low _STable
 10402  000D3A  24F3               	addwf	prodl,w,c
 10403  000D3C  6EF6               	movwf	tblptrl,c
 10404  000D3E  0EFE               	movlw	high _STable
 10405  000D40  20F4               	addwfc	prodh,w,c
 10406  000D42  6EF7               	movwf	tblptrh,c
 10407  000D44                     	if	1	;There are 3 active tblptr bytes
 10408  000D44  6AF8               	clrf	tblptru,c
 10409  000D46  0E00               	movlw	low (__mediumconst shr (0+16))
 10410  000D48  22F8               	addwfc	tblptru,f,c
 10411  000D4A                     	endif
 10412  000D4A  0008               	tblrd		*
 10413  000D4C  CFF5 F063          	movff	tablat,??_EncKeySchedule+1
 10414  000D50  EE20 F003          	lfsr	2,3
 10415  000D54  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10416  000D56  26D9               	addwf	fsr2l,f,c
 10417  000D58  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10418  000D5A  22DA               	addwfc	fsr2h,f,c
 10419  000D5C  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10420  000D5E  1ADF               	xorwf	indf2,f,c
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;AES.c: 345: key[0]^=_rcon;
 10424  000D60  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10425  000D64  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10426  000D68  51F8               	movf	__rcon& (0+255),w,b
 10427  000D6A  1ADF               	xorwf	indf2,f,c
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 10431  000D6C  0E7F               	movlw	127
 10432  000D6E  65F8               	cpfsgt	__rcon& (0+255),b
 10433  000D70  D00C               	goto	l327
 10434                           
 10435                           ; BSR set to: 0
 10436  000D72  0E1B               	movlw	27
 10437  000D74  C0F8  F062         	movff	__rcon,??_EncKeySchedule
 10438  000D78  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 10439  000D7A  90D8               	bcf	status,0,c
 10440  000D7C  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 10441  000D7E  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 10442  000D80  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 10443  000D82  6F64               	movwf	_EncKeySchedule$513& (0+255),b
 10444  000D84  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 10445  000D86  6F65               	movwf	(_EncKeySchedule$513+1)& (0+255),b
 10446  000D88  D005               	goto	l329
 10447  000D8A                     l327:
 10448                           
 10449                           ; BSR set to: 0
 10450                           
 10451                           ; BSR set to: 0
 10452  000D8A  90D8               	bcf	status,0,c
 10453  000D8C  35F8               	rlcf	__rcon& (0+255),w,b
 10454  000D8E  6F64               	movwf	_EncKeySchedule$513& (0+255),b
 10455  000D90  6B65               	clrf	(_EncKeySchedule$513+1)& (0+255),b
 10456  000D92  3765               	rlcf	(_EncKeySchedule$513+1)& (0+255),f,b
 10457  000D94                     l329:
 10458                           
 10459                           ; BSR set to: 0
 10460                           
 10461                           ; BSR set to: 0
 10462  000D94  C064  F0F8         	movff	_EncKeySchedule$513,__rcon
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;AES.c: 349: key[4]^=key[0];
 10466  000D98  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 10467  000D9C  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 10468  000DA0  50DF               	movf	indf2,w,c
 10469  000DA2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10470  000DA4  EE20 F004          	lfsr	2,4
 10471  000DA8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10472  000DAA  26D9               	addwf	fsr2l,f,c
 10473  000DAC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10474  000DAE  22DA               	addwfc	fsr2h,f,c
 10475  000DB0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10476  000DB2  1ADF               	xorwf	indf2,f,c
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;AES.c: 350: key[5]^=key[1];
 10480  000DB4  EE20 F001          	lfsr	2,1
 10481  000DB8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10482  000DBA  26D9               	addwf	fsr2l,f,c
 10483  000DBC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10484  000DBE  22DA               	addwfc	fsr2h,f,c
 10485  000DC0  50DF               	movf	indf2,w,c
 10486  000DC2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10487  000DC4  EE20 F005          	lfsr	2,5
 10488  000DC8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10489  000DCA  26D9               	addwf	fsr2l,f,c
 10490  000DCC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10491  000DCE  22DA               	addwfc	fsr2h,f,c
 10492  000DD0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10493  000DD2  1ADF               	xorwf	indf2,f,c
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;AES.c: 351: key[6]^=key[2];
 10497  000DD4  EE20 F002          	lfsr	2,2
 10498  000DD8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10499  000DDA  26D9               	addwf	fsr2l,f,c
 10500  000DDC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10501  000DDE  22DA               	addwfc	fsr2h,f,c
 10502  000DE0  50DF               	movf	indf2,w,c
 10503  000DE2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10504  000DE4  EE20 F006          	lfsr	2,6
 10505  000DE8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10506  000DEA  26D9               	addwf	fsr2l,f,c
 10507  000DEC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10508  000DEE  22DA               	addwfc	fsr2h,f,c
 10509  000DF0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10510  000DF2  1ADF               	xorwf	indf2,f,c
 10511                           
 10512                           ; BSR set to: 0
 10513                           ;AES.c: 352: key[7]^=key[3];
 10514  000DF4  EE20 F003          	lfsr	2,3
 10515  000DF8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10516  000DFA  26D9               	addwf	fsr2l,f,c
 10517  000DFC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10518  000DFE  22DA               	addwfc	fsr2h,f,c
 10519  000E00  50DF               	movf	indf2,w,c
 10520  000E02  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10521  000E04  EE20 F007          	lfsr	2,7
 10522  000E08  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10523  000E0A  26D9               	addwf	fsr2l,f,c
 10524  000E0C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10525  000E0E  22DA               	addwfc	fsr2h,f,c
 10526  000E10  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10527  000E12  1ADF               	xorwf	indf2,f,c
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;AES.c: 355: key[8]^=key[4];
 10531  000E14  EE20 F004          	lfsr	2,4
 10532  000E18  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10533  000E1A  26D9               	addwf	fsr2l,f,c
 10534  000E1C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10535  000E1E  22DA               	addwfc	fsr2h,f,c
 10536  000E20  50DF               	movf	indf2,w,c
 10537  000E22  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10538  000E24  EE20 F008          	lfsr	2,8
 10539  000E28  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10540  000E2A  26D9               	addwf	fsr2l,f,c
 10541  000E2C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10542  000E2E  22DA               	addwfc	fsr2h,f,c
 10543  000E30  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10544  000E32  1ADF               	xorwf	indf2,f,c
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;AES.c: 356: key[9]^=key[5];
 10548  000E34  EE20 F005          	lfsr	2,5
 10549  000E38  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10550  000E3A  26D9               	addwf	fsr2l,f,c
 10551  000E3C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10552  000E3E  22DA               	addwfc	fsr2h,f,c
 10553  000E40  50DF               	movf	indf2,w,c
 10554  000E42  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10555  000E44  EE20 F009          	lfsr	2,9
 10556  000E48  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10557  000E4A  26D9               	addwf	fsr2l,f,c
 10558  000E4C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10559  000E4E  22DA               	addwfc	fsr2h,f,c
 10560  000E50  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10561  000E52  1ADF               	xorwf	indf2,f,c
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;AES.c: 357: key[10]^=key[6];
 10565  000E54  EE20 F006          	lfsr	2,6
 10566  000E58  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10567  000E5A  26D9               	addwf	fsr2l,f,c
 10568  000E5C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10569  000E5E  22DA               	addwfc	fsr2h,f,c
 10570  000E60  50DF               	movf	indf2,w,c
 10571  000E62  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10572  000E64  EE20 F00A          	lfsr	2,10
 10573  000E68  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10574  000E6A  26D9               	addwf	fsr2l,f,c
 10575  000E6C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10576  000E6E  22DA               	addwfc	fsr2h,f,c
 10577  000E70  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10578  000E72  1ADF               	xorwf	indf2,f,c
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;AES.c: 358: key[11]^=key[7];
 10582  000E74  EE20 F007          	lfsr	2,7
 10583  000E78  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10584  000E7A  26D9               	addwf	fsr2l,f,c
 10585  000E7C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10586  000E7E  22DA               	addwfc	fsr2h,f,c
 10587  000E80  50DF               	movf	indf2,w,c
 10588  000E82  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10589  000E84  EE20 F00B          	lfsr	2,11
 10590  000E88  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10591  000E8A  26D9               	addwf	fsr2l,f,c
 10592  000E8C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10593  000E8E  22DA               	addwfc	fsr2h,f,c
 10594  000E90  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10595  000E92  1ADF               	xorwf	indf2,f,c
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;AES.c: 361: key[12]^=key[8];
 10599  000E94  EE20 F008          	lfsr	2,8
 10600  000E98  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10601  000E9A  26D9               	addwf	fsr2l,f,c
 10602  000E9C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10603  000E9E  22DA               	addwfc	fsr2h,f,c
 10604  000EA0  50DF               	movf	indf2,w,c
 10605  000EA2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10606  000EA4  EE20 F00C          	lfsr	2,12
 10607  000EA8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10608  000EAA  26D9               	addwf	fsr2l,f,c
 10609  000EAC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10610  000EAE  22DA               	addwfc	fsr2h,f,c
 10611  000EB0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10612  000EB2  1ADF               	xorwf	indf2,f,c
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;AES.c: 362: key[13]^=key[9];
 10616  000EB4  EE20 F009          	lfsr	2,9
 10617  000EB8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10618  000EBA  26D9               	addwf	fsr2l,f,c
 10619  000EBC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10620  000EBE  22DA               	addwfc	fsr2h,f,c
 10621  000EC0  50DF               	movf	indf2,w,c
 10622  000EC2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10623  000EC4  EE20 F00D          	lfsr	2,13
 10624  000EC8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10625  000ECA  26D9               	addwf	fsr2l,f,c
 10626  000ECC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10627  000ECE  22DA               	addwfc	fsr2h,f,c
 10628  000ED0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10629  000ED2  1ADF               	xorwf	indf2,f,c
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;AES.c: 363: key[14]^=key[10];
 10633  000ED4  EE20 F00A          	lfsr	2,10
 10634  000ED8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10635  000EDA  26D9               	addwf	fsr2l,f,c
 10636  000EDC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10637  000EDE  22DA               	addwfc	fsr2h,f,c
 10638  000EE0  50DF               	movf	indf2,w,c
 10639  000EE2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10640  000EE4  EE20 F00E          	lfsr	2,14
 10641  000EE8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10642  000EEA  26D9               	addwf	fsr2l,f,c
 10643  000EEC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10644  000EEE  22DA               	addwfc	fsr2h,f,c
 10645  000EF0  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10646  000EF2  1ADF               	xorwf	indf2,f,c
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;AES.c: 364: key[15]^=key[11];
 10650  000EF4  EE20 F00B          	lfsr	2,11
 10651  000EF8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10652  000EFA  26D9               	addwf	fsr2l,f,c
 10653  000EFC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10654  000EFE  22DA               	addwfc	fsr2h,f,c
 10655  000F00  50DF               	movf	indf2,w,c
 10656  000F02  6F62               	movwf	??_EncKeySchedule& (0+255),b
 10657  000F04  EE20 F00F          	lfsr	2,15
 10658  000F08  5160               	movf	EncKeySchedule@key& (0+255),w,b
 10659  000F0A  26D9               	addwf	fsr2l,f,c
 10660  000F0C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 10661  000F0E  22DA               	addwfc	fsr2h,f,c
 10662  000F10  5162               	movf	??_EncKeySchedule& (0+255),w,b
 10663  000F12  1ADF               	xorwf	indf2,f,c
 10664                           
 10665                           ; BSR set to: 0
 10666  000F14  0012               	return		;funcret
 10667  000F16                     __end_of_EncKeySchedule:
 10668                           	opt stack 0
 10669                           tblptru	equ	0xFF8
 10670                           tblptrh	equ	0xFF7
 10671                           tblptrl	equ	0xFF6
 10672                           tablat	equ	0xFF5
 10673                           prodh	equ	0xFF4
 10674                           prodl	equ	0xFF3
 10675                           intcon	equ	0xFF2
 10676                           intcon2	equ	0xFF1
 10677                           intcon3	equ	0xFF0
 10678                           indf0	equ	0xFEF
 10679                           postinc0	equ	0xFEE
 10680                           plusw0	equ	0xFEB
 10681                           fsr0h	equ	0xFEA
 10682                           fsr0l	equ	0xFE9
 10683                           wreg	equ	0xFE8
 10684                           indf2	equ	0xFDF
 10685                           postinc2	equ	0xFDE
 10686                           postdec2	equ	0xFDD
 10687                           plusw2	equ	0xFDB
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _LORAWAN_Init *****************
 10693 ;; Defined at:
 10694 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 10697 ;;		 -> RxData(1), 
 10698 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 10699 ;;		 -> RxJoinResponse(1), 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;Total ram usage:        4 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:   13
 10718 ;; This function calls:
 10719 ;;		_CreateAllSoftwareTimers
 10720 ;;		_LORAWAN_Reset
 10721 ;;		_RADIO_Init
 10722 ;;		_RADIO_ReadRandom
 10723 ;;		_SetCallbackSoftwareTimers
 10724 ;;		_StopAllSoftwareTimers
 10725 ;;		_srand
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text56
 10732  002EBA                     __ptext56:
 10733                           	opt stack 0
 10734  002EBA                     _LORAWAN_Init:
 10735                           	opt stack 17
 10736                           
 10737                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;incstack = 0
 10741  002EBA  0102               	movlb	2	; () banked
 10742  002EBC  51F0               	movf	(_loRa+240)& (0+255),w,b
 10743  002EBE  A4D8               	btfss	status,2,c
 10744  002EC0  D008               	goto	l966
 10745                           
 10746                           ; BSR set to: 2
 10747                           ;lorawan_eu.c: 127: {
 10748                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 10749  002EC2  ECBF  F018         	call	_CreateAllSoftwareTimers	;wreg free
 10750                           
 10751                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 10752  002EC6  EC2E  F012         	call	_SetCallbackSoftwareTimers	;wreg free
 10753                           
 10754                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 10755  002ECA  0E01               	movlw	1
 10756  002ECC  0102               	movlb	2	; () banked
 10757  002ECE  6FF0               	movwf	(_loRa+240)& (0+255),b
 10758                           
 10759                           ;lorawan_eu.c: 131: }
 10760  002ED0  D002               	goto	l967
 10761  002ED2                     l966:
 10762                           
 10763                           ; BSR set to: 2
 10764                           ;lorawan_eu.c: 132: else
 10765                           ;lorawan_eu.c: 133: {
 10766                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 10767                           
 10768                           ; BSR set to: 2
 10769  002ED2  EC96  F018         	call	_StopAllSoftwareTimers	;wreg free
 10770  002ED6                     l967:
 10771                           
 10772                           ;lorawan_eu.c: 135: }
 10773                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 10774  002ED6  C0A6  F0E0         	movff	LORAWAN_Init@RxPayload,_rxPayload
 10775  002EDA  C0A7  F0E1         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 10776                           
 10777                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 10778  002EDE  C0A8  F0E2         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 10779  002EE2  C0A9  F0E3         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 10780                           
 10781                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 10782  002EE6  0EFF               	movlw	low (_radioBuffer+16)
 10783  002EE8  0100               	movlb	0	; () banked
 10784  002EEA  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 10785  002EEC  0E05               	movlw	high (_radioBuffer+16)
 10786  002EEE  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 10787  002EF0  0EA0               	movlw	160
 10788  002EF2  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 10789  002EF4  0E27               	movlw	39
 10790  002EF6  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 10791  002EF8  0EBE               	movlw	190
 10792  002EFA  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 10793  002EFC  0E33               	movlw	51
 10794  002EFE  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 10795  002F00  EC8E  F009         	call	_RADIO_Init	;wreg free
 10796                           
 10797                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 10798  002F04  ECA0  F013         	call	_RADIO_ReadRandom	;wreg free
 10799  002F08  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 10800  002F0C  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 10801  002F10  ECD6  F01B         	call	_srand	;wreg free
 10802                           
 10803                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 10804  002F14  0E00               	movlw	0
 10805  002F16  ECA7  F008         	call	_LORAWAN_Reset
 10806  002F1A  0012               	return		;funcret
 10807  002F1C                     __end_of_LORAWAN_Init:
 10808                           	opt stack 0
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           intcon2	equ	0xFF1
 10817                           intcon3	equ	0xFF0
 10818                           indf0	equ	0xFEF
 10819                           postinc0	equ	0xFEE
 10820                           plusw0	equ	0xFEB
 10821                           fsr0h	equ	0xFEA
 10822                           fsr0l	equ	0xFE9
 10823                           wreg	equ	0xFE8
 10824                           indf2	equ	0xFDF
 10825                           postinc2	equ	0xFDE
 10826                           postdec2	equ	0xFDD
 10827                           plusw2	equ	0xFDB
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           
 10832 ;; *************** function _srand *****************
 10833 ;; Defined at:
 10834 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  x               2   18[BANK0 ] unsigned int 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      void 
 10841 ;; Registers used:
 10842 ;;		status,2
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;Total ram usage:        2 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; Hardware stack levels required when called:    7
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_LORAWAN_Init
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text57
 10863  0037AC                     __ptext57:
 10864                           	opt stack 0
 10865  0037AC                     _srand:
 10866                           	opt stack 22
 10867                           
 10868                           ;incstack = 0
 10869  0037AC  C072  F052         	movff	srand@x,_randx
 10870  0037B0  C073  F053         	movff	srand@x+1,_randx+1
 10871  0037B4  6A54               	clrf	_randx+2,c
 10872  0037B6  6A55               	clrf	_randx+3,c
 10873  0037B8  0012               	return		;funcret
 10874  0037BA                     __end_of_srand:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           intcon2	equ	0xFF1
 10884                           intcon3	equ	0xFF0
 10885                           indf0	equ	0xFEF
 10886                           postinc0	equ	0xFEE
 10887                           plusw0	equ	0xFEB
 10888                           fsr0h	equ	0xFEA
 10889                           fsr0l	equ	0xFE9
 10890                           wreg	equ	0xFE8
 10891                           indf2	equ	0xFDF
 10892                           postinc2	equ	0xFDE
 10893                           postdec2	equ	0xFDD
 10894                           plusw2	equ	0xFDB
 10895                           fsr2h	equ	0xFDA
 10896                           fsr2l	equ	0xFD9
 10897                           status	equ	0xFD8
 10898                           
 10899 ;; *************** function _SetCallbackSoftwareTimers *****************
 10900 ;; Defined at:
 10901 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;		None
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;		None
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      void 
 10908 ;; Registers used:
 10909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10919 ;;Total ram usage:        0 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    8
 10922 ;; This function calls:
 10923 ;;		_SwTimerSetCallback
 10924 ;; This function is called by:
 10925 ;;		_LORAWAN_Init
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text58
 10930  00245C                     __ptext58:
 10931                           	opt stack 0
 10932  00245C                     _SetCallbackSoftwareTimers:
 10933                           	opt stack 21
 10934                           
 10935                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 10936                           
 10937                           ;incstack = 0
 10938  00245C  0E00               	movlw	0
 10939  00245E  0100               	movlb	0	; () banked
 10940  002460  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10941  002462  0E00               	movlw	0
 10942  002464  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10943  002466  0E00               	movlw	0
 10944  002468  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10945  00246A  0102               	movlb	2	; () banked
 10946  00246C  51E2               	movf	(_loRa+226)& (0+255),w,b
 10947  00246E  EC2D  F019         	call	_SwTimerSetCallback
 10948                           
 10949                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 10950  002472  0E00               	movlw	0
 10951  002474  0100               	movlb	0	; () banked
 10952  002476  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10953  002478  0E00               	movlw	0
 10954  00247A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10955  00247C  0E00               	movlw	0
 10956  00247E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10957  002480  0102               	movlb	2	; () banked
 10958  002482  51E3               	movf	(_loRa+227)& (0+255),w,b
 10959  002484  EC2D  F019         	call	_SwTimerSetCallback
 10960                           
 10961                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 10962  002488  0E00               	movlw	0
 10963  00248A  0100               	movlb	0	; () banked
 10964  00248C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10965  00248E  0E00               	movlw	0
 10966  002490  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10967  002492  0E00               	movlw	0
 10968  002494  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10969  002496  0102               	movlb	2	; () banked
 10970  002498  51E7               	movf	(_loRa+231)& (0+255),w,b
 10971  00249A  EC2D  F019         	call	_SwTimerSetCallback
 10972                           
 10973                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 10974  00249E  0E00               	movlw	0
 10975  0024A0  0100               	movlb	0	; () banked
 10976  0024A2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10977  0024A4  0E00               	movlw	0
 10978  0024A6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10979  0024A8  0E00               	movlw	0
 10980  0024AA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10981  0024AC  0102               	movlb	2	; () banked
 10982  0024AE  51E4               	movf	(_loRa+228)& (0+255),w,b
 10983  0024B0  EC2D  F019         	call	_SwTimerSetCallback
 10984                           
 10985                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 10986  0024B4  0E00               	movlw	0
 10987  0024B6  0100               	movlb	0	; () banked
 10988  0024B8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 10989  0024BA  0E00               	movlw	0
 10990  0024BC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 10991  0024BE  0E00               	movlw	0
 10992  0024C0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 10993  0024C2  0102               	movlb	2	; () banked
 10994  0024C4  51E5               	movf	(_loRa+229)& (0+255),w,b
 10995  0024C6  EC2D  F019         	call	_SwTimerSetCallback
 10996                           
 10997                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 10998  0024CA  0E00               	movlw	0
 10999  0024CC  0100               	movlb	0	; () banked
 11000  0024CE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11001  0024D0  0E00               	movlw	0
 11002  0024D2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11003  0024D4  0E00               	movlw	0
 11004  0024D6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11005  0024D8  0102               	movlb	2	; () banked
 11006  0024DA  51E8               	movf	(_loRa+232)& (0+255),w,b
 11007  0024DC  EC2D  F019         	call	_SwTimerSetCallback
 11008                           
 11009                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 11010  0024E0  0E00               	movlw	0
 11011  0024E2  0100               	movlb	0	; () banked
 11012  0024E4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11013  0024E6  0E00               	movlw	0
 11014  0024E8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11015  0024EA  0E00               	movlw	0
 11016  0024EC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11017  0024EE  0102               	movlb	2	; () banked
 11018  0024F0  51E6               	movf	(_loRa+230)& (0+255),w,b
 11019  0024F2  EC2D  F019         	call	_SwTimerSetCallback
 11020                           
 11021                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 11022  0024F6  0E00               	movlw	0
 11023  0024F8  0100               	movlb	0	; () banked
 11024  0024FA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11025  0024FC  0E00               	movlw	0
 11026  0024FE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11027  002500  0E00               	movlw	0
 11028  002502  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11029  002504  0102               	movlb	2	; () banked
 11030  002506  51EA               	movf	(_loRa+234)& (0+255),w,b
 11031  002508  EC2D  F019         	call	_SwTimerSetCallback
 11032                           
 11033                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 11034  00250C  0E00               	movlw	0
 11035  00250E  0100               	movlb	0	; () banked
 11036  002510  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11037  002512  0E00               	movlw	0
 11038  002514  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11039  002516  0E00               	movlw	0
 11040  002518  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11041  00251A  0102               	movlb	2	; () banked
 11042  00251C  51F3               	movf	(_loRa+243)& (0+255),w,b
 11043  00251E  EC2D  F019         	call	_SwTimerSetCallback
 11044                           
 11045                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 11046  002522  0E00               	movlw	0
 11047  002524  0100               	movlb	0	; () banked
 11048  002526  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 11049  002528  0E00               	movlw	0
 11050  00252A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 11051  00252C  0E00               	movlw	0
 11052  00252E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 11053  002530  0102               	movlb	2	; () banked
 11054  002532  51E9               	movf	(_loRa+233)& (0+255),w,b
 11055  002534  EC2D  F019         	call	_SwTimerSetCallback
 11056  002538  0012               	return		;funcret
 11057  00253A                     __end_of_SetCallbackSoftwareTimers:
 11058                           	opt stack 0
 11059                           tblptru	equ	0xFF8
 11060                           tblptrh	equ	0xFF7
 11061                           tblptrl	equ	0xFF6
 11062                           tablat	equ	0xFF5
 11063                           prodh	equ	0xFF4
 11064                           prodl	equ	0xFF3
 11065                           intcon	equ	0xFF2
 11066                           intcon2	equ	0xFF1
 11067                           intcon3	equ	0xFF0
 11068                           indf0	equ	0xFEF
 11069                           postinc0	equ	0xFEE
 11070                           plusw0	equ	0xFEB
 11071                           fsr0h	equ	0xFEA
 11072                           fsr0l	equ	0xFE9
 11073                           wreg	equ	0xFE8
 11074                           indf2	equ	0xFDF
 11075                           postinc2	equ	0xFDE
 11076                           postdec2	equ	0xFDD
 11077                           plusw2	equ	0xFDB
 11078                           fsr2h	equ	0xFDA
 11079                           fsr2l	equ	0xFD9
 11080                           status	equ	0xFD8
 11081                           
 11082 ;; *************** function _RADIO_ReadRandom *****************
 11083 ;; Defined at:
 11084 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;  retVal          2   15[BANK0 ] unsigned int 
 11089 ;;  i               1   17[BANK0 ] unsigned char 
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  2   12[BANK0 ] unsigned int 
 11092 ;; Registers used:
 11093 ;;		wreg, status,2, status,0, cstack
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11099 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;Total ram usage:        6 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:   11
 11106 ;; This function calls:
 11107 ;;		_RADIO_RegisterRead
 11108 ;;		_RADIO_RegisterWrite
 11109 ;;		_RADIO_WriteMode
 11110 ;;		_SystemBlockingWaitMs
 11111 ;; This function is called by:
 11112 ;;		_LORAWAN_Init
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text59
 11117  002740                     __ptext59:
 11118                           	opt stack 0
 11119  002740                     _RADIO_ReadRandom:
 11120                           	opt stack 18
 11121                           
 11122                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 11123                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 11124                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 11125                           
 11126                           ;incstack = 0
 11127  002740  0E00               	movlw	0
 11128  002742  0100               	movlb	0	; () banked
 11129  002744  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 11130  002746  0E00               	movlw	0
 11131  002748  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 11135  00274A  0E01               	movlw	1
 11136  00274C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11137  00274E  0E01               	movlw	1
 11138  002750  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11139  002752  0E00               	movlw	0
 11140  002754  EC42  F010         	call	_RADIO_WriteMode
 11141                           
 11142                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 11143  002758  0EFF               	movlw	255
 11144  00275A  0100               	movlb	0	; () banked
 11145  00275C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11146  00275E  0E11               	movlw	17
 11147  002760  ECE6  F01A         	call	_RADIO_RegisterWrite
 11148                           
 11149                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 11150  002764  0E01               	movlw	1
 11151  002766  0100               	movlb	0	; () banked
 11152  002768  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11153  00276A  0E01               	movlw	1
 11154  00276C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11155  00276E  0E05               	movlw	5
 11156  002770  EC42  F010         	call	_RADIO_WriteMode
 11157                           
 11158                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 11159  002774  0E00               	movlw	0
 11160  002776  0100               	movlb	0	; () banked
 11161  002778  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 11162  00277A                     l10884:
 11163                           
 11164                           ; BSR set to: 0
 11165  00277A  0E0F               	movlw	15
 11166  00277C  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 11167  00277E  D001               	goto	l670
 11168  002780  D019               	goto	u11630
 11169  002782                     l670:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;radio_driver_SX1276.c: 1377: {
 11173                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 11174                           
 11175                           ; BSR set to: 0
 11176  002782  0E01               	movlw	1
 11177  002784  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 11178  002786  0E00               	movlw	0
 11179  002788  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 11180  00278A  0E00               	movlw	0
 11181  00278C  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 11182  00278E  0E00               	movlw	0
 11183  002790  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 11184  002792  EC02  F01A         	call	_SystemBlockingWaitMs	;wreg free
 11185                           
 11186                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 11187  002796  0100               	movlb	0	; () banked
 11188  002798  90D8               	bcf	status,0,c
 11189  00279A  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 11190  00279C  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 11194  00279E  0E2C               	movlw	44
 11195  0027A0  EC8B  F01A         	call	_RADIO_RegisterRead
 11196  0027A4  0100               	movlb	0	; () banked
 11197  0027A6  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 11198  0027A8  0E01               	movlw	1
 11199  0027AA  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 11200  0027AC  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 11201  0027AE  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 11202  0027B0  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 11203  0027B2  D7E3               	goto	l10884
 11204  0027B4                     u11630:
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;radio_driver_SX1276.c: 1381: }
 11208                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 11209                           
 11210                           ; BSR set to: 0
 11211  0027B4  0E01               	movlw	1
 11212  0027B6  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 11213  0027B8  0E01               	movlw	1
 11214  0027BA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11215  0027BC  0E00               	movlw	0
 11216  0027BE  EC42  F010         	call	_RADIO_WriteMode
 11217                           
 11218                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 11219  0027C2  0EFF               	movlw	255
 11220  0027C4  0100               	movlb	0	; () banked
 11221  0027C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11222  0027C8  0E12               	movlw	18
 11223  0027CA  ECE6  F01A         	call	_RADIO_RegisterWrite
 11224                           
 11225                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 11226  0027CE  0E00               	movlw	0
 11227  0027D0  0100               	movlb	0	; () banked
 11228  0027D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11229  0027D4  0E11               	movlw	17
 11230  0027D6  ECE6  F01A         	call	_RADIO_RegisterWrite
 11231                           
 11232                           ;radio_driver_SX1276.c: 1389: return retVal;
 11233  0027DA  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 11234  0027DE  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 11235  0027E2  0012               	return	
 11236  0027E4                     __end_of_RADIO_ReadRandom:
 11237                           	opt stack 0
 11238                           tblptru	equ	0xFF8
 11239                           tblptrh	equ	0xFF7
 11240                           tblptrl	equ	0xFF6
 11241                           tablat	equ	0xFF5
 11242                           prodh	equ	0xFF4
 11243                           prodl	equ	0xFF3
 11244                           intcon	equ	0xFF2
 11245                           intcon2	equ	0xFF1
 11246                           intcon3	equ	0xFF0
 11247                           indf0	equ	0xFEF
 11248                           postinc0	equ	0xFEE
 11249                           plusw0	equ	0xFEB
 11250                           fsr0h	equ	0xFEA
 11251                           fsr0l	equ	0xFE9
 11252                           wreg	equ	0xFE8
 11253                           indf2	equ	0xFDF
 11254                           postinc2	equ	0xFDE
 11255                           postdec2	equ	0xFDD
 11256                           plusw2	equ	0xFDB
 11257                           fsr2h	equ	0xFDA
 11258                           fsr2l	equ	0xFD9
 11259                           status	equ	0xFD8
 11260                           
 11261 ;; *************** function _LORAWAN_Reset *****************
 11262 ;; Defined at:
 11263 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;  ismBandNew      1    wreg     enum E7280
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  ismBandNew      1   69[BANK0 ] enum E7280
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;Total ram usage:        1 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:   12
 11284 ;; This function calls:
 11285 ;;		_InitDefault433Channels
 11286 ;;		_InitDefault868Channels
 11287 ;;		_LORAWAN_LinkCheckConfigure
 11288 ;;		_RADIO_Init
 11289 ;;		_RADIO_SetLoRaSyncWord
 11290 ;;		_StopAllSoftwareTimers
 11291 ;;		_UpdateMinMaxChDataRate
 11292 ;;		_memset
 11293 ;; This function is called by:
 11294 ;;		_LORAWAN_Init
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text60
 11299  00114E                     __ptext60:
 11300                           	opt stack 0
 11301  00114E                     _LORAWAN_Reset:
 11302                           	opt stack 17
 11303                           
 11304                           ;incstack = 0
 11305                           ;LORAWAN_Reset@ismBandNew stored from wreg
 11306  00114E  0100               	movlb	0	; () banked
 11307  001150  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 11308                           
 11309                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 11310  001152  0102               	movlb	2	; () banked
 11311  001154  05F0               	decf	(_loRa+240)& (0+255),w,b
 11312  001156  B4D8               	btfsc	status,2,c
 11313                           
 11314                           ; BSR set to: 2
 11315                           ;lorawan_eu.c: 151: {
 11316                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 11317  001158  EC96  F018         	call	_StopAllSoftwareTimers	;wreg free
 11318                           
 11319                           ;lorawan_eu.c: 153: }
 11320                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 11321  00115C  0E34               	movlw	52
 11322  00115E  0102               	movlb	2	; () banked
 11323  001160  6FF4               	movwf	(_loRa+244)& (0+255),b
 11324                           
 11325                           ; BSR set to: 2
 11326                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 11327  001162  51F4               	movf	(_loRa+244)& (0+255),w,b
 11328  001164  EC21  F01C         	call	_RADIO_SetLoRaSyncWord
 11329                           
 11330                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 11331  001168  0E00               	movlw	0
 11332  00116A  0102               	movlb	2	; () banked
 11333  00116C  6F02               	movwf	(_loRa+2)& (0+255),b
 11334  00116E  0E00               	movlw	0
 11335  001170  6F03               	movwf	(_loRa+3)& (0+255),b
 11336  001172  0E00               	movlw	0
 11337  001174  6F04               	movwf	(_loRa+4)& (0+255),b
 11338  001176  0E00               	movlw	0
 11339  001178  6F05               	movwf	(_loRa+5)& (0+255),b
 11340                           
 11341                           ; BSR set to: 2
 11342                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 11343  00117A  69DD               	setf	(_loRa+221)& (0+255),b
 11344                           
 11345                           ; BSR set to: 2
 11346                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 11347  00117C  0E00               	movlw	0
 11348  00117E  6FDE               	movwf	(_loRa+222)& (0+255),b
 11349                           
 11350                           ; BSR set to: 2
 11351                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 11352  001180  0E00               	movlw	0
 11353  001182  6FC8               	movwf	(_loRa+200)& (0+255),b
 11354  001184  0E00               	movlw	0
 11355  001186  6FC9               	movwf	(_loRa+201)& (0+255),b
 11356  001188  0E00               	movlw	0
 11357  00118A  6FCA               	movwf	(_loRa+202)& (0+255),b
 11358  00118C  0E00               	movlw	0
 11359  00118E  6FCB               	movwf	(_loRa+203)& (0+255),b
 11360                           
 11361                           ; BSR set to: 2
 11362                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 11363  001190  0E00               	movlw	0
 11364  001192  6FD5               	movwf	(_loRa+213)& (0+255),b
 11365  001194  0E00               	movlw	0
 11366  001196  6FD4               	movwf	(_loRa+212)& (0+255),b
 11367                           
 11368                           ; BSR set to: 2
 11369                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 11370  001198  0E00               	movlw	0
 11371  00119A  6F0A               	movwf	(_loRa+10)& (0+255),b
 11372  00119C  0E00               	movlw	0
 11373  00119E  6F0B               	movwf	(_loRa+11)& (0+255),b
 11374  0011A0  0E00               	movlw	0
 11375  0011A2  6F0C               	movwf	(_loRa+12)& (0+255),b
 11376  0011A4  0E00               	movlw	0
 11377  0011A6  6F0D               	movwf	(_loRa+13)& (0+255),b
 11378                           
 11379                           ; BSR set to: 2
 11380                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 11381  0011A8  0E00               	movlw	0
 11382  0011AA  6F06               	movwf	(_loRa+6)& (0+255),b
 11383  0011AC  0E00               	movlw	0
 11384  0011AE  6F07               	movwf	(_loRa+7)& (0+255),b
 11385  0011B0  0E00               	movlw	0
 11386  0011B2  6F08               	movwf	(_loRa+8)& (0+255),b
 11387  0011B4  0E00               	movlw	0
 11388  0011B6  6F09               	movwf	(_loRa+9)& (0+255),b
 11389                           
 11390                           ; BSR set to: 2
 11391                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 11392  0011B8  0E00               	movlw	0
 11393  0011BA  6FD3               	movwf	(_loRa+211)& (0+255),b
 11394  0011BC  0E00               	movlw	0
 11395  0011BE  6FD2               	movwf	(_loRa+210)& (0+255),b
 11396                           
 11397                           ; BSR set to: 2
 11398                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 11399  0011C0  0E00               	movlw	0
 11400  0011C2  6FDC               	movwf	(_loRa+220)& (0+255),b
 11401  0011C4  0E01               	movlw	1
 11402  0011C6  6FDB               	movwf	(_loRa+219)& (0+255),b
 11403                           
 11404                           ; BSR set to: 2
 11405                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 11406  0011C8  0E00               	movlw	0
 11407  0011CA  6FD1               	movwf	(_loRa+209)& (0+255),b
 11408  0011CC  0E00               	movlw	0
 11409  0011CE  6FD0               	movwf	(_loRa+208)& (0+255),b
 11410                           
 11411                           ; BSR set to: 2
 11412                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 11413  0011D0  0E00               	movlw	0
 11414  0011D2  6FEE               	movwf	(_loRa+238)& (0+255),b
 11415                           
 11416                           ; BSR set to: 2
 11417                           ;lorawan_eu.c: 169: loRa.offset = 0;
 11418  0011D4  0E00               	movlw	0
 11419  0011D6  6FEF               	movwf	(_loRa+239)& (0+255),b
 11420                           
 11421                           ; BSR set to: 2
 11422                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 11423  0011D8  0E00               	movlw	0
 11424  0011DA  6FC8               	movwf	(_loRa+200)& (0+255),b
 11425  0011DC  0E00               	movlw	0
 11426  0011DE  6FC9               	movwf	(_loRa+201)& (0+255),b
 11427  0011E0  0E00               	movlw	0
 11428  0011E2  6FCA               	movwf	(_loRa+202)& (0+255),b
 11429  0011E4  0E00               	movlw	0
 11430  0011E6  6FCB               	movwf	(_loRa+203)& (0+255),b
 11431                           
 11432                           ; BSR set to: 2
 11433                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 11434  0011E8  9503               	bcf	(_loRa+3)& (0+255),2,b
 11435                           
 11436                           ; BSR set to: 2
 11437                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 11438  0011EA  0E00               	movlw	0
 11439  0011EC  6F02               	movwf	(_loRa+2)& (0+255),b
 11440  0011EE  0E00               	movlw	0
 11441  0011F0  6F03               	movwf	(_loRa+3)& (0+255),b
 11442  0011F2  0E00               	movlw	0
 11443  0011F4  6F04               	movwf	(_loRa+4)& (0+255),b
 11444  0011F6  0E00               	movlw	0
 11445  0011F8  6F05               	movwf	(_loRa+5)& (0+255),b
 11446                           
 11447                           ; BSR set to: 2
 11448                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 11449  0011FA  0E00               	movlw	0
 11450  0011FC  6F01               	movwf	(_loRa+1)& (0+255),b
 11451  0011FE  0E00               	movlw	0
 11452  001200  6F00               	movwf	_loRa& (0+255),b
 11453                           
 11454                           ; BSR set to: 2
 11455                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 11456  001202  0E07               	movlw	7
 11457  001204  6FD7               	movwf	(_loRa+215)& (0+255),b
 11458                           
 11459                           ; BSR set to: 2
 11460                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 11461  001206  0E00               	movlw	0
 11462  001208  6FD6               	movwf	(_loRa+214)& (0+255),b
 11463                           
 11464                           ; BSR set to: 2
 11465                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 11466  00120A  0E01               	movlw	1
 11467  00120C  6FD9               	movwf	(_loRa+217)& (0+255),b
 11468                           
 11469                           ; BSR set to: 2
 11470                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11471  00120E  0E01               	movlw	1
 11472  001210  6FD8               	movwf	(_loRa+216)& (0+255),b
 11473                           
 11474                           ; BSR set to: 2
 11475                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 11476  001212  69E0               	setf	(_loRa+224)& (0+255),b
 11477                           
 11478                           ; BSR set to: 2
 11479                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 11480  001214  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 11481                           
 11482                           ; BSR set to: 2
 11483                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 11484  001218  0E00               	movlw	0
 11485  00121A  6F12               	movwf	(_loRa+18)& (0+255),b
 11486                           
 11487                           ; BSR set to: 2
 11488                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 11489  00121C  0E10               	movlw	16
 11490  00121E  6FED               	movwf	(_loRa+237)& (0+255),b
 11491                           
 11492                           ; BSR set to: 2
 11493                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 11494  001220  0100               	movlb	0	; () banked
 11495  001222  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 11496  001224  A4D8               	btfss	status,2,c
 11497  001226  D01B               	goto	l972
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;lorawan_eu.c: 193: {
 11501                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 11502  001228  0EFF               	movlw	low (_radioBuffer+16)
 11503  00122A  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 11504  00122C  0E05               	movlw	high (_radioBuffer+16)
 11505  00122E  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 11506  001230  0EA0               	movlw	160
 11507  001232  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 11508  001234  0E27               	movlw	39
 11509  001236  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 11510  001238  0EBE               	movlw	190
 11511  00123A  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 11512  00123C  0E33               	movlw	51
 11513  00123E  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 11514  001240  EC8E  F009         	call	_RADIO_Init	;wreg free
 11515                           
 11516                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 11517  001244  EC5C  F015         	call	_InitDefault868Channels	;wreg free
 11518                           
 11519                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 11520  001248  0E00               	movlw	0
 11521  00124A  0102               	movlb	2	; () banked
 11522  00124C  6F1C               	movwf	(_loRa+28)& (0+255),b
 11523                           
 11524                           ; BSR set to: 2
 11525                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 11526  00124E  0E08               	movlw	8
 11527  001250  6F18               	movwf	(_loRa+24)& (0+255),b
 11528  001252  0EE6               	movlw	230
 11529  001254  6F19               	movwf	(_loRa+25)& (0+255),b
 11530  001256  0ED3               	movlw	211
 11531  001258  6F1A               	movwf	(_loRa+26)& (0+255),b
 11532  00125A  0E33               	movlw	51
 11533  00125C  D01B               	goto	L7
 11534  00125E                     l972:
 11535                           
 11536                           ;lorawan_eu.c: 201: else
 11537                           ;lorawan_eu.c: 202: {
 11538                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 11539                           
 11540                           ; BSR set to: 2
 11541  00125E  0EFF               	movlw	low (_radioBuffer+16)
 11542  001260  0100               	movlb	0	; () banked
 11543  001262  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 11544  001264  0E05               	movlw	high (_radioBuffer+16)
 11545  001266  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 11546  001268  0E20               	movlw	32
 11547  00126A  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 11548  00126C  0EA2               	movlw	162
 11549  00126E  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 11550  001270  0ED3               	movlw	211
 11551  001272  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 11552  001274  0E19               	movlw	25
 11553  001276  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 11554  001278  EC8E  F009         	call	_RADIO_Init	;wreg free
 11555                           
 11556                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 11557  00127C  ECA1  F015         	call	_InitDefault433Channels	;wreg free
 11558                           
 11559                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 11560  001280  0E00               	movlw	0
 11561  001282  0102               	movlb	2	; () banked
 11562  001284  6F1C               	movwf	(_loRa+28)& (0+255),b
 11563                           
 11564                           ; BSR set to: 2
 11565                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 11566  001286  0E28               	movlw	40
 11567  001288  6F18               	movwf	(_loRa+24)& (0+255),b
 11568  00128A  0E76               	movlw	118
 11569  00128C  6F19               	movwf	(_loRa+25)& (0+255),b
 11570  00128E  0EE8               	movlw	232
 11571  001290  6F1A               	movwf	(_loRa+26)& (0+255),b
 11572  001292  0E19               	movlw	25
 11573  001294                     L7:
 11574  001294  6F1B               	movwf	(_loRa+27)& (0+255),b
 11575                           
 11576                           ; BSR set to: 2
 11577                           ;lorawan_eu.c: 209: }
 11578                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 11579                           
 11580                           ; BSR set to: 2
 11581  001296  0E01               	movlw	1
 11582  001298  6FE1               	movwf	(_loRa+225)& (0+255),b
 11583                           
 11584                           ; BSR set to: 2
 11585                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 11586  00129A  0E00               	movlw	0
 11587  00129C  6FDF               	movwf	(_loRa+223)& (0+255),b
 11588                           
 11589                           ; BSR set to: 2
 11590                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 11591  00129E  ECC1  F010         	call	_UpdateMinMaxChDataRate	;wreg free
 11592                           
 11593                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 11594  0012A2  0E00               	movlw	0
 11595  0012A4  0102               	movlb	2	; () banked
 11596  0012A6  6FA6               	movwf	(_loRa+166)& (0+255),b
 11597  0012A8  0E00               	movlw	0
 11598  0012AA  6FA5               	movwf	(_loRa+165)& (0+255),b
 11599                           
 11600                           ; BSR set to: 2
 11601                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 11602  0012AC  0E1D               	movlw	low (_loRa+29)
 11603  0012AE  0100               	movlb	0	; () banked
 11604  0012B0  6F60               	movwf	memset@p1& (0+255),b
 11605  0012B2  0E02               	movlw	high (_loRa+29)
 11606  0012B4  6F61               	movwf	(memset@p1+1)& (0+255),b
 11607  0012B6  0E00               	movlw	0
 11608  0012B8  6F63               	movwf	(memset@c+1)& (0+255),b
 11609  0012BA  0E00               	movlw	0
 11610  0012BC  6F62               	movwf	memset@c& (0+255),b
 11611  0012BE  0E00               	movlw	0
 11612  0012C0  6F65               	movwf	(memset@n+1)& (0+255),b
 11613  0012C2  0E69               	movlw	105
 11614  0012C4  6F64               	movwf	memset@n& (0+255),b
 11615  0012C6  EC1A  F01A         	call	_memset	;wreg free
 11616                           
 11617                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 11618  0012CA  0E03               	movlw	3
 11619  0012CC  0102               	movlb	2	; () banked
 11620  0012CE  6F95               	movwf	(_loRa+149)& (0+255),b
 11621  0012D0  0EE8               	movlw	232
 11622  0012D2  6F94               	movwf	(_loRa+148)& (0+255),b
 11623                           
 11624                           ; BSR set to: 2
 11625                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 11626  0012D4  0E07               	movlw	7
 11627  0012D6  6F97               	movwf	(_loRa+151)& (0+255),b
 11628  0012D8  0ED0               	movlw	208
 11629  0012DA  6F96               	movwf	(_loRa+150)& (0+255),b
 11630                           
 11631                           ; BSR set to: 2
 11632                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 11633  0012DC  0E13               	movlw	19
 11634  0012DE  6F99               	movwf	(_loRa+153)& (0+255),b
 11635  0012E0  0E88               	movlw	136
 11636  0012E2  6F98               	movwf	(_loRa+152)& (0+255),b
 11637                           
 11638                           ; BSR set to: 2
 11639                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 11640  0012E4  0E17               	movlw	23
 11641  0012E6  6F9B               	movwf	(_loRa+155)& (0+255),b
 11642  0012E8  0E70               	movlw	112
 11643  0012EA  6F9A               	movwf	(_loRa+154)& (0+255),b
 11644                           
 11645                           ; BSR set to: 2
 11646                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 11647  0012EC  0E07               	movlw	7
 11648  0012EE  6FA1               	movwf	(_loRa+161)& (0+255),b
 11649  0012F0  0ED0               	movlw	208
 11650  0012F2  6FA0               	movwf	(_loRa+160)& (0+255),b
 11651                           
 11652                           ; BSR set to: 2
 11653                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 11654  0012F4  0E20               	movlw	32
 11655  0012F6  6FA3               	movwf	(_loRa+163)& (0+255),b
 11656                           
 11657                           ; BSR set to: 2
 11658                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 11659  0012F8  0E40               	movlw	64
 11660  0012FA  6FA2               	movwf	(_loRa+162)& (0+255),b
 11661                           
 11662                           ; BSR set to: 2
 11663                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 11664  0012FC  0E40               	movlw	64
 11665  0012FE  6F9D               	movwf	(_loRa+157)& (0+255),b
 11666  001300  0E00               	movlw	0
 11667  001302  6F9C               	movwf	(_loRa+156)& (0+255),b
 11668                           
 11669                           ; BSR set to: 2
 11670                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 11671  001304  0E40               	movlw	64
 11672  001306  6F9F               	movwf	(_loRa+159)& (0+255),b
 11673  001308  0E00               	movlw	0
 11674  00130A  6F9E               	movwf	(_loRa+158)& (0+255),b
 11675                           
 11676                           ; BSR set to: 2
 11677                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 11678  00130C  0E00               	movlw	0
 11679  00130E  0100               	movlb	0	; () banked
 11680  001310  6F9B               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 11681  001312  0E00               	movlw	0
 11682  001314  6F9A               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 11683  001316  EC57  F00D         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 11684  00131A  0012               	return		;funcret
 11685  00131C                     __end_of_LORAWAN_Reset:
 11686                           	opt stack 0
 11687                           tblptru	equ	0xFF8
 11688                           tblptrh	equ	0xFF7
 11689                           tblptrl	equ	0xFF6
 11690                           tablat	equ	0xFF5
 11691                           prodh	equ	0xFF4
 11692                           prodl	equ	0xFF3
 11693                           intcon	equ	0xFF2
 11694                           intcon2	equ	0xFF1
 11695                           intcon3	equ	0xFF0
 11696                           indf0	equ	0xFEF
 11697                           postinc0	equ	0xFEE
 11698                           plusw0	equ	0xFEB
 11699                           fsr0h	equ	0xFEA
 11700                           fsr0l	equ	0xFE9
 11701                           wreg	equ	0xFE8
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           plusw2	equ	0xFDB
 11706                           fsr2h	equ	0xFDA
 11707                           fsr2l	equ	0xFD9
 11708                           status	equ	0xFD8
 11709                           
 11710 ;; *************** function _UpdateMinMaxChDataRate *****************
 11711 ;; Defined at:
 11712 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;		None
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  i               1    1[BANK0 ] unsigned char 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; Hardware stack levels required when called:    7
 11733 ;; This function calls:
 11734 ;;		Nothing
 11735 ;; This function is called by:
 11736 ;;		_LORAWAN_Reset
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           	psect	text61
 11741  002182                     __ptext61:
 11742                           	opt stack 0
 11743  002182                     _UpdateMinMaxChDataRate:
 11744                           	opt stack 21
 11745                           
 11746                           ;lorawan.c: 1065: uint8_t i;
 11747                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 11748                           
 11749                           ;incstack = 0
 11750  002182  0E07               	movlw	7
 11751  002184  0102               	movlb	2	; () banked
 11752  002186  6FEB               	movwf	(_loRa+235)& (0+255),b
 11753                           
 11754                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 11755  002188  0E00               	movlw	0
 11756  00218A  6FEC               	movwf	(_loRa+236)& (0+255),b
 11757                           
 11758                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 11759  00218C  0E00               	movlw	0
 11760  00218E  0100               	movlb	0	; () banked
 11761  002190  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 11762  002192  D06D               	goto	l1874
 11763  002194                     
 11764                           ; BSR set to: 0
 11765                           ;lorawan.c: 1072: {
 11766                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 11767                           
 11768                           ; BSR set to: 0
 11769  002194  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11770  002196  0D0E               	mullw	14
 11771  002198  0E05               	movlw	5
 11772  00219A  26F3               	addwf	prodl,f,c
 11773  00219C  0E00               	movlw	0
 11774  00219E  22F4               	addwfc	prodh,f,c
 11775  0021A0  0E00               	movlw	low _Channels
 11776  0021A2  24F3               	addwf	prodl,w,c
 11777  0021A4  6ED9               	movwf	fsr2l,c
 11778  0021A6  0E04               	movlw	high _Channels
 11779  0021A8  20F4               	addwfc	prodh,w,c
 11780  0021AA  6EDA               	movwf	fsr2h,c
 11781  0021AC  0104               	movlb	4	; () banked
 11782  0021AE  50DF               	movf	223,w,c
 11783  0021B0  0B0F               	andlw	15
 11784  0021B2  0100               	movlb	0	; () banked
 11785  0021B4  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 11786  0021B6  0102               	movlb	2	; () banked
 11787  0021B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 11788  0021BA  0100               	movlb	0	; () banked
 11789  0021BC  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 11790  0021BE  B0D8               	btfsc	status,0,c
 11791  0021C0  D020               	goto	l1876
 11792                           
 11793                           ; BSR set to: 0
 11794  0021C2  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11795  0021C4  0D0E               	mullw	14
 11796  0021C6  0E04               	movlw	4
 11797  0021C8  26F3               	addwf	prodl,f,c
 11798  0021CA  0E00               	movlw	0
 11799  0021CC  22F4               	addwfc	prodh,f,c
 11800  0021CE  0E00               	movlw	low _Channels
 11801  0021D0  24F3               	addwf	prodl,w,c
 11802  0021D2  6ED9               	movwf	fsr2l,c
 11803  0021D4  0E04               	movlw	high _Channels
 11804  0021D6  20F4               	addwfc	prodh,w,c
 11805  0021D8  6EDA               	movwf	fsr2h,c
 11806  0021DA  04DE               	decf	postinc2,w,c
 11807  0021DC  A4D8               	btfss	status,2,c
 11808  0021DE  D011               	goto	l1876
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;lorawan.c: 1074: {
 11812                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 11813  0021E0  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11814  0021E2  0D0E               	mullw	14
 11815  0021E4  0E05               	movlw	5
 11816  0021E6  26F3               	addwf	prodl,f,c
 11817  0021E8  0E00               	movlw	0
 11818  0021EA  22F4               	addwfc	prodh,f,c
 11819  0021EC  0E00               	movlw	low _Channels
 11820  0021EE  24F3               	addwf	prodl,w,c
 11821  0021F0  6ED9               	movwf	fsr2l,c
 11822  0021F2  0E04               	movlw	high _Channels
 11823  0021F4  20F4               	addwfc	prodh,w,c
 11824  0021F6  6EDA               	movwf	fsr2h,c
 11825  0021F8  0104               	movlb	4	; () banked
 11826  0021FA  50DF               	movf	223,w,c
 11827  0021FC  0B0F               	andlw	15
 11828  0021FE  0102               	movlb	2	; () banked
 11829  002200  6FEB               	movwf	(_loRa+235)& (0+255),b
 11830  002202                     l1876:
 11831                           
 11832                           ;lorawan.c: 1076: }
 11833                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 11834  002202  0100               	movlb	0	; () banked
 11835  002204  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11836  002206  0D0E               	mullw	14
 11837  002208  0E05               	movlw	5
 11838  00220A  26F3               	addwf	prodl,f,c
 11839  00220C  0E00               	movlw	0
 11840  00220E  22F4               	addwfc	prodh,f,c
 11841  002210  0E00               	movlw	low _Channels
 11842  002212  24F3               	addwf	prodl,w,c
 11843  002214  6ED9               	movwf	fsr2l,c
 11844  002216  0E04               	movlw	high _Channels
 11845  002218  20F4               	addwfc	prodh,w,c
 11846  00221A  6EDA               	movwf	fsr2h,c
 11847  00221C  0104               	movlb	4	; () banked
 11848  00221E  38DF               	swapf	223,w,c
 11849  002220  0B0F               	andlw	15
 11850  002222  0102               	movlb	2	; () banked
 11851  002224  61EC               	cpfslt	(_loRa+236)& (0+255),b
 11852  002226  D021               	goto	l1877
 11853                           
 11854                           ; BSR set to: 2
 11855  002228  0100               	movlb	0	; () banked
 11856  00222A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11857  00222C  0D0E               	mullw	14
 11858  00222E  0E04               	movlw	4
 11859  002230  26F3               	addwf	prodl,f,c
 11860  002232  0E00               	movlw	0
 11861  002234  22F4               	addwfc	prodh,f,c
 11862  002236  0E00               	movlw	low _Channels
 11863  002238  24F3               	addwf	prodl,w,c
 11864  00223A  6ED9               	movwf	fsr2l,c
 11865  00223C  0E04               	movlw	high _Channels
 11866  00223E  20F4               	addwfc	prodh,w,c
 11867  002240  6EDA               	movwf	fsr2h,c
 11868  002242  04DE               	decf	postinc2,w,c
 11869  002244  A4D8               	btfss	status,2,c
 11870  002246  D011               	goto	l1877
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;lorawan.c: 1078: {
 11874                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 11875  002248  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11876  00224A  0D0E               	mullw	14
 11877  00224C  0E05               	movlw	5
 11878  00224E  26F3               	addwf	prodl,f,c
 11879  002250  0E00               	movlw	0
 11880  002252  22F4               	addwfc	prodh,f,c
 11881  002254  0E00               	movlw	low _Channels
 11882  002256  24F3               	addwf	prodl,w,c
 11883  002258  6ED9               	movwf	fsr2l,c
 11884  00225A  0E04               	movlw	high _Channels
 11885  00225C  20F4               	addwfc	prodh,w,c
 11886  00225E  6EDA               	movwf	fsr2h,c
 11887  002260  0104               	movlb	4	; () banked
 11888  002262  38DF               	swapf	223,w,c
 11889  002264  0B0F               	andlw	15
 11890  002266  0102               	movlb	2	; () banked
 11891  002268  6FEC               	movwf	(_loRa+236)& (0+255),b
 11892  00226A                     l1877:
 11893                           
 11894                           ; BSR set to: 2
 11895  00226A  0100               	movlb	0	; () banked
 11896  00226C  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 11897  00226E                     l1874:
 11898                           
 11899                           ; BSR set to: 0
 11900                           
 11901                           ; BSR set to: 0
 11902  00226E  0102               	movlb	2	; () banked
 11903  002270  51ED               	movf	(_loRa+237)& (0+255),w,b
 11904  002272  0100               	movlb	0	; () banked
 11905  002274  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 11906  002276  B0D8               	btfsc	status,0,c
 11907  002278  0012               	return	
 11908  00227A  D78C               	goto	l1875
 11909  00227C                     __end_of_UpdateMinMaxChDataRate:
 11910                           	opt stack 0
 11911                           tblptru	equ	0xFF8
 11912                           tblptrh	equ	0xFF7
 11913                           tblptrl	equ	0xFF6
 11914                           tablat	equ	0xFF5
 11915                           prodh	equ	0xFF4
 11916                           prodl	equ	0xFF3
 11917                           intcon	equ	0xFF2
 11918                           intcon2	equ	0xFF1
 11919                           intcon3	equ	0xFF0
 11920                           indf0	equ	0xFEF
 11921                           postinc0	equ	0xFEE
 11922                           plusw0	equ	0xFEB
 11923                           fsr0h	equ	0xFEA
 11924                           fsr0l	equ	0xFE9
 11925                           wreg	equ	0xFE8
 11926                           indf2	equ	0xFDF
 11927                           postinc2	equ	0xFDE
 11928                           postdec2	equ	0xFDD
 11929                           plusw2	equ	0xFDB
 11930                           fsr2h	equ	0xFDA
 11931                           fsr2l	equ	0xFD9
 11932                           status	equ	0xFD8
 11933                           
 11934 ;; *************** function _StopAllSoftwareTimers *****************
 11935 ;; Defined at:
 11936 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;		None
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;		None
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      void 
 11943 ;; Registers used:
 11944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;Total ram usage:        0 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:    8
 11957 ;; This function calls:
 11958 ;;		_SwTimerStop
 11959 ;; This function is called by:
 11960 ;;		_LORAWAN_Init
 11961 ;;		_LORAWAN_Reset
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text62
 11966  00312C                     __ptext62:
 11967                           	opt stack 0
 11968  00312C                     _StopAllSoftwareTimers:
 11969                           	opt stack 21
 11970                           
 11971                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;incstack = 0
 11975  00312C  0102               	movlb	2	; () banked
 11976  00312E  51E2               	movf	(_loRa+226)& (0+255),w,b
 11977  003130  EC9F  F01A         	call	_SwTimerStop
 11978                           
 11979                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 11980  003134  0102               	movlb	2	; () banked
 11981  003136  51E3               	movf	(_loRa+227)& (0+255),w,b
 11982  003138  EC9F  F01A         	call	_SwTimerStop
 11983                           
 11984                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 11985  00313C  0102               	movlb	2	; () banked
 11986  00313E  51E7               	movf	(_loRa+231)& (0+255),w,b
 11987  003140  EC9F  F01A         	call	_SwTimerStop
 11988                           
 11989                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 11990  003144  0102               	movlb	2	; () banked
 11991  003146  51E4               	movf	(_loRa+228)& (0+255),w,b
 11992  003148  EC9F  F01A         	call	_SwTimerStop
 11993                           
 11994                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 11995  00314C  0102               	movlb	2	; () banked
 11996  00314E  51E5               	movf	(_loRa+229)& (0+255),w,b
 11997  003150  EC9F  F01A         	call	_SwTimerStop
 11998                           
 11999                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 12000  003154  0102               	movlb	2	; () banked
 12001  003156  51E8               	movf	(_loRa+232)& (0+255),w,b
 12002  003158  EC9F  F01A         	call	_SwTimerStop
 12003                           
 12004                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 12005  00315C  0102               	movlb	2	; () banked
 12006  00315E  51E6               	movf	(_loRa+230)& (0+255),w,b
 12007  003160  EC9F  F01A         	call	_SwTimerStop
 12008                           
 12009                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 12010  003164  0102               	movlb	2	; () banked
 12011  003166  51EA               	movf	(_loRa+234)& (0+255),w,b
 12012  003168  EC9F  F01A         	call	_SwTimerStop
 12013                           
 12014                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 12015  00316C  0102               	movlb	2	; () banked
 12016  00316E  51F3               	movf	(_loRa+243)& (0+255),w,b
 12017  003170  EC9F  F01A         	call	_SwTimerStop
 12018                           
 12019                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 12020  003174  0102               	movlb	2	; () banked
 12021  003176  51E9               	movf	(_loRa+233)& (0+255),w,b
 12022  003178  EC9F  F01A         	call	_SwTimerStop
 12023  00317C  0012               	return		;funcret
 12024  00317E                     __end_of_StopAllSoftwareTimers:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           intcon2	equ	0xFF1
 12034                           intcon3	equ	0xFF0
 12035                           indf0	equ	0xFEF
 12036                           postinc0	equ	0xFEE
 12037                           plusw0	equ	0xFEB
 12038                           fsr0h	equ	0xFEA
 12039                           fsr0l	equ	0xFE9
 12040                           wreg	equ	0xFE8
 12041                           indf2	equ	0xFDF
 12042                           postinc2	equ	0xFDE
 12043                           postdec2	equ	0xFDD
 12044                           plusw2	equ	0xFDB
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 12050 ;; Defined at:
 12051 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  syncWord        1    wreg     unsigned char 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;  syncWord        1    0[BANK0 ] unsigned char 
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;Total ram usage:        1 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:    7
 12072 ;; This function calls:
 12073 ;;		Nothing
 12074 ;; This function is called by:
 12075 ;;		_LORAWAN_Reset
 12076 ;;		_ConfigureRadio
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text63
 12081  003842                     __ptext63:
 12082                           	opt stack 0
 12083  003842                     _RADIO_SetLoRaSyncWord:
 12084                           	opt stack 19
 12085                           
 12086                           ;incstack = 0
 12087                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 12088  003842  0100               	movlb	0	; () banked
 12089  003844  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 12090                           
 12091                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 12092  003846  C060  F174         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 12093  00384A  0012               	return		;funcret
 12094  00384C                     __end_of_RADIO_SetLoRaSyncWord:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           intcon2	equ	0xFF1
 12104                           intcon3	equ	0xFF0
 12105                           indf0	equ	0xFEF
 12106                           postinc0	equ	0xFEE
 12107                           plusw0	equ	0xFEB
 12108                           fsr0h	equ	0xFEA
 12109                           fsr0l	equ	0xFE9
 12110                           wreg	equ	0xFE8
 12111                           indf2	equ	0xFDF
 12112                           postinc2	equ	0xFDE
 12113                           postdec2	equ	0xFDD
 12114                           plusw2	equ	0xFDB
 12115                           fsr2h	equ	0xFDA
 12116                           fsr2l	equ	0xFD9
 12117                           status	equ	0xFD8
 12118                           
 12119 ;; *************** function _RADIO_Init *****************
 12120 ;; Defined at:
 12121 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 12124 ;;		 -> radioBuffer(271), 
 12125 ;;  frequency       4   27[BANK0 ] unsigned long 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12137 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:        7 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:   11
 12144 ;; This function calls:
 12145 ;;		_RADIO_RegisterRead
 12146 ;;		_RADIO_RegisterWrite
 12147 ;;		_RADIO_Reset
 12148 ;;		_RADIO_WriteFrequency
 12149 ;;		_RADIO_WriteMode
 12150 ;;		_SwTimerCreate
 12151 ;;		_SwTimerSetCallback
 12152 ;;		_SwTimerStop
 12153 ;; This function is called by:
 12154 ;;		_LORAWAN_Init
 12155 ;;		_LORAWAN_Reset
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text64
 12160  00131C                     __ptext64:
 12161                           	opt stack 0
 12162  00131C                     _RADIO_Init:
 12163                           	opt stack 18
 12164                           
 12165                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 12166                           
 12167                           ;incstack = 0
 12168  00131C  C07B  F166         	movff	RADIO_Init@frequency,_RadioConfiguration
 12169  001320  C07C  F167         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 12170  001324  C07D  F168         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 12171  001328  C07E  F169         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 12172                           
 12173                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 12174  00132C  0EA8               	movlw	168
 12175  00132E  0101               	movlb	1	; () banked
 12176  001330  6F6A               	movwf	(_RadioConfiguration+4)& (0+255),b
 12177  001332  0E61               	movlw	97
 12178  001334  6F6B               	movwf	(_RadioConfiguration+5)& (0+255),b
 12179  001336  0E00               	movlw	0
 12180  001338  6F6C               	movwf	(_RadioConfiguration+6)& (0+255),b
 12181  00133A  0E00               	movlw	0
 12182  00133C  6F6D               	movwf	(_RadioConfiguration+7)& (0+255),b
 12183                           
 12184                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 12185  00133E  0E50               	movlw	80
 12186  001340  6F6E               	movwf	(_RadioConfiguration+8)& (0+255),b
 12187  001342  0EC3               	movlw	195
 12188  001344  6F6F               	movwf	(_RadioConfiguration+9)& (0+255),b
 12189  001346  0E00               	movlw	0
 12190  001348  6F70               	movwf	(_RadioConfiguration+10)& (0+255),b
 12191  00134A  0E00               	movlw	0
 12192  00134C  6F71               	movwf	(_RadioConfiguration+11)& (0+255),b
 12193                           
 12194                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 12195  00134E  0E01               	movlw	1
 12196  001350  6F7E               	movwf	(_RadioConfiguration+24)& (0+255),b
 12197                           
 12198                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 12199  001352  0E07               	movlw	7
 12200  001354  6F80               	movwf	(_RadioConfiguration+26)& (0+255),b
 12201                           
 12202                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 12203  001356  0E01               	movlw	1
 12204  001358  6F81               	movwf	(_RadioConfiguration+27)& (0+255),b
 12205                           
 12206                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 12207  00135A  0E01               	movlw	1
 12208  00135C  6F87               	movwf	(_RadioConfiguration+33)& (0+255),b
 12209                           
 12210                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 12211  00135E  0E00               	movlw	0
 12212  001360  6F88               	movwf	(_RadioConfiguration+34)& (0+255),b
 12213                           
 12214                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 12215  001362  0E00               	movlw	0
 12216  001364  6F73               	movwf	(_RadioConfiguration+13)& (0+255),b
 12217  001366  0E08               	movlw	8
 12218  001368  6F72               	movwf	(_RadioConfiguration+12)& (0+255),b
 12219                           
 12220                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 12221  00136A  0E0C               	movlw	12
 12222  00136C  6F7F               	movwf	(_RadioConfiguration+25)& (0+255),b
 12223                           
 12224                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 12225  00136E  0E01               	movlw	1
 12226  001370  6F82               	movwf	(_RadioConfiguration+28)& (0+255),b
 12227                           
 12228                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 12229  001372  0E00               	movlw	0
 12230  001374  6F83               	movwf	(_RadioConfiguration+29)& (0+255),b
 12231                           
 12232                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 12233  001376  0E00               	movlw	0
 12234  001378  6F86               	movwf	(_RadioConfiguration+32)& (0+255),b
 12235                           
 12236                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 12237  00137A  0EC1               	movlw	193
 12238  00137C  6F75               	movwf	(_RadioConfiguration+15)& (0+255),b
 12239                           
 12240                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 12241  00137E  0E94               	movlw	148
 12242  001380  6F76               	movwf	(_RadioConfiguration+16)& (0+255),b
 12243                           
 12244                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 12245  001382  0EC1               	movlw	193
 12246  001384  6F77               	movwf	(_RadioConfiguration+17)& (0+255),b
 12247                           
 12248                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 12249  001386  0E03               	movlw	3
 12250  001388  6F7D               	movwf	(_RadioConfiguration+23)& (0+255),b
 12251                           
 12252                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 12253  00138A  0E34               	movlw	52
 12254  00138C  6F74               	movwf	(_RadioConfiguration+14)& (0+255),b
 12255                           
 12256                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 12257  00138E  0E00               	movlw	0
 12258  001390  6F89               	movwf	(_RadioConfiguration+35)& (0+255),b
 12259                           
 12260                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 12261  001392  0E00               	movlw	0
 12262  001394  6F8A               	movwf	(_RadioConfiguration+36)& (0+255),b
 12263                           
 12264                           ; BSR set to: 1
 12265                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 12266  001396  C079  F18B         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 12267  00139A  C07A  F18C         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 12268                           
 12269                           ; BSR set to: 1
 12270                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 12271  00139E  0E00               	movlw	0
 12272  0013A0  6F85               	movwf	(_RadioConfiguration+31)& (0+255),b
 12273  0013A2  0E00               	movlw	0
 12274  0013A4  6F84               	movwf	(_RadioConfiguration+30)& (0+255),b
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 12278  0013A6  0E80               	movlw	128
 12279  0013A8  6F98               	movwf	(_RadioConfiguration+50)& (0+255),b
 12280                           
 12281                           ; BSR set to: 1
 12282                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 12283  0013AA  0E98               	movlw	152
 12284  0013AC  6F90               	movwf	(_RadioConfiguration+42)& (0+255),b
 12285  0013AE  0E3A               	movlw	58
 12286  0013B0  6F91               	movwf	(_RadioConfiguration+43)& (0+255),b
 12287  0013B2  0E00               	movlw	0
 12288  0013B4  6F92               	movwf	(_RadioConfiguration+44)& (0+255),b
 12289  0013B6  0E00               	movlw	0
 12290  0013B8  6F93               	movwf	(_RadioConfiguration+45)& (0+255),b
 12291                           
 12292                           ; BSR set to: 1
 12293                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 12294  0013BA  0E02               	movlw	2
 12295  0013BC  6F99               	movwf	(_RadioConfiguration+51)& (0+255),b
 12296                           
 12297                           ; BSR set to: 1
 12298                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 12299  0013BE  0E0B               	movlw	11
 12300  0013C0  6F9A               	movwf	(_RadioConfiguration+52)& (0+255),b
 12301                           
 12302                           ; BSR set to: 1
 12303                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 12304  0013C2  0E12               	movlw	18
 12305  0013C4  6F9B               	movwf	(_RadioConfiguration+53)& (0+255),b
 12306                           
 12307                           ; BSR set to: 1
 12308                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 12309  0013C6  0E00               	movlw	0
 12310  0013C8  6F95               	movwf	(_RadioConfiguration+47)& (0+255),b
 12311  0013CA  0E00               	movlw	0
 12312  0013CC  6F96               	movwf	(_RadioConfiguration+48)& (0+255),b
 12313                           
 12314                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 12315  0013CE  5194               	movf	(_RadioConfiguration+46)& (0+255),w,b
 12316  0013D0  A4D8               	btfss	status,2,c
 12317  0013D2  D026               	goto	l438
 12318                           
 12319                           ; BSR set to: 1
 12320                           ;radio_driver_SX1276.c: 457: {
 12321                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 12322  0013D4  ECD1  F014         	call	_SwTimerCreate	;wreg free
 12323  0013D8  0101               	movlb	1	; () banked
 12324  0013DA  6F8D               	movwf	(_RadioConfiguration+39)& (0+255),b
 12325                           
 12326                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 12327  0013DC  ECD1  F014         	call	_SwTimerCreate	;wreg free
 12328  0013E0  0101               	movlb	1	; () banked
 12329  0013E2  6F8E               	movwf	(_RadioConfiguration+40)& (0+255),b
 12330                           
 12331                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 12332  0013E4  ECD1  F014         	call	_SwTimerCreate	;wreg free
 12333  0013E8  0101               	movlb	1	; () banked
 12334  0013EA  6F8F               	movwf	(_RadioConfiguration+41)& (0+255),b
 12335                           
 12336                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 12337  0013EC  0E00               	movlw	0
 12338  0013EE  0100               	movlb	0	; () banked
 12339  0013F0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 12340  0013F2  0E00               	movlw	0
 12341  0013F4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 12342  0013F6  0E00               	movlw	0
 12343  0013F8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 12344  0013FA  0101               	movlb	1	; () banked
 12345  0013FC  518E               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12346  0013FE  EC2D  F019         	call	_SwTimerSetCallback
 12347                           
 12348                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 12349  001402  0E00               	movlw	0
 12350  001404  0100               	movlb	0	; () banked
 12351  001406  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 12352  001408  0E00               	movlw	0
 12353  00140A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 12354  00140C  0E00               	movlw	0
 12355  00140E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 12356  001410  0101               	movlb	1	; () banked
 12357  001412  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12358  001414  EC2D  F019         	call	_SwTimerSetCallback
 12359                           
 12360                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 12361  001418  0E01               	movlw	1
 12362  00141A  0101               	movlb	1	; () banked
 12363  00141C  6F94               	movwf	(_RadioConfiguration+46)& (0+255),b
 12364                           
 12365                           ;radio_driver_SX1276.c: 466: }
 12366  00141E  D00B               	goto	l439
 12367  001420                     l438:
 12368                           
 12369                           ; BSR set to: 1
 12370                           ;radio_driver_SX1276.c: 467: else
 12371                           ;radio_driver_SX1276.c: 468: {
 12372                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 12373                           
 12374                           ; BSR set to: 1
 12375  001420  518D               	movf	(_RadioConfiguration+39)& (0+255),w,b
 12376  001422  EC9F  F01A         	call	_SwTimerStop
 12377                           
 12378                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 12379  001426  0101               	movlb	1	; () banked
 12380  001428  518E               	movf	(_RadioConfiguration+40)& (0+255),w,b
 12381  00142A  EC9F  F01A         	call	_SwTimerStop
 12382                           
 12383                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 12384  00142E  0101               	movlb	1	; () banked
 12385  001430  518F               	movf	(_RadioConfiguration+41)& (0+255),w,b
 12386  001432  EC9F  F01A         	call	_SwTimerStop
 12387  001436                     l439:
 12388                           
 12389                           ;radio_driver_SX1276.c: 472: }
 12390                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 12391  001436  ECE8  F018         	call	_RADIO_Reset	;wreg free
 12392                           
 12393                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 12394  00143A  0E00               	movlw	0
 12395  00143C  0100               	movlb	0	; () banked
 12396  00143E  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12397  001440  0E01               	movlw	1
 12398  001442  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12399  001444  0E01               	movlw	1
 12400  001446  EC42  F010         	call	_RADIO_WriteMode
 12401                           
 12402                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 12403  00144A  C166  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 12404  00144E  C167  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 12405  001452  C168  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 12406  001456  C169  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 12407  00145A  ECB6  F011         	call	_RADIO_WriteFrequency	;wreg free
 12408                           
 12409                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 12410  00145E  0E42               	movlw	66
 12411  001460  0100               	movlb	0	; () banked
 12412  001462  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12413  001464  0E3B               	movlw	59
 12414  001466  ECE6  F01A         	call	_RADIO_RegisterWrite
 12415  00146A                     
 12416                           ;radio_driver_SX1276.c: 490: ;
 12417  00146A  0E3B               	movlw	59
 12418  00146C  EC8B  F01A         	call	_RADIO_RegisterRead
 12419  001470  0100               	movlb	0	; () banked
 12420  001472  6F7F               	movwf	??_RADIO_Init& (0+255),b
 12421  001474  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 12422  001476  D7F9               	goto	l441
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 12426                           
 12427                           ; BSR set to: 0
 12428  001478  0E23               	movlw	35
 12429  00147A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12430  00147C  0E0C               	movlw	12
 12431  00147E  ECE6  F01A         	call	_RADIO_RegisterWrite
 12432                           
 12433                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 12434  001482  0E1E               	movlw	30
 12435  001484  0100               	movlb	0	; () banked
 12436  001486  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12437  001488  0E0D               	movlw	13
 12438  00148A  ECE6  F01A         	call	_RADIO_RegisterWrite
 12439                           
 12440                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 12441  00148E  0EAA               	movlw	170
 12442  001490  0100               	movlb	0	; () banked
 12443  001492  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12444  001494  0E1F               	movlw	31
 12445  001496  ECE6  F01A         	call	_RADIO_RegisterWrite
 12446                           
 12447                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 12448  00149A  0E8F               	movlw	143
 12449  00149C  0100               	movlb	0	; () banked
 12450  00149E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12451  0014A0  0E35               	movlw	53
 12452  0014A2  ECE6  F01A         	call	_RADIO_RegisterWrite
 12453                           
 12454                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 12455  0014A6  0EFF               	movlw	255
 12456  0014A8  0100               	movlb	0	; () banked
 12457  0014AA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12458  0014AC  0E32               	movlw	50
 12459  0014AE  ECE6  F01A         	call	_RADIO_RegisterWrite
 12460                           
 12461                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 12462  0014B2  0E40               	movlw	64
 12463  0014B4  0100               	movlb	0	; () banked
 12464  0014B6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12465  0014B8  0E31               	movlw	49
 12466  0014BA  ECE6  F01A         	call	_RADIO_RegisterWrite
 12467                           
 12468                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 12469  0014BE  0E01               	movlw	1
 12470  0014C0  0100               	movlb	0	; () banked
 12471  0014C2  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 12472  0014C4  0E01               	movlw	1
 12473  0014C6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 12474  0014C8  0E00               	movlw	0
 12475  0014CA  EC42  F010         	call	_RADIO_WriteMode
 12476                           
 12477                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 12478  0014CE  0EFF               	movlw	255
 12479  0014D0  0100               	movlb	0	; () banked
 12480  0014D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12481  0014D4  0E23               	movlw	35
 12482  0014D6  ECE6  F01A         	call	_RADIO_RegisterWrite
 12483                           
 12484                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 12485  0014DA  0E42               	movlw	66
 12486  0014DC  EC8B  F01A         	call	_RADIO_RegisterRead
 12487  0014E0  0101               	movlb	1	; () banked
 12488  0014E2  6F97               	movwf	(_RadioConfiguration+49)& (0+255),b
 12489                           
 12490                           ; BSR set to: 1
 12491  0014E4  0012               	return		;funcret
 12492  0014E6                     __end_of_RADIO_Init:
 12493                           	opt stack 0
 12494                           tblptru	equ	0xFF8
 12495                           tblptrh	equ	0xFF7
 12496                           tblptrl	equ	0xFF6
 12497                           tablat	equ	0xFF5
 12498                           prodh	equ	0xFF4
 12499                           prodl	equ	0xFF3
 12500                           intcon	equ	0xFF2
 12501                           intcon2	equ	0xFF1
 12502                           intcon3	equ	0xFF0
 12503                           indf0	equ	0xFEF
 12504                           postinc0	equ	0xFEE
 12505                           plusw0	equ	0xFEB
 12506                           fsr0h	equ	0xFEA
 12507                           fsr0l	equ	0xFE9
 12508                           wreg	equ	0xFE8
 12509                           indf2	equ	0xFDF
 12510                           postinc2	equ	0xFDE
 12511                           postdec2	equ	0xFDD
 12512                           plusw2	equ	0xFDB
 12513                           fsr2h	equ	0xFDA
 12514                           fsr2l	equ	0xFD9
 12515                           status	equ	0xFD8
 12516                           
 12517 ;; *************** function _SwTimerSetCallback *****************
 12518 ;; Defined at:
 12519 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;  timerId         1    wreg     unsigned char 
 12522 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 12523 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 12524 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 12525 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 12526 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  timerId         1    3[BANK0 ] unsigned char 
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1    wreg      void 
 12531 ;; Registers used:
 12532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12533 ;; Tracked objects:
 12534 ;;		On entry : 0/0
 12535 ;;		On exit  : 0/0
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12542 ;;Total ram usage:        4 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:    7
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		_RADIO_Init
 12549 ;;		_SetCallbackSoftwareTimers
 12550 ;; This function uses a non-reentrant model
 12551 ;;
 12552                           
 12553                           	psect	text65
 12554  00325A                     __ptext65:
 12555                           	opt stack 0
 12556  00325A                     _SwTimerSetCallback:
 12557                           	opt stack 21
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;incstack = 0
 12561                           ;SwTimerSetCallback@timerId stored from wreg
 12562  00325A  0100               	movlb	0	; () banked
 12563  00325C  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 12564                           
 12565                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 12566  00325E  0100               	movlb	0	; () banked
 12567  003260  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 12568  003262  0D08               	mullw	8
 12569  003264  0E06               	movlw	6
 12570  003266  26F3               	addwf	prodl,f,c
 12571  003268  0E00               	movlw	0
 12572  00326A  22F4               	addwfc	prodh,f,c
 12573  00326C  0E00               	movlw	low _swTimers
 12574  00326E  24F3               	addwf	prodl,w,c
 12575  003270  6ED9               	movwf	fsr2l,c
 12576  003272  0E03               	movlw	high _swTimers
 12577  003274  20F4               	addwfc	prodh,w,c
 12578  003276  6EDA               	movwf	fsr2h,c
 12579  003278  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 12580  00327C  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 12581                           
 12582                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 12583  003280  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 12584  003282  0D08               	mullw	8
 12585  003284  0E05               	movlw	5
 12586  003286  26F3               	addwf	prodl,f,c
 12587  003288  0E00               	movlw	0
 12588  00328A  22F4               	addwfc	prodh,f,c
 12589  00328C  0E00               	movlw	low _swTimers
 12590  00328E  24F3               	addwf	prodl,w,c
 12591  003290  6ED9               	movwf	fsr2l,c
 12592  003292  0E03               	movlw	high _swTimers
 12593  003294  20F4               	addwfc	prodh,w,c
 12594  003296  6EDA               	movwf	fsr2h,c
 12595  003298  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 12596                           
 12597                           ; BSR set to: 0
 12598  00329C  0012               	return		;funcret
 12599  00329E                     __end_of_SwTimerSetCallback:
 12600                           	opt stack 0
 12601                           tblptru	equ	0xFF8
 12602                           tblptrh	equ	0xFF7
 12603                           tblptrl	equ	0xFF6
 12604                           tablat	equ	0xFF5
 12605                           prodh	equ	0xFF4
 12606                           prodl	equ	0xFF3
 12607                           intcon	equ	0xFF2
 12608                           intcon2	equ	0xFF1
 12609                           intcon3	equ	0xFF0
 12610                           indf0	equ	0xFEF
 12611                           postinc0	equ	0xFEE
 12612                           plusw0	equ	0xFEB
 12613                           fsr0h	equ	0xFEA
 12614                           fsr0l	equ	0xFE9
 12615                           wreg	equ	0xFE8
 12616                           indf2	equ	0xFDF
 12617                           postinc2	equ	0xFDE
 12618                           postdec2	equ	0xFDD
 12619                           plusw2	equ	0xFDB
 12620                           fsr2h	equ	0xFDA
 12621                           fsr2l	equ	0xFD9
 12622                           status	equ	0xFD8
 12623                           
 12624 ;; *************** function _RADIO_WriteMode *****************
 12625 ;; Defined at:
 12626 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  newMode         1    wreg     enum E7716
 12629 ;;  newModulatio    1    5[BANK0 ] enum E6984
 12630 ;;  blocking        1    6[BANK0 ] unsigned char 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  newMode         1   10[BANK0 ] enum E7716
 12633 ;;  opMode          1   11[BANK0 ] unsigned char 
 12634 ;;  currentMode     1    9[BANK0 ] enum E7716
 12635 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 12636 ;;  currentModul    1    7[BANK0 ] enum E6984
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12647 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12649 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12650 ;;Total ram usage:        7 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:   10
 12653 ;; This function calls:
 12654 ;;		_HALDIO5PinValue
 12655 ;;		_RADIO_RegisterRead
 12656 ;;		_RADIO_RegisterWrite
 12657 ;;		_SystemBlockingWaitMs
 12658 ;; This function is called by:
 12659 ;;		_RADIO_Init
 12660 ;;		_RADIO_WriteConfiguration
 12661 ;;		_RADIO_Transmit
 12662 ;;		_RADIO_ReadRandom
 12663 ;;		_RADIO_RxFSKTimeout
 12664 ;;		_RADIO_WatchdogTimeout
 12665 ;;		_RADIO_StopCW
 12666 ;;		_RADIO_ReceiveStart
 12667 ;;		_RADIO_ReceiveStop
 12668 ;;		_RADIO_RxDone
 12669 ;;		_RADIO_FSKPayloadReady
 12670 ;;		_RADIO_RxTimeout
 12671 ;;		_RADIO_TxDone
 12672 ;;		_RADIO_FSKPacketSent
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text66
 12677  002084                     __ptext66:
 12678                           	opt stack 0
 12679  002084                     _RADIO_WriteMode:
 12680                           	opt stack 18
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;incstack = 0
 12684                           ;RADIO_WriteMode@newMode stored from wreg
 12685  002084  0100               	movlb	0	; () banked
 12686  002086  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 12687                           
 12688                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 12689                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 12690                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 12691                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 12692                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 12693                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 12694  002088  0100               	movlb	0	; () banked
 12695  00208A  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12696  00208C  A4D8               	btfss	status,2,c
 12697  00208E  D008               	goto	l384
 12698                           
 12699                           ; BSR set to: 0
 12700  002090  0E06               	movlw	6
 12701  002092  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12702  002094  B4D8               	btfsc	status,2,c
 12703  002096  0012               	return	
 12704                           
 12705                           ; BSR set to: 0
 12706  002098  0E07               	movlw	7
 12707  00209A  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12708  00209C  B4D8               	btfsc	status,2,c
 12709  00209E  0012               	return	
 12710  0020A0                     l384:
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;radio_driver_SX1276.c: 159: }
 12714                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 12715                           
 12716                           ; BSR set to: 0
 12717  0020A0  0E07               	movlw	7
 12718  0020A2  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 12719                           
 12720                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 12721  0020A4  0E01               	movlw	1
 12722  0020A6  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 12726  0020A8  0E01               	movlw	1
 12727  0020AA  EC8B  F01A         	call	_RADIO_RegisterRead
 12728  0020AE  0100               	movlb	0	; () banked
 12729  0020B0  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 12733  0020B2  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 12734  0020B4  D002               	goto	l388
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;radio_driver_SX1276.c: 168: {
 12738                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 12739  0020B6  0E01               	movlw	1
 12740  0020B8  D001               	goto	L8
 12741  0020BA                     l388:
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;radio_driver_SX1276.c: 171: else
 12745                           ;radio_driver_SX1276.c: 172: {
 12746                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 12747                           
 12748                           ; BSR set to: 0
 12749  0020BA  0E00               	movlw	0
 12750  0020BC                     L8:
 12751  0020BC  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;radio_driver_SX1276.c: 174: }
 12755                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 12756                           
 12757                           ; BSR set to: 0
 12758  0020BE  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12759  0020C0  0B07               	andlw	7
 12760  0020C2  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 12764  0020C4  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 12765  0020C6  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 12766  0020C8  B4D8               	btfsc	status,2,c
 12767  0020CA  D01B               	goto	l390
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;radio_driver_SX1276.c: 181: {
 12771                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 12772  0020CC  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 12773  0020CE  B4D8               	btfsc	status,2,c
 12774  0020D0  D009               	goto	l391
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;radio_driver_SX1276.c: 184: {
 12778                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 12779  0020D2  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12780  0020D4  0BF8               	andlw	248
 12781  0020D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 12782  0020D8  0E01               	movlw	1
 12783  0020DA  ECE6  F01A         	call	_RADIO_RegisterWrite
 12784                           
 12785                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 12786  0020DE  0E00               	movlw	0
 12787  0020E0  0100               	movlb	0	; () banked
 12788  0020E2  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 12789  0020E4                     l391:
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;radio_driver_SX1276.c: 188: }
 12793                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 12794                           
 12795                           ; BSR set to: 0
 12796  0020E4  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12797  0020E6  A4D8               	btfss	status,2,c
 12798  0020E8  D003               	goto	l392
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;radio_driver_SX1276.c: 191: {
 12802                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 12803  0020EA  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12804  0020EC  0B78               	andlw	120
 12805  0020EE  D003               	goto	L9
 12806  0020F0                     l392:
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;radio_driver_SX1276.c: 195: else
 12810                           ;radio_driver_SX1276.c: 196: {
 12811                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 12812                           
 12813                           ; BSR set to: 0
 12814  0020F0  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 12815  0020F2  0B78               	andlw	120
 12816  0020F4  0980               	iorlw	128
 12817  0020F6                     L9:
 12818  0020F6  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;radio_driver_SX1276.c: 199: }
 12822                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 12823                           
 12824                           ; BSR set to: 0
 12825  0020F8  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 12826  0020FC  0E01               	movlw	1
 12827  0020FE  ECE6  F01A         	call	_RADIO_RegisterWrite
 12828  002102                     l390:
 12829                           
 12830                           ;radio_driver_SX1276.c: 201: }
 12831                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 12832  002102  0100               	movlb	0	; () banked
 12833  002104  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 12834  002106  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 12835  002108  B4D8               	btfsc	status,2,c
 12836  00210A  0012               	return	
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;radio_driver_SX1276.c: 208: {
 12840                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 12841  00210C  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12842  00210E  B4D8               	btfsc	status,2,c
 12843  002110  D015               	goto	l395
 12844                           
 12845                           ; BSR set to: 0
 12846  002112  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 12847  002114  A4D8               	btfss	status,2,c
 12848  002116  D012               	goto	l395
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;radio_driver_SX1276.c: 212: {
 12852                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 12853  002118  0E41               	movlw	65
 12854  00211A  EC8B  F01A         	call	_RADIO_RegisterRead
 12855  00211E  0100               	movlb	0	; () banked
 12856  002120  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 12860  002122  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 12861  002124  A4D8               	btfss	status,2,c
 12862  002126  D003               	goto	l396
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;radio_driver_SX1276.c: 215: {
 12866                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 12867  002128  0E30               	movlw	48
 12868  00212A  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 12869                           
 12870                           ;radio_driver_SX1276.c: 218: }
 12871  00212C  D002               	goto	l397
 12872  00212E                     l396:
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;radio_driver_SX1276.c: 219: else
 12876                           ;radio_driver_SX1276.c: 220: {
 12877                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 12878                           
 12879                           ; BSR set to: 0
 12880  00212E  0ECF               	movlw	207
 12881  002130  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 12882  002132                     l397:
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;radio_driver_SX1276.c: 223: }
 12886                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 12887                           
 12888                           ; BSR set to: 0
 12889  002132  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 12890  002136  0E41               	movlw	65
 12891  002138  ECE6  F01A         	call	_RADIO_RegisterWrite
 12892  00213C                     l395:
 12893                           
 12894                           ;radio_driver_SX1276.c: 225: }
 12895                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 12896  00213C  0EF8               	movlw	248
 12897  00213E  0100               	movlb	0	; () banked
 12898  002140  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 12902  002142  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12903  002144  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 12907  002146  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 12908  00214A  0E01               	movlw	1
 12909  00214C  ECE6  F01A         	call	_RADIO_RegisterWrite
 12910                           
 12911                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 12912  002150  0100               	movlb	0	; () banked
 12913  002152  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 12914  002154  A4D8               	btfss	status,2,c
 12915  002156  0012               	return	
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;radio_driver_SX1276.c: 234: {
 12919                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 12920  002158  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 12921  00215A  B4D8               	btfsc	status,2,c
 12922  00215C  D006               	goto	l399
 12923  00215E                     u8650:
 12924                           
 12925                           ; BSR set to: 0
 12926                           
 12927                           ;radio_driver_SX1276.c: 238: ;
 12928                           
 12929                           ; BSR set to: 0
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;radio_driver_SX1276.c: 236: {
 12933                           ;radio_driver_SX1276.c: 237: while (HALDIO5PinValue() == 0)
 12934  00215E  ECE4  F01B         	call	_HALDIO5PinValue	;wreg free
 12935  002162  0900               	iorlw	0
 12936  002164  A4D8               	btfss	status,2,c
 12937  002166  0012               	return	
 12938  002168  D7FA               	goto	u8650
 12939  00216A                     l399:
 12940                           
 12941                           ;radio_driver_SX1276.c: 240: else
 12942                           ;radio_driver_SX1276.c: 241: {
 12943                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 12944  00216A  0E01               	movlw	1
 12945  00216C  0100               	movlb	0	; () banked
 12946  00216E  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 12947  002170  0E00               	movlw	0
 12948  002172  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 12949  002174  0E00               	movlw	0
 12950  002176  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 12951  002178  0E00               	movlw	0
 12952  00217A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 12953  00217C  EC02  F01A         	call	_SystemBlockingWaitMs	;wreg free
 12954  002180  0012               	return	
 12955  002182                     __end_of_RADIO_WriteMode:
 12956                           	opt stack 0
 12957                           tblptru	equ	0xFF8
 12958                           tblptrh	equ	0xFF7
 12959                           tblptrl	equ	0xFF6
 12960                           tablat	equ	0xFF5
 12961                           prodh	equ	0xFF4
 12962                           prodl	equ	0xFF3
 12963                           intcon	equ	0xFF2
 12964                           intcon2	equ	0xFF1
 12965                           intcon3	equ	0xFF0
 12966                           indf0	equ	0xFEF
 12967                           postinc0	equ	0xFEE
 12968                           plusw0	equ	0xFEB
 12969                           fsr0h	equ	0xFEA
 12970                           fsr0l	equ	0xFE9
 12971                           wreg	equ	0xFE8
 12972                           indf2	equ	0xFDF
 12973                           postinc2	equ	0xFDE
 12974                           postdec2	equ	0xFDD
 12975                           plusw2	equ	0xFDB
 12976                           fsr2h	equ	0xFDA
 12977                           fsr2l	equ	0xFD9
 12978                           status	equ	0xFD8
 12979                           
 12980 ;; *************** function _RADIO_RegisterRead *****************
 12981 ;; Defined at:
 12982 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;  reg             1    wreg     unsigned char 
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;  reg             1    2[BANK0 ] unsigned char 
 12987 ;;  readValue       1    3[BANK0 ] unsigned char 
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      unsigned char 
 12990 ;; Registers used:
 12991 ;;		wreg, status,2, status,0, cstack
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13000 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13001 ;;Total ram usage:        2 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:    9
 13004 ;; This function calls:
 13005 ;;		_HALSPICSAssert
 13006 ;;		_HALSPICSDeassert
 13007 ;;		_HALSPISend
 13008 ;; This function is called by:
 13009 ;;		_RADIO_WriteMode
 13010 ;;		_RADIO_WritePower
 13011 ;;		_RADIO_Init
 13012 ;;		_RADIO_WriteConfiguration
 13013 ;;		_RADIO_Transmit
 13014 ;;		_RADIO_ReadRandom
 13015 ;;		_RADIO_RxFSKTimeout
 13016 ;;		_RADIO_RxDone
 13017 ;;		_RADIO_FSKPayloadReady
 13018 ;;		_RADIO_FSKPacketSent
 13019 ;;		_RADIO_FHSSChangeChannel
 13020 ;;		_RADIO_DIO0
 13021 ;;		_RADIO_DIO1
 13022 ;;		_RADIO_DIO2
 13023 ;;		_RADIO_DIO3
 13024 ;;		_RADIO_DIO4
 13025 ;;		_RADIO_DIO5
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text67
 13030  003516                     __ptext67:
 13031                           	opt stack 0
 13032  003516                     _RADIO_RegisterRead:
 13033                           	opt stack 18
 13034                           
 13035                           ;incstack = 0
 13036                           ;RADIO_RegisterRead@reg stored from wreg
 13037  003516  0100               	movlb	0	; () banked
 13038  003518  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 13039                           
 13040                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 13041                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 13042  00351A  0100               	movlb	0	; () banked
 13043  00351C  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 13047  00351E  EC3F  F01C         	call	_HALSPICSAssert	;wreg free
 13048                           
 13049                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 13050  003522  0100               	movlb	0	; () banked
 13051  003524  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 13052  003526  ECDD  F01B         	call	_HALSPISend
 13053                           
 13054                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 13055  00352A  0EFF               	movlw	255
 13056  00352C  ECDD  F01B         	call	_HALSPISend
 13057  003530  0100               	movlb	0	; () banked
 13058  003532  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 13062  003534  EC3D  F01C         	call	_HALSPICSDeassert	;wreg free
 13063                           
 13064                           ;radio_driver_SX1276.c: 142: return readValue;
 13065  003538  0100               	movlb	0	; () banked
 13066  00353A  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 13067  00353C  0012               	return	
 13068  00353E                     __end_of_RADIO_RegisterRead:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           intcon2	equ	0xFF1
 13078                           intcon3	equ	0xFF0
 13079                           indf0	equ	0xFEF
 13080                           postinc0	equ	0xFEE
 13081                           plusw0	equ	0xFEB
 13082                           fsr0h	equ	0xFEA
 13083                           fsr0l	equ	0xFE9
 13084                           wreg	equ	0xFE8
 13085                           indf2	equ	0xFDF
 13086                           postinc2	equ	0xFDE
 13087                           postdec2	equ	0xFDD
 13088                           plusw2	equ	0xFDB
 13089                           fsr2h	equ	0xFDA
 13090                           fsr2l	equ	0xFD9
 13091                           status	equ	0xFD8
 13092                           
 13093 ;; *************** function _HALDIO5PinValue *****************
 13094 ;; Defined at:
 13095 ;;		line 91 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;		None
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;		None
 13100 ;; Return value:  Size  Location     Type
 13101 ;;                  1    wreg      unsigned char 
 13102 ;; Registers used:
 13103 ;;		wreg
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;Total ram usage:        0 bytes
 13114 ;; Hardware stack levels used:    1
 13115 ;; Hardware stack levels required when called:    7
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_RADIO_WriteMode
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text68
 13124  0037C8                     __ptext68:
 13125                           	opt stack 0
 13126  0037C8                     _HALDIO5PinValue:
 13127                           	opt stack 20
 13128                           
 13129                           ;radio_driver_hal.c: 93: return PORTBbits.RB0;
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;incstack = 0
 13133  0037C8  A081               	btfss	3969,0,c	;volatile
 13134  0037CA  D002               	goto	u7610
 13135  0037CC  0E01               	movlw	1
 13136  0037CE  0012               	return	
 13137  0037D0                     u7610:
 13138  0037D0  0E00               	movlw	0
 13139  0037D2  0012               	return	
 13140  0037D4                     __end_of_HALDIO5PinValue:
 13141                           	opt stack 0
 13142                           tblptru	equ	0xFF8
 13143                           tblptrh	equ	0xFF7
 13144                           tblptrl	equ	0xFF6
 13145                           tablat	equ	0xFF5
 13146                           prodh	equ	0xFF4
 13147                           prodl	equ	0xFF3
 13148                           intcon	equ	0xFF2
 13149                           intcon2	equ	0xFF1
 13150                           intcon3	equ	0xFF0
 13151                           indf0	equ	0xFEF
 13152                           postinc0	equ	0xFEE
 13153                           plusw0	equ	0xFEB
 13154                           fsr0h	equ	0xFEA
 13155                           fsr0l	equ	0xFE9
 13156                           wreg	equ	0xFE8
 13157                           indf2	equ	0xFDF
 13158                           postinc2	equ	0xFDE
 13159                           postdec2	equ	0xFDD
 13160                           plusw2	equ	0xFDB
 13161                           fsr2h	equ	0xFDA
 13162                           fsr2l	equ	0xFD9
 13163                           status	equ	0xFD8
 13164                           
 13165 ;; *************** function _RADIO_WriteFrequency *****************
 13166 ;; Defined at:
 13167 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;  frequency       4   13[BANK0 ] unsigned long 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  num             4   21[BANK0 ] unsigned long 
 13172 ;;  num_mod         4   17[BANK0 ] unsigned long 
 13173 ;; Return value:  Size  Location     Type
 13174 ;;                  1    wreg      void 
 13175 ;; Registers used:
 13176 ;;		wreg, status,2, status,0, cstack
 13177 ;; Tracked objects:
 13178 ;;		On entry : 0/0
 13179 ;;		On exit  : 0/0
 13180 ;;		Unchanged: 0/0
 13181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;Total ram usage:       12 bytes
 13187 ;; Hardware stack levels used:    1
 13188 ;; Hardware stack levels required when called:   10
 13189 ;; This function calls:
 13190 ;;		_RADIO_RegisterWrite
 13191 ;;		___lldiv
 13192 ;;		___llmod
 13193 ;; This function is called by:
 13194 ;;		_RADIO_Init
 13195 ;;		_RADIO_WriteConfiguration
 13196 ;;		_RADIO_FHSSChangeChannel
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text69
 13201  00236C                     __ptext69:
 13202                           	opt stack 0
 13203  00236C                     _RADIO_WriteFrequency:
 13204                           	opt stack 17
 13205                           
 13206                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 13207                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 13208                           
 13209                           ;incstack = 0
 13210  00236C  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 13211  002370  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 13212  002374  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 13213  002378  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 13214  00237C  0E09               	movlw	9
 13215  00237E  0100               	movlb	0	; () banked
 13216  002380  6F64               	movwf	___lldiv@divisor& (0+255),b
 13217  002382  0E3D               	movlw	61
 13218  002384  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13219  002386  0E00               	movlw	0
 13220  002388  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13221  00238A  0E00               	movlw	0
 13222  00238C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13223  00238E  ECE6  F015         	call	___lldiv	;wreg free
 13224  002392  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 13225  002396  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 13226  00239A  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 13227  00239E  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 13228                           
 13229                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 13230  0023A2  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 13231  0023A6  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 13232  0023AA  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 13233  0023AE  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 13234  0023B2  0E09               	movlw	9
 13235  0023B4  0100               	movlb	0	; () banked
 13236  0023B6  6F64               	movwf	___llmod@divisor& (0+255),b
 13237  0023B8  0E3D               	movlw	61
 13238  0023BA  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 13239  0023BC  0E00               	movlw	0
 13240  0023BE  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 13241  0023C0  0E00               	movlw	0
 13242  0023C2  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 13243  0023C4  ECC7  F016         	call	___llmod	;wreg free
 13244  0023C8  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 13245  0023CC  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 13246  0023D0  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 13247  0023D4  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 13248                           
 13249                           ;radio_driver_SX1276.c: 277: num <<= (8);
 13250  0023D8  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 13251  0023DC  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 13252  0023E0  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 13253  0023E4  0100               	movlb	0	; () banked
 13254  0023E6  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 13258  0023E8  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 13259  0023EC  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 13260  0023F0  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 13261  0023F4  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 13262                           
 13263                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 13264  0023F6  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 13265  0023FA  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 13266  0023FE  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 13267  002402  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 13268  002406  0E09               	movlw	9
 13269  002408  6F64               	movwf	___lldiv@divisor& (0+255),b
 13270  00240A  0E3D               	movlw	61
 13271  00240C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13272  00240E  0E00               	movlw	0
 13273  002410  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13274  002412  0E00               	movlw	0
 13275  002414  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13276  002416  ECE6  F015         	call	___lldiv	;wreg free
 13277  00241A  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 13278  00241E  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 13279  002422  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 13280  002426  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 13281                           
 13282                           ;radio_driver_SX1276.c: 283: num += num_mod;
 13283  00242A  0100               	movlb	0	; () banked
 13284  00242C  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 13285  00242E  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 13286  002430  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 13287  002432  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 13288  002434  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 13289  002436  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 13290  002438  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 13291  00243A  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 13295  00243C  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 13296  002440  0E06               	movlw	6
 13297  002442  ECE6  F01A         	call	_RADIO_RegisterWrite
 13298                           
 13299                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 13300  002446  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 13301  00244A  0E07               	movlw	7
 13302  00244C  ECE6  F01A         	call	_RADIO_RegisterWrite
 13303                           
 13304                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 13305  002450  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 13306  002454  0E08               	movlw	8
 13307  002456  ECE6  F01A         	call	_RADIO_RegisterWrite
 13308  00245A  0012               	return		;funcret
 13309  00245C                     __end_of_RADIO_WriteFrequency:
 13310                           	opt stack 0
 13311                           tblptru	equ	0xFF8
 13312                           tblptrh	equ	0xFF7
 13313                           tblptrl	equ	0xFF6
 13314                           tablat	equ	0xFF5
 13315                           prodh	equ	0xFF4
 13316                           prodl	equ	0xFF3
 13317                           intcon	equ	0xFF2
 13318                           intcon2	equ	0xFF1
 13319                           intcon3	equ	0xFF0
 13320                           indf0	equ	0xFEF
 13321                           postinc0	equ	0xFEE
 13322                           plusw0	equ	0xFEB
 13323                           fsr0h	equ	0xFEA
 13324                           fsr0l	equ	0xFE9
 13325                           wreg	equ	0xFE8
 13326                           indf2	equ	0xFDF
 13327                           postinc2	equ	0xFDE
 13328                           postdec2	equ	0xFDD
 13329                           plusw2	equ	0xFDB
 13330                           fsr2h	equ	0xFDA
 13331                           fsr2l	equ	0xFD9
 13332                           status	equ	0xFD8
 13333                           
 13334 ;; *************** function ___llmod *****************
 13335 ;; Defined at:
 13336 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  dividend        4    0[BANK0 ] unsigned long 
 13339 ;;  divisor         4    4[BANK0 ] unsigned long 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  counter         1    8[BANK0 ] unsigned char 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  4    0[BANK0 ] unsigned long 
 13344 ;; Registers used:
 13345 ;;		wreg, status,2, status,0
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;Total ram usage:        9 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    7
 13358 ;; This function calls:
 13359 ;;		Nothing
 13360 ;; This function is called by:
 13361 ;;		_RADIO_WriteFrequency
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text70
 13366  002D8E                     __ptext70:
 13367                           	opt stack 0
 13368  002D8E                     ___llmod:
 13369                           	opt stack 19
 13370                           
 13371                           ;incstack = 0
 13372  002D8E  0100               	movlb	0	; () banked
 13373  002D90  5164               	movf	___llmod@divisor& (0+255),w,b
 13374  002D92  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13375  002D94  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13376  002D96  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13377  002D98  B4D8               	btfsc	status,2,c
 13378  002D9A  D024               	goto	l2858
 13379                           
 13380                           ; BSR set to: 0
 13381  002D9C  0E01               	movlw	1
 13382  002D9E  6F68               	movwf	___llmod@counter& (0+255),b
 13383  002DA0  D006               	goto	l2853
 13384  002DA2                     
 13385                           ; BSR set to: 0
 13386                           
 13387                           ; BSR set to: 0
 13388  002DA2  90D8               	bcf	status,0,c
 13389  002DA4  3764               	rlcf	___llmod@divisor& (0+255),f,b
 13390  002DA6  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13391  002DA8  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13392  002DAA  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13393  002DAC  2B68               	incf	___llmod@counter& (0+255),f,b
 13394  002DAE                     l2853:
 13395                           
 13396                           ; BSR set to: 0
 13397                           
 13398                           ; BSR set to: 0
 13399  002DAE  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13400  002DB0  D7F8               	goto	l2854
 13401  002DB2                     u8270:
 13402                           
 13403                           ; BSR set to: 0
 13404                           
 13405                           ; BSR set to: 0
 13406                           
 13407                           ; BSR set to: 0
 13408  002DB2  5164               	movf	___llmod@divisor& (0+255),w,b
 13409  002DB4  5D60               	subwf	___llmod@dividend& (0+255),w,b
 13410  002DB6  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13411  002DB8  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13412  002DBA  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13413  002DBC  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13414  002DBE  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13415  002DC0  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13416  002DC2  A0D8               	btfss	status,0,c
 13417  002DC4  D008               	goto	l2857
 13418                           
 13419                           ; BSR set to: 0
 13420  002DC6  5164               	movf	___llmod@divisor& (0+255),w,b
 13421  002DC8  5F60               	subwf	___llmod@dividend& (0+255),f,b
 13422  002DCA  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13423  002DCC  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13424  002DCE  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13425  002DD0  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13426  002DD2  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13427  002DD4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13428  002DD6                     l2857:
 13429                           
 13430                           ; BSR set to: 0
 13431                           
 13432                           ; BSR set to: 0
 13433  002DD6  90D8               	bcf	status,0,c
 13434  002DD8  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13435  002DDA  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13436  002DDC  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13437  002DDE  3364               	rrcf	___llmod@divisor& (0+255),f,b
 13438                           
 13439                           ; BSR set to: 0
 13440  002DE0  2F68               	decfsz	___llmod@counter& (0+255),f,b
 13441  002DE2  D7E7               	goto	u8270
 13442  002DE4                     l2858:
 13443                           
 13444                           ; BSR set to: 0
 13445                           
 13446                           ; BSR set to: 0
 13447  002DE4  C060  F060         	movff	___llmod@dividend,?___llmod
 13448  002DE8  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 13449  002DEC  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 13450  002DF0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 13451                           
 13452                           ; BSR set to: 0
 13453  002DF4  0012               	return		;funcret
 13454  002DF6                     __end_of___llmod:
 13455                           	opt stack 0
 13456                           tblptru	equ	0xFF8
 13457                           tblptrh	equ	0xFF7
 13458                           tblptrl	equ	0xFF6
 13459                           tablat	equ	0xFF5
 13460                           prodh	equ	0xFF4
 13461                           prodl	equ	0xFF3
 13462                           intcon	equ	0xFF2
 13463                           intcon2	equ	0xFF1
 13464                           intcon3	equ	0xFF0
 13465                           indf0	equ	0xFEF
 13466                           postinc0	equ	0xFEE
 13467                           plusw0	equ	0xFEB
 13468                           fsr0h	equ	0xFEA
 13469                           fsr0l	equ	0xFE9
 13470                           wreg	equ	0xFE8
 13471                           indf2	equ	0xFDF
 13472                           postinc2	equ	0xFDE
 13473                           postdec2	equ	0xFDD
 13474                           plusw2	equ	0xFDB
 13475                           fsr2h	equ	0xFDA
 13476                           fsr2l	equ	0xFD9
 13477                           status	equ	0xFD8
 13478                           
 13479 ;; *************** function _RADIO_RegisterWrite *****************
 13480 ;; Defined at:
 13481 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  reg             1    wreg     unsigned char 
 13484 ;;  value           1    2[BANK0 ] unsigned char 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  reg             1    3[BANK0 ] unsigned char 
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  1    wreg      void 
 13489 ;; Registers used:
 13490 ;;		wreg, status,2, status,0, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 0/0
 13493 ;;		On exit  : 0/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13496 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13499 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13500 ;;Total ram usage:        2 bytes
 13501 ;; Hardware stack levels used:    1
 13502 ;; Hardware stack levels required when called:    9
 13503 ;; This function calls:
 13504 ;;		_HALSPICSAssert
 13505 ;;		_HALSPICSDeassert
 13506 ;;		_HALSPISend
 13507 ;; This function is called by:
 13508 ;;		_RADIO_WriteMode
 13509 ;;		_RADIO_WriteFrequency
 13510 ;;		_RADIO_WriteFSKFrequencyDeviation
 13511 ;;		_RADIO_WriteFSKBitRate
 13512 ;;		_RADIO_WritePower
 13513 ;;		_RADIO_Init
 13514 ;;		_RADIO_WriteConfiguration
 13515 ;;		_RADIO_Transmit
 13516 ;;		_RADIO_ReadRandom
 13517 ;;		_RADIO_TransmitCW
 13518 ;;		_RADIO_ReceiveStart
 13519 ;;		_RADIO_RxDone
 13520 ;;		_RADIO_RxTimeout
 13521 ;;		_RADIO_TxDone
 13522 ;;		_RADIO_UnhandledInterrupt
 13523 ;;		_RADIO_FHSSChangeChannel
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           	psect	text71
 13528  0035CC                     __ptext71:
 13529                           	opt stack 0
 13530  0035CC                     _RADIO_RegisterWrite:
 13531                           	opt stack 18
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;incstack = 0
 13535                           ;RADIO_RegisterWrite@reg stored from wreg
 13536  0035CC  0100               	movlb	0	; () banked
 13537  0035CE  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 13538                           
 13539                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 13540  0035D0  EC3F  F01C         	call	_HALSPICSAssert	;wreg free
 13541                           
 13542                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 13543  0035D4  0100               	movlb	0	; () banked
 13544  0035D6  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 13545  0035D8  0980               	iorlw	128
 13546  0035DA  ECDD  F01B         	call	_HALSPISend
 13547                           
 13548                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 13549  0035DE  0100               	movlb	0	; () banked
 13550  0035E0  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 13551  0035E2  ECDD  F01B         	call	_HALSPISend
 13552                           
 13553                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 13554  0035E6  EC3D  F01C         	call	_HALSPICSDeassert	;wreg free
 13555  0035EA  0012               	return		;funcret
 13556  0035EC                     __end_of_RADIO_RegisterWrite:
 13557                           	opt stack 0
 13558                           tblptru	equ	0xFF8
 13559                           tblptrh	equ	0xFF7
 13560                           tblptrl	equ	0xFF6
 13561                           tablat	equ	0xFF5
 13562                           prodh	equ	0xFF4
 13563                           prodl	equ	0xFF3
 13564                           intcon	equ	0xFF2
 13565                           intcon2	equ	0xFF1
 13566                           intcon3	equ	0xFF0
 13567                           indf0	equ	0xFEF
 13568                           postinc0	equ	0xFEE
 13569                           plusw0	equ	0xFEB
 13570                           fsr0h	equ	0xFEA
 13571                           fsr0l	equ	0xFE9
 13572                           wreg	equ	0xFE8
 13573                           indf2	equ	0xFDF
 13574                           postinc2	equ	0xFDE
 13575                           postdec2	equ	0xFDD
 13576                           plusw2	equ	0xFDB
 13577                           fsr2h	equ	0xFDA
 13578                           fsr2l	equ	0xFD9
 13579                           status	equ	0xFD8
 13580                           
 13581 ;; *************** function _HALSPISend *****************
 13582 ;; Defined at:
 13583 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  data            1    wreg     unsigned char 
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  data            1    1[BANK0 ] unsigned char 
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      unsigned char 
 13590 ;; Registers used:
 13591 ;;		wreg, status,2, cstack
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;Total ram usage:        1 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:    8
 13604 ;; This function calls:
 13605 ;;		_SPI2_Exchange8bit
 13606 ;; This function is called by:
 13607 ;;		_RADIO_RegisterWrite
 13608 ;;		_RADIO_RegisterRead
 13609 ;;		_RADIO_Transmit
 13610 ;;		_RADIO_RxDone
 13611 ;;		_RADIO_FSKPayloadReady
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615                           	psect	text72
 13616  0037BA                     __ptext72:
 13617                           	opt stack 0
 13618  0037BA                     _HALSPISend:
 13619                           	opt stack 18
 13620                           
 13621                           ;incstack = 0
 13622                           ;HALSPISend@data stored from wreg
 13623  0037BA  0100               	movlb	0	; () banked
 13624  0037BC  6F61               	movwf	HALSPISend@data& (0+255),b
 13625                           
 13626                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 13627  0037BE  0100               	movlb	0	; () banked
 13628  0037C0  5161               	movf	HALSPISend@data& (0+255),w,b
 13629  0037C2  EC9F  F01B         	call	_SPI2_Exchange8bit
 13630  0037C6  0012               	return	
 13631  0037C8                     __end_of_HALSPISend:
 13632                           	opt stack 0
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           intcon2	equ	0xFF1
 13641                           intcon3	equ	0xFF0
 13642                           indf0	equ	0xFEF
 13643                           postinc0	equ	0xFEE
 13644                           plusw0	equ	0xFEB
 13645                           fsr0h	equ	0xFEA
 13646                           fsr0l	equ	0xFE9
 13647                           wreg	equ	0xFE8
 13648                           indf2	equ	0xFDF
 13649                           postinc2	equ	0xFDE
 13650                           postdec2	equ	0xFDD
 13651                           plusw2	equ	0xFDB
 13652                           fsr2h	equ	0xFDA
 13653                           fsr2l	equ	0xFD9
 13654                           status	equ	0xFD8
 13655                           
 13656 ;; *************** function _SPI2_Exchange8bit *****************
 13657 ;; Defined at:
 13658 ;;		line 79 in file "mcc_generated_files/spi2.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;  data            1    wreg     unsigned char 
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;  data            1    0[BANK0 ] unsigned char 
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1    wreg      unsigned char 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13676 ;;Total ram usage:        1 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    7
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_HALSPISend
 13683 ;;		_SPI2_Exchange8bitBuffer
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           	psect	text73
 13688  00373E                     __ptext73:
 13689                           	opt stack 0
 13690  00373E                     _SPI2_Exchange8bit:
 13691                           	opt stack 18
 13692                           
 13693                           ;incstack = 0
 13694                           ;SPI2_Exchange8bit@data stored from wreg
 13695  00373E  0100               	movlb	0	; () banked
 13696  003740  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 13697                           
 13698                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 13699  003742  9E6C               	bcf	3948,7,c	;volatile
 13700                           
 13701                           ;spi2.c: 84: SSP2BUF = data;
 13702  003744  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 13703  003748                     
 13704                           ;spi2.c: 87: {
 13705  003748  A06D               	btfss	3949,0,c	;volatile
 13706  00374A  D7FE               	goto	l2187
 13707                           
 13708                           ;spi2.c: 88: }
 13709                           ;spi2.c: 90: return (SSP2BUF);
 13710  00374C  506F               	movf	3951,w,c	;volatile
 13711  00374E  0012               	return		;funcret
 13712  003750                     __end_of_SPI2_Exchange8bit:
 13713                           	opt stack 0
 13714                           tblptru	equ	0xFF8
 13715                           tblptrh	equ	0xFF7
 13716                           tblptrl	equ	0xFF6
 13717                           tablat	equ	0xFF5
 13718                           prodh	equ	0xFF4
 13719                           prodl	equ	0xFF3
 13720                           intcon	equ	0xFF2
 13721                           intcon2	equ	0xFF1
 13722                           intcon3	equ	0xFF0
 13723                           indf0	equ	0xFEF
 13724                           postinc0	equ	0xFEE
 13725                           plusw0	equ	0xFEB
 13726                           fsr0h	equ	0xFEA
 13727                           fsr0l	equ	0xFE9
 13728                           wreg	equ	0xFE8
 13729                           indf2	equ	0xFDF
 13730                           postinc2	equ	0xFDE
 13731                           postdec2	equ	0xFDD
 13732                           plusw2	equ	0xFDB
 13733                           fsr2h	equ	0xFDA
 13734                           fsr2l	equ	0xFD9
 13735                           status	equ	0xFD8
 13736                           
 13737 ;; *************** function _HALSPICSDeassert *****************
 13738 ;; Defined at:
 13739 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13740 ;; Parameters:    Size  Location     Type
 13741 ;;		None
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;		None
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  1    wreg      void 
 13746 ;; Registers used:
 13747 ;;		None
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;Total ram usage:        0 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:    7
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_RADIO_RegisterWrite
 13764 ;;		_RADIO_RegisterRead
 13765 ;;		_RADIO_Transmit
 13766 ;;		_RADIO_RxDone
 13767 ;;		_RADIO_FSKPayloadReady
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text74
 13772  00387A                     __ptext74:
 13773                           	opt stack 0
 13774  00387A                     _HALSPICSDeassert:
 13775                           	opt stack 19
 13776                           
 13777                           ;incstack = 0
 13778                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 13779  00387A  868C               	bsf	3980,3,c	;volatile
 13780  00387C  0012               	return	
 13781  00387E                     __end_of_HALSPICSDeassert:
 13782                           	opt stack 0
 13783                           tblptru	equ	0xFF8
 13784                           tblptrh	equ	0xFF7
 13785                           tblptrl	equ	0xFF6
 13786                           tablat	equ	0xFF5
 13787                           prodh	equ	0xFF4
 13788                           prodl	equ	0xFF3
 13789                           intcon	equ	0xFF2
 13790                           intcon2	equ	0xFF1
 13791                           intcon3	equ	0xFF0
 13792                           indf0	equ	0xFEF
 13793                           postinc0	equ	0xFEE
 13794                           plusw0	equ	0xFEB
 13795                           fsr0h	equ	0xFEA
 13796                           fsr0l	equ	0xFE9
 13797                           wreg	equ	0xFE8
 13798                           indf2	equ	0xFDF
 13799                           postinc2	equ	0xFDE
 13800                           postdec2	equ	0xFDD
 13801                           plusw2	equ	0xFDB
 13802                           fsr2h	equ	0xFDA
 13803                           fsr2l	equ	0xFD9
 13804                           status	equ	0xFD8
 13805                           
 13806 ;; *************** function _HALSPICSAssert *****************
 13807 ;; Defined at:
 13808 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;		None
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;		None
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  1    wreg      void 
 13815 ;; Registers used:
 13816 ;;		None
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;Total ram usage:        0 bytes
 13827 ;; Hardware stack levels used:    1
 13828 ;; Hardware stack levels required when called:    7
 13829 ;; This function calls:
 13830 ;;		Nothing
 13831 ;; This function is called by:
 13832 ;;		_RADIO_RegisterWrite
 13833 ;;		_RADIO_RegisterRead
 13834 ;;		_RADIO_Transmit
 13835 ;;		_RADIO_RxDone
 13836 ;;		_RADIO_FSKPayloadReady
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           	psect	text75
 13841  00387E                     __ptext75:
 13842                           	opt stack 0
 13843  00387E                     _HALSPICSAssert:
 13844                           	opt stack 19
 13845                           
 13846                           ;incstack = 0
 13847                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 13848  00387E  968C               	bcf	3980,3,c	;volatile
 13849  003880  0012               	return	
 13850  003882                     __end_of_HALSPICSAssert:
 13851                           	opt stack 0
 13852                           tblptru	equ	0xFF8
 13853                           tblptrh	equ	0xFF7
 13854                           tblptrl	equ	0xFF6
 13855                           tablat	equ	0xFF5
 13856                           prodh	equ	0xFF4
 13857                           prodl	equ	0xFF3
 13858                           intcon	equ	0xFF2
 13859                           intcon2	equ	0xFF1
 13860                           intcon3	equ	0xFF0
 13861                           indf0	equ	0xFEF
 13862                           postinc0	equ	0xFEE
 13863                           plusw0	equ	0xFEB
 13864                           fsr0h	equ	0xFEA
 13865                           fsr0l	equ	0xFE9
 13866                           wreg	equ	0xFE8
 13867                           indf2	equ	0xFDF
 13868                           postinc2	equ	0xFDE
 13869                           postdec2	equ	0xFDD
 13870                           plusw2	equ	0xFDB
 13871                           fsr2h	equ	0xFDA
 13872                           fsr2l	equ	0xFD9
 13873                           status	equ	0xFD8
 13874                           
 13875 ;; *************** function _RADIO_Reset *****************
 13876 ;; Defined at:
 13877 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;		None
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;		None
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  1    wreg      void 
 13884 ;; Registers used:
 13885 ;;		wreg, status,2, status,0, cstack
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 0/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13895 ;;Total ram usage:        0 bytes
 13896 ;; Hardware stack levels used:    1
 13897 ;; Hardware stack levels required when called:    8
 13898 ;; This function calls:
 13899 ;;		_HALResetPinMakeInput
 13900 ;;		_HALResetPinMakeOutput
 13901 ;;		_HALResetPinOutputValue
 13902 ;;		_SystemBlockingWaitMs
 13903 ;; This function is called by:
 13904 ;;		_RADIO_Init
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           	psect	text76
 13909  0031D0                     __ptext76:
 13910                           	opt stack 0
 13911  0031D0                     _RADIO_Reset:
 13912                           	opt stack 20
 13913                           
 13914                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 13915                           
 13916                           ;incstack = 0
 13917  0031D0  EC41  F01C         	call	_HALResetPinMakeOutput	;wreg free
 13918                           
 13919                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 13920  0031D4  0E00               	movlw	0
 13921  0031D6  EC7C  F01B         	call	_HALResetPinOutputValue
 13922                           
 13923                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 13924  0031DA  0E01               	movlw	1
 13925  0031DC  0100               	movlb	0	; () banked
 13926  0031DE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 13927  0031E0  0E00               	movlw	0
 13928  0031E2  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 13929  0031E4  0E00               	movlw	0
 13930  0031E6  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 13931  0031E8  0E00               	movlw	0
 13932  0031EA  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 13933  0031EC  EC02  F01A         	call	_SystemBlockingWaitMs	;wreg free
 13934                           
 13935                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 13936  0031F0  EC43  F01C         	call	_HALResetPinMakeInput	;wreg free
 13937                           
 13938                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 13939  0031F4  0E0A               	movlw	10
 13940  0031F6  0100               	movlb	0	; () banked
 13941  0031F8  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 13942  0031FA  0E00               	movlw	0
 13943  0031FC  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 13944  0031FE  0E00               	movlw	0
 13945  003200  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 13946  003202  0E00               	movlw	0
 13947  003204  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 13948  003206  EC02  F01A         	call	_SystemBlockingWaitMs	;wreg free
 13949                           
 13950                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 13951  00320A  0E01               	movlw	1
 13952  00320C  EC7C  F01B         	call	_HALResetPinOutputValue
 13953                           
 13954                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 13955  003210  EC41  F01C         	call	_HALResetPinMakeOutput	;wreg free
 13956  003214  0012               	return		;funcret
 13957  003216                     __end_of_RADIO_Reset:
 13958                           	opt stack 0
 13959                           tblptru	equ	0xFF8
 13960                           tblptrh	equ	0xFF7
 13961                           tblptrl	equ	0xFF6
 13962                           tablat	equ	0xFF5
 13963                           prodh	equ	0xFF4
 13964                           prodl	equ	0xFF3
 13965                           intcon	equ	0xFF2
 13966                           intcon2	equ	0xFF1
 13967                           intcon3	equ	0xFF0
 13968                           indf0	equ	0xFEF
 13969                           postinc0	equ	0xFEE
 13970                           plusw0	equ	0xFEB
 13971                           fsr0h	equ	0xFEA
 13972                           fsr0l	equ	0xFE9
 13973                           wreg	equ	0xFE8
 13974                           indf2	equ	0xFDF
 13975                           postinc2	equ	0xFDE
 13976                           postdec2	equ	0xFDD
 13977                           plusw2	equ	0xFDB
 13978                           fsr2h	equ	0xFDA
 13979                           fsr2l	equ	0xFD9
 13980                           status	equ	0xFD8
 13981                           
 13982 ;; *************** function _SystemBlockingWaitMs *****************
 13983 ;; Defined at:
 13984 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;  ms              4    0[BANK0 ] unsigned long 
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      void 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14001 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14002 ;;Total ram usage:        5 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:    7
 14005 ;; This function calls:
 14006 ;;		Nothing
 14007 ;; This function is called by:
 14008 ;;		_RADIO_WriteMode
 14009 ;;		_RADIO_Reset
 14010 ;;		_RADIO_ReadRandom
 14011 ;;		_RADIO_StopCW
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           	psect	text77
 14016  003404                     __ptext77:
 14017                           	opt stack 0
 14018  003404                     _SystemBlockingWaitMs:
 14019                           	opt stack 20
 14020                           
 14021                           ;sw_timer.c: 147: while (ms > 0)
 14022                           
 14023                           ;incstack = 0
 14024  003404  D00F               	goto	l231
 14025  003406                     
 14026                           ;sw_timer.c: 148: {
 14027                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 14028  003406  0E06               	movlw	6
 14029  003408  0100               	movlb	0	; () banked
 14030  00340A  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 14031  00340C  0E30               	movlw	48
 14032  00340E                     u13337:
 14033  00340E  2EE8               	decfsz	wreg,f,c
 14034  003410  D7FE               	bra	u13337
 14035  003412  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 14036  003414  D7FC               	bra	u13337
 14037  003416  F000               	nop	
 14038                           
 14039                           ;sw_timer.c: 150: ms--;
 14040  003418  0100               	movlb	0	; () banked
 14041  00341A  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 14042  00341C  0E00               	movlw	0
 14043  00341E  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 14044  003420  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 14045  003422  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 14046  003424                     l231:
 14047                           
 14048                           ; BSR set to: 0
 14049  003424  0100               	movlb	0	; () banked
 14050  003426  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 14051  003428  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 14052  00342A  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 14053  00342C  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 14054  00342E  B4D8               	btfsc	status,2,c
 14055  003430  0012               	return	
 14056  003432  D7E9               	goto	l232
 14057  003434                     __end_of_SystemBlockingWaitMs:
 14058                           	opt stack 0
 14059                           tblptru	equ	0xFF8
 14060                           tblptrh	equ	0xFF7
 14061                           tblptrl	equ	0xFF6
 14062                           tablat	equ	0xFF5
 14063                           prodh	equ	0xFF4
 14064                           prodl	equ	0xFF3
 14065                           intcon	equ	0xFF2
 14066                           intcon2	equ	0xFF1
 14067                           intcon3	equ	0xFF0
 14068                           indf0	equ	0xFEF
 14069                           postinc0	equ	0xFEE
 14070                           plusw0	equ	0xFEB
 14071                           fsr0h	equ	0xFEA
 14072                           fsr0l	equ	0xFE9
 14073                           wreg	equ	0xFE8
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function _HALResetPinOutputValue *****************
 14083 ;; Defined at:
 14084 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  value           1    wreg     unsigned char 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  value           1    0[BANK0 ] unsigned char 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  1    wreg      void 
 14091 ;; Registers used:
 14092 ;;		wreg, status,2, status,0
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/0
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14102 ;;Total ram usage:        1 bytes
 14103 ;; Hardware stack levels used:    1
 14104 ;; Hardware stack levels required when called:    7
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_RADIO_Reset
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           	psect	text78
 14113  0036F8                     __ptext78:
 14114                           	opt stack 0
 14115  0036F8                     _HALResetPinOutputValue:
 14116                           	opt stack 20
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;incstack = 0
 14120                           ;HALResetPinOutputValue@value stored from wreg
 14121  0036F8  0100               	movlb	0	; () banked
 14122  0036FA  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 14123                           
 14124                           ;radio_driver_hal.c: 57: if (value == 0)
 14125  0036FC  0100               	movlb	0	; () banked
 14126  0036FE  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 14127  003700  A4D8               	btfss	status,2,c
 14128  003702  D002               	goto	l144
 14129                           
 14130                           ; BSR set to: 0
 14131                           
 14132                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 14133  003704  948B               	bcf	3979,2,c	;volatile
 14134                           
 14135                           ; BSR set to: 0
 14136  003706  0012               	return	
 14137  003708                     l144:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;radio_driver_hal.c: 59: else if (value == 1)
 14141                           
 14142                           ; BSR set to: 0
 14143  003708  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 14144  00370A  A4D8               	btfss	status,2,c
 14145  00370C  0012               	return	
 14146                           
 14147                           ; BSR set to: 0
 14148                           
 14149                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 14150  00370E  848B               	bsf	3979,2,c	;volatile
 14151                           
 14152                           ; BSR set to: 0
 14153                           
 14154                           ; BSR set to: 0
 14155  003710  0012               	return	
 14156  003712                     __end_of_HALResetPinOutputValue:
 14157                           	opt stack 0
 14158                           tblptru	equ	0xFF8
 14159                           tblptrh	equ	0xFF7
 14160                           tblptrl	equ	0xFF6
 14161                           tablat	equ	0xFF5
 14162                           prodh	equ	0xFF4
 14163                           prodl	equ	0xFF3
 14164                           intcon	equ	0xFF2
 14165                           intcon2	equ	0xFF1
 14166                           intcon3	equ	0xFF0
 14167                           indf0	equ	0xFEF
 14168                           postinc0	equ	0xFEE
 14169                           plusw0	equ	0xFEB
 14170                           fsr0h	equ	0xFEA
 14171                           fsr0l	equ	0xFE9
 14172                           wreg	equ	0xFE8
 14173                           indf2	equ	0xFDF
 14174                           postinc2	equ	0xFDE
 14175                           postdec2	equ	0xFDD
 14176                           plusw2	equ	0xFDB
 14177                           fsr2h	equ	0xFDA
 14178                           fsr2l	equ	0xFD9
 14179                           status	equ	0xFD8
 14180                           
 14181 ;; *************** function _HALResetPinMakeOutput *****************
 14182 ;; Defined at:
 14183 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;		None
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      void 
 14190 ;; Registers used:
 14191 ;;		None
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14201 ;;Total ram usage:        0 bytes
 14202 ;; Hardware stack levels used:    1
 14203 ;; Hardware stack levels required when called:    7
 14204 ;; This function calls:
 14205 ;;		Nothing
 14206 ;; This function is called by:
 14207 ;;		_RADIO_Reset
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text79
 14212  003882                     __ptext79:
 14213                           	opt stack 0
 14214  003882                     _HALResetPinMakeOutput:
 14215                           	opt stack 20
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;incstack = 0
 14219                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 14220  003882  9494               	bcf	3988,2,c	;volatile
 14221  003884  0012               	return	
 14222  003886                     __end_of_HALResetPinMakeOutput:
 14223                           	opt stack 0
 14224                           tblptru	equ	0xFF8
 14225                           tblptrh	equ	0xFF7
 14226                           tblptrl	equ	0xFF6
 14227                           tablat	equ	0xFF5
 14228                           prodh	equ	0xFF4
 14229                           prodl	equ	0xFF3
 14230                           intcon	equ	0xFF2
 14231                           intcon2	equ	0xFF1
 14232                           intcon3	equ	0xFF0
 14233                           indf0	equ	0xFEF
 14234                           postinc0	equ	0xFEE
 14235                           plusw0	equ	0xFEB
 14236                           fsr0h	equ	0xFEA
 14237                           fsr0l	equ	0xFE9
 14238                           wreg	equ	0xFE8
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           plusw2	equ	0xFDB
 14243                           fsr2h	equ	0xFDA
 14244                           fsr2l	equ	0xFD9
 14245                           status	equ	0xFD8
 14246                           
 14247 ;; *************** function _HALResetPinMakeInput *****************
 14248 ;; Defined at:
 14249 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;		None
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1    wreg      void 
 14256 ;; Registers used:
 14257 ;;		None
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 0/0
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;Total ram usage:        0 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; Hardware stack levels required when called:    7
 14270 ;; This function calls:
 14271 ;;		Nothing
 14272 ;; This function is called by:
 14273 ;;		_RADIO_Reset
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           	psect	text80
 14278  003886                     __ptext80:
 14279                           	opt stack 0
 14280  003886                     _HALResetPinMakeInput:
 14281                           	opt stack 20
 14282                           
 14283                           ;incstack = 0
 14284                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 14285  003886  8494               	bsf	3988,2,c	;volatile
 14286  003888  0012               	return	
 14287  00388A                     __end_of_HALResetPinMakeInput:
 14288                           	opt stack 0
 14289                           tblptru	equ	0xFF8
 14290                           tblptrh	equ	0xFF7
 14291                           tblptrl	equ	0xFF6
 14292                           tablat	equ	0xFF5
 14293                           prodh	equ	0xFF4
 14294                           prodl	equ	0xFF3
 14295                           intcon	equ	0xFF2
 14296                           intcon2	equ	0xFF1
 14297                           intcon3	equ	0xFF0
 14298                           indf0	equ	0xFEF
 14299                           postinc0	equ	0xFEE
 14300                           plusw0	equ	0xFEB
 14301                           fsr0h	equ	0xFEA
 14302                           fsr0l	equ	0xFE9
 14303                           wreg	equ	0xFE8
 14304                           indf2	equ	0xFDF
 14305                           postinc2	equ	0xFDE
 14306                           postdec2	equ	0xFDD
 14307                           plusw2	equ	0xFDB
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8
 14311                           
 14312 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 14313 ;; Defined at:
 14314 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  period          2   58[BANK0 ] unsigned int 
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;  iCtr            1   68[BANK0 ] unsigned char 
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  1    wreg      void 
 14321 ;; Registers used:
 14322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;Total ram usage:       11 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:   11
 14335 ;; This function calls:
 14336 ;;		_SwTimerSetTimeout
 14337 ;;		_SwTimerStart
 14338 ;;		_SwTimerStop
 14339 ;;		___lldiv
 14340 ;;		___lmul
 14341 ;; This function is called by:
 14342 ;;		_LORAWAN_Reset
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text81
 14347  001AAE                     __ptext81:
 14348                           	opt stack 0
 14349  001AAE                     _LORAWAN_LinkCheckConfigure:
 14350                           	opt stack 17
 14351                           
 14352                           ;lorawan.c: 757: uint8_t iCtr;
 14353                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 14354                           
 14355                           ;incstack = 0
 14356  001AAE  C09A  F060         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 14357  001AB2  C09B  F061         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 14358  001AB6  0100               	movlb	0	; () banked
 14359  001AB8  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 14360  001ABA  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 14361  001ABC  0EE8               	movlw	232
 14362  001ABE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 14363  001AC0  0E03               	movlw	3
 14364  001AC2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14365  001AC4  0E00               	movlw	0
 14366  001AC6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14367  001AC8  0E00               	movlw	0
 14368  001ACA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14369  001ACC  ECEC  F017         	call	___lmul	;wreg free
 14370  001AD0  C060  F2CC         	movff	?___lmul,_loRa+204
 14371  001AD4  C061  F2CD         	movff	?___lmul+1,_loRa+205
 14372  001AD8  C062  F2CE         	movff	?___lmul+2,_loRa+206
 14373  001ADC  C063  F2CF         	movff	?___lmul+3,_loRa+207
 14374                           
 14375                           ;lorawan.c: 761: if (period == 0)
 14376  001AE0  0100               	movlb	0	; () banked
 14377  001AE2  519A               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 14378  001AE4  119B               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 14379  001AE6  A4D8               	btfss	status,2,c
 14380  001AE8  D02B               	goto	l1774
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;lorawan.c: 762: {
 14384                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 14385  001AEA  0102               	movlb	2	; () banked
 14386  001AEC  51E7               	movf	(_loRa+231)& (0+255),w,b
 14387  001AEE  EC9F  F01A         	call	_SwTimerStop
 14388                           
 14389                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 14390  001AF2  0102               	movlb	2	; () banked
 14391  001AF4  9503               	bcf	(_loRa+3)& (0+255),2,b
 14392                           
 14393                           ; BSR set to: 2
 14394                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 14395  001AF6  0E00               	movlw	0
 14396  001AF8  0100               	movlb	0	; () banked
 14397  001AFA  6FA4               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 14398  001AFC  D01A               	goto	l1775
 14399  001AFE                     
 14400                           ; BSR set to: 0
 14401                           ;lorawan.c: 766: {
 14402                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 14403                           
 14404                           ; BSR set to: 0
 14405  001AFE  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14406  001B00  0D02               	mullw	2
 14407  001B02  0EA8               	movlw	low (_loRa+168)
 14408  001B04  24F3               	addwf	prodl,w,c
 14409  001B06  6ED9               	movwf	fsr2l,c
 14410  001B08  0E02               	movlw	high (_loRa+168)
 14411  001B0A  20F4               	addwfc	prodh,w,c
 14412  001B0C  6EDA               	movwf	fsr2h,c
 14413  001B0E  0E02               	movlw	2
 14414  001B10  18DE               	xorwf	postinc2,w,c
 14415  001B12  A4D8               	btfss	status,2,c
 14416  001B14  D00C               	goto	l1777
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;lorawan.c: 768: {
 14420                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 14421  001B16  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14422  001B18  0D02               	mullw	2
 14423  001B1A  0EA8               	movlw	low (_loRa+168)
 14424  001B1C  24F3               	addwf	prodl,w,c
 14425  001B1E  6ED9               	movwf	fsr2l,c
 14426  001B20  0E02               	movlw	high (_loRa+168)
 14427  001B22  20F4               	addwfc	prodh,w,c
 14428  001B24  6EDA               	movwf	fsr2h,c
 14429  001B26  0EFF               	movlw	255
 14430  001B28  6EDF               	movwf	indf2,c
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 14434  001B2A  0102               	movlb	2	; () banked
 14435  001B2C  07A7               	decf	(_loRa+167)& (0+255),f,b
 14436  001B2E                     l1777:
 14437                           
 14438                           ; BSR set to: 2
 14439  001B2E  0100               	movlb	0	; () banked
 14440  001B30  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 14441  001B32                     l1775:
 14442                           
 14443                           ; BSR set to: 0
 14444                           
 14445                           ; BSR set to: 0
 14446  001B32  0102               	movlb	2	; () banked
 14447  001B34  51A7               	movf	(_loRa+167)& (0+255),w,b
 14448  001B36  0100               	movlb	0	; () banked
 14449  001B38  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 14450  001B3A  B0D8               	btfsc	status,0,c
 14451  001B3C  0012               	return	
 14452  001B3E  D7DF               	goto	l1776
 14453  001B40                     l1774:
 14454                           
 14455                           ; BSR set to: 0
 14456                           ;lorawan.c: 776: else
 14457                           ;lorawan.c: 777: {
 14458                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 14459  001B40  0102               	movlb	2	; () banked
 14460  001B42  8503               	bsf	(_loRa+3)& (0+255),2,b
 14461                           
 14462                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 14463  001B44  A902               	btfss	(_loRa+2)& (0+255),4,b
 14464  001B46  0012               	return	
 14465                           
 14466                           ; BSR set to: 2
 14467                           ;lorawan.c: 782: {
 14468                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 14469  001B48  51CF               	movf	(_loRa+207)& (0+255),w,b
 14470  001B4A  E107               	bnz	u11130
 14471  001B4C  29CC               	incf	(_loRa+204)& (0+255),w,b
 14472  001B4E  0EFF               	movlw	255
 14473  001B50  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 14474  001B52  0E0F               	movlw	15
 14475  001B54  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 14476  001B56  A0D8               	btfss	status,0,c
 14477  001B58  D01D               	goto	l1782
 14478  001B5A                     u11130:
 14479                           
 14480                           ; BSR set to: 2
 14481  001B5A  C2CC  F060         	movff	_loRa+204,___lldiv@dividend
 14482  001B5E  C2CD  F061         	movff	_loRa+205,___lldiv@dividend+1
 14483  001B62  C2CE  F062         	movff	_loRa+206,___lldiv@dividend+2
 14484  001B66  C2CF  F063         	movff	_loRa+207,___lldiv@dividend+3
 14485  001B6A  0E7D               	movlw	125
 14486  001B6C  0100               	movlb	0	; () banked
 14487  001B6E  6F64               	movwf	___lldiv@divisor& (0+255),b
 14488  001B70  0E00               	movlw	0
 14489  001B72  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14490  001B74  0E00               	movlw	0
 14491  001B76  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14492  001B78  0E00               	movlw	0
 14493  001B7A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14494  001B7C  ECE6  F015         	call	___lldiv	;wreg free
 14495  001B80  0E0C               	movlw	12
 14496  001B82                     u11145:
 14497  001B82  90D8               	bcf	status,0,c
 14498  001B84  0100               	movlb	0	; () banked
 14499  001B86  3760               	rlcf	?___lldiv& (0+255),f,b
 14500  001B88  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 14501  001B8A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 14502  001B8C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 14503  001B8E  2EE8               	decfsz	wreg,f,c
 14504  001B90  D7F8               	goto	u11145
 14505  001B92  D023               	goto	L10
 14506  001B94                     l1782:
 14507                           
 14508                           ; BSR set to: 0
 14509  001B94  C2CC  F09C         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 14510  001B98  C2CD  F09D         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 14511  001B9C  C2CE  F09E         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 14512  001BA0  C2CF  F09F         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 14513  001BA4  0E0C               	movlw	12
 14514  001BA6                     u11155:
 14515  001BA6  90D8               	bcf	status,0,c
 14516  001BA8  0100               	movlb	0	; () banked
 14517  001BAA  379C               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 14518  001BAC  379D               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 14519  001BAE  379E               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 14520  001BB0  379F               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 14521  001BB2  2EE8               	decfsz	wreg,f,c
 14522  001BB4  D7F8               	goto	u11155
 14523  001BB6  C09C  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 14524  001BBA  C09D  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 14525  001BBE  C09E  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 14526  001BC2  C09F  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 14527  001BC6  0E7D               	movlw	125
 14528  001BC8  6F64               	movwf	___lldiv@divisor& (0+255),b
 14529  001BCA  0E00               	movlw	0
 14530  001BCC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14531  001BCE  0E00               	movlw	0
 14532  001BD0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14533  001BD2  0E00               	movlw	0
 14534  001BD4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14535  001BD6  ECE6  F015         	call	___lldiv	;wreg free
 14536  001BDA                     L10:
 14537  001BDA  C060  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2491
 14538  001BDE  C061  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2491+1
 14539  001BE2  C062  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2491+2
 14540  001BE6  C063  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2491+3
 14541  001BEA  C0A0  F060         	movff	_LORAWAN_LinkCheckConfigure$2491,SwTimerSetTimeout@timeout
 14542  001BEE  C0A1  F061         	movff	_LORAWAN_LinkCheckConfigure$2491+1,SwTimerSetTimeout@timeout+1
 14543  001BF2  C0A2  F062         	movff	_LORAWAN_LinkCheckConfigure$2491+2,SwTimerSetTimeout@timeout+2
 14544  001BF6  C0A3  F063         	movff	_LORAWAN_LinkCheckConfigure$2491+3,SwTimerSetTimeout@timeout+3
 14545  001BFA  0102               	movlb	2	; () banked
 14546  001BFC  51E7               	movf	(_loRa+231)& (0+255),w,b
 14547  001BFE  EC71  F019         	call	_SwTimerSetTimeout
 14548                           
 14549                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 14550  001C02  0102               	movlb	2	; () banked
 14551  001C04  51E7               	movf	(_loRa+231)& (0+255),w,b
 14552  001C06  ECF2  F013         	call	_SwTimerStart
 14553  001C0A  0012               	return	
 14554  001C0C                     __end_of_LORAWAN_LinkCheckConfigure:
 14555                           	opt stack 0
 14556                           tblptru	equ	0xFF8
 14557                           tblptrh	equ	0xFF7
 14558                           tblptrl	equ	0xFF6
 14559                           tablat	equ	0xFF5
 14560                           prodh	equ	0xFF4
 14561                           prodl	equ	0xFF3
 14562                           intcon	equ	0xFF2
 14563                           intcon2	equ	0xFF1
 14564                           intcon3	equ	0xFF0
 14565                           indf0	equ	0xFEF
 14566                           postinc0	equ	0xFEE
 14567                           plusw0	equ	0xFEB
 14568                           fsr0h	equ	0xFEA
 14569                           fsr0l	equ	0xFE9
 14570                           wreg	equ	0xFE8
 14571                           indf2	equ	0xFDF
 14572                           postinc2	equ	0xFDE
 14573                           postdec2	equ	0xFDD
 14574                           plusw2	equ	0xFDB
 14575                           fsr2h	equ	0xFDA
 14576                           fsr2l	equ	0xFD9
 14577                           status	equ	0xFD8
 14578                           
 14579 ;; *************** function ___lmul *****************
 14580 ;; Defined at:
 14581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 14582 ;; Parameters:    Size  Location     Type
 14583 ;;  multiplier      4    0[BANK0 ] unsigned long 
 14584 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 14585 ;; Auto vars:     Size  Location     Type
 14586 ;;  product         4    8[BANK0 ] unsigned long 
 14587 ;; Return value:  Size  Location     Type
 14588 ;;                  4    0[BANK0 ] unsigned long 
 14589 ;; Registers used:
 14590 ;;		wreg, status,2, status,0
 14591 ;; Tracked objects:
 14592 ;;		On entry : 0/0
 14593 ;;		On exit  : 0/0
 14594 ;;		Unchanged: 0/0
 14595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14596 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;Total ram usage:       12 bytes
 14601 ;; Hardware stack levels used:    1
 14602 ;; Hardware stack levels required when called:    7
 14603 ;; This function calls:
 14604 ;;		Nothing
 14605 ;; This function is called by:
 14606 ;;		_RADIO_WriteConfiguration
 14607 ;;		_LORAWAN_TxDone
 14608 ;;		_LORAWAN_LinkCheckConfigure
 14609 ;;		_rand
 14610 ;;		_RADIO_TxDone
 14611 ;;		_RADIO_FSKPacketSent
 14612 ;;		_ExecuteNewChannel
 14613 ;;		_ExecuteRxParamSetupReq
 14614 ;;		_UpdateCfList
 14615 ;;		_LORAWAN_Pause
 14616 ;; This function uses a non-reentrant model
 14617 ;;
 14618                           
 14619                           	psect	text82
 14620  002FD8                     __ptext82:
 14621                           	opt stack 0
 14622  002FD8                     ___lmul:
 14623                           	opt stack 18
 14624                           
 14625                           ;incstack = 0
 14626  002FD8  0E00               	movlw	0
 14627  002FDA  0100               	movlb	0	; () banked
 14628  002FDC  6F68               	movwf	___lmul@product& (0+255),b
 14629  002FDE  0E00               	movlw	0
 14630  002FE0  6F69               	movwf	(___lmul@product+1)& (0+255),b
 14631  002FE2  0E00               	movlw	0
 14632  002FE4  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 14633  002FE6  0E00               	movlw	0
 14634  002FE8  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 14635  002FEA                     
 14636                           ; BSR set to: 0
 14637                           
 14638                           ; BSR set to: 0
 14639  002FEA  A160               	btfss	___lmul@multiplier& (0+255),0,b
 14640  002FEC  D008               	goto	l2505
 14641                           
 14642                           ; BSR set to: 0
 14643  002FEE  5164               	movf	___lmul@multiplicand& (0+255),w,b
 14644  002FF0  2768               	addwf	___lmul@product& (0+255),f,b
 14645  002FF2  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 14646  002FF4  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 14647  002FF6  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 14648  002FF8  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 14649  002FFA  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 14650  002FFC  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 14651  002FFE                     l2505:
 14652                           
 14653                           ; BSR set to: 0
 14654                           
 14655                           ; BSR set to: 0
 14656  002FFE  90D8               	bcf	status,0,c
 14657  003000  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 14658  003002  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 14659  003004  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 14660  003006  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 14661                           
 14662                           ; BSR set to: 0
 14663  003008  90D8               	bcf	status,0,c
 14664  00300A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 14665  00300C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 14666  00300E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 14667  003010  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 14668  003012  5160               	movf	___lmul@multiplier& (0+255),w,b
 14669  003014  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 14670  003016  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 14671  003018  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 14672  00301A  A4D8               	btfss	status,2,c
 14673  00301C  D7E6               	goto	l2504
 14674                           
 14675                           ; BSR set to: 0
 14676  00301E  C068  F060         	movff	___lmul@product,?___lmul
 14677  003022  C069  F061         	movff	___lmul@product+1,?___lmul+1
 14678  003026  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 14679  00302A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 14680                           
 14681                           ; BSR set to: 0
 14682  00302E  0012               	return		;funcret
 14683  003030                     __end_of___lmul:
 14684                           	opt stack 0
 14685                           tblptru	equ	0xFF8
 14686                           tblptrh	equ	0xFF7
 14687                           tblptrl	equ	0xFF6
 14688                           tablat	equ	0xFF5
 14689                           prodh	equ	0xFF4
 14690                           prodl	equ	0xFF3
 14691                           intcon	equ	0xFF2
 14692                           intcon2	equ	0xFF1
 14693                           intcon3	equ	0xFF0
 14694                           indf0	equ	0xFEF
 14695                           postinc0	equ	0xFEE
 14696                           plusw0	equ	0xFEB
 14697                           fsr0h	equ	0xFEA
 14698                           fsr0l	equ	0xFE9
 14699                           wreg	equ	0xFE8
 14700                           indf2	equ	0xFDF
 14701                           postinc2	equ	0xFDE
 14702                           postdec2	equ	0xFDD
 14703                           plusw2	equ	0xFDB
 14704                           fsr2h	equ	0xFDA
 14705                           fsr2l	equ	0xFD9
 14706                           status	equ	0xFD8
 14707                           
 14708 ;; *************** function ___lldiv *****************
 14709 ;; Defined at:
 14710 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14711 ;; Parameters:    Size  Location     Type
 14712 ;;  dividend        4    0[BANK0 ] unsigned long 
 14713 ;;  divisor         4    4[BANK0 ] unsigned long 
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;  quotient        4    8[BANK0 ] unsigned long 
 14716 ;;  counter         1   12[BANK0 ] unsigned char 
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  4    0[BANK0 ] unsigned long 
 14719 ;; Registers used:
 14720 ;;		wreg, status,2, status,0
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14727 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14729 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14730 ;;Total ram usage:       13 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:    7
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_RADIO_WriteFrequency
 14737 ;;		_RADIO_WriteFSKFrequencyDeviation
 14738 ;;		_RADIO_WriteFSKBitRate
 14739 ;;		_RADIO_Transmit
 14740 ;;		_LORAWAN_TxDone
 14741 ;;		_LORAWAN_RxTimeout
 14742 ;;		_DutyCycleCallback
 14743 ;;		_LORAWAN_LinkCheckConfigure
 14744 ;;		_LORAWAN_LinkCheckCallback
 14745 ;;		_UpdateRetransmissionAckTimeoutState
 14746 ;;		_UpdateJoinSuccessState
 14747 ;;		_RADIO_ReceiveStart
 14748 ;;		_StartReTxTimer
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752                           	psect	text83
 14753  002BCC                     __ptext83:
 14754                           	opt stack 0
 14755  002BCC                     ___lldiv:
 14756                           	opt stack 21
 14757                           
 14758                           ; BSR set to: 0
 14759                           ;incstack = 0
 14760  002BCC  0E00               	movlw	0
 14761  002BCE  0100               	movlb	0	; () banked
 14762  002BD0  6F68               	movwf	___lldiv@quotient& (0+255),b
 14763  002BD2  0E00               	movlw	0
 14764  002BD4  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14765  002BD6  0E00               	movlw	0
 14766  002BD8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14767  002BDA  0E00               	movlw	0
 14768  002BDC  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  002BDE  5164               	movf	___lldiv@divisor& (0+255),w,b
 14772  002BE0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14773  002BE2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14774  002BE4  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14775  002BE6  B4D8               	btfsc	status,2,c
 14776  002BE8  D02A               	goto	l2848
 14777                           
 14778                           ; BSR set to: 0
 14779  002BEA  0E01               	movlw	1
 14780  002BEC  6F6C               	movwf	___lldiv@counter& (0+255),b
 14781  002BEE  D006               	goto	l2843
 14782  002BF0                     
 14783                           ; BSR set to: 0
 14784                           
 14785                           ; BSR set to: 0
 14786  002BF0  90D8               	bcf	status,0,c
 14787  002BF2  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14788  002BF4  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14789  002BF6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14790  002BF8  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14791  002BFA  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14792  002BFC                     l2843:
 14793                           
 14794                           ; BSR set to: 0
 14795                           
 14796                           ; BSR set to: 0
 14797  002BFC  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14798  002BFE  D7F8               	goto	l2844
 14799  002C00                     u8240:
 14800                           
 14801                           ; BSR set to: 0
 14802                           
 14803                           ; BSR set to: 0
 14804                           
 14805                           ; BSR set to: 0
 14806  002C00  90D8               	bcf	status,0,c
 14807  002C02  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14808  002C04  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14809  002C06  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14810  002C08  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14811                           
 14812                           ; BSR set to: 0
 14813  002C0A  5164               	movf	___lldiv@divisor& (0+255),w,b
 14814  002C0C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14815  002C0E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14816  002C10  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14817  002C12  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14818  002C14  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14819  002C16  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14820  002C18  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14821  002C1A  A0D8               	btfss	status,0,c
 14822  002C1C  D009               	goto	l2847
 14823                           
 14824                           ; BSR set to: 0
 14825  002C1E  5164               	movf	___lldiv@divisor& (0+255),w,b
 14826  002C20  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14827  002C22  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14828  002C24  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14829  002C26  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14830  002C28  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14831  002C2A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14832  002C2C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14833                           
 14834                           ; BSR set to: 0
 14835  002C2E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14836  002C30                     l2847:
 14837                           
 14838                           ; BSR set to: 0
 14839                           
 14840                           ; BSR set to: 0
 14841  002C30  90D8               	bcf	status,0,c
 14842  002C32  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14843  002C34  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14844  002C36  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14845  002C38  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14846                           
 14847                           ; BSR set to: 0
 14848  002C3A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14849  002C3C  D7E1               	goto	u8240
 14850  002C3E                     l2848:
 14851                           
 14852                           ; BSR set to: 0
 14853                           
 14854                           ; BSR set to: 0
 14855  002C3E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14856  002C42  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14857  002C46  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14858  002C4A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14859                           
 14860                           ; BSR set to: 0
 14861  002C4E  0012               	return		;funcret
 14862  002C50                     __end_of___lldiv:
 14863                           	opt stack 0
 14864                           tblptru	equ	0xFF8
 14865                           tblptrh	equ	0xFF7
 14866                           tblptrl	equ	0xFF6
 14867                           tablat	equ	0xFF5
 14868                           prodh	equ	0xFF4
 14869                           prodl	equ	0xFF3
 14870                           intcon	equ	0xFF2
 14871                           intcon2	equ	0xFF1
 14872                           intcon3	equ	0xFF0
 14873                           indf0	equ	0xFEF
 14874                           postinc0	equ	0xFEE
 14875                           plusw0	equ	0xFEB
 14876                           fsr0h	equ	0xFEA
 14877                           fsr0l	equ	0xFE9
 14878                           wreg	equ	0xFE8
 14879                           indf2	equ	0xFDF
 14880                           postinc2	equ	0xFDE
 14881                           postdec2	equ	0xFDD
 14882                           plusw2	equ	0xFDB
 14883                           fsr2h	equ	0xFDA
 14884                           fsr2l	equ	0xFD9
 14885                           status	equ	0xFD8
 14886                           
 14887 ;; *************** function _SwTimerStop *****************
 14888 ;; Defined at:
 14889 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;  timerId         1    wreg     unsigned char 
 14892 ;; Auto vars:     Size  Location     Type
 14893 ;;  timerId         1    0[BANK0 ] unsigned char 
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  1    wreg      void 
 14896 ;; Registers used:
 14897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14907 ;;Total ram usage:        1 bytes
 14908 ;; Hardware stack levels used:    1
 14909 ;; Hardware stack levels required when called:    7
 14910 ;; This function calls:
 14911 ;;		Nothing
 14912 ;; This function is called by:
 14913 ;;		_RADIO_Init
 14914 ;;		_RADIO_Transmit
 14915 ;;		_RADIO_RxFSKTimeout
 14916 ;;		_LORAWAN_TxDone
 14917 ;;		_StopAllSoftwareTimers
 14918 ;;		_LORAWAN_LinkCheckConfigure
 14919 ;;		_RADIO_RxDone
 14920 ;;		_RADIO_FSKPayloadReady
 14921 ;;		_RADIO_RxTimeout
 14922 ;;		_RADIO_TxDone
 14923 ;;		_RADIO_FSKPacketSent
 14924 ;;		_LORAWAN_RxDone
 14925 ;; This function uses a non-reentrant model
 14926 ;;
 14927                           
 14928                           	psect	text84
 14929  00353E                     __ptext84:
 14930                           	opt stack 0
 14931  00353E                     _SwTimerStop:
 14932                           	opt stack 21
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;incstack = 0
 14936                           ;SwTimerStop@timerId stored from wreg
 14937  00353E  0100               	movlb	0	; () banked
 14938  003540  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 14939                           
 14940                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 14941  003542  9EF2               	bcf	intcon,7,c	;volatile
 14942                           
 14943                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 14944  003544  0100               	movlb	0	; () banked
 14945  003546  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 14946  003548  0D08               	mullw	8
 14947  00354A  0E04               	movlw	4
 14948  00354C  26F3               	addwf	prodl,f,c
 14949  00354E  0E00               	movlw	0
 14950  003550  22F4               	addwfc	prodh,f,c
 14951  003552  0E00               	movlw	low _swTimers
 14952  003554  24F3               	addwf	prodl,w,c
 14953  003556  6ED9               	movwf	fsr2l,c
 14954  003558  0E03               	movlw	high _swTimers
 14955  00355A  20F4               	addwfc	prodh,w,c
 14956  00355C  6EDA               	movwf	fsr2h,c
 14957  00355E  0E00               	movlw	0
 14958  003560  6EDF               	movwf	indf2,c
 14959                           
 14960                           ; BSR set to: 0
 14961                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 14962  003562  8EF2               	bsf	intcon,7,c	;volatile
 14963                           
 14964                           ; BSR set to: 0
 14965  003564  0012               	return		;funcret
 14966  003566                     __end_of_SwTimerStop:
 14967                           	opt stack 0
 14968                           tblptru	equ	0xFF8
 14969                           tblptrh	equ	0xFF7
 14970                           tblptrl	equ	0xFF6
 14971                           tablat	equ	0xFF5
 14972                           prodh	equ	0xFF4
 14973                           prodl	equ	0xFF3
 14974                           intcon	equ	0xFF2
 14975                           intcon2	equ	0xFF1
 14976                           intcon3	equ	0xFF0
 14977                           indf0	equ	0xFEF
 14978                           postinc0	equ	0xFEE
 14979                           plusw0	equ	0xFEB
 14980                           fsr0h	equ	0xFEA
 14981                           fsr0l	equ	0xFE9
 14982                           wreg	equ	0xFE8
 14983                           indf2	equ	0xFDF
 14984                           postinc2	equ	0xFDE
 14985                           postdec2	equ	0xFDD
 14986                           plusw2	equ	0xFDB
 14987                           fsr2h	equ	0xFDA
 14988                           fsr2l	equ	0xFD9
 14989                           status	equ	0xFD8
 14990                           
 14991 ;; *************** function _SwTimerStart *****************
 14992 ;; Defined at:
 14993 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;  timerId         1    wreg     unsigned char 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  timerId         1   57[BANK0 ] unsigned char 
 14998 ;;  ticksRemaini    4   53[BANK0 ] unsigned long 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  1    wreg      void 
 15001 ;; Registers used:
 15002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15009 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15010 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15011 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15012 ;;Total ram usage:        9 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; Hardware stack levels required when called:   10
 15015 ;; This function calls:
 15016 ;;		_SwTimersInterrupt
 15017 ;;		_TMR_OverrideRemaining
 15018 ;; This function is called by:
 15019 ;;		_RADIO_Transmit
 15020 ;;		_LORAWAN_TxDone
 15021 ;;		_LORAWAN_RxTimeout
 15022 ;;		_DutyCycleCallback
 15023 ;;		_LORAWAN_Join
 15024 ;;		_LORAWAN_LinkCheckConfigure
 15025 ;;		_LORAWAN_LinkCheckCallback
 15026 ;;		_UpdateRetransmissionAckTimeoutState
 15027 ;;		_UpdateJoinSuccessState
 15028 ;;		_RADIO_ReceiveStart
 15029 ;;		_StartReTxTimer
 15030 ;; This function uses a non-reentrant model
 15031 ;;
 15032                           
 15033                           	psect	text85
 15034  0027E4                     __ptext85:
 15035                           	opt stack 0
 15036  0027E4                     _SwTimerStart:
 15037                           	opt stack 19
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;incstack = 0
 15041                           ;SwTimerStart@timerId stored from wreg
 15042  0027E4  0100               	movlb	0	; () banked
 15043  0027E6  6F99               	movwf	SwTimerStart@timerId& (0+255),b
 15044                           
 15045                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 15046                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 15047  0027E8  9EF2               	bcf	intcon,7,c	;volatile
 15048                           
 15049                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 15050  0027EA  EC41  F00F         	call	_SwTimersInterrupt	;wreg free
 15051  0027EE  C080  F095         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 15052  0027F2  C081  F096         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 15053  0027F6  C082  F097         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 15054  0027FA  C083  F098         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 15055                           
 15056                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 15057  0027FE  0100               	movlb	0	; () banked
 15058  002800  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15059  002802  0D08               	mullw	8
 15060  002804  0E00               	movlw	low _swTimers
 15061  002806  24F3               	addwf	prodl,w,c
 15062  002808  6ED9               	movwf	fsr2l,c
 15063  00280A  0E03               	movlw	high _swTimers
 15064  00280C  20F4               	addwfc	prodh,w,c
 15065  00280E  6EDA               	movwf	fsr2h,c
 15066  002810  5195               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 15067  002812  5CDE               	subwf	postinc2,w,c
 15068  002814  5196               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 15069  002816  58DE               	subwfb	postinc2,w,c
 15070  002818  5197               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 15071  00281A  58DE               	subwfb	postinc2,w,c
 15072  00281C  5198               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 15073  00281E  58DE               	subwfb	postinc2,w,c
 15074  002820  B0D8               	btfsc	status,0,c
 15075  002822  D010               	goto	l257
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;sw_timer.c: 225: {
 15079                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 15080  002824  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15081  002826  0D08               	mullw	8
 15082  002828  0E00               	movlw	low _swTimers
 15083  00282A  24F3               	addwf	prodl,w,c
 15084  00282C  6ED9               	movwf	fsr2l,c
 15085  00282E  0E03               	movlw	high _swTimers
 15086  002830  20F4               	addwfc	prodh,w,c
 15087  002832  6EDA               	movwf	fsr2h,c
 15088  002834  CFDE F095          	movff	postinc2,SwTimerStart@ticksRemaining
 15089  002838  CFDE F096          	movff	postinc2,SwTimerStart@ticksRemaining+1
 15090  00283C  CFDE F097          	movff	postinc2,SwTimerStart@ticksRemaining+2
 15091  002840  CFDE F098          	movff	postinc2,SwTimerStart@ticksRemaining+3
 15092  002844                     l257:
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;sw_timer.c: 227: }
 15096                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 15097                           
 15098                           ; BSR set to: 0
 15099  002844  C095  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 15100  002848  C096  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 15101  00284C  C097  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 15102  002850  C098  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 15103  002854  EC3D  F014         	call	_TMR_OverrideRemaining	;wreg free
 15104                           
 15105                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 15106  002858  0100               	movlb	0	; () banked
 15107  00285A  5199               	movf	SwTimerStart@timerId& (0+255),w,b
 15108  00285C  0D08               	mullw	8
 15109  00285E  0E04               	movlw	4
 15110  002860  26F3               	addwf	prodl,f,c
 15111  002862  0E00               	movlw	0
 15112  002864  22F4               	addwfc	prodh,f,c
 15113  002866  0E00               	movlw	low _swTimers
 15114  002868  24F3               	addwf	prodl,w,c
 15115  00286A  6ED9               	movwf	fsr2l,c
 15116  00286C  0E03               	movlw	high _swTimers
 15117  00286E  20F4               	addwfc	prodh,w,c
 15118  002870  6EDA               	movwf	fsr2h,c
 15119  002872  0E01               	movlw	1
 15120  002874  6EDF               	movwf	indf2,c
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 15124  002876  8EF2               	bsf	intcon,7,c	;volatile
 15125                           
 15126                           ; BSR set to: 0
 15127  002878  0012               	return		;funcret
 15128  00287A                     __end_of_SwTimerStart:
 15129                           	opt stack 0
 15130                           tblptru	equ	0xFF8
 15131                           tblptrh	equ	0xFF7
 15132                           tblptrl	equ	0xFF6
 15133                           tablat	equ	0xFF5
 15134                           prodh	equ	0xFF4
 15135                           prodl	equ	0xFF3
 15136                           intcon	equ	0xFF2
 15137                           intcon2	equ	0xFF1
 15138                           intcon3	equ	0xFF0
 15139                           indf0	equ	0xFEF
 15140                           postinc0	equ	0xFEE
 15141                           plusw0	equ	0xFEB
 15142                           fsr0h	equ	0xFEA
 15143                           fsr0l	equ	0xFE9
 15144                           wreg	equ	0xFE8
 15145                           indf2	equ	0xFDF
 15146                           postinc2	equ	0xFDE
 15147                           postdec2	equ	0xFDD
 15148                           plusw2	equ	0xFDB
 15149                           fsr2h	equ	0xFDA
 15150                           fsr2l	equ	0xFD9
 15151                           status	equ	0xFD8
 15152                           
 15153 ;; *************** function _TMR_OverrideRemaining *****************
 15154 ;; Defined at:
 15155 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 15160 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  1    wreg      void 
 15163 ;; Registers used:
 15164 ;;		wreg, status,2, status,0, cstack
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15174 ;;Total ram usage:       10 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:    9
 15177 ;; This function calls:
 15178 ;;		_TMR_SwapTimer
 15179 ;; This function is called by:
 15180 ;;		_SwTimerStart
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text86
 15185  00287A                     __ptext86:
 15186                           	opt stack 0
 15187  00287A                     _TMR_OverrideRemaining:
 15188                           	opt stack 19
 15189                           
 15190                           ;sw_timer.c: 67: uint16_t tmrVal;
 15191                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 15192                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;incstack = 0
 15196  00287A  0100               	movlb	0	; () banked
 15197  00287C  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 15198  00287E  11FE               	iorwf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 15199  002880  11FD               	iorwf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 15200  002882  E104               	bnz	u7620
 15201  002884  0E0B               	movlw	11
 15202  002886  5DFC               	subwf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 15203  002888  A0D8               	btfss	status,0,c
 15204  00288A  0012               	return	
 15205  00288C                     u7620:
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;sw_timer.c: 72: {
 15209                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 15210  00288C  51FC               	movf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 15211  00288E  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 15212  002890  51FD               	movf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 15213  002892  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 15214  002894  51FE               	movf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 15215  002896  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 15216  002898  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 15217  00289A  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 15218  00289C  B0D8               	btfsc	status,0,c
 15219  00289E  0012               	return	
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;sw_timer.c: 74: {
 15223                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 15224  0028A0  C06A  F0FC         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 15225  0028A4  C06B  F0FD         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 15226  0028A8  C06C  F0FE         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 15227  0028AC  C06D  F0FF         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 15228                           
 15229                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 15230  0028B0  C0F6  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 15231  0028B4  C0F7  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 15232                           
 15233                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 15234  0028B8  C06A  F06E         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 15235  0028BC  C06B  F06F         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 15236  0028C0  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 15237  0028C2  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15238  0028C4  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 15239  0028C6  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15240  0028C8  C06E  F0F6         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 15241  0028CC  C06F  F0F7         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 15245  0028D0  C0F6  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 15246  0028D4  C0F7  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 15247  0028D8  EC4F  F019         	call	_TMR_SwapTimer	;wreg free
 15248  0028DC  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 15249  0028E0  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 15250                           
 15251                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 15252  0028E4  C072  F06E         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 15253  0028E8  C073  F06F         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 15254  0028EC  0100               	movlb	0	; () banked
 15255  0028EE  1F6E               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 15256  0028F0  1F6F               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15257  0028F2  4B6E               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 15258  0028F4  2B6F               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15259  0028F6  5170               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 15260  0028F8  276E               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 15261  0028FA  5171               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 15262  0028FC  236F               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 15263  0028FE  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 15264  002900  27EC               	addwf	_ticksAdded& (0+255),f,b	;volatile
 15265  002902  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 15266  002904  23ED               	addwfc	(_ticksAdded+1)& (0+255),f,b	;volatile
 15267  002906  0E00               	movlw	0
 15268  002908  23EE               	addwfc	(_ticksAdded+2)& (0+255),f,b	;volatile
 15269  00290A  0E00               	movlw	0
 15270  00290C  23EF               	addwfc	(_ticksAdded+3)& (0+255),f,b	;volatile
 15271                           
 15272                           ; BSR set to: 0
 15273  00290E  0012               	return	
 15274  002910                     __end_of_TMR_OverrideRemaining:
 15275                           	opt stack 0
 15276                           tblptru	equ	0xFF8
 15277                           tblptrh	equ	0xFF7
 15278                           tblptrl	equ	0xFF6
 15279                           tablat	equ	0xFF5
 15280                           prodh	equ	0xFF4
 15281                           prodl	equ	0xFF3
 15282                           intcon	equ	0xFF2
 15283                           intcon2	equ	0xFF1
 15284                           intcon3	equ	0xFF0
 15285                           indf0	equ	0xFEF
 15286                           postinc0	equ	0xFEE
 15287                           plusw0	equ	0xFEB
 15288                           fsr0h	equ	0xFEA
 15289                           fsr0l	equ	0xFE9
 15290                           wreg	equ	0xFE8
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           plusw2	equ	0xFDB
 15295                           fsr2h	equ	0xFDA
 15296                           fsr2l	equ	0xFD9
 15297                           status	equ	0xFD8
 15298                           
 15299 ;; *************** function _TMR_SwapTimer *****************
 15300 ;; Defined at:
 15301 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  timerVal        2    8[BANK0 ] unsigned int 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;		None
 15306 ;; Return value:  Size  Location     Type
 15307 ;;                  2    8[BANK0 ] unsigned int 
 15308 ;; Registers used:
 15309 ;;		wreg, status,2, status,0, cstack
 15310 ;; Tracked objects:
 15311 ;;		On entry : 0/0
 15312 ;;		On exit  : 0/0
 15313 ;;		Unchanged: 0/0
 15314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;Total ram usage:        2 bytes
 15320 ;; Hardware stack levels used:    1
 15321 ;; Hardware stack levels required when called:    8
 15322 ;; This function calls:
 15323 ;;		_TMR1_ReadTimer
 15324 ;;		_TMR1_WriteTimer
 15325 ;; This function is called by:
 15326 ;;		_TMR_OverrideRemaining
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           	psect	text87
 15331  00329E                     __ptext87:
 15332                           	opt stack 0
 15333  00329E                     _TMR_SwapTimer:
 15334                           	opt stack 19
 15335                           
 15336                           ;sw_timer.c: 114: static uint16_t oldVal;
 15337                           ;sw_timer.c: 115: static uint16_t retVal;
 15338                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 15339                           
 15340                           ; BSR set to: 0
 15341                           ;incstack = 0
 15342  00329E  ECD5  F01A         	call	_TMR1_ReadTimer	;wreg free
 15343  0032A2  C060  F0F2         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 15344  0032A6  C061  F0F3         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 15345  0032AA                     
 15346                           ;sw_timer.c: 123: ;
 15347  0032AA  ECD5  F01A         	call	_TMR1_ReadTimer	;wreg free
 15348  0032AE  0100               	movlb	0	; () banked
 15349  0032B0  51F2               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 15350  0032B2  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 15351  0032B4  E104               	bnz	l7874
 15352  0032B6  51F3               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 15353  0032B8  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 15354  0032BA  B4D8               	btfsc	status,2,c
 15355  0032BC  D7F6               	goto	l223
 15356  0032BE                     l7874:
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 15360  0032BE  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 15361  0032C2  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 15362  0032C6  ECF6  F01A         	call	_TMR1_WriteTimer	;wreg free
 15363                           
 15364                           ;sw_timer.c: 128: oldVal++;
 15365  0032CA  0100               	movlb	0	; () banked
 15366  0032CC  4BF2               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 15367  0032CE  2BF3               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;sw_timer.c: 130: retVal = oldVal;
 15371  0032D0  C0F2  F0F0         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 15372  0032D4  C0F3  F0F1         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;sw_timer.c: 132: return retVal;
 15376  0032D8  C0F0  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 15377  0032DC  C0F1  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 15378  0032E0  0012               	return	
 15379  0032E2                     __end_of_TMR_SwapTimer:
 15380                           	opt stack 0
 15381                           tblptru	equ	0xFF8
 15382                           tblptrh	equ	0xFF7
 15383                           tblptrl	equ	0xFF6
 15384                           tablat	equ	0xFF5
 15385                           prodh	equ	0xFF4
 15386                           prodl	equ	0xFF3
 15387                           intcon	equ	0xFF2
 15388                           intcon2	equ	0xFF1
 15389                           intcon3	equ	0xFF0
 15390                           indf0	equ	0xFEF
 15391                           postinc0	equ	0xFEE
 15392                           plusw0	equ	0xFEB
 15393                           fsr0h	equ	0xFEA
 15394                           fsr0l	equ	0xFE9
 15395                           wreg	equ	0xFE8
 15396                           indf2	equ	0xFDF
 15397                           postinc2	equ	0xFDE
 15398                           postdec2	equ	0xFDD
 15399                           plusw2	equ	0xFDB
 15400                           fsr2h	equ	0xFDA
 15401                           fsr2l	equ	0xFD9
 15402                           status	equ	0xFD8
 15403                           
 15404 ;; *************** function _TMR1_WriteTimer *****************
 15405 ;; Defined at:
 15406 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;  timerVal        2    0[BANK0 ] unsigned int 
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;		None
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  1    wreg      void 
 15413 ;; Registers used:
 15414 ;;		wreg, status,2
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;Total ram usage:        2 bytes
 15425 ;; Hardware stack levels used:    1
 15426 ;; Hardware stack levels required when called:    7
 15427 ;; This function calls:
 15428 ;;		Nothing
 15429 ;; This function is called by:
 15430 ;;		_TMR_SwapTimer
 15431 ;;		_TMR1_Reload
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text88
 15436  0035EC                     __ptext88:
 15437                           	opt stack 0
 15438  0035EC                     _TMR1_WriteTimer:
 15439                           	opt stack 19
 15440                           
 15441                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;incstack = 0
 15445  0035EC  A4CD               	btfss	4045,2,c	;volatile
 15446  0035EE  D008               	goto	l2426
 15447                           
 15448                           ;tmr1.c: 124: {
 15449                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 15450  0035F0  90CD               	bcf	4045,0,c	;volatile
 15451                           
 15452                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 15453  0035F2  0100               	movlb	0	; () banked
 15454  0035F4  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15455  0035F6  6ECF               	movwf	4047,c	;volatile
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 15459  0035F8  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 15463  0035FC  80CD               	bsf	4045,0,c	;volatile
 15464                           
 15465                           ;tmr1.c: 134: }
 15466  0035FE  0012               	return	
 15467  003600                     l2426:
 15468                           
 15469                           ;tmr1.c: 135: else
 15470                           ;tmr1.c: 136: {
 15471                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 15472                           
 15473                           ; BSR set to: 0
 15474  003600  0100               	movlb	0	; () banked
 15475  003602  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 15476  003604  6ECF               	movwf	4047,c	;volatile
 15477                           
 15478                           ; BSR set to: 0
 15479                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 15480  003606  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 15481  00360A  0012               	return	
 15482  00360C                     __end_of_TMR1_WriteTimer:
 15483                           	opt stack 0
 15484                           tblptru	equ	0xFF8
 15485                           tblptrh	equ	0xFF7
 15486                           tblptrl	equ	0xFF6
 15487                           tablat	equ	0xFF5
 15488                           prodh	equ	0xFF4
 15489                           prodl	equ	0xFF3
 15490                           intcon	equ	0xFF2
 15491                           intcon2	equ	0xFF1
 15492                           intcon3	equ	0xFF0
 15493                           indf0	equ	0xFEF
 15494                           postinc0	equ	0xFEE
 15495                           plusw0	equ	0xFEB
 15496                           fsr0h	equ	0xFEA
 15497                           fsr0l	equ	0xFE9
 15498                           wreg	equ	0xFE8
 15499                           indf2	equ	0xFDF
 15500                           postinc2	equ	0xFDE
 15501                           postdec2	equ	0xFDD
 15502                           plusw2	equ	0xFDB
 15503                           fsr2h	equ	0xFDA
 15504                           fsr2l	equ	0xFD9
 15505                           status	equ	0xFD8
 15506                           
 15507 ;; *************** function _SwTimersInterrupt *****************
 15508 ;; Defined at:
 15509 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;		None
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;  ticksToNextT    4   44[BANK0 ] unsigned long 
 15514 ;;  timeElapsed     4   40[BANK0 ] unsigned long 
 15515 ;;  i               1   48[BANK0 ] unsigned char 
 15516 ;; Return value:  Size  Location     Type
 15517 ;;                  4   32[BANK0 ] unsigned long 
 15518 ;; Registers used:
 15519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15520 ;; Tracked objects:
 15521 ;;		On entry : 0/0
 15522 ;;		On exit  : 0/0
 15523 ;;		Unchanged: 0/0
 15524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15526 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15528 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15529 ;;Total ram usage:       17 bytes
 15530 ;; Hardware stack levels used:    1
 15531 ;; Hardware stack levels required when called:    9
 15532 ;; This function calls:
 15533 ;;		_TMR_GetDeltaTime
 15534 ;; This function is called by:
 15535 ;;		_SwTimerStart
 15536 ;;		_SwTimerReadValue
 15537 ;;		_SwTimersCanSleep
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541                           	psect	text89
 15542  001E82                     __ptext89:
 15543                           	opt stack 0
 15544  001E82                     _SwTimersInterrupt:
 15545                           	opt stack 19
 15546                           
 15547                           ;sw_timer.c: 289: uint8_t i;
 15548                           ;sw_timer.c: 290: uint32_t timeElapsed;
 15549                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;incstack = 0
 15553  001E82  0100               	movlb	0	; () banked
 15554  001E84  698C               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 15555  001E86  698D               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 15556  001E88  698E               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 15557  001E8A  698F               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 15561  001E8C  EC3B  F00B         	call	_TMR_GetDeltaTime	;wreg free
 15562  001E90  C068  F088         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 15563  001E94  C069  F089         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 15564  001E98  C06A  F08A         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 15565  001E9C  C06B  F08B         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 15566                           
 15567                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 15568  001EA0  0E00               	movlw	0
 15569  001EA2  0100               	movlb	0	; () banked
 15570  001EA4  6F90               	movwf	SwTimersInterrupt@i& (0+255),b
 15571  001EA6  D061               	goto	l280
 15572  001EA8                     
 15573                           ; BSR set to: 0
 15574                           ;sw_timer.c: 298: {
 15575                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 15576                           
 15577                           ; BSR set to: 0
 15578  001EA8  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15579  001EAA  0D08               	mullw	8
 15580  001EAC  0E04               	movlw	4
 15581  001EAE  26F3               	addwf	prodl,f,c
 15582  001EB0  0E00               	movlw	0
 15583  001EB2  22F4               	addwfc	prodh,f,c
 15584  001EB4  0E00               	movlw	low _swTimers
 15585  001EB6  24F3               	addwf	prodl,w,c
 15586  001EB8  6ED9               	movwf	fsr2l,c
 15587  001EBA  0E03               	movlw	high _swTimers
 15588  001EBC  20F4               	addwfc	prodh,w,c
 15589  001EBE  6EDA               	movwf	fsr2h,c
 15590  001EC0  04DE               	decf	postinc2,w,c
 15591  001EC2  A4D8               	btfss	status,2,c
 15592  001EC4  D051               	goto	l285
 15593                           
 15594                           ; BSR set to: 0
 15595                           ;sw_timer.c: 302: {
 15596                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 15597  001EC6  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15598  001EC8  0D08               	mullw	8
 15599  001ECA  0E00               	movlw	low _swTimers
 15600  001ECC  24F3               	addwf	prodl,w,c
 15601  001ECE  6ED9               	movwf	fsr2l,c
 15602  001ED0  0E03               	movlw	high _swTimers
 15603  001ED2  20F4               	addwfc	prodh,w,c
 15604  001ED4  6EDA               	movwf	fsr2h,c
 15605  001ED6  50DE               	movf	postinc2,w,c
 15606  001ED8  5D88               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 15607  001EDA  50DE               	movf	postinc2,w,c
 15608  001EDC  5989               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 15609  001EDE  50DE               	movf	postinc2,w,c
 15610  001EE0  598A               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 15611  001EE2  50DE               	movf	postinc2,w,c
 15612  001EE4  598B               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 15613  001EE6  A0D8               	btfss	status,0,c
 15614  001EE8  D00D               	goto	l283
 15615                           
 15616                           ; BSR set to: 0
 15617                           ;sw_timer.c: 304: {
 15618                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 15619  001EEA  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15620  001EEC  0D08               	mullw	8
 15621  001EEE  0E00               	movlw	low _swTimers
 15622  001EF0  24F3               	addwf	prodl,w,c
 15623  001EF2  6ED9               	movwf	fsr2l,c
 15624  001EF4  0E03               	movlw	high _swTimers
 15625  001EF6  20F4               	addwfc	prodh,w,c
 15626  001EF8  6EDA               	movwf	fsr2h,c
 15627  001EFA  6ADE               	clrf	postinc2,c
 15628  001EFC  6ADE               	clrf	postinc2,c
 15629  001EFE  6ADE               	clrf	postinc2,c
 15630  001F00  6ADD               	clrf	postdec2,c
 15631                           
 15632                           ;sw_timer.c: 306: }
 15633  001F02  D032               	goto	l285
 15634  001F04                     l283:
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;sw_timer.c: 307: else
 15638                           ;sw_timer.c: 308: {
 15639                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 15640                           
 15641                           ; BSR set to: 0
 15642  001F04  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15643  001F06  0D08               	mullw	8
 15644  001F08  0E00               	movlw	low _swTimers
 15645  001F0A  24F3               	addwf	prodl,w,c
 15646  001F0C  6ED9               	movwf	fsr2l,c
 15647  001F0E  0E03               	movlw	high _swTimers
 15648  001F10  20F4               	addwfc	prodh,w,c
 15649  001F12  6EDA               	movwf	fsr2h,c
 15650  001F14  5188               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 15651  001F16  5EDE               	subwf	postinc2,f,c
 15652  001F18  5189               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 15653  001F1A  5ADE               	subwfb	postinc2,f,c
 15654  001F1C  518A               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 15655  001F1E  5ADE               	subwfb	postinc2,f,c
 15656  001F20  518B               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 15657  001F22  5ADE               	subwfb	postinc2,f,c
 15658                           
 15659                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 15660  001F24  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15661  001F26  0D08               	mullw	8
 15662  001F28  0E00               	movlw	low _swTimers
 15663  001F2A  24F3               	addwf	prodl,w,c
 15664  001F2C  6ED9               	movwf	fsr2l,c
 15665  001F2E  0E03               	movlw	high _swTimers
 15666  001F30  20F4               	addwfc	prodh,w,c
 15667  001F32  6EDA               	movwf	fsr2h,c
 15668  001F34  518C               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 15669  001F36  5CDE               	subwf	postinc2,w,c
 15670  001F38  518D               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 15671  001F3A  58DE               	subwfb	postinc2,w,c
 15672  001F3C  518E               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 15673  001F3E  58DE               	subwfb	postinc2,w,c
 15674  001F40  518F               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 15675  001F42  58DE               	subwfb	postinc2,w,c
 15676  001F44  B0D8               	btfsc	status,0,c
 15677  001F46  D010               	goto	l285
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;sw_timer.c: 313: {
 15681                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 15682  001F48  5190               	movf	SwTimersInterrupt@i& (0+255),w,b
 15683  001F4A  0D08               	mullw	8
 15684  001F4C  0E00               	movlw	low _swTimers
 15685  001F4E  24F3               	addwf	prodl,w,c
 15686  001F50  6ED9               	movwf	fsr2l,c
 15687  001F52  0E03               	movlw	high _swTimers
 15688  001F54  20F4               	addwfc	prodh,w,c
 15689  001F56  6EDA               	movwf	fsr2h,c
 15690  001F58  CFDE F08C          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 15691  001F5C  CFDE F08D          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 15692  001F60  CFDE F08E          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 15693  001F64  CFDE F08F          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 15694  001F68                     l285:
 15695                           
 15696                           ; BSR set to: 0
 15697                           
 15698                           ; BSR set to: 0
 15699                           
 15700                           ; BSR set to: 0
 15701                           
 15702                           ; BSR set to: 0
 15703  001F68  2B90               	incf	SwTimersInterrupt@i& (0+255),f,b
 15704  001F6A                     l280:
 15705                           
 15706                           ; BSR set to: 0
 15707                           
 15708                           ; BSR set to: 0
 15709  001F6A  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 15710  001F6C  5D90               	subwf	SwTimersInterrupt@i& (0+255),w,b
 15711  001F6E  A0D8               	btfss	status,0,c
 15712  001F70  D79B               	goto	l281
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;sw_timer.c: 315: }
 15716                           ;sw_timer.c: 316: }
 15717                           ;sw_timer.c: 317: }
 15718                           ;sw_timer.c: 318: }
 15719                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 15720  001F72  C08C  F080         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 15721  001F76  C08D  F081         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 15722  001F7A  C08E  F082         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 15723  001F7E  C08F  F083         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 15724                           
 15725                           ; BSR set to: 0
 15726  001F82  0012               	return		;funcret
 15727  001F84                     __end_of_SwTimersInterrupt:
 15728                           	opt stack 0
 15729                           tblptru	equ	0xFF8
 15730                           tblptrh	equ	0xFF7
 15731                           tblptrl	equ	0xFF6
 15732                           tablat	equ	0xFF5
 15733                           prodh	equ	0xFF4
 15734                           prodl	equ	0xFF3
 15735                           intcon	equ	0xFF2
 15736                           intcon2	equ	0xFF1
 15737                           intcon3	equ	0xFF0
 15738                           indf0	equ	0xFEF
 15739                           postinc0	equ	0xFEE
 15740                           plusw0	equ	0xFEB
 15741                           fsr0h	equ	0xFEA
 15742                           fsr0l	equ	0xFE9
 15743                           wreg	equ	0xFE8
 15744                           indf2	equ	0xFDF
 15745                           postinc2	equ	0xFDE
 15746                           postdec2	equ	0xFDD
 15747                           plusw2	equ	0xFDB
 15748                           fsr2h	equ	0xFDA
 15749                           fsr2l	equ	0xFD9
 15750                           status	equ	0xFD8
 15751                           
 15752 ;; *************** function _TMR_GetDeltaTime *****************
 15753 ;; Defined at:
 15754 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;		None
 15757 ;; Auto vars:     Size  Location     Type
 15758 ;;		None
 15759 ;; Return value:  Size  Location     Type
 15760 ;;                  4    8[BANK0 ] unsigned long 
 15761 ;; Registers used:
 15762 ;;		wreg, status,2, status,0, cstack
 15763 ;; Tracked objects:
 15764 ;;		On entry : 0/0
 15765 ;;		On exit  : 0/0
 15766 ;;		Unchanged: 0/0
 15767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15770 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;Total ram usage:       24 bytes
 15773 ;; Hardware stack levels used:    1
 15774 ;; Hardware stack levels required when called:    8
 15775 ;; This function calls:
 15776 ;;		_TMR1_ReadTimer
 15777 ;; This function is called by:
 15778 ;;		_SwTimersInterrupt
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           	psect	text90
 15783  001676                     __ptext90:
 15784                           	opt stack 0
 15785  001676                     _TMR_GetDeltaTime:
 15786                           	opt stack 19
 15787                           
 15788                           ;sw_timer.c: 90: static uint32_t retVal;
 15789                           ;sw_timer.c: 91: static uint16_t tmrVal;
 15790                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 15791                           
 15792                           ; BSR set to: 0
 15793                           ;incstack = 0
 15794  001676  ECD5  F01A         	call	_TMR1_ReadTimer	;wreg free
 15795  00167A  C060  F0F4         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 15796  00167E  C061  F0F5         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 15797                           
 15798                           ;sw_timer.c: 95: if (timerOverflow == 1)
 15799  001682  0100               	movlb	0	; () banked
 15800  001684  05FB               	decf	_timerOverflow& (0+255),w,b	;volatile
 15801  001686  A4D8               	btfss	status,2,c
 15802  001688  D065               	goto	l213
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;sw_timer.c: 96: {
 15806                           ;sw_timer.c: 97: timerOverflow = 0;
 15807  00168A  0E00               	movlw	0
 15808  00168C  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 15812  00168E  C0E8  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 15813  001692  C0E9  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 15814  001696  C0EA  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 15815  00169A  C0EB  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 15816  00169E  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 15817  0016A0  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15818  0016A2  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15819  0016A4  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15820  0016A6  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 15821  0016A8  0E00               	movlw	0
 15822  0016AA  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15823  0016AC  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15824  0016AE  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15825  0016B0  51F6               	movf	_reloadVal& (0+255),w,b	;volatile
 15826  0016B2  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 15827  0016B4  51F7               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 15828  0016B6  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 15829  0016B8  6B72               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 15830  0016BA  6B73               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 15831  0016BC  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15832  0016BE  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15833  0016C0  1F72               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 15834  0016C2  1F73               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 15835  0016C4  2B70               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15836  0016C6  0E00               	movlw	0
 15837  0016C8  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15838  0016CA  2372               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 15839  0016CC  2373               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 15840  0016CE  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 15841  0016D0  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 15842  0016D2  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 15843  0016D4  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 15844  0016D6  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 15845  0016D8  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 15846  0016DA  0E00               	movlw	0
 15847  0016DC  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 15848  0016DE  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 15849  0016E0  0E00               	movlw	0
 15850  0016E2  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 15851  0016E4  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 15852  0016E6  516C               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 15853  0016E8  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 15854  0016EA  6F78               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 15855  0016EC  516D               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 15856  0016EE  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 15857  0016F0  6F79               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 15858  0016F2  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 15859  0016F4  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 15860  0016F6  6F7A               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 15861  0016F8  516F               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 15862  0016FA  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 15863  0016FC  6F7B               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 15864  0016FE  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 15865  001700  2578               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 15866  001702  6F7C               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 15867  001704  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 15868  001706  2179               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 15869  001708  6F7D               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 15870  00170A  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 15871  00170C  217A               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 15872  00170E  6F7E               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 15873  001710  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 15874  001712  217B               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 15875  001714  6F7F               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 15876  001716  0E00               	movlw	0
 15877  001718  257C               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 15878  00171A  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 15879  00171C  0E00               	movlw	0
 15880  00171E  217D               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 15881  001720  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 15882  001722  0E01               	movlw	1
 15883  001724  217E               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 15884  001726  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 15885  001728  0E00               	movlw	0
 15886  00172A  217F               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 15887  00172C  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 15888                           
 15889                           ; BSR set to: 0
 15890                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 15891  00172E  C0F4  F0E8         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 15892  001732  C0F5  F0E9         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 15893  001736  6BEA               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
 15894  001738  6BEB               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;sw_timer.c: 100: ticksAdded = 0;
 15898  00173A  0E00               	movlw	0
 15899  00173C  6FEC               	movwf	_ticksAdded& (0+255),b	;volatile
 15900  00173E  0E00               	movlw	0
 15901  001740  6FED               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
 15902  001742  0E00               	movlw	0
 15903  001744  6FEE               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
 15904  001746  0E00               	movlw	0
 15905  001748  6FEF               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;sw_timer.c: 101: reloadVal = 0;
 15909  00174A  0E00               	movlw	0
 15910  00174C  6FF7               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 15911  00174E  0E00               	movlw	0
 15912  001750  6FF6               	movwf	_reloadVal& (0+255),b	;volatile
 15913                           
 15914                           ;sw_timer.c: 102: }
 15915  001752  D03D               	goto	l214
 15916  001754                     l213:
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;sw_timer.c: 103: else
 15920                           ;sw_timer.c: 104: {
 15921                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 15922                           
 15923                           ; BSR set to: 0
 15924  001754  C0E8  F06C         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 15925  001758  C0E9  F06D         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 15926  00175C  C0EA  F06E         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 15927  001760  C0EB  F06F         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 15928  001764  1F6C               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 15929  001766  1F6D               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15930  001768  1F6E               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15931  00176A  1F6F               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15932  00176C  2B6C               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 15933  00176E  0E00               	movlw	0
 15934  001770  236D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 15935  001772  236E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 15936  001774  236F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 15937  001776  C0F6  F070         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 15938  00177A  C0F7  F071         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 15939  00177E  1F70               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15940  001780  1F71               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15941  001782  4B70               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15942  001784  2B71               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15943  001786  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 15944  001788  2770               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 15945  00178A  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 15946  00178C  2371               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 15947  00178E  5170               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 15948  001790  256C               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 15949  001792  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 15950  001794  5171               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 15951  001796  216D               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 15952  001798  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 15953  00179A  0E00               	movlw	0
 15954  00179C  216E               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 15955  00179E  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 15956  0017A0  0E00               	movlw	0
 15957  0017A2  216F               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 15958  0017A4  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 15959  0017A6  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 15960  0017A8  2572               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 15961  0017AA  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 15962  0017AC  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 15963  0017AE  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 15964  0017B0  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 15965  0017B2  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 15966  0017B4  2174               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 15967  0017B6  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 15968  0017B8  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 15969  0017BA  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 15970  0017BC  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 15971                           
 15972                           ;sw_timer.c: 106: ticksAccounted += retVal;
 15973  0017BE  51E4               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 15974  0017C0  27E8               	addwf	_ticksAccounted& (0+255),f,b	;volatile
 15975  0017C2  51E5               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 15976  0017C4  23E9               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
 15977  0017C6  51E6               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 15978  0017C8  23EA               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
 15979  0017CA  51E7               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 15980  0017CC  23EB               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
 15981  0017CE                     l214:
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;sw_timer.c: 107: }
 15985                           ;sw_timer.c: 109: return retVal;
 15986                           
 15987                           ; BSR set to: 0
 15988  0017CE  C0E4  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 15989  0017D2  C0E5  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 15990  0017D6  C0E6  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 15991  0017DA  C0E7  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 15992  0017DE  0012               	return	
 15993  0017E0                     __end_of_TMR_GetDeltaTime:
 15994                           	opt stack 0
 15995                           tblptru	equ	0xFF8
 15996                           tblptrh	equ	0xFF7
 15997                           tblptrl	equ	0xFF6
 15998                           tablat	equ	0xFF5
 15999                           prodh	equ	0xFF4
 16000                           prodl	equ	0xFF3
 16001                           intcon	equ	0xFF2
 16002                           intcon2	equ	0xFF1
 16003                           intcon3	equ	0xFF0
 16004                           indf0	equ	0xFEF
 16005                           postinc0	equ	0xFEE
 16006                           plusw0	equ	0xFEB
 16007                           fsr0h	equ	0xFEA
 16008                           fsr0l	equ	0xFE9
 16009                           wreg	equ	0xFE8
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           postdec2	equ	0xFDD
 16013                           plusw2	equ	0xFDB
 16014                           fsr2h	equ	0xFDA
 16015                           fsr2l	equ	0xFD9
 16016                           status	equ	0xFD8
 16017                           
 16018 ;; *************** function _TMR1_ReadTimer *****************
 16019 ;; Defined at:
 16020 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;  readVal         2    4[BANK0 ] unsigned int 
 16025 ;;  readValLow      1    7[BANK0 ] unsigned char 
 16026 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 16027 ;; Return value:  Size  Location     Type
 16028 ;;                  2    0[BANK0 ] unsigned int 
 16029 ;; Registers used:
 16030 ;;		wreg, status,2
 16031 ;; Tracked objects:
 16032 ;;		On entry : 0/0
 16033 ;;		On exit  : 0/0
 16034 ;;		Unchanged: 0/0
 16035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16037 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;Total ram usage:        8 bytes
 16041 ;; Hardware stack levels used:    1
 16042 ;; Hardware stack levels required when called:    7
 16043 ;; This function calls:
 16044 ;;		Nothing
 16045 ;; This function is called by:
 16046 ;;		_TMR_GetDeltaTime
 16047 ;;		_TMR_SwapTimer
 16048 ;; This function uses a non-reentrant model
 16049 ;;
 16050                           
 16051                           	psect	text91
 16052  0035AA                     __ptext91:
 16053                           	opt stack 0
 16054  0035AA                     _TMR1_ReadTimer:
 16055                           	opt stack 19
 16056                           
 16057                           ;tmr1.c: 107: uint16_t readVal;
 16058                           ;tmr1.c: 108: uint8_t readValHigh;
 16059                           ;tmr1.c: 109: uint8_t readValLow;
 16060                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;incstack = 0
 16064  0035AA  82CD               	bsf	4045,1,c	;volatile
 16065                           
 16066                           ;tmr1.c: 113: readValLow = TMR1L;
 16067  0035AC  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 16068                           
 16069                           ;tmr1.c: 114: readValHigh = TMR1H;
 16070  0035B0  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 16071                           
 16072                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 16073  0035B4  0100               	movlb	0	; () banked
 16074  0035B6  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 16075  0035B8  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 16076  0035BA  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 16077  0035BC  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 16078  0035BE  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;tmr1.c: 118: return readVal;
 16082  0035C2  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 16083  0035C6  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 16084  0035CA  0012               	return	
 16085  0035CC                     __end_of_TMR1_ReadTimer:
 16086                           	opt stack 0
 16087                           tblptru	equ	0xFF8
 16088                           tblptrh	equ	0xFF7
 16089                           tblptrl	equ	0xFF6
 16090                           tablat	equ	0xFF5
 16091                           prodh	equ	0xFF4
 16092                           prodl	equ	0xFF3
 16093                           intcon	equ	0xFF2
 16094                           intcon2	equ	0xFF1
 16095                           intcon3	equ	0xFF0
 16096                           indf0	equ	0xFEF
 16097                           postinc0	equ	0xFEE
 16098                           plusw0	equ	0xFEB
 16099                           fsr0h	equ	0xFEA
 16100                           fsr0l	equ	0xFE9
 16101                           wreg	equ	0xFE8
 16102                           indf2	equ	0xFDF
 16103                           postinc2	equ	0xFDE
 16104                           postdec2	equ	0xFDD
 16105                           plusw2	equ	0xFDB
 16106                           fsr2h	equ	0xFDA
 16107                           fsr2l	equ	0xFD9
 16108                           status	equ	0xFD8
 16109                           
 16110 ;; *************** function _SwTimerSetTimeout *****************
 16111 ;; Defined at:
 16112 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;  timerId         1    wreg     unsigned char 
 16115 ;;  timeout         4    0[BANK0 ] unsigned long 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  timerId         1    8[BANK0 ] unsigned char 
 16118 ;; Return value:  Size  Location     Type
 16119 ;;                  1    wreg      void 
 16120 ;; Registers used:
 16121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16122 ;; Tracked objects:
 16123 ;;		On entry : 0/0
 16124 ;;		On exit  : 0/0
 16125 ;;		Unchanged: 0/0
 16126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;Total ram usage:        9 bytes
 16132 ;; Hardware stack levels used:    1
 16133 ;; Hardware stack levels required when called:    7
 16134 ;; This function calls:
 16135 ;;		Nothing
 16136 ;; This function is called by:
 16137 ;;		_RADIO_Transmit
 16138 ;;		_LORAWAN_TxDone
 16139 ;;		_LORAWAN_RxTimeout
 16140 ;;		_DutyCycleCallback
 16141 ;;		_LORAWAN_Join
 16142 ;;		_LORAWAN_LinkCheckConfigure
 16143 ;;		_LORAWAN_LinkCheckCallback
 16144 ;;		_UpdateRetransmissionAckTimeoutState
 16145 ;;		_UpdateJoinSuccessState
 16146 ;;		_RADIO_ReceiveStart
 16147 ;;		_StartReTxTimer
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           	psect	text92
 16152  0032E2                     __ptext92:
 16153                           	opt stack 0
 16154  0032E2                     _SwTimerSetTimeout:
 16155                           	opt stack 22
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;incstack = 0
 16159                           ;SwTimerSetTimeout@timerId stored from wreg
 16160  0032E2  0100               	movlb	0	; () banked
 16161  0032E4  6F68               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 16162                           
 16163                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 16164  0032E6  9EF2               	bcf	intcon,7,c	;volatile
 16165                           
 16166                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 16167  0032E8  0EE0               	movlw	224
 16168  0032EA  0100               	movlb	0	; () banked
 16169  0032EC  2560               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 16170  0032EE  6F64               	movwf	??_SwTimerSetTimeout& (0+255),b
 16171  0032F0  0EFF               	movlw	255
 16172  0032F2  2161               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 16173  0032F4  6F65               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 16174  0032F6  0EFF               	movlw	255
 16175  0032F8  2162               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 16176  0032FA  6F66               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 16177  0032FC  0EFF               	movlw	255
 16178  0032FE  2163               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 16179  003300  6F67               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 16180  003302  5168               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 16181  003304  0D08               	mullw	8
 16182  003306  0E00               	movlw	low _swTimers
 16183  003308  24F3               	addwf	prodl,w,c
 16184  00330A  6ED9               	movwf	fsr2l,c
 16185  00330C  0E03               	movlw	high _swTimers
 16186  00330E  20F4               	addwfc	prodh,w,c
 16187  003310  6EDA               	movwf	fsr2h,c
 16188  003312  C064  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 16189  003316  C065  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 16190  00331A  C066  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 16191  00331E  C067  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 16195  003322  8EF2               	bsf	intcon,7,c	;volatile
 16196                           
 16197                           ; BSR set to: 0
 16198  003324  0012               	return		;funcret
 16199  003326                     __end_of_SwTimerSetTimeout:
 16200                           	opt stack 0
 16201                           tblptru	equ	0xFF8
 16202                           tblptrh	equ	0xFF7
 16203                           tblptrl	equ	0xFF6
 16204                           tablat	equ	0xFF5
 16205                           prodh	equ	0xFF4
 16206                           prodl	equ	0xFF3
 16207                           intcon	equ	0xFF2
 16208                           intcon2	equ	0xFF1
 16209                           intcon3	equ	0xFF0
 16210                           indf0	equ	0xFEF
 16211                           postinc0	equ	0xFEE
 16212                           plusw0	equ	0xFEB
 16213                           fsr0h	equ	0xFEA
 16214                           fsr0l	equ	0xFE9
 16215                           wreg	equ	0xFE8
 16216                           indf2	equ	0xFDF
 16217                           postinc2	equ	0xFDE
 16218                           postdec2	equ	0xFDD
 16219                           plusw2	equ	0xFDB
 16220                           fsr2h	equ	0xFDA
 16221                           fsr2l	equ	0xFD9
 16222                           status	equ	0xFD8
 16223                           
 16224 ;; *************** function _InitDefault868Channels *****************
 16225 ;; Defined at:
 16226 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;		None
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;  i               1   11[BANK0 ] unsigned char 
 16231 ;; Return value:  Size  Location     Type
 16232 ;;                  1    wreg      void 
 16233 ;; Registers used:
 16234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;Total ram usage:        1 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:    8
 16247 ;; This function calls:
 16248 ;;		_memcpy
 16249 ;;		_memset
 16250 ;; This function is called by:
 16251 ;;		_LORAWAN_Reset
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	text93
 16256  002AB8                     __ptext93:
 16257                           	opt stack 0
 16258  002AB8                     _InitDefault868Channels:
 16259                           	opt stack 20
 16260                           
 16261                           ;lorawan_eu.c: 981: uint8_t i;
 16262                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;incstack = 0
 16266  002AB8  0E00               	movlw	low _Channels
 16267  002ABA  0100               	movlb	0	; () banked
 16268  002ABC  6F60               	movwf	memset@p1& (0+255),b
 16269  002ABE  0E04               	movlw	high _Channels
 16270  002AC0  6F61               	movwf	(memset@p1+1)& (0+255),b
 16271  002AC2  0E00               	movlw	0
 16272  002AC4  6F63               	movwf	(memset@c+1)& (0+255),b
 16273  002AC6  0E00               	movlw	0
 16274  002AC8  6F62               	movwf	memset@c& (0+255),b
 16275  002ACA  0E00               	movlw	0
 16276  002ACC  6F65               	movwf	(memset@n+1)& (0+255),b
 16277  002ACE  0EE0               	movlw	224
 16278  002AD0  6F64               	movwf	memset@n& (0+255),b
 16279  002AD2  EC1A  F01A         	call	_memset	;wreg free
 16280                           
 16281                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 16282  002AD6  0E00               	movlw	low _Channels
 16283  002AD8  0100               	movlb	0	; () banked
 16284  002ADA  6F60               	movwf	memcpy@d1& (0+255),b
 16285  002ADC  0E04               	movlw	high _Channels
 16286  002ADE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16287  002AE0  0ED2               	movlw	low _DefaultChannels868
 16288  002AE2  6F62               	movwf	memcpy@s1& (0+255),b
 16289  002AE4  0EFF               	movlw	high _DefaultChannels868
 16290  002AE6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16291  002AE8  0E00               	movlw	0
 16292  002AEA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16293  002AEC  0E2A               	movlw	42
 16294  002AEE  6F64               	movwf	memcpy@n& (0+255),b
 16295  002AF0  EC8E  F017         	call	_memcpy	;wreg free
 16296                           
 16297                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 16298  002AF4  0E03               	movlw	3
 16299  002AF6  0100               	movlb	0	; () banked
 16300  002AF8  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 16301  002AFA                     l10470:
 16302                           
 16303                           ; BSR set to: 0
 16304  002AFA  0E0F               	movlw	15
 16305  002AFC  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 16306  002AFE  D001               	goto	l1198
 16307  002B00  0012               	return	
 16308  002B02                     l1198:
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;lorawan_eu.c: 986: {
 16312                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 16313                           
 16314                           ; BSR set to: 0
 16315  002B02  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 16316  002B04  0D0E               	mullw	14
 16317  002B06  0E06               	movlw	6
 16318  002B08  26F3               	addwf	prodl,f,c
 16319  002B0A  0E00               	movlw	0
 16320  002B0C  22F4               	addwfc	prodh,f,c
 16321  002B0E  0E00               	movlw	low _Channels
 16322  002B10  24F3               	addwf	prodl,w,c
 16323  002B12  6ED9               	movwf	fsr2l,c
 16324  002B14  0E04               	movlw	high _Channels
 16325  002B16  20F4               	addwfc	prodh,w,c
 16326  002B18  6EDA               	movwf	fsr2h,c
 16327  002B1A  0EFF               	movlw	255
 16328  002B1C  6EDE               	movwf	postinc2,c
 16329  002B1E  0EFF               	movlw	255
 16330  002B20  6EDD               	movwf	postdec2,c
 16331                           
 16332                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 16333  002B22  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 16334  002B24  0D0E               	mullw	14
 16335  002B26  0E05               	movlw	5
 16336  002B28  26F3               	addwf	prodl,f,c
 16337  002B2A  0E00               	movlw	0
 16338  002B2C  22F4               	addwfc	prodh,f,c
 16339  002B2E  0E00               	movlw	low _Channels
 16340  002B30  24F3               	addwf	prodl,w,c
 16341  002B32  6ED9               	movwf	fsr2l,c
 16342  002B34  0E04               	movlw	high _Channels
 16343  002B36  20F4               	addwfc	prodh,w,c
 16344  002B38  6EDA               	movwf	fsr2h,c
 16345  002B3A  0EFF               	movlw	255
 16346  002B3C  6EDF               	movwf	indf2,c
 16347                           
 16348                           ; BSR set to: 0
 16349  002B3E  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 16350  002B40  D7DC               	goto	l10470
 16351  002B42                     __end_of_InitDefault868Channels:
 16352                           	opt stack 0
 16353                           tblptru	equ	0xFF8
 16354                           tblptrh	equ	0xFF7
 16355                           tblptrl	equ	0xFF6
 16356                           tablat	equ	0xFF5
 16357                           prodh	equ	0xFF4
 16358                           prodl	equ	0xFF3
 16359                           intcon	equ	0xFF2
 16360                           intcon2	equ	0xFF1
 16361                           intcon3	equ	0xFF0
 16362                           indf0	equ	0xFEF
 16363                           postinc0	equ	0xFEE
 16364                           plusw0	equ	0xFEB
 16365                           fsr0h	equ	0xFEA
 16366                           fsr0l	equ	0xFE9
 16367                           wreg	equ	0xFE8
 16368                           indf2	equ	0xFDF
 16369                           postinc2	equ	0xFDE
 16370                           postdec2	equ	0xFDD
 16371                           plusw2	equ	0xFDB
 16372                           fsr2h	equ	0xFDA
 16373                           fsr2l	equ	0xFD9
 16374                           status	equ	0xFD8
 16375                           
 16376 ;; *************** function _InitDefault433Channels *****************
 16377 ;; Defined at:
 16378 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16379 ;; Parameters:    Size  Location     Type
 16380 ;;		None
 16381 ;; Auto vars:     Size  Location     Type
 16382 ;;  i               1   11[BANK0 ] unsigned char 
 16383 ;; Return value:  Size  Location     Type
 16384 ;;                  1    wreg      void 
 16385 ;; Registers used:
 16386 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16387 ;; Tracked objects:
 16388 ;;		On entry : 0/0
 16389 ;;		On exit  : 0/0
 16390 ;;		Unchanged: 0/0
 16391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16396 ;;Total ram usage:        1 bytes
 16397 ;; Hardware stack levels used:    1
 16398 ;; Hardware stack levels required when called:    8
 16399 ;; This function calls:
 16400 ;;		_memcpy
 16401 ;;		_memset
 16402 ;; This function is called by:
 16403 ;;		_LORAWAN_Reset
 16404 ;; This function uses a non-reentrant model
 16405 ;;
 16406                           
 16407                           	psect	text94
 16408  002B42                     __ptext94:
 16409                           	opt stack 0
 16410  002B42                     _InitDefault433Channels:
 16411                           	opt stack 20
 16412                           
 16413                           ;lorawan_eu.c: 996: uint8_t i;
 16414                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;incstack = 0
 16418  002B42  0E00               	movlw	low _Channels
 16419  002B44  0100               	movlb	0	; () banked
 16420  002B46  6F60               	movwf	memset@p1& (0+255),b
 16421  002B48  0E04               	movlw	high _Channels
 16422  002B4A  6F61               	movwf	(memset@p1+1)& (0+255),b
 16423  002B4C  0E00               	movlw	0
 16424  002B4E  6F63               	movwf	(memset@c+1)& (0+255),b
 16425  002B50  0E00               	movlw	0
 16426  002B52  6F62               	movwf	memset@c& (0+255),b
 16427  002B54  0E00               	movlw	0
 16428  002B56  6F65               	movwf	(memset@n+1)& (0+255),b
 16429  002B58  0EE0               	movlw	224
 16430  002B5A  6F64               	movwf	memset@n& (0+255),b
 16431  002B5C  EC1A  F01A         	call	_memset	;wreg free
 16432                           
 16433                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 16434  002B60  0E00               	movlw	low _Channels
 16435  002B62  0100               	movlb	0	; () banked
 16436  002B64  6F60               	movwf	memcpy@d1& (0+255),b
 16437  002B66  0E04               	movlw	high _Channels
 16438  002B68  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16439  002B6A  0EA8               	movlw	low _DefaultChannels433
 16440  002B6C  6F62               	movwf	memcpy@s1& (0+255),b
 16441  002B6E  0EFF               	movlw	high _DefaultChannels433
 16442  002B70  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16443  002B72  0E00               	movlw	0
 16444  002B74  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16445  002B76  0E2A               	movlw	42
 16446  002B78  6F64               	movwf	memcpy@n& (0+255),b
 16447  002B7A  EC8E  F017         	call	_memcpy	;wreg free
 16448                           
 16449                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 16450  002B7E  0E03               	movlw	3
 16451  002B80  0100               	movlb	0	; () banked
 16452  002B82  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 16453  002B84                     l10486:
 16454                           
 16455                           ; BSR set to: 0
 16456  002B84  0E0F               	movlw	15
 16457  002B86  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 16458  002B88  D001               	goto	l1203
 16459  002B8A  0012               	return	
 16460  002B8C                     l1203:
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;lorawan_eu.c: 1001: {
 16464                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 16465                           
 16466                           ; BSR set to: 0
 16467  002B8C  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 16468  002B8E  0D0E               	mullw	14
 16469  002B90  0E06               	movlw	6
 16470  002B92  26F3               	addwf	prodl,f,c
 16471  002B94  0E00               	movlw	0
 16472  002B96  22F4               	addwfc	prodh,f,c
 16473  002B98  0E00               	movlw	low _Channels
 16474  002B9A  24F3               	addwf	prodl,w,c
 16475  002B9C  6ED9               	movwf	fsr2l,c
 16476  002B9E  0E04               	movlw	high _Channels
 16477  002BA0  20F4               	addwfc	prodh,w,c
 16478  002BA2  6EDA               	movwf	fsr2h,c
 16479  002BA4  0EFF               	movlw	255
 16480  002BA6  6EDE               	movwf	postinc2,c
 16481  002BA8  0EFF               	movlw	255
 16482  002BAA  6EDD               	movwf	postdec2,c
 16483                           
 16484                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 16485  002BAC  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 16486  002BAE  0D0E               	mullw	14
 16487  002BB0  0E05               	movlw	5
 16488  002BB2  26F3               	addwf	prodl,f,c
 16489  002BB4  0E00               	movlw	0
 16490  002BB6  22F4               	addwfc	prodh,f,c
 16491  002BB8  0E00               	movlw	low _Channels
 16492  002BBA  24F3               	addwf	prodl,w,c
 16493  002BBC  6ED9               	movwf	fsr2l,c
 16494  002BBE  0E04               	movlw	high _Channels
 16495  002BC0  20F4               	addwfc	prodh,w,c
 16496  002BC2  6EDA               	movwf	fsr2h,c
 16497  002BC4  0EFF               	movlw	255
 16498  002BC6  6EDF               	movwf	indf2,c
 16499                           
 16500                           ; BSR set to: 0
 16501  002BC8  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 16502  002BCA  D7DC               	goto	l10486
 16503  002BCC                     __end_of_InitDefault433Channels:
 16504                           	opt stack 0
 16505                           tblptru	equ	0xFF8
 16506                           tblptrh	equ	0xFF7
 16507                           tblptrl	equ	0xFF6
 16508                           tablat	equ	0xFF5
 16509                           prodh	equ	0xFF4
 16510                           prodl	equ	0xFF3
 16511                           intcon	equ	0xFF2
 16512                           intcon2	equ	0xFF1
 16513                           intcon3	equ	0xFF0
 16514                           indf0	equ	0xFEF
 16515                           postinc0	equ	0xFEE
 16516                           plusw0	equ	0xFEB
 16517                           fsr0h	equ	0xFEA
 16518                           fsr0l	equ	0xFE9
 16519                           wreg	equ	0xFE8
 16520                           indf2	equ	0xFDF
 16521                           postinc2	equ	0xFDE
 16522                           postdec2	equ	0xFDD
 16523                           plusw2	equ	0xFDB
 16524                           fsr2h	equ	0xFDA
 16525                           fsr2l	equ	0xFD9
 16526                           status	equ	0xFD8
 16527                           
 16528 ;; *************** function _memset *****************
 16529 ;; Defined at:
 16530 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  p1              2    0[BANK0 ] PTR void 
 16533 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 16534 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 16535 ;;  c               2    2[BANK0 ] int 
 16536 ;;  n               2    4[BANK0 ] unsigned int 
 16537 ;; Auto vars:     Size  Location     Type
 16538 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16539 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 16540 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  2    0[BANK0 ] PTR void 
 16543 ;; Registers used:
 16544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16550 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16553 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16554 ;;Total ram usage:        8 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    7
 16557 ;; This function calls:
 16558 ;;		Nothing
 16559 ;; This function is called by:
 16560 ;;		_AESCmac
 16561 ;;		_GenerateSubkey
 16562 ;;		_LORAWAN_Reset
 16563 ;;		_InitDefault868Channels
 16564 ;;		_InitDefault433Channels
 16565 ;;		_PrepareJoinRequestFrame
 16566 ;;		_AssemblePacket
 16567 ;;		_PrepareSessionKeys
 16568 ;;		_AssembleEncryptionBlock
 16569 ;; This function uses a non-reentrant model
 16570 ;;
 16571                           
 16572                           	psect	text95
 16573  003434                     __ptext95:
 16574                           	opt stack 0
 16575  003434                     _memset:
 16576                           	opt stack 21
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;incstack = 0
 16580  003434  C060  F066         	movff	memset@p1,memset@p
 16581  003438  C061  F067         	movff	memset@p1+1,memset@p+1
 16582  00343C  D009               	goto	l2926
 16583  00343E                     l7846:
 16584  00343E  C066  FFD9         	movff	memset@p,fsr2l
 16585  003442  C067  FFDA         	movff	memset@p+1,fsr2h
 16586  003446  C062  FFDF         	movff	memset@c,indf2
 16587  00344A  0100               	movlb	0	; () banked
 16588  00344C  4B66               	infsnz	memset@p& (0+255),f,b
 16589  00344E  2B67               	incf	(memset@p+1)& (0+255),f,b
 16590  003450                     l2926:
 16591                           
 16592                           ; BSR set to: 0
 16593  003450  0100               	movlb	0	; () banked
 16594  003452  0764               	decf	memset@n& (0+255),f,b
 16595  003454  A0D8               	btfss	status,0,c
 16596  003456  0765               	decf	(memset@n+1)& (0+255),f,b
 16597  003458  2964               	incf	memset@n& (0+255),w,b
 16598  00345A  E1F1               	bnz	l7846
 16599  00345C  2965               	incf	(memset@n+1)& (0+255),w,b
 16600  00345E  B4D8               	btfsc	status,2,c
 16601  003460  0012               	return	
 16602  003462  D7ED               	goto	l2927
 16603  003464                     __end_of_memset:
 16604                           	opt stack 0
 16605                           tblptru	equ	0xFF8
 16606                           tblptrh	equ	0xFF7
 16607                           tblptrl	equ	0xFF6
 16608                           tablat	equ	0xFF5
 16609                           prodh	equ	0xFF4
 16610                           prodl	equ	0xFF3
 16611                           intcon	equ	0xFF2
 16612                           intcon2	equ	0xFF1
 16613                           intcon3	equ	0xFF0
 16614                           indf0	equ	0xFEF
 16615                           postinc0	equ	0xFEE
 16616                           plusw0	equ	0xFEB
 16617                           fsr0h	equ	0xFEA
 16618                           fsr0l	equ	0xFE9
 16619                           wreg	equ	0xFE8
 16620                           indf2	equ	0xFDF
 16621                           postinc2	equ	0xFDE
 16622                           postdec2	equ	0xFDD
 16623                           plusw2	equ	0xFDB
 16624                           fsr2h	equ	0xFDA
 16625                           fsr2l	equ	0xFD9
 16626                           status	equ	0xFD8
 16627                           
 16628 ;; *************** function _memcpy *****************
 16629 ;; Defined at:
 16630 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;  d1              2    0[BANK0 ] PTR void 
 16633 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 16634 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 16635 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 16636 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 16637 ;;  s1              2    2[BANK0 ] PTR const void 
 16638 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 16639 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 16640 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 16641 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 16642 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 16643 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 16644 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 16645 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 16646 ;;  n               2    4[BANK0 ] unsigned int 
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 16649 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 16650 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 16651 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 16652 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 16653 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 16654 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 16655 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 16656 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 16657 ;;  d               2    6[BANK0 ] PTR unsigned char 
 16658 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 16659 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 16660 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 16661 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 16662 ;;  tmp             1   10[BANK0 ] unsigned char 
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  2    0[BANK0 ] PTR void 
 16665 ;; Registers used:
 16666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16672 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16676 ;;Total ram usage:       11 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:    7
 16679 ;; This function calls:
 16680 ;;		Nothing
 16681 ;; This function is called by:
 16682 ;;		_AESCmac
 16683 ;;		_RADIO_SetFSKSyncWord
 16684 ;;		_InitDefault868Channels
 16685 ;;		_InitDefault433Channels
 16686 ;;		_AESEncodeLoRa
 16687 ;;		_LORAWAN_SetNetworkSessionKey
 16688 ;;		_LORAWAN_SetApplicationSessionKey
 16689 ;;		_PrepareJoinRequestFrame
 16690 ;;		_ComputeMic
 16691 ;;		_RADIO_GetData
 16692 ;;		_RADIO_GetFSKSyncWord
 16693 ;;		_UpdateCfList
 16694 ;;		_LORAWAN_SetMcastNetworkSessionKey
 16695 ;;		_LORAWAN_SetMcastApplicationSessionKey
 16696 ;;		_LORAWAN_GetMcastApplicationSessionKey
 16697 ;;		_LORAWAN_GetMcastNetworkSessionKey
 16698 ;;		_LORAWAN_SetDeviceEui
 16699 ;;		_LORAWAN_GetDeviceEui
 16700 ;;		_LORAWAN_SetApplicationEui
 16701 ;;		_LORAWAN_GetApplicationEui
 16702 ;;		_LORAWAN_GetNetworkSessionKey
 16703 ;;		_LORAWAN_GetApplicationSessionKey
 16704 ;;		_LORAWAN_SetApplicationKey
 16705 ;;		_LORAWAN_GetApplicationKey
 16706 ;;		_LORAWAN_RxDone
 16707 ;;		_AssemblePacket
 16708 ;;		_PrepareSessionKeys
 16709 ;;		_AssembleEncryptionBlock
 16710 ;;		_ExtractMic
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text96
 16715  002F1C                     __ptext96:
 16716                           	opt stack 0
 16717  002F1C                     _memcpy:
 16718                           	opt stack 22
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;incstack = 0
 16722  002F1C  C062  F068         	movff	memcpy@s1,memcpy@s
 16723  002F20  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 16724  002F24  C060  F066         	movff	memcpy@d1,memcpy@d
 16725  002F28  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 16726  002F2C  D01D               	goto	l2920
 16727  002F2E                     l7648:
 16728  002F2E  C068  FFF6         	movff	memcpy@s,tblptrl
 16729  002F32  C069  FFF7         	movff	memcpy@s+1,tblptrh
 16730  002F36  0E00               	movlw	low (__mediumconst shr (0+16))
 16731  002F38  6EF8               	movwf	tblptru,c
 16732  002F3A  0E0F               	movlw	(high __ramtop+-1)
 16733  002F3C  64F7               	cpfsgt	tblptrh,c
 16734  002F3E  D003               	bra	u6447
 16735  002F40  0008               	tblrd		*
 16736  002F42  50F5               	movf	tablat,w,c
 16737  002F44  D005               	bra	u6440
 16738  002F46                     u6447:
 16739  002F46  CFF6 FFE9          	movff	tblptrl,fsr0l
 16740  002F4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16741  002F4E  50EF               	movf	indf0,w,c
 16742  002F50                     u6440:
 16743  002F50  0100               	movlb	0	; () banked
 16744  002F52  6F6A               	movwf	memcpy@tmp& (0+255),b
 16745                           
 16746                           ; BSR set to: 0
 16747  002F54  4B68               	infsnz	memcpy@s& (0+255),f,b
 16748  002F56  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 16749                           
 16750                           ; BSR set to: 0
 16751  002F58  C066  FFD9         	movff	memcpy@d,fsr2l
 16752  002F5C  C067  FFDA         	movff	memcpy@d+1,fsr2h
 16753  002F60  C06A  FFDF         	movff	memcpy@tmp,indf2
 16754                           
 16755                           ; BSR set to: 0
 16756  002F64  4B66               	infsnz	memcpy@d& (0+255),f,b
 16757  002F66  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 16758  002F68                     l2920:
 16759                           
 16760                           ; BSR set to: 0
 16761  002F68  0100               	movlb	0	; () banked
 16762  002F6A  0764               	decf	memcpy@n& (0+255),f,b
 16763  002F6C  A0D8               	btfss	status,0,c
 16764  002F6E  0765               	decf	(memcpy@n+1)& (0+255),f,b
 16765  002F70  2964               	incf	memcpy@n& (0+255),w,b
 16766  002F72  E1DD               	bnz	l7648
 16767  002F74  2965               	incf	(memcpy@n+1)& (0+255),w,b
 16768  002F76  B4D8               	btfsc	status,2,c
 16769  002F78  0012               	return	
 16770  002F7A  D7D9               	goto	l2921
 16771  002F7C                     __end_of_memcpy:
 16772                           	opt stack 0
 16773                           tblptru	equ	0xFF8
 16774                           tblptrh	equ	0xFF7
 16775                           tblptrl	equ	0xFF6
 16776                           tablat	equ	0xFF5
 16777                           prodh	equ	0xFF4
 16778                           prodl	equ	0xFF3
 16779                           intcon	equ	0xFF2
 16780                           intcon2	equ	0xFF1
 16781                           intcon3	equ	0xFF0
 16782                           indf0	equ	0xFEF
 16783                           postinc0	equ	0xFEE
 16784                           plusw0	equ	0xFEB
 16785                           fsr0h	equ	0xFEA
 16786                           fsr0l	equ	0xFE9
 16787                           wreg	equ	0xFE8
 16788                           indf2	equ	0xFDF
 16789                           postinc2	equ	0xFDE
 16790                           postdec2	equ	0xFDD
 16791                           plusw2	equ	0xFDB
 16792                           fsr2h	equ	0xFDA
 16793                           fsr2l	equ	0xFD9
 16794                           status	equ	0xFD8
 16795                           
 16796 ;; *************** function _CreateAllSoftwareTimers *****************
 16797 ;; Defined at:
 16798 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;		None
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;		None
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  1    wreg      void 
 16805 ;; Registers used:
 16806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16816 ;;Total ram usage:        0 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:    8
 16819 ;; This function calls:
 16820 ;;		_SwTimerCreate
 16821 ;; This function is called by:
 16822 ;;		_LORAWAN_Init
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           	psect	text97
 16827  00317E                     __ptext97:
 16828                           	opt stack 0
 16829  00317E                     _CreateAllSoftwareTimers:
 16830                           	opt stack 21
 16831                           
 16832                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;incstack = 0
 16836  00317E  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16837  003182  0102               	movlb	2	; () banked
 16838  003184  6FE2               	movwf	(_loRa+226)& (0+255),b
 16839                           
 16840                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 16841  003186  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16842  00318A  0102               	movlb	2	; () banked
 16843  00318C  6FE3               	movwf	(_loRa+227)& (0+255),b
 16844                           
 16845                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 16846  00318E  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16847  003192  0102               	movlb	2	; () banked
 16848  003194  6FE4               	movwf	(_loRa+228)& (0+255),b
 16849                           
 16850                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 16851  003196  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16852  00319A  0102               	movlb	2	; () banked
 16853  00319C  6FE5               	movwf	(_loRa+229)& (0+255),b
 16854                           
 16855                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 16856  00319E  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16857  0031A2  0102               	movlb	2	; () banked
 16858  0031A4  6FE7               	movwf	(_loRa+231)& (0+255),b
 16859                           
 16860                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 16861  0031A6  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16862  0031AA  0102               	movlb	2	; () banked
 16863  0031AC  6FE8               	movwf	(_loRa+232)& (0+255),b
 16864                           
 16865                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 16866  0031AE  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16867  0031B2  0102               	movlb	2	; () banked
 16868  0031B4  6FE6               	movwf	(_loRa+230)& (0+255),b
 16869                           
 16870                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 16871  0031B6  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16872  0031BA  0102               	movlb	2	; () banked
 16873  0031BC  6FEA               	movwf	(_loRa+234)& (0+255),b
 16874                           
 16875                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 16876  0031BE  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16877  0031C2  0102               	movlb	2	; () banked
 16878  0031C4  6FF3               	movwf	(_loRa+243)& (0+255),b
 16879                           
 16880                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 16881  0031C6  ECD1  F014         	call	_SwTimerCreate	;wreg free
 16882  0031CA  0102               	movlb	2	; () banked
 16883  0031CC  6FE9               	movwf	(_loRa+233)& (0+255),b
 16884                           
 16885                           ; BSR set to: 2
 16886  0031CE  0012               	return		;funcret
 16887  0031D0                     __end_of_CreateAllSoftwareTimers:
 16888                           	opt stack 0
 16889                           tblptru	equ	0xFF8
 16890                           tblptrh	equ	0xFF7
 16891                           tblptrl	equ	0xFF6
 16892                           tablat	equ	0xFF5
 16893                           prodh	equ	0xFF4
 16894                           prodl	equ	0xFF3
 16895                           intcon	equ	0xFF2
 16896                           intcon2	equ	0xFF1
 16897                           intcon3	equ	0xFF0
 16898                           indf0	equ	0xFEF
 16899                           postinc0	equ	0xFEE
 16900                           plusw0	equ	0xFEB
 16901                           fsr0h	equ	0xFEA
 16902                           fsr0l	equ	0xFE9
 16903                           wreg	equ	0xFE8
 16904                           indf2	equ	0xFDF
 16905                           postinc2	equ	0xFDE
 16906                           postdec2	equ	0xFDD
 16907                           plusw2	equ	0xFDB
 16908                           fsr2h	equ	0xFDA
 16909                           fsr2l	equ	0xFD9
 16910                           status	equ	0xFD8
 16911                           
 16912 ;; *************** function _SwTimerCreate *****************
 16913 ;; Defined at:
 16914 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 16915 ;; Parameters:    Size  Location     Type
 16916 ;;		None
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;  retVal          1    0[BANK0 ] unsigned char 
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  1    wreg      unsigned char 
 16921 ;; Registers used:
 16922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16923 ;; Tracked objects:
 16924 ;;		On entry : 0/0
 16925 ;;		On exit  : 0/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16931 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16932 ;;Total ram usage:        1 bytes
 16933 ;; Hardware stack levels used:    1
 16934 ;; Hardware stack levels required when called:    7
 16935 ;; This function calls:
 16936 ;;		Nothing
 16937 ;; This function is called by:
 16938 ;;		_RADIO_Init
 16939 ;;		_CreateAllSoftwareTimers
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text98
 16944  0029A2                     __ptext98:
 16945                           	opt stack 0
 16946  0029A2                     _SwTimerCreate:
 16947                           	opt stack 21
 16948                           
 16949                           ;sw_timer.c: 156: uint8_t retVal;
 16950                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 16951                           
 16952                           ; BSR set to: 2
 16953                           ;incstack = 0
 16954  0029A2  0E14               	movlw	20
 16955  0029A4  0100               	movlb	0	; () banked
 16956  0029A6  61FA               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 16957  0029A8  D03E               	goto	l237
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;sw_timer.c: 158: {
 16961                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 16962  0029AA  9EF2               	bcf	intcon,7,c	;volatile
 16963                           
 16964                           ;sw_timer.c: 160: retVal = allocatedTimers;
 16965  0029AC  C0FA  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 16969  0029B0  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 16970  0029B2  0D08               	mullw	8
 16971  0029B4  0E04               	movlw	4
 16972  0029B6  26F3               	addwf	prodl,f,c
 16973  0029B8  0E00               	movlw	0
 16974  0029BA  22F4               	addwfc	prodh,f,c
 16975  0029BC  0E00               	movlw	low _swTimers
 16976  0029BE  24F3               	addwf	prodl,w,c
 16977  0029C0  6ED9               	movwf	fsr2l,c
 16978  0029C2  0E03               	movlw	high _swTimers
 16979  0029C4  20F4               	addwfc	prodh,w,c
 16980  0029C6  6EDA               	movwf	fsr2h,c
 16981  0029C8  0E00               	movlw	0
 16982  0029CA  6EDF               	movwf	indf2,c
 16983                           
 16984                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 16985  0029CC  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 16986  0029CE  0D08               	mullw	8
 16987  0029D0  0E00               	movlw	low _swTimers
 16988  0029D2  24F3               	addwf	prodl,w,c
 16989  0029D4  6ED9               	movwf	fsr2l,c
 16990  0029D6  0E03               	movlw	high _swTimers
 16991  0029D8  20F4               	addwfc	prodh,w,c
 16992  0029DA  6EDA               	movwf	fsr2h,c
 16993  0029DC  6ADE               	clrf	postinc2,c
 16994  0029DE  6ADE               	clrf	postinc2,c
 16995  0029E0  6ADE               	clrf	postinc2,c
 16996  0029E2  6ADD               	clrf	postdec2,c
 16997                           
 16998                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 16999  0029E4  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 17000  0029E6  0D08               	mullw	8
 17001  0029E8  0E05               	movlw	5
 17002  0029EA  26F3               	addwf	prodl,f,c
 17003  0029EC  0E00               	movlw	0
 17004  0029EE  22F4               	addwfc	prodh,f,c
 17005  0029F0  0E00               	movlw	low _swTimers
 17006  0029F2  24F3               	addwf	prodl,w,c
 17007  0029F4  6ED9               	movwf	fsr2l,c
 17008  0029F6  0E03               	movlw	high _swTimers
 17009  0029F8  20F4               	addwfc	prodh,w,c
 17010  0029FA  6EDA               	movwf	fsr2h,c
 17011  0029FC  0E00               	movlw	0
 17012  0029FE  6EDF               	movwf	indf2,c
 17013                           
 17014                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 17015  002A00  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 17016  002A02  0D08               	mullw	8
 17017  002A04  0E06               	movlw	6
 17018  002A06  26F3               	addwf	prodl,f,c
 17019  002A08  0E00               	movlw	0
 17020  002A0A  22F4               	addwfc	prodh,f,c
 17021  002A0C  0E00               	movlw	low _swTimers
 17022  002A0E  24F3               	addwf	prodl,w,c
 17023  002A10  6ED9               	movwf	fsr2l,c
 17024  002A12  0E03               	movlw	high _swTimers
 17025  002A14  20F4               	addwfc	prodh,w,c
 17026  002A16  6EDA               	movwf	fsr2h,c
 17027  002A18  0E00               	movlw	0
 17028  002A1A  6EDE               	movwf	postinc2,c
 17029  002A1C  0E00               	movlw	0
 17030  002A1E  6EDD               	movwf	postdec2,c
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;sw_timer.c: 165: allocatedTimers++;
 17034  002A20  2BFA               	incf	_allocatedTimers& (0+255),f,b	;volatile
 17035                           
 17036                           ; BSR set to: 0
 17037                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 17038  002A22  8EF2               	bsf	intcon,7,c	;volatile
 17039                           
 17040                           ;sw_timer.c: 167: }
 17041  002A24  D001               	goto	l241
 17042  002A26                     l237:
 17043                           
 17044                           ;sw_timer.c: 171: {
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;sw_timer.c: 168: else
 17048                           ;sw_timer.c: 169: {
 17049                           ;sw_timer.c: 170: while(1)
 17050  002A26  D7FF               	goto	l237
 17051  002A28                     l241:
 17052                           
 17053                           ;sw_timer.c: 175: }
 17054                           ;sw_timer.c: 176: }
 17055                           ;sw_timer.c: 177: return retVal;
 17056  002A28  0100               	movlb	0	; () banked
 17057  002A2A  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 17058  002A2C  0012               	return	
 17059  002A2E                     __end_of_SwTimerCreate:
 17060                           	opt stack 0
 17061                           tblptru	equ	0xFF8
 17062                           tblptrh	equ	0xFF7
 17063                           tblptrl	equ	0xFF6
 17064                           tablat	equ	0xFF5
 17065                           prodh	equ	0xFF4
 17066                           prodl	equ	0xFF3
 17067                           intcon	equ	0xFF2
 17068                           intcon2	equ	0xFF1
 17069                           intcon3	equ	0xFF0
 17070                           indf0	equ	0xFEF
 17071                           postinc0	equ	0xFEE
 17072                           plusw0	equ	0xFEB
 17073                           fsr0h	equ	0xFEA
 17074                           fsr0l	equ	0xFE9
 17075                           wreg	equ	0xFE8
 17076                           indf2	equ	0xFDF
 17077                           postinc2	equ	0xFDE
 17078                           postdec2	equ	0xFDD
 17079                           plusw2	equ	0xFDB
 17080                           fsr2h	equ	0xFDA
 17081                           fsr2l	equ	0xFD9
 17082                           status	equ	0xFD8
 17083                           
 17084 ;; *************** function _INTERRUPT_InterruptManager *****************
 17085 ;; Defined at:
 17086 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17087 ;; Parameters:    Size  Location     Type
 17088 ;;		None
 17089 ;; Auto vars:     Size  Location     Type
 17090 ;;		None
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  1    wreg      void 
 17093 ;; Registers used:
 17094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17102 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17104 ;;Total ram usage:        8 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; Hardware stack levels required when called:    6
 17107 ;; This function calls:
 17108 ;;		_INT1_ISR
 17109 ;;		_INT2_ISR
 17110 ;;		_PIN_MANAGER_IOC
 17111 ;;		_TMR1_ISR
 17112 ;; This function is called by:
 17113 ;;		Interrupt level 2
 17114 ;; This function uses a non-reentrant model
 17115 ;;
 17116                           
 17117                           	psect	intcode
 17118  000008                     __pintcode:
 17119                           	opt stack 0
 17120  000008                     _INTERRUPT_InterruptManager:
 17121                           	opt stack 16
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;incstack = 0
 17125  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 17126  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17127  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 17128  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 17129  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 17130  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 17131  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 17132  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 17133  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 17134                           
 17135                           ;interrupt_manager.c: 61: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 17136  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 17137  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 17138  000030  D003               	goto	i2l2282
 17139                           
 17140                           ;interrupt_manager.c: 62: {
 17141                           ;interrupt_manager.c: 63: INT1_ISR();
 17142  000032  EC33  F01C         	call	_INT1_ISR	;wreg free
 17143                           
 17144                           ;interrupt_manager.c: 64: }
 17145  000036  D012               	goto	i2l2289
 17146  000038                     i2l2282:
 17147                           
 17148                           ;interrupt_manager.c: 65: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 17149  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 17150  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 17151  00003C  D003               	goto	i2l2284
 17152                           
 17153                           ;interrupt_manager.c: 66: {
 17154                           ;interrupt_manager.c: 67: INT2_ISR();
 17155  00003E  EC2F  F01C         	call	_INT2_ISR	;wreg free
 17156                           
 17157                           ;interrupt_manager.c: 68: }
 17158  000042  D00C               	goto	i2l2289
 17159  000044                     i2l2284:
 17160                           
 17161                           ;interrupt_manager.c: 69: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 17162  000044  B6F2               	btfsc	intcon,3,c	;volatile
 17163  000046  A0F2               	btfss	intcon,0,c	;volatile
 17164  000048  D003               	goto	i2l2286
 17165                           
 17166                           ;interrupt_manager.c: 70: {
 17167                           ;interrupt_manager.c: 71: PIN_MANAGER_IOC();
 17168  00004A  EC26  F01C         	call	_PIN_MANAGER_IOC	;wreg free
 17169                           
 17170                           ;interrupt_manager.c: 72: }
 17171  00004E  D006               	goto	i2l2289
 17172  000050                     i2l2286:
 17173                           
 17174                           ;interrupt_manager.c: 73: else if(INTCONbits.PEIE == 1)
 17175  000050  BCF2               	btfsc	intcon,6,c	;volatile
 17176                           
 17177                           ;interrupt_manager.c: 74: {
 17178                           ;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 17179  000052  A09D               	btfss	3997,0,c	;volatile
 17180  000054  D003               	goto	i2l2289
 17181  000056  B09E               	btfsc	3998,0,c	;volatile
 17182                           
 17183                           ;interrupt_manager.c: 76: {
 17184                           ;interrupt_manager.c: 77: TMR1_ISR();
 17185  000058  EC95  F01B         	call	_TMR1_ISR	;wreg free
 17186  00005C                     i2l2289:
 17187                           
 17188                           ;interrupt_manager.c: 84: else
 17189                           ;interrupt_manager.c: 85: {
 17190                           
 17191                           ;interrupt_manager.c: 82: }
 17192                           ;interrupt_manager.c: 83: }
 17193                           
 17194                           ;interrupt_manager.c: 79: else
 17195                           ;interrupt_manager.c: 80: {
 17196  00005C  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 17197  000060  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 17198  000064  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 17199  000068  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 17200  00006C  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 17201  000070  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 17202  000074  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17203  000078  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17204  00007C  0011               	retfie		f
 17205  00007E                     __end_of_INTERRUPT_InterruptManager:
 17206                           	opt stack 0
 17207                           pclatu	equ	0xFFB
 17208                           pclath	equ	0xFFA
 17209                           tblptru	equ	0xFF8
 17210                           tblptrh	equ	0xFF7
 17211                           tblptrl	equ	0xFF6
 17212                           tablat	equ	0xFF5
 17213                           prodh	equ	0xFF4
 17214                           prodl	equ	0xFF3
 17215                           intcon	equ	0xFF2
 17216                           intcon2	equ	0xFF1
 17217                           intcon3	equ	0xFF0
 17218                           indf0	equ	0xFEF
 17219                           postinc0	equ	0xFEE
 17220                           plusw0	equ	0xFEB
 17221                           fsr0h	equ	0xFEA
 17222                           fsr0l	equ	0xFE9
 17223                           wreg	equ	0xFE8
 17224                           fsr1h	equ	0xFE2
 17225                           fsr1l	equ	0xFE1
 17226                           indf2	equ	0xFDF
 17227                           postinc2	equ	0xFDE
 17228                           postdec2	equ	0xFDD
 17229                           plusw2	equ	0xFDB
 17230                           fsr2h	equ	0xFDA
 17231                           fsr2l	equ	0xFD9
 17232                           status	equ	0xFD8
 17233                           
 17234 ;; *************** function _TMR1_ISR *****************
 17235 ;; Defined at:
 17236 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;		None
 17239 ;; Auto vars:     Size  Location     Type
 17240 ;;		None
 17241 ;; Return value:  Size  Location     Type
 17242 ;;                  1    wreg      void 
 17243 ;; Registers used:
 17244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17245 ;; Tracked objects:
 17246 ;;		On entry : 0/0
 17247 ;;		On exit  : 0/0
 17248 ;;		Unchanged: 0/0
 17249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17254 ;;Total ram usage:        0 bytes
 17255 ;; Hardware stack levels used:    1
 17256 ;; Hardware stack levels required when called:    5
 17257 ;; This function calls:
 17258 ;;		_TMR1_CallBack
 17259 ;;		i2_TMR1_WriteTimer
 17260 ;; This function is called by:
 17261 ;;		_INTERRUPT_InterruptManager
 17262 ;; This function uses a non-reentrant model
 17263 ;;
 17264                           
 17265                           	psect	text100
 17266  00372A                     __ptext100:
 17267                           	opt stack 0
 17268  00372A                     _TMR1_ISR:
 17269                           	opt stack 16
 17270                           
 17271                           ;tmr1.c: 162: PIR1bits.TMR1IF = 0;
 17272                           
 17273                           ;incstack = 0
 17274  00372A  909E               	bcf	3998,0,c	;volatile
 17275                           
 17276                           ;tmr1.c: 163: TMR1_WriteTimer(timer1ReloadVal);
 17277  00372C  C04A  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 17278  003730  C04B  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 17279  003734  EC61  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 17280                           
 17281                           ;tmr1.c: 167: TMR1_CallBack();
 17282  003738  EC25  F01B         	call	_TMR1_CallBack	;wreg free
 17283  00373C  0012               	return		;funcret
 17284  00373E                     __end_of_TMR1_ISR:
 17285                           	opt stack 0
 17286                           pclatu	equ	0xFFB
 17287                           pclath	equ	0xFFA
 17288                           tblptru	equ	0xFF8
 17289                           tblptrh	equ	0xFF7
 17290                           tblptrl	equ	0xFF6
 17291                           tablat	equ	0xFF5
 17292                           prodh	equ	0xFF4
 17293                           prodl	equ	0xFF3
 17294                           intcon	equ	0xFF2
 17295                           intcon2	equ	0xFF1
 17296                           intcon3	equ	0xFF0
 17297                           indf0	equ	0xFEF
 17298                           postinc0	equ	0xFEE
 17299                           plusw0	equ	0xFEB
 17300                           fsr0h	equ	0xFEA
 17301                           fsr0l	equ	0xFE9
 17302                           wreg	equ	0xFE8
 17303                           fsr1h	equ	0xFE2
 17304                           fsr1l	equ	0xFE1
 17305                           indf2	equ	0xFDF
 17306                           postinc2	equ	0xFDE
 17307                           postdec2	equ	0xFDD
 17308                           plusw2	equ	0xFDB
 17309                           fsr2h	equ	0xFDA
 17310                           fsr2l	equ	0xFD9
 17311                           status	equ	0xFD8
 17312                           
 17313 ;; *************** function _TMR1_CallBack *****************
 17314 ;; Defined at:
 17315 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 17316 ;; Parameters:    Size  Location     Type
 17317 ;;		None
 17318 ;; Auto vars:     Size  Location     Type
 17319 ;;		None
 17320 ;; Return value:  Size  Location     Type
 17321 ;;                  1    wreg      void 
 17322 ;; Registers used:
 17323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17324 ;; Tracked objects:
 17325 ;;		On entry : 0/0
 17326 ;;		On exit  : 0/0
 17327 ;;		Unchanged: 0/0
 17328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17333 ;;Total ram usage:        0 bytes
 17334 ;; Hardware stack levels used:    1
 17335 ;; Hardware stack levels required when called:    4
 17336 ;; This function calls:
 17337 ;;		Absolute function
 17338 ;;		_TMR1_DefaultInterruptHandler
 17339 ;;		_TMR_ISR_lora
 17340 ;; This function is called by:
 17341 ;;		_TMR1_ISR
 17342 ;; This function uses a non-reentrant model
 17343 ;;
 17344                           
 17345                           	psect	text101
 17346  00364A                     __ptext101:
 17347                           	opt stack 0
 17348  00364A                     _TMR1_CallBack:
 17349                           	opt stack 16
 17350                           
 17351                           ;tmr1.c: 173: if(TMR1_InterruptHandler)
 17352                           
 17353                           ;incstack = 0
 17354  00364A  5048               	movf	_TMR1_InterruptHandler,w,c
 17355  00364C  1049               	iorwf	_TMR1_InterruptHandler+1,w,c
 17356  00364E  B4D8               	btfsc	status,2,c
 17357  003650  0012               	return	
 17358                           
 17359                           ;tmr1.c: 174: {
 17360                           ;tmr1.c: 175: TMR1_InterruptHandler();
 17361  003652  D801               	call	i2u1216_48
 17362  003654  0012               	return	
 17363  003656                     i2u1216_48:
 17364  003656  0005               	push	
 17365  003658  6EFA               	movwf	pclath,c
 17366  00365A  5048               	movf	_TMR1_InterruptHandler,w,c
 17367  00365C  6EFD               	movwf	tosl,c
 17368  00365E  5049               	movf	_TMR1_InterruptHandler+1,w,c
 17369  003660  6EFE               	movwf	tosh,c
 17370  003662  6AFF               	clrf	tosu,c
 17371  003664  50FA               	movf	pclath,w,c
 17372  003666  0012               	return		;indir
 17373  003668                     __end_of_TMR1_CallBack:
 17374                           	opt stack 0
 17375                           tosu	equ	0xFFF
 17376                           tosh	equ	0xFFE
 17377                           tosl	equ	0xFFD
 17378                           pclatu	equ	0xFFB
 17379                           pclath	equ	0xFFA
 17380                           tblptru	equ	0xFF8
 17381                           tblptrh	equ	0xFF7
 17382                           tblptrl	equ	0xFF6
 17383                           tablat	equ	0xFF5
 17384                           prodh	equ	0xFF4
 17385                           prodl	equ	0xFF3
 17386                           intcon	equ	0xFF2
 17387                           intcon2	equ	0xFF1
 17388                           intcon3	equ	0xFF0
 17389                           indf0	equ	0xFEF
 17390                           postinc0	equ	0xFEE
 17391                           plusw0	equ	0xFEB
 17392                           fsr0h	equ	0xFEA
 17393                           fsr0l	equ	0xFE9
 17394                           wreg	equ	0xFE8
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           indf2	equ	0xFDF
 17398                           postinc2	equ	0xFDE
 17399                           postdec2	equ	0xFDD
 17400                           plusw2	equ	0xFDB
 17401                           fsr2h	equ	0xFDA
 17402                           fsr2l	equ	0xFD9
 17403                           status	equ	0xFD8
 17404                           
 17405 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17406 ;; Defined at:
 17407 ;;		line 183 in file "mcc_generated_files/tmr1.c"
 17408 ;; Parameters:    Size  Location     Type
 17409 ;;		None
 17410 ;; Auto vars:     Size  Location     Type
 17411 ;;		None
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  1    wreg      void 
 17414 ;; Registers used:
 17415 ;;		None
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17425 ;;Total ram usage:        0 bytes
 17426 ;; Hardware stack levels used:    1
 17427 ;; This function calls:
 17428 ;;		Nothing
 17429 ;; This function is called by:
 17430 ;;		_TMR1_Initialize
 17431 ;;		_TMR1_CallBack
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text102
 17436  00389C                     __ptext102:
 17437                           	opt stack 0
 17438  00389C                     _TMR1_DefaultInterruptHandler:
 17439                           	opt stack 19
 17440                           
 17441                           ;incstack = 0
 17442  00389C  0012               	return		;funcret
 17443  00389E                     __end_of_TMR1_DefaultInterruptHandler:
 17444                           	opt stack 0
 17445                           tosu	equ	0xFFF
 17446                           tosh	equ	0xFFE
 17447                           tosl	equ	0xFFD
 17448                           pclatu	equ	0xFFB
 17449                           pclath	equ	0xFFA
 17450                           tblptru	equ	0xFF8
 17451                           tblptrh	equ	0xFF7
 17452                           tblptrl	equ	0xFF6
 17453                           tablat	equ	0xFF5
 17454                           prodh	equ	0xFF4
 17455                           prodl	equ	0xFF3
 17456                           intcon	equ	0xFF2
 17457                           intcon2	equ	0xFF1
 17458                           intcon3	equ	0xFF0
 17459                           indf0	equ	0xFEF
 17460                           postinc0	equ	0xFEE
 17461                           plusw0	equ	0xFEB
 17462                           fsr0h	equ	0xFEA
 17463                           fsr0l	equ	0xFE9
 17464                           wreg	equ	0xFE8
 17465                           fsr1h	equ	0xFE2
 17466                           fsr1l	equ	0xFE1
 17467                           indf2	equ	0xFDF
 17468                           postinc2	equ	0xFDE
 17469                           postdec2	equ	0xFDD
 17470                           plusw2	equ	0xFDB
 17471                           fsr2h	equ	0xFDA
 17472                           fsr2l	equ	0xFD9
 17473                           status	equ	0xFD8
 17474                           
 17475 ;; *************** function _TMR_ISR_lora *****************
 17476 ;; Defined at:
 17477 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      void 
 17484 ;; Registers used:
 17485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17495 ;;Total ram usage:        2 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; Hardware stack levels required when called:    3
 17498 ;; This function calls:
 17499 ;;		i2_SwTimersInterrupt
 17500 ;;		i2_TMR_SwapTimer
 17501 ;; This function is called by:
 17502 ;;		_TMR_ISR_Lora_Init
 17503 ;;		_TMR1_CallBack
 17504 ;; This function uses a non-reentrant model
 17505 ;;
 17506                           
 17507                           	psect	text103
 17508  002F7C                     __ptext103:
 17509                           	opt stack 0
 17510  002F7C                     _TMR_ISR_lora:
 17511                           	opt stack 16
 17512                           
 17513                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 17514                           
 17515                           ;incstack = 0
 17516  002F7C  0E01               	movlw	1
 17517  002F7E  0100               	movlb	0	; () banked
 17518  002F80  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 17522  002F82  ECC2  F00F         	call	i2_SwTimersInterrupt	;wreg free
 17523  002F86  C021  F0FC         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 17524  002F8A  C022  F0FD         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 17525  002F8E  C023  F0FE         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 17526  002F92  C024  F0FF         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 17527                           
 17528                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 17529  002F96  0100               	movlb	0	; () banked
 17530  002F98  51FF               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 17531  002F9A  E11D               	bnz	i2l1331
 17532  002F9C  05FE               	decf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 17533  002F9E  B0D8               	btfsc	status,0,c
 17534  002FA0  0012               	return	
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;tmr_lora_addons.c: 66: {
 17538                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 17539  002FA2  C0FC  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 17540  002FA6  C0FD  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 17541  002FAA  1E32               	comf	??_TMR_ISR_lora,f,c
 17542  002FAC  1E33               	comf	??_TMR_ISR_lora+1,f,c
 17543  002FAE  4A32               	infsnz	??_TMR_ISR_lora,f,c
 17544  002FB0  2A33               	incf	??_TMR_ISR_lora+1,f,c
 17545  002FB2  C032  F0F6         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 17546  002FB6  C033  F0F7         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 17550  002FBA  C0F6  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 17551  002FBE  C0F7  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 17552  002FC2  EC93  F019         	call	i2_TMR_SwapTimer	;wreg free
 17553  002FC6  C009  F0EC         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 17554  002FCA  C00A  F0ED         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 17555  002FCE  0100               	movlb	0	; () banked
 17556  002FD0  6BEE               	clrf	(_ticksAdded+2)& (0+255),b	;volatile
 17557  002FD2  6BEF               	clrf	(_ticksAdded+3)& (0+255),b	;volatile
 17558  002FD4  0012               	return	
 17559  002FD6                     i2l1331:
 17560                           
 17561                           ; BSR set to: 0
 17562  002FD6  0012               	return		;funcret
 17563  002FD8                     __end_of_TMR_ISR_lora:
 17564                           	opt stack 0
 17565                           tosu	equ	0xFFF
 17566                           tosh	equ	0xFFE
 17567                           tosl	equ	0xFFD
 17568                           pclatu	equ	0xFFB
 17569                           pclath	equ	0xFFA
 17570                           tblptru	equ	0xFF8
 17571                           tblptrh	equ	0xFF7
 17572                           tblptrl	equ	0xFF6
 17573                           tablat	equ	0xFF5
 17574                           prodh	equ	0xFF4
 17575                           prodl	equ	0xFF3
 17576                           intcon	equ	0xFF2
 17577                           intcon2	equ	0xFF1
 17578                           intcon3	equ	0xFF0
 17579                           indf0	equ	0xFEF
 17580                           postinc0	equ	0xFEE
 17581                           plusw0	equ	0xFEB
 17582                           fsr0h	equ	0xFEA
 17583                           fsr0l	equ	0xFE9
 17584                           wreg	equ	0xFE8
 17585                           fsr1h	equ	0xFE2
 17586                           fsr1l	equ	0xFE1
 17587                           indf2	equ	0xFDF
 17588                           postinc2	equ	0xFDE
 17589                           postdec2	equ	0xFDD
 17590                           plusw2	equ	0xFDB
 17591                           fsr2h	equ	0xFDA
 17592                           fsr2l	equ	0xFD9
 17593                           status	equ	0xFD8
 17594                           
 17595 ;; *************** function i2_TMR_SwapTimer *****************
 17596 ;; Defined at:
 17597 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17598 ;; Parameters:    Size  Location     Type
 17599 ;;  timerVal        2    8[COMRAM] unsigned int 
 17600 ;; Auto vars:     Size  Location     Type
 17601 ;;		None
 17602 ;; Return value:  Size  Location     Type
 17603 ;;                  2    8[COMRAM] unsigned int 
 17604 ;; Registers used:
 17605 ;;		wreg, status,2, status,0, cstack
 17606 ;; Tracked objects:
 17607 ;;		On entry : 0/0
 17608 ;;		On exit  : 0/0
 17609 ;;		Unchanged: 0/0
 17610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17615 ;;Total ram usage:        2 bytes
 17616 ;; Hardware stack levels used:    1
 17617 ;; Hardware stack levels required when called:    1
 17618 ;; This function calls:
 17619 ;;		i2_TMR1_ReadTimer
 17620 ;;		i2_TMR1_WriteTimer
 17621 ;; This function is called by:
 17622 ;;		_TMR_ISR_lora
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           	psect	text104
 17627  003326                     __ptext104:
 17628                           	opt stack 0
 17629  003326                     i2_TMR_SwapTimer:
 17630                           	opt stack 17
 17631                           
 17632                           ;sw_timer.c: 114: static uint16_t oldVal;
 17633                           ;sw_timer.c: 115: static uint16_t retVal;
 17634                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 17635                           
 17636                           ; BSR set to: 0
 17637                           ;incstack = 0
 17638  003326  EC06  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 17639  00332A  C001  F0F2         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 17640  00332E  C002  F0F3         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 17641  003332                     
 17642                           ;sw_timer.c: 123: ;
 17643  003332  EC06  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 17644  003336  0100               	movlb	0	; () banked
 17645  003338  51F2               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 17646  00333A  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 17647  00333C  E104               	bnz	i2l9640
 17648  00333E  51F3               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 17649  003340  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 17650  003342  B4D8               	btfsc	status,2,c
 17651  003344  D7F6               	goto	i2l223
 17652  003346                     i2l9640:
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 17656  003346  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 17657  00334A  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 17658  00334E  EC61  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 17659                           
 17660                           ;sw_timer.c: 128: oldVal++;
 17661  003352  0100               	movlb	0	; () banked
 17662  003354  4BF2               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 17663  003356  2BF3               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;sw_timer.c: 130: retVal = oldVal;
 17667  003358  C0F2  F0F0         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 17668  00335C  C0F3  F0F1         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;sw_timer.c: 132: return retVal;
 17672  003360  C0F0  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 17673  003364  C0F1  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 17674  003368  0012               	return	
 17675  00336A                     __end_ofi2_TMR_SwapTimer:
 17676                           	opt stack 0
 17677                           tosu	equ	0xFFF
 17678                           tosh	equ	0xFFE
 17679                           tosl	equ	0xFFD
 17680                           pclatu	equ	0xFFB
 17681                           pclath	equ	0xFFA
 17682                           tblptru	equ	0xFF8
 17683                           tblptrh	equ	0xFF7
 17684                           tblptrl	equ	0xFF6
 17685                           tablat	equ	0xFF5
 17686                           prodh	equ	0xFF4
 17687                           prodl	equ	0xFF3
 17688                           intcon	equ	0xFF2
 17689                           intcon2	equ	0xFF1
 17690                           intcon3	equ	0xFF0
 17691                           indf0	equ	0xFEF
 17692                           postinc0	equ	0xFEE
 17693                           plusw0	equ	0xFEB
 17694                           fsr0h	equ	0xFEA
 17695                           fsr0l	equ	0xFE9
 17696                           wreg	equ	0xFE8
 17697                           fsr1h	equ	0xFE2
 17698                           fsr1l	equ	0xFE1
 17699                           indf2	equ	0xFDF
 17700                           postinc2	equ	0xFDE
 17701                           postdec2	equ	0xFDD
 17702                           plusw2	equ	0xFDB
 17703                           fsr2h	equ	0xFDA
 17704                           fsr2l	equ	0xFD9
 17705                           status	equ	0xFD8
 17706                           
 17707 ;; *************** function i2_TMR1_WriteTimer *****************
 17708 ;; Defined at:
 17709 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 17710 ;; Parameters:    Size  Location     Type
 17711 ;;  timerVal        2    0[COMRAM] unsigned int 
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;		None
 17714 ;; Return value:  Size  Location     Type
 17715 ;;                  1    wreg      void 
 17716 ;; Registers used:
 17717 ;;		wreg, status,2
 17718 ;; Tracked objects:
 17719 ;;		On entry : 0/0
 17720 ;;		On exit  : 0/0
 17721 ;;		Unchanged: 0/0
 17722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17727 ;;Total ram usage:        2 bytes
 17728 ;; Hardware stack levels used:    1
 17729 ;; This function calls:
 17730 ;;		Nothing
 17731 ;; This function is called by:
 17732 ;;		_TMR1_ISR
 17733 ;;		i2_TMR_SwapTimer
 17734 ;; This function uses a non-reentrant model
 17735 ;;
 17736                           
 17737                           	psect	text105
 17738  0036C2                     __ptext105:
 17739                           	opt stack 0
 17740  0036C2                     i2_TMR1_WriteTimer:
 17741                           	opt stack 20
 17742                           
 17743                           ;tmr1.c: 123: if (T1CONbits.T1SYNC == 1)
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;incstack = 0
 17747  0036C2  A4CD               	btfss	4045,2,c	;volatile
 17748  0036C4  D007               	goto	i2l2426
 17749                           
 17750                           ;tmr1.c: 124: {
 17751                           ;tmr1.c: 126: T1CONbits.TMR1ON = 0;
 17752  0036C6  90CD               	bcf	4045,0,c	;volatile
 17753                           
 17754                           ;tmr1.c: 129: TMR1H = (timerVal >> 8);
 17755  0036C8  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 17756  0036CA  6ECF               	movwf	4047,c	;volatile
 17757                           
 17758                           ;tmr1.c: 130: TMR1L = (uint8_t) timerVal;
 17759  0036CC  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 17760                           
 17761                           ;tmr1.c: 133: T1CONbits.TMR1ON =1;
 17762  0036D0  80CD               	bsf	4045,0,c	;volatile
 17763                           
 17764                           ;tmr1.c: 134: }
 17765  0036D2  0012               	return	
 17766  0036D4                     i2l2426:
 17767                           
 17768                           ;tmr1.c: 135: else
 17769                           ;tmr1.c: 136: {
 17770                           ;tmr1.c: 138: TMR1H = (timerVal >> 8);
 17771  0036D4  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 17772  0036D6  6ECF               	movwf	4047,c	;volatile
 17773                           
 17774                           ;tmr1.c: 139: TMR1L = (uint8_t) timerVal;
 17775  0036D8  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 17776  0036DC  0012               	return	
 17777  0036DE                     __end_ofi2_TMR1_WriteTimer:
 17778                           	opt stack 0
 17779                           tosu	equ	0xFFF
 17780                           tosh	equ	0xFFE
 17781                           tosl	equ	0xFFD
 17782                           pclatu	equ	0xFFB
 17783                           pclath	equ	0xFFA
 17784                           tblptru	equ	0xFF8
 17785                           tblptrh	equ	0xFF7
 17786                           tblptrl	equ	0xFF6
 17787                           tablat	equ	0xFF5
 17788                           prodh	equ	0xFF4
 17789                           prodl	equ	0xFF3
 17790                           intcon	equ	0xFF2
 17791                           intcon2	equ	0xFF1
 17792                           intcon3	equ	0xFF0
 17793                           indf0	equ	0xFEF
 17794                           postinc0	equ	0xFEE
 17795                           plusw0	equ	0xFEB
 17796                           fsr0h	equ	0xFEA
 17797                           fsr0l	equ	0xFE9
 17798                           wreg	equ	0xFE8
 17799                           fsr1h	equ	0xFE2
 17800                           fsr1l	equ	0xFE1
 17801                           indf2	equ	0xFDF
 17802                           postinc2	equ	0xFDE
 17803                           postdec2	equ	0xFDD
 17804                           plusw2	equ	0xFDB
 17805                           fsr2h	equ	0xFDA
 17806                           fsr2l	equ	0xFD9
 17807                           status	equ	0xFD8
 17808                           
 17809 ;; *************** function i2_SwTimersInterrupt *****************
 17810 ;; Defined at:
 17811 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17812 ;; Parameters:    Size  Location     Type
 17813 ;;		None
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 17816 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 17817 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  4   32[COMRAM] unsigned long 
 17820 ;; Registers used:
 17821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17828 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17830 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17831 ;;Total ram usage:       17 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; Hardware stack levels required when called:    2
 17834 ;; This function calls:
 17835 ;;		i2_TMR_GetDeltaTime
 17836 ;; This function is called by:
 17837 ;;		_TMR_ISR_lora
 17838 ;; This function uses a non-reentrant model
 17839 ;;
 17840                           
 17841                           	psect	text106
 17842  001F84                     __ptext106:
 17843                           	opt stack 0
 17844  001F84                     i2_SwTimersInterrupt:
 17845                           	opt stack 16
 17846                           
 17847                           ;sw_timer.c: 289: uint8_t i;
 17848                           ;sw_timer.c: 290: uint32_t timeElapsed;
 17849                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 17850                           
 17851                           ;incstack = 0
 17852  001F84  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 17853  001F86  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 17854  001F88  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 17855  001F8A  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 17856                           
 17857                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 17858  001F8C  ECF0  F00B         	call	i2_TMR_GetDeltaTime	;wreg free
 17859  001F90  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 17860  001F94  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 17861  001F98  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 17862  001F9C  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 17863                           
 17864                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 17865  001FA0  0E00               	movlw	0
 17866  001FA2  6E31               	movwf	i2SwTimersInterrupt@i,c
 17867  001FA4  D061               	goto	i2l280
 17868  001FA6                     
 17869                           ;sw_timer.c: 298: {
 17870                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 17871  001FA6  5031               	movf	i2SwTimersInterrupt@i,w,c
 17872  001FA8  0D08               	mullw	8
 17873  001FAA  0E04               	movlw	4
 17874  001FAC  26F3               	addwf	prodl,f,c
 17875  001FAE  0E00               	movlw	0
 17876  001FB0  22F4               	addwfc	prodh,f,c
 17877  001FB2  0E00               	movlw	low _swTimers
 17878  001FB4  24F3               	addwf	prodl,w,c
 17879  001FB6  6ED9               	movwf	fsr2l,c
 17880  001FB8  0E03               	movlw	high _swTimers
 17881  001FBA  20F4               	addwfc	prodh,w,c
 17882  001FBC  6EDA               	movwf	fsr2h,c
 17883  001FBE  04DE               	decf	postinc2,w,c
 17884  001FC0  A4D8               	btfss	status,2,c
 17885  001FC2  D051               	goto	i2l285
 17886                           
 17887                           ;sw_timer.c: 302: {
 17888                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 17889  001FC4  5031               	movf	i2SwTimersInterrupt@i,w,c
 17890  001FC6  0D08               	mullw	8
 17891  001FC8  0E00               	movlw	low _swTimers
 17892  001FCA  24F3               	addwf	prodl,w,c
 17893  001FCC  6ED9               	movwf	fsr2l,c
 17894  001FCE  0E03               	movlw	high _swTimers
 17895  001FD0  20F4               	addwfc	prodh,w,c
 17896  001FD2  6EDA               	movwf	fsr2h,c
 17897  001FD4  50DE               	movf	postinc2,w,c
 17898  001FD6  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 17899  001FD8  50DE               	movf	postinc2,w,c
 17900  001FDA  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 17901  001FDC  50DE               	movf	postinc2,w,c
 17902  001FDE  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 17903  001FE0  50DE               	movf	postinc2,w,c
 17904  001FE2  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 17905  001FE4  A0D8               	btfss	status,0,c
 17906  001FE6  D00D               	goto	i2l283
 17907                           
 17908                           ;sw_timer.c: 304: {
 17909                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 17910  001FE8  5031               	movf	i2SwTimersInterrupt@i,w,c
 17911  001FEA  0D08               	mullw	8
 17912  001FEC  0E00               	movlw	low _swTimers
 17913  001FEE  24F3               	addwf	prodl,w,c
 17914  001FF0  6ED9               	movwf	fsr2l,c
 17915  001FF2  0E03               	movlw	high _swTimers
 17916  001FF4  20F4               	addwfc	prodh,w,c
 17917  001FF6  6EDA               	movwf	fsr2h,c
 17918  001FF8  6ADE               	clrf	postinc2,c
 17919  001FFA  6ADE               	clrf	postinc2,c
 17920  001FFC  6ADE               	clrf	postinc2,c
 17921  001FFE  6ADD               	clrf	postdec2,c
 17922                           
 17923                           ;sw_timer.c: 306: }
 17924  002000  D032               	goto	i2l285
 17925  002002                     i2l283:
 17926                           
 17927                           ;sw_timer.c: 307: else
 17928                           ;sw_timer.c: 308: {
 17929                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 17930  002002  5031               	movf	i2SwTimersInterrupt@i,w,c
 17931  002004  0D08               	mullw	8
 17932  002006  0E00               	movlw	low _swTimers
 17933  002008  24F3               	addwf	prodl,w,c
 17934  00200A  6ED9               	movwf	fsr2l,c
 17935  00200C  0E03               	movlw	high _swTimers
 17936  00200E  20F4               	addwfc	prodh,w,c
 17937  002010  6EDA               	movwf	fsr2h,c
 17938  002012  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 17939  002014  5EDE               	subwf	postinc2,f,c
 17940  002016  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 17941  002018  5ADE               	subwfb	postinc2,f,c
 17942  00201A  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 17943  00201C  5ADE               	subwfb	postinc2,f,c
 17944  00201E  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 17945  002020  5ADE               	subwfb	postinc2,f,c
 17946                           
 17947                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 17948  002022  5031               	movf	i2SwTimersInterrupt@i,w,c
 17949  002024  0D08               	mullw	8
 17950  002026  0E00               	movlw	low _swTimers
 17951  002028  24F3               	addwf	prodl,w,c
 17952  00202A  6ED9               	movwf	fsr2l,c
 17953  00202C  0E03               	movlw	high _swTimers
 17954  00202E  20F4               	addwfc	prodh,w,c
 17955  002030  6EDA               	movwf	fsr2h,c
 17956  002032  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 17957  002034  5CDE               	subwf	postinc2,w,c
 17958  002036  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 17959  002038  58DE               	subwfb	postinc2,w,c
 17960  00203A  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 17961  00203C  58DE               	subwfb	postinc2,w,c
 17962  00203E  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 17963  002040  58DE               	subwfb	postinc2,w,c
 17964  002042  B0D8               	btfsc	status,0,c
 17965  002044  D010               	goto	i2l285
 17966                           
 17967                           ;sw_timer.c: 313: {
 17968                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 17969  002046  5031               	movf	i2SwTimersInterrupt@i,w,c
 17970  002048  0D08               	mullw	8
 17971  00204A  0E00               	movlw	low _swTimers
 17972  00204C  24F3               	addwf	prodl,w,c
 17973  00204E  6ED9               	movwf	fsr2l,c
 17974  002050  0E03               	movlw	high _swTimers
 17975  002052  20F4               	addwfc	prodh,w,c
 17976  002054  6EDA               	movwf	fsr2h,c
 17977  002056  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 17978  00205A  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 17979  00205E  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 17980  002062  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 17981  002066                     i2l285:
 17982  002066  2A31               	incf	i2SwTimersInterrupt@i,f,c
 17983  002068                     i2l280:
 17984  002068  0100               	movlb	0	; () banked
 17985  00206A  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 17986  00206C  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 17987  00206E  A0D8               	btfss	status,0,c
 17988  002070  D79A               	goto	i2l281
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;sw_timer.c: 315: }
 17992                           ;sw_timer.c: 316: }
 17993                           ;sw_timer.c: 317: }
 17994                           ;sw_timer.c: 318: }
 17995                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 17996  002072  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 17997  002076  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 17998  00207A  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 17999  00207E  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 18000                           
 18001                           ; BSR set to: 0
 18002  002082  0012               	return		;funcret
 18003  002084                     __end_ofi2_SwTimersInterrupt:
 18004                           	opt stack 0
 18005                           tosu	equ	0xFFF
 18006                           tosh	equ	0xFFE
 18007                           tosl	equ	0xFFD
 18008                           pclatu	equ	0xFFB
 18009                           pclath	equ	0xFFA
 18010                           tblptru	equ	0xFF8
 18011                           tblptrh	equ	0xFF7
 18012                           tblptrl	equ	0xFF6
 18013                           tablat	equ	0xFF5
 18014                           prodh	equ	0xFF4
 18015                           prodl	equ	0xFF3
 18016                           intcon	equ	0xFF2
 18017                           intcon2	equ	0xFF1
 18018                           intcon3	equ	0xFF0
 18019                           indf0	equ	0xFEF
 18020                           postinc0	equ	0xFEE
 18021                           plusw0	equ	0xFEB
 18022                           fsr0h	equ	0xFEA
 18023                           fsr0l	equ	0xFE9
 18024                           wreg	equ	0xFE8
 18025                           fsr1h	equ	0xFE2
 18026                           fsr1l	equ	0xFE1
 18027                           indf2	equ	0xFDF
 18028                           postinc2	equ	0xFDE
 18029                           postdec2	equ	0xFDD
 18030                           plusw2	equ	0xFDB
 18031                           fsr2h	equ	0xFDA
 18032                           fsr2l	equ	0xFD9
 18033                           status	equ	0xFD8
 18034                           
 18035 ;; *************** function i2_TMR_GetDeltaTime *****************
 18036 ;; Defined at:
 18037 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;		None
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;		None
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  4    8[COMRAM] unsigned long 
 18044 ;; Registers used:
 18045 ;;		wreg, status,2, status,0, cstack
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18053 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18054 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18055 ;;Total ram usage:       24 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; Hardware stack levels required when called:    1
 18058 ;; This function calls:
 18059 ;;		i2_TMR1_ReadTimer
 18060 ;; This function is called by:
 18061 ;;		i2_SwTimersInterrupt
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text107
 18066  0017E0                     __ptext107:
 18067                           	opt stack 0
 18068  0017E0                     i2_TMR_GetDeltaTime:
 18069                           	opt stack 16
 18070                           
 18071                           ;sw_timer.c: 90: static uint32_t retVal;
 18072                           ;sw_timer.c: 91: static uint16_t tmrVal;
 18073                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;incstack = 0
 18077  0017E0  EC06  F01B         	call	i2_TMR1_ReadTimer	;wreg free
 18078  0017E4  C001  F0F4         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 18079  0017E8  C002  F0F5         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 18080                           
 18081                           ;sw_timer.c: 95: if (timerOverflow == 1)
 18082  0017EC  0100               	movlb	0	; () banked
 18083  0017EE  05FB               	decf	_timerOverflow& (0+255),w,b	;volatile
 18084  0017F0  A4D8               	btfss	status,2,c
 18085  0017F2  D065               	goto	i2l213
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;sw_timer.c: 96: {
 18089                           ;sw_timer.c: 97: timerOverflow = 0;
 18090  0017F4  0E00               	movlw	0
 18091  0017F6  6FFB               	movwf	_timerOverflow& (0+255),b	;volatile
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 18095  0017F8  C0E8  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 18096  0017FC  C0E9  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 18097  001800  C0EA  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 18098  001804  C0EB  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 18099  001808  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 18100  00180A  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 18101  00180C  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 18102  00180E  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 18103  001810  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 18104  001812  0E00               	movlw	0
 18105  001814  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 18106  001816  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 18107  001818  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 18108  00181A  51F6               	movf	_reloadVal& (0+255),w,b	;volatile
 18109  00181C  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 18110  00181E  51F7               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 18111  001820  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 18112  001822  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 18113  001824  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 18114  001826  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 18115  001828  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 18116  00182A  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 18117  00182C  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 18118  00182E  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 18119  001830  0E00               	movlw	0
 18120  001832  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 18121  001834  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 18122  001836  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 18123  001838  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 18124  00183A  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 18125  00183C  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 18126  00183E  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 18127  001840  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 18128  001842  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 18129  001844  0E00               	movlw	0
 18130  001846  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 18131  001848  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 18132  00184A  0E00               	movlw	0
 18133  00184C  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 18134  00184E  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 18135  001850  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 18136  001852  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 18137  001854  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 18138  001856  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 18139  001858  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 18140  00185A  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 18141  00185C  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 18142  00185E  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 18143  001860  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 18144  001862  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 18145  001864  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 18146  001866  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 18147  001868  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 18148  00186A  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 18149  00186C  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 18150  00186E  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 18151  001870  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 18152  001872  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 18153  001874  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 18154  001876  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 18155  001878  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 18156  00187A  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 18157  00187C  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 18158  00187E  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 18159  001880  0E00               	movlw	0
 18160  001882  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 18161  001884  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 18162  001886  0E00               	movlw	0
 18163  001888  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 18164  00188A  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 18165  00188C  0E01               	movlw	1
 18166  00188E  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 18167  001890  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 18168  001892  0E00               	movlw	0
 18169  001894  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 18170  001896  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 18174  001898  C0F4  F0E8         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 18175  00189C  C0F5  F0E9         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 18176  0018A0  6BEA               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
 18177  0018A2  6BEB               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;sw_timer.c: 100: ticksAdded = 0;
 18181  0018A4  0E00               	movlw	0
 18182  0018A6  6FEC               	movwf	_ticksAdded& (0+255),b	;volatile
 18183  0018A8  0E00               	movlw	0
 18184  0018AA  6FED               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
 18185  0018AC  0E00               	movlw	0
 18186  0018AE  6FEE               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
 18187  0018B0  0E00               	movlw	0
 18188  0018B2  6FEF               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;sw_timer.c: 101: reloadVal = 0;
 18192  0018B4  0E00               	movlw	0
 18193  0018B6  6FF7               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 18194  0018B8  0E00               	movlw	0
 18195  0018BA  6FF6               	movwf	_reloadVal& (0+255),b	;volatile
 18196                           
 18197                           ;sw_timer.c: 102: }
 18198  0018BC  D03D               	goto	i2l214
 18199  0018BE                     i2l213:
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;sw_timer.c: 103: else
 18203                           ;sw_timer.c: 104: {
 18204                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 18205                           
 18206                           ; BSR set to: 0
 18207  0018BE  C0E8  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 18208  0018C2  C0E9  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 18209  0018C6  C0EA  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 18210  0018CA  C0EB  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 18211  0018CE  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 18212  0018D0  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 18213  0018D2  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 18214  0018D4  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 18215  0018D6  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 18216  0018D8  0E00               	movlw	0
 18217  0018DA  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 18218  0018DC  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 18219  0018DE  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 18220  0018E0  C0F6  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 18221  0018E4  C0F7  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 18222  0018E8  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 18223  0018EA  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 18224  0018EC  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 18225  0018EE  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 18226  0018F0  51F4               	movf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 18227  0018F2  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 18228  0018F4  51F5               	movf	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 18229  0018F6  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 18230  0018F8  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 18231  0018FA  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 18232  0018FC  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 18233  0018FE  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 18234  001900  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 18235  001902  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 18236  001904  0E00               	movlw	0
 18237  001906  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 18238  001908  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 18239  00190A  0E00               	movlw	0
 18240  00190C  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 18241  00190E  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 18242  001910  51EC               	movf	_ticksAdded& (0+255),w,b	;volatile
 18243  001912  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 18244  001914  6FE4               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 18245  001916  51ED               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 18246  001918  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 18247  00191A  6FE5               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 18248  00191C  51EE               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 18249  00191E  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 18250  001920  6FE6               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 18251  001922  51EF               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 18252  001924  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 18253  001926  6FE7               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 18254                           
 18255                           ;sw_timer.c: 106: ticksAccounted += retVal;
 18256  001928  51E4               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 18257  00192A  27E8               	addwf	_ticksAccounted& (0+255),f,b	;volatile
 18258  00192C  51E5               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 18259  00192E  23E9               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
 18260  001930  51E6               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 18261  001932  23EA               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
 18262  001934  51E7               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 18263  001936  23EB               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
 18264  001938                     i2l214:
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;sw_timer.c: 107: }
 18268                           ;sw_timer.c: 109: return retVal;
 18269                           
 18270                           ; BSR set to: 0
 18271  001938  C0E4  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 18272  00193C  C0E5  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 18273  001940  C0E6  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 18274  001944  C0E7  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 18275  001948  0012               	return	
 18276  00194A                     __end_ofi2_TMR_GetDeltaTime:
 18277                           	opt stack 0
 18278                           tosu	equ	0xFFF
 18279                           tosh	equ	0xFFE
 18280                           tosl	equ	0xFFD
 18281                           pclatu	equ	0xFFB
 18282                           pclath	equ	0xFFA
 18283                           tblptru	equ	0xFF8
 18284                           tblptrh	equ	0xFF7
 18285                           tblptrl	equ	0xFF6
 18286                           tablat	equ	0xFF5
 18287                           prodh	equ	0xFF4
 18288                           prodl	equ	0xFF3
 18289                           intcon	equ	0xFF2
 18290                           intcon2	equ	0xFF1
 18291                           intcon3	equ	0xFF0
 18292                           indf0	equ	0xFEF
 18293                           postinc0	equ	0xFEE
 18294                           plusw0	equ	0xFEB
 18295                           fsr0h	equ	0xFEA
 18296                           fsr0l	equ	0xFE9
 18297                           wreg	equ	0xFE8
 18298                           fsr1h	equ	0xFE2
 18299                           fsr1l	equ	0xFE1
 18300                           indf2	equ	0xFDF
 18301                           postinc2	equ	0xFDE
 18302                           postdec2	equ	0xFDD
 18303                           plusw2	equ	0xFDB
 18304                           fsr2h	equ	0xFDA
 18305                           fsr2l	equ	0xFD9
 18306                           status	equ	0xFD8
 18307                           
 18308 ;; *************** function i2_TMR1_ReadTimer *****************
 18309 ;; Defined at:
 18310 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 18311 ;; Parameters:    Size  Location     Type
 18312 ;;		None
 18313 ;; Auto vars:     Size  Location     Type
 18314 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 18315 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 18316 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 18317 ;; Return value:  Size  Location     Type
 18318 ;;                  2    0[COMRAM] unsigned int 
 18319 ;; Registers used:
 18320 ;;		wreg, status,2
 18321 ;; Tracked objects:
 18322 ;;		On entry : 0/0
 18323 ;;		On exit  : 0/0
 18324 ;;		Unchanged: 0/0
 18325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18330 ;;Total ram usage:        8 bytes
 18331 ;; Hardware stack levels used:    1
 18332 ;; This function calls:
 18333 ;;		Nothing
 18334 ;; This function is called by:
 18335 ;;		i2_TMR_GetDeltaTime
 18336 ;;		i2_TMR_SwapTimer
 18337 ;; This function uses a non-reentrant model
 18338 ;;
 18339                           
 18340                           	psect	text108
 18341  00360C                     __ptext108:
 18342                           	opt stack 0
 18343  00360C                     i2_TMR1_ReadTimer:
 18344                           	opt stack 17
 18345                           
 18346                           ;tmr1.c: 107: uint16_t readVal;
 18347                           ;tmr1.c: 108: uint8_t readValHigh;
 18348                           ;tmr1.c: 109: uint8_t readValLow;
 18349                           ;tmr1.c: 111: T1CONbits.T1RD16 = 1;
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;incstack = 0
 18353  00360C  82CD               	bsf	4045,1,c	;volatile
 18354                           
 18355                           ;tmr1.c: 113: readValLow = TMR1L;
 18356  00360E  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 18357                           
 18358                           ;tmr1.c: 114: readValHigh = TMR1H;
 18359  003612  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 18360                           
 18361                           ;tmr1.c: 116: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 18362  003616  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 18363  003618  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 18364  00361A  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 18365  00361C  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 18366  00361E  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 18367                           
 18368                           ;tmr1.c: 118: return readVal;
 18369  003622  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 18370  003626  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 18371  00362A  0012               	return	
 18372  00362C                     __end_ofi2_TMR1_ReadTimer:
 18373                           	opt stack 0
 18374                           tosu	equ	0xFFF
 18375                           tosh	equ	0xFFE
 18376                           tosl	equ	0xFFD
 18377                           pclatu	equ	0xFFB
 18378                           pclath	equ	0xFFA
 18379                           tblptru	equ	0xFF8
 18380                           tblptrh	equ	0xFF7
 18381                           tblptrl	equ	0xFF6
 18382                           tablat	equ	0xFF5
 18383                           prodh	equ	0xFF4
 18384                           prodl	equ	0xFF3
 18385                           intcon	equ	0xFF2
 18386                           intcon2	equ	0xFF1
 18387                           intcon3	equ	0xFF0
 18388                           indf0	equ	0xFEF
 18389                           postinc0	equ	0xFEE
 18390                           plusw0	equ	0xFEB
 18391                           fsr0h	equ	0xFEA
 18392                           fsr0l	equ	0xFE9
 18393                           wreg	equ	0xFE8
 18394                           fsr1h	equ	0xFE2
 18395                           fsr1l	equ	0xFE1
 18396                           indf2	equ	0xFDF
 18397                           postinc2	equ	0xFDE
 18398                           postdec2	equ	0xFDD
 18399                           plusw2	equ	0xFDB
 18400                           fsr2h	equ	0xFDA
 18401                           fsr2l	equ	0xFD9
 18402                           status	equ	0xFD8
 18403                           
 18404 ;; *************** function _PIN_MANAGER_IOC *****************
 18405 ;; Defined at:
 18406 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
 18407 ;; Parameters:    Size  Location     Type
 18408 ;;		None
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;		None
 18411 ;; Return value:  Size  Location     Type
 18412 ;;                  1    wreg      void 
 18413 ;; Registers used:
 18414 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18415 ;; Tracked objects:
 18416 ;;		On entry : 0/0
 18417 ;;		On exit  : 0/0
 18418 ;;		Unchanged: 0/0
 18419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18424 ;;Total ram usage:        0 bytes
 18425 ;; Hardware stack levels used:    1
 18426 ;; Hardware stack levels required when called:    2
 18427 ;; This function calls:
 18428 ;;		_IOCB4_ISR
 18429 ;; This function is called by:
 18430 ;;		_INTERRUPT_InterruptManager
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           	psect	text109
 18435  00384C                     __ptext109:
 18436                           	opt stack 0
 18437  00384C                     _PIN_MANAGER_IOC:
 18438                           	opt stack 19
 18439                           
 18440                           ;pin_manager.c: 113: if(IOCBbits.IOCB4 == 1)
 18441                           
 18442                           ;incstack = 0
 18443  00384C  B862               	btfsc	3938,4,c	;volatile
 18444                           
 18445                           ;pin_manager.c: 114: {
 18446                           ;pin_manager.c: 115: IOCB4_ISR();
 18447  00384E  EC34  F01B         	call	_IOCB4_ISR	;wreg free
 18448                           
 18449                           ;pin_manager.c: 116: }
 18450                           ;pin_manager.c: 118: INTCONbits.RBIF = 0;
 18451  003852  90F2               	bcf	intcon,0,c	;volatile
 18452  003854  0012               	return		;funcret
 18453  003856                     __end_of_PIN_MANAGER_IOC:
 18454                           	opt stack 0
 18455                           tosu	equ	0xFFF
 18456                           tosh	equ	0xFFE
 18457                           tosl	equ	0xFFD
 18458                           pclatu	equ	0xFFB
 18459                           pclath	equ	0xFFA
 18460                           tblptru	equ	0xFF8
 18461                           tblptrh	equ	0xFF7
 18462                           tblptrl	equ	0xFF6
 18463                           tablat	equ	0xFF5
 18464                           prodh	equ	0xFF4
 18465                           prodl	equ	0xFF3
 18466                           intcon	equ	0xFF2
 18467                           intcon2	equ	0xFF1
 18468                           intcon3	equ	0xFF0
 18469                           indf0	equ	0xFEF
 18470                           postinc0	equ	0xFEE
 18471                           plusw0	equ	0xFEB
 18472                           fsr0h	equ	0xFEA
 18473                           fsr0l	equ	0xFE9
 18474                           wreg	equ	0xFE8
 18475                           fsr1h	equ	0xFE2
 18476                           fsr1l	equ	0xFE1
 18477                           indf2	equ	0xFDF
 18478                           postinc2	equ	0xFDE
 18479                           postdec2	equ	0xFDD
 18480                           plusw2	equ	0xFDB
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8
 18484                           
 18485 ;; *************** function _IOCB4_ISR *****************
 18486 ;; Defined at:
 18487 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;		None
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;		None
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  1    wreg      void 
 18494 ;; Registers used:
 18495 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18496 ;; Tracked objects:
 18497 ;;		On entry : 0/0
 18498 ;;		On exit  : 0/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18505 ;;Total ram usage:        0 bytes
 18506 ;; Hardware stack levels used:    1
 18507 ;; Hardware stack levels required when called:    1
 18508 ;; This function calls:
 18509 ;;		Absolute function
 18510 ;;		_DIO2_ISR_Lora
 18511 ;;		_IOCB4_DefaultInterruptHandler
 18512 ;; This function is called by:
 18513 ;;		_PIN_MANAGER_IOC
 18514 ;; This function uses a non-reentrant model
 18515 ;;
 18516                           
 18517                           	psect	text110
 18518  003668                     __ptext110:
 18519                           	opt stack 0
 18520  003668                     _IOCB4_ISR:
 18521                           	opt stack 19
 18522                           
 18523                           ;pin_manager.c: 129: if(IOCB4_InterruptHandler)
 18524                           
 18525                           ;incstack = 0
 18526  003668  504C               	movf	_IOCB4_InterruptHandler,w,c
 18527  00366A  104D               	iorwf	_IOCB4_InterruptHandler+1,w,c
 18528  00366C  B4D8               	btfsc	status,2,c
 18529  00366E  0012               	return	
 18530                           
 18531                           ;pin_manager.c: 130: {
 18532                           ;pin_manager.c: 131: IOCB4_InterruptHandler();
 18533  003670  D801               	call	i2u529_48
 18534  003672  0012               	return	
 18535  003674                     i2u529_48:
 18536  003674  0005               	push	
 18537  003676  6EFA               	movwf	pclath,c
 18538  003678  504C               	movf	_IOCB4_InterruptHandler,w,c
 18539  00367A  6EFD               	movwf	tosl,c
 18540  00367C  504D               	movf	_IOCB4_InterruptHandler+1,w,c
 18541  00367E  6EFE               	movwf	tosh,c
 18542  003680  6AFF               	clrf	tosu,c
 18543  003682  50FA               	movf	pclath,w,c
 18544  003684  0012               	return		;indir
 18545  003686                     __end_of_IOCB4_ISR:
 18546                           	opt stack 0
 18547                           tosu	equ	0xFFF
 18548                           tosh	equ	0xFFE
 18549                           tosl	equ	0xFFD
 18550                           pclatu	equ	0xFFB
 18551                           pclath	equ	0xFFA
 18552                           tblptru	equ	0xFF8
 18553                           tblptrh	equ	0xFF7
 18554                           tblptrl	equ	0xFF6
 18555                           tablat	equ	0xFF5
 18556                           prodh	equ	0xFF4
 18557                           prodl	equ	0xFF3
 18558                           intcon	equ	0xFF2
 18559                           intcon2	equ	0xFF1
 18560                           intcon3	equ	0xFF0
 18561                           indf0	equ	0xFEF
 18562                           postinc0	equ	0xFEE
 18563                           plusw0	equ	0xFEB
 18564                           fsr0h	equ	0xFEA
 18565                           fsr0l	equ	0xFE9
 18566                           wreg	equ	0xFE8
 18567                           fsr1h	equ	0xFE2
 18568                           fsr1l	equ	0xFE1
 18569                           indf2	equ	0xFDF
 18570                           postinc2	equ	0xFDE
 18571                           postdec2	equ	0xFDD
 18572                           plusw2	equ	0xFDB
 18573                           fsr2h	equ	0xFDA
 18574                           fsr2l	equ	0xFD9
 18575                           status	equ	0xFD8
 18576                           
 18577 ;; *************** function _DIO2_ISR_Lora *****************
 18578 ;; Defined at:
 18579 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 18580 ;; Parameters:    Size  Location     Type
 18581 ;;		None
 18582 ;; Auto vars:     Size  Location     Type
 18583 ;;		None
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      void 
 18586 ;; Registers used:
 18587 ;;		status,2, status,0
 18588 ;; Tracked objects:
 18589 ;;		On entry : 0/0
 18590 ;;		On exit  : 0/0
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18597 ;;Total ram usage:        0 bytes
 18598 ;; Hardware stack levels used:    1
 18599 ;; This function calls:
 18600 ;;		Nothing
 18601 ;; This function is called by:
 18602 ;;		_DIO2_ISR_Lora_Init
 18603 ;;		_IOCB4_ISR
 18604 ;; This function uses a non-reentrant model
 18605 ;;
 18606                           
 18607                           	psect	text111
 18608  00388A                     __ptext111:
 18609                           	opt stack 0
 18610  00388A                     _DIO2_ISR_Lora:
 18611                           	opt stack 19
 18612                           
 18613                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 18614                           
 18615                           ;incstack = 0
 18616  00388A  8457               	bsf	_dioStatus,2,c	;volatile
 18617  00388C  0012               	return		;funcret
 18618  00388E                     __end_of_DIO2_ISR_Lora:
 18619                           	opt stack 0
 18620                           tosu	equ	0xFFF
 18621                           tosh	equ	0xFFE
 18622                           tosl	equ	0xFFD
 18623                           pclatu	equ	0xFFB
 18624                           pclath	equ	0xFFA
 18625                           tblptru	equ	0xFF8
 18626                           tblptrh	equ	0xFF7
 18627                           tblptrl	equ	0xFF6
 18628                           tablat	equ	0xFF5
 18629                           prodh	equ	0xFF4
 18630                           prodl	equ	0xFF3
 18631                           intcon	equ	0xFF2
 18632                           intcon2	equ	0xFF1
 18633                           intcon3	equ	0xFF0
 18634                           indf0	equ	0xFEF
 18635                           postinc0	equ	0xFEE
 18636                           plusw0	equ	0xFEB
 18637                           fsr0h	equ	0xFEA
 18638                           fsr0l	equ	0xFE9
 18639                           wreg	equ	0xFE8
 18640                           fsr1h	equ	0xFE2
 18641                           fsr1l	equ	0xFE1
 18642                           indf2	equ	0xFDF
 18643                           postinc2	equ	0xFDE
 18644                           postdec2	equ	0xFDD
 18645                           plusw2	equ	0xFDB
 18646                           fsr2h	equ	0xFDA
 18647                           fsr2l	equ	0xFD9
 18648                           status	equ	0xFD8
 18649                           
 18650 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18651 ;; Defined at:
 18652 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;		None
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;		None
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  1    wreg      void 
 18659 ;; Registers used:
 18660 ;;		None
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;Total ram usage:        0 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; This function calls:
 18673 ;;		Nothing
 18674 ;; This function is called by:
 18675 ;;		_PIN_MANAGER_Initialize
 18676 ;;		_IOCB4_ISR
 18677 ;; This function uses a non-reentrant model
 18678 ;;
 18679                           
 18680                           	psect	text112
 18681  00389E                     __ptext112:
 18682                           	opt stack 0
 18683  00389E                     _IOCB4_DefaultInterruptHandler:
 18684                           	opt stack 19
 18685                           
 18686                           ;incstack = 0
 18687  00389E  0012               	return		;funcret
 18688  0038A0                     __end_of_IOCB4_DefaultInterruptHandler:
 18689                           	opt stack 0
 18690                           tosu	equ	0xFFF
 18691                           tosh	equ	0xFFE
 18692                           tosl	equ	0xFFD
 18693                           pclatu	equ	0xFFB
 18694                           pclath	equ	0xFFA
 18695                           tblptru	equ	0xFF8
 18696                           tblptrh	equ	0xFF7
 18697                           tblptrl	equ	0xFF6
 18698                           tablat	equ	0xFF5
 18699                           prodh	equ	0xFF4
 18700                           prodl	equ	0xFF3
 18701                           intcon	equ	0xFF2
 18702                           intcon2	equ	0xFF1
 18703                           intcon3	equ	0xFF0
 18704                           indf0	equ	0xFEF
 18705                           postinc0	equ	0xFEE
 18706                           plusw0	equ	0xFEB
 18707                           fsr0h	equ	0xFEA
 18708                           fsr0l	equ	0xFE9
 18709                           wreg	equ	0xFE8
 18710                           fsr1h	equ	0xFE2
 18711                           fsr1l	equ	0xFE1
 18712                           indf2	equ	0xFDF
 18713                           postinc2	equ	0xFDE
 18714                           postdec2	equ	0xFDD
 18715                           plusw2	equ	0xFDB
 18716                           fsr2h	equ	0xFDA
 18717                           fsr2l	equ	0xFD9
 18718                           status	equ	0xFD8
 18719                           
 18720 ;; *************** function _INT2_ISR *****************
 18721 ;; Defined at:
 18722 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;		None
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;		None
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      void 
 18729 ;; Registers used:
 18730 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18740 ;;Total ram usage:        0 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; Hardware stack levels required when called:    2
 18743 ;; This function calls:
 18744 ;;		_INT2_CallBack
 18745 ;; This function is called by:
 18746 ;;		_INTERRUPT_InterruptManager
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750                           	psect	text113
 18751  00385E                     __ptext113:
 18752                           	opt stack 0
 18753  00385E                     _INT2_ISR:
 18754                           	opt stack 19
 18755                           
 18756                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 18757                           
 18758                           ;incstack = 0
 18759  00385E  92F0               	bcf	intcon3,1,c	;volatile
 18760                           
 18761                           ;ext_int.c: 64: INT2_CallBack();
 18762  003860  EC43  F01B         	call	_INT2_CallBack	;wreg free
 18763  003864  0012               	return		;funcret
 18764  003866                     __end_of_INT2_ISR:
 18765                           	opt stack 0
 18766                           tosu	equ	0xFFF
 18767                           tosh	equ	0xFFE
 18768                           tosl	equ	0xFFD
 18769                           pclatu	equ	0xFFB
 18770                           pclath	equ	0xFFA
 18771                           tblptru	equ	0xFF8
 18772                           tblptrh	equ	0xFF7
 18773                           tblptrl	equ	0xFF6
 18774                           tablat	equ	0xFF5
 18775                           prodh	equ	0xFF4
 18776                           prodl	equ	0xFF3
 18777                           intcon	equ	0xFF2
 18778                           intcon2	equ	0xFF1
 18779                           intcon3	equ	0xFF0
 18780                           indf0	equ	0xFEF
 18781                           postinc0	equ	0xFEE
 18782                           plusw0	equ	0xFEB
 18783                           fsr0h	equ	0xFEA
 18784                           fsr0l	equ	0xFE9
 18785                           wreg	equ	0xFE8
 18786                           fsr1h	equ	0xFE2
 18787                           fsr1l	equ	0xFE1
 18788                           indf2	equ	0xFDF
 18789                           postinc2	equ	0xFDE
 18790                           postdec2	equ	0xFDD
 18791                           plusw2	equ	0xFDB
 18792                           fsr2h	equ	0xFDA
 18793                           fsr2l	equ	0xFD9
 18794                           status	equ	0xFD8
 18795                           
 18796 ;; *************** function _INT2_CallBack *****************
 18797 ;; Defined at:
 18798 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 18799 ;; Parameters:    Size  Location     Type
 18800 ;;		None
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;		None
 18803 ;; Return value:  Size  Location     Type
 18804 ;;                  1    wreg      void 
 18805 ;; Registers used:
 18806 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;Total ram usage:        0 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:    1
 18819 ;; This function calls:
 18820 ;;		Absolute function
 18821 ;;		_DIO1_ISR_Lora
 18822 ;;		_INT2_DefaultInterruptHandler
 18823 ;; This function is called by:
 18824 ;;		_INT2_ISR
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828                           	psect	text114
 18829  003686                     __ptext114:
 18830                           	opt stack 0
 18831  003686                     _INT2_CallBack:
 18832                           	opt stack 19
 18833                           
 18834                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 18835                           
 18836                           ;incstack = 0
 18837  003686  504E               	movf	_INT2_InterruptHandler,w,c
 18838  003688  104F               	iorwf	_INT2_InterruptHandler+1,w,c
 18839  00368A  B4D8               	btfsc	status,2,c
 18840  00368C  0012               	return	
 18841                           
 18842                           ;ext_int.c: 72: {
 18843                           ;ext_int.c: 73: INT2_InterruptHandler();
 18844  00368E  D801               	call	i2u527_48
 18845  003690  0012               	return	
 18846  003692                     i2u527_48:
 18847  003692  0005               	push	
 18848  003694  6EFA               	movwf	pclath,c
 18849  003696  504E               	movf	_INT2_InterruptHandler,w,c
 18850  003698  6EFD               	movwf	tosl,c
 18851  00369A  504F               	movf	_INT2_InterruptHandler+1,w,c
 18852  00369C  6EFE               	movwf	tosh,c
 18853  00369E  6AFF               	clrf	tosu,c
 18854  0036A0  50FA               	movf	pclath,w,c
 18855  0036A2  0012               	return		;indir
 18856  0036A4                     __end_of_INT2_CallBack:
 18857                           	opt stack 0
 18858                           tosu	equ	0xFFF
 18859                           tosh	equ	0xFFE
 18860                           tosl	equ	0xFFD
 18861                           pclatu	equ	0xFFB
 18862                           pclath	equ	0xFFA
 18863                           tblptru	equ	0xFF8
 18864                           tblptrh	equ	0xFF7
 18865                           tblptrl	equ	0xFF6
 18866                           tablat	equ	0xFF5
 18867                           prodh	equ	0xFF4
 18868                           prodl	equ	0xFF3
 18869                           intcon	equ	0xFF2
 18870                           intcon2	equ	0xFF1
 18871                           intcon3	equ	0xFF0
 18872                           indf0	equ	0xFEF
 18873                           postinc0	equ	0xFEE
 18874                           plusw0	equ	0xFEB
 18875                           fsr0h	equ	0xFEA
 18876                           fsr0l	equ	0xFE9
 18877                           wreg	equ	0xFE8
 18878                           fsr1h	equ	0xFE2
 18879                           fsr1l	equ	0xFE1
 18880                           indf2	equ	0xFDF
 18881                           postinc2	equ	0xFDE
 18882                           postdec2	equ	0xFDD
 18883                           plusw2	equ	0xFDB
 18884                           fsr2h	equ	0xFDA
 18885                           fsr2l	equ	0xFD9
 18886                           status	equ	0xFD8
 18887                           
 18888 ;; *************** function _DIO1_ISR_Lora *****************
 18889 ;; Defined at:
 18890 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 18891 ;; Parameters:    Size  Location     Type
 18892 ;;		None
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;		None
 18895 ;; Return value:  Size  Location     Type
 18896 ;;                  1    wreg      void 
 18897 ;; Registers used:
 18898 ;;		status,2, status,0
 18899 ;; Tracked objects:
 18900 ;;		On entry : 0/0
 18901 ;;		On exit  : 0/0
 18902 ;;		Unchanged: 0/0
 18903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18908 ;;Total ram usage:        0 bytes
 18909 ;; Hardware stack levels used:    1
 18910 ;; This function calls:
 18911 ;;		Nothing
 18912 ;; This function is called by:
 18913 ;;		_DIO1_ISR_Lora_Init
 18914 ;;		_INT2_CallBack
 18915 ;; This function uses a non-reentrant model
 18916 ;;
 18917                           
 18918                           	psect	text115
 18919  00388E                     __ptext115:
 18920                           	opt stack 0
 18921  00388E                     _DIO1_ISR_Lora:
 18922                           	opt stack 19
 18923                           
 18924                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 18925                           
 18926                           ;incstack = 0
 18927  00388E  8257               	bsf	_dioStatus,1,c	;volatile
 18928  003890  0012               	return		;funcret
 18929  003892                     __end_of_DIO1_ISR_Lora:
 18930                           	opt stack 0
 18931                           tosu	equ	0xFFF
 18932                           tosh	equ	0xFFE
 18933                           tosl	equ	0xFFD
 18934                           pclatu	equ	0xFFB
 18935                           pclath	equ	0xFFA
 18936                           tblptru	equ	0xFF8
 18937                           tblptrh	equ	0xFF7
 18938                           tblptrl	equ	0xFF6
 18939                           tablat	equ	0xFF5
 18940                           prodh	equ	0xFF4
 18941                           prodl	equ	0xFF3
 18942                           intcon	equ	0xFF2
 18943                           intcon2	equ	0xFF1
 18944                           intcon3	equ	0xFF0
 18945                           indf0	equ	0xFEF
 18946                           postinc0	equ	0xFEE
 18947                           plusw0	equ	0xFEB
 18948                           fsr0h	equ	0xFEA
 18949                           fsr0l	equ	0xFE9
 18950                           wreg	equ	0xFE8
 18951                           fsr1h	equ	0xFE2
 18952                           fsr1l	equ	0xFE1
 18953                           indf2	equ	0xFDF
 18954                           postinc2	equ	0xFDE
 18955                           postdec2	equ	0xFDD
 18956                           plusw2	equ	0xFDB
 18957                           fsr2h	equ	0xFDA
 18958                           fsr2l	equ	0xFD9
 18959                           status	equ	0xFD8
 18960                           
 18961 ;; *************** function _INT2_DefaultInterruptHandler *****************
 18962 ;; Defined at:
 18963 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 18964 ;; Parameters:    Size  Location     Type
 18965 ;;		None
 18966 ;; Auto vars:     Size  Location     Type
 18967 ;;		None
 18968 ;; Return value:  Size  Location     Type
 18969 ;;                  1    wreg      void 
 18970 ;; Registers used:
 18971 ;;		None
 18972 ;; Tracked objects:
 18973 ;;		On entry : 0/0
 18974 ;;		On exit  : 0/0
 18975 ;;		Unchanged: 0/0
 18976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18981 ;;Total ram usage:        0 bytes
 18982 ;; Hardware stack levels used:    1
 18983 ;; This function calls:
 18984 ;;		Nothing
 18985 ;; This function is called by:
 18986 ;;		_EXT_INT_Initialize
 18987 ;;		_INT2_CallBack
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text116
 18992  0038A0                     __ptext116:
 18993                           	opt stack 0
 18994  0038A0                     _INT2_DefaultInterruptHandler:
 18995                           	opt stack 19
 18996                           
 18997                           ;incstack = 0
 18998  0038A0  0012               	return		;funcret
 18999  0038A2                     __end_of_INT2_DefaultInterruptHandler:
 19000                           	opt stack 0
 19001                           tosu	equ	0xFFF
 19002                           tosh	equ	0xFFE
 19003                           tosl	equ	0xFFD
 19004                           pclatu	equ	0xFFB
 19005                           pclath	equ	0xFFA
 19006                           tblptru	equ	0xFF8
 19007                           tblptrh	equ	0xFF7
 19008                           tblptrl	equ	0xFF6
 19009                           tablat	equ	0xFF5
 19010                           prodh	equ	0xFF4
 19011                           prodl	equ	0xFF3
 19012                           intcon	equ	0xFF2
 19013                           intcon2	equ	0xFF1
 19014                           intcon3	equ	0xFF0
 19015                           indf0	equ	0xFEF
 19016                           postinc0	equ	0xFEE
 19017                           plusw0	equ	0xFEB
 19018                           fsr0h	equ	0xFEA
 19019                           fsr0l	equ	0xFE9
 19020                           wreg	equ	0xFE8
 19021                           fsr1h	equ	0xFE2
 19022                           fsr1l	equ	0xFE1
 19023                           indf2	equ	0xFDF
 19024                           postinc2	equ	0xFDE
 19025                           postdec2	equ	0xFDD
 19026                           plusw2	equ	0xFDB
 19027                           fsr2h	equ	0xFDA
 19028                           fsr2l	equ	0xFD9
 19029                           status	equ	0xFD8
 19030                           
 19031 ;; *************** function _INT1_ISR *****************
 19032 ;; Defined at:
 19033 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 19034 ;; Parameters:    Size  Location     Type
 19035 ;;		None
 19036 ;; Auto vars:     Size  Location     Type
 19037 ;;		None
 19038 ;; Return value:  Size  Location     Type
 19039 ;;                  1    wreg      void 
 19040 ;; Registers used:
 19041 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19042 ;; Tracked objects:
 19043 ;;		On entry : 0/0
 19044 ;;		On exit  : 0/0
 19045 ;;		Unchanged: 0/0
 19046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19051 ;;Total ram usage:        0 bytes
 19052 ;; Hardware stack levels used:    1
 19053 ;; Hardware stack levels required when called:    2
 19054 ;; This function calls:
 19055 ;;		_INT1_CallBack
 19056 ;; This function is called by:
 19057 ;;		_INTERRUPT_InterruptManager
 19058 ;; This function uses a non-reentrant model
 19059 ;;
 19060                           
 19061                           	psect	text117
 19062  003866                     __ptext117:
 19063                           	opt stack 0
 19064  003866                     _INT1_ISR:
 19065                           	opt stack 19
 19066                           
 19067                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 19068                           
 19069                           ;incstack = 0
 19070  003866  90F0               	bcf	intcon3,0,c	;volatile
 19071                           
 19072                           ;ext_int.c: 38: INT1_CallBack();
 19073  003868  EC52  F01B         	call	_INT1_CallBack	;wreg free
 19074  00386C  0012               	return		;funcret
 19075  00386E                     __end_of_INT1_ISR:
 19076                           	opt stack 0
 19077                           tosu	equ	0xFFF
 19078                           tosh	equ	0xFFE
 19079                           tosl	equ	0xFFD
 19080                           pclatu	equ	0xFFB
 19081                           pclath	equ	0xFFA
 19082                           tblptru	equ	0xFF8
 19083                           tblptrh	equ	0xFF7
 19084                           tblptrl	equ	0xFF6
 19085                           tablat	equ	0xFF5
 19086                           prodh	equ	0xFF4
 19087                           prodl	equ	0xFF3
 19088                           intcon	equ	0xFF2
 19089                           intcon2	equ	0xFF1
 19090                           intcon3	equ	0xFF0
 19091                           indf0	equ	0xFEF
 19092                           postinc0	equ	0xFEE
 19093                           plusw0	equ	0xFEB
 19094                           fsr0h	equ	0xFEA
 19095                           fsr0l	equ	0xFE9
 19096                           wreg	equ	0xFE8
 19097                           fsr1h	equ	0xFE2
 19098                           fsr1l	equ	0xFE1
 19099                           indf2	equ	0xFDF
 19100                           postinc2	equ	0xFDE
 19101                           postdec2	equ	0xFDD
 19102                           plusw2	equ	0xFDB
 19103                           fsr2h	equ	0xFDA
 19104                           fsr2l	equ	0xFD9
 19105                           status	equ	0xFD8
 19106                           
 19107 ;; *************** function _INT1_CallBack *****************
 19108 ;; Defined at:
 19109 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 19110 ;; Parameters:    Size  Location     Type
 19111 ;;		None
 19112 ;; Auto vars:     Size  Location     Type
 19113 ;;		None
 19114 ;; Return value:  Size  Location     Type
 19115 ;;                  1    wreg      void 
 19116 ;; Registers used:
 19117 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19118 ;; Tracked objects:
 19119 ;;		On entry : 0/0
 19120 ;;		On exit  : 0/0
 19121 ;;		Unchanged: 0/0
 19122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19127 ;;Total ram usage:        0 bytes
 19128 ;; Hardware stack levels used:    1
 19129 ;; Hardware stack levels required when called:    1
 19130 ;; This function calls:
 19131 ;;		Absolute function
 19132 ;;		_DIO0_ISR_Lora
 19133 ;;		_INT1_DefaultInterruptHandler
 19134 ;; This function is called by:
 19135 ;;		_INT1_ISR
 19136 ;; This function uses a non-reentrant model
 19137 ;;
 19138                           
 19139                           	psect	text118
 19140  0036A4                     __ptext118:
 19141                           	opt stack 0
 19142  0036A4                     _INT1_CallBack:
 19143                           	opt stack 19
 19144                           
 19145                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 19146                           
 19147                           ;incstack = 0
 19148  0036A4  5050               	movf	_INT1_InterruptHandler,w,c
 19149  0036A6  1051               	iorwf	_INT1_InterruptHandler+1,w,c
 19150  0036A8  B4D8               	btfsc	status,2,c
 19151  0036AA  0012               	return	
 19152                           
 19153                           ;ext_int.c: 46: {
 19154                           ;ext_int.c: 47: INT1_InterruptHandler();
 19155  0036AC  D801               	call	i2u525_48
 19156  0036AE  0012               	return	
 19157  0036B0                     i2u525_48:
 19158  0036B0  0005               	push	
 19159  0036B2  6EFA               	movwf	pclath,c
 19160  0036B4  5050               	movf	_INT1_InterruptHandler,w,c
 19161  0036B6  6EFD               	movwf	tosl,c
 19162  0036B8  5051               	movf	_INT1_InterruptHandler+1,w,c
 19163  0036BA  6EFE               	movwf	tosh,c
 19164  0036BC  6AFF               	clrf	tosu,c
 19165  0036BE  50FA               	movf	pclath,w,c
 19166  0036C0  0012               	return		;indir
 19167  0036C2                     __end_of_INT1_CallBack:
 19168                           	opt stack 0
 19169                           tosu	equ	0xFFF
 19170                           tosh	equ	0xFFE
 19171                           tosl	equ	0xFFD
 19172                           pclatu	equ	0xFFB
 19173                           pclath	equ	0xFFA
 19174                           tblptru	equ	0xFF8
 19175                           tblptrh	equ	0xFF7
 19176                           tblptrl	equ	0xFF6
 19177                           tablat	equ	0xFF5
 19178                           prodh	equ	0xFF4
 19179                           prodl	equ	0xFF3
 19180                           intcon	equ	0xFF2
 19181                           intcon2	equ	0xFF1
 19182                           intcon3	equ	0xFF0
 19183                           indf0	equ	0xFEF
 19184                           postinc0	equ	0xFEE
 19185                           plusw0	equ	0xFEB
 19186                           fsr0h	equ	0xFEA
 19187                           fsr0l	equ	0xFE9
 19188                           wreg	equ	0xFE8
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           postdec2	equ	0xFDD
 19194                           plusw2	equ	0xFDB
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199 ;; *************** function _DIO0_ISR_Lora *****************
 19200 ;; Defined at:
 19201 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;		None
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;		None
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      void 
 19208 ;; Registers used:
 19209 ;;		status,2, status,0
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19219 ;;Total ram usage:        0 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; This function calls:
 19222 ;;		Nothing
 19223 ;; This function is called by:
 19224 ;;		_DIO0_ISR_Lora_Init
 19225 ;;		_INT1_CallBack
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text119
 19230  003892                     __ptext119:
 19231                           	opt stack 0
 19232  003892                     _DIO0_ISR_Lora:
 19233                           	opt stack 19
 19234                           
 19235                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 19236                           
 19237                           ;incstack = 0
 19238  003892  8057               	bsf	_dioStatus,0,c	;volatile
 19239  003894  0012               	return		;funcret
 19240  003896                     __end_of_DIO0_ISR_Lora:
 19241                           	opt stack 0
 19242                           tosu	equ	0xFFF
 19243                           tosh	equ	0xFFE
 19244                           tosl	equ	0xFFD
 19245                           pclatu	equ	0xFFB
 19246                           pclath	equ	0xFFA
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           intcon	equ	0xFF2
 19254                           intcon2	equ	0xFF1
 19255                           intcon3	equ	0xFF0
 19256                           indf0	equ	0xFEF
 19257                           postinc0	equ	0xFEE
 19258                           plusw0	equ	0xFEB
 19259                           fsr0h	equ	0xFEA
 19260                           fsr0l	equ	0xFE9
 19261                           wreg	equ	0xFE8
 19262                           fsr1h	equ	0xFE2
 19263                           fsr1l	equ	0xFE1
 19264                           indf2	equ	0xFDF
 19265                           postinc2	equ	0xFDE
 19266                           postdec2	equ	0xFDD
 19267                           plusw2	equ	0xFDB
 19268                           fsr2h	equ	0xFDA
 19269                           fsr2l	equ	0xFD9
 19270                           status	equ	0xFD8
 19271                           
 19272 ;; *************** function _INT1_DefaultInterruptHandler *****************
 19273 ;; Defined at:
 19274 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 19275 ;; Parameters:    Size  Location     Type
 19276 ;;		None
 19277 ;; Auto vars:     Size  Location     Type
 19278 ;;		None
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  1    wreg      void 
 19281 ;; Registers used:
 19282 ;;		None
 19283 ;; Tracked objects:
 19284 ;;		On entry : 0/0
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19292 ;;Total ram usage:        0 bytes
 19293 ;; Hardware stack levels used:    1
 19294 ;; This function calls:
 19295 ;;		Nothing
 19296 ;; This function is called by:
 19297 ;;		_EXT_INT_Initialize
 19298 ;;		_INT1_CallBack
 19299 ;; This function uses a non-reentrant model
 19300 ;;
 19301                           
 19302                           	psect	text120
 19303  0038A2                     __ptext120:
 19304                           	opt stack 0
 19305  0038A2                     _INT1_DefaultInterruptHandler:
 19306                           	opt stack 19
 19307                           
 19308                           ;incstack = 0
 19309  0038A2  0012               	return		;funcret
 19310  0038A4                     __end_of_INT1_DefaultInterruptHandler:
 19311                           	opt stack 0
 19312                           tosu	equ	0xFFF
 19313                           tosh	equ	0xFFE
 19314                           tosl	equ	0xFFD
 19315                           pclatu	equ	0xFFB
 19316                           pclath	equ	0xFFA
 19317                           tblptru	equ	0xFF8
 19318                           tblptrh	equ	0xFF7
 19319                           tblptrl	equ	0xFF6
 19320                           tablat	equ	0xFF5
 19321                           prodh	equ	0xFF4
 19322                           prodl	equ	0xFF3
 19323                           intcon	equ	0xFF2
 19324                           intcon2	equ	0xFF1
 19325                           intcon3	equ	0xFF0
 19326                           indf0	equ	0xFEF
 19327                           postinc0	equ	0xFEE
 19328                           plusw0	equ	0xFEB
 19329                           fsr0h	equ	0xFEA
 19330                           fsr0l	equ	0xFE9
 19331                           wreg	equ	0xFE8
 19332                           fsr1h	equ	0xFE2
 19333                           fsr1l	equ	0xFE1
 19334                           indf2	equ	0xFDF
 19335                           postinc2	equ	0xFDE
 19336                           postdec2	equ	0xFDD
 19337                           plusw2	equ	0xFDB
 19338                           fsr2h	equ	0xFDA
 19339                           fsr2l	equ	0xFD9
 19340                           status	equ	0xFD8
 19341                           tosu	equ	0xFFF
 19342                           tosh	equ	0xFFE
 19343                           tosl	equ	0xFFD
 19344                           pclatu	equ	0xFFB
 19345                           pclath	equ	0xFFA
 19346                           tblptru	equ	0xFF8
 19347                           tblptrh	equ	0xFF7
 19348                           tblptrl	equ	0xFF6
 19349                           tablat	equ	0xFF5
 19350                           prodh	equ	0xFF4
 19351                           prodl	equ	0xFF3
 19352                           intcon	equ	0xFF2
 19353                           intcon2	equ	0xFF1
 19354                           intcon3	equ	0xFF0
 19355                           indf0	equ	0xFEF
 19356                           postinc0	equ	0xFEE
 19357                           plusw0	equ	0xFEB
 19358                           fsr0h	equ	0xFEA
 19359                           fsr0l	equ	0xFE9
 19360                           wreg	equ	0xFE8
 19361                           fsr1h	equ	0xFE2
 19362                           fsr1l	equ	0xFE1
 19363                           indf2	equ	0xFDF
 19364                           postinc2	equ	0xFDE
 19365                           postdec2	equ	0xFDD
 19366                           plusw2	equ	0xFDB
 19367                           fsr2h	equ	0xFDA
 19368                           fsr2l	equ	0xFD9
 19369                           status	equ	0xFD8
 19370                           
 19371                           	psect	text121
 19372  000000                     __ptext121:
 19373                           	opt stack 0
 19374                           tosu	equ	0xFFF
 19375                           tosh	equ	0xFFE
 19376                           tosl	equ	0xFFD
 19377                           pclatu	equ	0xFFB
 19378                           pclath	equ	0xFFA
 19379                           tblptru	equ	0xFF8
 19380                           tblptrh	equ	0xFF7
 19381                           tblptrl	equ	0xFF6
 19382                           tablat	equ	0xFF5
 19383                           prodh	equ	0xFF4
 19384                           prodl	equ	0xFF3
 19385                           intcon	equ	0xFF2
 19386                           intcon2	equ	0xFF1
 19387                           intcon3	equ	0xFF0
 19388                           indf0	equ	0xFEF
 19389                           postinc0	equ	0xFEE
 19390                           plusw0	equ	0xFEB
 19391                           fsr0h	equ	0xFEA
 19392                           fsr0l	equ	0xFE9
 19393                           wreg	equ	0xFE8
 19394                           fsr1h	equ	0xFE2
 19395                           fsr1l	equ	0xFE1
 19396                           indf2	equ	0xFDF
 19397                           postinc2	equ	0xFDE
 19398                           postdec2	equ	0xFDD
 19399                           plusw2	equ	0xFDB
 19400                           fsr2h	equ	0xFDA
 19401                           fsr2l	equ	0xFD9
 19402                           status	equ	0xFD8
 19403                           
 19404                           	psect	rparam
 19405  0000                     tosu	equ	0xFFF
 19406                           tosh	equ	0xFFE
 19407                           tosl	equ	0xFFD
 19408                           pclatu	equ	0xFFB
 19409                           pclath	equ	0xFFA
 19410                           tblptru	equ	0xFF8
 19411                           tblptrh	equ	0xFF7
 19412                           tblptrl	equ	0xFF6
 19413                           tablat	equ	0xFF5
 19414                           prodh	equ	0xFF4
 19415                           prodl	equ	0xFF3
 19416                           intcon	equ	0xFF2
 19417                           intcon2	equ	0xFF1
 19418                           intcon3	equ	0xFF0
 19419                           indf0	equ	0xFEF
 19420                           postinc0	equ	0xFEE
 19421                           plusw0	equ	0xFEB
 19422                           fsr0h	equ	0xFEA
 19423                           fsr0l	equ	0xFE9
 19424                           wreg	equ	0xFE8
 19425                           fsr1h	equ	0xFE2
 19426                           fsr1l	equ	0xFE1
 19427                           indf2	equ	0xFDF
 19428                           postinc2	equ	0xFDE
 19429                           postdec2	equ	0xFDD
 19430                           plusw2	equ	0xFDB
 19431                           fsr2h	equ	0xFDA
 19432                           fsr2l	equ	0xFD9
 19433                           status	equ	0xFD8
 19434                           
 19435                           	psect	temp
 19436  00003C                     btemp:
 19437                           	opt stack 0
 19438  00003C                     	ds	12
 19439  0000                     wtemp0	set	btemp
 19440  0000                     wtemp1	set	btemp+2
 19441  0000                     wtemp2	set	btemp+4
 19442  0000                     wtemp3	set	btemp+6
 19443  0000                     wtemp4	set	btemp+8
 19444  0000                     wtemp5	set	btemp+10
 19445  0000                     wtemp6	set	btemp+1
 19446  0000                     ttemp0	set	btemp
 19447  0000                     ttemp1	set	btemp+3
 19448  0000                     ttemp2	set	btemp+6
 19449  0000                     ttemp3	set	btemp+9
 19450  0000                     ltemp0	set	btemp
 19451  0000                     ltemp1	set	btemp+4
 19452  0000                     ltemp2	set	btemp+8
 19453                           tosu	equ	0xFFF
 19454                           tosh	equ	0xFFE
 19455                           tosl	equ	0xFFD
 19456                           pclatu	equ	0xFFB
 19457                           pclath	equ	0xFFA
 19458                           tblptru	equ	0xFF8
 19459                           tblptrh	equ	0xFF7
 19460                           tblptrl	equ	0xFF6
 19461                           tablat	equ	0xFF5
 19462                           prodh	equ	0xFF4
 19463                           prodl	equ	0xFF3
 19464                           intcon	equ	0xFF2
 19465                           intcon2	equ	0xFF1
 19466                           intcon3	equ	0xFF0
 19467                           indf0	equ	0xFEF
 19468                           postinc0	equ	0xFEE
 19469                           plusw0	equ	0xFEB
 19470                           fsr0h	equ	0xFEA
 19471                           fsr0l	equ	0xFE9
 19472                           wreg	equ	0xFE8
 19473                           fsr1h	equ	0xFE2
 19474                           fsr1l	equ	0xFE1
 19475                           indf2	equ	0xFDF
 19476                           postinc2	equ	0xFDE
 19477                           postdec2	equ	0xFDD
 19478                           plusw2	equ	0xFDB
 19479                           fsr2h	equ	0xFDA
 19480                           fsr2l	equ	0xFD9
 19481                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        60
    BSS         1271
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      75
    BANK0           160    128     160
    BANK1           256    102     224
    BANK2           256      0     245
    BANK3           256      0     160
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1235$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(COMRAM[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1235$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1235$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E7264,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S566$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S566$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(COMRAM[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S344$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(COMRAM[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(COMRAM[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(COMRAM[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_LORAWAN_Join
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  395905
                                            126 BANK0      2     2      0
                       _LORAWAN_Init
                       _LORAWAN_Join
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1600
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   12024
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   12024
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  220298
                                            123 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SelectChannelForTransmission                         3     3      0   19506
                                             33 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (3) _SearchAvailableChannel                              12     9      3    6348
                                             21 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (3) _ConfigureRadioTx                                     6     2      4   13022
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetOutputPower                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetIQInverted                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_SetCRC                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadio                                       5     1      4   12799
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetSpreadingFactor                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetModulation                                  1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFrequencyHopPeriod                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetFSKSyncWord                                 3     1      2   12069
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetChannelFrequency                            4     0      4     243
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetBandwidth                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Transmit                                      17    14      3  107515
                                             58 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteConfiguration                            11     9      2   76912
                                             25 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _RADIO_WritePower                                     3     3      0    8759
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   13369
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFSKBitRate                                8     4      4   13368
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0   90348
                                            112 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _Random                                               2     0      2    5409
                                             19 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 2     0      2    4872
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     337
                                             14 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _ComputeMic                                           9     4      5   69538
                                            103 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   57000
                                             89 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   22093
                                             49 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1270
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _AESEncodeLoRa                                       20    16      4   16854
                                             29 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _AESEncode                                           24    20      4    3397
                                              6 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (8) _EncodeShiftRow                                       3     1      2     709
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _EncKeySchedule                                       6     4      2     839
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  149848
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   22459
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   85379
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      22
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetLoRaSyncWord                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   39320
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _RADIO_WriteMode                                      7     5      2   13376
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterRead                                   2     2      0      90
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (4) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteFrequency                                12     8      4   13953
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _RADIO_RegisterWrite                                  2     1      1    8365
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALSPISend                                           1     1      0      44
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI2_Exchange8bit                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     601
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (4) _SystemBlockingWaitMs                                 5     1      4     557
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   12754
                                             58 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    4872
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    4824
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _SwTimerStop                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SwTimerStart                                         9     9      0    1201
                                             49 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (3) _TMR_OverrideRemaining                               10     6      4     773
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (4) _TMR_SwapTimer                                        2     0      2     572
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_WriteTimer                                      2     0      2     329
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SwTimersInterrupt                                   17    13      4     316
                                             32 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (4) _TMR_GetDeltaTime                                    24    20      4      69
                                              8 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_ReadTimer                                       8     6      2      69
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _SwTimerSetTimeout                                    9     5      4    1610
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   15014
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   15014
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    3033
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   11891
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           8     8      0     713
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (12) _TMR_ISR_lora                                        2     2      0     573
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (14) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      A0       5      100.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      4B       1       90.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     440      12        0.0%
DATA                 0      0     65E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 10 12:58:43 2020

                              __end_of_DIO3_ISR_Lora_Init 389C  
                                          HALSPISend@data 0061  
                                                      l41 05F0  
                                                      l50 070E  
                                                      l43 069E  
                                                      l52 0730  
                                                      l44 0664  
                                                      l61 08B4  
                                                      l53 0744  
                                                      l45 061C  
                                                      l70 1C9E  
                                                      l54 0754  
                                                      l80 2E68  
                                                      l72 1CF2  
                                                      l56 086C  
                                                      l48 06DC  
                                                      l57 07C0  
                                                      l74 1D1A  
                                                      l58 07CE  
                                                      l68 1C76  
                                                      l79 2EB0  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 2F7C  
                                   __end_of_AESEncodeLoRa 33A0  
                              ?_IOCB4_SetInterruptHandler 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                                     l300 0946  
                                                     l213 1754  
                                                     l214 17CE  
                                                     l223 32AA  
                                                     l231 3424  
                                                     l311 0ABC  
                                                     l303 097E  
                                                     l144 3708  
                                                     l232 3406  
                                                     l320 0C3C  
                                                     l241 2A28  
                                                     l313 0ADE  
                                                     l306 09E2  
                                                     l315 0AE8  
                                                     l500 0FC6  
                                                     l237 2A26  
                                                     l317 0B0A  
                                                     l309 0AB2  
                                                     l501 0FDE  
                                                     l430 2306  
                                                     l510 1142  
                                                     l502 0FF0  
                                                     l327 0D8A  
                                                     l319 0B14  
                                                     l423 22E8  
                                                     l503 101C  
                                                     l280 1F6A  
                                                     l432 2314  
                                                     l424 2298  
                                                     l512 10CC  
                                                     l504 1002  
                                                     l281 1EA8  
                                                     l257 2844  
                                                     l441 146A  
                                                     l329 0D94  
                                                     l433 2340  
                                                     l425 22A6  
                                                     l434 2348  
                                                     l426 22D8  
                                                     l283 1F04  
                                                     l452 0494  
                                                     l460 021E  
                                                     l285 1F68  
                                                     l429 22F8  
                                                     l461 026C  
                                                     l453 020C  
                                                     l390 2102  
                                                     l438 1420  
                                                     l454 01DA  
                                                     l391 20E4  
                                                     l439 1436  
                                                     l471 030C  
                                                     l455 013E  
                                                     l392 20F0  
                                                     l384 20A0  
                                                     l480 050A  
                                                     l456 01F2  
                                                     l481 053C  
                                                     l473 03EC  
                                                     l457 0166  
                                                     l801 33E4  
                                                     l482 051C  
                                                     l466 0270  
                                                     l458 018E  
                                                     l395 213C  
                                                     l475 0438  
                                                     l459 01C6  
                                                     l396 212E  
                                                     l388 20BA  
                                                     l484 0560  
                                                     l476 0444  
                                                     l468 02EC  
                                                     l397 2132  
                                                     l485 056C  
                                                     l477 046E  
                                             ?_RADIO_Init 0079  
                                                     l670 2782  
                                                     l478 0486  
                                                     l399 216A  
                                                     l496 0F28  
                                                     l498 0F40  
                                                     l499 0F5A  
                                                     l972 125E  
                                                     l966 2ED2  
                                                     l967 2ED6  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 2CBC  
                   __size_of_SelectChannelForTransmission 006C  
                            _SelectChannelForTransmission 2C50  
                                      _RADIO_Transmit$771 00A1  
                                      _RADIO_Transmit$773 00A5  
                                      _DIO2_ISR_Lora_Init 3760  
                                      __size_of_AESEncode 0342  
                                         _timer1ReloadVal 004A  
                                         ?_EncKeySchedule 0060  
                                   _RADIO_SetLoRaSyncWord 3842  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 0930  
                                  SystemBlockingWaitMs@ms 0060  
                                 LORAWAN_Join@bufferIndex 00DB  
                                   ?_SystemBlockingWaitMs 0060  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 0078  
                     __end_of_RADIO_SetFrequencyHopPeriod 3838  
                             _RADIO_SetFrequencyHopPeriod 382E  
                                  ?_TMR_OverrideRemaining 006A  
                                           _INT1_CallBack 36A4  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                      __size_of_IOCB4_ISR 001E  
                                                    l1203 2B8C  
                                                    l1140 1E44  
                                                    l1141 1D7E  
                                                    l1151 1E7A  
                                                    l1143 1E3E  
                                                    l1152 1E7E  
                                                    l1145 1E40  
                                                    l2034 153C  
                                                    l1139 1D78  
                                                    l2036 1592  
                                                    l1165 268A  
                                                    l1149 1E60  
                                                    l1185 2CB6  
                                                    l1198 2B02  
                                                    l2504 2FEA  
                                                    l2505 2FFE  
                                                    l2426 3600  
                                                    l2187 3748  
                   RADIO_WriteConfiguration@symbolTimeout 0079  
                                                    l1499 2708  
                                                    l1782 1B94  
                                                    l1774 1B40  
                                                    l2910 3246  
                                                    l1775 1B32  
                                                    l2911 3250  
                                                    l2920 2F68  
                                                    l1776 1AFE  
                                                    l2921 2F2E  
                                                    l1777 1B2E  
                                                    l2489 296C  
                                                    l1874 226E  
                                                    l2906 322E  
                                                    l2843 2BFC  
                                                    l1875 2194  
                                                    l2907 3226  
                                                    l2844 2BF0  
                                                    l1876 2202  
                                                    l2853 2DAE  
                                                    l1877 226A  
                                                    l2926 3450  
                                                    l2854 2DA2  
                                                    l2927 343E  
                                                    l2847 2C30  
                                                    l2848 2C3E  
                                                    l2857 2DD6  
                                                    l2858 2DE4  
                                                    l9000 074C  
                                                    l9016 07C6  
                                                    l9036 08AC  
                                                    l7714 09DA  
                                                    l8372 1C96  
                                                    l8390 1D12  
                                                    l7648 2F2E  
                                                    l7754 0C34  
                                                    l7846 343E  
                                                    l7686 093E  
                                                    l7874 32BE  
                                                    l7698 0976  
                                                    l8980 06D4  
                                        _RADIO_WritePower 227C  
                                 _PrepareJoinRequestFrame 14E6  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                                    u6510 09C2  
                                                    u6440 2F50  
                                                    u8300 3232  
                                                    u6447 2F46  
                                                    u8240 2C00  
                                                    u6720 2EAC  
                                            ?_RADIO_Reset 0001  
                                                    u7521 1C1C  
                                                    u7610 37D0  
                                                    u6570 0C22  
                                                    u6490 0972  
                                                    u6730 2EAE  
                                                    u7620 288C  
                                                    u8500 08FA  
                                                    u7700 2A58  
                                                    u8270 2DB2  
                                                    u6590 0C68  
                                                    u7550 1CCA  
                                                    u8430 0748  
                                                    u8360 0602  
                                                    u7720 2A80  
                                                    u8345 05D2  
                                                    u8450 079A  
                                                    u8370 0604  
                                                    u7740 2AA6  
                                                    u8470 0834  
                                                    u9520 0256  
                                                    u8650 215E  
                                                    u9540 0266  
                                                    u9570 02BE  
                                                    u9490 0206  
                                                    u9495 01FC  
                                                    u9595 0326  
                                                    _TMR1 000FCE  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0062  
                                           _INT2_CallBack 3686  
                                ??_InitDefault433Channels 006B  
                                                    _loRa 0200  
                                                    _main 2910  
                                                    _rand 3030  
                          __end_of_UpdateMinMaxChDataRate 227C  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0238  
                                                    btemp 003C  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00CC  
                                           ComputeMic@key 00C7  
                               __size_of_ConfigureRadioTx 0052  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 317E  
                               ?_INT2_SetInterruptHandler 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 007E  
                                           __CFG_IESO$OFF 000000  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0062  
                                  ?_HALResetPinMakeOutput 0001  
                                  __size_of_TMR_SwapTimer 0044  
                                            ___param_bank 000000  
                                    ??_DIO2_ISR_Lora_Init 0062  
                         __end_of_CreateAllSoftwareTimers 31D0  
                  SearchAvailableChannel@transmissionType 0075  
                         __size_of_HALResetPinOutputValue 001A  
                                   _RADIO_WriteFSKBitRate 2D26  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR 386E  
                                        __end_of_INT2_ISR 3866  
                          __size_of_OSCILLATOR_Initialize 000E  
                           __end_of_OSCILLATOR_Initialize 37AC  
                                                   l11132 158A  
                                                   l11118 1534  
                                                   l10470 2AFA  
                                                   l10486 2B84  
                                                   l10884 277A  
                                                   ?_main 0001  
                                                   ?_rand 006C  
                                              _FillSubKey 2E58  
                       __end_of_IOCB4_SetInterruptHandler 37E8  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 2C50  
                                         RADIO_Transmit@i 00AA  
                                                   u11130 1B5A  
                                                   u11230 1E52  
                                                   u11145 1B82  
                                                   u11250 1E66  
                                                   u11155 1BA6  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 2DF6  
                                                   u11370 1092  
                                                   u11630 27B4  
                                                   u11385 10BA  
                                                   u11810 1580  
                                                   u11395 10DE  
                                                   u13317 2978  
                                                   u11830 15D6  
                                                   u13327 2992  
                                                   _LATC2 007C5A  
                                                   u13337 340E  
                                                   _LATD3 007C63  
                  SearchAvailableChannel@randomNumberCopy 007C  
                                          __CFG_DEBUG$OFF 000000  
                                         __end_of___lwmod 325A  
                                                   i2l213 18BE  
                                                   i2l214 1938  
                                                   i2l223 3332  
                                                   i2l280 2068  
                                                   i2l281 1FA6  
                                                   i2l283 2002  
                                                   i2l285 2066  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0064  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 000000  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                        __end_of_TMR1_ISR 373E  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                                                   __rcon 00F8  
                                 __end_of_PIN_MANAGER_IOC 3856  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                          ??_INT1_DefaultInterruptHandler 0001  
                                                   _randx 0052  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 37AC  
                                  _UpdateJoinSuccessState 000000  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 37F2  
                                              _ComputeMic 2DF6  
                                 __end_of_TMR1_Initialize 34EC  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                                   ltemp0 003C  
                                 RADIO_WriteFrequency@num 0075  
                                                   ltemp1 0040  
                                                   ltemp2 0044  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                                   ttemp0 003C  
                                                   ttemp1 003F  
                                                   ttemp2 0042  
                                                   ttemp3 0045  
                                                   status 000FD8  
                                                   wtemp0 003C  
                                                   wtemp1 003E  
                                                   wtemp2 0040  
                                                   wtemp3 0042  
                                                   wtemp4 0044  
                                                   wtemp5 0046  
                                                   wtemp6 003D  
                                          __CFG_HFOFST$ON 000000  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 35EC  
                       TMR_OverrideRemaining@oldReloadVal 0072  
                                __size_of_RADIO_WriteMode 00FE  
                                       __end_of_AESEncode 0C72  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01CA  
                        __end_of_RADIO_WriteConfiguration 0586  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 0068  
                                         __initialization 253A  
                            __size_ofi2_SwTimersInterrupt 0100  
                             __size_of_DIO1_ISR_Lora_Init 0010  
                                       _SPI2_Exchange8bit 373E  
                                            __end_of_main 29A2  
                                            __end_of_rand 3086  
                                       ?_TMR_GetDeltaTime 0068  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 27E4  
                                 RADIO_WriteMode@blocking 0066  
                                    _UpdateJoinInProgress 36DE  
                                       __end_of_IOCB4_ISR 3686  
                                      ?_SPI2_Exchange8bit 0001  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006C  
                                           AESCmac@output 00BB  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 3806  
                                               ??_AESCmac 00C0  
                                          ??_RADIO_SetCRC 0060  
                                 InitDefault868Channels@i 006B  
                                                  ??_main 00DE  
                                                  ??_rand 006E  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0064  
                                     ??_SPI2_Exchange8bit 0060  
                                      EncodeShiftRow@temp 0062  
                                ??_InitDefault868Channels 006B  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                           _TMR_SwapTimer 329E  
                               ??_PrepareJoinRequestFrame 00D0  
                                          _HALSPICSAssert 387E  
                         __size_of_SearchAvailableChannel 012A  
                                      ??_HALSPICSDeassert 0060  
                                  _HALResetPinOutputValue 36F8  
                                        ___llmod@dividend 0060  
                                                  ?_srand 0072  
                          _LORAWAN_ReceiveWindow1Callback 000000  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                                  _T1GCON 000FCC  
                                 TMR1_WriteTimer@timerVal 0060  
                                                  i2l1331 2FD6  
                          _LORAWAN_ReceiveWindow2Callback 000000  
                                                  i2l2426 36D4  
                                                  i2l2282 0038  
                                                  i2l2284 0044  
                                                  i2l2286 0050  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2289 005C  
                           __size_of_RADIO_SetFSKSyncWord 0030  
                                                  i2l9640 3346  
                                                  _OSCCON 000FD3  
                         __size_of_InitDefault433Channels 008A  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                              __end_of_DIO0_ISR_Lora_Init 3790  
                                __size_ofi2_TMR_SwapTimer 0044  
                           __size_of_RADIO_WriteFrequency 00F0  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0071  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 3750  
                                                  _Random 3588  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 000000  
                      SearchAvailableChannel@randomNumber 007F  
                    __end_of_TMR1_DefaultInterruptHandler 389E  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 389C  
                                                  ___lmul 2FD8  
                                  ?_RADIO_WriteFSKBitRate 006D  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 009A  
                                          __CFG_STVREN$ON 000000  
                                               ??___lldiv 0068  
                                               ??___llmod 0068  
                                               ??___lwmod 0072  
                      RADIO_SetChannelFrequency@frequency 0060  
                                  __size_of_LORAWAN_Reset 01CE  
                                                  _memcpy 2F1C  
                                                  _memset 3434  
                                                  clear_0 25A2  
                                                  clear_1 25B4  
                                                  clear_2 25C0  
                                                  clear_3 25CC  
                                                  clear_4 25D8  
                                                  clear_5 25E4  
                             __size_of_DIO5_ISR_Lora_Init 0002  
                                             ?_FillSubKey 0060  
                                 __size_of_EncodeShiftRow 0164  
                                            ??_HALSPISend 0061  
                    __end_of_INT2_DefaultInterruptHandler 38A2  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 38A0  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 3882  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                                           ??_SwTimerStop 0060  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0060  
                               ?_RADIO_SetSpreadingFactor 0001  
                                          ?_TMR_SwapTimer 0068  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0072  
                                         ??_INT2_CallBack 0001  
                TMR1_SetInterruptHandler@InterruptHandler 0060  
               IOCB4_SetInterruptHandler@InterruptHandler 0060  
                INT2_SetInterruptHandler@InterruptHandler 0060  
                INT1_SetInterruptHandler@InterruptHandler 0060  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007A  
                                           AESEncode@aux2 0079  
                                           AESEncode@aux3 007B  
                                 __end_of_TMR1_WriteTimer 360C  
                                   __end_of_SwTimerCreate 2A2E  
                          ??_SelectChannelForTransmission 0081  
                                             ?_ComputeMic 00C7  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 3668  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 362C  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 014C  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DB  
                                              __accesstop 0060  
                                 __end_of__initialization 25EE  
                                          _RADIO_Transmit 0F16  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                  RADIO_ReadRandom@retVal 006F  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 30DA  
                                      ?_SYSTEM_Initialize 0001  
                                          _maxPayloadSize FF77  
                           RADIO_SetLoRaSyncWord@syncWord 0060  
                                           ___rparam_used 000001  
                                      __end_of_HALSPISend 37C8  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 1D58  
                                            __pidataBANK0 3872  
                                            __pidataBANK1 33A0  
                                     ??_SYSTEM_Initialize 0062  
                              __end_of_DIO4_ISR_Lora_Init 389A  
                                               ?_TMR1_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 0086  
                                       ??_RADIO_WriteMode 0067  
                                         _spreadingFactor FF95  
                                        ??_EncKeySchedule 0062  
                   __end_of_IOCB4_DefaultInterruptHandler 38A0  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 389E  
                                __end_of_RADIO_WritePower 236C  
                                           __end_of_srand 37BA  
                                  _InitDefault433Channels 2B42  
                                  _AutomaticReplyCallback 000000  
                             ??_IOCB4_SetInterruptHandler 0062  
                                            ??_RADIO_Init 007F  
                               SwTimerSetCallback@timerId 0063  
                             __size_of_EXT_INT_Initialize 002A  
                                 ??_TMR_OverrideRemaining 006E  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 389A  
                            __end_of_HALResetPinMakeInput 388A  
                                 __size_of_TMR1_ReadTimer 0022  
                        __end_of_INT2_SetInterruptHandler 37F2  
                             RADIO_RegisterRead@readValue 0063  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 008A  
                               __end_of_SYSTEM_Initialize 364A  
                      __size_of_RADIO_SetChannelFrequency 008A  
                                                 ??_srand 0074  
                                  __end_of_RADIO_Transmit 114E  
                                       ??_SPI2_Initialize 0060  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 114E  
                              ?_RADIO_SetChannelFrequency 0060  
                                              __pbssBANK0 00E0  
                                              __pbssBANK1 0166  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 3566  
                              ?_SetCallbackSoftwareTimers 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF7F  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0090  
                                    _RADIO_SetOutputPower 37FC  
                                              __pnvCOMRAM 0048  
                                    __end_of_RADIO_SetCRC 381A  
                                  __size_of_DIO0_ISR_Lora 0004  
                                 ??_HALResetPinMakeOutput 0060  
                                     __size_of_FillSubKey 0062  
                             __size_of_SwTimerSetCallback 0044  
                               RADIO_SetOutputPower@power 0060  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 14E6  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                                                 ?_Random 0073  
                                  __size_of_DIO1_ISR_Lora 0004  
                               ?_LORAWAN_SetDeviceAddress 0060  
                                        i2_TMR1_ReadTimer 360C  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0064  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                  ??_UpdateJoinInProgress 0060  
                                        FillSubKey@source 0060  
            SelectChannelForTransmission@transmissionType 0081  
                                                 ?___lmul 0060  
                                  __size_of_DIO2_ISR_Lora 0004  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0060  
                                                 ?_memcpy 0060  
                                                 ?_memset 0060  
                                          ___lmul@product 0068  
                                       _TMR_ISR_Lora_Init 3750  
                                  RADIO_RegisterWrite@reg 0063  
                                     __size_of_ComputeMic 0062  
                                  RADIO_Transmit@regValue 00A9  
                            __size_of_RADIO_SetModulation 000A  
                                                 _AESCmac 0586  
                                  ComputeMic@bufferLength 00CB  
                                         ??_TMR_SwapTimer 006A  
                                RADIO_WriteFSKBitRate@num 0071  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0062  
                                     _RADIO_SetIQInverted 3806  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00A8  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 016A  
                                     i2_SwTimersInterrupt 1F84  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0062  
                                       __end_of_bandwidth FF95  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0065  
                                        ?_TMR1_WriteTimer 0060  
                                         ?_RADIO_Transmit 009A  
                                   TMR_SwapTimer@timerVal 0068  
                       __end_of_RADIO_SetChannelFrequency 2AB8  
                             PrepareJoinRequestFrame@iCtr 00D9  
                               _IOCB4_SetInterruptHandler 37DE  
                       __end_of_SetCallbackSoftwareTimers 253A  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 000000  
                             PrepareJoinRequestFrame@mhdr 00D8  
                                  __size_of_AESEncodeLoRa 0036  
                                      _EncKeySchedule$513 0064  
                           __size_of_LORAWAN_PlatformInit 0022  
                                          _ticksAccounted 00E8  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00B9  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D4  
                                  _InitDefault868Channels 2AB8  
                                RADIO_RegisterWrite@value 0062  
                                                 __Lparam 0000  
                                   _StopAllSoftwareTimers 312C  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0021  
                                              AESEncode@i 007C  
                                               _AESEncode 0930  
                               __end_of_TMR_ISR_Lora_Init 3760  
                                         __size_of___lmul 0058  
                             __size_of_DIO2_ISR_Lora_Init 0010  
                                                 ___lldiv 2BCC  
                                                 ___llmod 2D8E  
                                       ?_RADIO_ReadRandom 006C  
                                                 ___lwmod 3216  
                                 ??_RADIO_SetLoRaSyncWord 0060  
                                                 _devAddr 01BC  
                                                 __pcinit 253A  
                                                 _appSKey 01C0  
                                         __size_of_memcpy 0060  
                                   RADIO_Init@radioBuffer 0079  
                                         __size_of_memset 0030  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0067  
                                      ??_RADIO_ReadRandom 006E  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060  
                                                 __ptext0 2910  
                                                 __ptext1 362C  
                                                 __ptext2 34C0  
                                                 __ptext3 3790  
                                                 __ptext4 3086  
                                                 __ptext5 379E  
                                                 __ptext6 3566  
                                                 __ptext7 3750  
                                                 __ptext8 37D4  
                                                 __ptext9 3856  
                                    __end_of_LORAWAN_Init 2F1C  
                                    __end_of_LORAWAN_Join 2740  
                                           _DIO0_ISR_Lora 3892  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 006D  
                                          _EncodeShiftRow 194A  
                                               _IOCB4_ISR 3668  
                               TMR1_ReadTimer@readValHigh 0066  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0082  
                                   _OSCILLATOR_Initialize 379E  
                              __end_of_RADIO_SetBandwidth 3842  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF8E  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 388E  
                                             _SwTimerStop 353E  
                                ??_PIN_MANAGER_Initialize 0062  
                               ?_TMR1_SetInterruptHandler 0060  
                                                 _nwkSKey 01D0  
                           RADIO_SetModulation@modulation 0060  
                               __size_of_TMR_GetDeltaTime 016A  
                                           _DIO2_ISR_Lora 388A  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 3492  
                   __size_of_LORAWAN_SetNetworkSessionKey 002E  
                            _LORAWAN_SetNetworkSessionKey 3464  
                              RADIO_WriteMode@currentMode 0069  
                                        ComputeMic@buffer 00C9  
                                    end_of_initialization 25EE  
                                 _CreateAllSoftwareTimers 317E  
                                     SwTimerCreate@retVal 0060  
                                _INT2_SetInterruptHandler 37E8  
                                          _GenerateSubkey 1C0C  
                                   _RADIO_WatchdogTimeout 000000  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF67  
                                                 memcpy@d 0066  
                                                 memcpy@n 0064  
                                                 memcpy@s 0068  
                                                 memset@c 0062  
                                                 memset@n 0064  
                                                 memset@p 0066  
                               _LORAWAN_LinkCheckCallback 000000  
                                          ??_SwTimerStart 0091  
                                               i2u1216_48 3656  
                                 ??_RADIO_WriteFSKBitRate 0071  
                                   ??_RADIO_SetIQInverted 0060  
                              __end_of_DIO1_ISR_Lora_Init 3780  
                                         ___lldiv@divisor 0064  
                                              _ticksAdded 00EC  
                             HALResetPinOutputValue@value 0060  
                                EncodeShiftRow@stateTable 0060  
                               __size_of_HALSPICSDeassert 0004  
                                         ___lldiv@counter 006C  
                             TMR_OverrideRemaining@tmrVal 0070  
                                   ??i2_SwTimersInterrupt 0025  
                                       GenerateSubkey@key 0091  
                                    _HALResetPinMakeInput 3886  
                              LORAWAN_Init@RxJoinResponse 00A8  
                        __end_of_RADIO_SetSpreadingFactor 3824  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0066  
                                         _SystemTimerInit 3856  
                                                 postinc0 000FEE  
                                                 postinc2 000FDE  
                                           _AESEncode$510 0076  
                                           _AESEncode$508 0072  
                                           _AESEncode$509 0074  
                            __end_of_RADIO_SetFSKSyncWord 3404  
                                      LORAWAN_Join@result 00DC  
                                          AESEncode@block 0066  
                       SearchAvailableChannel@maxChannels 007E  
                                  __end_of_EncodeShiftRow 1AAE  
                                      _DIO0_ISR_Lora_Init 3780  
                                       ??_HALDIO5PinValue 0060  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 0050  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0065  
                            SwTimersInterrupt@timeElapsed 0088  
                                           _AESEncodeLoRa 336A  
                            __end_of_RADIO_WriteFrequency 245C  
                              __end_of_RADIO_RegisterRead 353E  
                          __end_of_HALResetPinOutputValue 3712  
                                              ?_IOCB4_ISR 0001  
                                __end_of_ConfigureRadioTx 312C  
                                          ?_DIO1_ISR_Lora 0001  
                                       _SwTimerSetTimeout 32E2  
                                          _TMR1_ReadTimer 35AA  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0030  
                                      ?_SwTimerSetTimeout 0060  
                                ??_UpdateMinMaxChDataRate 0060  
                                  __end_of_GenerateSubkey 1D58  
                                   __size_of_RADIO_SetCRC 000A  
                                          _localDioStatus 0056  
                                            ??_ComputeMic 00CC  
                                  ??_RADIO_SetOutputPower 0060  
                           ?_LORAWAN_SetNetworkSessionKey 006B  
                                 UpdateMinMaxChDataRate@i 0061  
                                 LORAWAN_Reset@ismBandNew 00A5  
                                     ??_SwTimerSetTimeout 0064  
                                         _RADIO_WriteMode 2084  
                              ??_RADIO_WriteConfiguration 007B  
                                   SPI2_Exchange8bit@data 0060  
                                 ?_SearchAvailableChannel 0075  
                                  ?_StopAllSoftwareTimers 0001  
                                      __end_of_FillSubKey 2EBA  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0062  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0081  
                              SwTimerSetCallback@callback 0060  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0060  
                                          __end_of_Random 35AA  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0010  
                            __end_of_INTERRUPT_Initialize 387A  
                              __end_of_DIO5_ISR_Lora_Init 3898  
                                          __end_of___lmul 3030  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0060  
                     TMR_OverrideRemaining@ticksRemaining 006A  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 386E  
                                         ?_EncodeShiftRow 0060  
                                          ?_AESEncodeLoRa 007D  
                                       __size_of_TMR1_ISR 0014  
                                      __end_of_ComputeMic 2E58  
                                               Random@max 0073  
                                          __end_of_memcpy 2F7C  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 3326  
                                  __end_of_TMR1_ReadTimer 35CC  
                                          __end_of_memset 3464  
                                         _SPI2_Initialize 3790  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0064  
                                            _RADIO_SetCRC 3810  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006B  
                                     start_initialization 253A  
                                          _ConfigureRadio 25F4  
                                      _DIO4_ISR_Lora_Init 3898  
                                __end_ofi2_TMR1_ReadTimer 362C  
                          __size_of_TMR_OverrideRemaining 0096  
                                     _RADIO_RegisterWrite 35CC  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0061  
                         __size_of_PIN_MANAGER_Initialize 0054  
                           __end_of_TMR_OverrideRemaining 2910  
                                   __end_of_INT1_CallBack 36C2  
                                            AESCmac@input 00BD  
                        __end_of_LORAWAN_SetDeviceAddress 372A  
                                         ?_GenerateSubkey 0091  
                            ?_RADIO_SetFrequencyHopPeriod 0060  
                                   LORAWAN_Init@RxPayload 00A6  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 36A4  
                                           ??_RADIO_Reset 0065  
                              SwTimerStart@ticksRemaining 0095  
                                  RADIO_WriteMode@newMode 006A  
                             ??_RADIO_SetChannelFrequency 0064  
                             ??_SetCallbackSoftwareTimers 0064  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 3824  
                          __end_of_SearchAvailableChannel 1E82  
                                         i2_TMR_SwapTimer 3326  
                                         ___llmod@divisor 0064  
                                 __end_of_SystemTimerInit 385E  
                                         ___llmod@counter 0068  
                                     TMR_SwapTimer@oldVal 00F2  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 00F0  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 3886  
                                                ??_Random 0075  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                                    ?_RADIO_RegisterWrite 0062  
                          __end_of_InitDefault433Channels 2BCC  
                                     RADIO_Init@frequency 007B  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FF87  
                                                ??___lmul 0068  
                                             ??_AESEncode 006A  
                       RADIO_WriteConfiguration@tempValue 007F  
                                   __size_of_LORAWAN_Init 0062  
                                   __size_of_LORAWAN_Join 00A4  
                                          ??_TMR_ISR_lora 0032  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01AC  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 008C  
                                                ??_memcpy 0066  
                                  __size_of_SwTimerCreate 008C  
                                                ??_memset 0066  
                                    ??_DIO4_ISR_Lora_Init 0060  
                              __end_of_EXT_INT_Initialize 3516  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 381A  
                                      _RADIO_RxFSKTimeout 000000  
                                                ?_AESCmac 00B9  
                                  __size_of_TMR1_CallBack 001E  
                                         ??_DIO1_ISR_Lora 0001  
                                            AESEncode@aux 0078  
                                            AESEncode@key 0068  
                                  TMR_GetDeltaTime@retVal 00E4  
                                         ?_TMR1_ReadTimer 0060  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 269C  
                                  TMR_GetDeltaTime@tmrVal 00F4  
                                    __end_of_SwTimerStart 287A  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                                             __pbssCOMRAM 0056  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 009D  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                        _TMR_GetDeltaTime 1676  
                                 __end_of_RADIO_WriteMode 2182  
                         _UnconfirmedTransmissionCallback 000000  
                                 SearchAvailableChannel@i 0080  
                                   RADIO_RegisterRead@reg 0062  
                         __size_of_UpdateMinMaxChDataRate 00FA  
                                               _aesBuffer 019C  
                                     SwTimerStart@timerId 0099  
                           ??_RADIO_SetFrequencyHopPeriod 0062  
                                    _RADIO_SetFSKSyncWord 33D4  
                             RADIO_SetBandwidth@bandwidth 0060  
                              __end_of_SwTimerSetCallback 329E  
                                   _INT2_InterruptHandler 004E  
                                               _bandwidth FF8E  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 2EBA  
                                            _LORAWAN_Join 269C  
                                  ??_HALResetPinMakeInput 0060  
                                    _RADIO_WriteFrequency 236C  
                                         FillSubKey@carry 0066  
                                        _HALSPICSDeassert 387A  
                          ??_LORAWAN_SetNetworkSessionKey 006D  
                                     __end_of_RADIO_Reset 3216  
                                   ??_RADIO_RegisterWrite 0063  
                                  _PIN_MANAGER_Initialize 3086  
                                           FillSubKey@key 0062  
                     RADIO_WriteFSKFrequencyDeviation@num 0071  
                                               _macBuffer 04E0  
                                               _dioStatus 0057  
                                       _SwTimersInterrupt 1E82  
                                               __pintcode 0008  
                        __end_of_TMR1_SetInterruptHandler 37DE  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 009C  
                                 __end_of_SPI2_Initialize 379E  
                                               __ptext100 372A  
                                               __ptext101 364A  
                                               __ptext110 3668  
                                               __ptext102 389C  
                                               __ptext111 388A  
                                               __ptext103 2F7C  
                                               __ptext120 38A2  
                                               __ptext112 389E  
                                               __ptext104 3326  
                                               __ptext121 0000  
                                               __ptext113 385E  
                                               __ptext105 36C2  
                                               __ptext114 3686  
                                               __ptext106 1F84  
                                               __ptext115 388E  
                                               __ptext107 17E0  
                                               __ptext116 38A0  
                                               __ptext108 360C  
                                               __ptext117 3866  
                                               __ptext109 384C  
                                               __ptext118 36A4  
                                               __ptext119 3892  
                                                ?___lldiv 0060  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0060  
                                         ??_AESEncodeLoRa 0081  
                SelectChannelForTransmission@channelIndex 0083  
                         __end_of_PrepareJoinRequestFrame 1676  
                                                ?___lwmod 006E  
                                      ?_SwTimersInterrupt 0080  
                               _RADIO_SetChannelFrequency 2A2E  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                               _SetCallbackSoftwareTimers 245C  
                                      ConfigureRadio@freq 006E  
                                   ??_RADIO_SetModulation 0060  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 3588  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                           __end_of_RADIO_SetLoRaSyncWord 384C  
                              __size_of_SwTimerSetTimeout 0044  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                                         ?_ConfigureRadio 006E  
                              ??_INT2_SetInterruptHandler 0062  
                              __end_ofi2_TMR_GetDeltaTime 194A  
                                     ??_SwTimersInterrupt 0084  
                                       _DutyCycleCallback 000000  
                                 InitDefault433Channels@i 006B  
                                   __end_of_TMR_SwapTimer 32E2  
                                            ?_SwTimerStop 0001  
                                 __end_ofi2_TMR_SwapTimer 336A  
                                 __size_of_EncKeySchedule 02A4  
                               __size_of_RADIO_ReadRandom 00A4  
                                          __size_of_srand 000E  
                                   ?_RADIO_SetFSKSyncWord 006B  
                                    _INTERRUPT_Initialize 3876  
                                           _SwTimerCreate 29A2  
                          __end_of_InitDefault868Channels 2B42  
                                           _TMR1_CallBack 364A  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR 3866  
                                _LORAWAN_SetDeviceAddress 3712  
                                                _INT2_ISR 385E  
                                       EncKeySchedule@key 0060  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 3838  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 006D  
                               ?_INT1_SetInterruptHandler 0060  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F6  
                                                _PIE1bits 000F9D  
                                         _HALDIO5PinValue 37C8  
                               __end_of_SwTimersInterrupt 1F84  
                                __size_of_TMR1_WriteTimer 0020  
                     __size_of_INTERRUPT_InterruptManager 0076  
                              __end_of_DIO2_ISR_Lora_Init 3770  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0093  
                                        GenerateSubkey@k2 0095  
                                                i2u525_48 36B0  
                                                i2u527_48 3692  
                                                i2u529_48 3674  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                           __end_of_RADIO_WriteFSKBitRate 2D8E  
                                    ConfigureRadioTx@freq 0073  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 0076  
                                               _rxPayload 00E0  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 2182  
                                                _SSP2CON1 000F6C  
                                                _TMR1_ISR 372A  
                                ConfigureRadioTx@dataRate 0077  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 009C  
                                       ??_PIN_MANAGER_IOC 0001  
                                       ??_TMR1_Initialize 0062  
                                      _DIO1_ISR_Lora_Init 3770  
                                        __size_of_AESCmac 03AA  
                                       ?_ConfigureRadioTx 0073  
                                      AESEncodeLoRa@block 007D  
                                                _Channels 0400  
                 RADIO_SetSpreadingFactor@spreadingFactor 0060  
                                      ??_ConfigureRadioTx 0077  
                                    ??_RADIO_SetBandwidth 0060  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0060  
                                        ?_RADIO_WriteMode 0065  
                                       ___lmul@multiplier 0060  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 254E  
                                               copy_data1 256E  
                                               copy_data2 258E  
                                   ?_INTERRUPT_Initialize 0001  
                             __end_of_RADIO_SetIQInverted 3810  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 2FD8  
                                             _RADIO_Reset 31D0  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 3516  
                                 ??_StopAllSoftwareTimers 0061  
                             __end_ofi2_SwTimersInterrupt 2084  
                                             AESCmac@flag 0162  
                                             AESCmac@size 00BF  
                                SwTimerSetTimeout@timerId 0068  
                                SwTimerSetTimeout@timeout 0060  
                                   RADIO_WriteMode@opMode 006B  
                     __size_of_LORAWAN_LinkCheckConfigure 015E  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 3434  
                                       i2_TMR1_WriteTimer 36C2  
                                               memcpy@tmp 006A  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0062  
                                    ??_DIO1_ISR_Lora_Init 0062  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0064  
                               _ticksToScheduledInterrupt 00FC  
                                       __CFG_P2BMX$PORTD2 000000  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                 ??_OSCILLATOR_Initialize 0060  
                                   __size_of_SwTimerStart 0096  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                        __size_of___lwmod 0044  
                                _TMR1_SetInterruptHandler 37D4  
                                  _IOCB4_InterruptHandler 004C  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
                                   _TMR1_InterruptHandler 0048  
                                        ??_GenerateSubkey 0097  
                                              _HALSPISend 37BA  
                                          _rxWindowOffset FF6F  
                                    ??_RADIO_RegisterRead 0062  
                                    RADIO_Transmit@buffer 009A  
                                         _allocatedTimers 00FA  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 3896  
                                                __ptext10 3896  
                                                __ptext11 3898  
                                                __ptext20 37F2  
                                                __ptext12 389A  
                                                __ptext21 3464  
                                                __ptext13 3760  
                                              _T1GCONbits 000FCC  
                                                __ptext30 3806  
                                                __ptext22 3712  
                                                __ptext14 37DE  
                                                __ptext31 3810  
                                                __ptext23 3492  
                                                __ptext15 3770  
                                                __ptext40 0086  
                                                __ptext32 25F4  
                                                __ptext24 269C  
                                                __ptext16 3780  
                                                __ptext41 227C  
                                                __ptext33 381A  
                                                __ptext25 36DE  
                                                __ptext17 3876  
                                                __ptext50 1C0C  
                                                __ptext42 2CBC  
                                                __ptext34 3824  
                                                __ptext26 2C50  
                                                __ptext18 34EC  
                                                __ptext51 2E58  
                                                __ptext43 2D26  
                                                __ptext35 382E  
                                                __ptext27 1D58  
                                                __ptext19 37E8  
                                                __ptext60 114E  
                                                __ptext52 336A  
                                                __ptext44 14E6  
                                                __ptext36 33D4  
                                                __ptext28 30DA  
                                                __ptext61 2182  
                                                __ptext53 0930  
                                                __ptext45 3588  
                                                __ptext37 2A2E  
                                                __ptext29 37FC  
                                                __ptext70 2D8E  
                                                __ptext62 312C  
                                                __ptext54 194A  
                                                __ptext46 3030  
                                                __ptext38 3838  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 35CC  
                                                __ptext63 3842  
                                                __ptext55 0C72  
                                                __ptext47 3216  
                                                __ptext39 0F16  
                                                __ptext80 3886  
                                                __ptext72 37BA  
                                                __ptext64 131C  
                                                __ptext56 2EBA  
                                                __ptext48 2DF6  
                                                __ptext81 1AAE  
                                                __ptext73 373E  
                                                __ptext65 325A  
                                                __ptext57 37AC  
                                                __ptext49 0586  
                                                __ptext90 1676  
                                                __ptext82 2FD8  
                                                __ptext74 387A  
                                                __ptext66 2084  
                                                __ptext58 245C  
                                                __ptext91 35AA  
                                                __ptext83 2BCC  
                                                __ptext75 387E  
                                                __ptext67 3516  
                                                __ptext59 2740  
                                                __ptext92 32E2  
                                                __ptext84 353E  
                                                __ptext76 31D0  
                                                __ptext68 37C8  
                                                __ptext93 2AB8  
                                                __ptext85 27E4  
                                                __ptext77 3404  
                                                __ptext69 236C  
                                                __ptext94 2B42  
                                                __ptext86 287A  
                                                __ptext78 36F8  
                                                __ptext95 3434  
                                                __ptext87 329E  
                                                __ptext79 3882  
                                                __ptext96 2F1C  
                                                __ptext88 35EC  
                                                __ptext97 317E  
                                                __ptext89 1E82  
                                                __ptext98 29A2  
                                  ??_RADIO_SetFSKSyncWord 006D  
                                   __end_of_LORAWAN_Reset 131C  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F7103 01AC  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00F0  
                                 __end_of_HALDIO5PinValue 37D4  
                                  ConfigureRadio@dataRate 0072  
                        __size_of_PrepareJoinRequestFrame 0190  
                                  ??_RADIO_WriteFrequency 0071  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 0092  
                                           __size_of_rand 0056  
                                    _LORAWAN_PlatformInit 3566  
                                         _FskSyncWordBuff FFFC  
                               __end_ofi2_TMR1_WriteTimer 36DE  
                                           _timerOverflow 00FB  
                                            _SwTimerStart 27E4  
                              __size_of_SwTimersInterrupt 0102  
                              ??_RADIO_SetSpreadingFactor 0060  
                             __size_of_DIO0_ISR_Lora_Init 0010  
                                         GenerateSubkey@i 00B8  
                                         GenerateSubkey@l 00A8  
                                __end_of_TMR_GetDeltaTime 17E0  
                                      SwTimerStop@timerId 0060  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0062  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006B  
                      __end_of_INTERRUPT_InterruptManager 007E  
                              _INTERRUPT_InterruptManager 0008  
                                       ??_TMR1_WriteTimer 0062  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0060  
                    __end_of_INT1_DefaultInterruptHandler 38A4  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 38A2  
                       __size_of_RADIO_WriteConfiguration 0500  
                                  __end_of_rxWindowOffset FF77  
                             i2TMR1_ReadTimer@readValHigh 0007  
                               ?_RADIO_WriteConfiguration 0079  
                                      __end_of_modulation FF6F  
                                              _RADIO_Init 131C  
                                           __roundCounter 00F9  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0078  
                                __end_of_HALSPICSDeassert 387E  
                                                memcpy@d1 0060  
                                                memcpy@s1 0062  
                                          _EncKeySchedule 0C72  
                      __size_of_SetCallbackSoftwareTimers 00DE  
                                         ??_SwTimerCreate 0060  
                                  ??_INTERRUPT_Initialize 0060  
                                                memset@p1 0060  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 2740  
                                      _EXT_INT_Initialize 34EC  
                                   _TMR_OverrideRemaining 287A  
                                                intlevel2 0000  
                     SwTimerSetCallback@callbackParameter 0062  
                                             FillSubKey@i 0067  
                           RADIO_WriteFrequency@frequency 006D  
                                        ___lwmod@dividend 006E  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0060  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                  GenerateSubkey@const_Rb 0098  
                               UpdateJoinInProgress@state 0060  
                      __end_of_LORAWAN_LinkCheckConfigure 1C0C  
                              _LORAWAN_LinkCheckConfigure 1AAE  
                                      __end_of_txPower433 FFA2  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 3882  
                                ??_HALResetPinOutputValue 0060  
                                  __size_of_INT1_CallBack 001E  
                               RADIO_WriteConfiguration@i 007E  
                                        AESEncodeLoRa@key 007F  
                        LORAWAN_LinkCheckConfigure@period 009A  
                                        ??_ConfigureRadio 0072  
                                      _SwTimerSetCallback 325A  
                                       RADIO_ReadRandom@i 0071  
                            SearchAvailableChannel@result 007D  
                                   RADIO_WritePower@paDac 0065  
                                  __size_of_INT2_CallBack 001E  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                   __end_of_DIO0_ISR_Lora 3896  
                                   RADIO_WritePower@power 0066  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0067  
                                    ??_EXT_INT_Initialize 0062  
                            RADIO_SetFSKSyncWord@syncWord 006B  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule 0F16  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 3892  
                                     ?_SwTimerSetCallback 0060  
                                        ___lldiv@quotient 0068  
                                             ?_HALSPISend 0001  
                                         ___lwmod@divisor 0070  
                                         ___lwmod@counter 0072  
                         _LORAWAN_LinkCheckConfigure$2491 00A0  
                        __end_of_INT1_SetInterruptHandler 37FC  
                           LORAWAN_Join@activationTypeNew 00DD  
                                   __size_of_TMR_ISR_lora 005C  
                              ??_LORAWAN_SetDeviceAddress 0064  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 388E  
                                    _SystemBlockingWaitMs 3404  
                            __end_of_UpdateJoinInProgress 36F8  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 2D26  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                      ??_RADIO_WriteFSKFrequencyDeviation 0071  
                       ?_RADIO_WriteFSKFrequencyDeviation 006D  
                        _RADIO_WriteFSKFrequencyDeviation 2CBC  
                __end_of_LORAWAN_SetApplicationSessionKey 34C0  
               __size_of_LORAWAN_SetApplicationSessionKey 002E  
                      ??_LORAWAN_SetApplicationSessionKey 006D  
                       ?_LORAWAN_SetApplicationSessionKey 006B  
                        _LORAWAN_SetApplicationSessionKey 3492  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 30DA  
                             __end_of_RADIO_RegisterWrite 35EC  
                            RADIO_WriteFSKBitRate@bitRate 006D  
                                      i2_TMR_GetDeltaTime 17E0  
                                         RADIO_SetCRC@crc 0060  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 384C  
                                     RADIO_WritePower@ocp 0064  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0063  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 34C0  
                        RADIO_WriteConfiguration@regValue 0083  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0166  
                             __end_of_RADIO_SetModulation 382E  
                           __size_of_HALResetPinMakeInput 0004  
                                     ?i2_TMR_GetDeltaTime 0009  
